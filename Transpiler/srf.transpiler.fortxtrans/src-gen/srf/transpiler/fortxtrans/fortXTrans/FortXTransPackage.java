/**
 * generated by Xtext 2.13.0-SNAPSHOT
 */
package srf.transpiler.fortxtrans.fortXTrans;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

/**
 * <!-- begin-user-doc -->
 * The <b>Package</b> for the model.
 * It contains accessors for the meta objects to represent
 * <ul>
 *   <li>each class,</li>
 *   <li>each feature of each class,</li>
 *   <li>each enum,</li>
 *   <li>and each data type</li>
 * </ul>
 * <!-- end-user-doc -->
 * @see srf.transpiler.fortxtrans.fortXTrans.FortXTransFactory
 * @model kind="package"
 * @generated
 */
public interface FortXTransPackage extends EPackage
{
  /**
   * The package name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNAME = "fortXTrans";

  /**
   * The package namespace URI.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_URI = "http://www.transpiler.srf/fortxtrans/FortXTrans";

  /**
   * The package namespace name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_PREFIX = "fortXTrans";

  /**
   * The singleton instance of the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  FortXTransPackage eINSTANCE = srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl.init();

  /**
   * The meta object id for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.ModelImpl <em>Model</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.ModelImpl
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getModel()
   * @generated
   */
  int MODEL = 0;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MODEL__NAME = 0;

  /**
   * The feature id for the '<em><b>Imports</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MODEL__IMPORTS = 1;

  /**
   * The number of structural features of the '<em>Model</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MODEL_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.ComponentImpl <em>Component</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.ComponentImpl
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getComponent()
   * @generated
   */
  int COMPONENT = 1;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMPONENT__NAME = MODEL__NAME;

  /**
   * The feature id for the '<em><b>Imports</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMPONENT__IMPORTS = MODEL__IMPORTS;

  /**
   * The feature id for the '<em><b>Exports</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMPONENT__EXPORTS = MODEL_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Decls</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMPONENT__DECLS = MODEL_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Component</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMPONENT_FEATURE_COUNT = MODEL_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.APIImpl <em>API</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.APIImpl
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getAPI()
   * @generated
   */
  int API = 2;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int API__NAME = MODEL__NAME;

  /**
   * The feature id for the '<em><b>Imports</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int API__IMPORTS = MODEL__IMPORTS;

  /**
   * The number of structural features of the '<em>API</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int API_FEATURE_COUNT = MODEL_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.ImportImpl <em>Import</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.ImportImpl
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getImport()
   * @generated
   */
  int IMPORT = 3;

  /**
   * The feature id for the '<em><b>Imps</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IMPORT__IMPS = 0;

  /**
   * The feature id for the '<em><b>Imported Names</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IMPORT__IMPORTED_NAMES = 1;

  /**
   * The feature id for the '<em><b>Api</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IMPORT__API = 2;

  /**
   * The feature id for the '<em><b>Aliasedimported Names</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IMPORT__ALIASEDIMPORTED_NAMES = 3;

  /**
   * The number of structural features of the '<em>Import</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IMPORT_FEATURE_COUNT = 4;

  /**
   * The meta object id for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.ExportImpl <em>Export</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.ExportImpl
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getExport()
   * @generated
   */
  int EXPORT = 4;

  /**
   * The feature id for the '<em><b>Exp</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPORT__EXP = 0;

  /**
   * The feature id for the '<em><b>Exported Name</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPORT__EXPORTED_NAME = 1;

  /**
   * The feature id for the '<em><b>Brack</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPORT__BRACK = 2;

  /**
   * The number of structural features of the '<em>Export</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPORT_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.ImportedNamesImpl <em>Imported Names</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.ImportedNamesImpl
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getImportedNames()
   * @generated
   */
  int IMPORTED_NAMES = 5;

  /**
   * The feature id for the '<em><b>Impname</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IMPORTED_NAMES__IMPNAME = 0;

  /**
   * The feature id for the '<em><b>Except</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IMPORTED_NAMES__EXCEPT = 1;

  /**
   * The feature id for the '<em><b>Simp</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IMPORTED_NAMES__SIMP = 2;

  /**
   * The feature id for the '<em><b>Simp List</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IMPORTED_NAMES__SIMP_LIST = 3;

  /**
   * The feature id for the '<em><b>Comma</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IMPORTED_NAMES__COMMA = 4;

  /**
   * The feature id for the '<em><b>Dots</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IMPORTED_NAMES__DOTS = 5;

  /**
   * The feature id for the '<em><b>Asname</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IMPORTED_NAMES__ASNAME = 6;

  /**
   * The number of structural features of the '<em>Imported Names</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IMPORTED_NAMES_FEATURE_COUNT = 7;

  /**
   * The meta object id for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.GenSourceImpl <em>Gen Source</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.GenSourceImpl
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getGenSource()
   * @generated
   */
  int GEN_SOURCE = 35;

  /**
   * The feature id for the '<em><b>Start</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int GEN_SOURCE__START = 0;

  /**
   * The feature id for the '<em><b>End</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int GEN_SOURCE__END = 1;

  /**
   * The number of structural features of the '<em>Gen Source</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int GEN_SOURCE_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.ExprImpl <em>Expr</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.ExprImpl
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getExpr()
   * @generated
   */
  int EXPR = 26;

  /**
   * The feature id for the '<em><b>Start</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPR__START = GEN_SOURCE__START;

  /**
   * The feature id for the '<em><b>End</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPR__END = GEN_SOURCE__END;

  /**
   * The feature id for the '<em><b>Tail</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPR__TAIL = GEN_SOURCE_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Expr</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPR_FEATURE_COUNT = GEN_SOURCE_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.LiteralTupleImpl <em>Literal Tuple</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.LiteralTupleImpl
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getLiteralTuple()
   * @generated
   */
  int LITERAL_TUPLE = 45;

  /**
   * The feature id for the '<em><b>Start</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LITERAL_TUPLE__START = EXPR__START;

  /**
   * The feature id for the '<em><b>End</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LITERAL_TUPLE__END = EXPR__END;

  /**
   * The feature id for the '<em><b>Tail</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LITERAL_TUPLE__TAIL = EXPR__TAIL;

  /**
   * The number of structural features of the '<em>Literal Tuple</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LITERAL_TUPLE_FEATURE_COUNT = EXPR_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.QualifiedImpl <em>Qualified</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.QualifiedImpl
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getQualified()
   * @generated
   */
  int QUALIFIED = 7;

  /**
   * The feature id for the '<em><b>Start</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int QUALIFIED__START = LITERAL_TUPLE__START;

  /**
   * The feature id for the '<em><b>End</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int QUALIFIED__END = LITERAL_TUPLE__END;

  /**
   * The feature id for the '<em><b>Tail</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int QUALIFIED__TAIL = LITERAL_TUPLE__TAIL;

  /**
   * The number of structural features of the '<em>Qualified</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int QUALIFIED_FEATURE_COUNT = LITERAL_TUPLE_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.QualifiedNameImpl <em>Qualified Name</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.QualifiedNameImpl
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getQualifiedName()
   * @generated
   */
  int QUALIFIED_NAME = 6;

  /**
   * The feature id for the '<em><b>Start</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int QUALIFIED_NAME__START = QUALIFIED__START;

  /**
   * The feature id for the '<em><b>End</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int QUALIFIED_NAME__END = QUALIFIED__END;

  /**
   * The feature id for the '<em><b>Tail</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int QUALIFIED_NAME__TAIL = QUALIFIED__TAIL;

  /**
   * The feature id for the '<em><b>S</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int QUALIFIED_NAME__S = QUALIFIED_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Dots</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int QUALIFIED_NAME__DOTS = QUALIFIED_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Qualified Name</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int QUALIFIED_NAME_FEATURE_COUNT = QUALIFIED_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.QualifiedNameTupleImpl <em>Qualified Name Tuple</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.QualifiedNameTupleImpl
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getQualifiedNameTuple()
   * @generated
   */
  int QUALIFIED_NAME_TUPLE = 8;

  /**
   * The feature id for the '<em><b>Start</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int QUALIFIED_NAME_TUPLE__START = QUALIFIED__START;

  /**
   * The feature id for the '<em><b>End</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int QUALIFIED_NAME_TUPLE__END = QUALIFIED__END;

  /**
   * The feature id for the '<em><b>Tail</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int QUALIFIED_NAME_TUPLE__TAIL = QUALIFIED__TAIL;

  /**
   * The feature id for the '<em><b>Qlist</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int QUALIFIED_NAME_TUPLE__QLIST = QUALIFIED_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Qualified Name Tuple</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int QUALIFIED_NAME_TUPLE_FEATURE_COUNT = QUALIFIED_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.SimpleNamesImpl <em>Simple Names</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.SimpleNamesImpl
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getSimpleNames()
   * @generated
   */
  int SIMPLE_NAMES = 9;

  /**
   * The feature id for the '<em><b>Name List</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SIMPLE_NAMES__NAME_LIST = 0;

  /**
   * The feature id for the '<em><b>Brack</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SIMPLE_NAMES__BRACK = 1;

  /**
   * The number of structural features of the '<em>Simple Names</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SIMPLE_NAMES_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.SimpleNameImpl <em>Simple Name</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.SimpleNameImpl
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getSimpleName()
   * @generated
   */
  int SIMPLE_NAME = 10;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SIMPLE_NAME__NAME = 0;

  /**
   * The number of structural features of the '<em>Simple Name</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SIMPLE_NAME_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.AliasedSimpleNameImpl <em>Aliased Simple Name</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.AliasedSimpleNameImpl
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getAliasedSimpleName()
   * @generated
   */
  int ALIASED_SIMPLE_NAME = 11;

  /**
   * The feature id for the '<em><b>Orig</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ALIASED_SIMPLE_NAME__ORIG = 0;

  /**
   * The feature id for the '<em><b>As Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ALIASED_SIMPLE_NAME__AS_NAME = 1;

  /**
   * The number of structural features of the '<em>Aliased Simple Name</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ALIASED_SIMPLE_NAME_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.AliasedAPINamesImpl <em>Aliased API Names</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.AliasedAPINamesImpl
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getAliasedAPINames()
   * @generated
   */
  int ALIASED_API_NAMES = 12;

  /**
   * The feature id for the '<em><b>Name List</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ALIASED_API_NAMES__NAME_LIST = 0;

  /**
   * The feature id for the '<em><b>Brack</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ALIASED_API_NAMES__BRACK = 1;

  /**
   * The number of structural features of the '<em>Aliased API Names</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ALIASED_API_NAMES_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.AliasedAPINameImpl <em>Aliased API Name</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.AliasedAPINameImpl
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getAliasedAPIName()
   * @generated
   */
  int ALIASED_API_NAME = 13;

  /**
   * The feature id for the '<em><b>Orig</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ALIASED_API_NAME__ORIG = 0;

  /**
   * The feature id for the '<em><b>As Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ALIASED_API_NAME__AS_NAME = 1;

  /**
   * The number of structural features of the '<em>Aliased API Name</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ALIASED_API_NAME_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.DeclsImpl <em>Decls</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.DeclsImpl
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getDecls()
   * @generated
   */
  int DECLS = 14;

  /**
   * The feature id for the '<em><b>Decls</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DECLS__DECLS = 0;

  /**
   * The number of structural features of the '<em>Decls</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DECLS_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.DeclImpl <em>Decl</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.DeclImpl
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getDecl()
   * @generated
   */
  int DECL = 15;

  /**
   * The feature id for the '<em><b>Function</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DECL__FUNCTION = 0;

  /**
   * The feature id for the '<em><b>Field</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DECL__FIELD = 1;

  /**
   * The number of structural features of the '<em>Decl</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DECL_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.ValParamImpl <em>Val Param</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.ValParamImpl
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getValParam()
   * @generated
   */
  int VAL_PARAM = 16;

  /**
   * The feature id for the '<em><b>Params</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VAL_PARAM__PARAMS = 0;

  /**
   * The feature id for the '<em><b>Brack</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VAL_PARAM__BRACK = 1;

  /**
   * The number of structural features of the '<em>Val Param</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VAL_PARAM_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.ParamImpl <em>Param</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.ParamImpl
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getParam()
   * @generated
   */
  int PARAM = 17;

  /**
   * The feature id for the '<em><b>Par Id</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PARAM__PAR_ID = 0;

  /**
   * The feature id for the '<em><b>Istype</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PARAM__ISTYPE = 1;

  /**
   * The number of structural features of the '<em>Param</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PARAM_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.RetTypeImpl <em>Ret Type</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.RetTypeImpl
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getRetType()
   * @generated
   */
  int RET_TYPE = 18;

  /**
   * The feature id for the '<em><b>Empty</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RET_TYPE__EMPTY = 0;

  /**
   * The feature id for the '<em><b>Type</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RET_TYPE__TYPE = 1;

  /**
   * The number of structural features of the '<em>Ret Type</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RET_TYPE_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.TupleTypeImpl <em>Tuple Type</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.TupleTypeImpl
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getTupleType()
   * @generated
   */
  int TUPLE_TYPE = 19;

  /**
   * The feature id for the '<em><b>Types</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TUPLE_TYPE__TYPES = 0;

  /**
   * The number of structural features of the '<em>Tuple Type</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TUPLE_TYPE_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.FnModsImpl <em>Fn Mods</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.FnModsImpl
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getFnMods()
   * @generated
   */
  int FN_MODS = 20;

  /**
   * The feature id for the '<em><b>Mods</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FN_MODS__MODS = 0;

  /**
   * The number of structural features of the '<em>Fn Mods</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FN_MODS_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.FnModImpl <em>Fn Mod</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.FnModImpl
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getFnMod()
   * @generated
   */
  int FN_MOD = 21;

  /**
   * The feature id for the '<em><b>Modtype</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FN_MOD__MODTYPE = 0;

  /**
   * The number of structural features of the '<em>Fn Mod</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FN_MOD_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.FnDeclImpl <em>Fn Decl</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.FnDeclImpl
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getFnDecl()
   * @generated
   */
  int FN_DECL = 22;

  /**
   * The feature id for the '<em><b>Mods</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FN_DECL__MODS = 0;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FN_DECL__NAME = 1;

  /**
   * The feature id for the '<em><b>Params</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FN_DECL__PARAMS = 2;

  /**
   * The feature id for the '<em><b>Ret Val</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FN_DECL__RET_VAL = 3;

  /**
   * The feature id for the '<em><b>Body</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FN_DECL__BODY = 4;

  /**
   * The feature id for the '<em><b>Fn Itself</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FN_DECL__FN_ITSELF = 5;

  /**
   * The number of structural features of the '<em>Fn Decl</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FN_DECL_FEATURE_COUNT = 6;

  /**
   * The meta object id for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.StmntsImpl <em>Stmnts</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.StmntsImpl
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getStmnts()
   * @generated
   */
  int STMNTS = 23;

  /**
   * The feature id for the '<em><b>Front</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STMNTS__FRONT = 0;

  /**
   * The feature id for the '<em><b>Delims</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STMNTS__DELIMS = 1;

  /**
   * The feature id for the '<em><b>Loc Var</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STMNTS__LOC_VAR = 2;

  /**
   * The feature id for the '<em><b>Exp</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STMNTS__EXP = 3;

  /**
   * The number of structural features of the '<em>Stmnts</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STMNTS_FEATURE_COUNT = 4;

  /**
   * The meta object id for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.StmntImpl <em>Stmnt</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.StmntImpl
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getStmnt()
   * @generated
   */
  int STMNT = 24;

  /**
   * The feature id for the '<em><b>Delim</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STMNT__DELIM = 0;

  /**
   * The number of structural features of the '<em>Stmnt</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STMNT_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.StmntListImpl <em>Stmnt List</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.StmntListImpl
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getStmntList()
   * @generated
   */
  int STMNT_LIST = 25;

  /**
   * The feature id for the '<em><b>Delim</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STMNT_LIST__DELIM = 0;

  /**
   * The number of structural features of the '<em>Stmnt List</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STMNT_LIST_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.ExprListImpl <em>Expr List</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.ExprListImpl
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getExprList()
   * @generated
   */
  int EXPR_LIST = 27;

  /**
   * The feature id for the '<em><b>Exps</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPR_LIST__EXPS = 0;

  /**
   * The feature id for the '<em><b>Exp</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPR_LIST__EXP = 1;

  /**
   * The number of structural features of the '<em>Expr List</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPR_LIST_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.ExprTailImpl <em>Expr Tail</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.ExprTailImpl
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getExprTail()
   * @generated
   */
  int EXPR_TAIL = 28;

  /**
   * The feature id for the '<em><b>Type</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPR_TAIL__TYPE = 0;

  /**
   * The number of structural features of the '<em>Expr Tail</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPR_TAIL_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.DelimitedExprImpl <em>Delimited Expr</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.DelimitedExprImpl
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getDelimitedExpr()
   * @generated
   */
  int DELIMITED_EXPR = 29;

  /**
   * The feature id for the '<em><b>Dod</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DELIMITED_EXPR__DOD = 0;

  /**
   * The feature id for the '<em><b>Ret</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DELIMITED_EXPR__RET = 1;

  /**
   * The feature id for the '<em><b>Block</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DELIMITED_EXPR__BLOCK = 2;

  /**
   * The feature id for the '<em><b>Awhile</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DELIMITED_EXPR__AWHILE = 3;

  /**
   * The feature id for the '<em><b>Expr</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DELIMITED_EXPR__EXPR = 4;

  /**
   * The feature id for the '<em><b>Whiledod</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DELIMITED_EXPR__WHILEDOD = 5;

  /**
   * The feature id for the '<em><b>Afor</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DELIMITED_EXPR__AFOR = 6;

  /**
   * The feature id for the '<em><b>Gen</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DELIMITED_EXPR__GEN = 7;

  /**
   * The feature id for the '<em><b>Dofront</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DELIMITED_EXPR__DOFRONT = 8;

  /**
   * The feature id for the '<em><b>Anif</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DELIMITED_EXPR__ANIF = 9;

  /**
   * The feature id for the '<em><b>Cond</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DELIMITED_EXPR__COND = 10;

  /**
   * The feature id for the '<em><b>Blocks</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DELIMITED_EXPR__BLOCKS = 11;

  /**
   * The feature id for the '<em><b>Elifs</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DELIMITED_EXPR__ELIFS = 12;

  /**
   * The feature id for the '<em><b>Els</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DELIMITED_EXPR__ELS = 13;

  /**
   * The number of structural features of the '<em>Delimited Expr</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DELIMITED_EXPR_FEATURE_COUNT = 14;

  /**
   * The meta object id for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.ElifsImpl <em>Elifs</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.ElifsImpl
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getElifs()
   * @generated
   */
  int ELIFS = 30;

  /**
   * The feature id for the '<em><b>E</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ELIFS__E = 0;

  /**
   * The number of structural features of the '<em>Elifs</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ELIFS_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.ElifImpl <em>Elif</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.ElifImpl
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getElif()
   * @generated
   */
  int ELIF = 31;

  /**
   * The feature id for the '<em><b>Expr</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ELIF__EXPR = 0;

  /**
   * The feature id for the '<em><b>Block</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ELIF__BLOCK = 1;

  /**
   * The number of structural features of the '<em>Elif</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ELIF_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.ElseImpl <em>Else</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.ElseImpl
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getElse()
   * @generated
   */
  int ELSE = 32;

  /**
   * The feature id for the '<em><b>Block</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ELSE__BLOCK = 0;

  /**
   * The number of structural features of the '<em>Else</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ELSE_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.GeneratorsImpl <em>Generators</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.GeneratorsImpl
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getGenerators()
   * @generated
   */
  int GENERATORS = 33;

  /**
   * The feature id for the '<em><b>Binding</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int GENERATORS__BINDING = 0;

  /**
   * The feature id for the '<em><b>Clause</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int GENERATORS__CLAUSE = 1;

  /**
   * The number of structural features of the '<em>Generators</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int GENERATORS_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.BindingImpl <em>Binding</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.BindingImpl
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getBinding()
   * @generated
   */
  int BINDING = 34;

  /**
   * The feature id for the '<em><b>Idtup</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BINDING__IDTUP = 0;

  /**
   * The feature id for the '<em><b>G</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BINDING__G = 1;

  /**
   * The feature id for the '<em><b>Seq</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BINDING__SEQ = 2;

  /**
   * The number of structural features of the '<em>Binding</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BINDING_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.GenClauseImpl <em>Gen Clause</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.GenClauseImpl
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getGenClause()
   * @generated
   */
  int GEN_CLAUSE = 36;

  /**
   * The feature id for the '<em><b>Binding</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int GEN_CLAUSE__BINDING = 0;

  /**
   * The feature id for the '<em><b>Expr</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int GEN_CLAUSE__EXPR = 1;

  /**
   * The number of structural features of the '<em>Gen Clause</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int GEN_CLAUSE_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.BlockElemsImpl <em>Block Elems</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.BlockElemsImpl
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getBlockElems()
   * @generated
   */
  int BLOCK_ELEMS = 37;

  /**
   * The feature id for the '<em><b>Block</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BLOCK_ELEMS__BLOCK = 0;

  /**
   * The number of structural features of the '<em>Block Elems</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BLOCK_ELEMS_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.BlockElemImpl <em>Block Elem</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.BlockElemImpl
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getBlockElem()
   * @generated
   */
  int BLOCK_ELEM = 38;

  /**
   * The feature id for the '<em><b>St</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BLOCK_ELEM__ST = 0;

  /**
   * The number of structural features of the '<em>Block Elem</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BLOCK_ELEM_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.DoImpl <em>Do</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.DoImpl
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getDo()
   * @generated
   */
  int DO = 39;

  /**
   * The feature id for the '<em><b>Dofs</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DO__DOFS = 0;

  /**
   * The number of structural features of the '<em>Do</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DO_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.DoFrontImpl <em>Do Front</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.DoFrontImpl
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getDoFront()
   * @generated
   */
  int DO_FRONT = 40;

  /**
   * The feature id for the '<em><b>At</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DO_FRONT__AT = 0;

  /**
   * The feature id for the '<em><b>Exp</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DO_FRONT__EXP = 1;

  /**
   * The feature id for the '<em><b>Atom</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DO_FRONT__ATOM = 2;

  /**
   * The feature id for the '<em><b>Block</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DO_FRONT__BLOCK = 3;

  /**
   * The number of structural features of the '<em>Do Front</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DO_FRONT_FEATURE_COUNT = 4;

  /**
   * The meta object id for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.IsTypeImpl <em>Is Type</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.IsTypeImpl
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getIsType()
   * @generated
   */
  int IS_TYPE = 41;

  /**
   * The feature id for the '<em><b>Type</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IS_TYPE__TYPE = 0;

  /**
   * The number of structural features of the '<em>Is Type</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IS_TYPE_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.FieldDeclImpl <em>Field Decl</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.FieldDeclImpl
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getFieldDecl()
   * @generated
   */
  int FIELD_DECL = 42;

  /**
   * The feature id for the '<em><b>Pri</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FIELD_DECL__PRI = 0;

  /**
   * The feature id for the '<em><b>Mut</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FIELD_DECL__MUT = 1;

  /**
   * The feature id for the '<em><b>Vars</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FIELD_DECL__VARS = 2;

  /**
   * The feature id for the '<em><b>Init</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FIELD_DECL__INIT = 3;

  /**
   * The feature id for the '<em><b>Idtup</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FIELD_DECL__IDTUP = 4;

  /**
   * The feature id for the '<em><b>Type</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FIELD_DECL__TYPE = 5;

  /**
   * The feature id for the '<em><b>Tuptype</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FIELD_DECL__TUPTYPE = 6;

  /**
   * The number of structural features of the '<em>Field Decl</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FIELD_DECL_FEATURE_COUNT = 7;

  /**
   * The meta object id for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.NoNewlineVarWTypesImpl <em>No Newline Var WTypes</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.NoNewlineVarWTypesImpl
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getNoNewlineVarWTypes()
   * @generated
   */
  int NO_NEWLINE_VAR_WTYPES = 43;

  /**
   * The feature id for the '<em><b>Single</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NO_NEWLINE_VAR_WTYPES__SINGLE = 0;

  /**
   * The feature id for the '<em><b>Arrsize</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NO_NEWLINE_VAR_WTYPES__ARRSIZE = 1;

  /**
   * The feature id for the '<em><b>Multiple</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NO_NEWLINE_VAR_WTYPES__MULTIPLE = 2;

  /**
   * The number of structural features of the '<em>No Newline Var WTypes</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NO_NEWLINE_VAR_WTYPES_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.NoNewlineVarWTypeImpl <em>No Newline Var WType</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.NoNewlineVarWTypeImpl
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getNoNewlineVarWType()
   * @generated
   */
  int NO_NEWLINE_VAR_WTYPE = 44;

  /**
   * The feature id for the '<em><b>Bid</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NO_NEWLINE_VAR_WTYPE__BID = 0;

  /**
   * The feature id for the '<em><b>Istype</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NO_NEWLINE_VAR_WTYPE__ISTYPE = 1;

  /**
   * The number of structural features of the '<em>No Newline Var WType</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NO_NEWLINE_VAR_WTYPE_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.LiteralTupImpl <em>Literal Tup</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.LiteralTupImpl
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getLiteralTup()
   * @generated
   */
  int LITERAL_TUP = 46;

  /**
   * The feature id for the '<em><b>Start</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LITERAL_TUP__START = LITERAL_TUPLE__START;

  /**
   * The feature id for the '<em><b>End</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LITERAL_TUP__END = LITERAL_TUPLE__END;

  /**
   * The feature id for the '<em><b>Tail</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LITERAL_TUP__TAIL = LITERAL_TUPLE__TAIL;

  /**
   * The number of structural features of the '<em>Literal Tup</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LITERAL_TUP_FEATURE_COUNT = LITERAL_TUPLE_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.LiteralListImpl <em>Literal List</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.LiteralListImpl
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getLiteralList()
   * @generated
   */
  int LITERAL_LIST = 47;

  /**
   * The feature id for the '<em><b>Start</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LITERAL_LIST__START = LITERAL_TUP__START;

  /**
   * The feature id for the '<em><b>End</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LITERAL_LIST__END = LITERAL_TUP__END;

  /**
   * The feature id for the '<em><b>Tail</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LITERAL_LIST__TAIL = LITERAL_TUP__TAIL;

  /**
   * The feature id for the '<em><b>Lit</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LITERAL_LIST__LIT = LITERAL_TUP_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Literal List</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LITERAL_LIST_FEATURE_COUNT = LITERAL_TUP_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.LiteralImpl <em>Literal</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.LiteralImpl
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getLiteral()
   * @generated
   */
  int LITERAL = 48;

  /**
   * The feature id for the '<em><b>Start</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LITERAL__START = LITERAL_TUP__START;

  /**
   * The feature id for the '<em><b>End</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LITERAL__END = LITERAL_TUP__END;

  /**
   * The feature id for the '<em><b>Tail</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LITERAL__TAIL = LITERAL_TUP__TAIL;

  /**
   * The number of structural features of the '<em>Literal</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LITERAL_FEATURE_COUNT = LITERAL_TUP_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.LocalVarDeclImpl <em>Local Var Decl</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.LocalVarDeclImpl
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getLocalVarDecl()
   * @generated
   */
  int LOCAL_VAR_DECL = 49;

  /**
   * The feature id for the '<em><b>Mut</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOCAL_VAR_DECL__MUT = 0;

  /**
   * The feature id for the '<em><b>Vars</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOCAL_VAR_DECL__VARS = 1;

  /**
   * The feature id for the '<em><b>Init</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOCAL_VAR_DECL__INIT = 2;

  /**
   * The feature id for the '<em><b>Idtup</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOCAL_VAR_DECL__IDTUP = 3;

  /**
   * The feature id for the '<em><b>Type</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOCAL_VAR_DECL__TYPE = 4;

  /**
   * The feature id for the '<em><b>Tuptype</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOCAL_VAR_DECL__TUPTYPE = 5;

  /**
   * The number of structural features of the '<em>Local Var Decl</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOCAL_VAR_DECL_FEATURE_COUNT = 6;

  /**
   * The meta object id for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.OrImpl <em>Or</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.OrImpl
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getOr()
   * @generated
   */
  int OR = 50;

  /**
   * The feature id for the '<em><b>Start</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OR__START = EXPR__START;

  /**
   * The feature id for the '<em><b>End</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OR__END = EXPR__END;

  /**
   * The feature id for the '<em><b>Tail</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OR__TAIL = EXPR__TAIL;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OR__LEFT = EXPR_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OR__RIGHT = EXPR_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Or</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OR_FEATURE_COUNT = EXPR_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.AndImpl <em>And</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.AndImpl
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getAnd()
   * @generated
   */
  int AND = 51;

  /**
   * The feature id for the '<em><b>Start</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int AND__START = EXPR__START;

  /**
   * The feature id for the '<em><b>End</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int AND__END = EXPR__END;

  /**
   * The feature id for the '<em><b>Tail</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int AND__TAIL = EXPR__TAIL;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int AND__LEFT = EXPR_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int AND__RIGHT = EXPR_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>And</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int AND_FEATURE_COUNT = EXPR_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.EqualityImpl <em>Equality</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.EqualityImpl
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getEquality()
   * @generated
   */
  int EQUALITY = 52;

  /**
   * The feature id for the '<em><b>Start</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EQUALITY__START = EXPR__START;

  /**
   * The feature id for the '<em><b>End</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EQUALITY__END = EXPR__END;

  /**
   * The feature id for the '<em><b>Tail</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EQUALITY__TAIL = EXPR__TAIL;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EQUALITY__LEFT = EXPR_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Op</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EQUALITY__OP = EXPR_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EQUALITY__RIGHT = EXPR_FEATURE_COUNT + 2;

  /**
   * The number of structural features of the '<em>Equality</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EQUALITY_FEATURE_COUNT = EXPR_FEATURE_COUNT + 3;

  /**
   * The meta object id for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.ComparisonImpl <em>Comparison</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.ComparisonImpl
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getComparison()
   * @generated
   */
  int COMPARISON = 53;

  /**
   * The feature id for the '<em><b>Start</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMPARISON__START = EXPR__START;

  /**
   * The feature id for the '<em><b>End</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMPARISON__END = EXPR__END;

  /**
   * The feature id for the '<em><b>Tail</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMPARISON__TAIL = EXPR__TAIL;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMPARISON__LEFT = EXPR_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Op</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMPARISON__OP = EXPR_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMPARISON__RIGHT = EXPR_FEATURE_COUNT + 2;

  /**
   * The number of structural features of the '<em>Comparison</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMPARISON_FEATURE_COUNT = EXPR_FEATURE_COUNT + 3;

  /**
   * The meta object id for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.AddExprImpl <em>Add Expr</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.AddExprImpl
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getAddExpr()
   * @generated
   */
  int ADD_EXPR = 54;

  /**
   * The feature id for the '<em><b>Start</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ADD_EXPR__START = EXPR__START;

  /**
   * The feature id for the '<em><b>End</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ADD_EXPR__END = EXPR__END;

  /**
   * The feature id for the '<em><b>Tail</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ADD_EXPR__TAIL = EXPR__TAIL;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ADD_EXPR__LEFT = EXPR_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ADD_EXPR__RIGHT = EXPR_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Add Expr</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ADD_EXPR_FEATURE_COUNT = EXPR_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.SubExprImpl <em>Sub Expr</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.SubExprImpl
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getSubExpr()
   * @generated
   */
  int SUB_EXPR = 55;

  /**
   * The feature id for the '<em><b>Start</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SUB_EXPR__START = EXPR__START;

  /**
   * The feature id for the '<em><b>End</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SUB_EXPR__END = EXPR__END;

  /**
   * The feature id for the '<em><b>Tail</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SUB_EXPR__TAIL = EXPR__TAIL;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SUB_EXPR__LEFT = EXPR_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SUB_EXPR__RIGHT = EXPR_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Sub Expr</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SUB_EXPR_FEATURE_COUNT = EXPR_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.DivExprImpl <em>Div Expr</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.DivExprImpl
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getDivExpr()
   * @generated
   */
  int DIV_EXPR = 56;

  /**
   * The feature id for the '<em><b>Start</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DIV_EXPR__START = EXPR__START;

  /**
   * The feature id for the '<em><b>End</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DIV_EXPR__END = EXPR__END;

  /**
   * The feature id for the '<em><b>Tail</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DIV_EXPR__TAIL = EXPR__TAIL;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DIV_EXPR__LEFT = EXPR_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DIV_EXPR__RIGHT = EXPR_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Div Expr</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DIV_EXPR_FEATURE_COUNT = EXPR_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.MultExprImpl <em>Mult Expr</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.MultExprImpl
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getMultExpr()
   * @generated
   */
  int MULT_EXPR = 57;

  /**
   * The feature id for the '<em><b>Start</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MULT_EXPR__START = EXPR__START;

  /**
   * The feature id for the '<em><b>End</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MULT_EXPR__END = EXPR__END;

  /**
   * The feature id for the '<em><b>Tail</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MULT_EXPR__TAIL = EXPR__TAIL;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MULT_EXPR__LEFT = EXPR_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MULT_EXPR__RIGHT = EXPR_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Mult Expr</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MULT_EXPR_FEATURE_COUNT = EXPR_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.ExponentExprImpl <em>Exponent Expr</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.ExponentExprImpl
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getExponentExpr()
   * @generated
   */
  int EXPONENT_EXPR = 58;

  /**
   * The feature id for the '<em><b>Start</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPONENT_EXPR__START = EXPR__START;

  /**
   * The feature id for the '<em><b>End</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPONENT_EXPR__END = EXPR__END;

  /**
   * The feature id for the '<em><b>Tail</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPONENT_EXPR__TAIL = EXPR__TAIL;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPONENT_EXPR__LEFT = EXPR_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Op</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPONENT_EXPR__OP = EXPR_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPONENT_EXPR__RIGHT = EXPR_FEATURE_COUNT + 2;

  /**
   * The number of structural features of the '<em>Exponent Expr</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPONENT_EXPR_FEATURE_COUNT = EXPR_FEATURE_COUNT + 3;

  /**
   * The meta object id for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.AssopImpl <em>Assop</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.AssopImpl
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getAssop()
   * @generated
   */
  int ASSOP = 59;

  /**
   * The feature id for the '<em><b>Start</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ASSOP__START = EXPR__START;

  /**
   * The feature id for the '<em><b>End</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ASSOP__END = EXPR__END;

  /**
   * The feature id for the '<em><b>Tail</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ASSOP__TAIL = EXPR__TAIL;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ASSOP__LEFT = EXPR_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Op</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ASSOP__OP = EXPR_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ASSOP__RIGHT = EXPR_FEATURE_COUNT + 2;

  /**
   * The number of structural features of the '<em>Assop</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ASSOP_FEATURE_COUNT = EXPR_FEATURE_COUNT + 3;

  /**
   * The meta object id for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.FCallImpl <em>FCall</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.FCallImpl
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getFCall()
   * @generated
   */
  int FCALL = 60;

  /**
   * The feature id for the '<em><b>Start</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FCALL__START = EXPR__START;

  /**
   * The feature id for the '<em><b>End</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FCALL__END = EXPR__END;

  /**
   * The feature id for the '<em><b>Tail</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FCALL__TAIL = EXPR__TAIL;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FCALL__LEFT = EXPR_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FCALL__RIGHT = EXPR_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>FCall</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FCALL_FEATURE_COUNT = EXPR_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.ArrayInitImpl <em>Array Init</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.ArrayInitImpl
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getArrayInit()
   * @generated
   */
  int ARRAY_INIT = 61;

  /**
   * The feature id for the '<em><b>Start</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ARRAY_INIT__START = EXPR__START;

  /**
   * The feature id for the '<em><b>End</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ARRAY_INIT__END = EXPR__END;

  /**
   * The feature id for the '<em><b>Tail</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ARRAY_INIT__TAIL = EXPR__TAIL;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ARRAY_INIT__LEFT = EXPR_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Type</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ARRAY_INIT__TYPE = EXPR_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Sizes</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ARRAY_INIT__SIZES = EXPR_FEATURE_COUNT + 2;

  /**
   * The feature id for the '<em><b>Filler</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ARRAY_INIT__FILLER = EXPR_FEATURE_COUNT + 3;

  /**
   * The number of structural features of the '<em>Array Init</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ARRAY_INIT_FEATURE_COUNT = EXPR_FEATURE_COUNT + 4;

  /**
   * The meta object id for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.NotImpl <em>Not</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.NotImpl
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getNot()
   * @generated
   */
  int NOT = 62;

  /**
   * The feature id for the '<em><b>Start</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NOT__START = EXPR__START;

  /**
   * The feature id for the '<em><b>End</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NOT__END = EXPR__END;

  /**
   * The feature id for the '<em><b>Tail</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NOT__TAIL = EXPR__TAIL;

  /**
   * The feature id for the '<em><b>Expression</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NOT__EXPRESSION = EXPR_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Not</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NOT_FEATURE_COUNT = EXPR_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.NegImpl <em>Neg</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.NegImpl
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getNeg()
   * @generated
   */
  int NEG = 63;

  /**
   * The feature id for the '<em><b>Start</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NEG__START = EXPR__START;

  /**
   * The feature id for the '<em><b>End</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NEG__END = EXPR__END;

  /**
   * The feature id for the '<em><b>Tail</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NEG__TAIL = EXPR__TAIL;

  /**
   * The feature id for the '<em><b>Expression</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NEG__EXPRESSION = EXPR_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Neg</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NEG_FEATURE_COUNT = EXPR_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.ParanImpl <em>Paran</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.ParanImpl
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getParan()
   * @generated
   */
  int PARAN = 64;

  /**
   * The feature id for the '<em><b>Start</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PARAN__START = EXPR__START;

  /**
   * The feature id for the '<em><b>End</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PARAN__END = EXPR__END;

  /**
   * The feature id for the '<em><b>Tail</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PARAN__TAIL = EXPR__TAIL;

  /**
   * The feature id for the '<em><b>Exp</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PARAN__EXP = EXPR_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Paran</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PARAN_FEATURE_COUNT = EXPR_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.IntConstImpl <em>Int Const</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.IntConstImpl
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getIntConst()
   * @generated
   */
  int INT_CONST = 65;

  /**
   * The feature id for the '<em><b>Start</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INT_CONST__START = LITERAL__START;

  /**
   * The feature id for the '<em><b>End</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INT_CONST__END = LITERAL__END;

  /**
   * The feature id for the '<em><b>Tail</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INT_CONST__TAIL = LITERAL__TAIL;

  /**
   * The feature id for the '<em><b>Value</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INT_CONST__VALUE = LITERAL_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Int Const</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INT_CONST_FEATURE_COUNT = LITERAL_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.FloatConstImpl <em>Float Const</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.FloatConstImpl
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getFloatConst()
   * @generated
   */
  int FLOAT_CONST = 66;

  /**
   * The feature id for the '<em><b>Start</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FLOAT_CONST__START = LITERAL__START;

  /**
   * The feature id for the '<em><b>End</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FLOAT_CONST__END = LITERAL__END;

  /**
   * The feature id for the '<em><b>Tail</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FLOAT_CONST__TAIL = LITERAL__TAIL;

  /**
   * The feature id for the '<em><b>Value</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FLOAT_CONST__VALUE = LITERAL_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Float Const</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FLOAT_CONST_FEATURE_COUNT = LITERAL_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.StrConstImpl <em>Str Const</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.StrConstImpl
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getStrConst()
   * @generated
   */
  int STR_CONST = 67;

  /**
   * The feature id for the '<em><b>Start</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STR_CONST__START = LITERAL__START;

  /**
   * The feature id for the '<em><b>End</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STR_CONST__END = LITERAL__END;

  /**
   * The feature id for the '<em><b>Tail</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STR_CONST__TAIL = LITERAL__TAIL;

  /**
   * The feature id for the '<em><b>Value</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STR_CONST__VALUE = LITERAL_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Str Const</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STR_CONST_FEATURE_COUNT = LITERAL_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.BoolConstImpl <em>Bool Const</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.BoolConstImpl
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getBoolConst()
   * @generated
   */
  int BOOL_CONST = 68;

  /**
   * The feature id for the '<em><b>Start</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BOOL_CONST__START = LITERAL__START;

  /**
   * The feature id for the '<em><b>End</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BOOL_CONST__END = LITERAL__END;

  /**
   * The feature id for the '<em><b>Tail</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BOOL_CONST__TAIL = LITERAL__TAIL;

  /**
   * The feature id for the '<em><b>Value</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BOOL_CONST__VALUE = LITERAL_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Bool Const</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BOOL_CONST_FEATURE_COUNT = LITERAL_FEATURE_COUNT + 1;


  /**
   * Returns the meta object for class '{@link srf.transpiler.fortxtrans.fortXTrans.Model <em>Model</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Model</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.Model
   * @generated
   */
  EClass getModel();

  /**
   * Returns the meta object for the attribute '{@link srf.transpiler.fortxtrans.fortXTrans.Model#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.Model#getName()
   * @see #getModel()
   * @generated
   */
  EAttribute getModel_Name();

  /**
   * Returns the meta object for the containment reference list '{@link srf.transpiler.fortxtrans.fortXTrans.Model#getImports <em>Imports</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Imports</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.Model#getImports()
   * @see #getModel()
   * @generated
   */
  EReference getModel_Imports();

  /**
   * Returns the meta object for class '{@link srf.transpiler.fortxtrans.fortXTrans.Component <em>Component</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Component</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.Component
   * @generated
   */
  EClass getComponent();

  /**
   * Returns the meta object for the containment reference list '{@link srf.transpiler.fortxtrans.fortXTrans.Component#getExports <em>Exports</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Exports</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.Component#getExports()
   * @see #getComponent()
   * @generated
   */
  EReference getComponent_Exports();

  /**
   * Returns the meta object for the containment reference list '{@link srf.transpiler.fortxtrans.fortXTrans.Component#getDecls <em>Decls</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Decls</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.Component#getDecls()
   * @see #getComponent()
   * @generated
   */
  EReference getComponent_Decls();

  /**
   * Returns the meta object for class '{@link srf.transpiler.fortxtrans.fortXTrans.API <em>API</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>API</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.API
   * @generated
   */
  EClass getAPI();

  /**
   * Returns the meta object for class '{@link srf.transpiler.fortxtrans.fortXTrans.Import <em>Import</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Import</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.Import
   * @generated
   */
  EClass getImport();

  /**
   * Returns the meta object for the attribute '{@link srf.transpiler.fortxtrans.fortXTrans.Import#getImps <em>Imps</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Imps</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.Import#getImps()
   * @see #getImport()
   * @generated
   */
  EAttribute getImport_Imps();

  /**
   * Returns the meta object for the containment reference '{@link srf.transpiler.fortxtrans.fortXTrans.Import#getImportedNames <em>Imported Names</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Imported Names</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.Import#getImportedNames()
   * @see #getImport()
   * @generated
   */
  EReference getImport_ImportedNames();

  /**
   * Returns the meta object for the attribute '{@link srf.transpiler.fortxtrans.fortXTrans.Import#getApi <em>Api</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Api</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.Import#getApi()
   * @see #getImport()
   * @generated
   */
  EAttribute getImport_Api();

  /**
   * Returns the meta object for the containment reference '{@link srf.transpiler.fortxtrans.fortXTrans.Import#getAliasedimportedNames <em>Aliasedimported Names</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Aliasedimported Names</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.Import#getAliasedimportedNames()
   * @see #getImport()
   * @generated
   */
  EReference getImport_AliasedimportedNames();

  /**
   * Returns the meta object for class '{@link srf.transpiler.fortxtrans.fortXTrans.Export <em>Export</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Export</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.Export
   * @generated
   */
  EClass getExport();

  /**
   * Returns the meta object for the attribute '{@link srf.transpiler.fortxtrans.fortXTrans.Export#getExp <em>Exp</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Exp</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.Export#getExp()
   * @see #getExport()
   * @generated
   */
  EAttribute getExport_Exp();

  /**
   * Returns the meta object for the containment reference list '{@link srf.transpiler.fortxtrans.fortXTrans.Export#getExportedName <em>Exported Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Exported Name</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.Export#getExportedName()
   * @see #getExport()
   * @generated
   */
  EReference getExport_ExportedName();

  /**
   * Returns the meta object for the attribute '{@link srf.transpiler.fortxtrans.fortXTrans.Export#getBrack <em>Brack</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Brack</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.Export#getBrack()
   * @see #getExport()
   * @generated
   */
  EAttribute getExport_Brack();

  /**
   * Returns the meta object for class '{@link srf.transpiler.fortxtrans.fortXTrans.ImportedNames <em>Imported Names</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Imported Names</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.ImportedNames
   * @generated
   */
  EClass getImportedNames();

  /**
   * Returns the meta object for the containment reference '{@link srf.transpiler.fortxtrans.fortXTrans.ImportedNames#getImpname <em>Impname</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Impname</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.ImportedNames#getImpname()
   * @see #getImportedNames()
   * @generated
   */
  EReference getImportedNames_Impname();

  /**
   * Returns the meta object for the attribute '{@link srf.transpiler.fortxtrans.fortXTrans.ImportedNames#isExcept <em>Except</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Except</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.ImportedNames#isExcept()
   * @see #getImportedNames()
   * @generated
   */
  EAttribute getImportedNames_Except();

  /**
   * Returns the meta object for the containment reference '{@link srf.transpiler.fortxtrans.fortXTrans.ImportedNames#getSimp <em>Simp</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Simp</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.ImportedNames#getSimp()
   * @see #getImportedNames()
   * @generated
   */
  EReference getImportedNames_Simp();

  /**
   * Returns the meta object for the containment reference list '{@link srf.transpiler.fortxtrans.fortXTrans.ImportedNames#getSimpList <em>Simp List</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Simp List</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.ImportedNames#getSimpList()
   * @see #getImportedNames()
   * @generated
   */
  EReference getImportedNames_SimpList();

  /**
   * Returns the meta object for the attribute '{@link srf.transpiler.fortxtrans.fortXTrans.ImportedNames#isComma <em>Comma</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Comma</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.ImportedNames#isComma()
   * @see #getImportedNames()
   * @generated
   */
  EAttribute getImportedNames_Comma();

  /**
   * Returns the meta object for the attribute '{@link srf.transpiler.fortxtrans.fortXTrans.ImportedNames#isDots <em>Dots</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Dots</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.ImportedNames#isDots()
   * @see #getImportedNames()
   * @generated
   */
  EAttribute getImportedNames_Dots();

  /**
   * Returns the meta object for the attribute '{@link srf.transpiler.fortxtrans.fortXTrans.ImportedNames#getAsname <em>Asname</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Asname</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.ImportedNames#getAsname()
   * @see #getImportedNames()
   * @generated
   */
  EAttribute getImportedNames_Asname();

  /**
   * Returns the meta object for class '{@link srf.transpiler.fortxtrans.fortXTrans.QualifiedName <em>Qualified Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Qualified Name</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.QualifiedName
   * @generated
   */
  EClass getQualifiedName();

  /**
   * Returns the meta object for the containment reference list '{@link srf.transpiler.fortxtrans.fortXTrans.QualifiedName#getS <em>S</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>S</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.QualifiedName#getS()
   * @see #getQualifiedName()
   * @generated
   */
  EReference getQualifiedName_S();

  /**
   * Returns the meta object for the attribute '{@link srf.transpiler.fortxtrans.fortXTrans.QualifiedName#getDots <em>Dots</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Dots</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.QualifiedName#getDots()
   * @see #getQualifiedName()
   * @generated
   */
  EAttribute getQualifiedName_Dots();

  /**
   * Returns the meta object for class '{@link srf.transpiler.fortxtrans.fortXTrans.Qualified <em>Qualified</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Qualified</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.Qualified
   * @generated
   */
  EClass getQualified();

  /**
   * Returns the meta object for class '{@link srf.transpiler.fortxtrans.fortXTrans.QualifiedNameTuple <em>Qualified Name Tuple</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Qualified Name Tuple</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.QualifiedNameTuple
   * @generated
   */
  EClass getQualifiedNameTuple();

  /**
   * Returns the meta object for the containment reference list '{@link srf.transpiler.fortxtrans.fortXTrans.QualifiedNameTuple#getQlist <em>Qlist</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Qlist</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.QualifiedNameTuple#getQlist()
   * @see #getQualifiedNameTuple()
   * @generated
   */
  EReference getQualifiedNameTuple_Qlist();

  /**
   * Returns the meta object for class '{@link srf.transpiler.fortxtrans.fortXTrans.SimpleNames <em>Simple Names</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Simple Names</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.SimpleNames
   * @generated
   */
  EClass getSimpleNames();

  /**
   * Returns the meta object for the containment reference list '{@link srf.transpiler.fortxtrans.fortXTrans.SimpleNames#getNameList <em>Name List</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Name List</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.SimpleNames#getNameList()
   * @see #getSimpleNames()
   * @generated
   */
  EReference getSimpleNames_NameList();

  /**
   * Returns the meta object for the attribute '{@link srf.transpiler.fortxtrans.fortXTrans.SimpleNames#getBrack <em>Brack</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Brack</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.SimpleNames#getBrack()
   * @see #getSimpleNames()
   * @generated
   */
  EAttribute getSimpleNames_Brack();

  /**
   * Returns the meta object for class '{@link srf.transpiler.fortxtrans.fortXTrans.SimpleName <em>Simple Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Simple Name</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.SimpleName
   * @generated
   */
  EClass getSimpleName();

  /**
   * Returns the meta object for the attribute '{@link srf.transpiler.fortxtrans.fortXTrans.SimpleName#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.SimpleName#getName()
   * @see #getSimpleName()
   * @generated
   */
  EAttribute getSimpleName_Name();

  /**
   * Returns the meta object for class '{@link srf.transpiler.fortxtrans.fortXTrans.AliasedSimpleName <em>Aliased Simple Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Aliased Simple Name</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.AliasedSimpleName
   * @generated
   */
  EClass getAliasedSimpleName();

  /**
   * Returns the meta object for the attribute '{@link srf.transpiler.fortxtrans.fortXTrans.AliasedSimpleName#getOrig <em>Orig</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Orig</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.AliasedSimpleName#getOrig()
   * @see #getAliasedSimpleName()
   * @generated
   */
  EAttribute getAliasedSimpleName_Orig();

  /**
   * Returns the meta object for the attribute '{@link srf.transpiler.fortxtrans.fortXTrans.AliasedSimpleName#getAsName <em>As Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>As Name</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.AliasedSimpleName#getAsName()
   * @see #getAliasedSimpleName()
   * @generated
   */
  EAttribute getAliasedSimpleName_AsName();

  /**
   * Returns the meta object for class '{@link srf.transpiler.fortxtrans.fortXTrans.AliasedAPINames <em>Aliased API Names</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Aliased API Names</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.AliasedAPINames
   * @generated
   */
  EClass getAliasedAPINames();

  /**
   * Returns the meta object for the containment reference list '{@link srf.transpiler.fortxtrans.fortXTrans.AliasedAPINames#getNameList <em>Name List</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Name List</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.AliasedAPINames#getNameList()
   * @see #getAliasedAPINames()
   * @generated
   */
  EReference getAliasedAPINames_NameList();

  /**
   * Returns the meta object for the attribute '{@link srf.transpiler.fortxtrans.fortXTrans.AliasedAPINames#getBrack <em>Brack</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Brack</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.AliasedAPINames#getBrack()
   * @see #getAliasedAPINames()
   * @generated
   */
  EAttribute getAliasedAPINames_Brack();

  /**
   * Returns the meta object for class '{@link srf.transpiler.fortxtrans.fortXTrans.AliasedAPIName <em>Aliased API Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Aliased API Name</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.AliasedAPIName
   * @generated
   */
  EClass getAliasedAPIName();

  /**
   * Returns the meta object for the containment reference '{@link srf.transpiler.fortxtrans.fortXTrans.AliasedAPIName#getOrig <em>Orig</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Orig</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.AliasedAPIName#getOrig()
   * @see #getAliasedAPIName()
   * @generated
   */
  EReference getAliasedAPIName_Orig();

  /**
   * Returns the meta object for the attribute '{@link srf.transpiler.fortxtrans.fortXTrans.AliasedAPIName#getAsName <em>As Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>As Name</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.AliasedAPIName#getAsName()
   * @see #getAliasedAPIName()
   * @generated
   */
  EAttribute getAliasedAPIName_AsName();

  /**
   * Returns the meta object for class '{@link srf.transpiler.fortxtrans.fortXTrans.Decls <em>Decls</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Decls</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.Decls
   * @generated
   */
  EClass getDecls();

  /**
   * Returns the meta object for the containment reference list '{@link srf.transpiler.fortxtrans.fortXTrans.Decls#getDecls <em>Decls</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Decls</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.Decls#getDecls()
   * @see #getDecls()
   * @generated
   */
  EReference getDecls_Decls();

  /**
   * Returns the meta object for class '{@link srf.transpiler.fortxtrans.fortXTrans.Decl <em>Decl</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Decl</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.Decl
   * @generated
   */
  EClass getDecl();

  /**
   * Returns the meta object for the containment reference '{@link srf.transpiler.fortxtrans.fortXTrans.Decl#getFunction <em>Function</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Function</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.Decl#getFunction()
   * @see #getDecl()
   * @generated
   */
  EReference getDecl_Function();

  /**
   * Returns the meta object for the containment reference '{@link srf.transpiler.fortxtrans.fortXTrans.Decl#getField <em>Field</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Field</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.Decl#getField()
   * @see #getDecl()
   * @generated
   */
  EReference getDecl_Field();

  /**
   * Returns the meta object for class '{@link srf.transpiler.fortxtrans.fortXTrans.ValParam <em>Val Param</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Val Param</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.ValParam
   * @generated
   */
  EClass getValParam();

  /**
   * Returns the meta object for the containment reference list '{@link srf.transpiler.fortxtrans.fortXTrans.ValParam#getParams <em>Params</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Params</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.ValParam#getParams()
   * @see #getValParam()
   * @generated
   */
  EReference getValParam_Params();

  /**
   * Returns the meta object for the attribute '{@link srf.transpiler.fortxtrans.fortXTrans.ValParam#getBrack <em>Brack</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Brack</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.ValParam#getBrack()
   * @see #getValParam()
   * @generated
   */
  EAttribute getValParam_Brack();

  /**
   * Returns the meta object for class '{@link srf.transpiler.fortxtrans.fortXTrans.Param <em>Param</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Param</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.Param
   * @generated
   */
  EClass getParam();

  /**
   * Returns the meta object for the containment reference '{@link srf.transpiler.fortxtrans.fortXTrans.Param#getParId <em>Par Id</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Par Id</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.Param#getParId()
   * @see #getParam()
   * @generated
   */
  EReference getParam_ParId();

  /**
   * Returns the meta object for the containment reference '{@link srf.transpiler.fortxtrans.fortXTrans.Param#getIstype <em>Istype</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Istype</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.Param#getIstype()
   * @see #getParam()
   * @generated
   */
  EReference getParam_Istype();

  /**
   * Returns the meta object for class '{@link srf.transpiler.fortxtrans.fortXTrans.RetType <em>Ret Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Ret Type</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.RetType
   * @generated
   */
  EClass getRetType();

  /**
   * Returns the meta object for the attribute '{@link srf.transpiler.fortxtrans.fortXTrans.RetType#getEmpty <em>Empty</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Empty</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.RetType#getEmpty()
   * @see #getRetType()
   * @generated
   */
  EAttribute getRetType_Empty();

  /**
   * Returns the meta object for the containment reference '{@link srf.transpiler.fortxtrans.fortXTrans.RetType#getType <em>Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Type</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.RetType#getType()
   * @see #getRetType()
   * @generated
   */
  EReference getRetType_Type();

  /**
   * Returns the meta object for class '{@link srf.transpiler.fortxtrans.fortXTrans.TupleType <em>Tuple Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Tuple Type</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.TupleType
   * @generated
   */
  EClass getTupleType();

  /**
   * Returns the meta object for the containment reference list '{@link srf.transpiler.fortxtrans.fortXTrans.TupleType#getTypes <em>Types</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Types</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.TupleType#getTypes()
   * @see #getTupleType()
   * @generated
   */
  EReference getTupleType_Types();

  /**
   * Returns the meta object for class '{@link srf.transpiler.fortxtrans.fortXTrans.FnMods <em>Fn Mods</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Fn Mods</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.FnMods
   * @generated
   */
  EClass getFnMods();

  /**
   * Returns the meta object for the containment reference list '{@link srf.transpiler.fortxtrans.fortXTrans.FnMods#getMods <em>Mods</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Mods</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.FnMods#getMods()
   * @see #getFnMods()
   * @generated
   */
  EReference getFnMods_Mods();

  /**
   * Returns the meta object for class '{@link srf.transpiler.fortxtrans.fortXTrans.FnMod <em>Fn Mod</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Fn Mod</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.FnMod
   * @generated
   */
  EClass getFnMod();

  /**
   * Returns the meta object for the attribute '{@link srf.transpiler.fortxtrans.fortXTrans.FnMod#getModtype <em>Modtype</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Modtype</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.FnMod#getModtype()
   * @see #getFnMod()
   * @generated
   */
  EAttribute getFnMod_Modtype();

  /**
   * Returns the meta object for class '{@link srf.transpiler.fortxtrans.fortXTrans.FnDecl <em>Fn Decl</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Fn Decl</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.FnDecl
   * @generated
   */
  EClass getFnDecl();

  /**
   * Returns the meta object for the containment reference '{@link srf.transpiler.fortxtrans.fortXTrans.FnDecl#getMods <em>Mods</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Mods</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.FnDecl#getMods()
   * @see #getFnDecl()
   * @generated
   */
  EReference getFnDecl_Mods();

  /**
   * Returns the meta object for the attribute '{@link srf.transpiler.fortxtrans.fortXTrans.FnDecl#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.FnDecl#getName()
   * @see #getFnDecl()
   * @generated
   */
  EAttribute getFnDecl_Name();

  /**
   * Returns the meta object for the containment reference '{@link srf.transpiler.fortxtrans.fortXTrans.FnDecl#getParams <em>Params</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Params</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.FnDecl#getParams()
   * @see #getFnDecl()
   * @generated
   */
  EReference getFnDecl_Params();

  /**
   * Returns the meta object for the containment reference '{@link srf.transpiler.fortxtrans.fortXTrans.FnDecl#getRetVal <em>Ret Val</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Ret Val</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.FnDecl#getRetVal()
   * @see #getFnDecl()
   * @generated
   */
  EReference getFnDecl_RetVal();

  /**
   * Returns the meta object for the attribute '{@link srf.transpiler.fortxtrans.fortXTrans.FnDecl#isBody <em>Body</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Body</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.FnDecl#isBody()
   * @see #getFnDecl()
   * @generated
   */
  EAttribute getFnDecl_Body();

  /**
   * Returns the meta object for the containment reference '{@link srf.transpiler.fortxtrans.fortXTrans.FnDecl#getFnItself <em>Fn Itself</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Fn Itself</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.FnDecl#getFnItself()
   * @see #getFnDecl()
   * @generated
   */
  EReference getFnDecl_FnItself();

  /**
   * Returns the meta object for class '{@link srf.transpiler.fortxtrans.fortXTrans.Stmnts <em>Stmnts</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Stmnts</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.Stmnts
   * @generated
   */
  EClass getStmnts();

  /**
   * Returns the meta object for the containment reference '{@link srf.transpiler.fortxtrans.fortXTrans.Stmnts#getFront <em>Front</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Front</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.Stmnts#getFront()
   * @see #getStmnts()
   * @generated
   */
  EReference getStmnts_Front();

  /**
   * Returns the meta object for the containment reference '{@link srf.transpiler.fortxtrans.fortXTrans.Stmnts#getDelims <em>Delims</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Delims</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.Stmnts#getDelims()
   * @see #getStmnts()
   * @generated
   */
  EReference getStmnts_Delims();

  /**
   * Returns the meta object for the containment reference '{@link srf.transpiler.fortxtrans.fortXTrans.Stmnts#getLocVar <em>Loc Var</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Loc Var</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.Stmnts#getLocVar()
   * @see #getStmnts()
   * @generated
   */
  EReference getStmnts_LocVar();

  /**
   * Returns the meta object for the containment reference '{@link srf.transpiler.fortxtrans.fortXTrans.Stmnts#getExp <em>Exp</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Exp</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.Stmnts#getExp()
   * @see #getStmnts()
   * @generated
   */
  EReference getStmnts_Exp();

  /**
   * Returns the meta object for class '{@link srf.transpiler.fortxtrans.fortXTrans.Stmnt <em>Stmnt</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Stmnt</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.Stmnt
   * @generated
   */
  EClass getStmnt();

  /**
   * Returns the meta object for the containment reference '{@link srf.transpiler.fortxtrans.fortXTrans.Stmnt#getDelim <em>Delim</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Delim</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.Stmnt#getDelim()
   * @see #getStmnt()
   * @generated
   */
  EReference getStmnt_Delim();

  /**
   * Returns the meta object for class '{@link srf.transpiler.fortxtrans.fortXTrans.StmntList <em>Stmnt List</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Stmnt List</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.StmntList
   * @generated
   */
  EClass getStmntList();

  /**
   * Returns the meta object for the containment reference list '{@link srf.transpiler.fortxtrans.fortXTrans.StmntList#getDelim <em>Delim</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Delim</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.StmntList#getDelim()
   * @see #getStmntList()
   * @generated
   */
  EReference getStmntList_Delim();

  /**
   * Returns the meta object for class '{@link srf.transpiler.fortxtrans.fortXTrans.Expr <em>Expr</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Expr</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.Expr
   * @generated
   */
  EClass getExpr();

  /**
   * Returns the meta object for the containment reference list '{@link srf.transpiler.fortxtrans.fortXTrans.Expr#getTail <em>Tail</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Tail</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.Expr#getTail()
   * @see #getExpr()
   * @generated
   */
  EReference getExpr_Tail();

  /**
   * Returns the meta object for class '{@link srf.transpiler.fortxtrans.fortXTrans.ExprList <em>Expr List</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Expr List</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.ExprList
   * @generated
   */
  EClass getExprList();

  /**
   * Returns the meta object for the containment reference '{@link srf.transpiler.fortxtrans.fortXTrans.ExprList#getExps <em>Exps</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Exps</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.ExprList#getExps()
   * @see #getExprList()
   * @generated
   */
  EReference getExprList_Exps();

  /**
   * Returns the meta object for the containment reference list '{@link srf.transpiler.fortxtrans.fortXTrans.ExprList#getExp <em>Exp</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Exp</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.ExprList#getExp()
   * @see #getExprList()
   * @generated
   */
  EReference getExprList_Exp();

  /**
   * Returns the meta object for class '{@link srf.transpiler.fortxtrans.fortXTrans.ExprTail <em>Expr Tail</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Expr Tail</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.ExprTail
   * @generated
   */
  EClass getExprTail();

  /**
   * Returns the meta object for the containment reference '{@link srf.transpiler.fortxtrans.fortXTrans.ExprTail#getType <em>Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Type</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.ExprTail#getType()
   * @see #getExprTail()
   * @generated
   */
  EReference getExprTail_Type();

  /**
   * Returns the meta object for class '{@link srf.transpiler.fortxtrans.fortXTrans.DelimitedExpr <em>Delimited Expr</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Delimited Expr</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.DelimitedExpr
   * @generated
   */
  EClass getDelimitedExpr();

  /**
   * Returns the meta object for the containment reference '{@link srf.transpiler.fortxtrans.fortXTrans.DelimitedExpr#getDod <em>Dod</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Dod</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.DelimitedExpr#getDod()
   * @see #getDelimitedExpr()
   * @generated
   */
  EReference getDelimitedExpr_Dod();

  /**
   * Returns the meta object for the attribute '{@link srf.transpiler.fortxtrans.fortXTrans.DelimitedExpr#getRet <em>Ret</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Ret</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.DelimitedExpr#getRet()
   * @see #getDelimitedExpr()
   * @generated
   */
  EAttribute getDelimitedExpr_Ret();

  /**
   * Returns the meta object for the containment reference '{@link srf.transpiler.fortxtrans.fortXTrans.DelimitedExpr#getBlock <em>Block</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Block</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.DelimitedExpr#getBlock()
   * @see #getDelimitedExpr()
   * @generated
   */
  EReference getDelimitedExpr_Block();

  /**
   * Returns the meta object for the attribute '{@link srf.transpiler.fortxtrans.fortXTrans.DelimitedExpr#getAwhile <em>Awhile</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Awhile</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.DelimitedExpr#getAwhile()
   * @see #getDelimitedExpr()
   * @generated
   */
  EAttribute getDelimitedExpr_Awhile();

  /**
   * Returns the meta object for the containment reference '{@link srf.transpiler.fortxtrans.fortXTrans.DelimitedExpr#getExpr <em>Expr</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Expr</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.DelimitedExpr#getExpr()
   * @see #getDelimitedExpr()
   * @generated
   */
  EReference getDelimitedExpr_Expr();

  /**
   * Returns the meta object for the containment reference '{@link srf.transpiler.fortxtrans.fortXTrans.DelimitedExpr#getWhiledod <em>Whiledod</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Whiledod</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.DelimitedExpr#getWhiledod()
   * @see #getDelimitedExpr()
   * @generated
   */
  EReference getDelimitedExpr_Whiledod();

  /**
   * Returns the meta object for the attribute '{@link srf.transpiler.fortxtrans.fortXTrans.DelimitedExpr#getAfor <em>Afor</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Afor</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.DelimitedExpr#getAfor()
   * @see #getDelimitedExpr()
   * @generated
   */
  EAttribute getDelimitedExpr_Afor();

  /**
   * Returns the meta object for the containment reference '{@link srf.transpiler.fortxtrans.fortXTrans.DelimitedExpr#getGen <em>Gen</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Gen</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.DelimitedExpr#getGen()
   * @see #getDelimitedExpr()
   * @generated
   */
  EReference getDelimitedExpr_Gen();

  /**
   * Returns the meta object for the containment reference '{@link srf.transpiler.fortxtrans.fortXTrans.DelimitedExpr#getDofront <em>Dofront</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Dofront</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.DelimitedExpr#getDofront()
   * @see #getDelimitedExpr()
   * @generated
   */
  EReference getDelimitedExpr_Dofront();

  /**
   * Returns the meta object for the attribute '{@link srf.transpiler.fortxtrans.fortXTrans.DelimitedExpr#getAnif <em>Anif</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Anif</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.DelimitedExpr#getAnif()
   * @see #getDelimitedExpr()
   * @generated
   */
  EAttribute getDelimitedExpr_Anif();

  /**
   * Returns the meta object for the containment reference '{@link srf.transpiler.fortxtrans.fortXTrans.DelimitedExpr#getCond <em>Cond</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Cond</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.DelimitedExpr#getCond()
   * @see #getDelimitedExpr()
   * @generated
   */
  EReference getDelimitedExpr_Cond();

  /**
   * Returns the meta object for the containment reference '{@link srf.transpiler.fortxtrans.fortXTrans.DelimitedExpr#getBlocks <em>Blocks</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Blocks</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.DelimitedExpr#getBlocks()
   * @see #getDelimitedExpr()
   * @generated
   */
  EReference getDelimitedExpr_Blocks();

  /**
   * Returns the meta object for the containment reference '{@link srf.transpiler.fortxtrans.fortXTrans.DelimitedExpr#getElifs <em>Elifs</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Elifs</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.DelimitedExpr#getElifs()
   * @see #getDelimitedExpr()
   * @generated
   */
  EReference getDelimitedExpr_Elifs();

  /**
   * Returns the meta object for the containment reference '{@link srf.transpiler.fortxtrans.fortXTrans.DelimitedExpr#getEls <em>Els</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Els</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.DelimitedExpr#getEls()
   * @see #getDelimitedExpr()
   * @generated
   */
  EReference getDelimitedExpr_Els();

  /**
   * Returns the meta object for class '{@link srf.transpiler.fortxtrans.fortXTrans.Elifs <em>Elifs</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Elifs</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.Elifs
   * @generated
   */
  EClass getElifs();

  /**
   * Returns the meta object for the containment reference list '{@link srf.transpiler.fortxtrans.fortXTrans.Elifs#getE <em>E</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>E</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.Elifs#getE()
   * @see #getElifs()
   * @generated
   */
  EReference getElifs_E();

  /**
   * Returns the meta object for class '{@link srf.transpiler.fortxtrans.fortXTrans.Elif <em>Elif</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Elif</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.Elif
   * @generated
   */
  EClass getElif();

  /**
   * Returns the meta object for the containment reference '{@link srf.transpiler.fortxtrans.fortXTrans.Elif#getExpr <em>Expr</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Expr</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.Elif#getExpr()
   * @see #getElif()
   * @generated
   */
  EReference getElif_Expr();

  /**
   * Returns the meta object for the containment reference '{@link srf.transpiler.fortxtrans.fortXTrans.Elif#getBlock <em>Block</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Block</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.Elif#getBlock()
   * @see #getElif()
   * @generated
   */
  EReference getElif_Block();

  /**
   * Returns the meta object for class '{@link srf.transpiler.fortxtrans.fortXTrans.Else <em>Else</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Else</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.Else
   * @generated
   */
  EClass getElse();

  /**
   * Returns the meta object for the containment reference '{@link srf.transpiler.fortxtrans.fortXTrans.Else#getBlock <em>Block</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Block</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.Else#getBlock()
   * @see #getElse()
   * @generated
   */
  EReference getElse_Block();

  /**
   * Returns the meta object for class '{@link srf.transpiler.fortxtrans.fortXTrans.Generators <em>Generators</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Generators</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.Generators
   * @generated
   */
  EClass getGenerators();

  /**
   * Returns the meta object for the containment reference '{@link srf.transpiler.fortxtrans.fortXTrans.Generators#getBinding <em>Binding</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Binding</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.Generators#getBinding()
   * @see #getGenerators()
   * @generated
   */
  EReference getGenerators_Binding();

  /**
   * Returns the meta object for the containment reference list '{@link srf.transpiler.fortxtrans.fortXTrans.Generators#getClause <em>Clause</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Clause</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.Generators#getClause()
   * @see #getGenerators()
   * @generated
   */
  EReference getGenerators_Clause();

  /**
   * Returns the meta object for class '{@link srf.transpiler.fortxtrans.fortXTrans.Binding <em>Binding</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Binding</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.Binding
   * @generated
   */
  EClass getBinding();

  /**
   * Returns the meta object for the containment reference '{@link srf.transpiler.fortxtrans.fortXTrans.Binding#getIdtup <em>Idtup</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Idtup</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.Binding#getIdtup()
   * @see #getBinding()
   * @generated
   */
  EReference getBinding_Idtup();

  /**
   * Returns the meta object for the containment reference '{@link srf.transpiler.fortxtrans.fortXTrans.Binding#getG <em>G</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>G</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.Binding#getG()
   * @see #getBinding()
   * @generated
   */
  EReference getBinding_G();

  /**
   * Returns the meta object for the attribute '{@link srf.transpiler.fortxtrans.fortXTrans.Binding#getSeq <em>Seq</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Seq</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.Binding#getSeq()
   * @see #getBinding()
   * @generated
   */
  EAttribute getBinding_Seq();

  /**
   * Returns the meta object for class '{@link srf.transpiler.fortxtrans.fortXTrans.GenSource <em>Gen Source</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Gen Source</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.GenSource
   * @generated
   */
  EClass getGenSource();

  /**
   * Returns the meta object for the containment reference '{@link srf.transpiler.fortxtrans.fortXTrans.GenSource#getStart <em>Start</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Start</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.GenSource#getStart()
   * @see #getGenSource()
   * @generated
   */
  EReference getGenSource_Start();

  /**
   * Returns the meta object for the containment reference '{@link srf.transpiler.fortxtrans.fortXTrans.GenSource#getEnd <em>End</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>End</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.GenSource#getEnd()
   * @see #getGenSource()
   * @generated
   */
  EReference getGenSource_End();

  /**
   * Returns the meta object for class '{@link srf.transpiler.fortxtrans.fortXTrans.GenClause <em>Gen Clause</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Gen Clause</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.GenClause
   * @generated
   */
  EClass getGenClause();

  /**
   * Returns the meta object for the containment reference '{@link srf.transpiler.fortxtrans.fortXTrans.GenClause#getBinding <em>Binding</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Binding</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.GenClause#getBinding()
   * @see #getGenClause()
   * @generated
   */
  EReference getGenClause_Binding();

  /**
   * Returns the meta object for the containment reference '{@link srf.transpiler.fortxtrans.fortXTrans.GenClause#getExpr <em>Expr</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Expr</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.GenClause#getExpr()
   * @see #getGenClause()
   * @generated
   */
  EReference getGenClause_Expr();

  /**
   * Returns the meta object for class '{@link srf.transpiler.fortxtrans.fortXTrans.BlockElems <em>Block Elems</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Block Elems</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.BlockElems
   * @generated
   */
  EClass getBlockElems();

  /**
   * Returns the meta object for the containment reference list '{@link srf.transpiler.fortxtrans.fortXTrans.BlockElems#getBlock <em>Block</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Block</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.BlockElems#getBlock()
   * @see #getBlockElems()
   * @generated
   */
  EReference getBlockElems_Block();

  /**
   * Returns the meta object for class '{@link srf.transpiler.fortxtrans.fortXTrans.BlockElem <em>Block Elem</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Block Elem</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.BlockElem
   * @generated
   */
  EClass getBlockElem();

  /**
   * Returns the meta object for the containment reference '{@link srf.transpiler.fortxtrans.fortXTrans.BlockElem#getSt <em>St</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>St</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.BlockElem#getSt()
   * @see #getBlockElem()
   * @generated
   */
  EReference getBlockElem_St();

  /**
   * Returns the meta object for class '{@link srf.transpiler.fortxtrans.fortXTrans.Do <em>Do</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Do</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.Do
   * @generated
   */
  EClass getDo();

  /**
   * Returns the meta object for the containment reference list '{@link srf.transpiler.fortxtrans.fortXTrans.Do#getDofs <em>Dofs</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Dofs</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.Do#getDofs()
   * @see #getDo()
   * @generated
   */
  EReference getDo_Dofs();

  /**
   * Returns the meta object for class '{@link srf.transpiler.fortxtrans.fortXTrans.DoFront <em>Do Front</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Do Front</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.DoFront
   * @generated
   */
  EClass getDoFront();

  /**
   * Returns the meta object for the attribute '{@link srf.transpiler.fortxtrans.fortXTrans.DoFront#isAt <em>At</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>At</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.DoFront#isAt()
   * @see #getDoFront()
   * @generated
   */
  EAttribute getDoFront_At();

  /**
   * Returns the meta object for the containment reference '{@link srf.transpiler.fortxtrans.fortXTrans.DoFront#getExp <em>Exp</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Exp</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.DoFront#getExp()
   * @see #getDoFront()
   * @generated
   */
  EReference getDoFront_Exp();

  /**
   * Returns the meta object for the attribute '{@link srf.transpiler.fortxtrans.fortXTrans.DoFront#isAtom <em>Atom</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Atom</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.DoFront#isAtom()
   * @see #getDoFront()
   * @generated
   */
  EAttribute getDoFront_Atom();

  /**
   * Returns the meta object for the containment reference '{@link srf.transpiler.fortxtrans.fortXTrans.DoFront#getBlock <em>Block</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Block</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.DoFront#getBlock()
   * @see #getDoFront()
   * @generated
   */
  EReference getDoFront_Block();

  /**
   * Returns the meta object for class '{@link srf.transpiler.fortxtrans.fortXTrans.IsType <em>Is Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Is Type</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.IsType
   * @generated
   */
  EClass getIsType();

  /**
   * Returns the meta object for the containment reference '{@link srf.transpiler.fortxtrans.fortXTrans.IsType#getType <em>Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Type</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.IsType#getType()
   * @see #getIsType()
   * @generated
   */
  EReference getIsType_Type();

  /**
   * Returns the meta object for class '{@link srf.transpiler.fortxtrans.fortXTrans.FieldDecl <em>Field Decl</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Field Decl</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.FieldDecl
   * @generated
   */
  EClass getFieldDecl();

  /**
   * Returns the meta object for the attribute '{@link srf.transpiler.fortxtrans.fortXTrans.FieldDecl#getPri <em>Pri</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Pri</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.FieldDecl#getPri()
   * @see #getFieldDecl()
   * @generated
   */
  EAttribute getFieldDecl_Pri();

  /**
   * Returns the meta object for the attribute '{@link srf.transpiler.fortxtrans.fortXTrans.FieldDecl#getMut <em>Mut</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Mut</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.FieldDecl#getMut()
   * @see #getFieldDecl()
   * @generated
   */
  EAttribute getFieldDecl_Mut();

  /**
   * Returns the meta object for the containment reference '{@link srf.transpiler.fortxtrans.fortXTrans.FieldDecl#getVars <em>Vars</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Vars</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.FieldDecl#getVars()
   * @see #getFieldDecl()
   * @generated
   */
  EReference getFieldDecl_Vars();

  /**
   * Returns the meta object for the containment reference '{@link srf.transpiler.fortxtrans.fortXTrans.FieldDecl#getInit <em>Init</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Init</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.FieldDecl#getInit()
   * @see #getFieldDecl()
   * @generated
   */
  EReference getFieldDecl_Init();

  /**
   * Returns the meta object for the containment reference '{@link srf.transpiler.fortxtrans.fortXTrans.FieldDecl#getIdtup <em>Idtup</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Idtup</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.FieldDecl#getIdtup()
   * @see #getFieldDecl()
   * @generated
   */
  EReference getFieldDecl_Idtup();

  /**
   * Returns the meta object for the containment reference '{@link srf.transpiler.fortxtrans.fortXTrans.FieldDecl#getType <em>Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Type</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.FieldDecl#getType()
   * @see #getFieldDecl()
   * @generated
   */
  EReference getFieldDecl_Type();

  /**
   * Returns the meta object for the containment reference '{@link srf.transpiler.fortxtrans.fortXTrans.FieldDecl#getTuptype <em>Tuptype</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Tuptype</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.FieldDecl#getTuptype()
   * @see #getFieldDecl()
   * @generated
   */
  EReference getFieldDecl_Tuptype();

  /**
   * Returns the meta object for class '{@link srf.transpiler.fortxtrans.fortXTrans.NoNewlineVarWTypes <em>No Newline Var WTypes</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>No Newline Var WTypes</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.NoNewlineVarWTypes
   * @generated
   */
  EClass getNoNewlineVarWTypes();

  /**
   * Returns the meta object for the containment reference '{@link srf.transpiler.fortxtrans.fortXTrans.NoNewlineVarWTypes#getSingle <em>Single</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Single</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.NoNewlineVarWTypes#getSingle()
   * @see #getNoNewlineVarWTypes()
   * @generated
   */
  EReference getNoNewlineVarWTypes_Single();

  /**
   * Returns the meta object for the containment reference '{@link srf.transpiler.fortxtrans.fortXTrans.NoNewlineVarWTypes#getArrsize <em>Arrsize</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Arrsize</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.NoNewlineVarWTypes#getArrsize()
   * @see #getNoNewlineVarWTypes()
   * @generated
   */
  EReference getNoNewlineVarWTypes_Arrsize();

  /**
   * Returns the meta object for the containment reference list '{@link srf.transpiler.fortxtrans.fortXTrans.NoNewlineVarWTypes#getMultiple <em>Multiple</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Multiple</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.NoNewlineVarWTypes#getMultiple()
   * @see #getNoNewlineVarWTypes()
   * @generated
   */
  EReference getNoNewlineVarWTypes_Multiple();

  /**
   * Returns the meta object for class '{@link srf.transpiler.fortxtrans.fortXTrans.NoNewlineVarWType <em>No Newline Var WType</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>No Newline Var WType</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.NoNewlineVarWType
   * @generated
   */
  EClass getNoNewlineVarWType();

  /**
   * Returns the meta object for the containment reference '{@link srf.transpiler.fortxtrans.fortXTrans.NoNewlineVarWType#getBid <em>Bid</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Bid</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.NoNewlineVarWType#getBid()
   * @see #getNoNewlineVarWType()
   * @generated
   */
  EReference getNoNewlineVarWType_Bid();

  /**
   * Returns the meta object for the containment reference '{@link srf.transpiler.fortxtrans.fortXTrans.NoNewlineVarWType#getIstype <em>Istype</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Istype</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.NoNewlineVarWType#getIstype()
   * @see #getNoNewlineVarWType()
   * @generated
   */
  EReference getNoNewlineVarWType_Istype();

  /**
   * Returns the meta object for class '{@link srf.transpiler.fortxtrans.fortXTrans.LiteralTuple <em>Literal Tuple</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Literal Tuple</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.LiteralTuple
   * @generated
   */
  EClass getLiteralTuple();

  /**
   * Returns the meta object for class '{@link srf.transpiler.fortxtrans.fortXTrans.LiteralTup <em>Literal Tup</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Literal Tup</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.LiteralTup
   * @generated
   */
  EClass getLiteralTup();

  /**
   * Returns the meta object for class '{@link srf.transpiler.fortxtrans.fortXTrans.LiteralList <em>Literal List</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Literal List</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.LiteralList
   * @generated
   */
  EClass getLiteralList();

  /**
   * Returns the meta object for the containment reference list '{@link srf.transpiler.fortxtrans.fortXTrans.LiteralList#getLit <em>Lit</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Lit</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.LiteralList#getLit()
   * @see #getLiteralList()
   * @generated
   */
  EReference getLiteralList_Lit();

  /**
   * Returns the meta object for class '{@link srf.transpiler.fortxtrans.fortXTrans.Literal <em>Literal</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Literal</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.Literal
   * @generated
   */
  EClass getLiteral();

  /**
   * Returns the meta object for class '{@link srf.transpiler.fortxtrans.fortXTrans.LocalVarDecl <em>Local Var Decl</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Local Var Decl</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.LocalVarDecl
   * @generated
   */
  EClass getLocalVarDecl();

  /**
   * Returns the meta object for the attribute '{@link srf.transpiler.fortxtrans.fortXTrans.LocalVarDecl#getMut <em>Mut</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Mut</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.LocalVarDecl#getMut()
   * @see #getLocalVarDecl()
   * @generated
   */
  EAttribute getLocalVarDecl_Mut();

  /**
   * Returns the meta object for the containment reference '{@link srf.transpiler.fortxtrans.fortXTrans.LocalVarDecl#getVars <em>Vars</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Vars</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.LocalVarDecl#getVars()
   * @see #getLocalVarDecl()
   * @generated
   */
  EReference getLocalVarDecl_Vars();

  /**
   * Returns the meta object for the containment reference '{@link srf.transpiler.fortxtrans.fortXTrans.LocalVarDecl#getInit <em>Init</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Init</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.LocalVarDecl#getInit()
   * @see #getLocalVarDecl()
   * @generated
   */
  EReference getLocalVarDecl_Init();

  /**
   * Returns the meta object for the containment reference '{@link srf.transpiler.fortxtrans.fortXTrans.LocalVarDecl#getIdtup <em>Idtup</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Idtup</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.LocalVarDecl#getIdtup()
   * @see #getLocalVarDecl()
   * @generated
   */
  EReference getLocalVarDecl_Idtup();

  /**
   * Returns the meta object for the containment reference '{@link srf.transpiler.fortxtrans.fortXTrans.LocalVarDecl#getType <em>Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Type</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.LocalVarDecl#getType()
   * @see #getLocalVarDecl()
   * @generated
   */
  EReference getLocalVarDecl_Type();

  /**
   * Returns the meta object for the containment reference '{@link srf.transpiler.fortxtrans.fortXTrans.LocalVarDecl#getTuptype <em>Tuptype</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Tuptype</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.LocalVarDecl#getTuptype()
   * @see #getLocalVarDecl()
   * @generated
   */
  EReference getLocalVarDecl_Tuptype();

  /**
   * Returns the meta object for class '{@link srf.transpiler.fortxtrans.fortXTrans.Or <em>Or</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Or</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.Or
   * @generated
   */
  EClass getOr();

  /**
   * Returns the meta object for the containment reference '{@link srf.transpiler.fortxtrans.fortXTrans.Or#getLeft <em>Left</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Left</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.Or#getLeft()
   * @see #getOr()
   * @generated
   */
  EReference getOr_Left();

  /**
   * Returns the meta object for the containment reference '{@link srf.transpiler.fortxtrans.fortXTrans.Or#getRight <em>Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Right</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.Or#getRight()
   * @see #getOr()
   * @generated
   */
  EReference getOr_Right();

  /**
   * Returns the meta object for class '{@link srf.transpiler.fortxtrans.fortXTrans.And <em>And</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>And</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.And
   * @generated
   */
  EClass getAnd();

  /**
   * Returns the meta object for the containment reference '{@link srf.transpiler.fortxtrans.fortXTrans.And#getLeft <em>Left</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Left</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.And#getLeft()
   * @see #getAnd()
   * @generated
   */
  EReference getAnd_Left();

  /**
   * Returns the meta object for the containment reference '{@link srf.transpiler.fortxtrans.fortXTrans.And#getRight <em>Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Right</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.And#getRight()
   * @see #getAnd()
   * @generated
   */
  EReference getAnd_Right();

  /**
   * Returns the meta object for class '{@link srf.transpiler.fortxtrans.fortXTrans.Equality <em>Equality</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Equality</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.Equality
   * @generated
   */
  EClass getEquality();

  /**
   * Returns the meta object for the containment reference '{@link srf.transpiler.fortxtrans.fortXTrans.Equality#getLeft <em>Left</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Left</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.Equality#getLeft()
   * @see #getEquality()
   * @generated
   */
  EReference getEquality_Left();

  /**
   * Returns the meta object for the attribute '{@link srf.transpiler.fortxtrans.fortXTrans.Equality#getOp <em>Op</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Op</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.Equality#getOp()
   * @see #getEquality()
   * @generated
   */
  EAttribute getEquality_Op();

  /**
   * Returns the meta object for the containment reference '{@link srf.transpiler.fortxtrans.fortXTrans.Equality#getRight <em>Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Right</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.Equality#getRight()
   * @see #getEquality()
   * @generated
   */
  EReference getEquality_Right();

  /**
   * Returns the meta object for class '{@link srf.transpiler.fortxtrans.fortXTrans.Comparison <em>Comparison</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Comparison</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.Comparison
   * @generated
   */
  EClass getComparison();

  /**
   * Returns the meta object for the containment reference '{@link srf.transpiler.fortxtrans.fortXTrans.Comparison#getLeft <em>Left</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Left</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.Comparison#getLeft()
   * @see #getComparison()
   * @generated
   */
  EReference getComparison_Left();

  /**
   * Returns the meta object for the attribute '{@link srf.transpiler.fortxtrans.fortXTrans.Comparison#getOp <em>Op</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Op</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.Comparison#getOp()
   * @see #getComparison()
   * @generated
   */
  EAttribute getComparison_Op();

  /**
   * Returns the meta object for the containment reference '{@link srf.transpiler.fortxtrans.fortXTrans.Comparison#getRight <em>Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Right</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.Comparison#getRight()
   * @see #getComparison()
   * @generated
   */
  EReference getComparison_Right();

  /**
   * Returns the meta object for class '{@link srf.transpiler.fortxtrans.fortXTrans.AddExpr <em>Add Expr</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Add Expr</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.AddExpr
   * @generated
   */
  EClass getAddExpr();

  /**
   * Returns the meta object for the containment reference '{@link srf.transpiler.fortxtrans.fortXTrans.AddExpr#getLeft <em>Left</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Left</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.AddExpr#getLeft()
   * @see #getAddExpr()
   * @generated
   */
  EReference getAddExpr_Left();

  /**
   * Returns the meta object for the containment reference '{@link srf.transpiler.fortxtrans.fortXTrans.AddExpr#getRight <em>Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Right</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.AddExpr#getRight()
   * @see #getAddExpr()
   * @generated
   */
  EReference getAddExpr_Right();

  /**
   * Returns the meta object for class '{@link srf.transpiler.fortxtrans.fortXTrans.SubExpr <em>Sub Expr</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Sub Expr</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.SubExpr
   * @generated
   */
  EClass getSubExpr();

  /**
   * Returns the meta object for the containment reference '{@link srf.transpiler.fortxtrans.fortXTrans.SubExpr#getLeft <em>Left</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Left</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.SubExpr#getLeft()
   * @see #getSubExpr()
   * @generated
   */
  EReference getSubExpr_Left();

  /**
   * Returns the meta object for the containment reference '{@link srf.transpiler.fortxtrans.fortXTrans.SubExpr#getRight <em>Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Right</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.SubExpr#getRight()
   * @see #getSubExpr()
   * @generated
   */
  EReference getSubExpr_Right();

  /**
   * Returns the meta object for class '{@link srf.transpiler.fortxtrans.fortXTrans.DivExpr <em>Div Expr</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Div Expr</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.DivExpr
   * @generated
   */
  EClass getDivExpr();

  /**
   * Returns the meta object for the containment reference '{@link srf.transpiler.fortxtrans.fortXTrans.DivExpr#getLeft <em>Left</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Left</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.DivExpr#getLeft()
   * @see #getDivExpr()
   * @generated
   */
  EReference getDivExpr_Left();

  /**
   * Returns the meta object for the containment reference '{@link srf.transpiler.fortxtrans.fortXTrans.DivExpr#getRight <em>Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Right</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.DivExpr#getRight()
   * @see #getDivExpr()
   * @generated
   */
  EReference getDivExpr_Right();

  /**
   * Returns the meta object for class '{@link srf.transpiler.fortxtrans.fortXTrans.MultExpr <em>Mult Expr</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Mult Expr</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.MultExpr
   * @generated
   */
  EClass getMultExpr();

  /**
   * Returns the meta object for the containment reference '{@link srf.transpiler.fortxtrans.fortXTrans.MultExpr#getLeft <em>Left</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Left</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.MultExpr#getLeft()
   * @see #getMultExpr()
   * @generated
   */
  EReference getMultExpr_Left();

  /**
   * Returns the meta object for the containment reference '{@link srf.transpiler.fortxtrans.fortXTrans.MultExpr#getRight <em>Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Right</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.MultExpr#getRight()
   * @see #getMultExpr()
   * @generated
   */
  EReference getMultExpr_Right();

  /**
   * Returns the meta object for class '{@link srf.transpiler.fortxtrans.fortXTrans.ExponentExpr <em>Exponent Expr</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Exponent Expr</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.ExponentExpr
   * @generated
   */
  EClass getExponentExpr();

  /**
   * Returns the meta object for the containment reference '{@link srf.transpiler.fortxtrans.fortXTrans.ExponentExpr#getLeft <em>Left</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Left</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.ExponentExpr#getLeft()
   * @see #getExponentExpr()
   * @generated
   */
  EReference getExponentExpr_Left();

  /**
   * Returns the meta object for the attribute '{@link srf.transpiler.fortxtrans.fortXTrans.ExponentExpr#getOp <em>Op</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Op</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.ExponentExpr#getOp()
   * @see #getExponentExpr()
   * @generated
   */
  EAttribute getExponentExpr_Op();

  /**
   * Returns the meta object for the containment reference '{@link srf.transpiler.fortxtrans.fortXTrans.ExponentExpr#getRight <em>Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Right</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.ExponentExpr#getRight()
   * @see #getExponentExpr()
   * @generated
   */
  EReference getExponentExpr_Right();

  /**
   * Returns the meta object for class '{@link srf.transpiler.fortxtrans.fortXTrans.Assop <em>Assop</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Assop</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.Assop
   * @generated
   */
  EClass getAssop();

  /**
   * Returns the meta object for the containment reference '{@link srf.transpiler.fortxtrans.fortXTrans.Assop#getLeft <em>Left</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Left</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.Assop#getLeft()
   * @see #getAssop()
   * @generated
   */
  EReference getAssop_Left();

  /**
   * Returns the meta object for the attribute '{@link srf.transpiler.fortxtrans.fortXTrans.Assop#getOp <em>Op</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Op</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.Assop#getOp()
   * @see #getAssop()
   * @generated
   */
  EAttribute getAssop_Op();

  /**
   * Returns the meta object for the containment reference '{@link srf.transpiler.fortxtrans.fortXTrans.Assop#getRight <em>Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Right</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.Assop#getRight()
   * @see #getAssop()
   * @generated
   */
  EReference getAssop_Right();

  /**
   * Returns the meta object for class '{@link srf.transpiler.fortxtrans.fortXTrans.FCall <em>FCall</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>FCall</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.FCall
   * @generated
   */
  EClass getFCall();

  /**
   * Returns the meta object for the containment reference '{@link srf.transpiler.fortxtrans.fortXTrans.FCall#getLeft <em>Left</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Left</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.FCall#getLeft()
   * @see #getFCall()
   * @generated
   */
  EReference getFCall_Left();

  /**
   * Returns the meta object for the containment reference '{@link srf.transpiler.fortxtrans.fortXTrans.FCall#getRight <em>Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Right</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.FCall#getRight()
   * @see #getFCall()
   * @generated
   */
  EReference getFCall_Right();

  /**
   * Returns the meta object for class '{@link srf.transpiler.fortxtrans.fortXTrans.ArrayInit <em>Array Init</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Array Init</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.ArrayInit
   * @generated
   */
  EClass getArrayInit();

  /**
   * Returns the meta object for the containment reference '{@link srf.transpiler.fortxtrans.fortXTrans.ArrayInit#getLeft <em>Left</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Left</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.ArrayInit#getLeft()
   * @see #getArrayInit()
   * @generated
   */
  EReference getArrayInit_Left();

  /**
   * Returns the meta object for the containment reference '{@link srf.transpiler.fortxtrans.fortXTrans.ArrayInit#getType <em>Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Type</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.ArrayInit#getType()
   * @see #getArrayInit()
   * @generated
   */
  EReference getArrayInit_Type();

  /**
   * Returns the meta object for the containment reference '{@link srf.transpiler.fortxtrans.fortXTrans.ArrayInit#getSizes <em>Sizes</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Sizes</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.ArrayInit#getSizes()
   * @see #getArrayInit()
   * @generated
   */
  EReference getArrayInit_Sizes();

  /**
   * Returns the meta object for the containment reference '{@link srf.transpiler.fortxtrans.fortXTrans.ArrayInit#getFiller <em>Filler</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Filler</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.ArrayInit#getFiller()
   * @see #getArrayInit()
   * @generated
   */
  EReference getArrayInit_Filler();

  /**
   * Returns the meta object for class '{@link srf.transpiler.fortxtrans.fortXTrans.Not <em>Not</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Not</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.Not
   * @generated
   */
  EClass getNot();

  /**
   * Returns the meta object for the containment reference '{@link srf.transpiler.fortxtrans.fortXTrans.Not#getExpression <em>Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Expression</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.Not#getExpression()
   * @see #getNot()
   * @generated
   */
  EReference getNot_Expression();

  /**
   * Returns the meta object for class '{@link srf.transpiler.fortxtrans.fortXTrans.Neg <em>Neg</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Neg</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.Neg
   * @generated
   */
  EClass getNeg();

  /**
   * Returns the meta object for the containment reference '{@link srf.transpiler.fortxtrans.fortXTrans.Neg#getExpression <em>Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Expression</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.Neg#getExpression()
   * @see #getNeg()
   * @generated
   */
  EReference getNeg_Expression();

  /**
   * Returns the meta object for class '{@link srf.transpiler.fortxtrans.fortXTrans.Paran <em>Paran</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Paran</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.Paran
   * @generated
   */
  EClass getParan();

  /**
   * Returns the meta object for the containment reference '{@link srf.transpiler.fortxtrans.fortXTrans.Paran#getExp <em>Exp</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Exp</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.Paran#getExp()
   * @see #getParan()
   * @generated
   */
  EReference getParan_Exp();

  /**
   * Returns the meta object for class '{@link srf.transpiler.fortxtrans.fortXTrans.IntConst <em>Int Const</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Int Const</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.IntConst
   * @generated
   */
  EClass getIntConst();

  /**
   * Returns the meta object for the attribute '{@link srf.transpiler.fortxtrans.fortXTrans.IntConst#getValue <em>Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Value</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.IntConst#getValue()
   * @see #getIntConst()
   * @generated
   */
  EAttribute getIntConst_Value();

  /**
   * Returns the meta object for class '{@link srf.transpiler.fortxtrans.fortXTrans.FloatConst <em>Float Const</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Float Const</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.FloatConst
   * @generated
   */
  EClass getFloatConst();

  /**
   * Returns the meta object for the attribute '{@link srf.transpiler.fortxtrans.fortXTrans.FloatConst#getValue <em>Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Value</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.FloatConst#getValue()
   * @see #getFloatConst()
   * @generated
   */
  EAttribute getFloatConst_Value();

  /**
   * Returns the meta object for class '{@link srf.transpiler.fortxtrans.fortXTrans.StrConst <em>Str Const</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Str Const</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.StrConst
   * @generated
   */
  EClass getStrConst();

  /**
   * Returns the meta object for the attribute '{@link srf.transpiler.fortxtrans.fortXTrans.StrConst#getValue <em>Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Value</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.StrConst#getValue()
   * @see #getStrConst()
   * @generated
   */
  EAttribute getStrConst_Value();

  /**
   * Returns the meta object for class '{@link srf.transpiler.fortxtrans.fortXTrans.BoolConst <em>Bool Const</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Bool Const</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.BoolConst
   * @generated
   */
  EClass getBoolConst();

  /**
   * Returns the meta object for the attribute '{@link srf.transpiler.fortxtrans.fortXTrans.BoolConst#getValue <em>Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Value</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.BoolConst#getValue()
   * @see #getBoolConst()
   * @generated
   */
  EAttribute getBoolConst_Value();

  /**
   * Returns the factory that creates the instances of the model.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the factory that creates the instances of the model.
   * @generated
   */
  FortXTransFactory getFortXTransFactory();

  /**
   * <!-- begin-user-doc -->
   * Defines literals for the meta objects that represent
   * <ul>
   *   <li>each class,</li>
   *   <li>each feature of each class,</li>
   *   <li>each enum,</li>
   *   <li>and each data type</li>
   * </ul>
   * <!-- end-user-doc -->
   * @generated
   */
  interface Literals
  {
    /**
     * The meta object literal for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.ModelImpl <em>Model</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.ModelImpl
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getModel()
     * @generated
     */
    EClass MODEL = eINSTANCE.getModel();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute MODEL__NAME = eINSTANCE.getModel_Name();

    /**
     * The meta object literal for the '<em><b>Imports</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MODEL__IMPORTS = eINSTANCE.getModel_Imports();

    /**
     * The meta object literal for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.ComponentImpl <em>Component</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.ComponentImpl
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getComponent()
     * @generated
     */
    EClass COMPONENT = eINSTANCE.getComponent();

    /**
     * The meta object literal for the '<em><b>Exports</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference COMPONENT__EXPORTS = eINSTANCE.getComponent_Exports();

    /**
     * The meta object literal for the '<em><b>Decls</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference COMPONENT__DECLS = eINSTANCE.getComponent_Decls();

    /**
     * The meta object literal for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.APIImpl <em>API</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.APIImpl
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getAPI()
     * @generated
     */
    EClass API = eINSTANCE.getAPI();

    /**
     * The meta object literal for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.ImportImpl <em>Import</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.ImportImpl
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getImport()
     * @generated
     */
    EClass IMPORT = eINSTANCE.getImport();

    /**
     * The meta object literal for the '<em><b>Imps</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute IMPORT__IMPS = eINSTANCE.getImport_Imps();

    /**
     * The meta object literal for the '<em><b>Imported Names</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference IMPORT__IMPORTED_NAMES = eINSTANCE.getImport_ImportedNames();

    /**
     * The meta object literal for the '<em><b>Api</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute IMPORT__API = eINSTANCE.getImport_Api();

    /**
     * The meta object literal for the '<em><b>Aliasedimported Names</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference IMPORT__ALIASEDIMPORTED_NAMES = eINSTANCE.getImport_AliasedimportedNames();

    /**
     * The meta object literal for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.ExportImpl <em>Export</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.ExportImpl
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getExport()
     * @generated
     */
    EClass EXPORT = eINSTANCE.getExport();

    /**
     * The meta object literal for the '<em><b>Exp</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute EXPORT__EXP = eINSTANCE.getExport_Exp();

    /**
     * The meta object literal for the '<em><b>Exported Name</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPORT__EXPORTED_NAME = eINSTANCE.getExport_ExportedName();

    /**
     * The meta object literal for the '<em><b>Brack</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute EXPORT__BRACK = eINSTANCE.getExport_Brack();

    /**
     * The meta object literal for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.ImportedNamesImpl <em>Imported Names</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.ImportedNamesImpl
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getImportedNames()
     * @generated
     */
    EClass IMPORTED_NAMES = eINSTANCE.getImportedNames();

    /**
     * The meta object literal for the '<em><b>Impname</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference IMPORTED_NAMES__IMPNAME = eINSTANCE.getImportedNames_Impname();

    /**
     * The meta object literal for the '<em><b>Except</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute IMPORTED_NAMES__EXCEPT = eINSTANCE.getImportedNames_Except();

    /**
     * The meta object literal for the '<em><b>Simp</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference IMPORTED_NAMES__SIMP = eINSTANCE.getImportedNames_Simp();

    /**
     * The meta object literal for the '<em><b>Simp List</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference IMPORTED_NAMES__SIMP_LIST = eINSTANCE.getImportedNames_SimpList();

    /**
     * The meta object literal for the '<em><b>Comma</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute IMPORTED_NAMES__COMMA = eINSTANCE.getImportedNames_Comma();

    /**
     * The meta object literal for the '<em><b>Dots</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute IMPORTED_NAMES__DOTS = eINSTANCE.getImportedNames_Dots();

    /**
     * The meta object literal for the '<em><b>Asname</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute IMPORTED_NAMES__ASNAME = eINSTANCE.getImportedNames_Asname();

    /**
     * The meta object literal for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.QualifiedNameImpl <em>Qualified Name</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.QualifiedNameImpl
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getQualifiedName()
     * @generated
     */
    EClass QUALIFIED_NAME = eINSTANCE.getQualifiedName();

    /**
     * The meta object literal for the '<em><b>S</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference QUALIFIED_NAME__S = eINSTANCE.getQualifiedName_S();

    /**
     * The meta object literal for the '<em><b>Dots</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute QUALIFIED_NAME__DOTS = eINSTANCE.getQualifiedName_Dots();

    /**
     * The meta object literal for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.QualifiedImpl <em>Qualified</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.QualifiedImpl
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getQualified()
     * @generated
     */
    EClass QUALIFIED = eINSTANCE.getQualified();

    /**
     * The meta object literal for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.QualifiedNameTupleImpl <em>Qualified Name Tuple</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.QualifiedNameTupleImpl
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getQualifiedNameTuple()
     * @generated
     */
    EClass QUALIFIED_NAME_TUPLE = eINSTANCE.getQualifiedNameTuple();

    /**
     * The meta object literal for the '<em><b>Qlist</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference QUALIFIED_NAME_TUPLE__QLIST = eINSTANCE.getQualifiedNameTuple_Qlist();

    /**
     * The meta object literal for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.SimpleNamesImpl <em>Simple Names</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.SimpleNamesImpl
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getSimpleNames()
     * @generated
     */
    EClass SIMPLE_NAMES = eINSTANCE.getSimpleNames();

    /**
     * The meta object literal for the '<em><b>Name List</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference SIMPLE_NAMES__NAME_LIST = eINSTANCE.getSimpleNames_NameList();

    /**
     * The meta object literal for the '<em><b>Brack</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute SIMPLE_NAMES__BRACK = eINSTANCE.getSimpleNames_Brack();

    /**
     * The meta object literal for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.SimpleNameImpl <em>Simple Name</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.SimpleNameImpl
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getSimpleName()
     * @generated
     */
    EClass SIMPLE_NAME = eINSTANCE.getSimpleName();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute SIMPLE_NAME__NAME = eINSTANCE.getSimpleName_Name();

    /**
     * The meta object literal for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.AliasedSimpleNameImpl <em>Aliased Simple Name</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.AliasedSimpleNameImpl
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getAliasedSimpleName()
     * @generated
     */
    EClass ALIASED_SIMPLE_NAME = eINSTANCE.getAliasedSimpleName();

    /**
     * The meta object literal for the '<em><b>Orig</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ALIASED_SIMPLE_NAME__ORIG = eINSTANCE.getAliasedSimpleName_Orig();

    /**
     * The meta object literal for the '<em><b>As Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ALIASED_SIMPLE_NAME__AS_NAME = eINSTANCE.getAliasedSimpleName_AsName();

    /**
     * The meta object literal for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.AliasedAPINamesImpl <em>Aliased API Names</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.AliasedAPINamesImpl
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getAliasedAPINames()
     * @generated
     */
    EClass ALIASED_API_NAMES = eINSTANCE.getAliasedAPINames();

    /**
     * The meta object literal for the '<em><b>Name List</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ALIASED_API_NAMES__NAME_LIST = eINSTANCE.getAliasedAPINames_NameList();

    /**
     * The meta object literal for the '<em><b>Brack</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ALIASED_API_NAMES__BRACK = eINSTANCE.getAliasedAPINames_Brack();

    /**
     * The meta object literal for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.AliasedAPINameImpl <em>Aliased API Name</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.AliasedAPINameImpl
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getAliasedAPIName()
     * @generated
     */
    EClass ALIASED_API_NAME = eINSTANCE.getAliasedAPIName();

    /**
     * The meta object literal for the '<em><b>Orig</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ALIASED_API_NAME__ORIG = eINSTANCE.getAliasedAPIName_Orig();

    /**
     * The meta object literal for the '<em><b>As Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ALIASED_API_NAME__AS_NAME = eINSTANCE.getAliasedAPIName_AsName();

    /**
     * The meta object literal for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.DeclsImpl <em>Decls</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.DeclsImpl
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getDecls()
     * @generated
     */
    EClass DECLS = eINSTANCE.getDecls();

    /**
     * The meta object literal for the '<em><b>Decls</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference DECLS__DECLS = eINSTANCE.getDecls_Decls();

    /**
     * The meta object literal for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.DeclImpl <em>Decl</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.DeclImpl
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getDecl()
     * @generated
     */
    EClass DECL = eINSTANCE.getDecl();

    /**
     * The meta object literal for the '<em><b>Function</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference DECL__FUNCTION = eINSTANCE.getDecl_Function();

    /**
     * The meta object literal for the '<em><b>Field</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference DECL__FIELD = eINSTANCE.getDecl_Field();

    /**
     * The meta object literal for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.ValParamImpl <em>Val Param</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.ValParamImpl
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getValParam()
     * @generated
     */
    EClass VAL_PARAM = eINSTANCE.getValParam();

    /**
     * The meta object literal for the '<em><b>Params</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference VAL_PARAM__PARAMS = eINSTANCE.getValParam_Params();

    /**
     * The meta object literal for the '<em><b>Brack</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute VAL_PARAM__BRACK = eINSTANCE.getValParam_Brack();

    /**
     * The meta object literal for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.ParamImpl <em>Param</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.ParamImpl
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getParam()
     * @generated
     */
    EClass PARAM = eINSTANCE.getParam();

    /**
     * The meta object literal for the '<em><b>Par Id</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PARAM__PAR_ID = eINSTANCE.getParam_ParId();

    /**
     * The meta object literal for the '<em><b>Istype</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PARAM__ISTYPE = eINSTANCE.getParam_Istype();

    /**
     * The meta object literal for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.RetTypeImpl <em>Ret Type</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.RetTypeImpl
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getRetType()
     * @generated
     */
    EClass RET_TYPE = eINSTANCE.getRetType();

    /**
     * The meta object literal for the '<em><b>Empty</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute RET_TYPE__EMPTY = eINSTANCE.getRetType_Empty();

    /**
     * The meta object literal for the '<em><b>Type</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference RET_TYPE__TYPE = eINSTANCE.getRetType_Type();

    /**
     * The meta object literal for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.TupleTypeImpl <em>Tuple Type</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.TupleTypeImpl
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getTupleType()
     * @generated
     */
    EClass TUPLE_TYPE = eINSTANCE.getTupleType();

    /**
     * The meta object literal for the '<em><b>Types</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference TUPLE_TYPE__TYPES = eINSTANCE.getTupleType_Types();

    /**
     * The meta object literal for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.FnModsImpl <em>Fn Mods</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.FnModsImpl
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getFnMods()
     * @generated
     */
    EClass FN_MODS = eINSTANCE.getFnMods();

    /**
     * The meta object literal for the '<em><b>Mods</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FN_MODS__MODS = eINSTANCE.getFnMods_Mods();

    /**
     * The meta object literal for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.FnModImpl <em>Fn Mod</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.FnModImpl
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getFnMod()
     * @generated
     */
    EClass FN_MOD = eINSTANCE.getFnMod();

    /**
     * The meta object literal for the '<em><b>Modtype</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute FN_MOD__MODTYPE = eINSTANCE.getFnMod_Modtype();

    /**
     * The meta object literal for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.FnDeclImpl <em>Fn Decl</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.FnDeclImpl
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getFnDecl()
     * @generated
     */
    EClass FN_DECL = eINSTANCE.getFnDecl();

    /**
     * The meta object literal for the '<em><b>Mods</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FN_DECL__MODS = eINSTANCE.getFnDecl_Mods();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute FN_DECL__NAME = eINSTANCE.getFnDecl_Name();

    /**
     * The meta object literal for the '<em><b>Params</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FN_DECL__PARAMS = eINSTANCE.getFnDecl_Params();

    /**
     * The meta object literal for the '<em><b>Ret Val</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FN_DECL__RET_VAL = eINSTANCE.getFnDecl_RetVal();

    /**
     * The meta object literal for the '<em><b>Body</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute FN_DECL__BODY = eINSTANCE.getFnDecl_Body();

    /**
     * The meta object literal for the '<em><b>Fn Itself</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FN_DECL__FN_ITSELF = eINSTANCE.getFnDecl_FnItself();

    /**
     * The meta object literal for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.StmntsImpl <em>Stmnts</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.StmntsImpl
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getStmnts()
     * @generated
     */
    EClass STMNTS = eINSTANCE.getStmnts();

    /**
     * The meta object literal for the '<em><b>Front</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference STMNTS__FRONT = eINSTANCE.getStmnts_Front();

    /**
     * The meta object literal for the '<em><b>Delims</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference STMNTS__DELIMS = eINSTANCE.getStmnts_Delims();

    /**
     * The meta object literal for the '<em><b>Loc Var</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference STMNTS__LOC_VAR = eINSTANCE.getStmnts_LocVar();

    /**
     * The meta object literal for the '<em><b>Exp</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference STMNTS__EXP = eINSTANCE.getStmnts_Exp();

    /**
     * The meta object literal for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.StmntImpl <em>Stmnt</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.StmntImpl
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getStmnt()
     * @generated
     */
    EClass STMNT = eINSTANCE.getStmnt();

    /**
     * The meta object literal for the '<em><b>Delim</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference STMNT__DELIM = eINSTANCE.getStmnt_Delim();

    /**
     * The meta object literal for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.StmntListImpl <em>Stmnt List</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.StmntListImpl
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getStmntList()
     * @generated
     */
    EClass STMNT_LIST = eINSTANCE.getStmntList();

    /**
     * The meta object literal for the '<em><b>Delim</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference STMNT_LIST__DELIM = eINSTANCE.getStmntList_Delim();

    /**
     * The meta object literal for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.ExprImpl <em>Expr</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.ExprImpl
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getExpr()
     * @generated
     */
    EClass EXPR = eINSTANCE.getExpr();

    /**
     * The meta object literal for the '<em><b>Tail</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPR__TAIL = eINSTANCE.getExpr_Tail();

    /**
     * The meta object literal for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.ExprListImpl <em>Expr List</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.ExprListImpl
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getExprList()
     * @generated
     */
    EClass EXPR_LIST = eINSTANCE.getExprList();

    /**
     * The meta object literal for the '<em><b>Exps</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPR_LIST__EXPS = eINSTANCE.getExprList_Exps();

    /**
     * The meta object literal for the '<em><b>Exp</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPR_LIST__EXP = eINSTANCE.getExprList_Exp();

    /**
     * The meta object literal for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.ExprTailImpl <em>Expr Tail</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.ExprTailImpl
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getExprTail()
     * @generated
     */
    EClass EXPR_TAIL = eINSTANCE.getExprTail();

    /**
     * The meta object literal for the '<em><b>Type</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPR_TAIL__TYPE = eINSTANCE.getExprTail_Type();

    /**
     * The meta object literal for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.DelimitedExprImpl <em>Delimited Expr</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.DelimitedExprImpl
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getDelimitedExpr()
     * @generated
     */
    EClass DELIMITED_EXPR = eINSTANCE.getDelimitedExpr();

    /**
     * The meta object literal for the '<em><b>Dod</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference DELIMITED_EXPR__DOD = eINSTANCE.getDelimitedExpr_Dod();

    /**
     * The meta object literal for the '<em><b>Ret</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute DELIMITED_EXPR__RET = eINSTANCE.getDelimitedExpr_Ret();

    /**
     * The meta object literal for the '<em><b>Block</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference DELIMITED_EXPR__BLOCK = eINSTANCE.getDelimitedExpr_Block();

    /**
     * The meta object literal for the '<em><b>Awhile</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute DELIMITED_EXPR__AWHILE = eINSTANCE.getDelimitedExpr_Awhile();

    /**
     * The meta object literal for the '<em><b>Expr</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference DELIMITED_EXPR__EXPR = eINSTANCE.getDelimitedExpr_Expr();

    /**
     * The meta object literal for the '<em><b>Whiledod</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference DELIMITED_EXPR__WHILEDOD = eINSTANCE.getDelimitedExpr_Whiledod();

    /**
     * The meta object literal for the '<em><b>Afor</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute DELIMITED_EXPR__AFOR = eINSTANCE.getDelimitedExpr_Afor();

    /**
     * The meta object literal for the '<em><b>Gen</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference DELIMITED_EXPR__GEN = eINSTANCE.getDelimitedExpr_Gen();

    /**
     * The meta object literal for the '<em><b>Dofront</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference DELIMITED_EXPR__DOFRONT = eINSTANCE.getDelimitedExpr_Dofront();

    /**
     * The meta object literal for the '<em><b>Anif</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute DELIMITED_EXPR__ANIF = eINSTANCE.getDelimitedExpr_Anif();

    /**
     * The meta object literal for the '<em><b>Cond</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference DELIMITED_EXPR__COND = eINSTANCE.getDelimitedExpr_Cond();

    /**
     * The meta object literal for the '<em><b>Blocks</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference DELIMITED_EXPR__BLOCKS = eINSTANCE.getDelimitedExpr_Blocks();

    /**
     * The meta object literal for the '<em><b>Elifs</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference DELIMITED_EXPR__ELIFS = eINSTANCE.getDelimitedExpr_Elifs();

    /**
     * The meta object literal for the '<em><b>Els</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference DELIMITED_EXPR__ELS = eINSTANCE.getDelimitedExpr_Els();

    /**
     * The meta object literal for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.ElifsImpl <em>Elifs</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.ElifsImpl
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getElifs()
     * @generated
     */
    EClass ELIFS = eINSTANCE.getElifs();

    /**
     * The meta object literal for the '<em><b>E</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ELIFS__E = eINSTANCE.getElifs_E();

    /**
     * The meta object literal for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.ElifImpl <em>Elif</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.ElifImpl
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getElif()
     * @generated
     */
    EClass ELIF = eINSTANCE.getElif();

    /**
     * The meta object literal for the '<em><b>Expr</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ELIF__EXPR = eINSTANCE.getElif_Expr();

    /**
     * The meta object literal for the '<em><b>Block</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ELIF__BLOCK = eINSTANCE.getElif_Block();

    /**
     * The meta object literal for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.ElseImpl <em>Else</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.ElseImpl
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getElse()
     * @generated
     */
    EClass ELSE = eINSTANCE.getElse();

    /**
     * The meta object literal for the '<em><b>Block</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ELSE__BLOCK = eINSTANCE.getElse_Block();

    /**
     * The meta object literal for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.GeneratorsImpl <em>Generators</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.GeneratorsImpl
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getGenerators()
     * @generated
     */
    EClass GENERATORS = eINSTANCE.getGenerators();

    /**
     * The meta object literal for the '<em><b>Binding</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference GENERATORS__BINDING = eINSTANCE.getGenerators_Binding();

    /**
     * The meta object literal for the '<em><b>Clause</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference GENERATORS__CLAUSE = eINSTANCE.getGenerators_Clause();

    /**
     * The meta object literal for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.BindingImpl <em>Binding</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.BindingImpl
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getBinding()
     * @generated
     */
    EClass BINDING = eINSTANCE.getBinding();

    /**
     * The meta object literal for the '<em><b>Idtup</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference BINDING__IDTUP = eINSTANCE.getBinding_Idtup();

    /**
     * The meta object literal for the '<em><b>G</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference BINDING__G = eINSTANCE.getBinding_G();

    /**
     * The meta object literal for the '<em><b>Seq</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute BINDING__SEQ = eINSTANCE.getBinding_Seq();

    /**
     * The meta object literal for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.GenSourceImpl <em>Gen Source</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.GenSourceImpl
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getGenSource()
     * @generated
     */
    EClass GEN_SOURCE = eINSTANCE.getGenSource();

    /**
     * The meta object literal for the '<em><b>Start</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference GEN_SOURCE__START = eINSTANCE.getGenSource_Start();

    /**
     * The meta object literal for the '<em><b>End</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference GEN_SOURCE__END = eINSTANCE.getGenSource_End();

    /**
     * The meta object literal for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.GenClauseImpl <em>Gen Clause</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.GenClauseImpl
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getGenClause()
     * @generated
     */
    EClass GEN_CLAUSE = eINSTANCE.getGenClause();

    /**
     * The meta object literal for the '<em><b>Binding</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference GEN_CLAUSE__BINDING = eINSTANCE.getGenClause_Binding();

    /**
     * The meta object literal for the '<em><b>Expr</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference GEN_CLAUSE__EXPR = eINSTANCE.getGenClause_Expr();

    /**
     * The meta object literal for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.BlockElemsImpl <em>Block Elems</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.BlockElemsImpl
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getBlockElems()
     * @generated
     */
    EClass BLOCK_ELEMS = eINSTANCE.getBlockElems();

    /**
     * The meta object literal for the '<em><b>Block</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference BLOCK_ELEMS__BLOCK = eINSTANCE.getBlockElems_Block();

    /**
     * The meta object literal for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.BlockElemImpl <em>Block Elem</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.BlockElemImpl
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getBlockElem()
     * @generated
     */
    EClass BLOCK_ELEM = eINSTANCE.getBlockElem();

    /**
     * The meta object literal for the '<em><b>St</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference BLOCK_ELEM__ST = eINSTANCE.getBlockElem_St();

    /**
     * The meta object literal for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.DoImpl <em>Do</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.DoImpl
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getDo()
     * @generated
     */
    EClass DO = eINSTANCE.getDo();

    /**
     * The meta object literal for the '<em><b>Dofs</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference DO__DOFS = eINSTANCE.getDo_Dofs();

    /**
     * The meta object literal for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.DoFrontImpl <em>Do Front</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.DoFrontImpl
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getDoFront()
     * @generated
     */
    EClass DO_FRONT = eINSTANCE.getDoFront();

    /**
     * The meta object literal for the '<em><b>At</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute DO_FRONT__AT = eINSTANCE.getDoFront_At();

    /**
     * The meta object literal for the '<em><b>Exp</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference DO_FRONT__EXP = eINSTANCE.getDoFront_Exp();

    /**
     * The meta object literal for the '<em><b>Atom</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute DO_FRONT__ATOM = eINSTANCE.getDoFront_Atom();

    /**
     * The meta object literal for the '<em><b>Block</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference DO_FRONT__BLOCK = eINSTANCE.getDoFront_Block();

    /**
     * The meta object literal for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.IsTypeImpl <em>Is Type</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.IsTypeImpl
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getIsType()
     * @generated
     */
    EClass IS_TYPE = eINSTANCE.getIsType();

    /**
     * The meta object literal for the '<em><b>Type</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference IS_TYPE__TYPE = eINSTANCE.getIsType_Type();

    /**
     * The meta object literal for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.FieldDeclImpl <em>Field Decl</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.FieldDeclImpl
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getFieldDecl()
     * @generated
     */
    EClass FIELD_DECL = eINSTANCE.getFieldDecl();

    /**
     * The meta object literal for the '<em><b>Pri</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute FIELD_DECL__PRI = eINSTANCE.getFieldDecl_Pri();

    /**
     * The meta object literal for the '<em><b>Mut</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute FIELD_DECL__MUT = eINSTANCE.getFieldDecl_Mut();

    /**
     * The meta object literal for the '<em><b>Vars</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FIELD_DECL__VARS = eINSTANCE.getFieldDecl_Vars();

    /**
     * The meta object literal for the '<em><b>Init</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FIELD_DECL__INIT = eINSTANCE.getFieldDecl_Init();

    /**
     * The meta object literal for the '<em><b>Idtup</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FIELD_DECL__IDTUP = eINSTANCE.getFieldDecl_Idtup();

    /**
     * The meta object literal for the '<em><b>Type</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FIELD_DECL__TYPE = eINSTANCE.getFieldDecl_Type();

    /**
     * The meta object literal for the '<em><b>Tuptype</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FIELD_DECL__TUPTYPE = eINSTANCE.getFieldDecl_Tuptype();

    /**
     * The meta object literal for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.NoNewlineVarWTypesImpl <em>No Newline Var WTypes</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.NoNewlineVarWTypesImpl
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getNoNewlineVarWTypes()
     * @generated
     */
    EClass NO_NEWLINE_VAR_WTYPES = eINSTANCE.getNoNewlineVarWTypes();

    /**
     * The meta object literal for the '<em><b>Single</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference NO_NEWLINE_VAR_WTYPES__SINGLE = eINSTANCE.getNoNewlineVarWTypes_Single();

    /**
     * The meta object literal for the '<em><b>Arrsize</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference NO_NEWLINE_VAR_WTYPES__ARRSIZE = eINSTANCE.getNoNewlineVarWTypes_Arrsize();

    /**
     * The meta object literal for the '<em><b>Multiple</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference NO_NEWLINE_VAR_WTYPES__MULTIPLE = eINSTANCE.getNoNewlineVarWTypes_Multiple();

    /**
     * The meta object literal for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.NoNewlineVarWTypeImpl <em>No Newline Var WType</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.NoNewlineVarWTypeImpl
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getNoNewlineVarWType()
     * @generated
     */
    EClass NO_NEWLINE_VAR_WTYPE = eINSTANCE.getNoNewlineVarWType();

    /**
     * The meta object literal for the '<em><b>Bid</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference NO_NEWLINE_VAR_WTYPE__BID = eINSTANCE.getNoNewlineVarWType_Bid();

    /**
     * The meta object literal for the '<em><b>Istype</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference NO_NEWLINE_VAR_WTYPE__ISTYPE = eINSTANCE.getNoNewlineVarWType_Istype();

    /**
     * The meta object literal for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.LiteralTupleImpl <em>Literal Tuple</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.LiteralTupleImpl
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getLiteralTuple()
     * @generated
     */
    EClass LITERAL_TUPLE = eINSTANCE.getLiteralTuple();

    /**
     * The meta object literal for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.LiteralTupImpl <em>Literal Tup</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.LiteralTupImpl
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getLiteralTup()
     * @generated
     */
    EClass LITERAL_TUP = eINSTANCE.getLiteralTup();

    /**
     * The meta object literal for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.LiteralListImpl <em>Literal List</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.LiteralListImpl
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getLiteralList()
     * @generated
     */
    EClass LITERAL_LIST = eINSTANCE.getLiteralList();

    /**
     * The meta object literal for the '<em><b>Lit</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference LITERAL_LIST__LIT = eINSTANCE.getLiteralList_Lit();

    /**
     * The meta object literal for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.LiteralImpl <em>Literal</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.LiteralImpl
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getLiteral()
     * @generated
     */
    EClass LITERAL = eINSTANCE.getLiteral();

    /**
     * The meta object literal for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.LocalVarDeclImpl <em>Local Var Decl</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.LocalVarDeclImpl
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getLocalVarDecl()
     * @generated
     */
    EClass LOCAL_VAR_DECL = eINSTANCE.getLocalVarDecl();

    /**
     * The meta object literal for the '<em><b>Mut</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute LOCAL_VAR_DECL__MUT = eINSTANCE.getLocalVarDecl_Mut();

    /**
     * The meta object literal for the '<em><b>Vars</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference LOCAL_VAR_DECL__VARS = eINSTANCE.getLocalVarDecl_Vars();

    /**
     * The meta object literal for the '<em><b>Init</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference LOCAL_VAR_DECL__INIT = eINSTANCE.getLocalVarDecl_Init();

    /**
     * The meta object literal for the '<em><b>Idtup</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference LOCAL_VAR_DECL__IDTUP = eINSTANCE.getLocalVarDecl_Idtup();

    /**
     * The meta object literal for the '<em><b>Type</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference LOCAL_VAR_DECL__TYPE = eINSTANCE.getLocalVarDecl_Type();

    /**
     * The meta object literal for the '<em><b>Tuptype</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference LOCAL_VAR_DECL__TUPTYPE = eINSTANCE.getLocalVarDecl_Tuptype();

    /**
     * The meta object literal for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.OrImpl <em>Or</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.OrImpl
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getOr()
     * @generated
     */
    EClass OR = eINSTANCE.getOr();

    /**
     * The meta object literal for the '<em><b>Left</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference OR__LEFT = eINSTANCE.getOr_Left();

    /**
     * The meta object literal for the '<em><b>Right</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference OR__RIGHT = eINSTANCE.getOr_Right();

    /**
     * The meta object literal for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.AndImpl <em>And</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.AndImpl
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getAnd()
     * @generated
     */
    EClass AND = eINSTANCE.getAnd();

    /**
     * The meta object literal for the '<em><b>Left</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference AND__LEFT = eINSTANCE.getAnd_Left();

    /**
     * The meta object literal for the '<em><b>Right</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference AND__RIGHT = eINSTANCE.getAnd_Right();

    /**
     * The meta object literal for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.EqualityImpl <em>Equality</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.EqualityImpl
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getEquality()
     * @generated
     */
    EClass EQUALITY = eINSTANCE.getEquality();

    /**
     * The meta object literal for the '<em><b>Left</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EQUALITY__LEFT = eINSTANCE.getEquality_Left();

    /**
     * The meta object literal for the '<em><b>Op</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute EQUALITY__OP = eINSTANCE.getEquality_Op();

    /**
     * The meta object literal for the '<em><b>Right</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EQUALITY__RIGHT = eINSTANCE.getEquality_Right();

    /**
     * The meta object literal for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.ComparisonImpl <em>Comparison</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.ComparisonImpl
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getComparison()
     * @generated
     */
    EClass COMPARISON = eINSTANCE.getComparison();

    /**
     * The meta object literal for the '<em><b>Left</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference COMPARISON__LEFT = eINSTANCE.getComparison_Left();

    /**
     * The meta object literal for the '<em><b>Op</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute COMPARISON__OP = eINSTANCE.getComparison_Op();

    /**
     * The meta object literal for the '<em><b>Right</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference COMPARISON__RIGHT = eINSTANCE.getComparison_Right();

    /**
     * The meta object literal for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.AddExprImpl <em>Add Expr</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.AddExprImpl
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getAddExpr()
     * @generated
     */
    EClass ADD_EXPR = eINSTANCE.getAddExpr();

    /**
     * The meta object literal for the '<em><b>Left</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ADD_EXPR__LEFT = eINSTANCE.getAddExpr_Left();

    /**
     * The meta object literal for the '<em><b>Right</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ADD_EXPR__RIGHT = eINSTANCE.getAddExpr_Right();

    /**
     * The meta object literal for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.SubExprImpl <em>Sub Expr</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.SubExprImpl
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getSubExpr()
     * @generated
     */
    EClass SUB_EXPR = eINSTANCE.getSubExpr();

    /**
     * The meta object literal for the '<em><b>Left</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference SUB_EXPR__LEFT = eINSTANCE.getSubExpr_Left();

    /**
     * The meta object literal for the '<em><b>Right</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference SUB_EXPR__RIGHT = eINSTANCE.getSubExpr_Right();

    /**
     * The meta object literal for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.DivExprImpl <em>Div Expr</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.DivExprImpl
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getDivExpr()
     * @generated
     */
    EClass DIV_EXPR = eINSTANCE.getDivExpr();

    /**
     * The meta object literal for the '<em><b>Left</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference DIV_EXPR__LEFT = eINSTANCE.getDivExpr_Left();

    /**
     * The meta object literal for the '<em><b>Right</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference DIV_EXPR__RIGHT = eINSTANCE.getDivExpr_Right();

    /**
     * The meta object literal for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.MultExprImpl <em>Mult Expr</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.MultExprImpl
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getMultExpr()
     * @generated
     */
    EClass MULT_EXPR = eINSTANCE.getMultExpr();

    /**
     * The meta object literal for the '<em><b>Left</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MULT_EXPR__LEFT = eINSTANCE.getMultExpr_Left();

    /**
     * The meta object literal for the '<em><b>Right</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MULT_EXPR__RIGHT = eINSTANCE.getMultExpr_Right();

    /**
     * The meta object literal for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.ExponentExprImpl <em>Exponent Expr</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.ExponentExprImpl
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getExponentExpr()
     * @generated
     */
    EClass EXPONENT_EXPR = eINSTANCE.getExponentExpr();

    /**
     * The meta object literal for the '<em><b>Left</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPONENT_EXPR__LEFT = eINSTANCE.getExponentExpr_Left();

    /**
     * The meta object literal for the '<em><b>Op</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute EXPONENT_EXPR__OP = eINSTANCE.getExponentExpr_Op();

    /**
     * The meta object literal for the '<em><b>Right</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPONENT_EXPR__RIGHT = eINSTANCE.getExponentExpr_Right();

    /**
     * The meta object literal for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.AssopImpl <em>Assop</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.AssopImpl
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getAssop()
     * @generated
     */
    EClass ASSOP = eINSTANCE.getAssop();

    /**
     * The meta object literal for the '<em><b>Left</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ASSOP__LEFT = eINSTANCE.getAssop_Left();

    /**
     * The meta object literal for the '<em><b>Op</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ASSOP__OP = eINSTANCE.getAssop_Op();

    /**
     * The meta object literal for the '<em><b>Right</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ASSOP__RIGHT = eINSTANCE.getAssop_Right();

    /**
     * The meta object literal for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.FCallImpl <em>FCall</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.FCallImpl
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getFCall()
     * @generated
     */
    EClass FCALL = eINSTANCE.getFCall();

    /**
     * The meta object literal for the '<em><b>Left</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FCALL__LEFT = eINSTANCE.getFCall_Left();

    /**
     * The meta object literal for the '<em><b>Right</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FCALL__RIGHT = eINSTANCE.getFCall_Right();

    /**
     * The meta object literal for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.ArrayInitImpl <em>Array Init</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.ArrayInitImpl
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getArrayInit()
     * @generated
     */
    EClass ARRAY_INIT = eINSTANCE.getArrayInit();

    /**
     * The meta object literal for the '<em><b>Left</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ARRAY_INIT__LEFT = eINSTANCE.getArrayInit_Left();

    /**
     * The meta object literal for the '<em><b>Type</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ARRAY_INIT__TYPE = eINSTANCE.getArrayInit_Type();

    /**
     * The meta object literal for the '<em><b>Sizes</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ARRAY_INIT__SIZES = eINSTANCE.getArrayInit_Sizes();

    /**
     * The meta object literal for the '<em><b>Filler</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ARRAY_INIT__FILLER = eINSTANCE.getArrayInit_Filler();

    /**
     * The meta object literal for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.NotImpl <em>Not</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.NotImpl
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getNot()
     * @generated
     */
    EClass NOT = eINSTANCE.getNot();

    /**
     * The meta object literal for the '<em><b>Expression</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference NOT__EXPRESSION = eINSTANCE.getNot_Expression();

    /**
     * The meta object literal for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.NegImpl <em>Neg</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.NegImpl
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getNeg()
     * @generated
     */
    EClass NEG = eINSTANCE.getNeg();

    /**
     * The meta object literal for the '<em><b>Expression</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference NEG__EXPRESSION = eINSTANCE.getNeg_Expression();

    /**
     * The meta object literal for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.ParanImpl <em>Paran</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.ParanImpl
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getParan()
     * @generated
     */
    EClass PARAN = eINSTANCE.getParan();

    /**
     * The meta object literal for the '<em><b>Exp</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PARAN__EXP = eINSTANCE.getParan_Exp();

    /**
     * The meta object literal for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.IntConstImpl <em>Int Const</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.IntConstImpl
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getIntConst()
     * @generated
     */
    EClass INT_CONST = eINSTANCE.getIntConst();

    /**
     * The meta object literal for the '<em><b>Value</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute INT_CONST__VALUE = eINSTANCE.getIntConst_Value();

    /**
     * The meta object literal for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.FloatConstImpl <em>Float Const</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.FloatConstImpl
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getFloatConst()
     * @generated
     */
    EClass FLOAT_CONST = eINSTANCE.getFloatConst();

    /**
     * The meta object literal for the '<em><b>Value</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute FLOAT_CONST__VALUE = eINSTANCE.getFloatConst_Value();

    /**
     * The meta object literal for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.StrConstImpl <em>Str Const</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.StrConstImpl
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getStrConst()
     * @generated
     */
    EClass STR_CONST = eINSTANCE.getStrConst();

    /**
     * The meta object literal for the '<em><b>Value</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute STR_CONST__VALUE = eINSTANCE.getStrConst_Value();

    /**
     * The meta object literal for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.BoolConstImpl <em>Bool Const</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.BoolConstImpl
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getBoolConst()
     * @generated
     */
    EClass BOOL_CONST = eINSTANCE.getBoolConst();

    /**
     * The meta object literal for the '<em><b>Value</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute BOOL_CONST__VALUE = eINSTANCE.getBoolConst_Value();

  }

} //FortXTransPackage
