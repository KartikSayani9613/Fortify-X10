/**
 * generated by Xtext 2.13.0-SNAPSHOT
 */
package srf.transpiler.fortxtrans.fortXTrans;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

/**
 * <!-- begin-user-doc -->
 * The <b>Package</b> for the model.
 * It contains accessors for the meta objects to represent
 * <ul>
 *   <li>each class,</li>
 *   <li>each feature of each class,</li>
 *   <li>each enum,</li>
 *   <li>and each data type</li>
 * </ul>
 * <!-- end-user-doc -->
 * @see srf.transpiler.fortxtrans.fortXTrans.FortXTransFactory
 * @model kind="package"
 * @generated
 */
public interface FortXTransPackage extends EPackage
{
  /**
   * The package name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNAME = "fortXTrans";

  /**
   * The package namespace URI.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_URI = "http://www.transpiler.srf/fortxtrans/FortXTrans";

  /**
   * The package namespace name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_PREFIX = "fortXTrans";

  /**
   * The singleton instance of the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  FortXTransPackage eINSTANCE = srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl.init();

  /**
   * The meta object id for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.ModelImpl <em>Model</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.ModelImpl
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getModel()
   * @generated
   */
  int MODEL = 0;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MODEL__NAME = 0;

  /**
   * The feature id for the '<em><b>Imports</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MODEL__IMPORTS = 1;

  /**
   * The number of structural features of the '<em>Model</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MODEL_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.ComponentImpl <em>Component</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.ComponentImpl
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getComponent()
   * @generated
   */
  int COMPONENT = 1;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMPONENT__NAME = MODEL__NAME;

  /**
   * The feature id for the '<em><b>Imports</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMPONENT__IMPORTS = MODEL__IMPORTS;

  /**
   * The feature id for the '<em><b>Exports</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMPONENT__EXPORTS = MODEL_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Decls</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMPONENT__DECLS = MODEL_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Component</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMPONENT_FEATURE_COUNT = MODEL_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.APIImpl <em>API</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.APIImpl
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getAPI()
   * @generated
   */
  int API = 2;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int API__NAME = MODEL__NAME;

  /**
   * The feature id for the '<em><b>Imports</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int API__IMPORTS = MODEL__IMPORTS;

  /**
   * The number of structural features of the '<em>API</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int API_FEATURE_COUNT = MODEL_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.ImportImpl <em>Import</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.ImportImpl
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getImport()
   * @generated
   */
  int IMPORT = 3;

  /**
   * The feature id for the '<em><b>Imps</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IMPORT__IMPS = 0;

  /**
   * The feature id for the '<em><b>Imported Names</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IMPORT__IMPORTED_NAMES = 1;

  /**
   * The feature id for the '<em><b>Api</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IMPORT__API = 2;

  /**
   * The feature id for the '<em><b>Aliasedimported Names</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IMPORT__ALIASEDIMPORTED_NAMES = 3;

  /**
   * The number of structural features of the '<em>Import</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IMPORT_FEATURE_COUNT = 4;

  /**
   * The meta object id for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.ExportImpl <em>Export</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.ExportImpl
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getExport()
   * @generated
   */
  int EXPORT = 4;

  /**
   * The feature id for the '<em><b>Exp</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPORT__EXP = 0;

  /**
   * The feature id for the '<em><b>Exported Name</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPORT__EXPORTED_NAME = 1;

  /**
   * The feature id for the '<em><b>Brack</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPORT__BRACK = 2;

  /**
   * The number of structural features of the '<em>Export</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPORT_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.ImportedNamesImpl <em>Imported Names</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.ImportedNamesImpl
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getImportedNames()
   * @generated
   */
  int IMPORTED_NAMES = 5;

  /**
   * The feature id for the '<em><b>Impname</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IMPORTED_NAMES__IMPNAME = 0;

  /**
   * The feature id for the '<em><b>Except</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IMPORTED_NAMES__EXCEPT = 1;

  /**
   * The feature id for the '<em><b>Simp</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IMPORTED_NAMES__SIMP = 2;

  /**
   * The feature id for the '<em><b>Simp List</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IMPORTED_NAMES__SIMP_LIST = 3;

  /**
   * The feature id for the '<em><b>Comma</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IMPORTED_NAMES__COMMA = 4;

  /**
   * The feature id for the '<em><b>Dots</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IMPORTED_NAMES__DOTS = 5;

  /**
   * The feature id for the '<em><b>Asname</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IMPORTED_NAMES__ASNAME = 6;

  /**
   * The number of structural features of the '<em>Imported Names</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IMPORTED_NAMES_FEATURE_COUNT = 7;

  /**
   * The meta object id for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.SimpleNamesImpl <em>Simple Names</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.SimpleNamesImpl
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getSimpleNames()
   * @generated
   */
  int SIMPLE_NAMES = 6;

  /**
   * The feature id for the '<em><b>Name List</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SIMPLE_NAMES__NAME_LIST = 0;

  /**
   * The feature id for the '<em><b>Brack</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SIMPLE_NAMES__BRACK = 1;

  /**
   * The number of structural features of the '<em>Simple Names</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SIMPLE_NAMES_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.SimpleNameImpl <em>Simple Name</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.SimpleNameImpl
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getSimpleName()
   * @generated
   */
  int SIMPLE_NAME = 7;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SIMPLE_NAME__NAME = 0;

  /**
   * The number of structural features of the '<em>Simple Name</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SIMPLE_NAME_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.AliasedSimpleNameImpl <em>Aliased Simple Name</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.AliasedSimpleNameImpl
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getAliasedSimpleName()
   * @generated
   */
  int ALIASED_SIMPLE_NAME = 8;

  /**
   * The feature id for the '<em><b>Orig</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ALIASED_SIMPLE_NAME__ORIG = 0;

  /**
   * The feature id for the '<em><b>As Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ALIASED_SIMPLE_NAME__AS_NAME = 1;

  /**
   * The number of structural features of the '<em>Aliased Simple Name</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ALIASED_SIMPLE_NAME_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.AliasedAPINamesImpl <em>Aliased API Names</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.AliasedAPINamesImpl
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getAliasedAPINames()
   * @generated
   */
  int ALIASED_API_NAMES = 9;

  /**
   * The feature id for the '<em><b>Name List</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ALIASED_API_NAMES__NAME_LIST = 0;

  /**
   * The feature id for the '<em><b>Brack</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ALIASED_API_NAMES__BRACK = 1;

  /**
   * The number of structural features of the '<em>Aliased API Names</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ALIASED_API_NAMES_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.AliasedAPINameImpl <em>Aliased API Name</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.AliasedAPINameImpl
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getAliasedAPIName()
   * @generated
   */
  int ALIASED_API_NAME = 10;

  /**
   * The feature id for the '<em><b>Orig</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ALIASED_API_NAME__ORIG = 0;

  /**
   * The feature id for the '<em><b>As Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ALIASED_API_NAME__AS_NAME = 1;

  /**
   * The number of structural features of the '<em>Aliased API Name</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ALIASED_API_NAME_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.DeclsImpl <em>Decls</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.DeclsImpl
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getDecls()
   * @generated
   */
  int DECLS = 11;

  /**
   * The feature id for the '<em><b>Decls</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DECLS__DECLS = 0;

  /**
   * The number of structural features of the '<em>Decls</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DECLS_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.DeclImpl <em>Decl</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.DeclImpl
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getDecl()
   * @generated
   */
  int DECL = 12;

  /**
   * The feature id for the '<em><b>Function</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DECL__FUNCTION = 0;

  /**
   * The number of structural features of the '<em>Decl</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DECL_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.FnDeclImpl <em>Fn Decl</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.FnDeclImpl
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getFnDecl()
   * @generated
   */
  int FN_DECL = 13;

  /**
   * The feature id for the '<em><b>Mods</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FN_DECL__MODS = 0;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FN_DECL__NAME = 1;

  /**
   * The feature id for the '<em><b>Params</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FN_DECL__PARAMS = 2;

  /**
   * The feature id for the '<em><b>Ret Val</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FN_DECL__RET_VAL = 3;

  /**
   * The feature id for the '<em><b>Fn Itself</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FN_DECL__FN_ITSELF = 4;

  /**
   * The number of structural features of the '<em>Fn Decl</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FN_DECL_FEATURE_COUNT = 5;

  /**
   * The meta object id for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.FnModsImpl <em>Fn Mods</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.FnModsImpl
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getFnMods()
   * @generated
   */
  int FN_MODS = 14;

  /**
   * The feature id for the '<em><b>Mods</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FN_MODS__MODS = 0;

  /**
   * The number of structural features of the '<em>Fn Mods</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FN_MODS_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.FnModImpl <em>Fn Mod</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.FnModImpl
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getFnMod()
   * @generated
   */
  int FN_MOD = 15;

  /**
   * The feature id for the '<em><b>Modtype</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FN_MOD__MODTYPE = 0;

  /**
   * The number of structural features of the '<em>Fn Mod</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FN_MOD_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.ValParamImpl <em>Val Param</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.ValParamImpl
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getValParam()
   * @generated
   */
  int VAL_PARAM = 16;

  /**
   * The feature id for the '<em><b>Params</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VAL_PARAM__PARAMS = 0;

  /**
   * The feature id for the '<em><b>Brack</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VAL_PARAM__BRACK = 1;

  /**
   * The number of structural features of the '<em>Val Param</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VAL_PARAM_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.ParamImpl <em>Param</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.ParamImpl
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getParam()
   * @generated
   */
  int PARAM = 17;

  /**
   * The feature id for the '<em><b>BId</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PARAM__BID = 0;

  /**
   * The feature id for the '<em><b>Istype</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PARAM__ISTYPE = 1;

  /**
   * The number of structural features of the '<em>Param</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PARAM_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.IsTypeImpl <em>Is Type</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.IsTypeImpl
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getIsType()
   * @generated
   */
  int IS_TYPE = 18;

  /**
   * The feature id for the '<em><b>Type</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IS_TYPE__TYPE = 0;

  /**
   * The number of structural features of the '<em>Is Type</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IS_TYPE_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.RetTypeImpl <em>Ret Type</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.RetTypeImpl
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getRetType()
   * @generated
   */
  int RET_TYPE = 19;

  /**
   * The feature id for the '<em><b>Empty</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RET_TYPE__EMPTY = 0;

  /**
   * The feature id for the '<em><b>Type</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RET_TYPE__TYPE = 1;

  /**
   * The number of structural features of the '<em>Ret Type</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RET_TYPE_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.ExprTailImpl <em>Expr Tail</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.ExprTailImpl
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getExprTail()
   * @generated
   */
  int EXPR_TAIL = 22;

  /**
   * The number of structural features of the '<em>Expr Tail</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPR_TAIL_FEATURE_COUNT = 0;

  /**
   * The meta object id for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.TypeImpl <em>Type</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.TypeImpl
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getType()
   * @generated
   */
  int TYPE = 20;

  /**
   * The feature id for the '<em><b>Tname</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TYPE__TNAME = EXPR_TAIL_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Type</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TYPE_FEATURE_COUNT = EXPR_TAIL_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.ExpressionImpl <em>Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.ExpressionImpl
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getExpression()
   * @generated
   */
  int EXPRESSION = 21;

  /**
   * The feature id for the '<em><b>Exp</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION__EXP = 0;

  /**
   * The feature id for the '<em><b>Id</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION__ID = 1;

  /**
   * The feature id for the '<em><b>Atom</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION__ATOM = 2;

  /**
   * The feature id for the '<em><b>Block</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION__BLOCK = 3;

  /**
   * The number of structural features of the '<em>Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_FEATURE_COUNT = 4;

  /**
   * The meta object id for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.ExprImpl <em>Expr</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.ExprImpl
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getExpr()
   * @generated
   */
  int EXPR = 23;

  /**
   * The feature id for the '<em><b>Exp</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPR__EXP = EXPRESSION__EXP;

  /**
   * The feature id for the '<em><b>Id</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPR__ID = EXPRESSION__ID;

  /**
   * The feature id for the '<em><b>Atom</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPR__ATOM = EXPRESSION__ATOM;

  /**
   * The feature id for the '<em><b>Block</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPR__BLOCK = EXPRESSION__BLOCK;

  /**
   * The feature id for the '<em><b>Front</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPR__FRONT = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Tails</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPR__TAILS = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Expr</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPR_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.ExprFrontImpl <em>Expr Front</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.ExprFrontImpl
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getExprFront()
   * @generated
   */
  int EXPR_FRONT = 24;

  /**
   * The feature id for the '<em><b>Exp</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPR_FRONT__EXP = EXPRESSION__EXP;

  /**
   * The feature id for the '<em><b>Id</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPR_FRONT__ID = EXPRESSION__ID;

  /**
   * The feature id for the '<em><b>Atom</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPR_FRONT__ATOM = EXPRESSION__ATOM;

  /**
   * The feature id for the '<em><b>Block</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPR_FRONT__BLOCK = EXPRESSION__BLOCK;

  /**
   * The feature id for the '<em><b>Delim</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPR_FRONT__DELIM = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Expr Front</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPR_FRONT_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.DelimitedImpl <em>Delimited</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.DelimitedImpl
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getDelimited()
   * @generated
   */
  int DELIMITED = 25;

  /**
   * The feature id for the '<em><b>Exp</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DELIMITED__EXP = EXPRESSION__EXP;

  /**
   * The feature id for the '<em><b>Id</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DELIMITED__ID = EXPRESSION__ID;

  /**
   * The feature id for the '<em><b>Atom</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DELIMITED__ATOM = EXPRESSION__ATOM;

  /**
   * The feature id for the '<em><b>Block</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DELIMITED__BLOCK = EXPRESSION__BLOCK;

  /**
   * The feature id for the '<em><b>Par</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DELIMITED__PAR = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Delimited</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DELIMITED_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.ParanthesizedImpl <em>Paranthesized</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.ParanthesizedImpl
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getParanthesized()
   * @generated
   */
  int PARANTHESIZED = 26;

  /**
   * The feature id for the '<em><b>Exp</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PARANTHESIZED__EXP = EXPRESSION__EXP;

  /**
   * The feature id for the '<em><b>Id</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PARANTHESIZED__ID = EXPRESSION__ID;

  /**
   * The feature id for the '<em><b>Atom</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PARANTHESIZED__ATOM = EXPRESSION__ATOM;

  /**
   * The feature id for the '<em><b>Block</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PARANTHESIZED__BLOCK = EXPRESSION__BLOCK;

  /**
   * The feature id for the '<em><b>Expr</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PARANTHESIZED__EXPR = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Paranthesized</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PARANTHESIZED_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.DoImpl <em>Do</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.DoImpl
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getDo()
   * @generated
   */
  int DO = 27;

  /**
   * The feature id for the '<em><b>Exp</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DO__EXP = EXPRESSION__EXP;

  /**
   * The feature id for the '<em><b>Id</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DO__ID = EXPRESSION__ID;

  /**
   * The feature id for the '<em><b>Atom</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DO__ATOM = EXPRESSION__ATOM;

  /**
   * The feature id for the '<em><b>Block</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DO__BLOCK = EXPRESSION__BLOCK;

  /**
   * The feature id for the '<em><b>Dofs</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DO__DOFS = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Do</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DO_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.BlockELemImpl <em>Block ELem</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.BlockELemImpl
   * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getBlockELem()
   * @generated
   */
  int BLOCK_ELEM = 28;

  /**
   * The feature id for the '<em><b>Exp</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BLOCK_ELEM__EXP = EXPRESSION__EXP;

  /**
   * The feature id for the '<em><b>Id</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BLOCK_ELEM__ID = EXPRESSION__ID;

  /**
   * The feature id for the '<em><b>Atom</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BLOCK_ELEM__ATOM = EXPRESSION__ATOM;

  /**
   * The feature id for the '<em><b>Block</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BLOCK_ELEM__BLOCK = EXPRESSION__BLOCK;

  /**
   * The feature id for the '<em><b>Expr</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BLOCK_ELEM__EXPR = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Block ELem</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BLOCK_ELEM_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 1;


  /**
   * Returns the meta object for class '{@link srf.transpiler.fortxtrans.fortXTrans.Model <em>Model</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Model</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.Model
   * @generated
   */
  EClass getModel();

  /**
   * Returns the meta object for the attribute '{@link srf.transpiler.fortxtrans.fortXTrans.Model#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.Model#getName()
   * @see #getModel()
   * @generated
   */
  EAttribute getModel_Name();

  /**
   * Returns the meta object for the containment reference list '{@link srf.transpiler.fortxtrans.fortXTrans.Model#getImports <em>Imports</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Imports</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.Model#getImports()
   * @see #getModel()
   * @generated
   */
  EReference getModel_Imports();

  /**
   * Returns the meta object for class '{@link srf.transpiler.fortxtrans.fortXTrans.Component <em>Component</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Component</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.Component
   * @generated
   */
  EClass getComponent();

  /**
   * Returns the meta object for the containment reference list '{@link srf.transpiler.fortxtrans.fortXTrans.Component#getExports <em>Exports</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Exports</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.Component#getExports()
   * @see #getComponent()
   * @generated
   */
  EReference getComponent_Exports();

  /**
   * Returns the meta object for the containment reference list '{@link srf.transpiler.fortxtrans.fortXTrans.Component#getDecls <em>Decls</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Decls</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.Component#getDecls()
   * @see #getComponent()
   * @generated
   */
  EReference getComponent_Decls();

  /**
   * Returns the meta object for class '{@link srf.transpiler.fortxtrans.fortXTrans.API <em>API</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>API</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.API
   * @generated
   */
  EClass getAPI();

  /**
   * Returns the meta object for class '{@link srf.transpiler.fortxtrans.fortXTrans.Import <em>Import</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Import</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.Import
   * @generated
   */
  EClass getImport();

  /**
   * Returns the meta object for the attribute '{@link srf.transpiler.fortxtrans.fortXTrans.Import#getImps <em>Imps</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Imps</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.Import#getImps()
   * @see #getImport()
   * @generated
   */
  EAttribute getImport_Imps();

  /**
   * Returns the meta object for the containment reference '{@link srf.transpiler.fortxtrans.fortXTrans.Import#getImportedNames <em>Imported Names</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Imported Names</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.Import#getImportedNames()
   * @see #getImport()
   * @generated
   */
  EReference getImport_ImportedNames();

  /**
   * Returns the meta object for the attribute '{@link srf.transpiler.fortxtrans.fortXTrans.Import#getApi <em>Api</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Api</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.Import#getApi()
   * @see #getImport()
   * @generated
   */
  EAttribute getImport_Api();

  /**
   * Returns the meta object for the containment reference '{@link srf.transpiler.fortxtrans.fortXTrans.Import#getAliasedimportedNames <em>Aliasedimported Names</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Aliasedimported Names</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.Import#getAliasedimportedNames()
   * @see #getImport()
   * @generated
   */
  EReference getImport_AliasedimportedNames();

  /**
   * Returns the meta object for class '{@link srf.transpiler.fortxtrans.fortXTrans.Export <em>Export</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Export</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.Export
   * @generated
   */
  EClass getExport();

  /**
   * Returns the meta object for the attribute '{@link srf.transpiler.fortxtrans.fortXTrans.Export#getExp <em>Exp</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Exp</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.Export#getExp()
   * @see #getExport()
   * @generated
   */
  EAttribute getExport_Exp();

  /**
   * Returns the meta object for the attribute list '{@link srf.transpiler.fortxtrans.fortXTrans.Export#getExportedName <em>Exported Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute list '<em>Exported Name</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.Export#getExportedName()
   * @see #getExport()
   * @generated
   */
  EAttribute getExport_ExportedName();

  /**
   * Returns the meta object for the attribute '{@link srf.transpiler.fortxtrans.fortXTrans.Export#getBrack <em>Brack</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Brack</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.Export#getBrack()
   * @see #getExport()
   * @generated
   */
  EAttribute getExport_Brack();

  /**
   * Returns the meta object for class '{@link srf.transpiler.fortxtrans.fortXTrans.ImportedNames <em>Imported Names</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Imported Names</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.ImportedNames
   * @generated
   */
  EClass getImportedNames();

  /**
   * Returns the meta object for the attribute '{@link srf.transpiler.fortxtrans.fortXTrans.ImportedNames#getImpname <em>Impname</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Impname</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.ImportedNames#getImpname()
   * @see #getImportedNames()
   * @generated
   */
  EAttribute getImportedNames_Impname();

  /**
   * Returns the meta object for the attribute '{@link srf.transpiler.fortxtrans.fortXTrans.ImportedNames#isExcept <em>Except</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Except</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.ImportedNames#isExcept()
   * @see #getImportedNames()
   * @generated
   */
  EAttribute getImportedNames_Except();

  /**
   * Returns the meta object for the containment reference '{@link srf.transpiler.fortxtrans.fortXTrans.ImportedNames#getSimp <em>Simp</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Simp</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.ImportedNames#getSimp()
   * @see #getImportedNames()
   * @generated
   */
  EReference getImportedNames_Simp();

  /**
   * Returns the meta object for the containment reference list '{@link srf.transpiler.fortxtrans.fortXTrans.ImportedNames#getSimpList <em>Simp List</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Simp List</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.ImportedNames#getSimpList()
   * @see #getImportedNames()
   * @generated
   */
  EReference getImportedNames_SimpList();

  /**
   * Returns the meta object for the attribute '{@link srf.transpiler.fortxtrans.fortXTrans.ImportedNames#isComma <em>Comma</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Comma</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.ImportedNames#isComma()
   * @see #getImportedNames()
   * @generated
   */
  EAttribute getImportedNames_Comma();

  /**
   * Returns the meta object for the attribute '{@link srf.transpiler.fortxtrans.fortXTrans.ImportedNames#isDots <em>Dots</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Dots</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.ImportedNames#isDots()
   * @see #getImportedNames()
   * @generated
   */
  EAttribute getImportedNames_Dots();

  /**
   * Returns the meta object for the attribute '{@link srf.transpiler.fortxtrans.fortXTrans.ImportedNames#getAsname <em>Asname</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Asname</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.ImportedNames#getAsname()
   * @see #getImportedNames()
   * @generated
   */
  EAttribute getImportedNames_Asname();

  /**
   * Returns the meta object for class '{@link srf.transpiler.fortxtrans.fortXTrans.SimpleNames <em>Simple Names</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Simple Names</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.SimpleNames
   * @generated
   */
  EClass getSimpleNames();

  /**
   * Returns the meta object for the containment reference list '{@link srf.transpiler.fortxtrans.fortXTrans.SimpleNames#getNameList <em>Name List</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Name List</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.SimpleNames#getNameList()
   * @see #getSimpleNames()
   * @generated
   */
  EReference getSimpleNames_NameList();

  /**
   * Returns the meta object for the attribute '{@link srf.transpiler.fortxtrans.fortXTrans.SimpleNames#getBrack <em>Brack</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Brack</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.SimpleNames#getBrack()
   * @see #getSimpleNames()
   * @generated
   */
  EAttribute getSimpleNames_Brack();

  /**
   * Returns the meta object for class '{@link srf.transpiler.fortxtrans.fortXTrans.SimpleName <em>Simple Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Simple Name</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.SimpleName
   * @generated
   */
  EClass getSimpleName();

  /**
   * Returns the meta object for the attribute '{@link srf.transpiler.fortxtrans.fortXTrans.SimpleName#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.SimpleName#getName()
   * @see #getSimpleName()
   * @generated
   */
  EAttribute getSimpleName_Name();

  /**
   * Returns the meta object for class '{@link srf.transpiler.fortxtrans.fortXTrans.AliasedSimpleName <em>Aliased Simple Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Aliased Simple Name</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.AliasedSimpleName
   * @generated
   */
  EClass getAliasedSimpleName();

  /**
   * Returns the meta object for the attribute '{@link srf.transpiler.fortxtrans.fortXTrans.AliasedSimpleName#getOrig <em>Orig</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Orig</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.AliasedSimpleName#getOrig()
   * @see #getAliasedSimpleName()
   * @generated
   */
  EAttribute getAliasedSimpleName_Orig();

  /**
   * Returns the meta object for the attribute '{@link srf.transpiler.fortxtrans.fortXTrans.AliasedSimpleName#getAsName <em>As Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>As Name</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.AliasedSimpleName#getAsName()
   * @see #getAliasedSimpleName()
   * @generated
   */
  EAttribute getAliasedSimpleName_AsName();

  /**
   * Returns the meta object for class '{@link srf.transpiler.fortxtrans.fortXTrans.AliasedAPINames <em>Aliased API Names</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Aliased API Names</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.AliasedAPINames
   * @generated
   */
  EClass getAliasedAPINames();

  /**
   * Returns the meta object for the containment reference list '{@link srf.transpiler.fortxtrans.fortXTrans.AliasedAPINames#getNameList <em>Name List</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Name List</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.AliasedAPINames#getNameList()
   * @see #getAliasedAPINames()
   * @generated
   */
  EReference getAliasedAPINames_NameList();

  /**
   * Returns the meta object for the attribute '{@link srf.transpiler.fortxtrans.fortXTrans.AliasedAPINames#getBrack <em>Brack</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Brack</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.AliasedAPINames#getBrack()
   * @see #getAliasedAPINames()
   * @generated
   */
  EAttribute getAliasedAPINames_Brack();

  /**
   * Returns the meta object for class '{@link srf.transpiler.fortxtrans.fortXTrans.AliasedAPIName <em>Aliased API Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Aliased API Name</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.AliasedAPIName
   * @generated
   */
  EClass getAliasedAPIName();

  /**
   * Returns the meta object for the attribute '{@link srf.transpiler.fortxtrans.fortXTrans.AliasedAPIName#getOrig <em>Orig</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Orig</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.AliasedAPIName#getOrig()
   * @see #getAliasedAPIName()
   * @generated
   */
  EAttribute getAliasedAPIName_Orig();

  /**
   * Returns the meta object for the attribute '{@link srf.transpiler.fortxtrans.fortXTrans.AliasedAPIName#getAsName <em>As Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>As Name</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.AliasedAPIName#getAsName()
   * @see #getAliasedAPIName()
   * @generated
   */
  EAttribute getAliasedAPIName_AsName();

  /**
   * Returns the meta object for class '{@link srf.transpiler.fortxtrans.fortXTrans.Decls <em>Decls</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Decls</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.Decls
   * @generated
   */
  EClass getDecls();

  /**
   * Returns the meta object for the containment reference list '{@link srf.transpiler.fortxtrans.fortXTrans.Decls#getDecls <em>Decls</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Decls</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.Decls#getDecls()
   * @see #getDecls()
   * @generated
   */
  EReference getDecls_Decls();

  /**
   * Returns the meta object for class '{@link srf.transpiler.fortxtrans.fortXTrans.Decl <em>Decl</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Decl</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.Decl
   * @generated
   */
  EClass getDecl();

  /**
   * Returns the meta object for the containment reference '{@link srf.transpiler.fortxtrans.fortXTrans.Decl#getFunction <em>Function</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Function</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.Decl#getFunction()
   * @see #getDecl()
   * @generated
   */
  EReference getDecl_Function();

  /**
   * Returns the meta object for class '{@link srf.transpiler.fortxtrans.fortXTrans.FnDecl <em>Fn Decl</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Fn Decl</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.FnDecl
   * @generated
   */
  EClass getFnDecl();

  /**
   * Returns the meta object for the containment reference '{@link srf.transpiler.fortxtrans.fortXTrans.FnDecl#getMods <em>Mods</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Mods</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.FnDecl#getMods()
   * @see #getFnDecl()
   * @generated
   */
  EReference getFnDecl_Mods();

  /**
   * Returns the meta object for the attribute '{@link srf.transpiler.fortxtrans.fortXTrans.FnDecl#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.FnDecl#getName()
   * @see #getFnDecl()
   * @generated
   */
  EAttribute getFnDecl_Name();

  /**
   * Returns the meta object for the containment reference '{@link srf.transpiler.fortxtrans.fortXTrans.FnDecl#getParams <em>Params</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Params</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.FnDecl#getParams()
   * @see #getFnDecl()
   * @generated
   */
  EReference getFnDecl_Params();

  /**
   * Returns the meta object for the containment reference '{@link srf.transpiler.fortxtrans.fortXTrans.FnDecl#getRetVal <em>Ret Val</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Ret Val</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.FnDecl#getRetVal()
   * @see #getFnDecl()
   * @generated
   */
  EReference getFnDecl_RetVal();

  /**
   * Returns the meta object for the containment reference '{@link srf.transpiler.fortxtrans.fortXTrans.FnDecl#getFnItself <em>Fn Itself</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Fn Itself</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.FnDecl#getFnItself()
   * @see #getFnDecl()
   * @generated
   */
  EReference getFnDecl_FnItself();

  /**
   * Returns the meta object for class '{@link srf.transpiler.fortxtrans.fortXTrans.FnMods <em>Fn Mods</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Fn Mods</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.FnMods
   * @generated
   */
  EClass getFnMods();

  /**
   * Returns the meta object for the containment reference list '{@link srf.transpiler.fortxtrans.fortXTrans.FnMods#getMods <em>Mods</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Mods</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.FnMods#getMods()
   * @see #getFnMods()
   * @generated
   */
  EReference getFnMods_Mods();

  /**
   * Returns the meta object for class '{@link srf.transpiler.fortxtrans.fortXTrans.FnMod <em>Fn Mod</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Fn Mod</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.FnMod
   * @generated
   */
  EClass getFnMod();

  /**
   * Returns the meta object for the attribute '{@link srf.transpiler.fortxtrans.fortXTrans.FnMod#getModtype <em>Modtype</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Modtype</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.FnMod#getModtype()
   * @see #getFnMod()
   * @generated
   */
  EAttribute getFnMod_Modtype();

  /**
   * Returns the meta object for class '{@link srf.transpiler.fortxtrans.fortXTrans.ValParam <em>Val Param</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Val Param</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.ValParam
   * @generated
   */
  EClass getValParam();

  /**
   * Returns the meta object for the containment reference list '{@link srf.transpiler.fortxtrans.fortXTrans.ValParam#getParams <em>Params</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Params</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.ValParam#getParams()
   * @see #getValParam()
   * @generated
   */
  EReference getValParam_Params();

  /**
   * Returns the meta object for the attribute '{@link srf.transpiler.fortxtrans.fortXTrans.ValParam#getBrack <em>Brack</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Brack</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.ValParam#getBrack()
   * @see #getValParam()
   * @generated
   */
  EAttribute getValParam_Brack();

  /**
   * Returns the meta object for class '{@link srf.transpiler.fortxtrans.fortXTrans.Param <em>Param</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Param</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.Param
   * @generated
   */
  EClass getParam();

  /**
   * Returns the meta object for the attribute '{@link srf.transpiler.fortxtrans.fortXTrans.Param#getBId <em>BId</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>BId</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.Param#getBId()
   * @see #getParam()
   * @generated
   */
  EAttribute getParam_BId();

  /**
   * Returns the meta object for the containment reference '{@link srf.transpiler.fortxtrans.fortXTrans.Param#getIstype <em>Istype</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Istype</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.Param#getIstype()
   * @see #getParam()
   * @generated
   */
  EReference getParam_Istype();

  /**
   * Returns the meta object for class '{@link srf.transpiler.fortxtrans.fortXTrans.IsType <em>Is Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Is Type</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.IsType
   * @generated
   */
  EClass getIsType();

  /**
   * Returns the meta object for the containment reference '{@link srf.transpiler.fortxtrans.fortXTrans.IsType#getType <em>Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Type</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.IsType#getType()
   * @see #getIsType()
   * @generated
   */
  EReference getIsType_Type();

  /**
   * Returns the meta object for class '{@link srf.transpiler.fortxtrans.fortXTrans.RetType <em>Ret Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Ret Type</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.RetType
   * @generated
   */
  EClass getRetType();

  /**
   * Returns the meta object for the attribute '{@link srf.transpiler.fortxtrans.fortXTrans.RetType#getEmpty <em>Empty</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Empty</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.RetType#getEmpty()
   * @see #getRetType()
   * @generated
   */
  EAttribute getRetType_Empty();

  /**
   * Returns the meta object for the containment reference '{@link srf.transpiler.fortxtrans.fortXTrans.RetType#getType <em>Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Type</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.RetType#getType()
   * @see #getRetType()
   * @generated
   */
  EReference getRetType_Type();

  /**
   * Returns the meta object for class '{@link srf.transpiler.fortxtrans.fortXTrans.Type <em>Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Type</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.Type
   * @generated
   */
  EClass getType();

  /**
   * Returns the meta object for the attribute '{@link srf.transpiler.fortxtrans.fortXTrans.Type#getTname <em>Tname</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Tname</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.Type#getTname()
   * @see #getType()
   * @generated
   */
  EAttribute getType_Tname();

  /**
   * Returns the meta object for class '{@link srf.transpiler.fortxtrans.fortXTrans.Expression <em>Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Expression</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.Expression
   * @generated
   */
  EClass getExpression();

  /**
   * Returns the meta object for the containment reference '{@link srf.transpiler.fortxtrans.fortXTrans.Expression#getExp <em>Exp</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Exp</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.Expression#getExp()
   * @see #getExpression()
   * @generated
   */
  EReference getExpression_Exp();

  /**
   * Returns the meta object for the attribute '{@link srf.transpiler.fortxtrans.fortXTrans.Expression#getId <em>Id</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Id</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.Expression#getId()
   * @see #getExpression()
   * @generated
   */
  EAttribute getExpression_Id();

  /**
   * Returns the meta object for the attribute '{@link srf.transpiler.fortxtrans.fortXTrans.Expression#getAtom <em>Atom</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Atom</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.Expression#getAtom()
   * @see #getExpression()
   * @generated
   */
  EAttribute getExpression_Atom();

  /**
   * Returns the meta object for the containment reference '{@link srf.transpiler.fortxtrans.fortXTrans.Expression#getBlock <em>Block</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Block</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.Expression#getBlock()
   * @see #getExpression()
   * @generated
   */
  EReference getExpression_Block();

  /**
   * Returns the meta object for class '{@link srf.transpiler.fortxtrans.fortXTrans.ExprTail <em>Expr Tail</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Expr Tail</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.ExprTail
   * @generated
   */
  EClass getExprTail();

  /**
   * Returns the meta object for class '{@link srf.transpiler.fortxtrans.fortXTrans.Expr <em>Expr</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Expr</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.Expr
   * @generated
   */
  EClass getExpr();

  /**
   * Returns the meta object for the containment reference '{@link srf.transpiler.fortxtrans.fortXTrans.Expr#getFront <em>Front</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Front</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.Expr#getFront()
   * @see #getExpr()
   * @generated
   */
  EReference getExpr_Front();

  /**
   * Returns the meta object for the containment reference list '{@link srf.transpiler.fortxtrans.fortXTrans.Expr#getTails <em>Tails</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Tails</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.Expr#getTails()
   * @see #getExpr()
   * @generated
   */
  EReference getExpr_Tails();

  /**
   * Returns the meta object for class '{@link srf.transpiler.fortxtrans.fortXTrans.ExprFront <em>Expr Front</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Expr Front</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.ExprFront
   * @generated
   */
  EClass getExprFront();

  /**
   * Returns the meta object for the containment reference '{@link srf.transpiler.fortxtrans.fortXTrans.ExprFront#getDelim <em>Delim</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Delim</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.ExprFront#getDelim()
   * @see #getExprFront()
   * @generated
   */
  EReference getExprFront_Delim();

  /**
   * Returns the meta object for class '{@link srf.transpiler.fortxtrans.fortXTrans.Delimited <em>Delimited</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Delimited</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.Delimited
   * @generated
   */
  EClass getDelimited();

  /**
   * Returns the meta object for the containment reference '{@link srf.transpiler.fortxtrans.fortXTrans.Delimited#getPar <em>Par</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Par</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.Delimited#getPar()
   * @see #getDelimited()
   * @generated
   */
  EReference getDelimited_Par();

  /**
   * Returns the meta object for class '{@link srf.transpiler.fortxtrans.fortXTrans.Paranthesized <em>Paranthesized</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Paranthesized</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.Paranthesized
   * @generated
   */
  EClass getParanthesized();

  /**
   * Returns the meta object for the containment reference '{@link srf.transpiler.fortxtrans.fortXTrans.Paranthesized#getExpr <em>Expr</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Expr</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.Paranthesized#getExpr()
   * @see #getParanthesized()
   * @generated
   */
  EReference getParanthesized_Expr();

  /**
   * Returns the meta object for class '{@link srf.transpiler.fortxtrans.fortXTrans.Do <em>Do</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Do</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.Do
   * @generated
   */
  EClass getDo();

  /**
   * Returns the meta object for the containment reference list '{@link srf.transpiler.fortxtrans.fortXTrans.Do#getDofs <em>Dofs</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Dofs</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.Do#getDofs()
   * @see #getDo()
   * @generated
   */
  EReference getDo_Dofs();

  /**
   * Returns the meta object for class '{@link srf.transpiler.fortxtrans.fortXTrans.BlockELem <em>Block ELem</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Block ELem</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.BlockELem
   * @generated
   */
  EClass getBlockELem();

  /**
   * Returns the meta object for the containment reference '{@link srf.transpiler.fortxtrans.fortXTrans.BlockELem#getExpr <em>Expr</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Expr</em>'.
   * @see srf.transpiler.fortxtrans.fortXTrans.BlockELem#getExpr()
   * @see #getBlockELem()
   * @generated
   */
  EReference getBlockELem_Expr();

  /**
   * Returns the factory that creates the instances of the model.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the factory that creates the instances of the model.
   * @generated
   */
  FortXTransFactory getFortXTransFactory();

  /**
   * <!-- begin-user-doc -->
   * Defines literals for the meta objects that represent
   * <ul>
   *   <li>each class,</li>
   *   <li>each feature of each class,</li>
   *   <li>each enum,</li>
   *   <li>and each data type</li>
   * </ul>
   * <!-- end-user-doc -->
   * @generated
   */
  interface Literals
  {
    /**
     * The meta object literal for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.ModelImpl <em>Model</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.ModelImpl
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getModel()
     * @generated
     */
    EClass MODEL = eINSTANCE.getModel();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute MODEL__NAME = eINSTANCE.getModel_Name();

    /**
     * The meta object literal for the '<em><b>Imports</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MODEL__IMPORTS = eINSTANCE.getModel_Imports();

    /**
     * The meta object literal for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.ComponentImpl <em>Component</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.ComponentImpl
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getComponent()
     * @generated
     */
    EClass COMPONENT = eINSTANCE.getComponent();

    /**
     * The meta object literal for the '<em><b>Exports</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference COMPONENT__EXPORTS = eINSTANCE.getComponent_Exports();

    /**
     * The meta object literal for the '<em><b>Decls</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference COMPONENT__DECLS = eINSTANCE.getComponent_Decls();

    /**
     * The meta object literal for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.APIImpl <em>API</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.APIImpl
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getAPI()
     * @generated
     */
    EClass API = eINSTANCE.getAPI();

    /**
     * The meta object literal for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.ImportImpl <em>Import</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.ImportImpl
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getImport()
     * @generated
     */
    EClass IMPORT = eINSTANCE.getImport();

    /**
     * The meta object literal for the '<em><b>Imps</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute IMPORT__IMPS = eINSTANCE.getImport_Imps();

    /**
     * The meta object literal for the '<em><b>Imported Names</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference IMPORT__IMPORTED_NAMES = eINSTANCE.getImport_ImportedNames();

    /**
     * The meta object literal for the '<em><b>Api</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute IMPORT__API = eINSTANCE.getImport_Api();

    /**
     * The meta object literal for the '<em><b>Aliasedimported Names</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference IMPORT__ALIASEDIMPORTED_NAMES = eINSTANCE.getImport_AliasedimportedNames();

    /**
     * The meta object literal for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.ExportImpl <em>Export</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.ExportImpl
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getExport()
     * @generated
     */
    EClass EXPORT = eINSTANCE.getExport();

    /**
     * The meta object literal for the '<em><b>Exp</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute EXPORT__EXP = eINSTANCE.getExport_Exp();

    /**
     * The meta object literal for the '<em><b>Exported Name</b></em>' attribute list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute EXPORT__EXPORTED_NAME = eINSTANCE.getExport_ExportedName();

    /**
     * The meta object literal for the '<em><b>Brack</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute EXPORT__BRACK = eINSTANCE.getExport_Brack();

    /**
     * The meta object literal for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.ImportedNamesImpl <em>Imported Names</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.ImportedNamesImpl
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getImportedNames()
     * @generated
     */
    EClass IMPORTED_NAMES = eINSTANCE.getImportedNames();

    /**
     * The meta object literal for the '<em><b>Impname</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute IMPORTED_NAMES__IMPNAME = eINSTANCE.getImportedNames_Impname();

    /**
     * The meta object literal for the '<em><b>Except</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute IMPORTED_NAMES__EXCEPT = eINSTANCE.getImportedNames_Except();

    /**
     * The meta object literal for the '<em><b>Simp</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference IMPORTED_NAMES__SIMP = eINSTANCE.getImportedNames_Simp();

    /**
     * The meta object literal for the '<em><b>Simp List</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference IMPORTED_NAMES__SIMP_LIST = eINSTANCE.getImportedNames_SimpList();

    /**
     * The meta object literal for the '<em><b>Comma</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute IMPORTED_NAMES__COMMA = eINSTANCE.getImportedNames_Comma();

    /**
     * The meta object literal for the '<em><b>Dots</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute IMPORTED_NAMES__DOTS = eINSTANCE.getImportedNames_Dots();

    /**
     * The meta object literal for the '<em><b>Asname</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute IMPORTED_NAMES__ASNAME = eINSTANCE.getImportedNames_Asname();

    /**
     * The meta object literal for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.SimpleNamesImpl <em>Simple Names</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.SimpleNamesImpl
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getSimpleNames()
     * @generated
     */
    EClass SIMPLE_NAMES = eINSTANCE.getSimpleNames();

    /**
     * The meta object literal for the '<em><b>Name List</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference SIMPLE_NAMES__NAME_LIST = eINSTANCE.getSimpleNames_NameList();

    /**
     * The meta object literal for the '<em><b>Brack</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute SIMPLE_NAMES__BRACK = eINSTANCE.getSimpleNames_Brack();

    /**
     * The meta object literal for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.SimpleNameImpl <em>Simple Name</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.SimpleNameImpl
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getSimpleName()
     * @generated
     */
    EClass SIMPLE_NAME = eINSTANCE.getSimpleName();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute SIMPLE_NAME__NAME = eINSTANCE.getSimpleName_Name();

    /**
     * The meta object literal for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.AliasedSimpleNameImpl <em>Aliased Simple Name</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.AliasedSimpleNameImpl
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getAliasedSimpleName()
     * @generated
     */
    EClass ALIASED_SIMPLE_NAME = eINSTANCE.getAliasedSimpleName();

    /**
     * The meta object literal for the '<em><b>Orig</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ALIASED_SIMPLE_NAME__ORIG = eINSTANCE.getAliasedSimpleName_Orig();

    /**
     * The meta object literal for the '<em><b>As Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ALIASED_SIMPLE_NAME__AS_NAME = eINSTANCE.getAliasedSimpleName_AsName();

    /**
     * The meta object literal for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.AliasedAPINamesImpl <em>Aliased API Names</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.AliasedAPINamesImpl
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getAliasedAPINames()
     * @generated
     */
    EClass ALIASED_API_NAMES = eINSTANCE.getAliasedAPINames();

    /**
     * The meta object literal for the '<em><b>Name List</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ALIASED_API_NAMES__NAME_LIST = eINSTANCE.getAliasedAPINames_NameList();

    /**
     * The meta object literal for the '<em><b>Brack</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ALIASED_API_NAMES__BRACK = eINSTANCE.getAliasedAPINames_Brack();

    /**
     * The meta object literal for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.AliasedAPINameImpl <em>Aliased API Name</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.AliasedAPINameImpl
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getAliasedAPIName()
     * @generated
     */
    EClass ALIASED_API_NAME = eINSTANCE.getAliasedAPIName();

    /**
     * The meta object literal for the '<em><b>Orig</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ALIASED_API_NAME__ORIG = eINSTANCE.getAliasedAPIName_Orig();

    /**
     * The meta object literal for the '<em><b>As Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ALIASED_API_NAME__AS_NAME = eINSTANCE.getAliasedAPIName_AsName();

    /**
     * The meta object literal for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.DeclsImpl <em>Decls</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.DeclsImpl
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getDecls()
     * @generated
     */
    EClass DECLS = eINSTANCE.getDecls();

    /**
     * The meta object literal for the '<em><b>Decls</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference DECLS__DECLS = eINSTANCE.getDecls_Decls();

    /**
     * The meta object literal for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.DeclImpl <em>Decl</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.DeclImpl
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getDecl()
     * @generated
     */
    EClass DECL = eINSTANCE.getDecl();

    /**
     * The meta object literal for the '<em><b>Function</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference DECL__FUNCTION = eINSTANCE.getDecl_Function();

    /**
     * The meta object literal for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.FnDeclImpl <em>Fn Decl</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.FnDeclImpl
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getFnDecl()
     * @generated
     */
    EClass FN_DECL = eINSTANCE.getFnDecl();

    /**
     * The meta object literal for the '<em><b>Mods</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FN_DECL__MODS = eINSTANCE.getFnDecl_Mods();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute FN_DECL__NAME = eINSTANCE.getFnDecl_Name();

    /**
     * The meta object literal for the '<em><b>Params</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FN_DECL__PARAMS = eINSTANCE.getFnDecl_Params();

    /**
     * The meta object literal for the '<em><b>Ret Val</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FN_DECL__RET_VAL = eINSTANCE.getFnDecl_RetVal();

    /**
     * The meta object literal for the '<em><b>Fn Itself</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FN_DECL__FN_ITSELF = eINSTANCE.getFnDecl_FnItself();

    /**
     * The meta object literal for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.FnModsImpl <em>Fn Mods</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.FnModsImpl
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getFnMods()
     * @generated
     */
    EClass FN_MODS = eINSTANCE.getFnMods();

    /**
     * The meta object literal for the '<em><b>Mods</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FN_MODS__MODS = eINSTANCE.getFnMods_Mods();

    /**
     * The meta object literal for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.FnModImpl <em>Fn Mod</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.FnModImpl
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getFnMod()
     * @generated
     */
    EClass FN_MOD = eINSTANCE.getFnMod();

    /**
     * The meta object literal for the '<em><b>Modtype</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute FN_MOD__MODTYPE = eINSTANCE.getFnMod_Modtype();

    /**
     * The meta object literal for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.ValParamImpl <em>Val Param</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.ValParamImpl
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getValParam()
     * @generated
     */
    EClass VAL_PARAM = eINSTANCE.getValParam();

    /**
     * The meta object literal for the '<em><b>Params</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference VAL_PARAM__PARAMS = eINSTANCE.getValParam_Params();

    /**
     * The meta object literal for the '<em><b>Brack</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute VAL_PARAM__BRACK = eINSTANCE.getValParam_Brack();

    /**
     * The meta object literal for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.ParamImpl <em>Param</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.ParamImpl
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getParam()
     * @generated
     */
    EClass PARAM = eINSTANCE.getParam();

    /**
     * The meta object literal for the '<em><b>BId</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute PARAM__BID = eINSTANCE.getParam_BId();

    /**
     * The meta object literal for the '<em><b>Istype</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PARAM__ISTYPE = eINSTANCE.getParam_Istype();

    /**
     * The meta object literal for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.IsTypeImpl <em>Is Type</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.IsTypeImpl
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getIsType()
     * @generated
     */
    EClass IS_TYPE = eINSTANCE.getIsType();

    /**
     * The meta object literal for the '<em><b>Type</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference IS_TYPE__TYPE = eINSTANCE.getIsType_Type();

    /**
     * The meta object literal for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.RetTypeImpl <em>Ret Type</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.RetTypeImpl
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getRetType()
     * @generated
     */
    EClass RET_TYPE = eINSTANCE.getRetType();

    /**
     * The meta object literal for the '<em><b>Empty</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute RET_TYPE__EMPTY = eINSTANCE.getRetType_Empty();

    /**
     * The meta object literal for the '<em><b>Type</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference RET_TYPE__TYPE = eINSTANCE.getRetType_Type();

    /**
     * The meta object literal for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.TypeImpl <em>Type</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.TypeImpl
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getType()
     * @generated
     */
    EClass TYPE = eINSTANCE.getType();

    /**
     * The meta object literal for the '<em><b>Tname</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute TYPE__TNAME = eINSTANCE.getType_Tname();

    /**
     * The meta object literal for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.ExpressionImpl <em>Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.ExpressionImpl
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getExpression()
     * @generated
     */
    EClass EXPRESSION = eINSTANCE.getExpression();

    /**
     * The meta object literal for the '<em><b>Exp</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPRESSION__EXP = eINSTANCE.getExpression_Exp();

    /**
     * The meta object literal for the '<em><b>Id</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute EXPRESSION__ID = eINSTANCE.getExpression_Id();

    /**
     * The meta object literal for the '<em><b>Atom</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute EXPRESSION__ATOM = eINSTANCE.getExpression_Atom();

    /**
     * The meta object literal for the '<em><b>Block</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPRESSION__BLOCK = eINSTANCE.getExpression_Block();

    /**
     * The meta object literal for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.ExprTailImpl <em>Expr Tail</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.ExprTailImpl
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getExprTail()
     * @generated
     */
    EClass EXPR_TAIL = eINSTANCE.getExprTail();

    /**
     * The meta object literal for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.ExprImpl <em>Expr</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.ExprImpl
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getExpr()
     * @generated
     */
    EClass EXPR = eINSTANCE.getExpr();

    /**
     * The meta object literal for the '<em><b>Front</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPR__FRONT = eINSTANCE.getExpr_Front();

    /**
     * The meta object literal for the '<em><b>Tails</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPR__TAILS = eINSTANCE.getExpr_Tails();

    /**
     * The meta object literal for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.ExprFrontImpl <em>Expr Front</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.ExprFrontImpl
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getExprFront()
     * @generated
     */
    EClass EXPR_FRONT = eINSTANCE.getExprFront();

    /**
     * The meta object literal for the '<em><b>Delim</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPR_FRONT__DELIM = eINSTANCE.getExprFront_Delim();

    /**
     * The meta object literal for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.DelimitedImpl <em>Delimited</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.DelimitedImpl
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getDelimited()
     * @generated
     */
    EClass DELIMITED = eINSTANCE.getDelimited();

    /**
     * The meta object literal for the '<em><b>Par</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference DELIMITED__PAR = eINSTANCE.getDelimited_Par();

    /**
     * The meta object literal for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.ParanthesizedImpl <em>Paranthesized</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.ParanthesizedImpl
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getParanthesized()
     * @generated
     */
    EClass PARANTHESIZED = eINSTANCE.getParanthesized();

    /**
     * The meta object literal for the '<em><b>Expr</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PARANTHESIZED__EXPR = eINSTANCE.getParanthesized_Expr();

    /**
     * The meta object literal for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.DoImpl <em>Do</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.DoImpl
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getDo()
     * @generated
     */
    EClass DO = eINSTANCE.getDo();

    /**
     * The meta object literal for the '<em><b>Dofs</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference DO__DOFS = eINSTANCE.getDo_Dofs();

    /**
     * The meta object literal for the '{@link srf.transpiler.fortxtrans.fortXTrans.impl.BlockELemImpl <em>Block ELem</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.BlockELemImpl
     * @see srf.transpiler.fortxtrans.fortXTrans.impl.FortXTransPackageImpl#getBlockELem()
     * @generated
     */
    EClass BLOCK_ELEM = eINSTANCE.getBlockELem();

    /**
     * The meta object literal for the '<em><b>Expr</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference BLOCK_ELEM__EXPR = eINSTANCE.getBlockELem_Expr();

  }

} //FortXTransPackage
