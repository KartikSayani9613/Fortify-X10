/**
 * generated by Xtext 2.13.0-SNAPSHOT
 */
package srf.transpiler.fortxtrans.fortXTrans.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import srf.transpiler.fortxtrans.fortXTrans.AliasedSimpleName;
import srf.transpiler.fortxtrans.fortXTrans.FortXTransPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Aliased Simple Name</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link srf.transpiler.fortxtrans.fortXTrans.impl.AliasedSimpleNameImpl#getOrig <em>Orig</em>}</li>
 *   <li>{@link srf.transpiler.fortxtrans.fortXTrans.impl.AliasedSimpleNameImpl#getAsName <em>As Name</em>}</li>
 * </ul>
 *
 * @generated
 */
public class AliasedSimpleNameImpl extends MinimalEObjectImpl.Container implements AliasedSimpleName
{
  /**
   * The default value of the '{@link #getOrig() <em>Orig</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOrig()
   * @generated
   * @ordered
   */
  protected static final String ORIG_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getOrig() <em>Orig</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOrig()
   * @generated
   * @ordered
   */
  protected String orig = ORIG_EDEFAULT;

  /**
   * The default value of the '{@link #getAsName() <em>As Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAsName()
   * @generated
   * @ordered
   */
  protected static final String AS_NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getAsName() <em>As Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAsName()
   * @generated
   * @ordered
   */
  protected String asName = AS_NAME_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected AliasedSimpleNameImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return FortXTransPackage.Literals.ALIASED_SIMPLE_NAME;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getOrig()
  {
    return orig;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setOrig(String newOrig)
  {
    String oldOrig = orig;
    orig = newOrig;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, FortXTransPackage.ALIASED_SIMPLE_NAME__ORIG, oldOrig, orig));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getAsName()
  {
    return asName;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setAsName(String newAsName)
  {
    String oldAsName = asName;
    asName = newAsName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, FortXTransPackage.ALIASED_SIMPLE_NAME__AS_NAME, oldAsName, asName));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case FortXTransPackage.ALIASED_SIMPLE_NAME__ORIG:
        return getOrig();
      case FortXTransPackage.ALIASED_SIMPLE_NAME__AS_NAME:
        return getAsName();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case FortXTransPackage.ALIASED_SIMPLE_NAME__ORIG:
        setOrig((String)newValue);
        return;
      case FortXTransPackage.ALIASED_SIMPLE_NAME__AS_NAME:
        setAsName((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case FortXTransPackage.ALIASED_SIMPLE_NAME__ORIG:
        setOrig(ORIG_EDEFAULT);
        return;
      case FortXTransPackage.ALIASED_SIMPLE_NAME__AS_NAME:
        setAsName(AS_NAME_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case FortXTransPackage.ALIASED_SIMPLE_NAME__ORIG:
        return ORIG_EDEFAULT == null ? orig != null : !ORIG_EDEFAULT.equals(orig);
      case FortXTransPackage.ALIASED_SIMPLE_NAME__AS_NAME:
        return AS_NAME_EDEFAULT == null ? asName != null : !AS_NAME_EDEFAULT.equals(asName);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (orig: ");
    result.append(orig);
    result.append(", asName: ");
    result.append(asName);
    result.append(')');
    return result.toString();
  }

} //AliasedSimpleNameImpl
