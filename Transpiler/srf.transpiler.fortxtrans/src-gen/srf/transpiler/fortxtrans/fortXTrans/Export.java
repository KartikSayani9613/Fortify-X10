/**
 * generated by Xtext 2.13.0-SNAPSHOT
 */
package srf.transpiler.fortxtrans.fortXTrans;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EObject;

/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>Export</b></em>'.
 * <!-- end-user-doc -->
 *
 * <p>
 * The following features are supported:
 * </p>
 * <ul>
 *   <li>{@link srf.transpiler.fortxtrans.fortXTrans.Export#getExp <em>Exp</em>}</li>
 *   <li>{@link srf.transpiler.fortxtrans.fortXTrans.Export#getExportedName <em>Exported Name</em>}</li>
 *   <li>{@link srf.transpiler.fortxtrans.fortXTrans.Export#getBrack <em>Brack</em>}</li>
 * </ul>
 *
 * @see srf.transpiler.fortxtrans.fortXTrans.FortXTransPackage#getExport()
 * @model
 * @generated
 */
public interface Export extends EObject
{
  /**
   * Returns the value of the '<em><b>Exp</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Exp</em>' attribute isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Exp</em>' attribute.
   * @see #setExp(String)
   * @see srf.transpiler.fortxtrans.fortXTrans.FortXTransPackage#getExport_Exp()
   * @model
   * @generated
   */
  String getExp();

  /**
   * Sets the value of the '{@link srf.transpiler.fortxtrans.fortXTrans.Export#getExp <em>Exp</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Exp</em>' attribute.
   * @see #getExp()
   * @generated
   */
  void setExp(String value);

  /**
   * Returns the value of the '<em><b>Exported Name</b></em>' containment reference list.
   * The list contents are of type {@link srf.transpiler.fortxtrans.fortXTrans.QualifiedName}.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Exported Name</em>' containment reference list isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Exported Name</em>' containment reference list.
   * @see srf.transpiler.fortxtrans.fortXTrans.FortXTransPackage#getExport_ExportedName()
   * @model containment="true"
   * @generated
   */
  EList<QualifiedName> getExportedName();

  /**
   * Returns the value of the '<em><b>Brack</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Brack</em>' attribute isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Brack</em>' attribute.
   * @see #setBrack(String)
   * @see srf.transpiler.fortxtrans.fortXTrans.FortXTransPackage#getExport_Brack()
   * @model
   * @generated
   */
  String getBrack();

  /**
   * Sets the value of the '{@link srf.transpiler.fortxtrans.fortXTrans.Export#getBrack <em>Brack</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Brack</em>' attribute.
   * @see #getBrack()
   * @generated
   */
  void setBrack(String value);

} // Export
