package srf.transpiler.fortxtrans.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import srf.transpiler.fortxtrans.services.FortXTransGrammarAccess;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;

@SuppressWarnings("all")
public class InternalFortXTransParser extends AbstractInternalContentAssistParser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "RULE_DOTS", "RULE_ID", "RULE_INT", "RULE_FLOAT", "RULE_STRING", "RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS", "RULE_ANY_OTHER", "'==='", "'=/='", "'EQ'", "'NE'", "'>='", "'<='", "'>'", "'<'", "'LT'", "'GT'", "'LE'", "'GE'", "'component'", "'end'", "'api'", "'}'", "','", "'.'", "'{'", "'as'", "'('", "')'", "':'", "'(|'", "'|)'", "'OR'", "'AND'", "'+'", "'-'", "'/'", "'*'", "'^'", "'!'", "'then'", "'elif'", "'else'", "'<-'", "'#'", "'also'", "'do'", "'='", "'import'", "'export'", "'except'", "'private'", "'test'", "'atomic'", "'io'", "':='", "'return'", "'while'", "'for'", "'if'", "'seq'", "'at'", "'var'", "'true'", "'false'"
    };
    public static final int T__50=50;
    public static final int RULE_DOTS=4;
    public static final int T__19=19;
    public static final int T__15=15;
    public static final int T__59=59;
    public static final int T__16=16;
    public static final int T__17=17;
    public static final int T__18=18;
    public static final int T__55=55;
    public static final int T__56=56;
    public static final int T__13=13;
    public static final int T__57=57;
    public static final int T__14=14;
    public static final int T__58=58;
    public static final int T__51=51;
    public static final int T__52=52;
    public static final int T__53=53;
    public static final int T__54=54;
    public static final int T__60=60;
    public static final int T__61=61;
    public static final int RULE_ID=5;
    public static final int T__26=26;
    public static final int T__27=27;
    public static final int T__28=28;
    public static final int RULE_INT=6;
    public static final int T__29=29;
    public static final int T__22=22;
    public static final int T__66=66;
    public static final int RULE_ML_COMMENT=9;
    public static final int T__23=23;
    public static final int T__67=67;
    public static final int T__24=24;
    public static final int T__68=68;
    public static final int T__25=25;
    public static final int T__69=69;
    public static final int T__62=62;
    public static final int T__63=63;
    public static final int T__20=20;
    public static final int T__64=64;
    public static final int T__21=21;
    public static final int T__65=65;
    public static final int T__70=70;
    public static final int RULE_STRING=8;
    public static final int RULE_SL_COMMENT=10;
    public static final int T__37=37;
    public static final int T__38=38;
    public static final int T__39=39;
    public static final int T__33=33;
    public static final int T__34=34;
    public static final int T__35=35;
    public static final int T__36=36;
    public static final int EOF=-1;
    public static final int T__30=30;
    public static final int T__31=31;
    public static final int T__32=32;
    public static final int RULE_WS=11;
    public static final int RULE_ANY_OTHER=12;
    public static final int T__48=48;
    public static final int T__49=49;
    public static final int T__44=44;
    public static final int T__45=45;
    public static final int RULE_FLOAT=7;
    public static final int T__46=46;
    public static final int T__47=47;
    public static final int T__40=40;
    public static final int T__41=41;
    public static final int T__42=42;
    public static final int T__43=43;

    // delegates
    // delegators


        public InternalFortXTransParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public InternalFortXTransParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
             
        }
        

    public String[] getTokenNames() { return InternalFortXTransParser.tokenNames; }
    public String getGrammarFileName() { return "InternalFortXTrans.g"; }


    	private FortXTransGrammarAccess grammarAccess;

    	public void setGrammarAccess(FortXTransGrammarAccess grammarAccess) {
    		this.grammarAccess = grammarAccess;
    	}

    	@Override
    	protected Grammar getGrammar() {
    		return grammarAccess.getGrammar();
    	}

    	@Override
    	protected String getValueForTokenName(String tokenName) {
    		return tokenName;
    	}



    // $ANTLR start "entryRuleModel"
    // InternalFortXTrans.g:53:1: entryRuleModel : ruleModel EOF ;
    public final void entryRuleModel() throws RecognitionException {
        try {
            // InternalFortXTrans.g:54:1: ( ruleModel EOF )
            // InternalFortXTrans.g:55:1: ruleModel EOF
            {
             before(grammarAccess.getModelRule()); 
            pushFollow(FOLLOW_1);
            ruleModel();

            state._fsp--;

             after(grammarAccess.getModelRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleModel"


    // $ANTLR start "ruleModel"
    // InternalFortXTrans.g:62:1: ruleModel : ( ( rule__Model__Alternatives ) ) ;
    public final void ruleModel() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:66:2: ( ( ( rule__Model__Alternatives ) ) )
            // InternalFortXTrans.g:67:2: ( ( rule__Model__Alternatives ) )
            {
            // InternalFortXTrans.g:67:2: ( ( rule__Model__Alternatives ) )
            // InternalFortXTrans.g:68:3: ( rule__Model__Alternatives )
            {
             before(grammarAccess.getModelAccess().getAlternatives()); 
            // InternalFortXTrans.g:69:3: ( rule__Model__Alternatives )
            // InternalFortXTrans.g:69:4: rule__Model__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__Model__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getModelAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleModel"


    // $ANTLR start "entryRuleComponent"
    // InternalFortXTrans.g:78:1: entryRuleComponent : ruleComponent EOF ;
    public final void entryRuleComponent() throws RecognitionException {
        try {
            // InternalFortXTrans.g:79:1: ( ruleComponent EOF )
            // InternalFortXTrans.g:80:1: ruleComponent EOF
            {
             before(grammarAccess.getComponentRule()); 
            pushFollow(FOLLOW_1);
            ruleComponent();

            state._fsp--;

             after(grammarAccess.getComponentRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleComponent"


    // $ANTLR start "ruleComponent"
    // InternalFortXTrans.g:87:1: ruleComponent : ( ( rule__Component__Group__0 ) ) ;
    public final void ruleComponent() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:91:2: ( ( ( rule__Component__Group__0 ) ) )
            // InternalFortXTrans.g:92:2: ( ( rule__Component__Group__0 ) )
            {
            // InternalFortXTrans.g:92:2: ( ( rule__Component__Group__0 ) )
            // InternalFortXTrans.g:93:3: ( rule__Component__Group__0 )
            {
             before(grammarAccess.getComponentAccess().getGroup()); 
            // InternalFortXTrans.g:94:3: ( rule__Component__Group__0 )
            // InternalFortXTrans.g:94:4: rule__Component__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Component__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getComponentAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleComponent"


    // $ANTLR start "entryRuleAPI"
    // InternalFortXTrans.g:103:1: entryRuleAPI : ruleAPI EOF ;
    public final void entryRuleAPI() throws RecognitionException {
        try {
            // InternalFortXTrans.g:104:1: ( ruleAPI EOF )
            // InternalFortXTrans.g:105:1: ruleAPI EOF
            {
             before(grammarAccess.getAPIRule()); 
            pushFollow(FOLLOW_1);
            ruleAPI();

            state._fsp--;

             after(grammarAccess.getAPIRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAPI"


    // $ANTLR start "ruleAPI"
    // InternalFortXTrans.g:112:1: ruleAPI : ( ( rule__API__Group__0 ) ) ;
    public final void ruleAPI() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:116:2: ( ( ( rule__API__Group__0 ) ) )
            // InternalFortXTrans.g:117:2: ( ( rule__API__Group__0 ) )
            {
            // InternalFortXTrans.g:117:2: ( ( rule__API__Group__0 ) )
            // InternalFortXTrans.g:118:3: ( rule__API__Group__0 )
            {
             before(grammarAccess.getAPIAccess().getGroup()); 
            // InternalFortXTrans.g:119:3: ( rule__API__Group__0 )
            // InternalFortXTrans.g:119:4: rule__API__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__API__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getAPIAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAPI"


    // $ANTLR start "entryRuleImport"
    // InternalFortXTrans.g:128:1: entryRuleImport : ruleImport EOF ;
    public final void entryRuleImport() throws RecognitionException {
        try {
            // InternalFortXTrans.g:129:1: ( ruleImport EOF )
            // InternalFortXTrans.g:130:1: ruleImport EOF
            {
             before(grammarAccess.getImportRule()); 
            pushFollow(FOLLOW_1);
            ruleImport();

            state._fsp--;

             after(grammarAccess.getImportRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleImport"


    // $ANTLR start "ruleImport"
    // InternalFortXTrans.g:137:1: ruleImport : ( ( rule__Import__Alternatives ) ) ;
    public final void ruleImport() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:141:2: ( ( ( rule__Import__Alternatives ) ) )
            // InternalFortXTrans.g:142:2: ( ( rule__Import__Alternatives ) )
            {
            // InternalFortXTrans.g:142:2: ( ( rule__Import__Alternatives ) )
            // InternalFortXTrans.g:143:3: ( rule__Import__Alternatives )
            {
             before(grammarAccess.getImportAccess().getAlternatives()); 
            // InternalFortXTrans.g:144:3: ( rule__Import__Alternatives )
            // InternalFortXTrans.g:144:4: rule__Import__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__Import__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getImportAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleImport"


    // $ANTLR start "entryRuleExport"
    // InternalFortXTrans.g:153:1: entryRuleExport : ruleExport EOF ;
    public final void entryRuleExport() throws RecognitionException {
        try {
            // InternalFortXTrans.g:154:1: ( ruleExport EOF )
            // InternalFortXTrans.g:155:1: ruleExport EOF
            {
             before(grammarAccess.getExportRule()); 
            pushFollow(FOLLOW_1);
            ruleExport();

            state._fsp--;

             after(grammarAccess.getExportRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleExport"


    // $ANTLR start "ruleExport"
    // InternalFortXTrans.g:162:1: ruleExport : ( ( rule__Export__Alternatives ) ) ;
    public final void ruleExport() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:166:2: ( ( ( rule__Export__Alternatives ) ) )
            // InternalFortXTrans.g:167:2: ( ( rule__Export__Alternatives ) )
            {
            // InternalFortXTrans.g:167:2: ( ( rule__Export__Alternatives ) )
            // InternalFortXTrans.g:168:3: ( rule__Export__Alternatives )
            {
             before(grammarAccess.getExportAccess().getAlternatives()); 
            // InternalFortXTrans.g:169:3: ( rule__Export__Alternatives )
            // InternalFortXTrans.g:169:4: rule__Export__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__Export__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getExportAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleExport"


    // $ANTLR start "entryRuleImportedNames"
    // InternalFortXTrans.g:178:1: entryRuleImportedNames : ruleImportedNames EOF ;
    public final void entryRuleImportedNames() throws RecognitionException {
        try {
            // InternalFortXTrans.g:179:1: ( ruleImportedNames EOF )
            // InternalFortXTrans.g:180:1: ruleImportedNames EOF
            {
             before(grammarAccess.getImportedNamesRule()); 
            pushFollow(FOLLOW_1);
            ruleImportedNames();

            state._fsp--;

             after(grammarAccess.getImportedNamesRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleImportedNames"


    // $ANTLR start "ruleImportedNames"
    // InternalFortXTrans.g:187:1: ruleImportedNames : ( ( rule__ImportedNames__Alternatives ) ) ;
    public final void ruleImportedNames() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:191:2: ( ( ( rule__ImportedNames__Alternatives ) ) )
            // InternalFortXTrans.g:192:2: ( ( rule__ImportedNames__Alternatives ) )
            {
            // InternalFortXTrans.g:192:2: ( ( rule__ImportedNames__Alternatives ) )
            // InternalFortXTrans.g:193:3: ( rule__ImportedNames__Alternatives )
            {
             before(grammarAccess.getImportedNamesAccess().getAlternatives()); 
            // InternalFortXTrans.g:194:3: ( rule__ImportedNames__Alternatives )
            // InternalFortXTrans.g:194:4: rule__ImportedNames__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__ImportedNames__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getImportedNamesAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleImportedNames"


    // $ANTLR start "entryRuleQualifiedName"
    // InternalFortXTrans.g:203:1: entryRuleQualifiedName : ruleQualifiedName EOF ;
    public final void entryRuleQualifiedName() throws RecognitionException {
        try {
            // InternalFortXTrans.g:204:1: ( ruleQualifiedName EOF )
            // InternalFortXTrans.g:205:1: ruleQualifiedName EOF
            {
             before(grammarAccess.getQualifiedNameRule()); 
            pushFollow(FOLLOW_1);
            ruleQualifiedName();

            state._fsp--;

             after(grammarAccess.getQualifiedNameRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleQualifiedName"


    // $ANTLR start "ruleQualifiedName"
    // InternalFortXTrans.g:212:1: ruleQualifiedName : ( ( rule__QualifiedName__Group__0 ) ) ;
    public final void ruleQualifiedName() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:216:2: ( ( ( rule__QualifiedName__Group__0 ) ) )
            // InternalFortXTrans.g:217:2: ( ( rule__QualifiedName__Group__0 ) )
            {
            // InternalFortXTrans.g:217:2: ( ( rule__QualifiedName__Group__0 ) )
            // InternalFortXTrans.g:218:3: ( rule__QualifiedName__Group__0 )
            {
             before(grammarAccess.getQualifiedNameAccess().getGroup()); 
            // InternalFortXTrans.g:219:3: ( rule__QualifiedName__Group__0 )
            // InternalFortXTrans.g:219:4: rule__QualifiedName__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__QualifiedName__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getQualifiedNameAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleQualifiedName"


    // $ANTLR start "entryRuleQualified"
    // InternalFortXTrans.g:228:1: entryRuleQualified : ruleQualified EOF ;
    public final void entryRuleQualified() throws RecognitionException {
        try {
            // InternalFortXTrans.g:229:1: ( ruleQualified EOF )
            // InternalFortXTrans.g:230:1: ruleQualified EOF
            {
             before(grammarAccess.getQualifiedRule()); 
            pushFollow(FOLLOW_1);
            ruleQualified();

            state._fsp--;

             after(grammarAccess.getQualifiedRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleQualified"


    // $ANTLR start "ruleQualified"
    // InternalFortXTrans.g:237:1: ruleQualified : ( ( rule__Qualified__Alternatives ) ) ;
    public final void ruleQualified() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:241:2: ( ( ( rule__Qualified__Alternatives ) ) )
            // InternalFortXTrans.g:242:2: ( ( rule__Qualified__Alternatives ) )
            {
            // InternalFortXTrans.g:242:2: ( ( rule__Qualified__Alternatives ) )
            // InternalFortXTrans.g:243:3: ( rule__Qualified__Alternatives )
            {
             before(grammarAccess.getQualifiedAccess().getAlternatives()); 
            // InternalFortXTrans.g:244:3: ( rule__Qualified__Alternatives )
            // InternalFortXTrans.g:244:4: rule__Qualified__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__Qualified__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getQualifiedAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleQualified"


    // $ANTLR start "entryRuleQualifiedNameTuple"
    // InternalFortXTrans.g:253:1: entryRuleQualifiedNameTuple : ruleQualifiedNameTuple EOF ;
    public final void entryRuleQualifiedNameTuple() throws RecognitionException {
        try {
            // InternalFortXTrans.g:254:1: ( ruleQualifiedNameTuple EOF )
            // InternalFortXTrans.g:255:1: ruleQualifiedNameTuple EOF
            {
             before(grammarAccess.getQualifiedNameTupleRule()); 
            pushFollow(FOLLOW_1);
            ruleQualifiedNameTuple();

            state._fsp--;

             after(grammarAccess.getQualifiedNameTupleRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleQualifiedNameTuple"


    // $ANTLR start "ruleQualifiedNameTuple"
    // InternalFortXTrans.g:262:1: ruleQualifiedNameTuple : ( ( rule__QualifiedNameTuple__Group__0 ) ) ;
    public final void ruleQualifiedNameTuple() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:266:2: ( ( ( rule__QualifiedNameTuple__Group__0 ) ) )
            // InternalFortXTrans.g:267:2: ( ( rule__QualifiedNameTuple__Group__0 ) )
            {
            // InternalFortXTrans.g:267:2: ( ( rule__QualifiedNameTuple__Group__0 ) )
            // InternalFortXTrans.g:268:3: ( rule__QualifiedNameTuple__Group__0 )
            {
             before(grammarAccess.getQualifiedNameTupleAccess().getGroup()); 
            // InternalFortXTrans.g:269:3: ( rule__QualifiedNameTuple__Group__0 )
            // InternalFortXTrans.g:269:4: rule__QualifiedNameTuple__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__QualifiedNameTuple__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getQualifiedNameTupleAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleQualifiedNameTuple"


    // $ANTLR start "entryRuleSimpleNames"
    // InternalFortXTrans.g:278:1: entryRuleSimpleNames : ruleSimpleNames EOF ;
    public final void entryRuleSimpleNames() throws RecognitionException {
        try {
            // InternalFortXTrans.g:279:1: ( ruleSimpleNames EOF )
            // InternalFortXTrans.g:280:1: ruleSimpleNames EOF
            {
             before(grammarAccess.getSimpleNamesRule()); 
            pushFollow(FOLLOW_1);
            ruleSimpleNames();

            state._fsp--;

             after(grammarAccess.getSimpleNamesRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSimpleNames"


    // $ANTLR start "ruleSimpleNames"
    // InternalFortXTrans.g:287:1: ruleSimpleNames : ( ( rule__SimpleNames__Alternatives ) ) ;
    public final void ruleSimpleNames() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:291:2: ( ( ( rule__SimpleNames__Alternatives ) ) )
            // InternalFortXTrans.g:292:2: ( ( rule__SimpleNames__Alternatives ) )
            {
            // InternalFortXTrans.g:292:2: ( ( rule__SimpleNames__Alternatives ) )
            // InternalFortXTrans.g:293:3: ( rule__SimpleNames__Alternatives )
            {
             before(grammarAccess.getSimpleNamesAccess().getAlternatives()); 
            // InternalFortXTrans.g:294:3: ( rule__SimpleNames__Alternatives )
            // InternalFortXTrans.g:294:4: rule__SimpleNames__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__SimpleNames__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getSimpleNamesAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSimpleNames"


    // $ANTLR start "entryRuleSimpleName"
    // InternalFortXTrans.g:303:1: entryRuleSimpleName : ruleSimpleName EOF ;
    public final void entryRuleSimpleName() throws RecognitionException {
        try {
            // InternalFortXTrans.g:304:1: ( ruleSimpleName EOF )
            // InternalFortXTrans.g:305:1: ruleSimpleName EOF
            {
             before(grammarAccess.getSimpleNameRule()); 
            pushFollow(FOLLOW_1);
            ruleSimpleName();

            state._fsp--;

             after(grammarAccess.getSimpleNameRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSimpleName"


    // $ANTLR start "ruleSimpleName"
    // InternalFortXTrans.g:312:1: ruleSimpleName : ( ( rule__SimpleName__NameAssignment ) ) ;
    public final void ruleSimpleName() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:316:2: ( ( ( rule__SimpleName__NameAssignment ) ) )
            // InternalFortXTrans.g:317:2: ( ( rule__SimpleName__NameAssignment ) )
            {
            // InternalFortXTrans.g:317:2: ( ( rule__SimpleName__NameAssignment ) )
            // InternalFortXTrans.g:318:3: ( rule__SimpleName__NameAssignment )
            {
             before(grammarAccess.getSimpleNameAccess().getNameAssignment()); 
            // InternalFortXTrans.g:319:3: ( rule__SimpleName__NameAssignment )
            // InternalFortXTrans.g:319:4: rule__SimpleName__NameAssignment
            {
            pushFollow(FOLLOW_2);
            rule__SimpleName__NameAssignment();

            state._fsp--;


            }

             after(grammarAccess.getSimpleNameAccess().getNameAssignment()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSimpleName"


    // $ANTLR start "entryRuleAliasedSimpleName"
    // InternalFortXTrans.g:328:1: entryRuleAliasedSimpleName : ruleAliasedSimpleName EOF ;
    public final void entryRuleAliasedSimpleName() throws RecognitionException {
        try {
            // InternalFortXTrans.g:329:1: ( ruleAliasedSimpleName EOF )
            // InternalFortXTrans.g:330:1: ruleAliasedSimpleName EOF
            {
             before(grammarAccess.getAliasedSimpleNameRule()); 
            pushFollow(FOLLOW_1);
            ruleAliasedSimpleName();

            state._fsp--;

             after(grammarAccess.getAliasedSimpleNameRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAliasedSimpleName"


    // $ANTLR start "ruleAliasedSimpleName"
    // InternalFortXTrans.g:337:1: ruleAliasedSimpleName : ( ( rule__AliasedSimpleName__Group__0 ) ) ;
    public final void ruleAliasedSimpleName() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:341:2: ( ( ( rule__AliasedSimpleName__Group__0 ) ) )
            // InternalFortXTrans.g:342:2: ( ( rule__AliasedSimpleName__Group__0 ) )
            {
            // InternalFortXTrans.g:342:2: ( ( rule__AliasedSimpleName__Group__0 ) )
            // InternalFortXTrans.g:343:3: ( rule__AliasedSimpleName__Group__0 )
            {
             before(grammarAccess.getAliasedSimpleNameAccess().getGroup()); 
            // InternalFortXTrans.g:344:3: ( rule__AliasedSimpleName__Group__0 )
            // InternalFortXTrans.g:344:4: rule__AliasedSimpleName__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__AliasedSimpleName__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getAliasedSimpleNameAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAliasedSimpleName"


    // $ANTLR start "entryRuleAliasedAPINames"
    // InternalFortXTrans.g:353:1: entryRuleAliasedAPINames : ruleAliasedAPINames EOF ;
    public final void entryRuleAliasedAPINames() throws RecognitionException {
        try {
            // InternalFortXTrans.g:354:1: ( ruleAliasedAPINames EOF )
            // InternalFortXTrans.g:355:1: ruleAliasedAPINames EOF
            {
             before(grammarAccess.getAliasedAPINamesRule()); 
            pushFollow(FOLLOW_1);
            ruleAliasedAPINames();

            state._fsp--;

             after(grammarAccess.getAliasedAPINamesRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAliasedAPINames"


    // $ANTLR start "ruleAliasedAPINames"
    // InternalFortXTrans.g:362:1: ruleAliasedAPINames : ( ( rule__AliasedAPINames__Alternatives ) ) ;
    public final void ruleAliasedAPINames() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:366:2: ( ( ( rule__AliasedAPINames__Alternatives ) ) )
            // InternalFortXTrans.g:367:2: ( ( rule__AliasedAPINames__Alternatives ) )
            {
            // InternalFortXTrans.g:367:2: ( ( rule__AliasedAPINames__Alternatives ) )
            // InternalFortXTrans.g:368:3: ( rule__AliasedAPINames__Alternatives )
            {
             before(grammarAccess.getAliasedAPINamesAccess().getAlternatives()); 
            // InternalFortXTrans.g:369:3: ( rule__AliasedAPINames__Alternatives )
            // InternalFortXTrans.g:369:4: rule__AliasedAPINames__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__AliasedAPINames__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getAliasedAPINamesAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAliasedAPINames"


    // $ANTLR start "entryRuleAliasedAPIName"
    // InternalFortXTrans.g:378:1: entryRuleAliasedAPIName : ruleAliasedAPIName EOF ;
    public final void entryRuleAliasedAPIName() throws RecognitionException {
        try {
            // InternalFortXTrans.g:379:1: ( ruleAliasedAPIName EOF )
            // InternalFortXTrans.g:380:1: ruleAliasedAPIName EOF
            {
             before(grammarAccess.getAliasedAPINameRule()); 
            pushFollow(FOLLOW_1);
            ruleAliasedAPIName();

            state._fsp--;

             after(grammarAccess.getAliasedAPINameRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAliasedAPIName"


    // $ANTLR start "ruleAliasedAPIName"
    // InternalFortXTrans.g:387:1: ruleAliasedAPIName : ( ( rule__AliasedAPIName__Group__0 ) ) ;
    public final void ruleAliasedAPIName() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:391:2: ( ( ( rule__AliasedAPIName__Group__0 ) ) )
            // InternalFortXTrans.g:392:2: ( ( rule__AliasedAPIName__Group__0 ) )
            {
            // InternalFortXTrans.g:392:2: ( ( rule__AliasedAPIName__Group__0 ) )
            // InternalFortXTrans.g:393:3: ( rule__AliasedAPIName__Group__0 )
            {
             before(grammarAccess.getAliasedAPINameAccess().getGroup()); 
            // InternalFortXTrans.g:394:3: ( rule__AliasedAPIName__Group__0 )
            // InternalFortXTrans.g:394:4: rule__AliasedAPIName__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__AliasedAPIName__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getAliasedAPINameAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAliasedAPIName"


    // $ANTLR start "entryRuleDecls"
    // InternalFortXTrans.g:403:1: entryRuleDecls : ruleDecls EOF ;
    public final void entryRuleDecls() throws RecognitionException {
        try {
            // InternalFortXTrans.g:404:1: ( ruleDecls EOF )
            // InternalFortXTrans.g:405:1: ruleDecls EOF
            {
             before(grammarAccess.getDeclsRule()); 
            pushFollow(FOLLOW_1);
            ruleDecls();

            state._fsp--;

             after(grammarAccess.getDeclsRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDecls"


    // $ANTLR start "ruleDecls"
    // InternalFortXTrans.g:412:1: ruleDecls : ( ( ( rule__Decls__DeclsAssignment ) ) ( ( rule__Decls__DeclsAssignment )* ) ) ;
    public final void ruleDecls() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:416:2: ( ( ( ( rule__Decls__DeclsAssignment ) ) ( ( rule__Decls__DeclsAssignment )* ) ) )
            // InternalFortXTrans.g:417:2: ( ( ( rule__Decls__DeclsAssignment ) ) ( ( rule__Decls__DeclsAssignment )* ) )
            {
            // InternalFortXTrans.g:417:2: ( ( ( rule__Decls__DeclsAssignment ) ) ( ( rule__Decls__DeclsAssignment )* ) )
            // InternalFortXTrans.g:418:3: ( ( rule__Decls__DeclsAssignment ) ) ( ( rule__Decls__DeclsAssignment )* )
            {
            // InternalFortXTrans.g:418:3: ( ( rule__Decls__DeclsAssignment ) )
            // InternalFortXTrans.g:419:4: ( rule__Decls__DeclsAssignment )
            {
             before(grammarAccess.getDeclsAccess().getDeclsAssignment()); 
            // InternalFortXTrans.g:420:4: ( rule__Decls__DeclsAssignment )
            // InternalFortXTrans.g:420:5: rule__Decls__DeclsAssignment
            {
            pushFollow(FOLLOW_3);
            rule__Decls__DeclsAssignment();

            state._fsp--;


            }

             after(grammarAccess.getDeclsAccess().getDeclsAssignment()); 

            }

            // InternalFortXTrans.g:423:3: ( ( rule__Decls__DeclsAssignment )* )
            // InternalFortXTrans.g:424:4: ( rule__Decls__DeclsAssignment )*
            {
             before(grammarAccess.getDeclsAccess().getDeclsAssignment()); 
            // InternalFortXTrans.g:425:4: ( rule__Decls__DeclsAssignment )*
            loop1:
            do {
                int alt1=2;
                alt1 = dfa1.predict(input);
                switch (alt1) {
            	case 1 :
            	    // InternalFortXTrans.g:425:5: rule__Decls__DeclsAssignment
            	    {
            	    pushFollow(FOLLOW_3);
            	    rule__Decls__DeclsAssignment();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop1;
                }
            } while (true);

             after(grammarAccess.getDeclsAccess().getDeclsAssignment()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDecls"


    // $ANTLR start "entryRuleDecl"
    // InternalFortXTrans.g:435:1: entryRuleDecl : ruleDecl EOF ;
    public final void entryRuleDecl() throws RecognitionException {
        try {
            // InternalFortXTrans.g:436:1: ( ruleDecl EOF )
            // InternalFortXTrans.g:437:1: ruleDecl EOF
            {
             before(grammarAccess.getDeclRule()); 
            pushFollow(FOLLOW_1);
            ruleDecl();

            state._fsp--;

             after(grammarAccess.getDeclRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDecl"


    // $ANTLR start "ruleDecl"
    // InternalFortXTrans.g:444:1: ruleDecl : ( ( rule__Decl__Alternatives ) ) ;
    public final void ruleDecl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:448:2: ( ( ( rule__Decl__Alternatives ) ) )
            // InternalFortXTrans.g:449:2: ( ( rule__Decl__Alternatives ) )
            {
            // InternalFortXTrans.g:449:2: ( ( rule__Decl__Alternatives ) )
            // InternalFortXTrans.g:450:3: ( rule__Decl__Alternatives )
            {
             before(grammarAccess.getDeclAccess().getAlternatives()); 
            // InternalFortXTrans.g:451:3: ( rule__Decl__Alternatives )
            // InternalFortXTrans.g:451:4: rule__Decl__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__Decl__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getDeclAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDecl"


    // $ANTLR start "entryRuleFnMods"
    // InternalFortXTrans.g:460:1: entryRuleFnMods : ruleFnMods EOF ;
    public final void entryRuleFnMods() throws RecognitionException {
        try {
            // InternalFortXTrans.g:461:1: ( ruleFnMods EOF )
            // InternalFortXTrans.g:462:1: ruleFnMods EOF
            {
             before(grammarAccess.getFnModsRule()); 
            pushFollow(FOLLOW_1);
            ruleFnMods();

            state._fsp--;

             after(grammarAccess.getFnModsRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleFnMods"


    // $ANTLR start "ruleFnMods"
    // InternalFortXTrans.g:469:1: ruleFnMods : ( ( ( rule__FnMods__ModsAssignment ) ) ( ( rule__FnMods__ModsAssignment )* ) ) ;
    public final void ruleFnMods() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:473:2: ( ( ( ( rule__FnMods__ModsAssignment ) ) ( ( rule__FnMods__ModsAssignment )* ) ) )
            // InternalFortXTrans.g:474:2: ( ( ( rule__FnMods__ModsAssignment ) ) ( ( rule__FnMods__ModsAssignment )* ) )
            {
            // InternalFortXTrans.g:474:2: ( ( ( rule__FnMods__ModsAssignment ) ) ( ( rule__FnMods__ModsAssignment )* ) )
            // InternalFortXTrans.g:475:3: ( ( rule__FnMods__ModsAssignment ) ) ( ( rule__FnMods__ModsAssignment )* )
            {
            // InternalFortXTrans.g:475:3: ( ( rule__FnMods__ModsAssignment ) )
            // InternalFortXTrans.g:476:4: ( rule__FnMods__ModsAssignment )
            {
             before(grammarAccess.getFnModsAccess().getModsAssignment()); 
            // InternalFortXTrans.g:477:4: ( rule__FnMods__ModsAssignment )
            // InternalFortXTrans.g:477:5: rule__FnMods__ModsAssignment
            {
            pushFollow(FOLLOW_4);
            rule__FnMods__ModsAssignment();

            state._fsp--;


            }

             after(grammarAccess.getFnModsAccess().getModsAssignment()); 

            }

            // InternalFortXTrans.g:480:3: ( ( rule__FnMods__ModsAssignment )* )
            // InternalFortXTrans.g:481:4: ( rule__FnMods__ModsAssignment )*
            {
             before(grammarAccess.getFnModsAccess().getModsAssignment()); 
            // InternalFortXTrans.g:482:4: ( rule__FnMods__ModsAssignment )*
            loop2:
            do {
                int alt2=2;
                int LA2_0 = input.LA(1);

                if ( ((LA2_0>=57 && LA2_0<=60)) ) {
                    alt2=1;
                }


                switch (alt2) {
            	case 1 :
            	    // InternalFortXTrans.g:482:5: rule__FnMods__ModsAssignment
            	    {
            	    pushFollow(FOLLOW_4);
            	    rule__FnMods__ModsAssignment();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop2;
                }
            } while (true);

             after(grammarAccess.getFnModsAccess().getModsAssignment()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFnMods"


    // $ANTLR start "entryRuleFnMod"
    // InternalFortXTrans.g:492:1: entryRuleFnMod : ruleFnMod EOF ;
    public final void entryRuleFnMod() throws RecognitionException {
        try {
            // InternalFortXTrans.g:493:1: ( ruleFnMod EOF )
            // InternalFortXTrans.g:494:1: ruleFnMod EOF
            {
             before(grammarAccess.getFnModRule()); 
            pushFollow(FOLLOW_1);
            ruleFnMod();

            state._fsp--;

             after(grammarAccess.getFnModRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleFnMod"


    // $ANTLR start "ruleFnMod"
    // InternalFortXTrans.g:501:1: ruleFnMod : ( ( rule__FnMod__Alternatives ) ) ;
    public final void ruleFnMod() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:505:2: ( ( ( rule__FnMod__Alternatives ) ) )
            // InternalFortXTrans.g:506:2: ( ( rule__FnMod__Alternatives ) )
            {
            // InternalFortXTrans.g:506:2: ( ( rule__FnMod__Alternatives ) )
            // InternalFortXTrans.g:507:3: ( rule__FnMod__Alternatives )
            {
             before(grammarAccess.getFnModAccess().getAlternatives()); 
            // InternalFortXTrans.g:508:3: ( rule__FnMod__Alternatives )
            // InternalFortXTrans.g:508:4: rule__FnMod__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__FnMod__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getFnModAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFnMod"


    // $ANTLR start "entryRuleValParam"
    // InternalFortXTrans.g:517:1: entryRuleValParam : ruleValParam EOF ;
    public final void entryRuleValParam() throws RecognitionException {
        try {
            // InternalFortXTrans.g:518:1: ( ruleValParam EOF )
            // InternalFortXTrans.g:519:1: ruleValParam EOF
            {
             before(grammarAccess.getValParamRule()); 
            pushFollow(FOLLOW_1);
            ruleValParam();

            state._fsp--;

             after(grammarAccess.getValParamRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleValParam"


    // $ANTLR start "ruleValParam"
    // InternalFortXTrans.g:526:1: ruleValParam : ( ( rule__ValParam__Alternatives ) ) ;
    public final void ruleValParam() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:530:2: ( ( ( rule__ValParam__Alternatives ) ) )
            // InternalFortXTrans.g:531:2: ( ( rule__ValParam__Alternatives ) )
            {
            // InternalFortXTrans.g:531:2: ( ( rule__ValParam__Alternatives ) )
            // InternalFortXTrans.g:532:3: ( rule__ValParam__Alternatives )
            {
             before(grammarAccess.getValParamAccess().getAlternatives()); 
            // InternalFortXTrans.g:533:3: ( rule__ValParam__Alternatives )
            // InternalFortXTrans.g:533:4: rule__ValParam__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__ValParam__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getValParamAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleValParam"


    // $ANTLR start "entryRuleParam"
    // InternalFortXTrans.g:542:1: entryRuleParam : ruleParam EOF ;
    public final void entryRuleParam() throws RecognitionException {
        try {
            // InternalFortXTrans.g:543:1: ( ruleParam EOF )
            // InternalFortXTrans.g:544:1: ruleParam EOF
            {
             before(grammarAccess.getParamRule()); 
            pushFollow(FOLLOW_1);
            ruleParam();

            state._fsp--;

             after(grammarAccess.getParamRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleParam"


    // $ANTLR start "ruleParam"
    // InternalFortXTrans.g:551:1: ruleParam : ( ( rule__Param__Group__0 ) ) ;
    public final void ruleParam() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:555:2: ( ( ( rule__Param__Group__0 ) ) )
            // InternalFortXTrans.g:556:2: ( ( rule__Param__Group__0 ) )
            {
            // InternalFortXTrans.g:556:2: ( ( rule__Param__Group__0 ) )
            // InternalFortXTrans.g:557:3: ( rule__Param__Group__0 )
            {
             before(grammarAccess.getParamAccess().getGroup()); 
            // InternalFortXTrans.g:558:3: ( rule__Param__Group__0 )
            // InternalFortXTrans.g:558:4: rule__Param__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Param__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getParamAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleParam"


    // $ANTLR start "entryRuleRetType"
    // InternalFortXTrans.g:567:1: entryRuleRetType : ruleRetType EOF ;
    public final void entryRuleRetType() throws RecognitionException {
        try {
            // InternalFortXTrans.g:568:1: ( ruleRetType EOF )
            // InternalFortXTrans.g:569:1: ruleRetType EOF
            {
             before(grammarAccess.getRetTypeRule()); 
            pushFollow(FOLLOW_1);
            ruleRetType();

            state._fsp--;

             after(grammarAccess.getRetTypeRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleRetType"


    // $ANTLR start "ruleRetType"
    // InternalFortXTrans.g:576:1: ruleRetType : ( ( rule__RetType__Alternatives ) ) ;
    public final void ruleRetType() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:580:2: ( ( ( rule__RetType__Alternatives ) ) )
            // InternalFortXTrans.g:581:2: ( ( rule__RetType__Alternatives ) )
            {
            // InternalFortXTrans.g:581:2: ( ( rule__RetType__Alternatives ) )
            // InternalFortXTrans.g:582:3: ( rule__RetType__Alternatives )
            {
             before(grammarAccess.getRetTypeAccess().getAlternatives()); 
            // InternalFortXTrans.g:583:3: ( rule__RetType__Alternatives )
            // InternalFortXTrans.g:583:4: rule__RetType__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__RetType__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getRetTypeAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleRetType"


    // $ANTLR start "entryRuleTupleType"
    // InternalFortXTrans.g:592:1: entryRuleTupleType : ruleTupleType EOF ;
    public final void entryRuleTupleType() throws RecognitionException {
        try {
            // InternalFortXTrans.g:593:1: ( ruleTupleType EOF )
            // InternalFortXTrans.g:594:1: ruleTupleType EOF
            {
             before(grammarAccess.getTupleTypeRule()); 
            pushFollow(FOLLOW_1);
            ruleTupleType();

            state._fsp--;

             after(grammarAccess.getTupleTypeRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTupleType"


    // $ANTLR start "ruleTupleType"
    // InternalFortXTrans.g:601:1: ruleTupleType : ( ( rule__TupleType__Group__0 ) ) ;
    public final void ruleTupleType() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:605:2: ( ( ( rule__TupleType__Group__0 ) ) )
            // InternalFortXTrans.g:606:2: ( ( rule__TupleType__Group__0 ) )
            {
            // InternalFortXTrans.g:606:2: ( ( rule__TupleType__Group__0 ) )
            // InternalFortXTrans.g:607:3: ( rule__TupleType__Group__0 )
            {
             before(grammarAccess.getTupleTypeAccess().getGroup()); 
            // InternalFortXTrans.g:608:3: ( rule__TupleType__Group__0 )
            // InternalFortXTrans.g:608:4: rule__TupleType__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__TupleType__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getTupleTypeAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTupleType"


    // $ANTLR start "entryRuleFnDecl"
    // InternalFortXTrans.g:617:1: entryRuleFnDecl : ruleFnDecl EOF ;
    public final void entryRuleFnDecl() throws RecognitionException {
        try {
            // InternalFortXTrans.g:618:1: ( ruleFnDecl EOF )
            // InternalFortXTrans.g:619:1: ruleFnDecl EOF
            {
             before(grammarAccess.getFnDeclRule()); 
            pushFollow(FOLLOW_1);
            ruleFnDecl();

            state._fsp--;

             after(grammarAccess.getFnDeclRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleFnDecl"


    // $ANTLR start "ruleFnDecl"
    // InternalFortXTrans.g:626:1: ruleFnDecl : ( ( rule__FnDecl__Group__0 ) ) ;
    public final void ruleFnDecl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:630:2: ( ( ( rule__FnDecl__Group__0 ) ) )
            // InternalFortXTrans.g:631:2: ( ( rule__FnDecl__Group__0 ) )
            {
            // InternalFortXTrans.g:631:2: ( ( rule__FnDecl__Group__0 ) )
            // InternalFortXTrans.g:632:3: ( rule__FnDecl__Group__0 )
            {
             before(grammarAccess.getFnDeclAccess().getGroup()); 
            // InternalFortXTrans.g:633:3: ( rule__FnDecl__Group__0 )
            // InternalFortXTrans.g:633:4: rule__FnDecl__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__FnDecl__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getFnDeclAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFnDecl"


    // $ANTLR start "entryRuleStmnts"
    // InternalFortXTrans.g:642:1: entryRuleStmnts : ruleStmnts EOF ;
    public final void entryRuleStmnts() throws RecognitionException {
        try {
            // InternalFortXTrans.g:643:1: ( ruleStmnts EOF )
            // InternalFortXTrans.g:644:1: ruleStmnts EOF
            {
             before(grammarAccess.getStmntsRule()); 
            pushFollow(FOLLOW_1);
            ruleStmnts();

            state._fsp--;

             after(grammarAccess.getStmntsRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleStmnts"


    // $ANTLR start "ruleStmnts"
    // InternalFortXTrans.g:651:1: ruleStmnts : ( ( rule__Stmnts__Alternatives ) ) ;
    public final void ruleStmnts() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:655:2: ( ( ( rule__Stmnts__Alternatives ) ) )
            // InternalFortXTrans.g:656:2: ( ( rule__Stmnts__Alternatives ) )
            {
            // InternalFortXTrans.g:656:2: ( ( rule__Stmnts__Alternatives ) )
            // InternalFortXTrans.g:657:3: ( rule__Stmnts__Alternatives )
            {
             before(grammarAccess.getStmntsAccess().getAlternatives()); 
            // InternalFortXTrans.g:658:3: ( rule__Stmnts__Alternatives )
            // InternalFortXTrans.g:658:4: rule__Stmnts__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__Stmnts__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getStmntsAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleStmnts"


    // $ANTLR start "entryRuleStmnt"
    // InternalFortXTrans.g:667:1: entryRuleStmnt : ruleStmnt EOF ;
    public final void entryRuleStmnt() throws RecognitionException {
        try {
            // InternalFortXTrans.g:668:1: ( ruleStmnt EOF )
            // InternalFortXTrans.g:669:1: ruleStmnt EOF
            {
             before(grammarAccess.getStmntRule()); 
            pushFollow(FOLLOW_1);
            ruleStmnt();

            state._fsp--;

             after(grammarAccess.getStmntRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleStmnt"


    // $ANTLR start "ruleStmnt"
    // InternalFortXTrans.g:676:1: ruleStmnt : ( ( rule__Stmnt__Alternatives ) ) ;
    public final void ruleStmnt() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:680:2: ( ( ( rule__Stmnt__Alternatives ) ) )
            // InternalFortXTrans.g:681:2: ( ( rule__Stmnt__Alternatives ) )
            {
            // InternalFortXTrans.g:681:2: ( ( rule__Stmnt__Alternatives ) )
            // InternalFortXTrans.g:682:3: ( rule__Stmnt__Alternatives )
            {
             before(grammarAccess.getStmntAccess().getAlternatives()); 
            // InternalFortXTrans.g:683:3: ( rule__Stmnt__Alternatives )
            // InternalFortXTrans.g:683:4: rule__Stmnt__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__Stmnt__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getStmntAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleStmnt"


    // $ANTLR start "entryRuleDelimitedExprList"
    // InternalFortXTrans.g:692:1: entryRuleDelimitedExprList : ruleDelimitedExprList EOF ;
    public final void entryRuleDelimitedExprList() throws RecognitionException {
        try {
            // InternalFortXTrans.g:693:1: ( ruleDelimitedExprList EOF )
            // InternalFortXTrans.g:694:1: ruleDelimitedExprList EOF
            {
             before(grammarAccess.getDelimitedExprListRule()); 
            pushFollow(FOLLOW_1);
            ruleDelimitedExprList();

            state._fsp--;

             after(grammarAccess.getDelimitedExprListRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDelimitedExprList"


    // $ANTLR start "ruleDelimitedExprList"
    // InternalFortXTrans.g:701:1: ruleDelimitedExprList : ( ( rule__DelimitedExprList__Group__0 ) ) ;
    public final void ruleDelimitedExprList() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:705:2: ( ( ( rule__DelimitedExprList__Group__0 ) ) )
            // InternalFortXTrans.g:706:2: ( ( rule__DelimitedExprList__Group__0 ) )
            {
            // InternalFortXTrans.g:706:2: ( ( rule__DelimitedExprList__Group__0 ) )
            // InternalFortXTrans.g:707:3: ( rule__DelimitedExprList__Group__0 )
            {
             before(grammarAccess.getDelimitedExprListAccess().getGroup()); 
            // InternalFortXTrans.g:708:3: ( rule__DelimitedExprList__Group__0 )
            // InternalFortXTrans.g:708:4: rule__DelimitedExprList__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__DelimitedExprList__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getDelimitedExprListAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDelimitedExprList"


    // $ANTLR start "entryRuleExpr"
    // InternalFortXTrans.g:717:1: entryRuleExpr : ruleExpr EOF ;
    public final void entryRuleExpr() throws RecognitionException {
        try {
            // InternalFortXTrans.g:718:1: ( ruleExpr EOF )
            // InternalFortXTrans.g:719:1: ruleExpr EOF
            {
             before(grammarAccess.getExprRule()); 
            pushFollow(FOLLOW_1);
            ruleExpr();

            state._fsp--;

             after(grammarAccess.getExprRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleExpr"


    // $ANTLR start "ruleExpr"
    // InternalFortXTrans.g:726:1: ruleExpr : ( ( rule__Expr__Group__0 ) ) ;
    public final void ruleExpr() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:730:2: ( ( ( rule__Expr__Group__0 ) ) )
            // InternalFortXTrans.g:731:2: ( ( rule__Expr__Group__0 ) )
            {
            // InternalFortXTrans.g:731:2: ( ( rule__Expr__Group__0 ) )
            // InternalFortXTrans.g:732:3: ( rule__Expr__Group__0 )
            {
             before(grammarAccess.getExprAccess().getGroup()); 
            // InternalFortXTrans.g:733:3: ( rule__Expr__Group__0 )
            // InternalFortXTrans.g:733:4: rule__Expr__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Expr__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getExprAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleExpr"


    // $ANTLR start "entryRuleOr"
    // InternalFortXTrans.g:742:1: entryRuleOr : ruleOr EOF ;
    public final void entryRuleOr() throws RecognitionException {
        try {
            // InternalFortXTrans.g:743:1: ( ruleOr EOF )
            // InternalFortXTrans.g:744:1: ruleOr EOF
            {
             before(grammarAccess.getOrRule()); 
            pushFollow(FOLLOW_1);
            ruleOr();

            state._fsp--;

             after(grammarAccess.getOrRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOr"


    // $ANTLR start "ruleOr"
    // InternalFortXTrans.g:751:1: ruleOr : ( ( rule__Or__Group__0 ) ) ;
    public final void ruleOr() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:755:2: ( ( ( rule__Or__Group__0 ) ) )
            // InternalFortXTrans.g:756:2: ( ( rule__Or__Group__0 ) )
            {
            // InternalFortXTrans.g:756:2: ( ( rule__Or__Group__0 ) )
            // InternalFortXTrans.g:757:3: ( rule__Or__Group__0 )
            {
             before(grammarAccess.getOrAccess().getGroup()); 
            // InternalFortXTrans.g:758:3: ( rule__Or__Group__0 )
            // InternalFortXTrans.g:758:4: rule__Or__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Or__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getOrAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOr"


    // $ANTLR start "entryRuleAnd"
    // InternalFortXTrans.g:767:1: entryRuleAnd : ruleAnd EOF ;
    public final void entryRuleAnd() throws RecognitionException {
        try {
            // InternalFortXTrans.g:768:1: ( ruleAnd EOF )
            // InternalFortXTrans.g:769:1: ruleAnd EOF
            {
             before(grammarAccess.getAndRule()); 
            pushFollow(FOLLOW_1);
            ruleAnd();

            state._fsp--;

             after(grammarAccess.getAndRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAnd"


    // $ANTLR start "ruleAnd"
    // InternalFortXTrans.g:776:1: ruleAnd : ( ( rule__And__Group__0 ) ) ;
    public final void ruleAnd() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:780:2: ( ( ( rule__And__Group__0 ) ) )
            // InternalFortXTrans.g:781:2: ( ( rule__And__Group__0 ) )
            {
            // InternalFortXTrans.g:781:2: ( ( rule__And__Group__0 ) )
            // InternalFortXTrans.g:782:3: ( rule__And__Group__0 )
            {
             before(grammarAccess.getAndAccess().getGroup()); 
            // InternalFortXTrans.g:783:3: ( rule__And__Group__0 )
            // InternalFortXTrans.g:783:4: rule__And__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__And__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getAndAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAnd"


    // $ANTLR start "entryRuleEquality"
    // InternalFortXTrans.g:792:1: entryRuleEquality : ruleEquality EOF ;
    public final void entryRuleEquality() throws RecognitionException {
        try {
            // InternalFortXTrans.g:793:1: ( ruleEquality EOF )
            // InternalFortXTrans.g:794:1: ruleEquality EOF
            {
             before(grammarAccess.getEqualityRule()); 
            pushFollow(FOLLOW_1);
            ruleEquality();

            state._fsp--;

             after(grammarAccess.getEqualityRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleEquality"


    // $ANTLR start "ruleEquality"
    // InternalFortXTrans.g:801:1: ruleEquality : ( ( rule__Equality__Group__0 ) ) ;
    public final void ruleEquality() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:805:2: ( ( ( rule__Equality__Group__0 ) ) )
            // InternalFortXTrans.g:806:2: ( ( rule__Equality__Group__0 ) )
            {
            // InternalFortXTrans.g:806:2: ( ( rule__Equality__Group__0 ) )
            // InternalFortXTrans.g:807:3: ( rule__Equality__Group__0 )
            {
             before(grammarAccess.getEqualityAccess().getGroup()); 
            // InternalFortXTrans.g:808:3: ( rule__Equality__Group__0 )
            // InternalFortXTrans.g:808:4: rule__Equality__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Equality__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getEqualityAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleEquality"


    // $ANTLR start "entryRuleComparison"
    // InternalFortXTrans.g:817:1: entryRuleComparison : ruleComparison EOF ;
    public final void entryRuleComparison() throws RecognitionException {
        try {
            // InternalFortXTrans.g:818:1: ( ruleComparison EOF )
            // InternalFortXTrans.g:819:1: ruleComparison EOF
            {
             before(grammarAccess.getComparisonRule()); 
            pushFollow(FOLLOW_1);
            ruleComparison();

            state._fsp--;

             after(grammarAccess.getComparisonRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleComparison"


    // $ANTLR start "ruleComparison"
    // InternalFortXTrans.g:826:1: ruleComparison : ( ( rule__Comparison__Group__0 ) ) ;
    public final void ruleComparison() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:830:2: ( ( ( rule__Comparison__Group__0 ) ) )
            // InternalFortXTrans.g:831:2: ( ( rule__Comparison__Group__0 ) )
            {
            // InternalFortXTrans.g:831:2: ( ( rule__Comparison__Group__0 ) )
            // InternalFortXTrans.g:832:3: ( rule__Comparison__Group__0 )
            {
             before(grammarAccess.getComparisonAccess().getGroup()); 
            // InternalFortXTrans.g:833:3: ( rule__Comparison__Group__0 )
            // InternalFortXTrans.g:833:4: rule__Comparison__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Comparison__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getComparisonAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleComparison"


    // $ANTLR start "entryRuleAddExpr"
    // InternalFortXTrans.g:842:1: entryRuleAddExpr : ruleAddExpr EOF ;
    public final void entryRuleAddExpr() throws RecognitionException {
        try {
            // InternalFortXTrans.g:843:1: ( ruleAddExpr EOF )
            // InternalFortXTrans.g:844:1: ruleAddExpr EOF
            {
             before(grammarAccess.getAddExprRule()); 
            pushFollow(FOLLOW_1);
            ruleAddExpr();

            state._fsp--;

             after(grammarAccess.getAddExprRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAddExpr"


    // $ANTLR start "ruleAddExpr"
    // InternalFortXTrans.g:851:1: ruleAddExpr : ( ( rule__AddExpr__Group__0 ) ) ;
    public final void ruleAddExpr() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:855:2: ( ( ( rule__AddExpr__Group__0 ) ) )
            // InternalFortXTrans.g:856:2: ( ( rule__AddExpr__Group__0 ) )
            {
            // InternalFortXTrans.g:856:2: ( ( rule__AddExpr__Group__0 ) )
            // InternalFortXTrans.g:857:3: ( rule__AddExpr__Group__0 )
            {
             before(grammarAccess.getAddExprAccess().getGroup()); 
            // InternalFortXTrans.g:858:3: ( rule__AddExpr__Group__0 )
            // InternalFortXTrans.g:858:4: rule__AddExpr__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__AddExpr__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getAddExprAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAddExpr"


    // $ANTLR start "entryRuleSubExpr"
    // InternalFortXTrans.g:867:1: entryRuleSubExpr : ruleSubExpr EOF ;
    public final void entryRuleSubExpr() throws RecognitionException {
        try {
            // InternalFortXTrans.g:868:1: ( ruleSubExpr EOF )
            // InternalFortXTrans.g:869:1: ruleSubExpr EOF
            {
             before(grammarAccess.getSubExprRule()); 
            pushFollow(FOLLOW_1);
            ruleSubExpr();

            state._fsp--;

             after(grammarAccess.getSubExprRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSubExpr"


    // $ANTLR start "ruleSubExpr"
    // InternalFortXTrans.g:876:1: ruleSubExpr : ( ( rule__SubExpr__Group__0 ) ) ;
    public final void ruleSubExpr() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:880:2: ( ( ( rule__SubExpr__Group__0 ) ) )
            // InternalFortXTrans.g:881:2: ( ( rule__SubExpr__Group__0 ) )
            {
            // InternalFortXTrans.g:881:2: ( ( rule__SubExpr__Group__0 ) )
            // InternalFortXTrans.g:882:3: ( rule__SubExpr__Group__0 )
            {
             before(grammarAccess.getSubExprAccess().getGroup()); 
            // InternalFortXTrans.g:883:3: ( rule__SubExpr__Group__0 )
            // InternalFortXTrans.g:883:4: rule__SubExpr__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__SubExpr__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getSubExprAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSubExpr"


    // $ANTLR start "entryRuleDivExpr"
    // InternalFortXTrans.g:892:1: entryRuleDivExpr : ruleDivExpr EOF ;
    public final void entryRuleDivExpr() throws RecognitionException {
        try {
            // InternalFortXTrans.g:893:1: ( ruleDivExpr EOF )
            // InternalFortXTrans.g:894:1: ruleDivExpr EOF
            {
             before(grammarAccess.getDivExprRule()); 
            pushFollow(FOLLOW_1);
            ruleDivExpr();

            state._fsp--;

             after(grammarAccess.getDivExprRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDivExpr"


    // $ANTLR start "ruleDivExpr"
    // InternalFortXTrans.g:901:1: ruleDivExpr : ( ( rule__DivExpr__Group__0 ) ) ;
    public final void ruleDivExpr() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:905:2: ( ( ( rule__DivExpr__Group__0 ) ) )
            // InternalFortXTrans.g:906:2: ( ( rule__DivExpr__Group__0 ) )
            {
            // InternalFortXTrans.g:906:2: ( ( rule__DivExpr__Group__0 ) )
            // InternalFortXTrans.g:907:3: ( rule__DivExpr__Group__0 )
            {
             before(grammarAccess.getDivExprAccess().getGroup()); 
            // InternalFortXTrans.g:908:3: ( rule__DivExpr__Group__0 )
            // InternalFortXTrans.g:908:4: rule__DivExpr__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__DivExpr__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getDivExprAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDivExpr"


    // $ANTLR start "entryRuleMultExpr"
    // InternalFortXTrans.g:917:1: entryRuleMultExpr : ruleMultExpr EOF ;
    public final void entryRuleMultExpr() throws RecognitionException {
        try {
            // InternalFortXTrans.g:918:1: ( ruleMultExpr EOF )
            // InternalFortXTrans.g:919:1: ruleMultExpr EOF
            {
             before(grammarAccess.getMultExprRule()); 
            pushFollow(FOLLOW_1);
            ruleMultExpr();

            state._fsp--;

             after(grammarAccess.getMultExprRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleMultExpr"


    // $ANTLR start "ruleMultExpr"
    // InternalFortXTrans.g:926:1: ruleMultExpr : ( ( rule__MultExpr__Group__0 ) ) ;
    public final void ruleMultExpr() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:930:2: ( ( ( rule__MultExpr__Group__0 ) ) )
            // InternalFortXTrans.g:931:2: ( ( rule__MultExpr__Group__0 ) )
            {
            // InternalFortXTrans.g:931:2: ( ( rule__MultExpr__Group__0 ) )
            // InternalFortXTrans.g:932:3: ( rule__MultExpr__Group__0 )
            {
             before(grammarAccess.getMultExprAccess().getGroup()); 
            // InternalFortXTrans.g:933:3: ( rule__MultExpr__Group__0 )
            // InternalFortXTrans.g:933:4: rule__MultExpr__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__MultExpr__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getMultExprAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleMultExpr"


    // $ANTLR start "entryRuleExponentExpr"
    // InternalFortXTrans.g:942:1: entryRuleExponentExpr : ruleExponentExpr EOF ;
    public final void entryRuleExponentExpr() throws RecognitionException {
        try {
            // InternalFortXTrans.g:943:1: ( ruleExponentExpr EOF )
            // InternalFortXTrans.g:944:1: ruleExponentExpr EOF
            {
             before(grammarAccess.getExponentExprRule()); 
            pushFollow(FOLLOW_1);
            ruleExponentExpr();

            state._fsp--;

             after(grammarAccess.getExponentExprRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleExponentExpr"


    // $ANTLR start "ruleExponentExpr"
    // InternalFortXTrans.g:951:1: ruleExponentExpr : ( ( rule__ExponentExpr__Group__0 ) ) ;
    public final void ruleExponentExpr() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:955:2: ( ( ( rule__ExponentExpr__Group__0 ) ) )
            // InternalFortXTrans.g:956:2: ( ( rule__ExponentExpr__Group__0 ) )
            {
            // InternalFortXTrans.g:956:2: ( ( rule__ExponentExpr__Group__0 ) )
            // InternalFortXTrans.g:957:3: ( rule__ExponentExpr__Group__0 )
            {
             before(grammarAccess.getExponentExprAccess().getGroup()); 
            // InternalFortXTrans.g:958:3: ( rule__ExponentExpr__Group__0 )
            // InternalFortXTrans.g:958:4: rule__ExponentExpr__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__ExponentExpr__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getExponentExprAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleExponentExpr"


    // $ANTLR start "entryRulePrimary"
    // InternalFortXTrans.g:967:1: entryRulePrimary : rulePrimary EOF ;
    public final void entryRulePrimary() throws RecognitionException {
        try {
            // InternalFortXTrans.g:968:1: ( rulePrimary EOF )
            // InternalFortXTrans.g:969:1: rulePrimary EOF
            {
             before(grammarAccess.getPrimaryRule()); 
            pushFollow(FOLLOW_1);
            rulePrimary();

            state._fsp--;

             after(grammarAccess.getPrimaryRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulePrimary"


    // $ANTLR start "rulePrimary"
    // InternalFortXTrans.g:976:1: rulePrimary : ( ( rule__Primary__Alternatives ) ) ;
    public final void rulePrimary() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:980:2: ( ( ( rule__Primary__Alternatives ) ) )
            // InternalFortXTrans.g:981:2: ( ( rule__Primary__Alternatives ) )
            {
            // InternalFortXTrans.g:981:2: ( ( rule__Primary__Alternatives ) )
            // InternalFortXTrans.g:982:3: ( rule__Primary__Alternatives )
            {
             before(grammarAccess.getPrimaryAccess().getAlternatives()); 
            // InternalFortXTrans.g:983:3: ( rule__Primary__Alternatives )
            // InternalFortXTrans.g:983:4: rule__Primary__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__Primary__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getPrimaryAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePrimary"


    // $ANTLR start "entryRuleExprList"
    // InternalFortXTrans.g:992:1: entryRuleExprList : ruleExprList EOF ;
    public final void entryRuleExprList() throws RecognitionException {
        try {
            // InternalFortXTrans.g:993:1: ( ruleExprList EOF )
            // InternalFortXTrans.g:994:1: ruleExprList EOF
            {
             before(grammarAccess.getExprListRule()); 
            pushFollow(FOLLOW_1);
            ruleExprList();

            state._fsp--;

             after(grammarAccess.getExprListRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleExprList"


    // $ANTLR start "ruleExprList"
    // InternalFortXTrans.g:1001:1: ruleExprList : ( ( rule__ExprList__Group__0 ) ) ;
    public final void ruleExprList() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1005:2: ( ( ( rule__ExprList__Group__0 ) ) )
            // InternalFortXTrans.g:1006:2: ( ( rule__ExprList__Group__0 ) )
            {
            // InternalFortXTrans.g:1006:2: ( ( rule__ExprList__Group__0 ) )
            // InternalFortXTrans.g:1007:3: ( rule__ExprList__Group__0 )
            {
             before(grammarAccess.getExprListAccess().getGroup()); 
            // InternalFortXTrans.g:1008:3: ( rule__ExprList__Group__0 )
            // InternalFortXTrans.g:1008:4: rule__ExprList__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__ExprList__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getExprListAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleExprList"


    // $ANTLR start "entryRuleExprTail"
    // InternalFortXTrans.g:1017:1: entryRuleExprTail : ruleExprTail EOF ;
    public final void entryRuleExprTail() throws RecognitionException {
        try {
            // InternalFortXTrans.g:1018:1: ( ruleExprTail EOF )
            // InternalFortXTrans.g:1019:1: ruleExprTail EOF
            {
             before(grammarAccess.getExprTailRule()); 
            pushFollow(FOLLOW_1);
            ruleExprTail();

            state._fsp--;

             after(grammarAccess.getExprTailRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleExprTail"


    // $ANTLR start "ruleExprTail"
    // InternalFortXTrans.g:1026:1: ruleExprTail : ( ( rule__ExprTail__Group__0 ) ) ;
    public final void ruleExprTail() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1030:2: ( ( ( rule__ExprTail__Group__0 ) ) )
            // InternalFortXTrans.g:1031:2: ( ( rule__ExprTail__Group__0 ) )
            {
            // InternalFortXTrans.g:1031:2: ( ( rule__ExprTail__Group__0 ) )
            // InternalFortXTrans.g:1032:3: ( rule__ExprTail__Group__0 )
            {
             before(grammarAccess.getExprTailAccess().getGroup()); 
            // InternalFortXTrans.g:1033:3: ( rule__ExprTail__Group__0 )
            // InternalFortXTrans.g:1033:4: rule__ExprTail__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__ExprTail__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getExprTailAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleExprTail"


    // $ANTLR start "entryRuleDelimitedExpr"
    // InternalFortXTrans.g:1042:1: entryRuleDelimitedExpr : ruleDelimitedExpr EOF ;
    public final void entryRuleDelimitedExpr() throws RecognitionException {
        try {
            // InternalFortXTrans.g:1043:1: ( ruleDelimitedExpr EOF )
            // InternalFortXTrans.g:1044:1: ruleDelimitedExpr EOF
            {
             before(grammarAccess.getDelimitedExprRule()); 
            pushFollow(FOLLOW_1);
            ruleDelimitedExpr();

            state._fsp--;

             after(grammarAccess.getDelimitedExprRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDelimitedExpr"


    // $ANTLR start "ruleDelimitedExpr"
    // InternalFortXTrans.g:1051:1: ruleDelimitedExpr : ( ( rule__DelimitedExpr__Alternatives ) ) ;
    public final void ruleDelimitedExpr() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1055:2: ( ( ( rule__DelimitedExpr__Alternatives ) ) )
            // InternalFortXTrans.g:1056:2: ( ( rule__DelimitedExpr__Alternatives ) )
            {
            // InternalFortXTrans.g:1056:2: ( ( rule__DelimitedExpr__Alternatives ) )
            // InternalFortXTrans.g:1057:3: ( rule__DelimitedExpr__Alternatives )
            {
             before(grammarAccess.getDelimitedExprAccess().getAlternatives()); 
            // InternalFortXTrans.g:1058:3: ( rule__DelimitedExpr__Alternatives )
            // InternalFortXTrans.g:1058:4: rule__DelimitedExpr__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__DelimitedExpr__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getDelimitedExprAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDelimitedExpr"


    // $ANTLR start "entryRuleElifs"
    // InternalFortXTrans.g:1067:1: entryRuleElifs : ruleElifs EOF ;
    public final void entryRuleElifs() throws RecognitionException {
        try {
            // InternalFortXTrans.g:1068:1: ( ruleElifs EOF )
            // InternalFortXTrans.g:1069:1: ruleElifs EOF
            {
             before(grammarAccess.getElifsRule()); 
            pushFollow(FOLLOW_1);
            ruleElifs();

            state._fsp--;

             after(grammarAccess.getElifsRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleElifs"


    // $ANTLR start "ruleElifs"
    // InternalFortXTrans.g:1076:1: ruleElifs : ( ( rule__Elifs__Group__0 ) ) ;
    public final void ruleElifs() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1080:2: ( ( ( rule__Elifs__Group__0 ) ) )
            // InternalFortXTrans.g:1081:2: ( ( rule__Elifs__Group__0 ) )
            {
            // InternalFortXTrans.g:1081:2: ( ( rule__Elifs__Group__0 ) )
            // InternalFortXTrans.g:1082:3: ( rule__Elifs__Group__0 )
            {
             before(grammarAccess.getElifsAccess().getGroup()); 
            // InternalFortXTrans.g:1083:3: ( rule__Elifs__Group__0 )
            // InternalFortXTrans.g:1083:4: rule__Elifs__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Elifs__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getElifsAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleElifs"


    // $ANTLR start "entryRuleElif"
    // InternalFortXTrans.g:1092:1: entryRuleElif : ruleElif EOF ;
    public final void entryRuleElif() throws RecognitionException {
        try {
            // InternalFortXTrans.g:1093:1: ( ruleElif EOF )
            // InternalFortXTrans.g:1094:1: ruleElif EOF
            {
             before(grammarAccess.getElifRule()); 
            pushFollow(FOLLOW_1);
            ruleElif();

            state._fsp--;

             after(grammarAccess.getElifRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleElif"


    // $ANTLR start "ruleElif"
    // InternalFortXTrans.g:1101:1: ruleElif : ( ( rule__Elif__Group__0 ) ) ;
    public final void ruleElif() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1105:2: ( ( ( rule__Elif__Group__0 ) ) )
            // InternalFortXTrans.g:1106:2: ( ( rule__Elif__Group__0 ) )
            {
            // InternalFortXTrans.g:1106:2: ( ( rule__Elif__Group__0 ) )
            // InternalFortXTrans.g:1107:3: ( rule__Elif__Group__0 )
            {
             before(grammarAccess.getElifAccess().getGroup()); 
            // InternalFortXTrans.g:1108:3: ( rule__Elif__Group__0 )
            // InternalFortXTrans.g:1108:4: rule__Elif__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Elif__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getElifAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleElif"


    // $ANTLR start "entryRuleElse"
    // InternalFortXTrans.g:1117:1: entryRuleElse : ruleElse EOF ;
    public final void entryRuleElse() throws RecognitionException {
        try {
            // InternalFortXTrans.g:1118:1: ( ruleElse EOF )
            // InternalFortXTrans.g:1119:1: ruleElse EOF
            {
             before(grammarAccess.getElseRule()); 
            pushFollow(FOLLOW_1);
            ruleElse();

            state._fsp--;

             after(grammarAccess.getElseRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleElse"


    // $ANTLR start "ruleElse"
    // InternalFortXTrans.g:1126:1: ruleElse : ( ( rule__Else__Group__0 ) ) ;
    public final void ruleElse() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1130:2: ( ( ( rule__Else__Group__0 ) ) )
            // InternalFortXTrans.g:1131:2: ( ( rule__Else__Group__0 ) )
            {
            // InternalFortXTrans.g:1131:2: ( ( rule__Else__Group__0 ) )
            // InternalFortXTrans.g:1132:3: ( rule__Else__Group__0 )
            {
             before(grammarAccess.getElseAccess().getGroup()); 
            // InternalFortXTrans.g:1133:3: ( rule__Else__Group__0 )
            // InternalFortXTrans.g:1133:4: rule__Else__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Else__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getElseAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleElse"


    // $ANTLR start "entryRuleGenerators"
    // InternalFortXTrans.g:1142:1: entryRuleGenerators : ruleGenerators EOF ;
    public final void entryRuleGenerators() throws RecognitionException {
        try {
            // InternalFortXTrans.g:1143:1: ( ruleGenerators EOF )
            // InternalFortXTrans.g:1144:1: ruleGenerators EOF
            {
             before(grammarAccess.getGeneratorsRule()); 
            pushFollow(FOLLOW_1);
            ruleGenerators();

            state._fsp--;

             after(grammarAccess.getGeneratorsRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleGenerators"


    // $ANTLR start "ruleGenerators"
    // InternalFortXTrans.g:1151:1: ruleGenerators : ( ( rule__Generators__Group__0 ) ) ;
    public final void ruleGenerators() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1155:2: ( ( ( rule__Generators__Group__0 ) ) )
            // InternalFortXTrans.g:1156:2: ( ( rule__Generators__Group__0 ) )
            {
            // InternalFortXTrans.g:1156:2: ( ( rule__Generators__Group__0 ) )
            // InternalFortXTrans.g:1157:3: ( rule__Generators__Group__0 )
            {
             before(grammarAccess.getGeneratorsAccess().getGroup()); 
            // InternalFortXTrans.g:1158:3: ( rule__Generators__Group__0 )
            // InternalFortXTrans.g:1158:4: rule__Generators__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Generators__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getGeneratorsAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleGenerators"


    // $ANTLR start "entryRuleBinding"
    // InternalFortXTrans.g:1167:1: entryRuleBinding : ruleBinding EOF ;
    public final void entryRuleBinding() throws RecognitionException {
        try {
            // InternalFortXTrans.g:1168:1: ( ruleBinding EOF )
            // InternalFortXTrans.g:1169:1: ruleBinding EOF
            {
             before(grammarAccess.getBindingRule()); 
            pushFollow(FOLLOW_1);
            ruleBinding();

            state._fsp--;

             after(grammarAccess.getBindingRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleBinding"


    // $ANTLR start "ruleBinding"
    // InternalFortXTrans.g:1176:1: ruleBinding : ( ( rule__Binding__Alternatives ) ) ;
    public final void ruleBinding() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1180:2: ( ( ( rule__Binding__Alternatives ) ) )
            // InternalFortXTrans.g:1181:2: ( ( rule__Binding__Alternatives ) )
            {
            // InternalFortXTrans.g:1181:2: ( ( rule__Binding__Alternatives ) )
            // InternalFortXTrans.g:1182:3: ( rule__Binding__Alternatives )
            {
             before(grammarAccess.getBindingAccess().getAlternatives()); 
            // InternalFortXTrans.g:1183:3: ( rule__Binding__Alternatives )
            // InternalFortXTrans.g:1183:4: rule__Binding__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__Binding__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getBindingAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleBinding"


    // $ANTLR start "entryRuleGenSource"
    // InternalFortXTrans.g:1192:1: entryRuleGenSource : ruleGenSource EOF ;
    public final void entryRuleGenSource() throws RecognitionException {
        try {
            // InternalFortXTrans.g:1193:1: ( ruleGenSource EOF )
            // InternalFortXTrans.g:1194:1: ruleGenSource EOF
            {
             before(grammarAccess.getGenSourceRule()); 
            pushFollow(FOLLOW_1);
            ruleGenSource();

            state._fsp--;

             after(grammarAccess.getGenSourceRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleGenSource"


    // $ANTLR start "ruleGenSource"
    // InternalFortXTrans.g:1201:1: ruleGenSource : ( ( rule__GenSource__Group__0 ) ) ;
    public final void ruleGenSource() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1205:2: ( ( ( rule__GenSource__Group__0 ) ) )
            // InternalFortXTrans.g:1206:2: ( ( rule__GenSource__Group__0 ) )
            {
            // InternalFortXTrans.g:1206:2: ( ( rule__GenSource__Group__0 ) )
            // InternalFortXTrans.g:1207:3: ( rule__GenSource__Group__0 )
            {
             before(grammarAccess.getGenSourceAccess().getGroup()); 
            // InternalFortXTrans.g:1208:3: ( rule__GenSource__Group__0 )
            // InternalFortXTrans.g:1208:4: rule__GenSource__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__GenSource__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getGenSourceAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleGenSource"


    // $ANTLR start "entryRuleGenClause"
    // InternalFortXTrans.g:1217:1: entryRuleGenClause : ruleGenClause EOF ;
    public final void entryRuleGenClause() throws RecognitionException {
        try {
            // InternalFortXTrans.g:1218:1: ( ruleGenClause EOF )
            // InternalFortXTrans.g:1219:1: ruleGenClause EOF
            {
             before(grammarAccess.getGenClauseRule()); 
            pushFollow(FOLLOW_1);
            ruleGenClause();

            state._fsp--;

             after(grammarAccess.getGenClauseRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleGenClause"


    // $ANTLR start "ruleGenClause"
    // InternalFortXTrans.g:1226:1: ruleGenClause : ( ( rule__GenClause__Alternatives ) ) ;
    public final void ruleGenClause() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1230:2: ( ( ( rule__GenClause__Alternatives ) ) )
            // InternalFortXTrans.g:1231:2: ( ( rule__GenClause__Alternatives ) )
            {
            // InternalFortXTrans.g:1231:2: ( ( rule__GenClause__Alternatives ) )
            // InternalFortXTrans.g:1232:3: ( rule__GenClause__Alternatives )
            {
             before(grammarAccess.getGenClauseAccess().getAlternatives()); 
            // InternalFortXTrans.g:1233:3: ( rule__GenClause__Alternatives )
            // InternalFortXTrans.g:1233:4: rule__GenClause__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__GenClause__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getGenClauseAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleGenClause"


    // $ANTLR start "entryRuleBlockElems"
    // InternalFortXTrans.g:1242:1: entryRuleBlockElems : ruleBlockElems EOF ;
    public final void entryRuleBlockElems() throws RecognitionException {
        try {
            // InternalFortXTrans.g:1243:1: ( ruleBlockElems EOF )
            // InternalFortXTrans.g:1244:1: ruleBlockElems EOF
            {
             before(grammarAccess.getBlockElemsRule()); 
            pushFollow(FOLLOW_1);
            ruleBlockElems();

            state._fsp--;

             after(grammarAccess.getBlockElemsRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleBlockElems"


    // $ANTLR start "ruleBlockElems"
    // InternalFortXTrans.g:1251:1: ruleBlockElems : ( ( rule__BlockElems__Group__0 ) ) ;
    public final void ruleBlockElems() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1255:2: ( ( ( rule__BlockElems__Group__0 ) ) )
            // InternalFortXTrans.g:1256:2: ( ( rule__BlockElems__Group__0 ) )
            {
            // InternalFortXTrans.g:1256:2: ( ( rule__BlockElems__Group__0 ) )
            // InternalFortXTrans.g:1257:3: ( rule__BlockElems__Group__0 )
            {
             before(grammarAccess.getBlockElemsAccess().getGroup()); 
            // InternalFortXTrans.g:1258:3: ( rule__BlockElems__Group__0 )
            // InternalFortXTrans.g:1258:4: rule__BlockElems__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__BlockElems__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getBlockElemsAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleBlockElems"


    // $ANTLR start "entryRuleBlockElem"
    // InternalFortXTrans.g:1267:1: entryRuleBlockElem : ruleBlockElem EOF ;
    public final void entryRuleBlockElem() throws RecognitionException {
        try {
            // InternalFortXTrans.g:1268:1: ( ruleBlockElem EOF )
            // InternalFortXTrans.g:1269:1: ruleBlockElem EOF
            {
             before(grammarAccess.getBlockElemRule()); 
            pushFollow(FOLLOW_1);
            ruleBlockElem();

            state._fsp--;

             after(grammarAccess.getBlockElemRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleBlockElem"


    // $ANTLR start "ruleBlockElem"
    // InternalFortXTrans.g:1276:1: ruleBlockElem : ( ( rule__BlockElem__StAssignment ) ) ;
    public final void ruleBlockElem() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1280:2: ( ( ( rule__BlockElem__StAssignment ) ) )
            // InternalFortXTrans.g:1281:2: ( ( rule__BlockElem__StAssignment ) )
            {
            // InternalFortXTrans.g:1281:2: ( ( rule__BlockElem__StAssignment ) )
            // InternalFortXTrans.g:1282:3: ( rule__BlockElem__StAssignment )
            {
             before(grammarAccess.getBlockElemAccess().getStAssignment()); 
            // InternalFortXTrans.g:1283:3: ( rule__BlockElem__StAssignment )
            // InternalFortXTrans.g:1283:4: rule__BlockElem__StAssignment
            {
            pushFollow(FOLLOW_2);
            rule__BlockElem__StAssignment();

            state._fsp--;


            }

             after(grammarAccess.getBlockElemAccess().getStAssignment()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleBlockElem"


    // $ANTLR start "entryRuleDo"
    // InternalFortXTrans.g:1292:1: entryRuleDo : ruleDo EOF ;
    public final void entryRuleDo() throws RecognitionException {
        try {
            // InternalFortXTrans.g:1293:1: ( ruleDo EOF )
            // InternalFortXTrans.g:1294:1: ruleDo EOF
            {
             before(grammarAccess.getDoRule()); 
            pushFollow(FOLLOW_1);
            ruleDo();

            state._fsp--;

             after(grammarAccess.getDoRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDo"


    // $ANTLR start "ruleDo"
    // InternalFortXTrans.g:1301:1: ruleDo : ( ( rule__Do__Group__0 ) ) ;
    public final void ruleDo() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1305:2: ( ( ( rule__Do__Group__0 ) ) )
            // InternalFortXTrans.g:1306:2: ( ( rule__Do__Group__0 ) )
            {
            // InternalFortXTrans.g:1306:2: ( ( rule__Do__Group__0 ) )
            // InternalFortXTrans.g:1307:3: ( rule__Do__Group__0 )
            {
             before(grammarAccess.getDoAccess().getGroup()); 
            // InternalFortXTrans.g:1308:3: ( rule__Do__Group__0 )
            // InternalFortXTrans.g:1308:4: rule__Do__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Do__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getDoAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDo"


    // $ANTLR start "entryRuleDoFront"
    // InternalFortXTrans.g:1317:1: entryRuleDoFront : ruleDoFront EOF ;
    public final void entryRuleDoFront() throws RecognitionException {
        try {
            // InternalFortXTrans.g:1318:1: ( ruleDoFront EOF )
            // InternalFortXTrans.g:1319:1: ruleDoFront EOF
            {
             before(grammarAccess.getDoFrontRule()); 
            pushFollow(FOLLOW_1);
            ruleDoFront();

            state._fsp--;

             after(grammarAccess.getDoFrontRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDoFront"


    // $ANTLR start "ruleDoFront"
    // InternalFortXTrans.g:1326:1: ruleDoFront : ( ( rule__DoFront__Group__0 ) ) ;
    public final void ruleDoFront() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1330:2: ( ( ( rule__DoFront__Group__0 ) ) )
            // InternalFortXTrans.g:1331:2: ( ( rule__DoFront__Group__0 ) )
            {
            // InternalFortXTrans.g:1331:2: ( ( rule__DoFront__Group__0 ) )
            // InternalFortXTrans.g:1332:3: ( rule__DoFront__Group__0 )
            {
             before(grammarAccess.getDoFrontAccess().getGroup()); 
            // InternalFortXTrans.g:1333:3: ( rule__DoFront__Group__0 )
            // InternalFortXTrans.g:1333:4: rule__DoFront__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__DoFront__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getDoFrontAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDoFront"


    // $ANTLR start "entryRuleIsType"
    // InternalFortXTrans.g:1342:1: entryRuleIsType : ruleIsType EOF ;
    public final void entryRuleIsType() throws RecognitionException {
        try {
            // InternalFortXTrans.g:1343:1: ( ruleIsType EOF )
            // InternalFortXTrans.g:1344:1: ruleIsType EOF
            {
             before(grammarAccess.getIsTypeRule()); 
            pushFollow(FOLLOW_1);
            ruleIsType();

            state._fsp--;

             after(grammarAccess.getIsTypeRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleIsType"


    // $ANTLR start "ruleIsType"
    // InternalFortXTrans.g:1351:1: ruleIsType : ( ( rule__IsType__Group__0 ) ) ;
    public final void ruleIsType() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1355:2: ( ( ( rule__IsType__Group__0 ) ) )
            // InternalFortXTrans.g:1356:2: ( ( rule__IsType__Group__0 ) )
            {
            // InternalFortXTrans.g:1356:2: ( ( rule__IsType__Group__0 ) )
            // InternalFortXTrans.g:1357:3: ( rule__IsType__Group__0 )
            {
             before(grammarAccess.getIsTypeAccess().getGroup()); 
            // InternalFortXTrans.g:1358:3: ( rule__IsType__Group__0 )
            // InternalFortXTrans.g:1358:4: rule__IsType__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__IsType__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getIsTypeAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleIsType"


    // $ANTLR start "entryRuleFieldDecl"
    // InternalFortXTrans.g:1367:1: entryRuleFieldDecl : ruleFieldDecl EOF ;
    public final void entryRuleFieldDecl() throws RecognitionException {
        try {
            // InternalFortXTrans.g:1368:1: ( ruleFieldDecl EOF )
            // InternalFortXTrans.g:1369:1: ruleFieldDecl EOF
            {
             before(grammarAccess.getFieldDeclRule()); 
            pushFollow(FOLLOW_1);
            ruleFieldDecl();

            state._fsp--;

             after(grammarAccess.getFieldDeclRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleFieldDecl"


    // $ANTLR start "ruleFieldDecl"
    // InternalFortXTrans.g:1376:1: ruleFieldDecl : ( ( rule__FieldDecl__Alternatives ) ) ;
    public final void ruleFieldDecl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1380:2: ( ( ( rule__FieldDecl__Alternatives ) ) )
            // InternalFortXTrans.g:1381:2: ( ( rule__FieldDecl__Alternatives ) )
            {
            // InternalFortXTrans.g:1381:2: ( ( rule__FieldDecl__Alternatives ) )
            // InternalFortXTrans.g:1382:3: ( rule__FieldDecl__Alternatives )
            {
             before(grammarAccess.getFieldDeclAccess().getAlternatives()); 
            // InternalFortXTrans.g:1383:3: ( rule__FieldDecl__Alternatives )
            // InternalFortXTrans.g:1383:4: rule__FieldDecl__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__FieldDecl__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getFieldDeclAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFieldDecl"


    // $ANTLR start "entryRuleNoNewlineVarWTypes"
    // InternalFortXTrans.g:1392:1: entryRuleNoNewlineVarWTypes : ruleNoNewlineVarWTypes EOF ;
    public final void entryRuleNoNewlineVarWTypes() throws RecognitionException {
        try {
            // InternalFortXTrans.g:1393:1: ( ruleNoNewlineVarWTypes EOF )
            // InternalFortXTrans.g:1394:1: ruleNoNewlineVarWTypes EOF
            {
             before(grammarAccess.getNoNewlineVarWTypesRule()); 
            pushFollow(FOLLOW_1);
            ruleNoNewlineVarWTypes();

            state._fsp--;

             after(grammarAccess.getNoNewlineVarWTypesRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleNoNewlineVarWTypes"


    // $ANTLR start "ruleNoNewlineVarWTypes"
    // InternalFortXTrans.g:1401:1: ruleNoNewlineVarWTypes : ( ( rule__NoNewlineVarWTypes__Alternatives ) ) ;
    public final void ruleNoNewlineVarWTypes() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1405:2: ( ( ( rule__NoNewlineVarWTypes__Alternatives ) ) )
            // InternalFortXTrans.g:1406:2: ( ( rule__NoNewlineVarWTypes__Alternatives ) )
            {
            // InternalFortXTrans.g:1406:2: ( ( rule__NoNewlineVarWTypes__Alternatives ) )
            // InternalFortXTrans.g:1407:3: ( rule__NoNewlineVarWTypes__Alternatives )
            {
             before(grammarAccess.getNoNewlineVarWTypesAccess().getAlternatives()); 
            // InternalFortXTrans.g:1408:3: ( rule__NoNewlineVarWTypes__Alternatives )
            // InternalFortXTrans.g:1408:4: rule__NoNewlineVarWTypes__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__NoNewlineVarWTypes__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getNoNewlineVarWTypesAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleNoNewlineVarWTypes"


    // $ANTLR start "entryRuleNoNewlineVarWType"
    // InternalFortXTrans.g:1417:1: entryRuleNoNewlineVarWType : ruleNoNewlineVarWType EOF ;
    public final void entryRuleNoNewlineVarWType() throws RecognitionException {
        try {
            // InternalFortXTrans.g:1418:1: ( ruleNoNewlineVarWType EOF )
            // InternalFortXTrans.g:1419:1: ruleNoNewlineVarWType EOF
            {
             before(grammarAccess.getNoNewlineVarWTypeRule()); 
            pushFollow(FOLLOW_1);
            ruleNoNewlineVarWType();

            state._fsp--;

             after(grammarAccess.getNoNewlineVarWTypeRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleNoNewlineVarWType"


    // $ANTLR start "ruleNoNewlineVarWType"
    // InternalFortXTrans.g:1426:1: ruleNoNewlineVarWType : ( ( rule__NoNewlineVarWType__Group__0 ) ) ;
    public final void ruleNoNewlineVarWType() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1430:2: ( ( ( rule__NoNewlineVarWType__Group__0 ) ) )
            // InternalFortXTrans.g:1431:2: ( ( rule__NoNewlineVarWType__Group__0 ) )
            {
            // InternalFortXTrans.g:1431:2: ( ( rule__NoNewlineVarWType__Group__0 ) )
            // InternalFortXTrans.g:1432:3: ( rule__NoNewlineVarWType__Group__0 )
            {
             before(grammarAccess.getNoNewlineVarWTypeAccess().getGroup()); 
            // InternalFortXTrans.g:1433:3: ( rule__NoNewlineVarWType__Group__0 )
            // InternalFortXTrans.g:1433:4: rule__NoNewlineVarWType__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__NoNewlineVarWType__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getNoNewlineVarWTypeAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleNoNewlineVarWType"


    // $ANTLR start "entryRuleLiteralTuple"
    // InternalFortXTrans.g:1442:1: entryRuleLiteralTuple : ruleLiteralTuple EOF ;
    public final void entryRuleLiteralTuple() throws RecognitionException {
        try {
            // InternalFortXTrans.g:1443:1: ( ruleLiteralTuple EOF )
            // InternalFortXTrans.g:1444:1: ruleLiteralTuple EOF
            {
             before(grammarAccess.getLiteralTupleRule()); 
            pushFollow(FOLLOW_1);
            ruleLiteralTuple();

            state._fsp--;

             after(grammarAccess.getLiteralTupleRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleLiteralTuple"


    // $ANTLR start "ruleLiteralTuple"
    // InternalFortXTrans.g:1451:1: ruleLiteralTuple : ( ( rule__LiteralTuple__Alternatives ) ) ;
    public final void ruleLiteralTuple() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1455:2: ( ( ( rule__LiteralTuple__Alternatives ) ) )
            // InternalFortXTrans.g:1456:2: ( ( rule__LiteralTuple__Alternatives ) )
            {
            // InternalFortXTrans.g:1456:2: ( ( rule__LiteralTuple__Alternatives ) )
            // InternalFortXTrans.g:1457:3: ( rule__LiteralTuple__Alternatives )
            {
             before(grammarAccess.getLiteralTupleAccess().getAlternatives()); 
            // InternalFortXTrans.g:1458:3: ( rule__LiteralTuple__Alternatives )
            // InternalFortXTrans.g:1458:4: rule__LiteralTuple__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__LiteralTuple__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getLiteralTupleAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleLiteralTuple"


    // $ANTLR start "entryRuleLiteralTup"
    // InternalFortXTrans.g:1467:1: entryRuleLiteralTup : ruleLiteralTup EOF ;
    public final void entryRuleLiteralTup() throws RecognitionException {
        try {
            // InternalFortXTrans.g:1468:1: ( ruleLiteralTup EOF )
            // InternalFortXTrans.g:1469:1: ruleLiteralTup EOF
            {
             before(grammarAccess.getLiteralTupRule()); 
            pushFollow(FOLLOW_1);
            ruleLiteralTup();

            state._fsp--;

             after(grammarAccess.getLiteralTupRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleLiteralTup"


    // $ANTLR start "ruleLiteralTup"
    // InternalFortXTrans.g:1476:1: ruleLiteralTup : ( ( rule__LiteralTup__Alternatives ) ) ;
    public final void ruleLiteralTup() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1480:2: ( ( ( rule__LiteralTup__Alternatives ) ) )
            // InternalFortXTrans.g:1481:2: ( ( rule__LiteralTup__Alternatives ) )
            {
            // InternalFortXTrans.g:1481:2: ( ( rule__LiteralTup__Alternatives ) )
            // InternalFortXTrans.g:1482:3: ( rule__LiteralTup__Alternatives )
            {
             before(grammarAccess.getLiteralTupAccess().getAlternatives()); 
            // InternalFortXTrans.g:1483:3: ( rule__LiteralTup__Alternatives )
            // InternalFortXTrans.g:1483:4: rule__LiteralTup__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__LiteralTup__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getLiteralTupAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleLiteralTup"


    // $ANTLR start "entryRuleLiteralList"
    // InternalFortXTrans.g:1492:1: entryRuleLiteralList : ruleLiteralList EOF ;
    public final void entryRuleLiteralList() throws RecognitionException {
        try {
            // InternalFortXTrans.g:1493:1: ( ruleLiteralList EOF )
            // InternalFortXTrans.g:1494:1: ruleLiteralList EOF
            {
             before(grammarAccess.getLiteralListRule()); 
            pushFollow(FOLLOW_1);
            ruleLiteralList();

            state._fsp--;

             after(grammarAccess.getLiteralListRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleLiteralList"


    // $ANTLR start "ruleLiteralList"
    // InternalFortXTrans.g:1501:1: ruleLiteralList : ( ( rule__LiteralList__Group__0 ) ) ;
    public final void ruleLiteralList() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1505:2: ( ( ( rule__LiteralList__Group__0 ) ) )
            // InternalFortXTrans.g:1506:2: ( ( rule__LiteralList__Group__0 ) )
            {
            // InternalFortXTrans.g:1506:2: ( ( rule__LiteralList__Group__0 ) )
            // InternalFortXTrans.g:1507:3: ( rule__LiteralList__Group__0 )
            {
             before(grammarAccess.getLiteralListAccess().getGroup()); 
            // InternalFortXTrans.g:1508:3: ( rule__LiteralList__Group__0 )
            // InternalFortXTrans.g:1508:4: rule__LiteralList__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__LiteralList__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getLiteralListAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleLiteralList"


    // $ANTLR start "entryRuleLiteral"
    // InternalFortXTrans.g:1517:1: entryRuleLiteral : ruleLiteral EOF ;
    public final void entryRuleLiteral() throws RecognitionException {
        try {
            // InternalFortXTrans.g:1518:1: ( ruleLiteral EOF )
            // InternalFortXTrans.g:1519:1: ruleLiteral EOF
            {
             before(grammarAccess.getLiteralRule()); 
            pushFollow(FOLLOW_1);
            ruleLiteral();

            state._fsp--;

             after(grammarAccess.getLiteralRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleLiteral"


    // $ANTLR start "ruleLiteral"
    // InternalFortXTrans.g:1526:1: ruleLiteral : ( ( rule__Literal__Alternatives ) ) ;
    public final void ruleLiteral() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1530:2: ( ( ( rule__Literal__Alternatives ) ) )
            // InternalFortXTrans.g:1531:2: ( ( rule__Literal__Alternatives ) )
            {
            // InternalFortXTrans.g:1531:2: ( ( rule__Literal__Alternatives ) )
            // InternalFortXTrans.g:1532:3: ( rule__Literal__Alternatives )
            {
             before(grammarAccess.getLiteralAccess().getAlternatives()); 
            // InternalFortXTrans.g:1533:3: ( rule__Literal__Alternatives )
            // InternalFortXTrans.g:1533:4: rule__Literal__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__Literal__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getLiteralAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleLiteral"


    // $ANTLR start "entryRuleLocalVarDecl"
    // InternalFortXTrans.g:1542:1: entryRuleLocalVarDecl : ruleLocalVarDecl EOF ;
    public final void entryRuleLocalVarDecl() throws RecognitionException {
        try {
            // InternalFortXTrans.g:1543:1: ( ruleLocalVarDecl EOF )
            // InternalFortXTrans.g:1544:1: ruleLocalVarDecl EOF
            {
             before(grammarAccess.getLocalVarDeclRule()); 
            pushFollow(FOLLOW_1);
            ruleLocalVarDecl();

            state._fsp--;

             after(grammarAccess.getLocalVarDeclRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleLocalVarDecl"


    // $ANTLR start "ruleLocalVarDecl"
    // InternalFortXTrans.g:1551:1: ruleLocalVarDecl : ( ( rule__LocalVarDecl__Alternatives ) ) ;
    public final void ruleLocalVarDecl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1555:2: ( ( ( rule__LocalVarDecl__Alternatives ) ) )
            // InternalFortXTrans.g:1556:2: ( ( rule__LocalVarDecl__Alternatives ) )
            {
            // InternalFortXTrans.g:1556:2: ( ( rule__LocalVarDecl__Alternatives ) )
            // InternalFortXTrans.g:1557:3: ( rule__LocalVarDecl__Alternatives )
            {
             before(grammarAccess.getLocalVarDeclAccess().getAlternatives()); 
            // InternalFortXTrans.g:1558:3: ( rule__LocalVarDecl__Alternatives )
            // InternalFortXTrans.g:1558:4: rule__LocalVarDecl__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__LocalVarDecl__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getLocalVarDeclAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleLocalVarDecl"


    // $ANTLR start "rule__Model__Alternatives"
    // InternalFortXTrans.g:1566:1: rule__Model__Alternatives : ( ( ruleComponent ) | ( ruleAPI ) );
    public final void rule__Model__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1570:1: ( ( ruleComponent ) | ( ruleAPI ) )
            int alt3=2;
            int LA3_0 = input.LA(1);

            if ( (LA3_0==25) ) {
                alt3=1;
            }
            else if ( (LA3_0==27) ) {
                alt3=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 3, 0, input);

                throw nvae;
            }
            switch (alt3) {
                case 1 :
                    // InternalFortXTrans.g:1571:2: ( ruleComponent )
                    {
                    // InternalFortXTrans.g:1571:2: ( ruleComponent )
                    // InternalFortXTrans.g:1572:3: ruleComponent
                    {
                     before(grammarAccess.getModelAccess().getComponentParserRuleCall_0()); 
                    pushFollow(FOLLOW_2);
                    ruleComponent();

                    state._fsp--;

                     after(grammarAccess.getModelAccess().getComponentParserRuleCall_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalFortXTrans.g:1577:2: ( ruleAPI )
                    {
                    // InternalFortXTrans.g:1577:2: ( ruleAPI )
                    // InternalFortXTrans.g:1578:3: ruleAPI
                    {
                     before(grammarAccess.getModelAccess().getAPIParserRuleCall_1()); 
                    pushFollow(FOLLOW_2);
                    ruleAPI();

                    state._fsp--;

                     after(grammarAccess.getModelAccess().getAPIParserRuleCall_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Model__Alternatives"


    // $ANTLR start "rule__Import__Alternatives"
    // InternalFortXTrans.g:1587:1: rule__Import__Alternatives : ( ( ( rule__Import__Group_0__0 ) ) | ( ( rule__Import__Group_1__0 ) ) );
    public final void rule__Import__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1591:1: ( ( ( rule__Import__Group_0__0 ) ) | ( ( rule__Import__Group_1__0 ) ) )
            int alt4=2;
            int LA4_0 = input.LA(1);

            if ( (LA4_0==54) ) {
                int LA4_1 = input.LA(2);

                if ( (LA4_1==RULE_ID) ) {
                    alt4=1;
                }
                else if ( (LA4_1==27) ) {
                    alt4=2;
                }
                else {
                    NoViableAltException nvae =
                        new NoViableAltException("", 4, 1, input);

                    throw nvae;
                }
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 4, 0, input);

                throw nvae;
            }
            switch (alt4) {
                case 1 :
                    // InternalFortXTrans.g:1592:2: ( ( rule__Import__Group_0__0 ) )
                    {
                    // InternalFortXTrans.g:1592:2: ( ( rule__Import__Group_0__0 ) )
                    // InternalFortXTrans.g:1593:3: ( rule__Import__Group_0__0 )
                    {
                     before(grammarAccess.getImportAccess().getGroup_0()); 
                    // InternalFortXTrans.g:1594:3: ( rule__Import__Group_0__0 )
                    // InternalFortXTrans.g:1594:4: rule__Import__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Import__Group_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getImportAccess().getGroup_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalFortXTrans.g:1598:2: ( ( rule__Import__Group_1__0 ) )
                    {
                    // InternalFortXTrans.g:1598:2: ( ( rule__Import__Group_1__0 ) )
                    // InternalFortXTrans.g:1599:3: ( rule__Import__Group_1__0 )
                    {
                     before(grammarAccess.getImportAccess().getGroup_1()); 
                    // InternalFortXTrans.g:1600:3: ( rule__Import__Group_1__0 )
                    // InternalFortXTrans.g:1600:4: rule__Import__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Import__Group_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getImportAccess().getGroup_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Import__Alternatives"


    // $ANTLR start "rule__Export__Alternatives"
    // InternalFortXTrans.g:1608:1: rule__Export__Alternatives : ( ( ( rule__Export__Group_0__0 ) ) | ( ( rule__Export__Group_1__0 ) ) );
    public final void rule__Export__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1612:1: ( ( ( rule__Export__Group_0__0 ) ) | ( ( rule__Export__Group_1__0 ) ) )
            int alt5=2;
            int LA5_0 = input.LA(1);

            if ( (LA5_0==55) ) {
                int LA5_1 = input.LA(2);

                if ( (LA5_1==RULE_ID) ) {
                    alt5=1;
                }
                else if ( (LA5_1==31) ) {
                    alt5=2;
                }
                else {
                    NoViableAltException nvae =
                        new NoViableAltException("", 5, 1, input);

                    throw nvae;
                }
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 5, 0, input);

                throw nvae;
            }
            switch (alt5) {
                case 1 :
                    // InternalFortXTrans.g:1613:2: ( ( rule__Export__Group_0__0 ) )
                    {
                    // InternalFortXTrans.g:1613:2: ( ( rule__Export__Group_0__0 ) )
                    // InternalFortXTrans.g:1614:3: ( rule__Export__Group_0__0 )
                    {
                     before(grammarAccess.getExportAccess().getGroup_0()); 
                    // InternalFortXTrans.g:1615:3: ( rule__Export__Group_0__0 )
                    // InternalFortXTrans.g:1615:4: rule__Export__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Export__Group_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getExportAccess().getGroup_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalFortXTrans.g:1619:2: ( ( rule__Export__Group_1__0 ) )
                    {
                    // InternalFortXTrans.g:1619:2: ( ( rule__Export__Group_1__0 ) )
                    // InternalFortXTrans.g:1620:3: ( rule__Export__Group_1__0 )
                    {
                     before(grammarAccess.getExportAccess().getGroup_1()); 
                    // InternalFortXTrans.g:1621:3: ( rule__Export__Group_1__0 )
                    // InternalFortXTrans.g:1621:4: rule__Export__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Export__Group_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getExportAccess().getGroup_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Export__Alternatives"


    // $ANTLR start "rule__ImportedNames__Alternatives"
    // InternalFortXTrans.g:1629:1: rule__ImportedNames__Alternatives : ( ( ( rule__ImportedNames__Group_0__0 ) ) | ( ( rule__ImportedNames__Group_1__0 ) ) | ( ( rule__ImportedNames__Group_2__0 ) ) );
    public final void rule__ImportedNames__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1633:1: ( ( ( rule__ImportedNames__Group_0__0 ) ) | ( ( rule__ImportedNames__Group_1__0 ) ) | ( ( rule__ImportedNames__Group_2__0 ) ) )
            int alt6=3;
            alt6 = dfa6.predict(input);
            switch (alt6) {
                case 1 :
                    // InternalFortXTrans.g:1634:2: ( ( rule__ImportedNames__Group_0__0 ) )
                    {
                    // InternalFortXTrans.g:1634:2: ( ( rule__ImportedNames__Group_0__0 ) )
                    // InternalFortXTrans.g:1635:3: ( rule__ImportedNames__Group_0__0 )
                    {
                     before(grammarAccess.getImportedNamesAccess().getGroup_0()); 
                    // InternalFortXTrans.g:1636:3: ( rule__ImportedNames__Group_0__0 )
                    // InternalFortXTrans.g:1636:4: rule__ImportedNames__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ImportedNames__Group_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getImportedNamesAccess().getGroup_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalFortXTrans.g:1640:2: ( ( rule__ImportedNames__Group_1__0 ) )
                    {
                    // InternalFortXTrans.g:1640:2: ( ( rule__ImportedNames__Group_1__0 ) )
                    // InternalFortXTrans.g:1641:3: ( rule__ImportedNames__Group_1__0 )
                    {
                     before(grammarAccess.getImportedNamesAccess().getGroup_1()); 
                    // InternalFortXTrans.g:1642:3: ( rule__ImportedNames__Group_1__0 )
                    // InternalFortXTrans.g:1642:4: rule__ImportedNames__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ImportedNames__Group_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getImportedNamesAccess().getGroup_1()); 

                    }


                    }
                    break;
                case 3 :
                    // InternalFortXTrans.g:1646:2: ( ( rule__ImportedNames__Group_2__0 ) )
                    {
                    // InternalFortXTrans.g:1646:2: ( ( rule__ImportedNames__Group_2__0 ) )
                    // InternalFortXTrans.g:1647:3: ( rule__ImportedNames__Group_2__0 )
                    {
                     before(grammarAccess.getImportedNamesAccess().getGroup_2()); 
                    // InternalFortXTrans.g:1648:3: ( rule__ImportedNames__Group_2__0 )
                    // InternalFortXTrans.g:1648:4: rule__ImportedNames__Group_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ImportedNames__Group_2__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getImportedNamesAccess().getGroup_2()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Alternatives"


    // $ANTLR start "rule__Qualified__Alternatives"
    // InternalFortXTrans.g:1656:1: rule__Qualified__Alternatives : ( ( ruleQualifiedName ) | ( ruleQualifiedNameTuple ) );
    public final void rule__Qualified__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1660:1: ( ( ruleQualifiedName ) | ( ruleQualifiedNameTuple ) )
            int alt7=2;
            int LA7_0 = input.LA(1);

            if ( (LA7_0==RULE_ID) ) {
                alt7=1;
            }
            else if ( (LA7_0==33) ) {
                alt7=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 7, 0, input);

                throw nvae;
            }
            switch (alt7) {
                case 1 :
                    // InternalFortXTrans.g:1661:2: ( ruleQualifiedName )
                    {
                    // InternalFortXTrans.g:1661:2: ( ruleQualifiedName )
                    // InternalFortXTrans.g:1662:3: ruleQualifiedName
                    {
                     before(grammarAccess.getQualifiedAccess().getQualifiedNameParserRuleCall_0()); 
                    pushFollow(FOLLOW_2);
                    ruleQualifiedName();

                    state._fsp--;

                     after(grammarAccess.getQualifiedAccess().getQualifiedNameParserRuleCall_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalFortXTrans.g:1667:2: ( ruleQualifiedNameTuple )
                    {
                    // InternalFortXTrans.g:1667:2: ( ruleQualifiedNameTuple )
                    // InternalFortXTrans.g:1668:3: ruleQualifiedNameTuple
                    {
                     before(grammarAccess.getQualifiedAccess().getQualifiedNameTupleParserRuleCall_1()); 
                    pushFollow(FOLLOW_2);
                    ruleQualifiedNameTuple();

                    state._fsp--;

                     after(grammarAccess.getQualifiedAccess().getQualifiedNameTupleParserRuleCall_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Qualified__Alternatives"


    // $ANTLR start "rule__SimpleNames__Alternatives"
    // InternalFortXTrans.g:1677:1: rule__SimpleNames__Alternatives : ( ( ( rule__SimpleNames__NameListAssignment_0 ) ) | ( ( rule__SimpleNames__Group_1__0 ) ) );
    public final void rule__SimpleNames__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1681:1: ( ( ( rule__SimpleNames__NameListAssignment_0 ) ) | ( ( rule__SimpleNames__Group_1__0 ) ) )
            int alt8=2;
            int LA8_0 = input.LA(1);

            if ( (LA8_0==RULE_ID) ) {
                alt8=1;
            }
            else if ( (LA8_0==31) ) {
                alt8=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 8, 0, input);

                throw nvae;
            }
            switch (alt8) {
                case 1 :
                    // InternalFortXTrans.g:1682:2: ( ( rule__SimpleNames__NameListAssignment_0 ) )
                    {
                    // InternalFortXTrans.g:1682:2: ( ( rule__SimpleNames__NameListAssignment_0 ) )
                    // InternalFortXTrans.g:1683:3: ( rule__SimpleNames__NameListAssignment_0 )
                    {
                     before(grammarAccess.getSimpleNamesAccess().getNameListAssignment_0()); 
                    // InternalFortXTrans.g:1684:3: ( rule__SimpleNames__NameListAssignment_0 )
                    // InternalFortXTrans.g:1684:4: rule__SimpleNames__NameListAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__SimpleNames__NameListAssignment_0();

                    state._fsp--;


                    }

                     after(grammarAccess.getSimpleNamesAccess().getNameListAssignment_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalFortXTrans.g:1688:2: ( ( rule__SimpleNames__Group_1__0 ) )
                    {
                    // InternalFortXTrans.g:1688:2: ( ( rule__SimpleNames__Group_1__0 ) )
                    // InternalFortXTrans.g:1689:3: ( rule__SimpleNames__Group_1__0 )
                    {
                     before(grammarAccess.getSimpleNamesAccess().getGroup_1()); 
                    // InternalFortXTrans.g:1690:3: ( rule__SimpleNames__Group_1__0 )
                    // InternalFortXTrans.g:1690:4: rule__SimpleNames__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__SimpleNames__Group_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getSimpleNamesAccess().getGroup_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleNames__Alternatives"


    // $ANTLR start "rule__AliasedAPINames__Alternatives"
    // InternalFortXTrans.g:1698:1: rule__AliasedAPINames__Alternatives : ( ( ( rule__AliasedAPINames__NameListAssignment_0 ) ) | ( ( rule__AliasedAPINames__Group_1__0 ) ) );
    public final void rule__AliasedAPINames__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1702:1: ( ( ( rule__AliasedAPINames__NameListAssignment_0 ) ) | ( ( rule__AliasedAPINames__Group_1__0 ) ) )
            int alt9=2;
            int LA9_0 = input.LA(1);

            if ( (LA9_0==RULE_ID) ) {
                alt9=1;
            }
            else if ( (LA9_0==31) ) {
                alt9=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 9, 0, input);

                throw nvae;
            }
            switch (alt9) {
                case 1 :
                    // InternalFortXTrans.g:1703:2: ( ( rule__AliasedAPINames__NameListAssignment_0 ) )
                    {
                    // InternalFortXTrans.g:1703:2: ( ( rule__AliasedAPINames__NameListAssignment_0 ) )
                    // InternalFortXTrans.g:1704:3: ( rule__AliasedAPINames__NameListAssignment_0 )
                    {
                     before(grammarAccess.getAliasedAPINamesAccess().getNameListAssignment_0()); 
                    // InternalFortXTrans.g:1705:3: ( rule__AliasedAPINames__NameListAssignment_0 )
                    // InternalFortXTrans.g:1705:4: rule__AliasedAPINames__NameListAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__AliasedAPINames__NameListAssignment_0();

                    state._fsp--;


                    }

                     after(grammarAccess.getAliasedAPINamesAccess().getNameListAssignment_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalFortXTrans.g:1709:2: ( ( rule__AliasedAPINames__Group_1__0 ) )
                    {
                    // InternalFortXTrans.g:1709:2: ( ( rule__AliasedAPINames__Group_1__0 ) )
                    // InternalFortXTrans.g:1710:3: ( rule__AliasedAPINames__Group_1__0 )
                    {
                     before(grammarAccess.getAliasedAPINamesAccess().getGroup_1()); 
                    // InternalFortXTrans.g:1711:3: ( rule__AliasedAPINames__Group_1__0 )
                    // InternalFortXTrans.g:1711:4: rule__AliasedAPINames__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__AliasedAPINames__Group_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getAliasedAPINamesAccess().getGroup_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedAPINames__Alternatives"


    // $ANTLR start "rule__Decl__Alternatives"
    // InternalFortXTrans.g:1719:1: rule__Decl__Alternatives : ( ( ( rule__Decl__FunctionAssignment_0 ) ) | ( ( rule__Decl__FieldAssignment_1 ) ) );
    public final void rule__Decl__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1723:1: ( ( ( rule__Decl__FunctionAssignment_0 ) ) | ( ( rule__Decl__FieldAssignment_1 ) ) )
            int alt10=2;
            switch ( input.LA(1) ) {
            case 57:
                {
                switch ( input.LA(2) ) {
                case 33:
                case 68:
                    {
                    alt10=2;
                    }
                    break;
                case RULE_ID:
                    {
                    int LA10_3 = input.LA(3);

                    if ( (LA10_3==RULE_DOTS||LA10_3==30||LA10_3==35||LA10_3==53) ) {
                        alt10=2;
                    }
                    else if ( (LA10_3==RULE_ID||LA10_3==33) ) {
                        alt10=1;
                    }
                    else {
                        NoViableAltException nvae =
                            new NoViableAltException("", 10, 3, input);

                        throw nvae;
                    }
                    }
                    break;
                case 57:
                case 58:
                case 59:
                case 60:
                    {
                    alt10=1;
                    }
                    break;
                default:
                    NoViableAltException nvae =
                        new NoViableAltException("", 10, 1, input);

                    throw nvae;
                }

                }
                break;
            case 58:
            case 59:
            case 60:
                {
                alt10=1;
                }
                break;
            case RULE_ID:
                {
                int LA10_3 = input.LA(2);

                if ( (LA10_3==RULE_DOTS||LA10_3==30||LA10_3==35||LA10_3==53) ) {
                    alt10=2;
                }
                else if ( (LA10_3==RULE_ID||LA10_3==33) ) {
                    alt10=1;
                }
                else {
                    NoViableAltException nvae =
                        new NoViableAltException("", 10, 3, input);

                    throw nvae;
                }
                }
                break;
            case 33:
            case 68:
                {
                alt10=2;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 10, 0, input);

                throw nvae;
            }

            switch (alt10) {
                case 1 :
                    // InternalFortXTrans.g:1724:2: ( ( rule__Decl__FunctionAssignment_0 ) )
                    {
                    // InternalFortXTrans.g:1724:2: ( ( rule__Decl__FunctionAssignment_0 ) )
                    // InternalFortXTrans.g:1725:3: ( rule__Decl__FunctionAssignment_0 )
                    {
                     before(grammarAccess.getDeclAccess().getFunctionAssignment_0()); 
                    // InternalFortXTrans.g:1726:3: ( rule__Decl__FunctionAssignment_0 )
                    // InternalFortXTrans.g:1726:4: rule__Decl__FunctionAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Decl__FunctionAssignment_0();

                    state._fsp--;


                    }

                     after(grammarAccess.getDeclAccess().getFunctionAssignment_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalFortXTrans.g:1730:2: ( ( rule__Decl__FieldAssignment_1 ) )
                    {
                    // InternalFortXTrans.g:1730:2: ( ( rule__Decl__FieldAssignment_1 ) )
                    // InternalFortXTrans.g:1731:3: ( rule__Decl__FieldAssignment_1 )
                    {
                     before(grammarAccess.getDeclAccess().getFieldAssignment_1()); 
                    // InternalFortXTrans.g:1732:3: ( rule__Decl__FieldAssignment_1 )
                    // InternalFortXTrans.g:1732:4: rule__Decl__FieldAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__Decl__FieldAssignment_1();

                    state._fsp--;


                    }

                     after(grammarAccess.getDeclAccess().getFieldAssignment_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Decl__Alternatives"


    // $ANTLR start "rule__FnMod__Alternatives"
    // InternalFortXTrans.g:1740:1: rule__FnMod__Alternatives : ( ( ( rule__FnMod__ModtypeAssignment_0 ) ) | ( ( rule__FnMod__ModtypeAssignment_1 ) ) | ( ( rule__FnMod__ModtypeAssignment_2 ) ) | ( ( rule__FnMod__ModtypeAssignment_3 ) ) );
    public final void rule__FnMod__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1744:1: ( ( ( rule__FnMod__ModtypeAssignment_0 ) ) | ( ( rule__FnMod__ModtypeAssignment_1 ) ) | ( ( rule__FnMod__ModtypeAssignment_2 ) ) | ( ( rule__FnMod__ModtypeAssignment_3 ) ) )
            int alt11=4;
            switch ( input.LA(1) ) {
            case 57:
                {
                alt11=1;
                }
                break;
            case 58:
                {
                alt11=2;
                }
                break;
            case 59:
                {
                alt11=3;
                }
                break;
            case 60:
                {
                alt11=4;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 11, 0, input);

                throw nvae;
            }

            switch (alt11) {
                case 1 :
                    // InternalFortXTrans.g:1745:2: ( ( rule__FnMod__ModtypeAssignment_0 ) )
                    {
                    // InternalFortXTrans.g:1745:2: ( ( rule__FnMod__ModtypeAssignment_0 ) )
                    // InternalFortXTrans.g:1746:3: ( rule__FnMod__ModtypeAssignment_0 )
                    {
                     before(grammarAccess.getFnModAccess().getModtypeAssignment_0()); 
                    // InternalFortXTrans.g:1747:3: ( rule__FnMod__ModtypeAssignment_0 )
                    // InternalFortXTrans.g:1747:4: rule__FnMod__ModtypeAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__FnMod__ModtypeAssignment_0();

                    state._fsp--;


                    }

                     after(grammarAccess.getFnModAccess().getModtypeAssignment_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalFortXTrans.g:1751:2: ( ( rule__FnMod__ModtypeAssignment_1 ) )
                    {
                    // InternalFortXTrans.g:1751:2: ( ( rule__FnMod__ModtypeAssignment_1 ) )
                    // InternalFortXTrans.g:1752:3: ( rule__FnMod__ModtypeAssignment_1 )
                    {
                     before(grammarAccess.getFnModAccess().getModtypeAssignment_1()); 
                    // InternalFortXTrans.g:1753:3: ( rule__FnMod__ModtypeAssignment_1 )
                    // InternalFortXTrans.g:1753:4: rule__FnMod__ModtypeAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__FnMod__ModtypeAssignment_1();

                    state._fsp--;


                    }

                     after(grammarAccess.getFnModAccess().getModtypeAssignment_1()); 

                    }


                    }
                    break;
                case 3 :
                    // InternalFortXTrans.g:1757:2: ( ( rule__FnMod__ModtypeAssignment_2 ) )
                    {
                    // InternalFortXTrans.g:1757:2: ( ( rule__FnMod__ModtypeAssignment_2 ) )
                    // InternalFortXTrans.g:1758:3: ( rule__FnMod__ModtypeAssignment_2 )
                    {
                     before(grammarAccess.getFnModAccess().getModtypeAssignment_2()); 
                    // InternalFortXTrans.g:1759:3: ( rule__FnMod__ModtypeAssignment_2 )
                    // InternalFortXTrans.g:1759:4: rule__FnMod__ModtypeAssignment_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__FnMod__ModtypeAssignment_2();

                    state._fsp--;


                    }

                     after(grammarAccess.getFnModAccess().getModtypeAssignment_2()); 

                    }


                    }
                    break;
                case 4 :
                    // InternalFortXTrans.g:1763:2: ( ( rule__FnMod__ModtypeAssignment_3 ) )
                    {
                    // InternalFortXTrans.g:1763:2: ( ( rule__FnMod__ModtypeAssignment_3 ) )
                    // InternalFortXTrans.g:1764:3: ( rule__FnMod__ModtypeAssignment_3 )
                    {
                     before(grammarAccess.getFnModAccess().getModtypeAssignment_3()); 
                    // InternalFortXTrans.g:1765:3: ( rule__FnMod__ModtypeAssignment_3 )
                    // InternalFortXTrans.g:1765:4: rule__FnMod__ModtypeAssignment_3
                    {
                    pushFollow(FOLLOW_2);
                    rule__FnMod__ModtypeAssignment_3();

                    state._fsp--;


                    }

                     after(grammarAccess.getFnModAccess().getModtypeAssignment_3()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FnMod__Alternatives"


    // $ANTLR start "rule__ValParam__Alternatives"
    // InternalFortXTrans.g:1773:1: rule__ValParam__Alternatives : ( ( ( rule__ValParam__ParamsAssignment_0 ) ) | ( ( rule__ValParam__Group_1__0 ) ) );
    public final void rule__ValParam__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1777:1: ( ( ( rule__ValParam__ParamsAssignment_0 ) ) | ( ( rule__ValParam__Group_1__0 ) ) )
            int alt12=2;
            int LA12_0 = input.LA(1);

            if ( (LA12_0==RULE_ID) ) {
                alt12=1;
            }
            else if ( (LA12_0==33) ) {
                alt12=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 12, 0, input);

                throw nvae;
            }
            switch (alt12) {
                case 1 :
                    // InternalFortXTrans.g:1778:2: ( ( rule__ValParam__ParamsAssignment_0 ) )
                    {
                    // InternalFortXTrans.g:1778:2: ( ( rule__ValParam__ParamsAssignment_0 ) )
                    // InternalFortXTrans.g:1779:3: ( rule__ValParam__ParamsAssignment_0 )
                    {
                     before(grammarAccess.getValParamAccess().getParamsAssignment_0()); 
                    // InternalFortXTrans.g:1780:3: ( rule__ValParam__ParamsAssignment_0 )
                    // InternalFortXTrans.g:1780:4: rule__ValParam__ParamsAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ValParam__ParamsAssignment_0();

                    state._fsp--;


                    }

                     after(grammarAccess.getValParamAccess().getParamsAssignment_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalFortXTrans.g:1784:2: ( ( rule__ValParam__Group_1__0 ) )
                    {
                    // InternalFortXTrans.g:1784:2: ( ( rule__ValParam__Group_1__0 ) )
                    // InternalFortXTrans.g:1785:3: ( rule__ValParam__Group_1__0 )
                    {
                     before(grammarAccess.getValParamAccess().getGroup_1()); 
                    // InternalFortXTrans.g:1786:3: ( rule__ValParam__Group_1__0 )
                    // InternalFortXTrans.g:1786:4: rule__ValParam__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ValParam__Group_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getValParamAccess().getGroup_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValParam__Alternatives"


    // $ANTLR start "rule__RetType__Alternatives"
    // InternalFortXTrans.g:1794:1: rule__RetType__Alternatives : ( ( ( rule__RetType__Group_0__0 ) ) | ( ( rule__RetType__Group_1__0 ) ) );
    public final void rule__RetType__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1798:1: ( ( ( rule__RetType__Group_0__0 ) ) | ( ( rule__RetType__Group_1__0 ) ) )
            int alt13=2;
            int LA13_0 = input.LA(1);

            if ( (LA13_0==35) ) {
                int LA13_1 = input.LA(2);

                if ( (LA13_1==RULE_ID) ) {
                    alt13=2;
                }
                else if ( (LA13_1==33) ) {
                    alt13=1;
                }
                else {
                    NoViableAltException nvae =
                        new NoViableAltException("", 13, 1, input);

                    throw nvae;
                }
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 13, 0, input);

                throw nvae;
            }
            switch (alt13) {
                case 1 :
                    // InternalFortXTrans.g:1799:2: ( ( rule__RetType__Group_0__0 ) )
                    {
                    // InternalFortXTrans.g:1799:2: ( ( rule__RetType__Group_0__0 ) )
                    // InternalFortXTrans.g:1800:3: ( rule__RetType__Group_0__0 )
                    {
                     before(grammarAccess.getRetTypeAccess().getGroup_0()); 
                    // InternalFortXTrans.g:1801:3: ( rule__RetType__Group_0__0 )
                    // InternalFortXTrans.g:1801:4: rule__RetType__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__RetType__Group_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getRetTypeAccess().getGroup_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalFortXTrans.g:1805:2: ( ( rule__RetType__Group_1__0 ) )
                    {
                    // InternalFortXTrans.g:1805:2: ( ( rule__RetType__Group_1__0 ) )
                    // InternalFortXTrans.g:1806:3: ( rule__RetType__Group_1__0 )
                    {
                     before(grammarAccess.getRetTypeAccess().getGroup_1()); 
                    // InternalFortXTrans.g:1807:3: ( rule__RetType__Group_1__0 )
                    // InternalFortXTrans.g:1807:4: rule__RetType__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__RetType__Group_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getRetTypeAccess().getGroup_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RetType__Alternatives"


    // $ANTLR start "rule__Stmnts__Alternatives"
    // InternalFortXTrans.g:1815:1: rule__Stmnts__Alternatives : ( ( ( rule__Stmnts__FrontAssignment_0 ) ) | ( ( rule__Stmnts__LocVarAssignment_1 ) ) | ( ( rule__Stmnts__ExpAssignment_2 ) ) );
    public final void rule__Stmnts__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1819:1: ( ( ( rule__Stmnts__FrontAssignment_0 ) ) | ( ( rule__Stmnts__LocVarAssignment_1 ) ) | ( ( rule__Stmnts__ExpAssignment_2 ) ) )
            int alt14=3;
            alt14 = dfa14.predict(input);
            switch (alt14) {
                case 1 :
                    // InternalFortXTrans.g:1820:2: ( ( rule__Stmnts__FrontAssignment_0 ) )
                    {
                    // InternalFortXTrans.g:1820:2: ( ( rule__Stmnts__FrontAssignment_0 ) )
                    // InternalFortXTrans.g:1821:3: ( rule__Stmnts__FrontAssignment_0 )
                    {
                     before(grammarAccess.getStmntsAccess().getFrontAssignment_0()); 
                    // InternalFortXTrans.g:1822:3: ( rule__Stmnts__FrontAssignment_0 )
                    // InternalFortXTrans.g:1822:4: rule__Stmnts__FrontAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Stmnts__FrontAssignment_0();

                    state._fsp--;


                    }

                     after(grammarAccess.getStmntsAccess().getFrontAssignment_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalFortXTrans.g:1826:2: ( ( rule__Stmnts__LocVarAssignment_1 ) )
                    {
                    // InternalFortXTrans.g:1826:2: ( ( rule__Stmnts__LocVarAssignment_1 ) )
                    // InternalFortXTrans.g:1827:3: ( rule__Stmnts__LocVarAssignment_1 )
                    {
                     before(grammarAccess.getStmntsAccess().getLocVarAssignment_1()); 
                    // InternalFortXTrans.g:1828:3: ( rule__Stmnts__LocVarAssignment_1 )
                    // InternalFortXTrans.g:1828:4: rule__Stmnts__LocVarAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__Stmnts__LocVarAssignment_1();

                    state._fsp--;


                    }

                     after(grammarAccess.getStmntsAccess().getLocVarAssignment_1()); 

                    }


                    }
                    break;
                case 3 :
                    // InternalFortXTrans.g:1832:2: ( ( rule__Stmnts__ExpAssignment_2 ) )
                    {
                    // InternalFortXTrans.g:1832:2: ( ( rule__Stmnts__ExpAssignment_2 ) )
                    // InternalFortXTrans.g:1833:3: ( rule__Stmnts__ExpAssignment_2 )
                    {
                     before(grammarAccess.getStmntsAccess().getExpAssignment_2()); 
                    // InternalFortXTrans.g:1834:3: ( rule__Stmnts__ExpAssignment_2 )
                    // InternalFortXTrans.g:1834:4: rule__Stmnts__ExpAssignment_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__Stmnts__ExpAssignment_2();

                    state._fsp--;


                    }

                     after(grammarAccess.getStmntsAccess().getExpAssignment_2()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Stmnts__Alternatives"


    // $ANTLR start "rule__Stmnt__Alternatives"
    // InternalFortXTrans.g:1842:1: rule__Stmnt__Alternatives : ( ( ( rule__Stmnt__DelimAssignment_0 ) ) | ( ( rule__Stmnt__Group_1__0 ) ) );
    public final void rule__Stmnt__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1846:1: ( ( ( rule__Stmnt__DelimAssignment_0 ) ) | ( ( rule__Stmnt__Group_1__0 ) ) )
            int alt15=2;
            int LA15_0 = input.LA(1);

            if ( (LA15_0==52||LA15_0==59||(LA15_0>=62 && LA15_0<=65)||LA15_0==67) ) {
                alt15=1;
            }
            else if ( (LA15_0==36) ) {
                alt15=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 15, 0, input);

                throw nvae;
            }
            switch (alt15) {
                case 1 :
                    // InternalFortXTrans.g:1847:2: ( ( rule__Stmnt__DelimAssignment_0 ) )
                    {
                    // InternalFortXTrans.g:1847:2: ( ( rule__Stmnt__DelimAssignment_0 ) )
                    // InternalFortXTrans.g:1848:3: ( rule__Stmnt__DelimAssignment_0 )
                    {
                     before(grammarAccess.getStmntAccess().getDelimAssignment_0()); 
                    // InternalFortXTrans.g:1849:3: ( rule__Stmnt__DelimAssignment_0 )
                    // InternalFortXTrans.g:1849:4: rule__Stmnt__DelimAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Stmnt__DelimAssignment_0();

                    state._fsp--;


                    }

                     after(grammarAccess.getStmntAccess().getDelimAssignment_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalFortXTrans.g:1853:2: ( ( rule__Stmnt__Group_1__0 ) )
                    {
                    // InternalFortXTrans.g:1853:2: ( ( rule__Stmnt__Group_1__0 ) )
                    // InternalFortXTrans.g:1854:3: ( rule__Stmnt__Group_1__0 )
                    {
                     before(grammarAccess.getStmntAccess().getGroup_1()); 
                    // InternalFortXTrans.g:1855:3: ( rule__Stmnt__Group_1__0 )
                    // InternalFortXTrans.g:1855:4: rule__Stmnt__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Stmnt__Group_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getStmntAccess().getGroup_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Stmnt__Alternatives"


    // $ANTLR start "rule__Equality__OpAlternatives_1_1_0"
    // InternalFortXTrans.g:1863:1: rule__Equality__OpAlternatives_1_1_0 : ( ( '===' ) | ( '=/=' ) | ( 'EQ' ) | ( 'NE' ) );
    public final void rule__Equality__OpAlternatives_1_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1867:1: ( ( '===' ) | ( '=/=' ) | ( 'EQ' ) | ( 'NE' ) )
            int alt16=4;
            switch ( input.LA(1) ) {
            case 13:
                {
                alt16=1;
                }
                break;
            case 14:
                {
                alt16=2;
                }
                break;
            case 15:
                {
                alt16=3;
                }
                break;
            case 16:
                {
                alt16=4;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 16, 0, input);

                throw nvae;
            }

            switch (alt16) {
                case 1 :
                    // InternalFortXTrans.g:1868:2: ( '===' )
                    {
                    // InternalFortXTrans.g:1868:2: ( '===' )
                    // InternalFortXTrans.g:1869:3: '==='
                    {
                     before(grammarAccess.getEqualityAccess().getOpEqualsSignEqualsSignEqualsSignKeyword_1_1_0_0()); 
                    match(input,13,FOLLOW_2); 
                     after(grammarAccess.getEqualityAccess().getOpEqualsSignEqualsSignEqualsSignKeyword_1_1_0_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalFortXTrans.g:1874:2: ( '=/=' )
                    {
                    // InternalFortXTrans.g:1874:2: ( '=/=' )
                    // InternalFortXTrans.g:1875:3: '=/='
                    {
                     before(grammarAccess.getEqualityAccess().getOpEqualsSignSolidusEqualsSignKeyword_1_1_0_1()); 
                    match(input,14,FOLLOW_2); 
                     after(grammarAccess.getEqualityAccess().getOpEqualsSignSolidusEqualsSignKeyword_1_1_0_1()); 

                    }


                    }
                    break;
                case 3 :
                    // InternalFortXTrans.g:1880:2: ( 'EQ' )
                    {
                    // InternalFortXTrans.g:1880:2: ( 'EQ' )
                    // InternalFortXTrans.g:1881:3: 'EQ'
                    {
                     before(grammarAccess.getEqualityAccess().getOpEQKeyword_1_1_0_2()); 
                    match(input,15,FOLLOW_2); 
                     after(grammarAccess.getEqualityAccess().getOpEQKeyword_1_1_0_2()); 

                    }


                    }
                    break;
                case 4 :
                    // InternalFortXTrans.g:1886:2: ( 'NE' )
                    {
                    // InternalFortXTrans.g:1886:2: ( 'NE' )
                    // InternalFortXTrans.g:1887:3: 'NE'
                    {
                     before(grammarAccess.getEqualityAccess().getOpNEKeyword_1_1_0_3()); 
                    match(input,16,FOLLOW_2); 
                     after(grammarAccess.getEqualityAccess().getOpNEKeyword_1_1_0_3()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equality__OpAlternatives_1_1_0"


    // $ANTLR start "rule__Comparison__OpAlternatives_1_1_0"
    // InternalFortXTrans.g:1896:1: rule__Comparison__OpAlternatives_1_1_0 : ( ( '>=' ) | ( '<=' ) | ( '>' ) | ( '<' ) | ( 'LT' ) | ( 'GT' ) | ( 'LE' ) | ( 'GE' ) );
    public final void rule__Comparison__OpAlternatives_1_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1900:1: ( ( '>=' ) | ( '<=' ) | ( '>' ) | ( '<' ) | ( 'LT' ) | ( 'GT' ) | ( 'LE' ) | ( 'GE' ) )
            int alt17=8;
            switch ( input.LA(1) ) {
            case 17:
                {
                alt17=1;
                }
                break;
            case 18:
                {
                alt17=2;
                }
                break;
            case 19:
                {
                alt17=3;
                }
                break;
            case 20:
                {
                alt17=4;
                }
                break;
            case 21:
                {
                alt17=5;
                }
                break;
            case 22:
                {
                alt17=6;
                }
                break;
            case 23:
                {
                alt17=7;
                }
                break;
            case 24:
                {
                alt17=8;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 17, 0, input);

                throw nvae;
            }

            switch (alt17) {
                case 1 :
                    // InternalFortXTrans.g:1901:2: ( '>=' )
                    {
                    // InternalFortXTrans.g:1901:2: ( '>=' )
                    // InternalFortXTrans.g:1902:3: '>='
                    {
                     before(grammarAccess.getComparisonAccess().getOpGreaterThanSignEqualsSignKeyword_1_1_0_0()); 
                    match(input,17,FOLLOW_2); 
                     after(grammarAccess.getComparisonAccess().getOpGreaterThanSignEqualsSignKeyword_1_1_0_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalFortXTrans.g:1907:2: ( '<=' )
                    {
                    // InternalFortXTrans.g:1907:2: ( '<=' )
                    // InternalFortXTrans.g:1908:3: '<='
                    {
                     before(grammarAccess.getComparisonAccess().getOpLessThanSignEqualsSignKeyword_1_1_0_1()); 
                    match(input,18,FOLLOW_2); 
                     after(grammarAccess.getComparisonAccess().getOpLessThanSignEqualsSignKeyword_1_1_0_1()); 

                    }


                    }
                    break;
                case 3 :
                    // InternalFortXTrans.g:1913:2: ( '>' )
                    {
                    // InternalFortXTrans.g:1913:2: ( '>' )
                    // InternalFortXTrans.g:1914:3: '>'
                    {
                     before(grammarAccess.getComparisonAccess().getOpGreaterThanSignKeyword_1_1_0_2()); 
                    match(input,19,FOLLOW_2); 
                     after(grammarAccess.getComparisonAccess().getOpGreaterThanSignKeyword_1_1_0_2()); 

                    }


                    }
                    break;
                case 4 :
                    // InternalFortXTrans.g:1919:2: ( '<' )
                    {
                    // InternalFortXTrans.g:1919:2: ( '<' )
                    // InternalFortXTrans.g:1920:3: '<'
                    {
                     before(grammarAccess.getComparisonAccess().getOpLessThanSignKeyword_1_1_0_3()); 
                    match(input,20,FOLLOW_2); 
                     after(grammarAccess.getComparisonAccess().getOpLessThanSignKeyword_1_1_0_3()); 

                    }


                    }
                    break;
                case 5 :
                    // InternalFortXTrans.g:1925:2: ( 'LT' )
                    {
                    // InternalFortXTrans.g:1925:2: ( 'LT' )
                    // InternalFortXTrans.g:1926:3: 'LT'
                    {
                     before(grammarAccess.getComparisonAccess().getOpLTKeyword_1_1_0_4()); 
                    match(input,21,FOLLOW_2); 
                     after(grammarAccess.getComparisonAccess().getOpLTKeyword_1_1_0_4()); 

                    }


                    }
                    break;
                case 6 :
                    // InternalFortXTrans.g:1931:2: ( 'GT' )
                    {
                    // InternalFortXTrans.g:1931:2: ( 'GT' )
                    // InternalFortXTrans.g:1932:3: 'GT'
                    {
                     before(grammarAccess.getComparisonAccess().getOpGTKeyword_1_1_0_5()); 
                    match(input,22,FOLLOW_2); 
                     after(grammarAccess.getComparisonAccess().getOpGTKeyword_1_1_0_5()); 

                    }


                    }
                    break;
                case 7 :
                    // InternalFortXTrans.g:1937:2: ( 'LE' )
                    {
                    // InternalFortXTrans.g:1937:2: ( 'LE' )
                    // InternalFortXTrans.g:1938:3: 'LE'
                    {
                     before(grammarAccess.getComparisonAccess().getOpLEKeyword_1_1_0_6()); 
                    match(input,23,FOLLOW_2); 
                     after(grammarAccess.getComparisonAccess().getOpLEKeyword_1_1_0_6()); 

                    }


                    }
                    break;
                case 8 :
                    // InternalFortXTrans.g:1943:2: ( 'GE' )
                    {
                    // InternalFortXTrans.g:1943:2: ( 'GE' )
                    // InternalFortXTrans.g:1944:3: 'GE'
                    {
                     before(grammarAccess.getComparisonAccess().getOpGEKeyword_1_1_0_7()); 
                    match(input,24,FOLLOW_2); 
                     after(grammarAccess.getComparisonAccess().getOpGEKeyword_1_1_0_7()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__OpAlternatives_1_1_0"


    // $ANTLR start "rule__Primary__Alternatives"
    // InternalFortXTrans.g:1953:1: rule__Primary__Alternatives : ( ( ( rule__Primary__Group_0__0 ) ) | ( ( rule__Primary__Group_1__0 ) ) | ( ( rule__Primary__Group_2__0 ) ) );
    public final void rule__Primary__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1957:1: ( ( ( rule__Primary__Group_0__0 ) ) | ( ( rule__Primary__Group_1__0 ) ) | ( ( rule__Primary__Group_2__0 ) ) )
            int alt18=3;
            alt18 = dfa18.predict(input);
            switch (alt18) {
                case 1 :
                    // InternalFortXTrans.g:1958:2: ( ( rule__Primary__Group_0__0 ) )
                    {
                    // InternalFortXTrans.g:1958:2: ( ( rule__Primary__Group_0__0 ) )
                    // InternalFortXTrans.g:1959:3: ( rule__Primary__Group_0__0 )
                    {
                     before(grammarAccess.getPrimaryAccess().getGroup_0()); 
                    // InternalFortXTrans.g:1960:3: ( rule__Primary__Group_0__0 )
                    // InternalFortXTrans.g:1960:4: rule__Primary__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Primary__Group_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getPrimaryAccess().getGroup_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalFortXTrans.g:1964:2: ( ( rule__Primary__Group_1__0 ) )
                    {
                    // InternalFortXTrans.g:1964:2: ( ( rule__Primary__Group_1__0 ) )
                    // InternalFortXTrans.g:1965:3: ( rule__Primary__Group_1__0 )
                    {
                     before(grammarAccess.getPrimaryAccess().getGroup_1()); 
                    // InternalFortXTrans.g:1966:3: ( rule__Primary__Group_1__0 )
                    // InternalFortXTrans.g:1966:4: rule__Primary__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Primary__Group_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getPrimaryAccess().getGroup_1()); 

                    }


                    }
                    break;
                case 3 :
                    // InternalFortXTrans.g:1970:2: ( ( rule__Primary__Group_2__0 ) )
                    {
                    // InternalFortXTrans.g:1970:2: ( ( rule__Primary__Group_2__0 ) )
                    // InternalFortXTrans.g:1971:3: ( rule__Primary__Group_2__0 )
                    {
                     before(grammarAccess.getPrimaryAccess().getGroup_2()); 
                    // InternalFortXTrans.g:1972:3: ( rule__Primary__Group_2__0 )
                    // InternalFortXTrans.g:1972:4: rule__Primary__Group_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Primary__Group_2__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getPrimaryAccess().getGroup_2()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Alternatives"


    // $ANTLR start "rule__DelimitedExpr__Alternatives"
    // InternalFortXTrans.g:1980:1: rule__DelimitedExpr__Alternatives : ( ( ( rule__DelimitedExpr__DodAssignment_0 ) ) | ( ( rule__DelimitedExpr__Group_1__0 ) ) | ( ( rule__DelimitedExpr__Group_2__0 ) ) | ( ( rule__DelimitedExpr__Group_3__0 ) ) | ( ( rule__DelimitedExpr__Group_4__0 ) ) );
    public final void rule__DelimitedExpr__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1984:1: ( ( ( rule__DelimitedExpr__DodAssignment_0 ) ) | ( ( rule__DelimitedExpr__Group_1__0 ) ) | ( ( rule__DelimitedExpr__Group_2__0 ) ) | ( ( rule__DelimitedExpr__Group_3__0 ) ) | ( ( rule__DelimitedExpr__Group_4__0 ) ) )
            int alt19=5;
            switch ( input.LA(1) ) {
            case 52:
            case 59:
            case 67:
                {
                alt19=1;
                }
                break;
            case 62:
                {
                alt19=2;
                }
                break;
            case 63:
                {
                alt19=3;
                }
                break;
            case 64:
                {
                alt19=4;
                }
                break;
            case 65:
                {
                alt19=5;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 19, 0, input);

                throw nvae;
            }

            switch (alt19) {
                case 1 :
                    // InternalFortXTrans.g:1985:2: ( ( rule__DelimitedExpr__DodAssignment_0 ) )
                    {
                    // InternalFortXTrans.g:1985:2: ( ( rule__DelimitedExpr__DodAssignment_0 ) )
                    // InternalFortXTrans.g:1986:3: ( rule__DelimitedExpr__DodAssignment_0 )
                    {
                     before(grammarAccess.getDelimitedExprAccess().getDodAssignment_0()); 
                    // InternalFortXTrans.g:1987:3: ( rule__DelimitedExpr__DodAssignment_0 )
                    // InternalFortXTrans.g:1987:4: rule__DelimitedExpr__DodAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__DelimitedExpr__DodAssignment_0();

                    state._fsp--;


                    }

                     after(grammarAccess.getDelimitedExprAccess().getDodAssignment_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalFortXTrans.g:1991:2: ( ( rule__DelimitedExpr__Group_1__0 ) )
                    {
                    // InternalFortXTrans.g:1991:2: ( ( rule__DelimitedExpr__Group_1__0 ) )
                    // InternalFortXTrans.g:1992:3: ( rule__DelimitedExpr__Group_1__0 )
                    {
                     before(grammarAccess.getDelimitedExprAccess().getGroup_1()); 
                    // InternalFortXTrans.g:1993:3: ( rule__DelimitedExpr__Group_1__0 )
                    // InternalFortXTrans.g:1993:4: rule__DelimitedExpr__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__DelimitedExpr__Group_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getDelimitedExprAccess().getGroup_1()); 

                    }


                    }
                    break;
                case 3 :
                    // InternalFortXTrans.g:1997:2: ( ( rule__DelimitedExpr__Group_2__0 ) )
                    {
                    // InternalFortXTrans.g:1997:2: ( ( rule__DelimitedExpr__Group_2__0 ) )
                    // InternalFortXTrans.g:1998:3: ( rule__DelimitedExpr__Group_2__0 )
                    {
                     before(grammarAccess.getDelimitedExprAccess().getGroup_2()); 
                    // InternalFortXTrans.g:1999:3: ( rule__DelimitedExpr__Group_2__0 )
                    // InternalFortXTrans.g:1999:4: rule__DelimitedExpr__Group_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__DelimitedExpr__Group_2__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getDelimitedExprAccess().getGroup_2()); 

                    }


                    }
                    break;
                case 4 :
                    // InternalFortXTrans.g:2003:2: ( ( rule__DelimitedExpr__Group_3__0 ) )
                    {
                    // InternalFortXTrans.g:2003:2: ( ( rule__DelimitedExpr__Group_3__0 ) )
                    // InternalFortXTrans.g:2004:3: ( rule__DelimitedExpr__Group_3__0 )
                    {
                     before(grammarAccess.getDelimitedExprAccess().getGroup_3()); 
                    // InternalFortXTrans.g:2005:3: ( rule__DelimitedExpr__Group_3__0 )
                    // InternalFortXTrans.g:2005:4: rule__DelimitedExpr__Group_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__DelimitedExpr__Group_3__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getDelimitedExprAccess().getGroup_3()); 

                    }


                    }
                    break;
                case 5 :
                    // InternalFortXTrans.g:2009:2: ( ( rule__DelimitedExpr__Group_4__0 ) )
                    {
                    // InternalFortXTrans.g:2009:2: ( ( rule__DelimitedExpr__Group_4__0 ) )
                    // InternalFortXTrans.g:2010:3: ( rule__DelimitedExpr__Group_4__0 )
                    {
                     before(grammarAccess.getDelimitedExprAccess().getGroup_4()); 
                    // InternalFortXTrans.g:2011:3: ( rule__DelimitedExpr__Group_4__0 )
                    // InternalFortXTrans.g:2011:4: rule__DelimitedExpr__Group_4__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__DelimitedExpr__Group_4__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getDelimitedExprAccess().getGroup_4()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Alternatives"


    // $ANTLR start "rule__Binding__Alternatives"
    // InternalFortXTrans.g:2019:1: rule__Binding__Alternatives : ( ( ( rule__Binding__Group_0__0 ) ) | ( ( rule__Binding__Group_1__0 ) ) );
    public final void rule__Binding__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2023:1: ( ( ( rule__Binding__Group_0__0 ) ) | ( ( rule__Binding__Group_1__0 ) ) )
            int alt20=2;
            alt20 = dfa20.predict(input);
            switch (alt20) {
                case 1 :
                    // InternalFortXTrans.g:2024:2: ( ( rule__Binding__Group_0__0 ) )
                    {
                    // InternalFortXTrans.g:2024:2: ( ( rule__Binding__Group_0__0 ) )
                    // InternalFortXTrans.g:2025:3: ( rule__Binding__Group_0__0 )
                    {
                     before(grammarAccess.getBindingAccess().getGroup_0()); 
                    // InternalFortXTrans.g:2026:3: ( rule__Binding__Group_0__0 )
                    // InternalFortXTrans.g:2026:4: rule__Binding__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Binding__Group_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getBindingAccess().getGroup_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalFortXTrans.g:2030:2: ( ( rule__Binding__Group_1__0 ) )
                    {
                    // InternalFortXTrans.g:2030:2: ( ( rule__Binding__Group_1__0 ) )
                    // InternalFortXTrans.g:2031:3: ( rule__Binding__Group_1__0 )
                    {
                     before(grammarAccess.getBindingAccess().getGroup_1()); 
                    // InternalFortXTrans.g:2032:3: ( rule__Binding__Group_1__0 )
                    // InternalFortXTrans.g:2032:4: rule__Binding__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Binding__Group_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getBindingAccess().getGroup_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Binding__Alternatives"


    // $ANTLR start "rule__GenClause__Alternatives"
    // InternalFortXTrans.g:2040:1: rule__GenClause__Alternatives : ( ( ( rule__GenClause__BindingAssignment_0 ) ) | ( ( rule__GenClause__ExprAssignment_1 ) ) );
    public final void rule__GenClause__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2044:1: ( ( ( rule__GenClause__BindingAssignment_0 ) ) | ( ( rule__GenClause__ExprAssignment_1 ) ) )
            int alt21=2;
            alt21 = dfa21.predict(input);
            switch (alt21) {
                case 1 :
                    // InternalFortXTrans.g:2045:2: ( ( rule__GenClause__BindingAssignment_0 ) )
                    {
                    // InternalFortXTrans.g:2045:2: ( ( rule__GenClause__BindingAssignment_0 ) )
                    // InternalFortXTrans.g:2046:3: ( rule__GenClause__BindingAssignment_0 )
                    {
                     before(grammarAccess.getGenClauseAccess().getBindingAssignment_0()); 
                    // InternalFortXTrans.g:2047:3: ( rule__GenClause__BindingAssignment_0 )
                    // InternalFortXTrans.g:2047:4: rule__GenClause__BindingAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__GenClause__BindingAssignment_0();

                    state._fsp--;


                    }

                     after(grammarAccess.getGenClauseAccess().getBindingAssignment_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalFortXTrans.g:2051:2: ( ( rule__GenClause__ExprAssignment_1 ) )
                    {
                    // InternalFortXTrans.g:2051:2: ( ( rule__GenClause__ExprAssignment_1 ) )
                    // InternalFortXTrans.g:2052:3: ( rule__GenClause__ExprAssignment_1 )
                    {
                     before(grammarAccess.getGenClauseAccess().getExprAssignment_1()); 
                    // InternalFortXTrans.g:2053:3: ( rule__GenClause__ExprAssignment_1 )
                    // InternalFortXTrans.g:2053:4: rule__GenClause__ExprAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__GenClause__ExprAssignment_1();

                    state._fsp--;


                    }

                     after(grammarAccess.getGenClauseAccess().getExprAssignment_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GenClause__Alternatives"


    // $ANTLR start "rule__FieldDecl__Alternatives"
    // InternalFortXTrans.g:2061:1: rule__FieldDecl__Alternatives : ( ( ( rule__FieldDecl__Group_0__0 ) ) | ( ( rule__FieldDecl__Group_1__0 ) ) | ( ( rule__FieldDecl__Group_2__0 ) ) | ( ( rule__FieldDecl__Group_3__0 ) ) );
    public final void rule__FieldDecl__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2065:1: ( ( ( rule__FieldDecl__Group_0__0 ) ) | ( ( rule__FieldDecl__Group_1__0 ) ) | ( ( rule__FieldDecl__Group_2__0 ) ) | ( ( rule__FieldDecl__Group_3__0 ) ) )
            int alt22=4;
            alt22 = dfa22.predict(input);
            switch (alt22) {
                case 1 :
                    // InternalFortXTrans.g:2066:2: ( ( rule__FieldDecl__Group_0__0 ) )
                    {
                    // InternalFortXTrans.g:2066:2: ( ( rule__FieldDecl__Group_0__0 ) )
                    // InternalFortXTrans.g:2067:3: ( rule__FieldDecl__Group_0__0 )
                    {
                     before(grammarAccess.getFieldDeclAccess().getGroup_0()); 
                    // InternalFortXTrans.g:2068:3: ( rule__FieldDecl__Group_0__0 )
                    // InternalFortXTrans.g:2068:4: rule__FieldDecl__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__FieldDecl__Group_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getFieldDeclAccess().getGroup_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalFortXTrans.g:2072:2: ( ( rule__FieldDecl__Group_1__0 ) )
                    {
                    // InternalFortXTrans.g:2072:2: ( ( rule__FieldDecl__Group_1__0 ) )
                    // InternalFortXTrans.g:2073:3: ( rule__FieldDecl__Group_1__0 )
                    {
                     before(grammarAccess.getFieldDeclAccess().getGroup_1()); 
                    // InternalFortXTrans.g:2074:3: ( rule__FieldDecl__Group_1__0 )
                    // InternalFortXTrans.g:2074:4: rule__FieldDecl__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__FieldDecl__Group_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getFieldDeclAccess().getGroup_1()); 

                    }


                    }
                    break;
                case 3 :
                    // InternalFortXTrans.g:2078:2: ( ( rule__FieldDecl__Group_2__0 ) )
                    {
                    // InternalFortXTrans.g:2078:2: ( ( rule__FieldDecl__Group_2__0 ) )
                    // InternalFortXTrans.g:2079:3: ( rule__FieldDecl__Group_2__0 )
                    {
                     before(grammarAccess.getFieldDeclAccess().getGroup_2()); 
                    // InternalFortXTrans.g:2080:3: ( rule__FieldDecl__Group_2__0 )
                    // InternalFortXTrans.g:2080:4: rule__FieldDecl__Group_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__FieldDecl__Group_2__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getFieldDeclAccess().getGroup_2()); 

                    }


                    }
                    break;
                case 4 :
                    // InternalFortXTrans.g:2084:2: ( ( rule__FieldDecl__Group_3__0 ) )
                    {
                    // InternalFortXTrans.g:2084:2: ( ( rule__FieldDecl__Group_3__0 ) )
                    // InternalFortXTrans.g:2085:3: ( rule__FieldDecl__Group_3__0 )
                    {
                     before(grammarAccess.getFieldDeclAccess().getGroup_3()); 
                    // InternalFortXTrans.g:2086:3: ( rule__FieldDecl__Group_3__0 )
                    // InternalFortXTrans.g:2086:4: rule__FieldDecl__Group_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__FieldDecl__Group_3__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getFieldDeclAccess().getGroup_3()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Alternatives"


    // $ANTLR start "rule__NoNewlineVarWTypes__Alternatives"
    // InternalFortXTrans.g:2094:1: rule__NoNewlineVarWTypes__Alternatives : ( ( ( rule__NoNewlineVarWTypes__SingleAssignment_0 ) ) | ( ( rule__NoNewlineVarWTypes__Group_1__0 ) ) );
    public final void rule__NoNewlineVarWTypes__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2098:1: ( ( ( rule__NoNewlineVarWTypes__SingleAssignment_0 ) ) | ( ( rule__NoNewlineVarWTypes__Group_1__0 ) ) )
            int alt23=2;
            int LA23_0 = input.LA(1);

            if ( (LA23_0==RULE_ID) ) {
                alt23=1;
            }
            else if ( (LA23_0==33) ) {
                alt23=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 23, 0, input);

                throw nvae;
            }
            switch (alt23) {
                case 1 :
                    // InternalFortXTrans.g:2099:2: ( ( rule__NoNewlineVarWTypes__SingleAssignment_0 ) )
                    {
                    // InternalFortXTrans.g:2099:2: ( ( rule__NoNewlineVarWTypes__SingleAssignment_0 ) )
                    // InternalFortXTrans.g:2100:3: ( rule__NoNewlineVarWTypes__SingleAssignment_0 )
                    {
                     before(grammarAccess.getNoNewlineVarWTypesAccess().getSingleAssignment_0()); 
                    // InternalFortXTrans.g:2101:3: ( rule__NoNewlineVarWTypes__SingleAssignment_0 )
                    // InternalFortXTrans.g:2101:4: rule__NoNewlineVarWTypes__SingleAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__NoNewlineVarWTypes__SingleAssignment_0();

                    state._fsp--;


                    }

                     after(grammarAccess.getNoNewlineVarWTypesAccess().getSingleAssignment_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalFortXTrans.g:2105:2: ( ( rule__NoNewlineVarWTypes__Group_1__0 ) )
                    {
                    // InternalFortXTrans.g:2105:2: ( ( rule__NoNewlineVarWTypes__Group_1__0 ) )
                    // InternalFortXTrans.g:2106:3: ( rule__NoNewlineVarWTypes__Group_1__0 )
                    {
                     before(grammarAccess.getNoNewlineVarWTypesAccess().getGroup_1()); 
                    // InternalFortXTrans.g:2107:3: ( rule__NoNewlineVarWTypes__Group_1__0 )
                    // InternalFortXTrans.g:2107:4: rule__NoNewlineVarWTypes__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__NoNewlineVarWTypes__Group_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getNoNewlineVarWTypesAccess().getGroup_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NoNewlineVarWTypes__Alternatives"


    // $ANTLR start "rule__LiteralTuple__Alternatives"
    // InternalFortXTrans.g:2115:1: rule__LiteralTuple__Alternatives : ( ( ruleLiteralTup ) | ( ruleQualified ) );
    public final void rule__LiteralTuple__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2119:1: ( ( ruleLiteralTup ) | ( ruleQualified ) )
            int alt24=2;
            switch ( input.LA(1) ) {
            case RULE_INT:
            case RULE_FLOAT:
            case RULE_STRING:
            case 69:
            case 70:
                {
                alt24=1;
                }
                break;
            case 33:
                {
                int LA24_2 = input.LA(2);

                if ( ((LA24_2>=RULE_INT && LA24_2<=RULE_STRING)||(LA24_2>=69 && LA24_2<=70)) ) {
                    alt24=1;
                }
                else if ( (LA24_2==RULE_ID) ) {
                    alt24=2;
                }
                else {
                    NoViableAltException nvae =
                        new NoViableAltException("", 24, 2, input);

                    throw nvae;
                }
                }
                break;
            case RULE_ID:
                {
                alt24=2;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 24, 0, input);

                throw nvae;
            }

            switch (alt24) {
                case 1 :
                    // InternalFortXTrans.g:2120:2: ( ruleLiteralTup )
                    {
                    // InternalFortXTrans.g:2120:2: ( ruleLiteralTup )
                    // InternalFortXTrans.g:2121:3: ruleLiteralTup
                    {
                     before(grammarAccess.getLiteralTupleAccess().getLiteralTupParserRuleCall_0()); 
                    pushFollow(FOLLOW_2);
                    ruleLiteralTup();

                    state._fsp--;

                     after(grammarAccess.getLiteralTupleAccess().getLiteralTupParserRuleCall_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalFortXTrans.g:2126:2: ( ruleQualified )
                    {
                    // InternalFortXTrans.g:2126:2: ( ruleQualified )
                    // InternalFortXTrans.g:2127:3: ruleQualified
                    {
                     before(grammarAccess.getLiteralTupleAccess().getQualifiedParserRuleCall_1()); 
                    pushFollow(FOLLOW_2);
                    ruleQualified();

                    state._fsp--;

                     after(grammarAccess.getLiteralTupleAccess().getQualifiedParserRuleCall_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralTuple__Alternatives"


    // $ANTLR start "rule__LiteralTup__Alternatives"
    // InternalFortXTrans.g:2136:1: rule__LiteralTup__Alternatives : ( ( ruleLiteral ) | ( ruleLiteralList ) );
    public final void rule__LiteralTup__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2140:1: ( ( ruleLiteral ) | ( ruleLiteralList ) )
            int alt25=2;
            int LA25_0 = input.LA(1);

            if ( ((LA25_0>=RULE_INT && LA25_0<=RULE_STRING)||(LA25_0>=69 && LA25_0<=70)) ) {
                alt25=1;
            }
            else if ( (LA25_0==33) ) {
                alt25=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 25, 0, input);

                throw nvae;
            }
            switch (alt25) {
                case 1 :
                    // InternalFortXTrans.g:2141:2: ( ruleLiteral )
                    {
                    // InternalFortXTrans.g:2141:2: ( ruleLiteral )
                    // InternalFortXTrans.g:2142:3: ruleLiteral
                    {
                     before(grammarAccess.getLiteralTupAccess().getLiteralParserRuleCall_0()); 
                    pushFollow(FOLLOW_2);
                    ruleLiteral();

                    state._fsp--;

                     after(grammarAccess.getLiteralTupAccess().getLiteralParserRuleCall_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalFortXTrans.g:2147:2: ( ruleLiteralList )
                    {
                    // InternalFortXTrans.g:2147:2: ( ruleLiteralList )
                    // InternalFortXTrans.g:2148:3: ruleLiteralList
                    {
                     before(grammarAccess.getLiteralTupAccess().getLiteralListParserRuleCall_1()); 
                    pushFollow(FOLLOW_2);
                    ruleLiteralList();

                    state._fsp--;

                     after(grammarAccess.getLiteralTupAccess().getLiteralListParserRuleCall_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralTup__Alternatives"


    // $ANTLR start "rule__Literal__Alternatives"
    // InternalFortXTrans.g:2157:1: rule__Literal__Alternatives : ( ( ( rule__Literal__Group_0__0 ) ) | ( ( rule__Literal__Group_1__0 ) ) | ( ( rule__Literal__Group_2__0 ) ) | ( ( rule__Literal__Group_3__0 ) ) );
    public final void rule__Literal__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2161:1: ( ( ( rule__Literal__Group_0__0 ) ) | ( ( rule__Literal__Group_1__0 ) ) | ( ( rule__Literal__Group_2__0 ) ) | ( ( rule__Literal__Group_3__0 ) ) )
            int alt26=4;
            switch ( input.LA(1) ) {
            case RULE_INT:
                {
                alt26=1;
                }
                break;
            case RULE_FLOAT:
                {
                alt26=2;
                }
                break;
            case RULE_STRING:
                {
                alt26=3;
                }
                break;
            case 69:
            case 70:
                {
                alt26=4;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 26, 0, input);

                throw nvae;
            }

            switch (alt26) {
                case 1 :
                    // InternalFortXTrans.g:2162:2: ( ( rule__Literal__Group_0__0 ) )
                    {
                    // InternalFortXTrans.g:2162:2: ( ( rule__Literal__Group_0__0 ) )
                    // InternalFortXTrans.g:2163:3: ( rule__Literal__Group_0__0 )
                    {
                     before(grammarAccess.getLiteralAccess().getGroup_0()); 
                    // InternalFortXTrans.g:2164:3: ( rule__Literal__Group_0__0 )
                    // InternalFortXTrans.g:2164:4: rule__Literal__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Literal__Group_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getLiteralAccess().getGroup_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalFortXTrans.g:2168:2: ( ( rule__Literal__Group_1__0 ) )
                    {
                    // InternalFortXTrans.g:2168:2: ( ( rule__Literal__Group_1__0 ) )
                    // InternalFortXTrans.g:2169:3: ( rule__Literal__Group_1__0 )
                    {
                     before(grammarAccess.getLiteralAccess().getGroup_1()); 
                    // InternalFortXTrans.g:2170:3: ( rule__Literal__Group_1__0 )
                    // InternalFortXTrans.g:2170:4: rule__Literal__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Literal__Group_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getLiteralAccess().getGroup_1()); 

                    }


                    }
                    break;
                case 3 :
                    // InternalFortXTrans.g:2174:2: ( ( rule__Literal__Group_2__0 ) )
                    {
                    // InternalFortXTrans.g:2174:2: ( ( rule__Literal__Group_2__0 ) )
                    // InternalFortXTrans.g:2175:3: ( rule__Literal__Group_2__0 )
                    {
                     before(grammarAccess.getLiteralAccess().getGroup_2()); 
                    // InternalFortXTrans.g:2176:3: ( rule__Literal__Group_2__0 )
                    // InternalFortXTrans.g:2176:4: rule__Literal__Group_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Literal__Group_2__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getLiteralAccess().getGroup_2()); 

                    }


                    }
                    break;
                case 4 :
                    // InternalFortXTrans.g:2180:2: ( ( rule__Literal__Group_3__0 ) )
                    {
                    // InternalFortXTrans.g:2180:2: ( ( rule__Literal__Group_3__0 ) )
                    // InternalFortXTrans.g:2181:3: ( rule__Literal__Group_3__0 )
                    {
                     before(grammarAccess.getLiteralAccess().getGroup_3()); 
                    // InternalFortXTrans.g:2182:3: ( rule__Literal__Group_3__0 )
                    // InternalFortXTrans.g:2182:4: rule__Literal__Group_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Literal__Group_3__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getLiteralAccess().getGroup_3()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Literal__Alternatives"


    // $ANTLR start "rule__Literal__Alternatives_3_1"
    // InternalFortXTrans.g:2190:1: rule__Literal__Alternatives_3_1 : ( ( ( rule__Literal__ValueAssignment_3_1_0 ) ) | ( ( rule__Literal__ValueAssignment_3_1_1 ) ) );
    public final void rule__Literal__Alternatives_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2194:1: ( ( ( rule__Literal__ValueAssignment_3_1_0 ) ) | ( ( rule__Literal__ValueAssignment_3_1_1 ) ) )
            int alt27=2;
            int LA27_0 = input.LA(1);

            if ( (LA27_0==69) ) {
                alt27=1;
            }
            else if ( (LA27_0==70) ) {
                alt27=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 27, 0, input);

                throw nvae;
            }
            switch (alt27) {
                case 1 :
                    // InternalFortXTrans.g:2195:2: ( ( rule__Literal__ValueAssignment_3_1_0 ) )
                    {
                    // InternalFortXTrans.g:2195:2: ( ( rule__Literal__ValueAssignment_3_1_0 ) )
                    // InternalFortXTrans.g:2196:3: ( rule__Literal__ValueAssignment_3_1_0 )
                    {
                     before(grammarAccess.getLiteralAccess().getValueAssignment_3_1_0()); 
                    // InternalFortXTrans.g:2197:3: ( rule__Literal__ValueAssignment_3_1_0 )
                    // InternalFortXTrans.g:2197:4: rule__Literal__ValueAssignment_3_1_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Literal__ValueAssignment_3_1_0();

                    state._fsp--;


                    }

                     after(grammarAccess.getLiteralAccess().getValueAssignment_3_1_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalFortXTrans.g:2201:2: ( ( rule__Literal__ValueAssignment_3_1_1 ) )
                    {
                    // InternalFortXTrans.g:2201:2: ( ( rule__Literal__ValueAssignment_3_1_1 ) )
                    // InternalFortXTrans.g:2202:3: ( rule__Literal__ValueAssignment_3_1_1 )
                    {
                     before(grammarAccess.getLiteralAccess().getValueAssignment_3_1_1()); 
                    // InternalFortXTrans.g:2203:3: ( rule__Literal__ValueAssignment_3_1_1 )
                    // InternalFortXTrans.g:2203:4: rule__Literal__ValueAssignment_3_1_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__Literal__ValueAssignment_3_1_1();

                    state._fsp--;


                    }

                     after(grammarAccess.getLiteralAccess().getValueAssignment_3_1_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Literal__Alternatives_3_1"


    // $ANTLR start "rule__LocalVarDecl__Alternatives"
    // InternalFortXTrans.g:2211:1: rule__LocalVarDecl__Alternatives : ( ( ( rule__LocalVarDecl__Group_0__0 ) ) | ( ( rule__LocalVarDecl__Group_1__0 ) ) | ( ( rule__LocalVarDecl__Group_2__0 ) ) | ( ( rule__LocalVarDecl__Group_3__0 ) ) );
    public final void rule__LocalVarDecl__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2215:1: ( ( ( rule__LocalVarDecl__Group_0__0 ) ) | ( ( rule__LocalVarDecl__Group_1__0 ) ) | ( ( rule__LocalVarDecl__Group_2__0 ) ) | ( ( rule__LocalVarDecl__Group_3__0 ) ) )
            int alt28=4;
            alt28 = dfa28.predict(input);
            switch (alt28) {
                case 1 :
                    // InternalFortXTrans.g:2216:2: ( ( rule__LocalVarDecl__Group_0__0 ) )
                    {
                    // InternalFortXTrans.g:2216:2: ( ( rule__LocalVarDecl__Group_0__0 ) )
                    // InternalFortXTrans.g:2217:3: ( rule__LocalVarDecl__Group_0__0 )
                    {
                     before(grammarAccess.getLocalVarDeclAccess().getGroup_0()); 
                    // InternalFortXTrans.g:2218:3: ( rule__LocalVarDecl__Group_0__0 )
                    // InternalFortXTrans.g:2218:4: rule__LocalVarDecl__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__LocalVarDecl__Group_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getLocalVarDeclAccess().getGroup_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalFortXTrans.g:2222:2: ( ( rule__LocalVarDecl__Group_1__0 ) )
                    {
                    // InternalFortXTrans.g:2222:2: ( ( rule__LocalVarDecl__Group_1__0 ) )
                    // InternalFortXTrans.g:2223:3: ( rule__LocalVarDecl__Group_1__0 )
                    {
                     before(grammarAccess.getLocalVarDeclAccess().getGroup_1()); 
                    // InternalFortXTrans.g:2224:3: ( rule__LocalVarDecl__Group_1__0 )
                    // InternalFortXTrans.g:2224:4: rule__LocalVarDecl__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__LocalVarDecl__Group_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getLocalVarDeclAccess().getGroup_1()); 

                    }


                    }
                    break;
                case 3 :
                    // InternalFortXTrans.g:2228:2: ( ( rule__LocalVarDecl__Group_2__0 ) )
                    {
                    // InternalFortXTrans.g:2228:2: ( ( rule__LocalVarDecl__Group_2__0 ) )
                    // InternalFortXTrans.g:2229:3: ( rule__LocalVarDecl__Group_2__0 )
                    {
                     before(grammarAccess.getLocalVarDeclAccess().getGroup_2()); 
                    // InternalFortXTrans.g:2230:3: ( rule__LocalVarDecl__Group_2__0 )
                    // InternalFortXTrans.g:2230:4: rule__LocalVarDecl__Group_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__LocalVarDecl__Group_2__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getLocalVarDeclAccess().getGroup_2()); 

                    }


                    }
                    break;
                case 4 :
                    // InternalFortXTrans.g:2234:2: ( ( rule__LocalVarDecl__Group_3__0 ) )
                    {
                    // InternalFortXTrans.g:2234:2: ( ( rule__LocalVarDecl__Group_3__0 ) )
                    // InternalFortXTrans.g:2235:3: ( rule__LocalVarDecl__Group_3__0 )
                    {
                     before(grammarAccess.getLocalVarDeclAccess().getGroup_3()); 
                    // InternalFortXTrans.g:2236:3: ( rule__LocalVarDecl__Group_3__0 )
                    // InternalFortXTrans.g:2236:4: rule__LocalVarDecl__Group_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__LocalVarDecl__Group_3__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getLocalVarDeclAccess().getGroup_3()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Alternatives"


    // $ANTLR start "rule__Component__Group__0"
    // InternalFortXTrans.g:2244:1: rule__Component__Group__0 : rule__Component__Group__0__Impl rule__Component__Group__1 ;
    public final void rule__Component__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2248:1: ( rule__Component__Group__0__Impl rule__Component__Group__1 )
            // InternalFortXTrans.g:2249:2: rule__Component__Group__0__Impl rule__Component__Group__1
            {
            pushFollow(FOLLOW_5);
            rule__Component__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Component__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Component__Group__0"


    // $ANTLR start "rule__Component__Group__0__Impl"
    // InternalFortXTrans.g:2256:1: rule__Component__Group__0__Impl : ( 'component' ) ;
    public final void rule__Component__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2260:1: ( ( 'component' ) )
            // InternalFortXTrans.g:2261:1: ( 'component' )
            {
            // InternalFortXTrans.g:2261:1: ( 'component' )
            // InternalFortXTrans.g:2262:2: 'component'
            {
             before(grammarAccess.getComponentAccess().getComponentKeyword_0()); 
            match(input,25,FOLLOW_2); 
             after(grammarAccess.getComponentAccess().getComponentKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Component__Group__0__Impl"


    // $ANTLR start "rule__Component__Group__1"
    // InternalFortXTrans.g:2271:1: rule__Component__Group__1 : rule__Component__Group__1__Impl rule__Component__Group__2 ;
    public final void rule__Component__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2275:1: ( rule__Component__Group__1__Impl rule__Component__Group__2 )
            // InternalFortXTrans.g:2276:2: rule__Component__Group__1__Impl rule__Component__Group__2
            {
            pushFollow(FOLLOW_6);
            rule__Component__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Component__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Component__Group__1"


    // $ANTLR start "rule__Component__Group__1__Impl"
    // InternalFortXTrans.g:2283:1: rule__Component__Group__1__Impl : ( ( rule__Component__NameAssignment_1 ) ) ;
    public final void rule__Component__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2287:1: ( ( ( rule__Component__NameAssignment_1 ) ) )
            // InternalFortXTrans.g:2288:1: ( ( rule__Component__NameAssignment_1 ) )
            {
            // InternalFortXTrans.g:2288:1: ( ( rule__Component__NameAssignment_1 ) )
            // InternalFortXTrans.g:2289:2: ( rule__Component__NameAssignment_1 )
            {
             before(grammarAccess.getComponentAccess().getNameAssignment_1()); 
            // InternalFortXTrans.g:2290:2: ( rule__Component__NameAssignment_1 )
            // InternalFortXTrans.g:2290:3: rule__Component__NameAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__Component__NameAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getComponentAccess().getNameAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Component__Group__1__Impl"


    // $ANTLR start "rule__Component__Group__2"
    // InternalFortXTrans.g:2298:1: rule__Component__Group__2 : rule__Component__Group__2__Impl rule__Component__Group__3 ;
    public final void rule__Component__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2302:1: ( rule__Component__Group__2__Impl rule__Component__Group__3 )
            // InternalFortXTrans.g:2303:2: rule__Component__Group__2__Impl rule__Component__Group__3
            {
            pushFollow(FOLLOW_6);
            rule__Component__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Component__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Component__Group__2"


    // $ANTLR start "rule__Component__Group__2__Impl"
    // InternalFortXTrans.g:2310:1: rule__Component__Group__2__Impl : ( ( rule__Component__ImportsAssignment_2 )* ) ;
    public final void rule__Component__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2314:1: ( ( ( rule__Component__ImportsAssignment_2 )* ) )
            // InternalFortXTrans.g:2315:1: ( ( rule__Component__ImportsAssignment_2 )* )
            {
            // InternalFortXTrans.g:2315:1: ( ( rule__Component__ImportsAssignment_2 )* )
            // InternalFortXTrans.g:2316:2: ( rule__Component__ImportsAssignment_2 )*
            {
             before(grammarAccess.getComponentAccess().getImportsAssignment_2()); 
            // InternalFortXTrans.g:2317:2: ( rule__Component__ImportsAssignment_2 )*
            loop29:
            do {
                int alt29=2;
                int LA29_0 = input.LA(1);

                if ( (LA29_0==54) ) {
                    alt29=1;
                }


                switch (alt29) {
            	case 1 :
            	    // InternalFortXTrans.g:2317:3: rule__Component__ImportsAssignment_2
            	    {
            	    pushFollow(FOLLOW_7);
            	    rule__Component__ImportsAssignment_2();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop29;
                }
            } while (true);

             after(grammarAccess.getComponentAccess().getImportsAssignment_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Component__Group__2__Impl"


    // $ANTLR start "rule__Component__Group__3"
    // InternalFortXTrans.g:2325:1: rule__Component__Group__3 : rule__Component__Group__3__Impl rule__Component__Group__4 ;
    public final void rule__Component__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2329:1: ( rule__Component__Group__3__Impl rule__Component__Group__4 )
            // InternalFortXTrans.g:2330:2: rule__Component__Group__3__Impl rule__Component__Group__4
            {
            pushFollow(FOLLOW_8);
            rule__Component__Group__3__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Component__Group__4();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Component__Group__3"


    // $ANTLR start "rule__Component__Group__3__Impl"
    // InternalFortXTrans.g:2337:1: rule__Component__Group__3__Impl : ( ( ( rule__Component__ExportsAssignment_3 ) ) ( ( rule__Component__ExportsAssignment_3 )* ) ) ;
    public final void rule__Component__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2341:1: ( ( ( ( rule__Component__ExportsAssignment_3 ) ) ( ( rule__Component__ExportsAssignment_3 )* ) ) )
            // InternalFortXTrans.g:2342:1: ( ( ( rule__Component__ExportsAssignment_3 ) ) ( ( rule__Component__ExportsAssignment_3 )* ) )
            {
            // InternalFortXTrans.g:2342:1: ( ( ( rule__Component__ExportsAssignment_3 ) ) ( ( rule__Component__ExportsAssignment_3 )* ) )
            // InternalFortXTrans.g:2343:2: ( ( rule__Component__ExportsAssignment_3 ) ) ( ( rule__Component__ExportsAssignment_3 )* )
            {
            // InternalFortXTrans.g:2343:2: ( ( rule__Component__ExportsAssignment_3 ) )
            // InternalFortXTrans.g:2344:3: ( rule__Component__ExportsAssignment_3 )
            {
             before(grammarAccess.getComponentAccess().getExportsAssignment_3()); 
            // InternalFortXTrans.g:2345:3: ( rule__Component__ExportsAssignment_3 )
            // InternalFortXTrans.g:2345:4: rule__Component__ExportsAssignment_3
            {
            pushFollow(FOLLOW_9);
            rule__Component__ExportsAssignment_3();

            state._fsp--;


            }

             after(grammarAccess.getComponentAccess().getExportsAssignment_3()); 

            }

            // InternalFortXTrans.g:2348:2: ( ( rule__Component__ExportsAssignment_3 )* )
            // InternalFortXTrans.g:2349:3: ( rule__Component__ExportsAssignment_3 )*
            {
             before(grammarAccess.getComponentAccess().getExportsAssignment_3()); 
            // InternalFortXTrans.g:2350:3: ( rule__Component__ExportsAssignment_3 )*
            loop30:
            do {
                int alt30=2;
                int LA30_0 = input.LA(1);

                if ( (LA30_0==55) ) {
                    alt30=1;
                }


                switch (alt30) {
            	case 1 :
            	    // InternalFortXTrans.g:2350:4: rule__Component__ExportsAssignment_3
            	    {
            	    pushFollow(FOLLOW_9);
            	    rule__Component__ExportsAssignment_3();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop30;
                }
            } while (true);

             after(grammarAccess.getComponentAccess().getExportsAssignment_3()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Component__Group__3__Impl"


    // $ANTLR start "rule__Component__Group__4"
    // InternalFortXTrans.g:2359:1: rule__Component__Group__4 : rule__Component__Group__4__Impl rule__Component__Group__5 ;
    public final void rule__Component__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2363:1: ( rule__Component__Group__4__Impl rule__Component__Group__5 )
            // InternalFortXTrans.g:2364:2: rule__Component__Group__4__Impl rule__Component__Group__5
            {
            pushFollow(FOLLOW_8);
            rule__Component__Group__4__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Component__Group__5();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Component__Group__4"


    // $ANTLR start "rule__Component__Group__4__Impl"
    // InternalFortXTrans.g:2371:1: rule__Component__Group__4__Impl : ( ( rule__Component__DeclsAssignment_4 )* ) ;
    public final void rule__Component__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2375:1: ( ( ( rule__Component__DeclsAssignment_4 )* ) )
            // InternalFortXTrans.g:2376:1: ( ( rule__Component__DeclsAssignment_4 )* )
            {
            // InternalFortXTrans.g:2376:1: ( ( rule__Component__DeclsAssignment_4 )* )
            // InternalFortXTrans.g:2377:2: ( rule__Component__DeclsAssignment_4 )*
            {
             before(grammarAccess.getComponentAccess().getDeclsAssignment_4()); 
            // InternalFortXTrans.g:2378:2: ( rule__Component__DeclsAssignment_4 )*
            loop31:
            do {
                int alt31=2;
                int LA31_0 = input.LA(1);

                if ( (LA31_0==RULE_ID||LA31_0==33||(LA31_0>=57 && LA31_0<=60)||LA31_0==68) ) {
                    alt31=1;
                }


                switch (alt31) {
            	case 1 :
            	    // InternalFortXTrans.g:2378:3: rule__Component__DeclsAssignment_4
            	    {
            	    pushFollow(FOLLOW_3);
            	    rule__Component__DeclsAssignment_4();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop31;
                }
            } while (true);

             after(grammarAccess.getComponentAccess().getDeclsAssignment_4()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Component__Group__4__Impl"


    // $ANTLR start "rule__Component__Group__5"
    // InternalFortXTrans.g:2386:1: rule__Component__Group__5 : rule__Component__Group__5__Impl ;
    public final void rule__Component__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2390:1: ( rule__Component__Group__5__Impl )
            // InternalFortXTrans.g:2391:2: rule__Component__Group__5__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Component__Group__5__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Component__Group__5"


    // $ANTLR start "rule__Component__Group__5__Impl"
    // InternalFortXTrans.g:2397:1: rule__Component__Group__5__Impl : ( 'end' ) ;
    public final void rule__Component__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2401:1: ( ( 'end' ) )
            // InternalFortXTrans.g:2402:1: ( 'end' )
            {
            // InternalFortXTrans.g:2402:1: ( 'end' )
            // InternalFortXTrans.g:2403:2: 'end'
            {
             before(grammarAccess.getComponentAccess().getEndKeyword_5()); 
            match(input,26,FOLLOW_2); 
             after(grammarAccess.getComponentAccess().getEndKeyword_5()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Component__Group__5__Impl"


    // $ANTLR start "rule__API__Group__0"
    // InternalFortXTrans.g:2413:1: rule__API__Group__0 : rule__API__Group__0__Impl rule__API__Group__1 ;
    public final void rule__API__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2417:1: ( rule__API__Group__0__Impl rule__API__Group__1 )
            // InternalFortXTrans.g:2418:2: rule__API__Group__0__Impl rule__API__Group__1
            {
            pushFollow(FOLLOW_5);
            rule__API__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__API__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__API__Group__0"


    // $ANTLR start "rule__API__Group__0__Impl"
    // InternalFortXTrans.g:2425:1: rule__API__Group__0__Impl : ( 'api' ) ;
    public final void rule__API__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2429:1: ( ( 'api' ) )
            // InternalFortXTrans.g:2430:1: ( 'api' )
            {
            // InternalFortXTrans.g:2430:1: ( 'api' )
            // InternalFortXTrans.g:2431:2: 'api'
            {
             before(grammarAccess.getAPIAccess().getApiKeyword_0()); 
            match(input,27,FOLLOW_2); 
             after(grammarAccess.getAPIAccess().getApiKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__API__Group__0__Impl"


    // $ANTLR start "rule__API__Group__1"
    // InternalFortXTrans.g:2440:1: rule__API__Group__1 : rule__API__Group__1__Impl rule__API__Group__2 ;
    public final void rule__API__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2444:1: ( rule__API__Group__1__Impl rule__API__Group__2 )
            // InternalFortXTrans.g:2445:2: rule__API__Group__1__Impl rule__API__Group__2
            {
            pushFollow(FOLLOW_10);
            rule__API__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__API__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__API__Group__1"


    // $ANTLR start "rule__API__Group__1__Impl"
    // InternalFortXTrans.g:2452:1: rule__API__Group__1__Impl : ( ( rule__API__NameAssignment_1 ) ) ;
    public final void rule__API__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2456:1: ( ( ( rule__API__NameAssignment_1 ) ) )
            // InternalFortXTrans.g:2457:1: ( ( rule__API__NameAssignment_1 ) )
            {
            // InternalFortXTrans.g:2457:1: ( ( rule__API__NameAssignment_1 ) )
            // InternalFortXTrans.g:2458:2: ( rule__API__NameAssignment_1 )
            {
             before(grammarAccess.getAPIAccess().getNameAssignment_1()); 
            // InternalFortXTrans.g:2459:2: ( rule__API__NameAssignment_1 )
            // InternalFortXTrans.g:2459:3: rule__API__NameAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__API__NameAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getAPIAccess().getNameAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__API__Group__1__Impl"


    // $ANTLR start "rule__API__Group__2"
    // InternalFortXTrans.g:2467:1: rule__API__Group__2 : rule__API__Group__2__Impl rule__API__Group__3 ;
    public final void rule__API__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2471:1: ( rule__API__Group__2__Impl rule__API__Group__3 )
            // InternalFortXTrans.g:2472:2: rule__API__Group__2__Impl rule__API__Group__3
            {
            pushFollow(FOLLOW_10);
            rule__API__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__API__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__API__Group__2"


    // $ANTLR start "rule__API__Group__2__Impl"
    // InternalFortXTrans.g:2479:1: rule__API__Group__2__Impl : ( ( rule__API__ImportsAssignment_2 )* ) ;
    public final void rule__API__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2483:1: ( ( ( rule__API__ImportsAssignment_2 )* ) )
            // InternalFortXTrans.g:2484:1: ( ( rule__API__ImportsAssignment_2 )* )
            {
            // InternalFortXTrans.g:2484:1: ( ( rule__API__ImportsAssignment_2 )* )
            // InternalFortXTrans.g:2485:2: ( rule__API__ImportsAssignment_2 )*
            {
             before(grammarAccess.getAPIAccess().getImportsAssignment_2()); 
            // InternalFortXTrans.g:2486:2: ( rule__API__ImportsAssignment_2 )*
            loop32:
            do {
                int alt32=2;
                int LA32_0 = input.LA(1);

                if ( (LA32_0==54) ) {
                    alt32=1;
                }


                switch (alt32) {
            	case 1 :
            	    // InternalFortXTrans.g:2486:3: rule__API__ImportsAssignment_2
            	    {
            	    pushFollow(FOLLOW_7);
            	    rule__API__ImportsAssignment_2();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop32;
                }
            } while (true);

             after(grammarAccess.getAPIAccess().getImportsAssignment_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__API__Group__2__Impl"


    // $ANTLR start "rule__API__Group__3"
    // InternalFortXTrans.g:2494:1: rule__API__Group__3 : rule__API__Group__3__Impl ;
    public final void rule__API__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2498:1: ( rule__API__Group__3__Impl )
            // InternalFortXTrans.g:2499:2: rule__API__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__API__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__API__Group__3"


    // $ANTLR start "rule__API__Group__3__Impl"
    // InternalFortXTrans.g:2505:1: rule__API__Group__3__Impl : ( 'end' ) ;
    public final void rule__API__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2509:1: ( ( 'end' ) )
            // InternalFortXTrans.g:2510:1: ( 'end' )
            {
            // InternalFortXTrans.g:2510:1: ( 'end' )
            // InternalFortXTrans.g:2511:2: 'end'
            {
             before(grammarAccess.getAPIAccess().getEndKeyword_3()); 
            match(input,26,FOLLOW_2); 
             after(grammarAccess.getAPIAccess().getEndKeyword_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__API__Group__3__Impl"


    // $ANTLR start "rule__Import__Group_0__0"
    // InternalFortXTrans.g:2521:1: rule__Import__Group_0__0 : rule__Import__Group_0__0__Impl rule__Import__Group_0__1 ;
    public final void rule__Import__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2525:1: ( rule__Import__Group_0__0__Impl rule__Import__Group_0__1 )
            // InternalFortXTrans.g:2526:2: rule__Import__Group_0__0__Impl rule__Import__Group_0__1
            {
            pushFollow(FOLLOW_5);
            rule__Import__Group_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Import__Group_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Import__Group_0__0"


    // $ANTLR start "rule__Import__Group_0__0__Impl"
    // InternalFortXTrans.g:2533:1: rule__Import__Group_0__0__Impl : ( ( rule__Import__ImpsAssignment_0_0 ) ) ;
    public final void rule__Import__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2537:1: ( ( ( rule__Import__ImpsAssignment_0_0 ) ) )
            // InternalFortXTrans.g:2538:1: ( ( rule__Import__ImpsAssignment_0_0 ) )
            {
            // InternalFortXTrans.g:2538:1: ( ( rule__Import__ImpsAssignment_0_0 ) )
            // InternalFortXTrans.g:2539:2: ( rule__Import__ImpsAssignment_0_0 )
            {
             before(grammarAccess.getImportAccess().getImpsAssignment_0_0()); 
            // InternalFortXTrans.g:2540:2: ( rule__Import__ImpsAssignment_0_0 )
            // InternalFortXTrans.g:2540:3: rule__Import__ImpsAssignment_0_0
            {
            pushFollow(FOLLOW_2);
            rule__Import__ImpsAssignment_0_0();

            state._fsp--;


            }

             after(grammarAccess.getImportAccess().getImpsAssignment_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Import__Group_0__0__Impl"


    // $ANTLR start "rule__Import__Group_0__1"
    // InternalFortXTrans.g:2548:1: rule__Import__Group_0__1 : rule__Import__Group_0__1__Impl ;
    public final void rule__Import__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2552:1: ( rule__Import__Group_0__1__Impl )
            // InternalFortXTrans.g:2553:2: rule__Import__Group_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Import__Group_0__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Import__Group_0__1"


    // $ANTLR start "rule__Import__Group_0__1__Impl"
    // InternalFortXTrans.g:2559:1: rule__Import__Group_0__1__Impl : ( ( rule__Import__ImportedNamesAssignment_0_1 ) ) ;
    public final void rule__Import__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2563:1: ( ( ( rule__Import__ImportedNamesAssignment_0_1 ) ) )
            // InternalFortXTrans.g:2564:1: ( ( rule__Import__ImportedNamesAssignment_0_1 ) )
            {
            // InternalFortXTrans.g:2564:1: ( ( rule__Import__ImportedNamesAssignment_0_1 ) )
            // InternalFortXTrans.g:2565:2: ( rule__Import__ImportedNamesAssignment_0_1 )
            {
             before(grammarAccess.getImportAccess().getImportedNamesAssignment_0_1()); 
            // InternalFortXTrans.g:2566:2: ( rule__Import__ImportedNamesAssignment_0_1 )
            // InternalFortXTrans.g:2566:3: rule__Import__ImportedNamesAssignment_0_1
            {
            pushFollow(FOLLOW_2);
            rule__Import__ImportedNamesAssignment_0_1();

            state._fsp--;


            }

             after(grammarAccess.getImportAccess().getImportedNamesAssignment_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Import__Group_0__1__Impl"


    // $ANTLR start "rule__Import__Group_1__0"
    // InternalFortXTrans.g:2575:1: rule__Import__Group_1__0 : rule__Import__Group_1__0__Impl rule__Import__Group_1__1 ;
    public final void rule__Import__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2579:1: ( rule__Import__Group_1__0__Impl rule__Import__Group_1__1 )
            // InternalFortXTrans.g:2580:2: rule__Import__Group_1__0__Impl rule__Import__Group_1__1
            {
            pushFollow(FOLLOW_11);
            rule__Import__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Import__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Import__Group_1__0"


    // $ANTLR start "rule__Import__Group_1__0__Impl"
    // InternalFortXTrans.g:2587:1: rule__Import__Group_1__0__Impl : ( ( rule__Import__ImpsAssignment_1_0 ) ) ;
    public final void rule__Import__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2591:1: ( ( ( rule__Import__ImpsAssignment_1_0 ) ) )
            // InternalFortXTrans.g:2592:1: ( ( rule__Import__ImpsAssignment_1_0 ) )
            {
            // InternalFortXTrans.g:2592:1: ( ( rule__Import__ImpsAssignment_1_0 ) )
            // InternalFortXTrans.g:2593:2: ( rule__Import__ImpsAssignment_1_0 )
            {
             before(grammarAccess.getImportAccess().getImpsAssignment_1_0()); 
            // InternalFortXTrans.g:2594:2: ( rule__Import__ImpsAssignment_1_0 )
            // InternalFortXTrans.g:2594:3: rule__Import__ImpsAssignment_1_0
            {
            pushFollow(FOLLOW_2);
            rule__Import__ImpsAssignment_1_0();

            state._fsp--;


            }

             after(grammarAccess.getImportAccess().getImpsAssignment_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Import__Group_1__0__Impl"


    // $ANTLR start "rule__Import__Group_1__1"
    // InternalFortXTrans.g:2602:1: rule__Import__Group_1__1 : rule__Import__Group_1__1__Impl rule__Import__Group_1__2 ;
    public final void rule__Import__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2606:1: ( rule__Import__Group_1__1__Impl rule__Import__Group_1__2 )
            // InternalFortXTrans.g:2607:2: rule__Import__Group_1__1__Impl rule__Import__Group_1__2
            {
            pushFollow(FOLLOW_12);
            rule__Import__Group_1__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Import__Group_1__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Import__Group_1__1"


    // $ANTLR start "rule__Import__Group_1__1__Impl"
    // InternalFortXTrans.g:2614:1: rule__Import__Group_1__1__Impl : ( ( rule__Import__ApiAssignment_1_1 ) ) ;
    public final void rule__Import__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2618:1: ( ( ( rule__Import__ApiAssignment_1_1 ) ) )
            // InternalFortXTrans.g:2619:1: ( ( rule__Import__ApiAssignment_1_1 ) )
            {
            // InternalFortXTrans.g:2619:1: ( ( rule__Import__ApiAssignment_1_1 ) )
            // InternalFortXTrans.g:2620:2: ( rule__Import__ApiAssignment_1_1 )
            {
             before(grammarAccess.getImportAccess().getApiAssignment_1_1()); 
            // InternalFortXTrans.g:2621:2: ( rule__Import__ApiAssignment_1_1 )
            // InternalFortXTrans.g:2621:3: rule__Import__ApiAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Import__ApiAssignment_1_1();

            state._fsp--;


            }

             after(grammarAccess.getImportAccess().getApiAssignment_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Import__Group_1__1__Impl"


    // $ANTLR start "rule__Import__Group_1__2"
    // InternalFortXTrans.g:2629:1: rule__Import__Group_1__2 : rule__Import__Group_1__2__Impl ;
    public final void rule__Import__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2633:1: ( rule__Import__Group_1__2__Impl )
            // InternalFortXTrans.g:2634:2: rule__Import__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Import__Group_1__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Import__Group_1__2"


    // $ANTLR start "rule__Import__Group_1__2__Impl"
    // InternalFortXTrans.g:2640:1: rule__Import__Group_1__2__Impl : ( ( rule__Import__AliasedimportedNamesAssignment_1_2 ) ) ;
    public final void rule__Import__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2644:1: ( ( ( rule__Import__AliasedimportedNamesAssignment_1_2 ) ) )
            // InternalFortXTrans.g:2645:1: ( ( rule__Import__AliasedimportedNamesAssignment_1_2 ) )
            {
            // InternalFortXTrans.g:2645:1: ( ( rule__Import__AliasedimportedNamesAssignment_1_2 ) )
            // InternalFortXTrans.g:2646:2: ( rule__Import__AliasedimportedNamesAssignment_1_2 )
            {
             before(grammarAccess.getImportAccess().getAliasedimportedNamesAssignment_1_2()); 
            // InternalFortXTrans.g:2647:2: ( rule__Import__AliasedimportedNamesAssignment_1_2 )
            // InternalFortXTrans.g:2647:3: rule__Import__AliasedimportedNamesAssignment_1_2
            {
            pushFollow(FOLLOW_2);
            rule__Import__AliasedimportedNamesAssignment_1_2();

            state._fsp--;


            }

             after(grammarAccess.getImportAccess().getAliasedimportedNamesAssignment_1_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Import__Group_1__2__Impl"


    // $ANTLR start "rule__Export__Group_0__0"
    // InternalFortXTrans.g:2656:1: rule__Export__Group_0__0 : rule__Export__Group_0__0__Impl rule__Export__Group_0__1 ;
    public final void rule__Export__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2660:1: ( rule__Export__Group_0__0__Impl rule__Export__Group_0__1 )
            // InternalFortXTrans.g:2661:2: rule__Export__Group_0__0__Impl rule__Export__Group_0__1
            {
            pushFollow(FOLLOW_5);
            rule__Export__Group_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Export__Group_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Export__Group_0__0"


    // $ANTLR start "rule__Export__Group_0__0__Impl"
    // InternalFortXTrans.g:2668:1: rule__Export__Group_0__0__Impl : ( ( rule__Export__ExpAssignment_0_0 ) ) ;
    public final void rule__Export__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2672:1: ( ( ( rule__Export__ExpAssignment_0_0 ) ) )
            // InternalFortXTrans.g:2673:1: ( ( rule__Export__ExpAssignment_0_0 ) )
            {
            // InternalFortXTrans.g:2673:1: ( ( rule__Export__ExpAssignment_0_0 ) )
            // InternalFortXTrans.g:2674:2: ( rule__Export__ExpAssignment_0_0 )
            {
             before(grammarAccess.getExportAccess().getExpAssignment_0_0()); 
            // InternalFortXTrans.g:2675:2: ( rule__Export__ExpAssignment_0_0 )
            // InternalFortXTrans.g:2675:3: rule__Export__ExpAssignment_0_0
            {
            pushFollow(FOLLOW_2);
            rule__Export__ExpAssignment_0_0();

            state._fsp--;


            }

             after(grammarAccess.getExportAccess().getExpAssignment_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Export__Group_0__0__Impl"


    // $ANTLR start "rule__Export__Group_0__1"
    // InternalFortXTrans.g:2683:1: rule__Export__Group_0__1 : rule__Export__Group_0__1__Impl ;
    public final void rule__Export__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2687:1: ( rule__Export__Group_0__1__Impl )
            // InternalFortXTrans.g:2688:2: rule__Export__Group_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Export__Group_0__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Export__Group_0__1"


    // $ANTLR start "rule__Export__Group_0__1__Impl"
    // InternalFortXTrans.g:2694:1: rule__Export__Group_0__1__Impl : ( ( rule__Export__ExportedNameAssignment_0_1 ) ) ;
    public final void rule__Export__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2698:1: ( ( ( rule__Export__ExportedNameAssignment_0_1 ) ) )
            // InternalFortXTrans.g:2699:1: ( ( rule__Export__ExportedNameAssignment_0_1 ) )
            {
            // InternalFortXTrans.g:2699:1: ( ( rule__Export__ExportedNameAssignment_0_1 ) )
            // InternalFortXTrans.g:2700:2: ( rule__Export__ExportedNameAssignment_0_1 )
            {
             before(grammarAccess.getExportAccess().getExportedNameAssignment_0_1()); 
            // InternalFortXTrans.g:2701:2: ( rule__Export__ExportedNameAssignment_0_1 )
            // InternalFortXTrans.g:2701:3: rule__Export__ExportedNameAssignment_0_1
            {
            pushFollow(FOLLOW_2);
            rule__Export__ExportedNameAssignment_0_1();

            state._fsp--;


            }

             after(grammarAccess.getExportAccess().getExportedNameAssignment_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Export__Group_0__1__Impl"


    // $ANTLR start "rule__Export__Group_1__0"
    // InternalFortXTrans.g:2710:1: rule__Export__Group_1__0 : rule__Export__Group_1__0__Impl rule__Export__Group_1__1 ;
    public final void rule__Export__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2714:1: ( rule__Export__Group_1__0__Impl rule__Export__Group_1__1 )
            // InternalFortXTrans.g:2715:2: rule__Export__Group_1__0__Impl rule__Export__Group_1__1
            {
            pushFollow(FOLLOW_13);
            rule__Export__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Export__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Export__Group_1__0"


    // $ANTLR start "rule__Export__Group_1__0__Impl"
    // InternalFortXTrans.g:2722:1: rule__Export__Group_1__0__Impl : ( ( rule__Export__ExpAssignment_1_0 ) ) ;
    public final void rule__Export__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2726:1: ( ( ( rule__Export__ExpAssignment_1_0 ) ) )
            // InternalFortXTrans.g:2727:1: ( ( rule__Export__ExpAssignment_1_0 ) )
            {
            // InternalFortXTrans.g:2727:1: ( ( rule__Export__ExpAssignment_1_0 ) )
            // InternalFortXTrans.g:2728:2: ( rule__Export__ExpAssignment_1_0 )
            {
             before(grammarAccess.getExportAccess().getExpAssignment_1_0()); 
            // InternalFortXTrans.g:2729:2: ( rule__Export__ExpAssignment_1_0 )
            // InternalFortXTrans.g:2729:3: rule__Export__ExpAssignment_1_0
            {
            pushFollow(FOLLOW_2);
            rule__Export__ExpAssignment_1_0();

            state._fsp--;


            }

             after(grammarAccess.getExportAccess().getExpAssignment_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Export__Group_1__0__Impl"


    // $ANTLR start "rule__Export__Group_1__1"
    // InternalFortXTrans.g:2737:1: rule__Export__Group_1__1 : rule__Export__Group_1__1__Impl rule__Export__Group_1__2 ;
    public final void rule__Export__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2741:1: ( rule__Export__Group_1__1__Impl rule__Export__Group_1__2 )
            // InternalFortXTrans.g:2742:2: rule__Export__Group_1__1__Impl rule__Export__Group_1__2
            {
            pushFollow(FOLLOW_5);
            rule__Export__Group_1__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Export__Group_1__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Export__Group_1__1"


    // $ANTLR start "rule__Export__Group_1__1__Impl"
    // InternalFortXTrans.g:2749:1: rule__Export__Group_1__1__Impl : ( ( rule__Export__BrackAssignment_1_1 ) ) ;
    public final void rule__Export__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2753:1: ( ( ( rule__Export__BrackAssignment_1_1 ) ) )
            // InternalFortXTrans.g:2754:1: ( ( rule__Export__BrackAssignment_1_1 ) )
            {
            // InternalFortXTrans.g:2754:1: ( ( rule__Export__BrackAssignment_1_1 ) )
            // InternalFortXTrans.g:2755:2: ( rule__Export__BrackAssignment_1_1 )
            {
             before(grammarAccess.getExportAccess().getBrackAssignment_1_1()); 
            // InternalFortXTrans.g:2756:2: ( rule__Export__BrackAssignment_1_1 )
            // InternalFortXTrans.g:2756:3: rule__Export__BrackAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Export__BrackAssignment_1_1();

            state._fsp--;


            }

             after(grammarAccess.getExportAccess().getBrackAssignment_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Export__Group_1__1__Impl"


    // $ANTLR start "rule__Export__Group_1__2"
    // InternalFortXTrans.g:2764:1: rule__Export__Group_1__2 : rule__Export__Group_1__2__Impl rule__Export__Group_1__3 ;
    public final void rule__Export__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2768:1: ( rule__Export__Group_1__2__Impl rule__Export__Group_1__3 )
            // InternalFortXTrans.g:2769:2: rule__Export__Group_1__2__Impl rule__Export__Group_1__3
            {
            pushFollow(FOLLOW_14);
            rule__Export__Group_1__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Export__Group_1__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Export__Group_1__2"


    // $ANTLR start "rule__Export__Group_1__2__Impl"
    // InternalFortXTrans.g:2776:1: rule__Export__Group_1__2__Impl : ( ( rule__Export__ExportedNameAssignment_1_2 ) ) ;
    public final void rule__Export__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2780:1: ( ( ( rule__Export__ExportedNameAssignment_1_2 ) ) )
            // InternalFortXTrans.g:2781:1: ( ( rule__Export__ExportedNameAssignment_1_2 ) )
            {
            // InternalFortXTrans.g:2781:1: ( ( rule__Export__ExportedNameAssignment_1_2 ) )
            // InternalFortXTrans.g:2782:2: ( rule__Export__ExportedNameAssignment_1_2 )
            {
             before(grammarAccess.getExportAccess().getExportedNameAssignment_1_2()); 
            // InternalFortXTrans.g:2783:2: ( rule__Export__ExportedNameAssignment_1_2 )
            // InternalFortXTrans.g:2783:3: rule__Export__ExportedNameAssignment_1_2
            {
            pushFollow(FOLLOW_2);
            rule__Export__ExportedNameAssignment_1_2();

            state._fsp--;


            }

             after(grammarAccess.getExportAccess().getExportedNameAssignment_1_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Export__Group_1__2__Impl"


    // $ANTLR start "rule__Export__Group_1__3"
    // InternalFortXTrans.g:2791:1: rule__Export__Group_1__3 : rule__Export__Group_1__3__Impl rule__Export__Group_1__4 ;
    public final void rule__Export__Group_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2795:1: ( rule__Export__Group_1__3__Impl rule__Export__Group_1__4 )
            // InternalFortXTrans.g:2796:2: rule__Export__Group_1__3__Impl rule__Export__Group_1__4
            {
            pushFollow(FOLLOW_14);
            rule__Export__Group_1__3__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Export__Group_1__4();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Export__Group_1__3"


    // $ANTLR start "rule__Export__Group_1__3__Impl"
    // InternalFortXTrans.g:2803:1: rule__Export__Group_1__3__Impl : ( ( rule__Export__Group_1_3__0 )* ) ;
    public final void rule__Export__Group_1__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2807:1: ( ( ( rule__Export__Group_1_3__0 )* ) )
            // InternalFortXTrans.g:2808:1: ( ( rule__Export__Group_1_3__0 )* )
            {
            // InternalFortXTrans.g:2808:1: ( ( rule__Export__Group_1_3__0 )* )
            // InternalFortXTrans.g:2809:2: ( rule__Export__Group_1_3__0 )*
            {
             before(grammarAccess.getExportAccess().getGroup_1_3()); 
            // InternalFortXTrans.g:2810:2: ( rule__Export__Group_1_3__0 )*
            loop33:
            do {
                int alt33=2;
                int LA33_0 = input.LA(1);

                if ( (LA33_0==29) ) {
                    alt33=1;
                }


                switch (alt33) {
            	case 1 :
            	    // InternalFortXTrans.g:2810:3: rule__Export__Group_1_3__0
            	    {
            	    pushFollow(FOLLOW_15);
            	    rule__Export__Group_1_3__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop33;
                }
            } while (true);

             after(grammarAccess.getExportAccess().getGroup_1_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Export__Group_1__3__Impl"


    // $ANTLR start "rule__Export__Group_1__4"
    // InternalFortXTrans.g:2818:1: rule__Export__Group_1__4 : rule__Export__Group_1__4__Impl ;
    public final void rule__Export__Group_1__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2822:1: ( rule__Export__Group_1__4__Impl )
            // InternalFortXTrans.g:2823:2: rule__Export__Group_1__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Export__Group_1__4__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Export__Group_1__4"


    // $ANTLR start "rule__Export__Group_1__4__Impl"
    // InternalFortXTrans.g:2829:1: rule__Export__Group_1__4__Impl : ( '}' ) ;
    public final void rule__Export__Group_1__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2833:1: ( ( '}' ) )
            // InternalFortXTrans.g:2834:1: ( '}' )
            {
            // InternalFortXTrans.g:2834:1: ( '}' )
            // InternalFortXTrans.g:2835:2: '}'
            {
             before(grammarAccess.getExportAccess().getRightCurlyBracketKeyword_1_4()); 
            match(input,28,FOLLOW_2); 
             after(grammarAccess.getExportAccess().getRightCurlyBracketKeyword_1_4()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Export__Group_1__4__Impl"


    // $ANTLR start "rule__Export__Group_1_3__0"
    // InternalFortXTrans.g:2845:1: rule__Export__Group_1_3__0 : rule__Export__Group_1_3__0__Impl rule__Export__Group_1_3__1 ;
    public final void rule__Export__Group_1_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2849:1: ( rule__Export__Group_1_3__0__Impl rule__Export__Group_1_3__1 )
            // InternalFortXTrans.g:2850:2: rule__Export__Group_1_3__0__Impl rule__Export__Group_1_3__1
            {
            pushFollow(FOLLOW_5);
            rule__Export__Group_1_3__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Export__Group_1_3__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Export__Group_1_3__0"


    // $ANTLR start "rule__Export__Group_1_3__0__Impl"
    // InternalFortXTrans.g:2857:1: rule__Export__Group_1_3__0__Impl : ( ',' ) ;
    public final void rule__Export__Group_1_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2861:1: ( ( ',' ) )
            // InternalFortXTrans.g:2862:1: ( ',' )
            {
            // InternalFortXTrans.g:2862:1: ( ',' )
            // InternalFortXTrans.g:2863:2: ','
            {
             before(grammarAccess.getExportAccess().getCommaKeyword_1_3_0()); 
            match(input,29,FOLLOW_2); 
             after(grammarAccess.getExportAccess().getCommaKeyword_1_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Export__Group_1_3__0__Impl"


    // $ANTLR start "rule__Export__Group_1_3__1"
    // InternalFortXTrans.g:2872:1: rule__Export__Group_1_3__1 : rule__Export__Group_1_3__1__Impl ;
    public final void rule__Export__Group_1_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2876:1: ( rule__Export__Group_1_3__1__Impl )
            // InternalFortXTrans.g:2877:2: rule__Export__Group_1_3__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Export__Group_1_3__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Export__Group_1_3__1"


    // $ANTLR start "rule__Export__Group_1_3__1__Impl"
    // InternalFortXTrans.g:2883:1: rule__Export__Group_1_3__1__Impl : ( ( rule__Export__ExportedNameAssignment_1_3_1 ) ) ;
    public final void rule__Export__Group_1_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2887:1: ( ( ( rule__Export__ExportedNameAssignment_1_3_1 ) ) )
            // InternalFortXTrans.g:2888:1: ( ( rule__Export__ExportedNameAssignment_1_3_1 ) )
            {
            // InternalFortXTrans.g:2888:1: ( ( rule__Export__ExportedNameAssignment_1_3_1 ) )
            // InternalFortXTrans.g:2889:2: ( rule__Export__ExportedNameAssignment_1_3_1 )
            {
             before(grammarAccess.getExportAccess().getExportedNameAssignment_1_3_1()); 
            // InternalFortXTrans.g:2890:2: ( rule__Export__ExportedNameAssignment_1_3_1 )
            // InternalFortXTrans.g:2890:3: rule__Export__ExportedNameAssignment_1_3_1
            {
            pushFollow(FOLLOW_2);
            rule__Export__ExportedNameAssignment_1_3_1();

            state._fsp--;


            }

             after(grammarAccess.getExportAccess().getExportedNameAssignment_1_3_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Export__Group_1_3__1__Impl"


    // $ANTLR start "rule__ImportedNames__Group_0__0"
    // InternalFortXTrans.g:2899:1: rule__ImportedNames__Group_0__0 : rule__ImportedNames__Group_0__0__Impl rule__ImportedNames__Group_0__1 ;
    public final void rule__ImportedNames__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2903:1: ( rule__ImportedNames__Group_0__0__Impl rule__ImportedNames__Group_0__1 )
            // InternalFortXTrans.g:2904:2: rule__ImportedNames__Group_0__0__Impl rule__ImportedNames__Group_0__1
            {
            pushFollow(FOLLOW_16);
            rule__ImportedNames__Group_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ImportedNames__Group_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_0__0"


    // $ANTLR start "rule__ImportedNames__Group_0__0__Impl"
    // InternalFortXTrans.g:2911:1: rule__ImportedNames__Group_0__0__Impl : ( ( rule__ImportedNames__ImpnameAssignment_0_0 ) ) ;
    public final void rule__ImportedNames__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2915:1: ( ( ( rule__ImportedNames__ImpnameAssignment_0_0 ) ) )
            // InternalFortXTrans.g:2916:1: ( ( rule__ImportedNames__ImpnameAssignment_0_0 ) )
            {
            // InternalFortXTrans.g:2916:1: ( ( rule__ImportedNames__ImpnameAssignment_0_0 ) )
            // InternalFortXTrans.g:2917:2: ( rule__ImportedNames__ImpnameAssignment_0_0 )
            {
             before(grammarAccess.getImportedNamesAccess().getImpnameAssignment_0_0()); 
            // InternalFortXTrans.g:2918:2: ( rule__ImportedNames__ImpnameAssignment_0_0 )
            // InternalFortXTrans.g:2918:3: rule__ImportedNames__ImpnameAssignment_0_0
            {
            pushFollow(FOLLOW_2);
            rule__ImportedNames__ImpnameAssignment_0_0();

            state._fsp--;


            }

             after(grammarAccess.getImportedNamesAccess().getImpnameAssignment_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_0__0__Impl"


    // $ANTLR start "rule__ImportedNames__Group_0__1"
    // InternalFortXTrans.g:2926:1: rule__ImportedNames__Group_0__1 : rule__ImportedNames__Group_0__1__Impl rule__ImportedNames__Group_0__2 ;
    public final void rule__ImportedNames__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2930:1: ( rule__ImportedNames__Group_0__1__Impl rule__ImportedNames__Group_0__2 )
            // InternalFortXTrans.g:2931:2: rule__ImportedNames__Group_0__1__Impl rule__ImportedNames__Group_0__2
            {
            pushFollow(FOLLOW_13);
            rule__ImportedNames__Group_0__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ImportedNames__Group_0__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_0__1"


    // $ANTLR start "rule__ImportedNames__Group_0__1__Impl"
    // InternalFortXTrans.g:2938:1: rule__ImportedNames__Group_0__1__Impl : ( '.' ) ;
    public final void rule__ImportedNames__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2942:1: ( ( '.' ) )
            // InternalFortXTrans.g:2943:1: ( '.' )
            {
            // InternalFortXTrans.g:2943:1: ( '.' )
            // InternalFortXTrans.g:2944:2: '.'
            {
             before(grammarAccess.getImportedNamesAccess().getFullStopKeyword_0_1()); 
            match(input,30,FOLLOW_2); 
             after(grammarAccess.getImportedNamesAccess().getFullStopKeyword_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_0__1__Impl"


    // $ANTLR start "rule__ImportedNames__Group_0__2"
    // InternalFortXTrans.g:2953:1: rule__ImportedNames__Group_0__2 : rule__ImportedNames__Group_0__2__Impl rule__ImportedNames__Group_0__3 ;
    public final void rule__ImportedNames__Group_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2957:1: ( rule__ImportedNames__Group_0__2__Impl rule__ImportedNames__Group_0__3 )
            // InternalFortXTrans.g:2958:2: rule__ImportedNames__Group_0__2__Impl rule__ImportedNames__Group_0__3
            {
            pushFollow(FOLLOW_17);
            rule__ImportedNames__Group_0__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ImportedNames__Group_0__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_0__2"


    // $ANTLR start "rule__ImportedNames__Group_0__2__Impl"
    // InternalFortXTrans.g:2965:1: rule__ImportedNames__Group_0__2__Impl : ( '{' ) ;
    public final void rule__ImportedNames__Group_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2969:1: ( ( '{' ) )
            // InternalFortXTrans.g:2970:1: ( '{' )
            {
            // InternalFortXTrans.g:2970:1: ( '{' )
            // InternalFortXTrans.g:2971:2: '{'
            {
             before(grammarAccess.getImportedNamesAccess().getLeftCurlyBracketKeyword_0_2()); 
            match(input,31,FOLLOW_2); 
             after(grammarAccess.getImportedNamesAccess().getLeftCurlyBracketKeyword_0_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_0__2__Impl"


    // $ANTLR start "rule__ImportedNames__Group_0__3"
    // InternalFortXTrans.g:2980:1: rule__ImportedNames__Group_0__3 : rule__ImportedNames__Group_0__3__Impl rule__ImportedNames__Group_0__4 ;
    public final void rule__ImportedNames__Group_0__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2984:1: ( rule__ImportedNames__Group_0__3__Impl rule__ImportedNames__Group_0__4 )
            // InternalFortXTrans.g:2985:2: rule__ImportedNames__Group_0__3__Impl rule__ImportedNames__Group_0__4
            {
            pushFollow(FOLLOW_18);
            rule__ImportedNames__Group_0__3__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ImportedNames__Group_0__4();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_0__3"


    // $ANTLR start "rule__ImportedNames__Group_0__3__Impl"
    // InternalFortXTrans.g:2992:1: rule__ImportedNames__Group_0__3__Impl : ( RULE_DOTS ) ;
    public final void rule__ImportedNames__Group_0__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2996:1: ( ( RULE_DOTS ) )
            // InternalFortXTrans.g:2997:1: ( RULE_DOTS )
            {
            // InternalFortXTrans.g:2997:1: ( RULE_DOTS )
            // InternalFortXTrans.g:2998:2: RULE_DOTS
            {
             before(grammarAccess.getImportedNamesAccess().getDOTSTerminalRuleCall_0_3()); 
            match(input,RULE_DOTS,FOLLOW_2); 
             after(grammarAccess.getImportedNamesAccess().getDOTSTerminalRuleCall_0_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_0__3__Impl"


    // $ANTLR start "rule__ImportedNames__Group_0__4"
    // InternalFortXTrans.g:3007:1: rule__ImportedNames__Group_0__4 : rule__ImportedNames__Group_0__4__Impl rule__ImportedNames__Group_0__5 ;
    public final void rule__ImportedNames__Group_0__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3011:1: ( rule__ImportedNames__Group_0__4__Impl rule__ImportedNames__Group_0__5 )
            // InternalFortXTrans.g:3012:2: rule__ImportedNames__Group_0__4__Impl rule__ImportedNames__Group_0__5
            {
            pushFollow(FOLLOW_19);
            rule__ImportedNames__Group_0__4__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ImportedNames__Group_0__5();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_0__4"


    // $ANTLR start "rule__ImportedNames__Group_0__4__Impl"
    // InternalFortXTrans.g:3019:1: rule__ImportedNames__Group_0__4__Impl : ( '}' ) ;
    public final void rule__ImportedNames__Group_0__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3023:1: ( ( '}' ) )
            // InternalFortXTrans.g:3024:1: ( '}' )
            {
            // InternalFortXTrans.g:3024:1: ( '}' )
            // InternalFortXTrans.g:3025:2: '}'
            {
             before(grammarAccess.getImportedNamesAccess().getRightCurlyBracketKeyword_0_4()); 
            match(input,28,FOLLOW_2); 
             after(grammarAccess.getImportedNamesAccess().getRightCurlyBracketKeyword_0_4()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_0__4__Impl"


    // $ANTLR start "rule__ImportedNames__Group_0__5"
    // InternalFortXTrans.g:3034:1: rule__ImportedNames__Group_0__5 : rule__ImportedNames__Group_0__5__Impl ;
    public final void rule__ImportedNames__Group_0__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3038:1: ( rule__ImportedNames__Group_0__5__Impl )
            // InternalFortXTrans.g:3039:2: rule__ImportedNames__Group_0__5__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ImportedNames__Group_0__5__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_0__5"


    // $ANTLR start "rule__ImportedNames__Group_0__5__Impl"
    // InternalFortXTrans.g:3045:1: rule__ImportedNames__Group_0__5__Impl : ( ( rule__ImportedNames__Group_0_5__0 )? ) ;
    public final void rule__ImportedNames__Group_0__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3049:1: ( ( ( rule__ImportedNames__Group_0_5__0 )? ) )
            // InternalFortXTrans.g:3050:1: ( ( rule__ImportedNames__Group_0_5__0 )? )
            {
            // InternalFortXTrans.g:3050:1: ( ( rule__ImportedNames__Group_0_5__0 )? )
            // InternalFortXTrans.g:3051:2: ( rule__ImportedNames__Group_0_5__0 )?
            {
             before(grammarAccess.getImportedNamesAccess().getGroup_0_5()); 
            // InternalFortXTrans.g:3052:2: ( rule__ImportedNames__Group_0_5__0 )?
            int alt34=2;
            int LA34_0 = input.LA(1);

            if ( (LA34_0==56) ) {
                alt34=1;
            }
            switch (alt34) {
                case 1 :
                    // InternalFortXTrans.g:3052:3: rule__ImportedNames__Group_0_5__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ImportedNames__Group_0_5__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getImportedNamesAccess().getGroup_0_5()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_0__5__Impl"


    // $ANTLR start "rule__ImportedNames__Group_0_5__0"
    // InternalFortXTrans.g:3061:1: rule__ImportedNames__Group_0_5__0 : rule__ImportedNames__Group_0_5__0__Impl rule__ImportedNames__Group_0_5__1 ;
    public final void rule__ImportedNames__Group_0_5__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3065:1: ( rule__ImportedNames__Group_0_5__0__Impl rule__ImportedNames__Group_0_5__1 )
            // InternalFortXTrans.g:3066:2: rule__ImportedNames__Group_0_5__0__Impl rule__ImportedNames__Group_0_5__1
            {
            pushFollow(FOLLOW_12);
            rule__ImportedNames__Group_0_5__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ImportedNames__Group_0_5__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_0_5__0"


    // $ANTLR start "rule__ImportedNames__Group_0_5__0__Impl"
    // InternalFortXTrans.g:3073:1: rule__ImportedNames__Group_0_5__0__Impl : ( ( rule__ImportedNames__ExceptAssignment_0_5_0 ) ) ;
    public final void rule__ImportedNames__Group_0_5__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3077:1: ( ( ( rule__ImportedNames__ExceptAssignment_0_5_0 ) ) )
            // InternalFortXTrans.g:3078:1: ( ( rule__ImportedNames__ExceptAssignment_0_5_0 ) )
            {
            // InternalFortXTrans.g:3078:1: ( ( rule__ImportedNames__ExceptAssignment_0_5_0 ) )
            // InternalFortXTrans.g:3079:2: ( rule__ImportedNames__ExceptAssignment_0_5_0 )
            {
             before(grammarAccess.getImportedNamesAccess().getExceptAssignment_0_5_0()); 
            // InternalFortXTrans.g:3080:2: ( rule__ImportedNames__ExceptAssignment_0_5_0 )
            // InternalFortXTrans.g:3080:3: rule__ImportedNames__ExceptAssignment_0_5_0
            {
            pushFollow(FOLLOW_2);
            rule__ImportedNames__ExceptAssignment_0_5_0();

            state._fsp--;


            }

             after(grammarAccess.getImportedNamesAccess().getExceptAssignment_0_5_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_0_5__0__Impl"


    // $ANTLR start "rule__ImportedNames__Group_0_5__1"
    // InternalFortXTrans.g:3088:1: rule__ImportedNames__Group_0_5__1 : rule__ImportedNames__Group_0_5__1__Impl ;
    public final void rule__ImportedNames__Group_0_5__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3092:1: ( rule__ImportedNames__Group_0_5__1__Impl )
            // InternalFortXTrans.g:3093:2: rule__ImportedNames__Group_0_5__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ImportedNames__Group_0_5__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_0_5__1"


    // $ANTLR start "rule__ImportedNames__Group_0_5__1__Impl"
    // InternalFortXTrans.g:3099:1: rule__ImportedNames__Group_0_5__1__Impl : ( ( rule__ImportedNames__SimpAssignment_0_5_1 ) ) ;
    public final void rule__ImportedNames__Group_0_5__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3103:1: ( ( ( rule__ImportedNames__SimpAssignment_0_5_1 ) ) )
            // InternalFortXTrans.g:3104:1: ( ( rule__ImportedNames__SimpAssignment_0_5_1 ) )
            {
            // InternalFortXTrans.g:3104:1: ( ( rule__ImportedNames__SimpAssignment_0_5_1 ) )
            // InternalFortXTrans.g:3105:2: ( rule__ImportedNames__SimpAssignment_0_5_1 )
            {
             before(grammarAccess.getImportedNamesAccess().getSimpAssignment_0_5_1()); 
            // InternalFortXTrans.g:3106:2: ( rule__ImportedNames__SimpAssignment_0_5_1 )
            // InternalFortXTrans.g:3106:3: rule__ImportedNames__SimpAssignment_0_5_1
            {
            pushFollow(FOLLOW_2);
            rule__ImportedNames__SimpAssignment_0_5_1();

            state._fsp--;


            }

             after(grammarAccess.getImportedNamesAccess().getSimpAssignment_0_5_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_0_5__1__Impl"


    // $ANTLR start "rule__ImportedNames__Group_1__0"
    // InternalFortXTrans.g:3115:1: rule__ImportedNames__Group_1__0 : rule__ImportedNames__Group_1__0__Impl rule__ImportedNames__Group_1__1 ;
    public final void rule__ImportedNames__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3119:1: ( rule__ImportedNames__Group_1__0__Impl rule__ImportedNames__Group_1__1 )
            // InternalFortXTrans.g:3120:2: rule__ImportedNames__Group_1__0__Impl rule__ImportedNames__Group_1__1
            {
            pushFollow(FOLLOW_16);
            rule__ImportedNames__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ImportedNames__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_1__0"


    // $ANTLR start "rule__ImportedNames__Group_1__0__Impl"
    // InternalFortXTrans.g:3127:1: rule__ImportedNames__Group_1__0__Impl : ( ( rule__ImportedNames__ImpnameAssignment_1_0 ) ) ;
    public final void rule__ImportedNames__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3131:1: ( ( ( rule__ImportedNames__ImpnameAssignment_1_0 ) ) )
            // InternalFortXTrans.g:3132:1: ( ( rule__ImportedNames__ImpnameAssignment_1_0 ) )
            {
            // InternalFortXTrans.g:3132:1: ( ( rule__ImportedNames__ImpnameAssignment_1_0 ) )
            // InternalFortXTrans.g:3133:2: ( rule__ImportedNames__ImpnameAssignment_1_0 )
            {
             before(grammarAccess.getImportedNamesAccess().getImpnameAssignment_1_0()); 
            // InternalFortXTrans.g:3134:2: ( rule__ImportedNames__ImpnameAssignment_1_0 )
            // InternalFortXTrans.g:3134:3: rule__ImportedNames__ImpnameAssignment_1_0
            {
            pushFollow(FOLLOW_2);
            rule__ImportedNames__ImpnameAssignment_1_0();

            state._fsp--;


            }

             after(grammarAccess.getImportedNamesAccess().getImpnameAssignment_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_1__0__Impl"


    // $ANTLR start "rule__ImportedNames__Group_1__1"
    // InternalFortXTrans.g:3142:1: rule__ImportedNames__Group_1__1 : rule__ImportedNames__Group_1__1__Impl rule__ImportedNames__Group_1__2 ;
    public final void rule__ImportedNames__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3146:1: ( rule__ImportedNames__Group_1__1__Impl rule__ImportedNames__Group_1__2 )
            // InternalFortXTrans.g:3147:2: rule__ImportedNames__Group_1__1__Impl rule__ImportedNames__Group_1__2
            {
            pushFollow(FOLLOW_13);
            rule__ImportedNames__Group_1__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ImportedNames__Group_1__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_1__1"


    // $ANTLR start "rule__ImportedNames__Group_1__1__Impl"
    // InternalFortXTrans.g:3154:1: rule__ImportedNames__Group_1__1__Impl : ( '.' ) ;
    public final void rule__ImportedNames__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3158:1: ( ( '.' ) )
            // InternalFortXTrans.g:3159:1: ( '.' )
            {
            // InternalFortXTrans.g:3159:1: ( '.' )
            // InternalFortXTrans.g:3160:2: '.'
            {
             before(grammarAccess.getImportedNamesAccess().getFullStopKeyword_1_1()); 
            match(input,30,FOLLOW_2); 
             after(grammarAccess.getImportedNamesAccess().getFullStopKeyword_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_1__1__Impl"


    // $ANTLR start "rule__ImportedNames__Group_1__2"
    // InternalFortXTrans.g:3169:1: rule__ImportedNames__Group_1__2 : rule__ImportedNames__Group_1__2__Impl rule__ImportedNames__Group_1__3 ;
    public final void rule__ImportedNames__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3173:1: ( rule__ImportedNames__Group_1__2__Impl rule__ImportedNames__Group_1__3 )
            // InternalFortXTrans.g:3174:2: rule__ImportedNames__Group_1__2__Impl rule__ImportedNames__Group_1__3
            {
            pushFollow(FOLLOW_5);
            rule__ImportedNames__Group_1__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ImportedNames__Group_1__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_1__2"


    // $ANTLR start "rule__ImportedNames__Group_1__2__Impl"
    // InternalFortXTrans.g:3181:1: rule__ImportedNames__Group_1__2__Impl : ( '{' ) ;
    public final void rule__ImportedNames__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3185:1: ( ( '{' ) )
            // InternalFortXTrans.g:3186:1: ( '{' )
            {
            // InternalFortXTrans.g:3186:1: ( '{' )
            // InternalFortXTrans.g:3187:2: '{'
            {
             before(grammarAccess.getImportedNamesAccess().getLeftCurlyBracketKeyword_1_2()); 
            match(input,31,FOLLOW_2); 
             after(grammarAccess.getImportedNamesAccess().getLeftCurlyBracketKeyword_1_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_1__2__Impl"


    // $ANTLR start "rule__ImportedNames__Group_1__3"
    // InternalFortXTrans.g:3196:1: rule__ImportedNames__Group_1__3 : rule__ImportedNames__Group_1__3__Impl rule__ImportedNames__Group_1__4 ;
    public final void rule__ImportedNames__Group_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3200:1: ( rule__ImportedNames__Group_1__3__Impl rule__ImportedNames__Group_1__4 )
            // InternalFortXTrans.g:3201:2: rule__ImportedNames__Group_1__3__Impl rule__ImportedNames__Group_1__4
            {
            pushFollow(FOLLOW_14);
            rule__ImportedNames__Group_1__3__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ImportedNames__Group_1__4();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_1__3"


    // $ANTLR start "rule__ImportedNames__Group_1__3__Impl"
    // InternalFortXTrans.g:3208:1: rule__ImportedNames__Group_1__3__Impl : ( ( rule__ImportedNames__SimpListAssignment_1_3 ) ) ;
    public final void rule__ImportedNames__Group_1__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3212:1: ( ( ( rule__ImportedNames__SimpListAssignment_1_3 ) ) )
            // InternalFortXTrans.g:3213:1: ( ( rule__ImportedNames__SimpListAssignment_1_3 ) )
            {
            // InternalFortXTrans.g:3213:1: ( ( rule__ImportedNames__SimpListAssignment_1_3 ) )
            // InternalFortXTrans.g:3214:2: ( rule__ImportedNames__SimpListAssignment_1_3 )
            {
             before(grammarAccess.getImportedNamesAccess().getSimpListAssignment_1_3()); 
            // InternalFortXTrans.g:3215:2: ( rule__ImportedNames__SimpListAssignment_1_3 )
            // InternalFortXTrans.g:3215:3: rule__ImportedNames__SimpListAssignment_1_3
            {
            pushFollow(FOLLOW_2);
            rule__ImportedNames__SimpListAssignment_1_3();

            state._fsp--;


            }

             after(grammarAccess.getImportedNamesAccess().getSimpListAssignment_1_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_1__3__Impl"


    // $ANTLR start "rule__ImportedNames__Group_1__4"
    // InternalFortXTrans.g:3223:1: rule__ImportedNames__Group_1__4 : rule__ImportedNames__Group_1__4__Impl rule__ImportedNames__Group_1__5 ;
    public final void rule__ImportedNames__Group_1__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3227:1: ( rule__ImportedNames__Group_1__4__Impl rule__ImportedNames__Group_1__5 )
            // InternalFortXTrans.g:3228:2: rule__ImportedNames__Group_1__4__Impl rule__ImportedNames__Group_1__5
            {
            pushFollow(FOLLOW_14);
            rule__ImportedNames__Group_1__4__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ImportedNames__Group_1__5();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_1__4"


    // $ANTLR start "rule__ImportedNames__Group_1__4__Impl"
    // InternalFortXTrans.g:3235:1: rule__ImportedNames__Group_1__4__Impl : ( ( rule__ImportedNames__Group_1_4__0 )* ) ;
    public final void rule__ImportedNames__Group_1__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3239:1: ( ( ( rule__ImportedNames__Group_1_4__0 )* ) )
            // InternalFortXTrans.g:3240:1: ( ( rule__ImportedNames__Group_1_4__0 )* )
            {
            // InternalFortXTrans.g:3240:1: ( ( rule__ImportedNames__Group_1_4__0 )* )
            // InternalFortXTrans.g:3241:2: ( rule__ImportedNames__Group_1_4__0 )*
            {
             before(grammarAccess.getImportedNamesAccess().getGroup_1_4()); 
            // InternalFortXTrans.g:3242:2: ( rule__ImportedNames__Group_1_4__0 )*
            loop35:
            do {
                int alt35=2;
                int LA35_0 = input.LA(1);

                if ( (LA35_0==29) ) {
                    int LA35_1 = input.LA(2);

                    if ( (LA35_1==RULE_ID) ) {
                        alt35=1;
                    }


                }


                switch (alt35) {
            	case 1 :
            	    // InternalFortXTrans.g:3242:3: rule__ImportedNames__Group_1_4__0
            	    {
            	    pushFollow(FOLLOW_15);
            	    rule__ImportedNames__Group_1_4__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop35;
                }
            } while (true);

             after(grammarAccess.getImportedNamesAccess().getGroup_1_4()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_1__4__Impl"


    // $ANTLR start "rule__ImportedNames__Group_1__5"
    // InternalFortXTrans.g:3250:1: rule__ImportedNames__Group_1__5 : rule__ImportedNames__Group_1__5__Impl rule__ImportedNames__Group_1__6 ;
    public final void rule__ImportedNames__Group_1__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3254:1: ( rule__ImportedNames__Group_1__5__Impl rule__ImportedNames__Group_1__6 )
            // InternalFortXTrans.g:3255:2: rule__ImportedNames__Group_1__5__Impl rule__ImportedNames__Group_1__6
            {
            pushFollow(FOLLOW_14);
            rule__ImportedNames__Group_1__5__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ImportedNames__Group_1__6();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_1__5"


    // $ANTLR start "rule__ImportedNames__Group_1__5__Impl"
    // InternalFortXTrans.g:3262:1: rule__ImportedNames__Group_1__5__Impl : ( ( rule__ImportedNames__Group_1_5__0 )? ) ;
    public final void rule__ImportedNames__Group_1__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3266:1: ( ( ( rule__ImportedNames__Group_1_5__0 )? ) )
            // InternalFortXTrans.g:3267:1: ( ( rule__ImportedNames__Group_1_5__0 )? )
            {
            // InternalFortXTrans.g:3267:1: ( ( rule__ImportedNames__Group_1_5__0 )? )
            // InternalFortXTrans.g:3268:2: ( rule__ImportedNames__Group_1_5__0 )?
            {
             before(grammarAccess.getImportedNamesAccess().getGroup_1_5()); 
            // InternalFortXTrans.g:3269:2: ( rule__ImportedNames__Group_1_5__0 )?
            int alt36=2;
            int LA36_0 = input.LA(1);

            if ( (LA36_0==29) ) {
                alt36=1;
            }
            switch (alt36) {
                case 1 :
                    // InternalFortXTrans.g:3269:3: rule__ImportedNames__Group_1_5__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ImportedNames__Group_1_5__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getImportedNamesAccess().getGroup_1_5()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_1__5__Impl"


    // $ANTLR start "rule__ImportedNames__Group_1__6"
    // InternalFortXTrans.g:3277:1: rule__ImportedNames__Group_1__6 : rule__ImportedNames__Group_1__6__Impl ;
    public final void rule__ImportedNames__Group_1__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3281:1: ( rule__ImportedNames__Group_1__6__Impl )
            // InternalFortXTrans.g:3282:2: rule__ImportedNames__Group_1__6__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ImportedNames__Group_1__6__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_1__6"


    // $ANTLR start "rule__ImportedNames__Group_1__6__Impl"
    // InternalFortXTrans.g:3288:1: rule__ImportedNames__Group_1__6__Impl : ( '}' ) ;
    public final void rule__ImportedNames__Group_1__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3292:1: ( ( '}' ) )
            // InternalFortXTrans.g:3293:1: ( '}' )
            {
            // InternalFortXTrans.g:3293:1: ( '}' )
            // InternalFortXTrans.g:3294:2: '}'
            {
             before(grammarAccess.getImportedNamesAccess().getRightCurlyBracketKeyword_1_6()); 
            match(input,28,FOLLOW_2); 
             after(grammarAccess.getImportedNamesAccess().getRightCurlyBracketKeyword_1_6()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_1__6__Impl"


    // $ANTLR start "rule__ImportedNames__Group_1_4__0"
    // InternalFortXTrans.g:3304:1: rule__ImportedNames__Group_1_4__0 : rule__ImportedNames__Group_1_4__0__Impl rule__ImportedNames__Group_1_4__1 ;
    public final void rule__ImportedNames__Group_1_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3308:1: ( rule__ImportedNames__Group_1_4__0__Impl rule__ImportedNames__Group_1_4__1 )
            // InternalFortXTrans.g:3309:2: rule__ImportedNames__Group_1_4__0__Impl rule__ImportedNames__Group_1_4__1
            {
            pushFollow(FOLLOW_5);
            rule__ImportedNames__Group_1_4__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ImportedNames__Group_1_4__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_1_4__0"


    // $ANTLR start "rule__ImportedNames__Group_1_4__0__Impl"
    // InternalFortXTrans.g:3316:1: rule__ImportedNames__Group_1_4__0__Impl : ( ',' ) ;
    public final void rule__ImportedNames__Group_1_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3320:1: ( ( ',' ) )
            // InternalFortXTrans.g:3321:1: ( ',' )
            {
            // InternalFortXTrans.g:3321:1: ( ',' )
            // InternalFortXTrans.g:3322:2: ','
            {
             before(grammarAccess.getImportedNamesAccess().getCommaKeyword_1_4_0()); 
            match(input,29,FOLLOW_2); 
             after(grammarAccess.getImportedNamesAccess().getCommaKeyword_1_4_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_1_4__0__Impl"


    // $ANTLR start "rule__ImportedNames__Group_1_4__1"
    // InternalFortXTrans.g:3331:1: rule__ImportedNames__Group_1_4__1 : rule__ImportedNames__Group_1_4__1__Impl ;
    public final void rule__ImportedNames__Group_1_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3335:1: ( rule__ImportedNames__Group_1_4__1__Impl )
            // InternalFortXTrans.g:3336:2: rule__ImportedNames__Group_1_4__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ImportedNames__Group_1_4__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_1_4__1"


    // $ANTLR start "rule__ImportedNames__Group_1_4__1__Impl"
    // InternalFortXTrans.g:3342:1: rule__ImportedNames__Group_1_4__1__Impl : ( ( rule__ImportedNames__SimpListAssignment_1_4_1 ) ) ;
    public final void rule__ImportedNames__Group_1_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3346:1: ( ( ( rule__ImportedNames__SimpListAssignment_1_4_1 ) ) )
            // InternalFortXTrans.g:3347:1: ( ( rule__ImportedNames__SimpListAssignment_1_4_1 ) )
            {
            // InternalFortXTrans.g:3347:1: ( ( rule__ImportedNames__SimpListAssignment_1_4_1 ) )
            // InternalFortXTrans.g:3348:2: ( rule__ImportedNames__SimpListAssignment_1_4_1 )
            {
             before(grammarAccess.getImportedNamesAccess().getSimpListAssignment_1_4_1()); 
            // InternalFortXTrans.g:3349:2: ( rule__ImportedNames__SimpListAssignment_1_4_1 )
            // InternalFortXTrans.g:3349:3: rule__ImportedNames__SimpListAssignment_1_4_1
            {
            pushFollow(FOLLOW_2);
            rule__ImportedNames__SimpListAssignment_1_4_1();

            state._fsp--;


            }

             after(grammarAccess.getImportedNamesAccess().getSimpListAssignment_1_4_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_1_4__1__Impl"


    // $ANTLR start "rule__ImportedNames__Group_1_5__0"
    // InternalFortXTrans.g:3358:1: rule__ImportedNames__Group_1_5__0 : rule__ImportedNames__Group_1_5__0__Impl rule__ImportedNames__Group_1_5__1 ;
    public final void rule__ImportedNames__Group_1_5__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3362:1: ( rule__ImportedNames__Group_1_5__0__Impl rule__ImportedNames__Group_1_5__1 )
            // InternalFortXTrans.g:3363:2: rule__ImportedNames__Group_1_5__0__Impl rule__ImportedNames__Group_1_5__1
            {
            pushFollow(FOLLOW_17);
            rule__ImportedNames__Group_1_5__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ImportedNames__Group_1_5__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_1_5__0"


    // $ANTLR start "rule__ImportedNames__Group_1_5__0__Impl"
    // InternalFortXTrans.g:3370:1: rule__ImportedNames__Group_1_5__0__Impl : ( ( rule__ImportedNames__CommaAssignment_1_5_0 ) ) ;
    public final void rule__ImportedNames__Group_1_5__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3374:1: ( ( ( rule__ImportedNames__CommaAssignment_1_5_0 ) ) )
            // InternalFortXTrans.g:3375:1: ( ( rule__ImportedNames__CommaAssignment_1_5_0 ) )
            {
            // InternalFortXTrans.g:3375:1: ( ( rule__ImportedNames__CommaAssignment_1_5_0 ) )
            // InternalFortXTrans.g:3376:2: ( rule__ImportedNames__CommaAssignment_1_5_0 )
            {
             before(grammarAccess.getImportedNamesAccess().getCommaAssignment_1_5_0()); 
            // InternalFortXTrans.g:3377:2: ( rule__ImportedNames__CommaAssignment_1_5_0 )
            // InternalFortXTrans.g:3377:3: rule__ImportedNames__CommaAssignment_1_5_0
            {
            pushFollow(FOLLOW_2);
            rule__ImportedNames__CommaAssignment_1_5_0();

            state._fsp--;


            }

             after(grammarAccess.getImportedNamesAccess().getCommaAssignment_1_5_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_1_5__0__Impl"


    // $ANTLR start "rule__ImportedNames__Group_1_5__1"
    // InternalFortXTrans.g:3385:1: rule__ImportedNames__Group_1_5__1 : rule__ImportedNames__Group_1_5__1__Impl ;
    public final void rule__ImportedNames__Group_1_5__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3389:1: ( rule__ImportedNames__Group_1_5__1__Impl )
            // InternalFortXTrans.g:3390:2: rule__ImportedNames__Group_1_5__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ImportedNames__Group_1_5__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_1_5__1"


    // $ANTLR start "rule__ImportedNames__Group_1_5__1__Impl"
    // InternalFortXTrans.g:3396:1: rule__ImportedNames__Group_1_5__1__Impl : ( ( rule__ImportedNames__DotsAssignment_1_5_1 ) ) ;
    public final void rule__ImportedNames__Group_1_5__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3400:1: ( ( ( rule__ImportedNames__DotsAssignment_1_5_1 ) ) )
            // InternalFortXTrans.g:3401:1: ( ( rule__ImportedNames__DotsAssignment_1_5_1 ) )
            {
            // InternalFortXTrans.g:3401:1: ( ( rule__ImportedNames__DotsAssignment_1_5_1 ) )
            // InternalFortXTrans.g:3402:2: ( rule__ImportedNames__DotsAssignment_1_5_1 )
            {
             before(grammarAccess.getImportedNamesAccess().getDotsAssignment_1_5_1()); 
            // InternalFortXTrans.g:3403:2: ( rule__ImportedNames__DotsAssignment_1_5_1 )
            // InternalFortXTrans.g:3403:3: rule__ImportedNames__DotsAssignment_1_5_1
            {
            pushFollow(FOLLOW_2);
            rule__ImportedNames__DotsAssignment_1_5_1();

            state._fsp--;


            }

             after(grammarAccess.getImportedNamesAccess().getDotsAssignment_1_5_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_1_5__1__Impl"


    // $ANTLR start "rule__ImportedNames__Group_2__0"
    // InternalFortXTrans.g:3412:1: rule__ImportedNames__Group_2__0 : rule__ImportedNames__Group_2__0__Impl rule__ImportedNames__Group_2__1 ;
    public final void rule__ImportedNames__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3416:1: ( rule__ImportedNames__Group_2__0__Impl rule__ImportedNames__Group_2__1 )
            // InternalFortXTrans.g:3417:2: rule__ImportedNames__Group_2__0__Impl rule__ImportedNames__Group_2__1
            {
            pushFollow(FOLLOW_20);
            rule__ImportedNames__Group_2__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ImportedNames__Group_2__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_2__0"


    // $ANTLR start "rule__ImportedNames__Group_2__0__Impl"
    // InternalFortXTrans.g:3424:1: rule__ImportedNames__Group_2__0__Impl : ( ( rule__ImportedNames__ImpnameAssignment_2_0 ) ) ;
    public final void rule__ImportedNames__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3428:1: ( ( ( rule__ImportedNames__ImpnameAssignment_2_0 ) ) )
            // InternalFortXTrans.g:3429:1: ( ( rule__ImportedNames__ImpnameAssignment_2_0 ) )
            {
            // InternalFortXTrans.g:3429:1: ( ( rule__ImportedNames__ImpnameAssignment_2_0 ) )
            // InternalFortXTrans.g:3430:2: ( rule__ImportedNames__ImpnameAssignment_2_0 )
            {
             before(grammarAccess.getImportedNamesAccess().getImpnameAssignment_2_0()); 
            // InternalFortXTrans.g:3431:2: ( rule__ImportedNames__ImpnameAssignment_2_0 )
            // InternalFortXTrans.g:3431:3: rule__ImportedNames__ImpnameAssignment_2_0
            {
            pushFollow(FOLLOW_2);
            rule__ImportedNames__ImpnameAssignment_2_0();

            state._fsp--;


            }

             after(grammarAccess.getImportedNamesAccess().getImpnameAssignment_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_2__0__Impl"


    // $ANTLR start "rule__ImportedNames__Group_2__1"
    // InternalFortXTrans.g:3439:1: rule__ImportedNames__Group_2__1 : rule__ImportedNames__Group_2__1__Impl ;
    public final void rule__ImportedNames__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3443:1: ( rule__ImportedNames__Group_2__1__Impl )
            // InternalFortXTrans.g:3444:2: rule__ImportedNames__Group_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ImportedNames__Group_2__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_2__1"


    // $ANTLR start "rule__ImportedNames__Group_2__1__Impl"
    // InternalFortXTrans.g:3450:1: rule__ImportedNames__Group_2__1__Impl : ( ( rule__ImportedNames__Group_2_1__0 )? ) ;
    public final void rule__ImportedNames__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3454:1: ( ( ( rule__ImportedNames__Group_2_1__0 )? ) )
            // InternalFortXTrans.g:3455:1: ( ( rule__ImportedNames__Group_2_1__0 )? )
            {
            // InternalFortXTrans.g:3455:1: ( ( rule__ImportedNames__Group_2_1__0 )? )
            // InternalFortXTrans.g:3456:2: ( rule__ImportedNames__Group_2_1__0 )?
            {
             before(grammarAccess.getImportedNamesAccess().getGroup_2_1()); 
            // InternalFortXTrans.g:3457:2: ( rule__ImportedNames__Group_2_1__0 )?
            int alt37=2;
            int LA37_0 = input.LA(1);

            if ( (LA37_0==32) ) {
                alt37=1;
            }
            switch (alt37) {
                case 1 :
                    // InternalFortXTrans.g:3457:3: rule__ImportedNames__Group_2_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ImportedNames__Group_2_1__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getImportedNamesAccess().getGroup_2_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_2__1__Impl"


    // $ANTLR start "rule__ImportedNames__Group_2_1__0"
    // InternalFortXTrans.g:3466:1: rule__ImportedNames__Group_2_1__0 : rule__ImportedNames__Group_2_1__0__Impl rule__ImportedNames__Group_2_1__1 ;
    public final void rule__ImportedNames__Group_2_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3470:1: ( rule__ImportedNames__Group_2_1__0__Impl rule__ImportedNames__Group_2_1__1 )
            // InternalFortXTrans.g:3471:2: rule__ImportedNames__Group_2_1__0__Impl rule__ImportedNames__Group_2_1__1
            {
            pushFollow(FOLLOW_5);
            rule__ImportedNames__Group_2_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ImportedNames__Group_2_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_2_1__0"


    // $ANTLR start "rule__ImportedNames__Group_2_1__0__Impl"
    // InternalFortXTrans.g:3478:1: rule__ImportedNames__Group_2_1__0__Impl : ( 'as' ) ;
    public final void rule__ImportedNames__Group_2_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3482:1: ( ( 'as' ) )
            // InternalFortXTrans.g:3483:1: ( 'as' )
            {
            // InternalFortXTrans.g:3483:1: ( 'as' )
            // InternalFortXTrans.g:3484:2: 'as'
            {
             before(grammarAccess.getImportedNamesAccess().getAsKeyword_2_1_0()); 
            match(input,32,FOLLOW_2); 
             after(grammarAccess.getImportedNamesAccess().getAsKeyword_2_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_2_1__0__Impl"


    // $ANTLR start "rule__ImportedNames__Group_2_1__1"
    // InternalFortXTrans.g:3493:1: rule__ImportedNames__Group_2_1__1 : rule__ImportedNames__Group_2_1__1__Impl ;
    public final void rule__ImportedNames__Group_2_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3497:1: ( rule__ImportedNames__Group_2_1__1__Impl )
            // InternalFortXTrans.g:3498:2: rule__ImportedNames__Group_2_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ImportedNames__Group_2_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_2_1__1"


    // $ANTLR start "rule__ImportedNames__Group_2_1__1__Impl"
    // InternalFortXTrans.g:3504:1: rule__ImportedNames__Group_2_1__1__Impl : ( ( rule__ImportedNames__AsnameAssignment_2_1_1 ) ) ;
    public final void rule__ImportedNames__Group_2_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3508:1: ( ( ( rule__ImportedNames__AsnameAssignment_2_1_1 ) ) )
            // InternalFortXTrans.g:3509:1: ( ( rule__ImportedNames__AsnameAssignment_2_1_1 ) )
            {
            // InternalFortXTrans.g:3509:1: ( ( rule__ImportedNames__AsnameAssignment_2_1_1 ) )
            // InternalFortXTrans.g:3510:2: ( rule__ImportedNames__AsnameAssignment_2_1_1 )
            {
             before(grammarAccess.getImportedNamesAccess().getAsnameAssignment_2_1_1()); 
            // InternalFortXTrans.g:3511:2: ( rule__ImportedNames__AsnameAssignment_2_1_1 )
            // InternalFortXTrans.g:3511:3: rule__ImportedNames__AsnameAssignment_2_1_1
            {
            pushFollow(FOLLOW_2);
            rule__ImportedNames__AsnameAssignment_2_1_1();

            state._fsp--;


            }

             after(grammarAccess.getImportedNamesAccess().getAsnameAssignment_2_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_2_1__1__Impl"


    // $ANTLR start "rule__QualifiedName__Group__0"
    // InternalFortXTrans.g:3520:1: rule__QualifiedName__Group__0 : rule__QualifiedName__Group__0__Impl rule__QualifiedName__Group__1 ;
    public final void rule__QualifiedName__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3524:1: ( rule__QualifiedName__Group__0__Impl rule__QualifiedName__Group__1 )
            // InternalFortXTrans.g:3525:2: rule__QualifiedName__Group__0__Impl rule__QualifiedName__Group__1
            {
            pushFollow(FOLLOW_21);
            rule__QualifiedName__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__QualifiedName__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedName__Group__0"


    // $ANTLR start "rule__QualifiedName__Group__0__Impl"
    // InternalFortXTrans.g:3532:1: rule__QualifiedName__Group__0__Impl : ( ( rule__QualifiedName__SAssignment_0 ) ) ;
    public final void rule__QualifiedName__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3536:1: ( ( ( rule__QualifiedName__SAssignment_0 ) ) )
            // InternalFortXTrans.g:3537:1: ( ( rule__QualifiedName__SAssignment_0 ) )
            {
            // InternalFortXTrans.g:3537:1: ( ( rule__QualifiedName__SAssignment_0 ) )
            // InternalFortXTrans.g:3538:2: ( rule__QualifiedName__SAssignment_0 )
            {
             before(grammarAccess.getQualifiedNameAccess().getSAssignment_0()); 
            // InternalFortXTrans.g:3539:2: ( rule__QualifiedName__SAssignment_0 )
            // InternalFortXTrans.g:3539:3: rule__QualifiedName__SAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__QualifiedName__SAssignment_0();

            state._fsp--;


            }

             after(grammarAccess.getQualifiedNameAccess().getSAssignment_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedName__Group__0__Impl"


    // $ANTLR start "rule__QualifiedName__Group__1"
    // InternalFortXTrans.g:3547:1: rule__QualifiedName__Group__1 : rule__QualifiedName__Group__1__Impl rule__QualifiedName__Group__2 ;
    public final void rule__QualifiedName__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3551:1: ( rule__QualifiedName__Group__1__Impl rule__QualifiedName__Group__2 )
            // InternalFortXTrans.g:3552:2: rule__QualifiedName__Group__1__Impl rule__QualifiedName__Group__2
            {
            pushFollow(FOLLOW_21);
            rule__QualifiedName__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__QualifiedName__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedName__Group__1"


    // $ANTLR start "rule__QualifiedName__Group__1__Impl"
    // InternalFortXTrans.g:3559:1: rule__QualifiedName__Group__1__Impl : ( ( rule__QualifiedName__Group_1__0 )* ) ;
    public final void rule__QualifiedName__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3563:1: ( ( ( rule__QualifiedName__Group_1__0 )* ) )
            // InternalFortXTrans.g:3564:1: ( ( rule__QualifiedName__Group_1__0 )* )
            {
            // InternalFortXTrans.g:3564:1: ( ( rule__QualifiedName__Group_1__0 )* )
            // InternalFortXTrans.g:3565:2: ( rule__QualifiedName__Group_1__0 )*
            {
             before(grammarAccess.getQualifiedNameAccess().getGroup_1()); 
            // InternalFortXTrans.g:3566:2: ( rule__QualifiedName__Group_1__0 )*
            loop38:
            do {
                int alt38=2;
                int LA38_0 = input.LA(1);

                if ( (LA38_0==30) ) {
                    int LA38_2 = input.LA(2);

                    if ( (LA38_2==RULE_ID) ) {
                        alt38=1;
                    }


                }


                switch (alt38) {
            	case 1 :
            	    // InternalFortXTrans.g:3566:3: rule__QualifiedName__Group_1__0
            	    {
            	    pushFollow(FOLLOW_22);
            	    rule__QualifiedName__Group_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop38;
                }
            } while (true);

             after(grammarAccess.getQualifiedNameAccess().getGroup_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedName__Group__1__Impl"


    // $ANTLR start "rule__QualifiedName__Group__2"
    // InternalFortXTrans.g:3574:1: rule__QualifiedName__Group__2 : rule__QualifiedName__Group__2__Impl ;
    public final void rule__QualifiedName__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3578:1: ( rule__QualifiedName__Group__2__Impl )
            // InternalFortXTrans.g:3579:2: rule__QualifiedName__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__QualifiedName__Group__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedName__Group__2"


    // $ANTLR start "rule__QualifiedName__Group__2__Impl"
    // InternalFortXTrans.g:3585:1: rule__QualifiedName__Group__2__Impl : ( ( rule__QualifiedName__DotsAssignment_2 )? ) ;
    public final void rule__QualifiedName__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3589:1: ( ( ( rule__QualifiedName__DotsAssignment_2 )? ) )
            // InternalFortXTrans.g:3590:1: ( ( rule__QualifiedName__DotsAssignment_2 )? )
            {
            // InternalFortXTrans.g:3590:1: ( ( rule__QualifiedName__DotsAssignment_2 )? )
            // InternalFortXTrans.g:3591:2: ( rule__QualifiedName__DotsAssignment_2 )?
            {
             before(grammarAccess.getQualifiedNameAccess().getDotsAssignment_2()); 
            // InternalFortXTrans.g:3592:2: ( rule__QualifiedName__DotsAssignment_2 )?
            int alt39=2;
            int LA39_0 = input.LA(1);

            if ( (LA39_0==RULE_DOTS) ) {
                alt39=1;
            }
            switch (alt39) {
                case 1 :
                    // InternalFortXTrans.g:3592:3: rule__QualifiedName__DotsAssignment_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__QualifiedName__DotsAssignment_2();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getQualifiedNameAccess().getDotsAssignment_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedName__Group__2__Impl"


    // $ANTLR start "rule__QualifiedName__Group_1__0"
    // InternalFortXTrans.g:3601:1: rule__QualifiedName__Group_1__0 : rule__QualifiedName__Group_1__0__Impl rule__QualifiedName__Group_1__1 ;
    public final void rule__QualifiedName__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3605:1: ( rule__QualifiedName__Group_1__0__Impl rule__QualifiedName__Group_1__1 )
            // InternalFortXTrans.g:3606:2: rule__QualifiedName__Group_1__0__Impl rule__QualifiedName__Group_1__1
            {
            pushFollow(FOLLOW_5);
            rule__QualifiedName__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__QualifiedName__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedName__Group_1__0"


    // $ANTLR start "rule__QualifiedName__Group_1__0__Impl"
    // InternalFortXTrans.g:3613:1: rule__QualifiedName__Group_1__0__Impl : ( '.' ) ;
    public final void rule__QualifiedName__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3617:1: ( ( '.' ) )
            // InternalFortXTrans.g:3618:1: ( '.' )
            {
            // InternalFortXTrans.g:3618:1: ( '.' )
            // InternalFortXTrans.g:3619:2: '.'
            {
             before(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); 
            match(input,30,FOLLOW_2); 
             after(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedName__Group_1__0__Impl"


    // $ANTLR start "rule__QualifiedName__Group_1__1"
    // InternalFortXTrans.g:3628:1: rule__QualifiedName__Group_1__1 : rule__QualifiedName__Group_1__1__Impl ;
    public final void rule__QualifiedName__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3632:1: ( rule__QualifiedName__Group_1__1__Impl )
            // InternalFortXTrans.g:3633:2: rule__QualifiedName__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__QualifiedName__Group_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedName__Group_1__1"


    // $ANTLR start "rule__QualifiedName__Group_1__1__Impl"
    // InternalFortXTrans.g:3639:1: rule__QualifiedName__Group_1__1__Impl : ( ( rule__QualifiedName__SAssignment_1_1 ) ) ;
    public final void rule__QualifiedName__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3643:1: ( ( ( rule__QualifiedName__SAssignment_1_1 ) ) )
            // InternalFortXTrans.g:3644:1: ( ( rule__QualifiedName__SAssignment_1_1 ) )
            {
            // InternalFortXTrans.g:3644:1: ( ( rule__QualifiedName__SAssignment_1_1 ) )
            // InternalFortXTrans.g:3645:2: ( rule__QualifiedName__SAssignment_1_1 )
            {
             before(grammarAccess.getQualifiedNameAccess().getSAssignment_1_1()); 
            // InternalFortXTrans.g:3646:2: ( rule__QualifiedName__SAssignment_1_1 )
            // InternalFortXTrans.g:3646:3: rule__QualifiedName__SAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__QualifiedName__SAssignment_1_1();

            state._fsp--;


            }

             after(grammarAccess.getQualifiedNameAccess().getSAssignment_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedName__Group_1__1__Impl"


    // $ANTLR start "rule__QualifiedNameTuple__Group__0"
    // InternalFortXTrans.g:3655:1: rule__QualifiedNameTuple__Group__0 : rule__QualifiedNameTuple__Group__0__Impl rule__QualifiedNameTuple__Group__1 ;
    public final void rule__QualifiedNameTuple__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3659:1: ( rule__QualifiedNameTuple__Group__0__Impl rule__QualifiedNameTuple__Group__1 )
            // InternalFortXTrans.g:3660:2: rule__QualifiedNameTuple__Group__0__Impl rule__QualifiedNameTuple__Group__1
            {
            pushFollow(FOLLOW_5);
            rule__QualifiedNameTuple__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__QualifiedNameTuple__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedNameTuple__Group__0"


    // $ANTLR start "rule__QualifiedNameTuple__Group__0__Impl"
    // InternalFortXTrans.g:3667:1: rule__QualifiedNameTuple__Group__0__Impl : ( '(' ) ;
    public final void rule__QualifiedNameTuple__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3671:1: ( ( '(' ) )
            // InternalFortXTrans.g:3672:1: ( '(' )
            {
            // InternalFortXTrans.g:3672:1: ( '(' )
            // InternalFortXTrans.g:3673:2: '('
            {
             before(grammarAccess.getQualifiedNameTupleAccess().getLeftParenthesisKeyword_0()); 
            match(input,33,FOLLOW_2); 
             after(grammarAccess.getQualifiedNameTupleAccess().getLeftParenthesisKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedNameTuple__Group__0__Impl"


    // $ANTLR start "rule__QualifiedNameTuple__Group__1"
    // InternalFortXTrans.g:3682:1: rule__QualifiedNameTuple__Group__1 : rule__QualifiedNameTuple__Group__1__Impl rule__QualifiedNameTuple__Group__2 ;
    public final void rule__QualifiedNameTuple__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3686:1: ( rule__QualifiedNameTuple__Group__1__Impl rule__QualifiedNameTuple__Group__2 )
            // InternalFortXTrans.g:3687:2: rule__QualifiedNameTuple__Group__1__Impl rule__QualifiedNameTuple__Group__2
            {
            pushFollow(FOLLOW_23);
            rule__QualifiedNameTuple__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__QualifiedNameTuple__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedNameTuple__Group__1"


    // $ANTLR start "rule__QualifiedNameTuple__Group__1__Impl"
    // InternalFortXTrans.g:3694:1: rule__QualifiedNameTuple__Group__1__Impl : ( ( rule__QualifiedNameTuple__QlistAssignment_1 ) ) ;
    public final void rule__QualifiedNameTuple__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3698:1: ( ( ( rule__QualifiedNameTuple__QlistAssignment_1 ) ) )
            // InternalFortXTrans.g:3699:1: ( ( rule__QualifiedNameTuple__QlistAssignment_1 ) )
            {
            // InternalFortXTrans.g:3699:1: ( ( rule__QualifiedNameTuple__QlistAssignment_1 ) )
            // InternalFortXTrans.g:3700:2: ( rule__QualifiedNameTuple__QlistAssignment_1 )
            {
             before(grammarAccess.getQualifiedNameTupleAccess().getQlistAssignment_1()); 
            // InternalFortXTrans.g:3701:2: ( rule__QualifiedNameTuple__QlistAssignment_1 )
            // InternalFortXTrans.g:3701:3: rule__QualifiedNameTuple__QlistAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__QualifiedNameTuple__QlistAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getQualifiedNameTupleAccess().getQlistAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedNameTuple__Group__1__Impl"


    // $ANTLR start "rule__QualifiedNameTuple__Group__2"
    // InternalFortXTrans.g:3709:1: rule__QualifiedNameTuple__Group__2 : rule__QualifiedNameTuple__Group__2__Impl rule__QualifiedNameTuple__Group__3 ;
    public final void rule__QualifiedNameTuple__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3713:1: ( rule__QualifiedNameTuple__Group__2__Impl rule__QualifiedNameTuple__Group__3 )
            // InternalFortXTrans.g:3714:2: rule__QualifiedNameTuple__Group__2__Impl rule__QualifiedNameTuple__Group__3
            {
            pushFollow(FOLLOW_23);
            rule__QualifiedNameTuple__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__QualifiedNameTuple__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedNameTuple__Group__2"


    // $ANTLR start "rule__QualifiedNameTuple__Group__2__Impl"
    // InternalFortXTrans.g:3721:1: rule__QualifiedNameTuple__Group__2__Impl : ( ( rule__QualifiedNameTuple__Group_2__0 )* ) ;
    public final void rule__QualifiedNameTuple__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3725:1: ( ( ( rule__QualifiedNameTuple__Group_2__0 )* ) )
            // InternalFortXTrans.g:3726:1: ( ( rule__QualifiedNameTuple__Group_2__0 )* )
            {
            // InternalFortXTrans.g:3726:1: ( ( rule__QualifiedNameTuple__Group_2__0 )* )
            // InternalFortXTrans.g:3727:2: ( rule__QualifiedNameTuple__Group_2__0 )*
            {
             before(grammarAccess.getQualifiedNameTupleAccess().getGroup_2()); 
            // InternalFortXTrans.g:3728:2: ( rule__QualifiedNameTuple__Group_2__0 )*
            loop40:
            do {
                int alt40=2;
                int LA40_0 = input.LA(1);

                if ( (LA40_0==29) ) {
                    alt40=1;
                }


                switch (alt40) {
            	case 1 :
            	    // InternalFortXTrans.g:3728:3: rule__QualifiedNameTuple__Group_2__0
            	    {
            	    pushFollow(FOLLOW_15);
            	    rule__QualifiedNameTuple__Group_2__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop40;
                }
            } while (true);

             after(grammarAccess.getQualifiedNameTupleAccess().getGroup_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedNameTuple__Group__2__Impl"


    // $ANTLR start "rule__QualifiedNameTuple__Group__3"
    // InternalFortXTrans.g:3736:1: rule__QualifiedNameTuple__Group__3 : rule__QualifiedNameTuple__Group__3__Impl ;
    public final void rule__QualifiedNameTuple__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3740:1: ( rule__QualifiedNameTuple__Group__3__Impl )
            // InternalFortXTrans.g:3741:2: rule__QualifiedNameTuple__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__QualifiedNameTuple__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedNameTuple__Group__3"


    // $ANTLR start "rule__QualifiedNameTuple__Group__3__Impl"
    // InternalFortXTrans.g:3747:1: rule__QualifiedNameTuple__Group__3__Impl : ( ')' ) ;
    public final void rule__QualifiedNameTuple__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3751:1: ( ( ')' ) )
            // InternalFortXTrans.g:3752:1: ( ')' )
            {
            // InternalFortXTrans.g:3752:1: ( ')' )
            // InternalFortXTrans.g:3753:2: ')'
            {
             before(grammarAccess.getQualifiedNameTupleAccess().getRightParenthesisKeyword_3()); 
            match(input,34,FOLLOW_2); 
             after(grammarAccess.getQualifiedNameTupleAccess().getRightParenthesisKeyword_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedNameTuple__Group__3__Impl"


    // $ANTLR start "rule__QualifiedNameTuple__Group_2__0"
    // InternalFortXTrans.g:3763:1: rule__QualifiedNameTuple__Group_2__0 : rule__QualifiedNameTuple__Group_2__0__Impl rule__QualifiedNameTuple__Group_2__1 ;
    public final void rule__QualifiedNameTuple__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3767:1: ( rule__QualifiedNameTuple__Group_2__0__Impl rule__QualifiedNameTuple__Group_2__1 )
            // InternalFortXTrans.g:3768:2: rule__QualifiedNameTuple__Group_2__0__Impl rule__QualifiedNameTuple__Group_2__1
            {
            pushFollow(FOLLOW_5);
            rule__QualifiedNameTuple__Group_2__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__QualifiedNameTuple__Group_2__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedNameTuple__Group_2__0"


    // $ANTLR start "rule__QualifiedNameTuple__Group_2__0__Impl"
    // InternalFortXTrans.g:3775:1: rule__QualifiedNameTuple__Group_2__0__Impl : ( ',' ) ;
    public final void rule__QualifiedNameTuple__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3779:1: ( ( ',' ) )
            // InternalFortXTrans.g:3780:1: ( ',' )
            {
            // InternalFortXTrans.g:3780:1: ( ',' )
            // InternalFortXTrans.g:3781:2: ','
            {
             before(grammarAccess.getQualifiedNameTupleAccess().getCommaKeyword_2_0()); 
            match(input,29,FOLLOW_2); 
             after(grammarAccess.getQualifiedNameTupleAccess().getCommaKeyword_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedNameTuple__Group_2__0__Impl"


    // $ANTLR start "rule__QualifiedNameTuple__Group_2__1"
    // InternalFortXTrans.g:3790:1: rule__QualifiedNameTuple__Group_2__1 : rule__QualifiedNameTuple__Group_2__1__Impl ;
    public final void rule__QualifiedNameTuple__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3794:1: ( rule__QualifiedNameTuple__Group_2__1__Impl )
            // InternalFortXTrans.g:3795:2: rule__QualifiedNameTuple__Group_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__QualifiedNameTuple__Group_2__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedNameTuple__Group_2__1"


    // $ANTLR start "rule__QualifiedNameTuple__Group_2__1__Impl"
    // InternalFortXTrans.g:3801:1: rule__QualifiedNameTuple__Group_2__1__Impl : ( ( rule__QualifiedNameTuple__QlistAssignment_2_1 ) ) ;
    public final void rule__QualifiedNameTuple__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3805:1: ( ( ( rule__QualifiedNameTuple__QlistAssignment_2_1 ) ) )
            // InternalFortXTrans.g:3806:1: ( ( rule__QualifiedNameTuple__QlistAssignment_2_1 ) )
            {
            // InternalFortXTrans.g:3806:1: ( ( rule__QualifiedNameTuple__QlistAssignment_2_1 ) )
            // InternalFortXTrans.g:3807:2: ( rule__QualifiedNameTuple__QlistAssignment_2_1 )
            {
             before(grammarAccess.getQualifiedNameTupleAccess().getQlistAssignment_2_1()); 
            // InternalFortXTrans.g:3808:2: ( rule__QualifiedNameTuple__QlistAssignment_2_1 )
            // InternalFortXTrans.g:3808:3: rule__QualifiedNameTuple__QlistAssignment_2_1
            {
            pushFollow(FOLLOW_2);
            rule__QualifiedNameTuple__QlistAssignment_2_1();

            state._fsp--;


            }

             after(grammarAccess.getQualifiedNameTupleAccess().getQlistAssignment_2_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedNameTuple__Group_2__1__Impl"


    // $ANTLR start "rule__SimpleNames__Group_1__0"
    // InternalFortXTrans.g:3817:1: rule__SimpleNames__Group_1__0 : rule__SimpleNames__Group_1__0__Impl rule__SimpleNames__Group_1__1 ;
    public final void rule__SimpleNames__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3821:1: ( rule__SimpleNames__Group_1__0__Impl rule__SimpleNames__Group_1__1 )
            // InternalFortXTrans.g:3822:2: rule__SimpleNames__Group_1__0__Impl rule__SimpleNames__Group_1__1
            {
            pushFollow(FOLLOW_5);
            rule__SimpleNames__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__SimpleNames__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleNames__Group_1__0"


    // $ANTLR start "rule__SimpleNames__Group_1__0__Impl"
    // InternalFortXTrans.g:3829:1: rule__SimpleNames__Group_1__0__Impl : ( ( rule__SimpleNames__BrackAssignment_1_0 ) ) ;
    public final void rule__SimpleNames__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3833:1: ( ( ( rule__SimpleNames__BrackAssignment_1_0 ) ) )
            // InternalFortXTrans.g:3834:1: ( ( rule__SimpleNames__BrackAssignment_1_0 ) )
            {
            // InternalFortXTrans.g:3834:1: ( ( rule__SimpleNames__BrackAssignment_1_0 ) )
            // InternalFortXTrans.g:3835:2: ( rule__SimpleNames__BrackAssignment_1_0 )
            {
             before(grammarAccess.getSimpleNamesAccess().getBrackAssignment_1_0()); 
            // InternalFortXTrans.g:3836:2: ( rule__SimpleNames__BrackAssignment_1_0 )
            // InternalFortXTrans.g:3836:3: rule__SimpleNames__BrackAssignment_1_0
            {
            pushFollow(FOLLOW_2);
            rule__SimpleNames__BrackAssignment_1_0();

            state._fsp--;


            }

             after(grammarAccess.getSimpleNamesAccess().getBrackAssignment_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleNames__Group_1__0__Impl"


    // $ANTLR start "rule__SimpleNames__Group_1__1"
    // InternalFortXTrans.g:3844:1: rule__SimpleNames__Group_1__1 : rule__SimpleNames__Group_1__1__Impl rule__SimpleNames__Group_1__2 ;
    public final void rule__SimpleNames__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3848:1: ( rule__SimpleNames__Group_1__1__Impl rule__SimpleNames__Group_1__2 )
            // InternalFortXTrans.g:3849:2: rule__SimpleNames__Group_1__1__Impl rule__SimpleNames__Group_1__2
            {
            pushFollow(FOLLOW_14);
            rule__SimpleNames__Group_1__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__SimpleNames__Group_1__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleNames__Group_1__1"


    // $ANTLR start "rule__SimpleNames__Group_1__1__Impl"
    // InternalFortXTrans.g:3856:1: rule__SimpleNames__Group_1__1__Impl : ( ( rule__SimpleNames__NameListAssignment_1_1 ) ) ;
    public final void rule__SimpleNames__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3860:1: ( ( ( rule__SimpleNames__NameListAssignment_1_1 ) ) )
            // InternalFortXTrans.g:3861:1: ( ( rule__SimpleNames__NameListAssignment_1_1 ) )
            {
            // InternalFortXTrans.g:3861:1: ( ( rule__SimpleNames__NameListAssignment_1_1 ) )
            // InternalFortXTrans.g:3862:2: ( rule__SimpleNames__NameListAssignment_1_1 )
            {
             before(grammarAccess.getSimpleNamesAccess().getNameListAssignment_1_1()); 
            // InternalFortXTrans.g:3863:2: ( rule__SimpleNames__NameListAssignment_1_1 )
            // InternalFortXTrans.g:3863:3: rule__SimpleNames__NameListAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__SimpleNames__NameListAssignment_1_1();

            state._fsp--;


            }

             after(grammarAccess.getSimpleNamesAccess().getNameListAssignment_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleNames__Group_1__1__Impl"


    // $ANTLR start "rule__SimpleNames__Group_1__2"
    // InternalFortXTrans.g:3871:1: rule__SimpleNames__Group_1__2 : rule__SimpleNames__Group_1__2__Impl rule__SimpleNames__Group_1__3 ;
    public final void rule__SimpleNames__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3875:1: ( rule__SimpleNames__Group_1__2__Impl rule__SimpleNames__Group_1__3 )
            // InternalFortXTrans.g:3876:2: rule__SimpleNames__Group_1__2__Impl rule__SimpleNames__Group_1__3
            {
            pushFollow(FOLLOW_14);
            rule__SimpleNames__Group_1__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__SimpleNames__Group_1__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleNames__Group_1__2"


    // $ANTLR start "rule__SimpleNames__Group_1__2__Impl"
    // InternalFortXTrans.g:3883:1: rule__SimpleNames__Group_1__2__Impl : ( ( rule__SimpleNames__Group_1_2__0 )* ) ;
    public final void rule__SimpleNames__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3887:1: ( ( ( rule__SimpleNames__Group_1_2__0 )* ) )
            // InternalFortXTrans.g:3888:1: ( ( rule__SimpleNames__Group_1_2__0 )* )
            {
            // InternalFortXTrans.g:3888:1: ( ( rule__SimpleNames__Group_1_2__0 )* )
            // InternalFortXTrans.g:3889:2: ( rule__SimpleNames__Group_1_2__0 )*
            {
             before(grammarAccess.getSimpleNamesAccess().getGroup_1_2()); 
            // InternalFortXTrans.g:3890:2: ( rule__SimpleNames__Group_1_2__0 )*
            loop41:
            do {
                int alt41=2;
                int LA41_0 = input.LA(1);

                if ( (LA41_0==29) ) {
                    alt41=1;
                }


                switch (alt41) {
            	case 1 :
            	    // InternalFortXTrans.g:3890:3: rule__SimpleNames__Group_1_2__0
            	    {
            	    pushFollow(FOLLOW_15);
            	    rule__SimpleNames__Group_1_2__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop41;
                }
            } while (true);

             after(grammarAccess.getSimpleNamesAccess().getGroup_1_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleNames__Group_1__2__Impl"


    // $ANTLR start "rule__SimpleNames__Group_1__3"
    // InternalFortXTrans.g:3898:1: rule__SimpleNames__Group_1__3 : rule__SimpleNames__Group_1__3__Impl ;
    public final void rule__SimpleNames__Group_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3902:1: ( rule__SimpleNames__Group_1__3__Impl )
            // InternalFortXTrans.g:3903:2: rule__SimpleNames__Group_1__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__SimpleNames__Group_1__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleNames__Group_1__3"


    // $ANTLR start "rule__SimpleNames__Group_1__3__Impl"
    // InternalFortXTrans.g:3909:1: rule__SimpleNames__Group_1__3__Impl : ( '}' ) ;
    public final void rule__SimpleNames__Group_1__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3913:1: ( ( '}' ) )
            // InternalFortXTrans.g:3914:1: ( '}' )
            {
            // InternalFortXTrans.g:3914:1: ( '}' )
            // InternalFortXTrans.g:3915:2: '}'
            {
             before(grammarAccess.getSimpleNamesAccess().getRightCurlyBracketKeyword_1_3()); 
            match(input,28,FOLLOW_2); 
             after(grammarAccess.getSimpleNamesAccess().getRightCurlyBracketKeyword_1_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleNames__Group_1__3__Impl"


    // $ANTLR start "rule__SimpleNames__Group_1_2__0"
    // InternalFortXTrans.g:3925:1: rule__SimpleNames__Group_1_2__0 : rule__SimpleNames__Group_1_2__0__Impl rule__SimpleNames__Group_1_2__1 ;
    public final void rule__SimpleNames__Group_1_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3929:1: ( rule__SimpleNames__Group_1_2__0__Impl rule__SimpleNames__Group_1_2__1 )
            // InternalFortXTrans.g:3930:2: rule__SimpleNames__Group_1_2__0__Impl rule__SimpleNames__Group_1_2__1
            {
            pushFollow(FOLLOW_5);
            rule__SimpleNames__Group_1_2__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__SimpleNames__Group_1_2__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleNames__Group_1_2__0"


    // $ANTLR start "rule__SimpleNames__Group_1_2__0__Impl"
    // InternalFortXTrans.g:3937:1: rule__SimpleNames__Group_1_2__0__Impl : ( ',' ) ;
    public final void rule__SimpleNames__Group_1_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3941:1: ( ( ',' ) )
            // InternalFortXTrans.g:3942:1: ( ',' )
            {
            // InternalFortXTrans.g:3942:1: ( ',' )
            // InternalFortXTrans.g:3943:2: ','
            {
             before(grammarAccess.getSimpleNamesAccess().getCommaKeyword_1_2_0()); 
            match(input,29,FOLLOW_2); 
             after(grammarAccess.getSimpleNamesAccess().getCommaKeyword_1_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleNames__Group_1_2__0__Impl"


    // $ANTLR start "rule__SimpleNames__Group_1_2__1"
    // InternalFortXTrans.g:3952:1: rule__SimpleNames__Group_1_2__1 : rule__SimpleNames__Group_1_2__1__Impl ;
    public final void rule__SimpleNames__Group_1_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3956:1: ( rule__SimpleNames__Group_1_2__1__Impl )
            // InternalFortXTrans.g:3957:2: rule__SimpleNames__Group_1_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__SimpleNames__Group_1_2__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleNames__Group_1_2__1"


    // $ANTLR start "rule__SimpleNames__Group_1_2__1__Impl"
    // InternalFortXTrans.g:3963:1: rule__SimpleNames__Group_1_2__1__Impl : ( ( rule__SimpleNames__NameListAssignment_1_2_1 ) ) ;
    public final void rule__SimpleNames__Group_1_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3967:1: ( ( ( rule__SimpleNames__NameListAssignment_1_2_1 ) ) )
            // InternalFortXTrans.g:3968:1: ( ( rule__SimpleNames__NameListAssignment_1_2_1 ) )
            {
            // InternalFortXTrans.g:3968:1: ( ( rule__SimpleNames__NameListAssignment_1_2_1 ) )
            // InternalFortXTrans.g:3969:2: ( rule__SimpleNames__NameListAssignment_1_2_1 )
            {
             before(grammarAccess.getSimpleNamesAccess().getNameListAssignment_1_2_1()); 
            // InternalFortXTrans.g:3970:2: ( rule__SimpleNames__NameListAssignment_1_2_1 )
            // InternalFortXTrans.g:3970:3: rule__SimpleNames__NameListAssignment_1_2_1
            {
            pushFollow(FOLLOW_2);
            rule__SimpleNames__NameListAssignment_1_2_1();

            state._fsp--;


            }

             after(grammarAccess.getSimpleNamesAccess().getNameListAssignment_1_2_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleNames__Group_1_2__1__Impl"


    // $ANTLR start "rule__AliasedSimpleName__Group__0"
    // InternalFortXTrans.g:3979:1: rule__AliasedSimpleName__Group__0 : rule__AliasedSimpleName__Group__0__Impl rule__AliasedSimpleName__Group__1 ;
    public final void rule__AliasedSimpleName__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3983:1: ( rule__AliasedSimpleName__Group__0__Impl rule__AliasedSimpleName__Group__1 )
            // InternalFortXTrans.g:3984:2: rule__AliasedSimpleName__Group__0__Impl rule__AliasedSimpleName__Group__1
            {
            pushFollow(FOLLOW_20);
            rule__AliasedSimpleName__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__AliasedSimpleName__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedSimpleName__Group__0"


    // $ANTLR start "rule__AliasedSimpleName__Group__0__Impl"
    // InternalFortXTrans.g:3991:1: rule__AliasedSimpleName__Group__0__Impl : ( ( rule__AliasedSimpleName__OrigAssignment_0 ) ) ;
    public final void rule__AliasedSimpleName__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3995:1: ( ( ( rule__AliasedSimpleName__OrigAssignment_0 ) ) )
            // InternalFortXTrans.g:3996:1: ( ( rule__AliasedSimpleName__OrigAssignment_0 ) )
            {
            // InternalFortXTrans.g:3996:1: ( ( rule__AliasedSimpleName__OrigAssignment_0 ) )
            // InternalFortXTrans.g:3997:2: ( rule__AliasedSimpleName__OrigAssignment_0 )
            {
             before(grammarAccess.getAliasedSimpleNameAccess().getOrigAssignment_0()); 
            // InternalFortXTrans.g:3998:2: ( rule__AliasedSimpleName__OrigAssignment_0 )
            // InternalFortXTrans.g:3998:3: rule__AliasedSimpleName__OrigAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__AliasedSimpleName__OrigAssignment_0();

            state._fsp--;


            }

             after(grammarAccess.getAliasedSimpleNameAccess().getOrigAssignment_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedSimpleName__Group__0__Impl"


    // $ANTLR start "rule__AliasedSimpleName__Group__1"
    // InternalFortXTrans.g:4006:1: rule__AliasedSimpleName__Group__1 : rule__AliasedSimpleName__Group__1__Impl ;
    public final void rule__AliasedSimpleName__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4010:1: ( rule__AliasedSimpleName__Group__1__Impl )
            // InternalFortXTrans.g:4011:2: rule__AliasedSimpleName__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AliasedSimpleName__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedSimpleName__Group__1"


    // $ANTLR start "rule__AliasedSimpleName__Group__1__Impl"
    // InternalFortXTrans.g:4017:1: rule__AliasedSimpleName__Group__1__Impl : ( ( rule__AliasedSimpleName__Group_1__0 )? ) ;
    public final void rule__AliasedSimpleName__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4021:1: ( ( ( rule__AliasedSimpleName__Group_1__0 )? ) )
            // InternalFortXTrans.g:4022:1: ( ( rule__AliasedSimpleName__Group_1__0 )? )
            {
            // InternalFortXTrans.g:4022:1: ( ( rule__AliasedSimpleName__Group_1__0 )? )
            // InternalFortXTrans.g:4023:2: ( rule__AliasedSimpleName__Group_1__0 )?
            {
             before(grammarAccess.getAliasedSimpleNameAccess().getGroup_1()); 
            // InternalFortXTrans.g:4024:2: ( rule__AliasedSimpleName__Group_1__0 )?
            int alt42=2;
            int LA42_0 = input.LA(1);

            if ( (LA42_0==32) ) {
                alt42=1;
            }
            switch (alt42) {
                case 1 :
                    // InternalFortXTrans.g:4024:3: rule__AliasedSimpleName__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__AliasedSimpleName__Group_1__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getAliasedSimpleNameAccess().getGroup_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedSimpleName__Group__1__Impl"


    // $ANTLR start "rule__AliasedSimpleName__Group_1__0"
    // InternalFortXTrans.g:4033:1: rule__AliasedSimpleName__Group_1__0 : rule__AliasedSimpleName__Group_1__0__Impl rule__AliasedSimpleName__Group_1__1 ;
    public final void rule__AliasedSimpleName__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4037:1: ( rule__AliasedSimpleName__Group_1__0__Impl rule__AliasedSimpleName__Group_1__1 )
            // InternalFortXTrans.g:4038:2: rule__AliasedSimpleName__Group_1__0__Impl rule__AliasedSimpleName__Group_1__1
            {
            pushFollow(FOLLOW_5);
            rule__AliasedSimpleName__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__AliasedSimpleName__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedSimpleName__Group_1__0"


    // $ANTLR start "rule__AliasedSimpleName__Group_1__0__Impl"
    // InternalFortXTrans.g:4045:1: rule__AliasedSimpleName__Group_1__0__Impl : ( 'as' ) ;
    public final void rule__AliasedSimpleName__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4049:1: ( ( 'as' ) )
            // InternalFortXTrans.g:4050:1: ( 'as' )
            {
            // InternalFortXTrans.g:4050:1: ( 'as' )
            // InternalFortXTrans.g:4051:2: 'as'
            {
             before(grammarAccess.getAliasedSimpleNameAccess().getAsKeyword_1_0()); 
            match(input,32,FOLLOW_2); 
             after(grammarAccess.getAliasedSimpleNameAccess().getAsKeyword_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedSimpleName__Group_1__0__Impl"


    // $ANTLR start "rule__AliasedSimpleName__Group_1__1"
    // InternalFortXTrans.g:4060:1: rule__AliasedSimpleName__Group_1__1 : rule__AliasedSimpleName__Group_1__1__Impl ;
    public final void rule__AliasedSimpleName__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4064:1: ( rule__AliasedSimpleName__Group_1__1__Impl )
            // InternalFortXTrans.g:4065:2: rule__AliasedSimpleName__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AliasedSimpleName__Group_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedSimpleName__Group_1__1"


    // $ANTLR start "rule__AliasedSimpleName__Group_1__1__Impl"
    // InternalFortXTrans.g:4071:1: rule__AliasedSimpleName__Group_1__1__Impl : ( ( rule__AliasedSimpleName__AsNameAssignment_1_1 ) ) ;
    public final void rule__AliasedSimpleName__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4075:1: ( ( ( rule__AliasedSimpleName__AsNameAssignment_1_1 ) ) )
            // InternalFortXTrans.g:4076:1: ( ( rule__AliasedSimpleName__AsNameAssignment_1_1 ) )
            {
            // InternalFortXTrans.g:4076:1: ( ( rule__AliasedSimpleName__AsNameAssignment_1_1 ) )
            // InternalFortXTrans.g:4077:2: ( rule__AliasedSimpleName__AsNameAssignment_1_1 )
            {
             before(grammarAccess.getAliasedSimpleNameAccess().getAsNameAssignment_1_1()); 
            // InternalFortXTrans.g:4078:2: ( rule__AliasedSimpleName__AsNameAssignment_1_1 )
            // InternalFortXTrans.g:4078:3: rule__AliasedSimpleName__AsNameAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__AliasedSimpleName__AsNameAssignment_1_1();

            state._fsp--;


            }

             after(grammarAccess.getAliasedSimpleNameAccess().getAsNameAssignment_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedSimpleName__Group_1__1__Impl"


    // $ANTLR start "rule__AliasedAPINames__Group_1__0"
    // InternalFortXTrans.g:4087:1: rule__AliasedAPINames__Group_1__0 : rule__AliasedAPINames__Group_1__0__Impl rule__AliasedAPINames__Group_1__1 ;
    public final void rule__AliasedAPINames__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4091:1: ( rule__AliasedAPINames__Group_1__0__Impl rule__AliasedAPINames__Group_1__1 )
            // InternalFortXTrans.g:4092:2: rule__AliasedAPINames__Group_1__0__Impl rule__AliasedAPINames__Group_1__1
            {
            pushFollow(FOLLOW_5);
            rule__AliasedAPINames__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__AliasedAPINames__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedAPINames__Group_1__0"


    // $ANTLR start "rule__AliasedAPINames__Group_1__0__Impl"
    // InternalFortXTrans.g:4099:1: rule__AliasedAPINames__Group_1__0__Impl : ( ( rule__AliasedAPINames__BrackAssignment_1_0 ) ) ;
    public final void rule__AliasedAPINames__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4103:1: ( ( ( rule__AliasedAPINames__BrackAssignment_1_0 ) ) )
            // InternalFortXTrans.g:4104:1: ( ( rule__AliasedAPINames__BrackAssignment_1_0 ) )
            {
            // InternalFortXTrans.g:4104:1: ( ( rule__AliasedAPINames__BrackAssignment_1_0 ) )
            // InternalFortXTrans.g:4105:2: ( rule__AliasedAPINames__BrackAssignment_1_0 )
            {
             before(grammarAccess.getAliasedAPINamesAccess().getBrackAssignment_1_0()); 
            // InternalFortXTrans.g:4106:2: ( rule__AliasedAPINames__BrackAssignment_1_0 )
            // InternalFortXTrans.g:4106:3: rule__AliasedAPINames__BrackAssignment_1_0
            {
            pushFollow(FOLLOW_2);
            rule__AliasedAPINames__BrackAssignment_1_0();

            state._fsp--;


            }

             after(grammarAccess.getAliasedAPINamesAccess().getBrackAssignment_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedAPINames__Group_1__0__Impl"


    // $ANTLR start "rule__AliasedAPINames__Group_1__1"
    // InternalFortXTrans.g:4114:1: rule__AliasedAPINames__Group_1__1 : rule__AliasedAPINames__Group_1__1__Impl rule__AliasedAPINames__Group_1__2 ;
    public final void rule__AliasedAPINames__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4118:1: ( rule__AliasedAPINames__Group_1__1__Impl rule__AliasedAPINames__Group_1__2 )
            // InternalFortXTrans.g:4119:2: rule__AliasedAPINames__Group_1__1__Impl rule__AliasedAPINames__Group_1__2
            {
            pushFollow(FOLLOW_14);
            rule__AliasedAPINames__Group_1__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__AliasedAPINames__Group_1__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedAPINames__Group_1__1"


    // $ANTLR start "rule__AliasedAPINames__Group_1__1__Impl"
    // InternalFortXTrans.g:4126:1: rule__AliasedAPINames__Group_1__1__Impl : ( ( rule__AliasedAPINames__NameListAssignment_1_1 ) ) ;
    public final void rule__AliasedAPINames__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4130:1: ( ( ( rule__AliasedAPINames__NameListAssignment_1_1 ) ) )
            // InternalFortXTrans.g:4131:1: ( ( rule__AliasedAPINames__NameListAssignment_1_1 ) )
            {
            // InternalFortXTrans.g:4131:1: ( ( rule__AliasedAPINames__NameListAssignment_1_1 ) )
            // InternalFortXTrans.g:4132:2: ( rule__AliasedAPINames__NameListAssignment_1_1 )
            {
             before(grammarAccess.getAliasedAPINamesAccess().getNameListAssignment_1_1()); 
            // InternalFortXTrans.g:4133:2: ( rule__AliasedAPINames__NameListAssignment_1_1 )
            // InternalFortXTrans.g:4133:3: rule__AliasedAPINames__NameListAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__AliasedAPINames__NameListAssignment_1_1();

            state._fsp--;


            }

             after(grammarAccess.getAliasedAPINamesAccess().getNameListAssignment_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedAPINames__Group_1__1__Impl"


    // $ANTLR start "rule__AliasedAPINames__Group_1__2"
    // InternalFortXTrans.g:4141:1: rule__AliasedAPINames__Group_1__2 : rule__AliasedAPINames__Group_1__2__Impl rule__AliasedAPINames__Group_1__3 ;
    public final void rule__AliasedAPINames__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4145:1: ( rule__AliasedAPINames__Group_1__2__Impl rule__AliasedAPINames__Group_1__3 )
            // InternalFortXTrans.g:4146:2: rule__AliasedAPINames__Group_1__2__Impl rule__AliasedAPINames__Group_1__3
            {
            pushFollow(FOLLOW_14);
            rule__AliasedAPINames__Group_1__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__AliasedAPINames__Group_1__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedAPINames__Group_1__2"


    // $ANTLR start "rule__AliasedAPINames__Group_1__2__Impl"
    // InternalFortXTrans.g:4153:1: rule__AliasedAPINames__Group_1__2__Impl : ( ( rule__AliasedAPINames__Group_1_2__0 )* ) ;
    public final void rule__AliasedAPINames__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4157:1: ( ( ( rule__AliasedAPINames__Group_1_2__0 )* ) )
            // InternalFortXTrans.g:4158:1: ( ( rule__AliasedAPINames__Group_1_2__0 )* )
            {
            // InternalFortXTrans.g:4158:1: ( ( rule__AliasedAPINames__Group_1_2__0 )* )
            // InternalFortXTrans.g:4159:2: ( rule__AliasedAPINames__Group_1_2__0 )*
            {
             before(grammarAccess.getAliasedAPINamesAccess().getGroup_1_2()); 
            // InternalFortXTrans.g:4160:2: ( rule__AliasedAPINames__Group_1_2__0 )*
            loop43:
            do {
                int alt43=2;
                int LA43_0 = input.LA(1);

                if ( (LA43_0==29) ) {
                    alt43=1;
                }


                switch (alt43) {
            	case 1 :
            	    // InternalFortXTrans.g:4160:3: rule__AliasedAPINames__Group_1_2__0
            	    {
            	    pushFollow(FOLLOW_15);
            	    rule__AliasedAPINames__Group_1_2__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop43;
                }
            } while (true);

             after(grammarAccess.getAliasedAPINamesAccess().getGroup_1_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedAPINames__Group_1__2__Impl"


    // $ANTLR start "rule__AliasedAPINames__Group_1__3"
    // InternalFortXTrans.g:4168:1: rule__AliasedAPINames__Group_1__3 : rule__AliasedAPINames__Group_1__3__Impl ;
    public final void rule__AliasedAPINames__Group_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4172:1: ( rule__AliasedAPINames__Group_1__3__Impl )
            // InternalFortXTrans.g:4173:2: rule__AliasedAPINames__Group_1__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AliasedAPINames__Group_1__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedAPINames__Group_1__3"


    // $ANTLR start "rule__AliasedAPINames__Group_1__3__Impl"
    // InternalFortXTrans.g:4179:1: rule__AliasedAPINames__Group_1__3__Impl : ( '}' ) ;
    public final void rule__AliasedAPINames__Group_1__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4183:1: ( ( '}' ) )
            // InternalFortXTrans.g:4184:1: ( '}' )
            {
            // InternalFortXTrans.g:4184:1: ( '}' )
            // InternalFortXTrans.g:4185:2: '}'
            {
             before(grammarAccess.getAliasedAPINamesAccess().getRightCurlyBracketKeyword_1_3()); 
            match(input,28,FOLLOW_2); 
             after(grammarAccess.getAliasedAPINamesAccess().getRightCurlyBracketKeyword_1_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedAPINames__Group_1__3__Impl"


    // $ANTLR start "rule__AliasedAPINames__Group_1_2__0"
    // InternalFortXTrans.g:4195:1: rule__AliasedAPINames__Group_1_2__0 : rule__AliasedAPINames__Group_1_2__0__Impl rule__AliasedAPINames__Group_1_2__1 ;
    public final void rule__AliasedAPINames__Group_1_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4199:1: ( rule__AliasedAPINames__Group_1_2__0__Impl rule__AliasedAPINames__Group_1_2__1 )
            // InternalFortXTrans.g:4200:2: rule__AliasedAPINames__Group_1_2__0__Impl rule__AliasedAPINames__Group_1_2__1
            {
            pushFollow(FOLLOW_5);
            rule__AliasedAPINames__Group_1_2__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__AliasedAPINames__Group_1_2__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedAPINames__Group_1_2__0"


    // $ANTLR start "rule__AliasedAPINames__Group_1_2__0__Impl"
    // InternalFortXTrans.g:4207:1: rule__AliasedAPINames__Group_1_2__0__Impl : ( ',' ) ;
    public final void rule__AliasedAPINames__Group_1_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4211:1: ( ( ',' ) )
            // InternalFortXTrans.g:4212:1: ( ',' )
            {
            // InternalFortXTrans.g:4212:1: ( ',' )
            // InternalFortXTrans.g:4213:2: ','
            {
             before(grammarAccess.getAliasedAPINamesAccess().getCommaKeyword_1_2_0()); 
            match(input,29,FOLLOW_2); 
             after(grammarAccess.getAliasedAPINamesAccess().getCommaKeyword_1_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedAPINames__Group_1_2__0__Impl"


    // $ANTLR start "rule__AliasedAPINames__Group_1_2__1"
    // InternalFortXTrans.g:4222:1: rule__AliasedAPINames__Group_1_2__1 : rule__AliasedAPINames__Group_1_2__1__Impl ;
    public final void rule__AliasedAPINames__Group_1_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4226:1: ( rule__AliasedAPINames__Group_1_2__1__Impl )
            // InternalFortXTrans.g:4227:2: rule__AliasedAPINames__Group_1_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AliasedAPINames__Group_1_2__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedAPINames__Group_1_2__1"


    // $ANTLR start "rule__AliasedAPINames__Group_1_2__1__Impl"
    // InternalFortXTrans.g:4233:1: rule__AliasedAPINames__Group_1_2__1__Impl : ( ( rule__AliasedAPINames__NameListAssignment_1_2_1 ) ) ;
    public final void rule__AliasedAPINames__Group_1_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4237:1: ( ( ( rule__AliasedAPINames__NameListAssignment_1_2_1 ) ) )
            // InternalFortXTrans.g:4238:1: ( ( rule__AliasedAPINames__NameListAssignment_1_2_1 ) )
            {
            // InternalFortXTrans.g:4238:1: ( ( rule__AliasedAPINames__NameListAssignment_1_2_1 ) )
            // InternalFortXTrans.g:4239:2: ( rule__AliasedAPINames__NameListAssignment_1_2_1 )
            {
             before(grammarAccess.getAliasedAPINamesAccess().getNameListAssignment_1_2_1()); 
            // InternalFortXTrans.g:4240:2: ( rule__AliasedAPINames__NameListAssignment_1_2_1 )
            // InternalFortXTrans.g:4240:3: rule__AliasedAPINames__NameListAssignment_1_2_1
            {
            pushFollow(FOLLOW_2);
            rule__AliasedAPINames__NameListAssignment_1_2_1();

            state._fsp--;


            }

             after(grammarAccess.getAliasedAPINamesAccess().getNameListAssignment_1_2_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedAPINames__Group_1_2__1__Impl"


    // $ANTLR start "rule__AliasedAPIName__Group__0"
    // InternalFortXTrans.g:4249:1: rule__AliasedAPIName__Group__0 : rule__AliasedAPIName__Group__0__Impl rule__AliasedAPIName__Group__1 ;
    public final void rule__AliasedAPIName__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4253:1: ( rule__AliasedAPIName__Group__0__Impl rule__AliasedAPIName__Group__1 )
            // InternalFortXTrans.g:4254:2: rule__AliasedAPIName__Group__0__Impl rule__AliasedAPIName__Group__1
            {
            pushFollow(FOLLOW_20);
            rule__AliasedAPIName__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__AliasedAPIName__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedAPIName__Group__0"


    // $ANTLR start "rule__AliasedAPIName__Group__0__Impl"
    // InternalFortXTrans.g:4261:1: rule__AliasedAPIName__Group__0__Impl : ( ( rule__AliasedAPIName__OrigAssignment_0 ) ) ;
    public final void rule__AliasedAPIName__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4265:1: ( ( ( rule__AliasedAPIName__OrigAssignment_0 ) ) )
            // InternalFortXTrans.g:4266:1: ( ( rule__AliasedAPIName__OrigAssignment_0 ) )
            {
            // InternalFortXTrans.g:4266:1: ( ( rule__AliasedAPIName__OrigAssignment_0 ) )
            // InternalFortXTrans.g:4267:2: ( rule__AliasedAPIName__OrigAssignment_0 )
            {
             before(grammarAccess.getAliasedAPINameAccess().getOrigAssignment_0()); 
            // InternalFortXTrans.g:4268:2: ( rule__AliasedAPIName__OrigAssignment_0 )
            // InternalFortXTrans.g:4268:3: rule__AliasedAPIName__OrigAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__AliasedAPIName__OrigAssignment_0();

            state._fsp--;


            }

             after(grammarAccess.getAliasedAPINameAccess().getOrigAssignment_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedAPIName__Group__0__Impl"


    // $ANTLR start "rule__AliasedAPIName__Group__1"
    // InternalFortXTrans.g:4276:1: rule__AliasedAPIName__Group__1 : rule__AliasedAPIName__Group__1__Impl ;
    public final void rule__AliasedAPIName__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4280:1: ( rule__AliasedAPIName__Group__1__Impl )
            // InternalFortXTrans.g:4281:2: rule__AliasedAPIName__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AliasedAPIName__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedAPIName__Group__1"


    // $ANTLR start "rule__AliasedAPIName__Group__1__Impl"
    // InternalFortXTrans.g:4287:1: rule__AliasedAPIName__Group__1__Impl : ( ( rule__AliasedAPIName__Group_1__0 )? ) ;
    public final void rule__AliasedAPIName__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4291:1: ( ( ( rule__AliasedAPIName__Group_1__0 )? ) )
            // InternalFortXTrans.g:4292:1: ( ( rule__AliasedAPIName__Group_1__0 )? )
            {
            // InternalFortXTrans.g:4292:1: ( ( rule__AliasedAPIName__Group_1__0 )? )
            // InternalFortXTrans.g:4293:2: ( rule__AliasedAPIName__Group_1__0 )?
            {
             before(grammarAccess.getAliasedAPINameAccess().getGroup_1()); 
            // InternalFortXTrans.g:4294:2: ( rule__AliasedAPIName__Group_1__0 )?
            int alt44=2;
            int LA44_0 = input.LA(1);

            if ( (LA44_0==32) ) {
                alt44=1;
            }
            switch (alt44) {
                case 1 :
                    // InternalFortXTrans.g:4294:3: rule__AliasedAPIName__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__AliasedAPIName__Group_1__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getAliasedAPINameAccess().getGroup_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedAPIName__Group__1__Impl"


    // $ANTLR start "rule__AliasedAPIName__Group_1__0"
    // InternalFortXTrans.g:4303:1: rule__AliasedAPIName__Group_1__0 : rule__AliasedAPIName__Group_1__0__Impl rule__AliasedAPIName__Group_1__1 ;
    public final void rule__AliasedAPIName__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4307:1: ( rule__AliasedAPIName__Group_1__0__Impl rule__AliasedAPIName__Group_1__1 )
            // InternalFortXTrans.g:4308:2: rule__AliasedAPIName__Group_1__0__Impl rule__AliasedAPIName__Group_1__1
            {
            pushFollow(FOLLOW_5);
            rule__AliasedAPIName__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__AliasedAPIName__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedAPIName__Group_1__0"


    // $ANTLR start "rule__AliasedAPIName__Group_1__0__Impl"
    // InternalFortXTrans.g:4315:1: rule__AliasedAPIName__Group_1__0__Impl : ( 'as' ) ;
    public final void rule__AliasedAPIName__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4319:1: ( ( 'as' ) )
            // InternalFortXTrans.g:4320:1: ( 'as' )
            {
            // InternalFortXTrans.g:4320:1: ( 'as' )
            // InternalFortXTrans.g:4321:2: 'as'
            {
             before(grammarAccess.getAliasedAPINameAccess().getAsKeyword_1_0()); 
            match(input,32,FOLLOW_2); 
             after(grammarAccess.getAliasedAPINameAccess().getAsKeyword_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedAPIName__Group_1__0__Impl"


    // $ANTLR start "rule__AliasedAPIName__Group_1__1"
    // InternalFortXTrans.g:4330:1: rule__AliasedAPIName__Group_1__1 : rule__AliasedAPIName__Group_1__1__Impl ;
    public final void rule__AliasedAPIName__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4334:1: ( rule__AliasedAPIName__Group_1__1__Impl )
            // InternalFortXTrans.g:4335:2: rule__AliasedAPIName__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AliasedAPIName__Group_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedAPIName__Group_1__1"


    // $ANTLR start "rule__AliasedAPIName__Group_1__1__Impl"
    // InternalFortXTrans.g:4341:1: rule__AliasedAPIName__Group_1__1__Impl : ( ( rule__AliasedAPIName__AsNameAssignment_1_1 ) ) ;
    public final void rule__AliasedAPIName__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4345:1: ( ( ( rule__AliasedAPIName__AsNameAssignment_1_1 ) ) )
            // InternalFortXTrans.g:4346:1: ( ( rule__AliasedAPIName__AsNameAssignment_1_1 ) )
            {
            // InternalFortXTrans.g:4346:1: ( ( rule__AliasedAPIName__AsNameAssignment_1_1 ) )
            // InternalFortXTrans.g:4347:2: ( rule__AliasedAPIName__AsNameAssignment_1_1 )
            {
             before(grammarAccess.getAliasedAPINameAccess().getAsNameAssignment_1_1()); 
            // InternalFortXTrans.g:4348:2: ( rule__AliasedAPIName__AsNameAssignment_1_1 )
            // InternalFortXTrans.g:4348:3: rule__AliasedAPIName__AsNameAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__AliasedAPIName__AsNameAssignment_1_1();

            state._fsp--;


            }

             after(grammarAccess.getAliasedAPINameAccess().getAsNameAssignment_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedAPIName__Group_1__1__Impl"


    // $ANTLR start "rule__ValParam__Group_1__0"
    // InternalFortXTrans.g:4357:1: rule__ValParam__Group_1__0 : rule__ValParam__Group_1__0__Impl rule__ValParam__Group_1__1 ;
    public final void rule__ValParam__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4361:1: ( rule__ValParam__Group_1__0__Impl rule__ValParam__Group_1__1 )
            // InternalFortXTrans.g:4362:2: rule__ValParam__Group_1__0__Impl rule__ValParam__Group_1__1
            {
            pushFollow(FOLLOW_24);
            rule__ValParam__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ValParam__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValParam__Group_1__0"


    // $ANTLR start "rule__ValParam__Group_1__0__Impl"
    // InternalFortXTrans.g:4369:1: rule__ValParam__Group_1__0__Impl : ( ( rule__ValParam__BrackAssignment_1_0 ) ) ;
    public final void rule__ValParam__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4373:1: ( ( ( rule__ValParam__BrackAssignment_1_0 ) ) )
            // InternalFortXTrans.g:4374:1: ( ( rule__ValParam__BrackAssignment_1_0 ) )
            {
            // InternalFortXTrans.g:4374:1: ( ( rule__ValParam__BrackAssignment_1_0 ) )
            // InternalFortXTrans.g:4375:2: ( rule__ValParam__BrackAssignment_1_0 )
            {
             before(grammarAccess.getValParamAccess().getBrackAssignment_1_0()); 
            // InternalFortXTrans.g:4376:2: ( rule__ValParam__BrackAssignment_1_0 )
            // InternalFortXTrans.g:4376:3: rule__ValParam__BrackAssignment_1_0
            {
            pushFollow(FOLLOW_2);
            rule__ValParam__BrackAssignment_1_0();

            state._fsp--;


            }

             after(grammarAccess.getValParamAccess().getBrackAssignment_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValParam__Group_1__0__Impl"


    // $ANTLR start "rule__ValParam__Group_1__1"
    // InternalFortXTrans.g:4384:1: rule__ValParam__Group_1__1 : rule__ValParam__Group_1__1__Impl rule__ValParam__Group_1__2 ;
    public final void rule__ValParam__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4388:1: ( rule__ValParam__Group_1__1__Impl rule__ValParam__Group_1__2 )
            // InternalFortXTrans.g:4389:2: rule__ValParam__Group_1__1__Impl rule__ValParam__Group_1__2
            {
            pushFollow(FOLLOW_24);
            rule__ValParam__Group_1__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ValParam__Group_1__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValParam__Group_1__1"


    // $ANTLR start "rule__ValParam__Group_1__1__Impl"
    // InternalFortXTrans.g:4396:1: rule__ValParam__Group_1__1__Impl : ( ( rule__ValParam__Group_1_1__0 )? ) ;
    public final void rule__ValParam__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4400:1: ( ( ( rule__ValParam__Group_1_1__0 )? ) )
            // InternalFortXTrans.g:4401:1: ( ( rule__ValParam__Group_1_1__0 )? )
            {
            // InternalFortXTrans.g:4401:1: ( ( rule__ValParam__Group_1_1__0 )? )
            // InternalFortXTrans.g:4402:2: ( rule__ValParam__Group_1_1__0 )?
            {
             before(grammarAccess.getValParamAccess().getGroup_1_1()); 
            // InternalFortXTrans.g:4403:2: ( rule__ValParam__Group_1_1__0 )?
            int alt45=2;
            int LA45_0 = input.LA(1);

            if ( (LA45_0==RULE_ID) ) {
                alt45=1;
            }
            switch (alt45) {
                case 1 :
                    // InternalFortXTrans.g:4403:3: rule__ValParam__Group_1_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ValParam__Group_1_1__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getValParamAccess().getGroup_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValParam__Group_1__1__Impl"


    // $ANTLR start "rule__ValParam__Group_1__2"
    // InternalFortXTrans.g:4411:1: rule__ValParam__Group_1__2 : rule__ValParam__Group_1__2__Impl ;
    public final void rule__ValParam__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4415:1: ( rule__ValParam__Group_1__2__Impl )
            // InternalFortXTrans.g:4416:2: rule__ValParam__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ValParam__Group_1__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValParam__Group_1__2"


    // $ANTLR start "rule__ValParam__Group_1__2__Impl"
    // InternalFortXTrans.g:4422:1: rule__ValParam__Group_1__2__Impl : ( ')' ) ;
    public final void rule__ValParam__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4426:1: ( ( ')' ) )
            // InternalFortXTrans.g:4427:1: ( ')' )
            {
            // InternalFortXTrans.g:4427:1: ( ')' )
            // InternalFortXTrans.g:4428:2: ')'
            {
             before(grammarAccess.getValParamAccess().getRightParenthesisKeyword_1_2()); 
            match(input,34,FOLLOW_2); 
             after(grammarAccess.getValParamAccess().getRightParenthesisKeyword_1_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValParam__Group_1__2__Impl"


    // $ANTLR start "rule__ValParam__Group_1_1__0"
    // InternalFortXTrans.g:4438:1: rule__ValParam__Group_1_1__0 : rule__ValParam__Group_1_1__0__Impl rule__ValParam__Group_1_1__1 ;
    public final void rule__ValParam__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4442:1: ( rule__ValParam__Group_1_1__0__Impl rule__ValParam__Group_1_1__1 )
            // InternalFortXTrans.g:4443:2: rule__ValParam__Group_1_1__0__Impl rule__ValParam__Group_1_1__1
            {
            pushFollow(FOLLOW_25);
            rule__ValParam__Group_1_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ValParam__Group_1_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValParam__Group_1_1__0"


    // $ANTLR start "rule__ValParam__Group_1_1__0__Impl"
    // InternalFortXTrans.g:4450:1: rule__ValParam__Group_1_1__0__Impl : ( ( rule__ValParam__ParamsAssignment_1_1_0 ) ) ;
    public final void rule__ValParam__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4454:1: ( ( ( rule__ValParam__ParamsAssignment_1_1_0 ) ) )
            // InternalFortXTrans.g:4455:1: ( ( rule__ValParam__ParamsAssignment_1_1_0 ) )
            {
            // InternalFortXTrans.g:4455:1: ( ( rule__ValParam__ParamsAssignment_1_1_0 ) )
            // InternalFortXTrans.g:4456:2: ( rule__ValParam__ParamsAssignment_1_1_0 )
            {
             before(grammarAccess.getValParamAccess().getParamsAssignment_1_1_0()); 
            // InternalFortXTrans.g:4457:2: ( rule__ValParam__ParamsAssignment_1_1_0 )
            // InternalFortXTrans.g:4457:3: rule__ValParam__ParamsAssignment_1_1_0
            {
            pushFollow(FOLLOW_2);
            rule__ValParam__ParamsAssignment_1_1_0();

            state._fsp--;


            }

             after(grammarAccess.getValParamAccess().getParamsAssignment_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValParam__Group_1_1__0__Impl"


    // $ANTLR start "rule__ValParam__Group_1_1__1"
    // InternalFortXTrans.g:4465:1: rule__ValParam__Group_1_1__1 : rule__ValParam__Group_1_1__1__Impl ;
    public final void rule__ValParam__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4469:1: ( rule__ValParam__Group_1_1__1__Impl )
            // InternalFortXTrans.g:4470:2: rule__ValParam__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ValParam__Group_1_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValParam__Group_1_1__1"


    // $ANTLR start "rule__ValParam__Group_1_1__1__Impl"
    // InternalFortXTrans.g:4476:1: rule__ValParam__Group_1_1__1__Impl : ( ( rule__ValParam__Group_1_1_1__0 )* ) ;
    public final void rule__ValParam__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4480:1: ( ( ( rule__ValParam__Group_1_1_1__0 )* ) )
            // InternalFortXTrans.g:4481:1: ( ( rule__ValParam__Group_1_1_1__0 )* )
            {
            // InternalFortXTrans.g:4481:1: ( ( rule__ValParam__Group_1_1_1__0 )* )
            // InternalFortXTrans.g:4482:2: ( rule__ValParam__Group_1_1_1__0 )*
            {
             before(grammarAccess.getValParamAccess().getGroup_1_1_1()); 
            // InternalFortXTrans.g:4483:2: ( rule__ValParam__Group_1_1_1__0 )*
            loop46:
            do {
                int alt46=2;
                int LA46_0 = input.LA(1);

                if ( (LA46_0==29) ) {
                    alt46=1;
                }


                switch (alt46) {
            	case 1 :
            	    // InternalFortXTrans.g:4483:3: rule__ValParam__Group_1_1_1__0
            	    {
            	    pushFollow(FOLLOW_15);
            	    rule__ValParam__Group_1_1_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop46;
                }
            } while (true);

             after(grammarAccess.getValParamAccess().getGroup_1_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValParam__Group_1_1__1__Impl"


    // $ANTLR start "rule__ValParam__Group_1_1_1__0"
    // InternalFortXTrans.g:4492:1: rule__ValParam__Group_1_1_1__0 : rule__ValParam__Group_1_1_1__0__Impl rule__ValParam__Group_1_1_1__1 ;
    public final void rule__ValParam__Group_1_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4496:1: ( rule__ValParam__Group_1_1_1__0__Impl rule__ValParam__Group_1_1_1__1 )
            // InternalFortXTrans.g:4497:2: rule__ValParam__Group_1_1_1__0__Impl rule__ValParam__Group_1_1_1__1
            {
            pushFollow(FOLLOW_5);
            rule__ValParam__Group_1_1_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ValParam__Group_1_1_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValParam__Group_1_1_1__0"


    // $ANTLR start "rule__ValParam__Group_1_1_1__0__Impl"
    // InternalFortXTrans.g:4504:1: rule__ValParam__Group_1_1_1__0__Impl : ( ',' ) ;
    public final void rule__ValParam__Group_1_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4508:1: ( ( ',' ) )
            // InternalFortXTrans.g:4509:1: ( ',' )
            {
            // InternalFortXTrans.g:4509:1: ( ',' )
            // InternalFortXTrans.g:4510:2: ','
            {
             before(grammarAccess.getValParamAccess().getCommaKeyword_1_1_1_0()); 
            match(input,29,FOLLOW_2); 
             after(grammarAccess.getValParamAccess().getCommaKeyword_1_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValParam__Group_1_1_1__0__Impl"


    // $ANTLR start "rule__ValParam__Group_1_1_1__1"
    // InternalFortXTrans.g:4519:1: rule__ValParam__Group_1_1_1__1 : rule__ValParam__Group_1_1_1__1__Impl ;
    public final void rule__ValParam__Group_1_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4523:1: ( rule__ValParam__Group_1_1_1__1__Impl )
            // InternalFortXTrans.g:4524:2: rule__ValParam__Group_1_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ValParam__Group_1_1_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValParam__Group_1_1_1__1"


    // $ANTLR start "rule__ValParam__Group_1_1_1__1__Impl"
    // InternalFortXTrans.g:4530:1: rule__ValParam__Group_1_1_1__1__Impl : ( ( rule__ValParam__ParamsAssignment_1_1_1_1 ) ) ;
    public final void rule__ValParam__Group_1_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4534:1: ( ( ( rule__ValParam__ParamsAssignment_1_1_1_1 ) ) )
            // InternalFortXTrans.g:4535:1: ( ( rule__ValParam__ParamsAssignment_1_1_1_1 ) )
            {
            // InternalFortXTrans.g:4535:1: ( ( rule__ValParam__ParamsAssignment_1_1_1_1 ) )
            // InternalFortXTrans.g:4536:2: ( rule__ValParam__ParamsAssignment_1_1_1_1 )
            {
             before(grammarAccess.getValParamAccess().getParamsAssignment_1_1_1_1()); 
            // InternalFortXTrans.g:4537:2: ( rule__ValParam__ParamsAssignment_1_1_1_1 )
            // InternalFortXTrans.g:4537:3: rule__ValParam__ParamsAssignment_1_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__ValParam__ParamsAssignment_1_1_1_1();

            state._fsp--;


            }

             after(grammarAccess.getValParamAccess().getParamsAssignment_1_1_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValParam__Group_1_1_1__1__Impl"


    // $ANTLR start "rule__Param__Group__0"
    // InternalFortXTrans.g:4546:1: rule__Param__Group__0 : rule__Param__Group__0__Impl rule__Param__Group__1 ;
    public final void rule__Param__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4550:1: ( rule__Param__Group__0__Impl rule__Param__Group__1 )
            // InternalFortXTrans.g:4551:2: rule__Param__Group__0__Impl rule__Param__Group__1
            {
            pushFollow(FOLLOW_26);
            rule__Param__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Param__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Param__Group__0"


    // $ANTLR start "rule__Param__Group__0__Impl"
    // InternalFortXTrans.g:4558:1: rule__Param__Group__0__Impl : ( ( rule__Param__ParIdAssignment_0 ) ) ;
    public final void rule__Param__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4562:1: ( ( ( rule__Param__ParIdAssignment_0 ) ) )
            // InternalFortXTrans.g:4563:1: ( ( rule__Param__ParIdAssignment_0 ) )
            {
            // InternalFortXTrans.g:4563:1: ( ( rule__Param__ParIdAssignment_0 ) )
            // InternalFortXTrans.g:4564:2: ( rule__Param__ParIdAssignment_0 )
            {
             before(grammarAccess.getParamAccess().getParIdAssignment_0()); 
            // InternalFortXTrans.g:4565:2: ( rule__Param__ParIdAssignment_0 )
            // InternalFortXTrans.g:4565:3: rule__Param__ParIdAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__Param__ParIdAssignment_0();

            state._fsp--;


            }

             after(grammarAccess.getParamAccess().getParIdAssignment_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Param__Group__0__Impl"


    // $ANTLR start "rule__Param__Group__1"
    // InternalFortXTrans.g:4573:1: rule__Param__Group__1 : rule__Param__Group__1__Impl ;
    public final void rule__Param__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4577:1: ( rule__Param__Group__1__Impl )
            // InternalFortXTrans.g:4578:2: rule__Param__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Param__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Param__Group__1"


    // $ANTLR start "rule__Param__Group__1__Impl"
    // InternalFortXTrans.g:4584:1: rule__Param__Group__1__Impl : ( ( rule__Param__IstypeAssignment_1 ) ) ;
    public final void rule__Param__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4588:1: ( ( ( rule__Param__IstypeAssignment_1 ) ) )
            // InternalFortXTrans.g:4589:1: ( ( rule__Param__IstypeAssignment_1 ) )
            {
            // InternalFortXTrans.g:4589:1: ( ( rule__Param__IstypeAssignment_1 ) )
            // InternalFortXTrans.g:4590:2: ( rule__Param__IstypeAssignment_1 )
            {
             before(grammarAccess.getParamAccess().getIstypeAssignment_1()); 
            // InternalFortXTrans.g:4591:2: ( rule__Param__IstypeAssignment_1 )
            // InternalFortXTrans.g:4591:3: rule__Param__IstypeAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__Param__IstypeAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getParamAccess().getIstypeAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Param__Group__1__Impl"


    // $ANTLR start "rule__RetType__Group_0__0"
    // InternalFortXTrans.g:4600:1: rule__RetType__Group_0__0 : rule__RetType__Group_0__0__Impl rule__RetType__Group_0__1 ;
    public final void rule__RetType__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4604:1: ( rule__RetType__Group_0__0__Impl rule__RetType__Group_0__1 )
            // InternalFortXTrans.g:4605:2: rule__RetType__Group_0__0__Impl rule__RetType__Group_0__1
            {
            pushFollow(FOLLOW_27);
            rule__RetType__Group_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__RetType__Group_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RetType__Group_0__0"


    // $ANTLR start "rule__RetType__Group_0__0__Impl"
    // InternalFortXTrans.g:4612:1: rule__RetType__Group_0__0__Impl : ( ':' ) ;
    public final void rule__RetType__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4616:1: ( ( ':' ) )
            // InternalFortXTrans.g:4617:1: ( ':' )
            {
            // InternalFortXTrans.g:4617:1: ( ':' )
            // InternalFortXTrans.g:4618:2: ':'
            {
             before(grammarAccess.getRetTypeAccess().getColonKeyword_0_0()); 
            match(input,35,FOLLOW_2); 
             after(grammarAccess.getRetTypeAccess().getColonKeyword_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RetType__Group_0__0__Impl"


    // $ANTLR start "rule__RetType__Group_0__1"
    // InternalFortXTrans.g:4627:1: rule__RetType__Group_0__1 : rule__RetType__Group_0__1__Impl rule__RetType__Group_0__2 ;
    public final void rule__RetType__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4631:1: ( rule__RetType__Group_0__1__Impl rule__RetType__Group_0__2 )
            // InternalFortXTrans.g:4632:2: rule__RetType__Group_0__1__Impl rule__RetType__Group_0__2
            {
            pushFollow(FOLLOW_28);
            rule__RetType__Group_0__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__RetType__Group_0__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RetType__Group_0__1"


    // $ANTLR start "rule__RetType__Group_0__1__Impl"
    // InternalFortXTrans.g:4639:1: rule__RetType__Group_0__1__Impl : ( ( rule__RetType__EmptyAssignment_0_1 ) ) ;
    public final void rule__RetType__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4643:1: ( ( ( rule__RetType__EmptyAssignment_0_1 ) ) )
            // InternalFortXTrans.g:4644:1: ( ( rule__RetType__EmptyAssignment_0_1 ) )
            {
            // InternalFortXTrans.g:4644:1: ( ( rule__RetType__EmptyAssignment_0_1 ) )
            // InternalFortXTrans.g:4645:2: ( rule__RetType__EmptyAssignment_0_1 )
            {
             before(grammarAccess.getRetTypeAccess().getEmptyAssignment_0_1()); 
            // InternalFortXTrans.g:4646:2: ( rule__RetType__EmptyAssignment_0_1 )
            // InternalFortXTrans.g:4646:3: rule__RetType__EmptyAssignment_0_1
            {
            pushFollow(FOLLOW_2);
            rule__RetType__EmptyAssignment_0_1();

            state._fsp--;


            }

             after(grammarAccess.getRetTypeAccess().getEmptyAssignment_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RetType__Group_0__1__Impl"


    // $ANTLR start "rule__RetType__Group_0__2"
    // InternalFortXTrans.g:4654:1: rule__RetType__Group_0__2 : rule__RetType__Group_0__2__Impl ;
    public final void rule__RetType__Group_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4658:1: ( rule__RetType__Group_0__2__Impl )
            // InternalFortXTrans.g:4659:2: rule__RetType__Group_0__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__RetType__Group_0__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RetType__Group_0__2"


    // $ANTLR start "rule__RetType__Group_0__2__Impl"
    // InternalFortXTrans.g:4665:1: rule__RetType__Group_0__2__Impl : ( ')' ) ;
    public final void rule__RetType__Group_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4669:1: ( ( ')' ) )
            // InternalFortXTrans.g:4670:1: ( ')' )
            {
            // InternalFortXTrans.g:4670:1: ( ')' )
            // InternalFortXTrans.g:4671:2: ')'
            {
             before(grammarAccess.getRetTypeAccess().getRightParenthesisKeyword_0_2()); 
            match(input,34,FOLLOW_2); 
             after(grammarAccess.getRetTypeAccess().getRightParenthesisKeyword_0_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RetType__Group_0__2__Impl"


    // $ANTLR start "rule__RetType__Group_1__0"
    // InternalFortXTrans.g:4681:1: rule__RetType__Group_1__0 : rule__RetType__Group_1__0__Impl rule__RetType__Group_1__1 ;
    public final void rule__RetType__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4685:1: ( rule__RetType__Group_1__0__Impl rule__RetType__Group_1__1 )
            // InternalFortXTrans.g:4686:2: rule__RetType__Group_1__0__Impl rule__RetType__Group_1__1
            {
            pushFollow(FOLLOW_5);
            rule__RetType__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__RetType__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RetType__Group_1__0"


    // $ANTLR start "rule__RetType__Group_1__0__Impl"
    // InternalFortXTrans.g:4693:1: rule__RetType__Group_1__0__Impl : ( ':' ) ;
    public final void rule__RetType__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4697:1: ( ( ':' ) )
            // InternalFortXTrans.g:4698:1: ( ':' )
            {
            // InternalFortXTrans.g:4698:1: ( ':' )
            // InternalFortXTrans.g:4699:2: ':'
            {
             before(grammarAccess.getRetTypeAccess().getColonKeyword_1_0()); 
            match(input,35,FOLLOW_2); 
             after(grammarAccess.getRetTypeAccess().getColonKeyword_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RetType__Group_1__0__Impl"


    // $ANTLR start "rule__RetType__Group_1__1"
    // InternalFortXTrans.g:4708:1: rule__RetType__Group_1__1 : rule__RetType__Group_1__1__Impl ;
    public final void rule__RetType__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4712:1: ( rule__RetType__Group_1__1__Impl )
            // InternalFortXTrans.g:4713:2: rule__RetType__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__RetType__Group_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RetType__Group_1__1"


    // $ANTLR start "rule__RetType__Group_1__1__Impl"
    // InternalFortXTrans.g:4719:1: rule__RetType__Group_1__1__Impl : ( ( rule__RetType__TypeAssignment_1_1 ) ) ;
    public final void rule__RetType__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4723:1: ( ( ( rule__RetType__TypeAssignment_1_1 ) ) )
            // InternalFortXTrans.g:4724:1: ( ( rule__RetType__TypeAssignment_1_1 ) )
            {
            // InternalFortXTrans.g:4724:1: ( ( rule__RetType__TypeAssignment_1_1 ) )
            // InternalFortXTrans.g:4725:2: ( rule__RetType__TypeAssignment_1_1 )
            {
             before(grammarAccess.getRetTypeAccess().getTypeAssignment_1_1()); 
            // InternalFortXTrans.g:4726:2: ( rule__RetType__TypeAssignment_1_1 )
            // InternalFortXTrans.g:4726:3: rule__RetType__TypeAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__RetType__TypeAssignment_1_1();

            state._fsp--;


            }

             after(grammarAccess.getRetTypeAccess().getTypeAssignment_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RetType__Group_1__1__Impl"


    // $ANTLR start "rule__TupleType__Group__0"
    // InternalFortXTrans.g:4735:1: rule__TupleType__Group__0 : rule__TupleType__Group__0__Impl rule__TupleType__Group__1 ;
    public final void rule__TupleType__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4739:1: ( rule__TupleType__Group__0__Impl rule__TupleType__Group__1 )
            // InternalFortXTrans.g:4740:2: rule__TupleType__Group__0__Impl rule__TupleType__Group__1
            {
            pushFollow(FOLLOW_5);
            rule__TupleType__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__TupleType__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TupleType__Group__0"


    // $ANTLR start "rule__TupleType__Group__0__Impl"
    // InternalFortXTrans.g:4747:1: rule__TupleType__Group__0__Impl : ( '(' ) ;
    public final void rule__TupleType__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4751:1: ( ( '(' ) )
            // InternalFortXTrans.g:4752:1: ( '(' )
            {
            // InternalFortXTrans.g:4752:1: ( '(' )
            // InternalFortXTrans.g:4753:2: '('
            {
             before(grammarAccess.getTupleTypeAccess().getLeftParenthesisKeyword_0()); 
            match(input,33,FOLLOW_2); 
             after(grammarAccess.getTupleTypeAccess().getLeftParenthesisKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TupleType__Group__0__Impl"


    // $ANTLR start "rule__TupleType__Group__1"
    // InternalFortXTrans.g:4762:1: rule__TupleType__Group__1 : rule__TupleType__Group__1__Impl rule__TupleType__Group__2 ;
    public final void rule__TupleType__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4766:1: ( rule__TupleType__Group__1__Impl rule__TupleType__Group__2 )
            // InternalFortXTrans.g:4767:2: rule__TupleType__Group__1__Impl rule__TupleType__Group__2
            {
            pushFollow(FOLLOW_23);
            rule__TupleType__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__TupleType__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TupleType__Group__1"


    // $ANTLR start "rule__TupleType__Group__1__Impl"
    // InternalFortXTrans.g:4774:1: rule__TupleType__Group__1__Impl : ( ( rule__TupleType__TypesAssignment_1 ) ) ;
    public final void rule__TupleType__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4778:1: ( ( ( rule__TupleType__TypesAssignment_1 ) ) )
            // InternalFortXTrans.g:4779:1: ( ( rule__TupleType__TypesAssignment_1 ) )
            {
            // InternalFortXTrans.g:4779:1: ( ( rule__TupleType__TypesAssignment_1 ) )
            // InternalFortXTrans.g:4780:2: ( rule__TupleType__TypesAssignment_1 )
            {
             before(grammarAccess.getTupleTypeAccess().getTypesAssignment_1()); 
            // InternalFortXTrans.g:4781:2: ( rule__TupleType__TypesAssignment_1 )
            // InternalFortXTrans.g:4781:3: rule__TupleType__TypesAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__TupleType__TypesAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getTupleTypeAccess().getTypesAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TupleType__Group__1__Impl"


    // $ANTLR start "rule__TupleType__Group__2"
    // InternalFortXTrans.g:4789:1: rule__TupleType__Group__2 : rule__TupleType__Group__2__Impl rule__TupleType__Group__3 ;
    public final void rule__TupleType__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4793:1: ( rule__TupleType__Group__2__Impl rule__TupleType__Group__3 )
            // InternalFortXTrans.g:4794:2: rule__TupleType__Group__2__Impl rule__TupleType__Group__3
            {
            pushFollow(FOLLOW_23);
            rule__TupleType__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__TupleType__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TupleType__Group__2"


    // $ANTLR start "rule__TupleType__Group__2__Impl"
    // InternalFortXTrans.g:4801:1: rule__TupleType__Group__2__Impl : ( ( rule__TupleType__Group_2__0 )* ) ;
    public final void rule__TupleType__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4805:1: ( ( ( rule__TupleType__Group_2__0 )* ) )
            // InternalFortXTrans.g:4806:1: ( ( rule__TupleType__Group_2__0 )* )
            {
            // InternalFortXTrans.g:4806:1: ( ( rule__TupleType__Group_2__0 )* )
            // InternalFortXTrans.g:4807:2: ( rule__TupleType__Group_2__0 )*
            {
             before(grammarAccess.getTupleTypeAccess().getGroup_2()); 
            // InternalFortXTrans.g:4808:2: ( rule__TupleType__Group_2__0 )*
            loop47:
            do {
                int alt47=2;
                int LA47_0 = input.LA(1);

                if ( (LA47_0==29) ) {
                    alt47=1;
                }


                switch (alt47) {
            	case 1 :
            	    // InternalFortXTrans.g:4808:3: rule__TupleType__Group_2__0
            	    {
            	    pushFollow(FOLLOW_15);
            	    rule__TupleType__Group_2__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop47;
                }
            } while (true);

             after(grammarAccess.getTupleTypeAccess().getGroup_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TupleType__Group__2__Impl"


    // $ANTLR start "rule__TupleType__Group__3"
    // InternalFortXTrans.g:4816:1: rule__TupleType__Group__3 : rule__TupleType__Group__3__Impl ;
    public final void rule__TupleType__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4820:1: ( rule__TupleType__Group__3__Impl )
            // InternalFortXTrans.g:4821:2: rule__TupleType__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__TupleType__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TupleType__Group__3"


    // $ANTLR start "rule__TupleType__Group__3__Impl"
    // InternalFortXTrans.g:4827:1: rule__TupleType__Group__3__Impl : ( ')' ) ;
    public final void rule__TupleType__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4831:1: ( ( ')' ) )
            // InternalFortXTrans.g:4832:1: ( ')' )
            {
            // InternalFortXTrans.g:4832:1: ( ')' )
            // InternalFortXTrans.g:4833:2: ')'
            {
             before(grammarAccess.getTupleTypeAccess().getRightParenthesisKeyword_3()); 
            match(input,34,FOLLOW_2); 
             after(grammarAccess.getTupleTypeAccess().getRightParenthesisKeyword_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TupleType__Group__3__Impl"


    // $ANTLR start "rule__TupleType__Group_2__0"
    // InternalFortXTrans.g:4843:1: rule__TupleType__Group_2__0 : rule__TupleType__Group_2__0__Impl rule__TupleType__Group_2__1 ;
    public final void rule__TupleType__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4847:1: ( rule__TupleType__Group_2__0__Impl rule__TupleType__Group_2__1 )
            // InternalFortXTrans.g:4848:2: rule__TupleType__Group_2__0__Impl rule__TupleType__Group_2__1
            {
            pushFollow(FOLLOW_5);
            rule__TupleType__Group_2__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__TupleType__Group_2__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TupleType__Group_2__0"


    // $ANTLR start "rule__TupleType__Group_2__0__Impl"
    // InternalFortXTrans.g:4855:1: rule__TupleType__Group_2__0__Impl : ( ',' ) ;
    public final void rule__TupleType__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4859:1: ( ( ',' ) )
            // InternalFortXTrans.g:4860:1: ( ',' )
            {
            // InternalFortXTrans.g:4860:1: ( ',' )
            // InternalFortXTrans.g:4861:2: ','
            {
             before(grammarAccess.getTupleTypeAccess().getCommaKeyword_2_0()); 
            match(input,29,FOLLOW_2); 
             after(grammarAccess.getTupleTypeAccess().getCommaKeyword_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TupleType__Group_2__0__Impl"


    // $ANTLR start "rule__TupleType__Group_2__1"
    // InternalFortXTrans.g:4870:1: rule__TupleType__Group_2__1 : rule__TupleType__Group_2__1__Impl ;
    public final void rule__TupleType__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4874:1: ( rule__TupleType__Group_2__1__Impl )
            // InternalFortXTrans.g:4875:2: rule__TupleType__Group_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__TupleType__Group_2__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TupleType__Group_2__1"


    // $ANTLR start "rule__TupleType__Group_2__1__Impl"
    // InternalFortXTrans.g:4881:1: rule__TupleType__Group_2__1__Impl : ( ( rule__TupleType__TypesAssignment_2_1 ) ) ;
    public final void rule__TupleType__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4885:1: ( ( ( rule__TupleType__TypesAssignment_2_1 ) ) )
            // InternalFortXTrans.g:4886:1: ( ( rule__TupleType__TypesAssignment_2_1 ) )
            {
            // InternalFortXTrans.g:4886:1: ( ( rule__TupleType__TypesAssignment_2_1 ) )
            // InternalFortXTrans.g:4887:2: ( rule__TupleType__TypesAssignment_2_1 )
            {
             before(grammarAccess.getTupleTypeAccess().getTypesAssignment_2_1()); 
            // InternalFortXTrans.g:4888:2: ( rule__TupleType__TypesAssignment_2_1 )
            // InternalFortXTrans.g:4888:3: rule__TupleType__TypesAssignment_2_1
            {
            pushFollow(FOLLOW_2);
            rule__TupleType__TypesAssignment_2_1();

            state._fsp--;


            }

             after(grammarAccess.getTupleTypeAccess().getTypesAssignment_2_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TupleType__Group_2__1__Impl"


    // $ANTLR start "rule__FnDecl__Group__0"
    // InternalFortXTrans.g:4897:1: rule__FnDecl__Group__0 : rule__FnDecl__Group__0__Impl rule__FnDecl__Group__1 ;
    public final void rule__FnDecl__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4901:1: ( rule__FnDecl__Group__0__Impl rule__FnDecl__Group__1 )
            // InternalFortXTrans.g:4902:2: rule__FnDecl__Group__0__Impl rule__FnDecl__Group__1
            {
            pushFollow(FOLLOW_29);
            rule__FnDecl__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__FnDecl__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FnDecl__Group__0"


    // $ANTLR start "rule__FnDecl__Group__0__Impl"
    // InternalFortXTrans.g:4909:1: rule__FnDecl__Group__0__Impl : ( ( rule__FnDecl__ModsAssignment_0 )? ) ;
    public final void rule__FnDecl__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4913:1: ( ( ( rule__FnDecl__ModsAssignment_0 )? ) )
            // InternalFortXTrans.g:4914:1: ( ( rule__FnDecl__ModsAssignment_0 )? )
            {
            // InternalFortXTrans.g:4914:1: ( ( rule__FnDecl__ModsAssignment_0 )? )
            // InternalFortXTrans.g:4915:2: ( rule__FnDecl__ModsAssignment_0 )?
            {
             before(grammarAccess.getFnDeclAccess().getModsAssignment_0()); 
            // InternalFortXTrans.g:4916:2: ( rule__FnDecl__ModsAssignment_0 )?
            int alt48=2;
            int LA48_0 = input.LA(1);

            if ( ((LA48_0>=57 && LA48_0<=60)) ) {
                alt48=1;
            }
            switch (alt48) {
                case 1 :
                    // InternalFortXTrans.g:4916:3: rule__FnDecl__ModsAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__FnDecl__ModsAssignment_0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getFnDeclAccess().getModsAssignment_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FnDecl__Group__0__Impl"


    // $ANTLR start "rule__FnDecl__Group__1"
    // InternalFortXTrans.g:4924:1: rule__FnDecl__Group__1 : rule__FnDecl__Group__1__Impl rule__FnDecl__Group__2 ;
    public final void rule__FnDecl__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4928:1: ( rule__FnDecl__Group__1__Impl rule__FnDecl__Group__2 )
            // InternalFortXTrans.g:4929:2: rule__FnDecl__Group__1__Impl rule__FnDecl__Group__2
            {
            pushFollow(FOLLOW_30);
            rule__FnDecl__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__FnDecl__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FnDecl__Group__1"


    // $ANTLR start "rule__FnDecl__Group__1__Impl"
    // InternalFortXTrans.g:4936:1: rule__FnDecl__Group__1__Impl : ( ( rule__FnDecl__NameAssignment_1 ) ) ;
    public final void rule__FnDecl__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4940:1: ( ( ( rule__FnDecl__NameAssignment_1 ) ) )
            // InternalFortXTrans.g:4941:1: ( ( rule__FnDecl__NameAssignment_1 ) )
            {
            // InternalFortXTrans.g:4941:1: ( ( rule__FnDecl__NameAssignment_1 ) )
            // InternalFortXTrans.g:4942:2: ( rule__FnDecl__NameAssignment_1 )
            {
             before(grammarAccess.getFnDeclAccess().getNameAssignment_1()); 
            // InternalFortXTrans.g:4943:2: ( rule__FnDecl__NameAssignment_1 )
            // InternalFortXTrans.g:4943:3: rule__FnDecl__NameAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__FnDecl__NameAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getFnDeclAccess().getNameAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FnDecl__Group__1__Impl"


    // $ANTLR start "rule__FnDecl__Group__2"
    // InternalFortXTrans.g:4951:1: rule__FnDecl__Group__2 : rule__FnDecl__Group__2__Impl rule__FnDecl__Group__3 ;
    public final void rule__FnDecl__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4955:1: ( rule__FnDecl__Group__2__Impl rule__FnDecl__Group__3 )
            // InternalFortXTrans.g:4956:2: rule__FnDecl__Group__2__Impl rule__FnDecl__Group__3
            {
            pushFollow(FOLLOW_31);
            rule__FnDecl__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__FnDecl__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FnDecl__Group__2"


    // $ANTLR start "rule__FnDecl__Group__2__Impl"
    // InternalFortXTrans.g:4963:1: rule__FnDecl__Group__2__Impl : ( ( rule__FnDecl__ParamsAssignment_2 ) ) ;
    public final void rule__FnDecl__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4967:1: ( ( ( rule__FnDecl__ParamsAssignment_2 ) ) )
            // InternalFortXTrans.g:4968:1: ( ( rule__FnDecl__ParamsAssignment_2 ) )
            {
            // InternalFortXTrans.g:4968:1: ( ( rule__FnDecl__ParamsAssignment_2 ) )
            // InternalFortXTrans.g:4969:2: ( rule__FnDecl__ParamsAssignment_2 )
            {
             before(grammarAccess.getFnDeclAccess().getParamsAssignment_2()); 
            // InternalFortXTrans.g:4970:2: ( rule__FnDecl__ParamsAssignment_2 )
            // InternalFortXTrans.g:4970:3: rule__FnDecl__ParamsAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__FnDecl__ParamsAssignment_2();

            state._fsp--;


            }

             after(grammarAccess.getFnDeclAccess().getParamsAssignment_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FnDecl__Group__2__Impl"


    // $ANTLR start "rule__FnDecl__Group__3"
    // InternalFortXTrans.g:4978:1: rule__FnDecl__Group__3 : rule__FnDecl__Group__3__Impl rule__FnDecl__Group__4 ;
    public final void rule__FnDecl__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4982:1: ( rule__FnDecl__Group__3__Impl rule__FnDecl__Group__4 )
            // InternalFortXTrans.g:4983:2: rule__FnDecl__Group__3__Impl rule__FnDecl__Group__4
            {
            pushFollow(FOLLOW_31);
            rule__FnDecl__Group__3__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__FnDecl__Group__4();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FnDecl__Group__3"


    // $ANTLR start "rule__FnDecl__Group__3__Impl"
    // InternalFortXTrans.g:4990:1: rule__FnDecl__Group__3__Impl : ( ( rule__FnDecl__RetValAssignment_3 )? ) ;
    public final void rule__FnDecl__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4994:1: ( ( ( rule__FnDecl__RetValAssignment_3 )? ) )
            // InternalFortXTrans.g:4995:1: ( ( rule__FnDecl__RetValAssignment_3 )? )
            {
            // InternalFortXTrans.g:4995:1: ( ( rule__FnDecl__RetValAssignment_3 )? )
            // InternalFortXTrans.g:4996:2: ( rule__FnDecl__RetValAssignment_3 )?
            {
             before(grammarAccess.getFnDeclAccess().getRetValAssignment_3()); 
            // InternalFortXTrans.g:4997:2: ( rule__FnDecl__RetValAssignment_3 )?
            int alt49=2;
            int LA49_0 = input.LA(1);

            if ( (LA49_0==35) ) {
                alt49=1;
            }
            switch (alt49) {
                case 1 :
                    // InternalFortXTrans.g:4997:3: rule__FnDecl__RetValAssignment_3
                    {
                    pushFollow(FOLLOW_2);
                    rule__FnDecl__RetValAssignment_3();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getFnDeclAccess().getRetValAssignment_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FnDecl__Group__3__Impl"


    // $ANTLR start "rule__FnDecl__Group__4"
    // InternalFortXTrans.g:5005:1: rule__FnDecl__Group__4 : rule__FnDecl__Group__4__Impl ;
    public final void rule__FnDecl__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5009:1: ( rule__FnDecl__Group__4__Impl )
            // InternalFortXTrans.g:5010:2: rule__FnDecl__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FnDecl__Group__4__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FnDecl__Group__4"


    // $ANTLR start "rule__FnDecl__Group__4__Impl"
    // InternalFortXTrans.g:5016:1: rule__FnDecl__Group__4__Impl : ( ( rule__FnDecl__Group_4__0 )? ) ;
    public final void rule__FnDecl__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5020:1: ( ( ( rule__FnDecl__Group_4__0 )? ) )
            // InternalFortXTrans.g:5021:1: ( ( rule__FnDecl__Group_4__0 )? )
            {
            // InternalFortXTrans.g:5021:1: ( ( rule__FnDecl__Group_4__0 )? )
            // InternalFortXTrans.g:5022:2: ( rule__FnDecl__Group_4__0 )?
            {
             before(grammarAccess.getFnDeclAccess().getGroup_4()); 
            // InternalFortXTrans.g:5023:2: ( rule__FnDecl__Group_4__0 )?
            int alt50=2;
            int LA50_0 = input.LA(1);

            if ( (LA50_0==53) ) {
                alt50=1;
            }
            switch (alt50) {
                case 1 :
                    // InternalFortXTrans.g:5023:3: rule__FnDecl__Group_4__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__FnDecl__Group_4__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getFnDeclAccess().getGroup_4()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FnDecl__Group__4__Impl"


    // $ANTLR start "rule__FnDecl__Group_4__0"
    // InternalFortXTrans.g:5032:1: rule__FnDecl__Group_4__0 : rule__FnDecl__Group_4__0__Impl rule__FnDecl__Group_4__1 ;
    public final void rule__FnDecl__Group_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5036:1: ( rule__FnDecl__Group_4__0__Impl rule__FnDecl__Group_4__1 )
            // InternalFortXTrans.g:5037:2: rule__FnDecl__Group_4__0__Impl rule__FnDecl__Group_4__1
            {
            pushFollow(FOLLOW_32);
            rule__FnDecl__Group_4__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__FnDecl__Group_4__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FnDecl__Group_4__0"


    // $ANTLR start "rule__FnDecl__Group_4__0__Impl"
    // InternalFortXTrans.g:5044:1: rule__FnDecl__Group_4__0__Impl : ( ( rule__FnDecl__BodyAssignment_4_0 ) ) ;
    public final void rule__FnDecl__Group_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5048:1: ( ( ( rule__FnDecl__BodyAssignment_4_0 ) ) )
            // InternalFortXTrans.g:5049:1: ( ( rule__FnDecl__BodyAssignment_4_0 ) )
            {
            // InternalFortXTrans.g:5049:1: ( ( rule__FnDecl__BodyAssignment_4_0 ) )
            // InternalFortXTrans.g:5050:2: ( rule__FnDecl__BodyAssignment_4_0 )
            {
             before(grammarAccess.getFnDeclAccess().getBodyAssignment_4_0()); 
            // InternalFortXTrans.g:5051:2: ( rule__FnDecl__BodyAssignment_4_0 )
            // InternalFortXTrans.g:5051:3: rule__FnDecl__BodyAssignment_4_0
            {
            pushFollow(FOLLOW_2);
            rule__FnDecl__BodyAssignment_4_0();

            state._fsp--;


            }

             after(grammarAccess.getFnDeclAccess().getBodyAssignment_4_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FnDecl__Group_4__0__Impl"


    // $ANTLR start "rule__FnDecl__Group_4__1"
    // InternalFortXTrans.g:5059:1: rule__FnDecl__Group_4__1 : rule__FnDecl__Group_4__1__Impl ;
    public final void rule__FnDecl__Group_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5063:1: ( rule__FnDecl__Group_4__1__Impl )
            // InternalFortXTrans.g:5064:2: rule__FnDecl__Group_4__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FnDecl__Group_4__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FnDecl__Group_4__1"


    // $ANTLR start "rule__FnDecl__Group_4__1__Impl"
    // InternalFortXTrans.g:5070:1: rule__FnDecl__Group_4__1__Impl : ( ( rule__FnDecl__FnItselfAssignment_4_1 ) ) ;
    public final void rule__FnDecl__Group_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5074:1: ( ( ( rule__FnDecl__FnItselfAssignment_4_1 ) ) )
            // InternalFortXTrans.g:5075:1: ( ( rule__FnDecl__FnItselfAssignment_4_1 ) )
            {
            // InternalFortXTrans.g:5075:1: ( ( rule__FnDecl__FnItselfAssignment_4_1 ) )
            // InternalFortXTrans.g:5076:2: ( rule__FnDecl__FnItselfAssignment_4_1 )
            {
             before(grammarAccess.getFnDeclAccess().getFnItselfAssignment_4_1()); 
            // InternalFortXTrans.g:5077:2: ( rule__FnDecl__FnItselfAssignment_4_1 )
            // InternalFortXTrans.g:5077:3: rule__FnDecl__FnItselfAssignment_4_1
            {
            pushFollow(FOLLOW_2);
            rule__FnDecl__FnItselfAssignment_4_1();

            state._fsp--;


            }

             after(grammarAccess.getFnDeclAccess().getFnItselfAssignment_4_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FnDecl__Group_4__1__Impl"


    // $ANTLR start "rule__Stmnt__Group_1__0"
    // InternalFortXTrans.g:5086:1: rule__Stmnt__Group_1__0 : rule__Stmnt__Group_1__0__Impl rule__Stmnt__Group_1__1 ;
    public final void rule__Stmnt__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5090:1: ( rule__Stmnt__Group_1__0__Impl rule__Stmnt__Group_1__1 )
            // InternalFortXTrans.g:5091:2: rule__Stmnt__Group_1__0__Impl rule__Stmnt__Group_1__1
            {
            pushFollow(FOLLOW_33);
            rule__Stmnt__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Stmnt__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Stmnt__Group_1__0"


    // $ANTLR start "rule__Stmnt__Group_1__0__Impl"
    // InternalFortXTrans.g:5098:1: rule__Stmnt__Group_1__0__Impl : ( '(|' ) ;
    public final void rule__Stmnt__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5102:1: ( ( '(|' ) )
            // InternalFortXTrans.g:5103:1: ( '(|' )
            {
            // InternalFortXTrans.g:5103:1: ( '(|' )
            // InternalFortXTrans.g:5104:2: '(|'
            {
             before(grammarAccess.getStmntAccess().getLeftParenthesisVerticalLineKeyword_1_0()); 
            match(input,36,FOLLOW_2); 
             after(grammarAccess.getStmntAccess().getLeftParenthesisVerticalLineKeyword_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Stmnt__Group_1__0__Impl"


    // $ANTLR start "rule__Stmnt__Group_1__1"
    // InternalFortXTrans.g:5113:1: rule__Stmnt__Group_1__1 : rule__Stmnt__Group_1__1__Impl rule__Stmnt__Group_1__2 ;
    public final void rule__Stmnt__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5117:1: ( rule__Stmnt__Group_1__1__Impl rule__Stmnt__Group_1__2 )
            // InternalFortXTrans.g:5118:2: rule__Stmnt__Group_1__1__Impl rule__Stmnt__Group_1__2
            {
            pushFollow(FOLLOW_34);
            rule__Stmnt__Group_1__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Stmnt__Group_1__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Stmnt__Group_1__1"


    // $ANTLR start "rule__Stmnt__Group_1__1__Impl"
    // InternalFortXTrans.g:5125:1: rule__Stmnt__Group_1__1__Impl : ( ( rule__Stmnt__DelimsAssignment_1_1 ) ) ;
    public final void rule__Stmnt__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5129:1: ( ( ( rule__Stmnt__DelimsAssignment_1_1 ) ) )
            // InternalFortXTrans.g:5130:1: ( ( rule__Stmnt__DelimsAssignment_1_1 ) )
            {
            // InternalFortXTrans.g:5130:1: ( ( rule__Stmnt__DelimsAssignment_1_1 ) )
            // InternalFortXTrans.g:5131:2: ( rule__Stmnt__DelimsAssignment_1_1 )
            {
             before(grammarAccess.getStmntAccess().getDelimsAssignment_1_1()); 
            // InternalFortXTrans.g:5132:2: ( rule__Stmnt__DelimsAssignment_1_1 )
            // InternalFortXTrans.g:5132:3: rule__Stmnt__DelimsAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Stmnt__DelimsAssignment_1_1();

            state._fsp--;


            }

             after(grammarAccess.getStmntAccess().getDelimsAssignment_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Stmnt__Group_1__1__Impl"


    // $ANTLR start "rule__Stmnt__Group_1__2"
    // InternalFortXTrans.g:5140:1: rule__Stmnt__Group_1__2 : rule__Stmnt__Group_1__2__Impl ;
    public final void rule__Stmnt__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5144:1: ( rule__Stmnt__Group_1__2__Impl )
            // InternalFortXTrans.g:5145:2: rule__Stmnt__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Stmnt__Group_1__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Stmnt__Group_1__2"


    // $ANTLR start "rule__Stmnt__Group_1__2__Impl"
    // InternalFortXTrans.g:5151:1: rule__Stmnt__Group_1__2__Impl : ( '|)' ) ;
    public final void rule__Stmnt__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5155:1: ( ( '|)' ) )
            // InternalFortXTrans.g:5156:1: ( '|)' )
            {
            // InternalFortXTrans.g:5156:1: ( '|)' )
            // InternalFortXTrans.g:5157:2: '|)'
            {
             before(grammarAccess.getStmntAccess().getVerticalLineRightParenthesisKeyword_1_2()); 
            match(input,37,FOLLOW_2); 
             after(grammarAccess.getStmntAccess().getVerticalLineRightParenthesisKeyword_1_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Stmnt__Group_1__2__Impl"


    // $ANTLR start "rule__DelimitedExprList__Group__0"
    // InternalFortXTrans.g:5167:1: rule__DelimitedExprList__Group__0 : rule__DelimitedExprList__Group__0__Impl rule__DelimitedExprList__Group__1 ;
    public final void rule__DelimitedExprList__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5171:1: ( rule__DelimitedExprList__Group__0__Impl rule__DelimitedExprList__Group__1 )
            // InternalFortXTrans.g:5172:2: rule__DelimitedExprList__Group__0__Impl rule__DelimitedExprList__Group__1
            {
            pushFollow(FOLLOW_25);
            rule__DelimitedExprList__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DelimitedExprList__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExprList__Group__0"


    // $ANTLR start "rule__DelimitedExprList__Group__0__Impl"
    // InternalFortXTrans.g:5179:1: rule__DelimitedExprList__Group__0__Impl : ( ( rule__DelimitedExprList__DelimAssignment_0 ) ) ;
    public final void rule__DelimitedExprList__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5183:1: ( ( ( rule__DelimitedExprList__DelimAssignment_0 ) ) )
            // InternalFortXTrans.g:5184:1: ( ( rule__DelimitedExprList__DelimAssignment_0 ) )
            {
            // InternalFortXTrans.g:5184:1: ( ( rule__DelimitedExprList__DelimAssignment_0 ) )
            // InternalFortXTrans.g:5185:2: ( rule__DelimitedExprList__DelimAssignment_0 )
            {
             before(grammarAccess.getDelimitedExprListAccess().getDelimAssignment_0()); 
            // InternalFortXTrans.g:5186:2: ( rule__DelimitedExprList__DelimAssignment_0 )
            // InternalFortXTrans.g:5186:3: rule__DelimitedExprList__DelimAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__DelimitedExprList__DelimAssignment_0();

            state._fsp--;


            }

             after(grammarAccess.getDelimitedExprListAccess().getDelimAssignment_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExprList__Group__0__Impl"


    // $ANTLR start "rule__DelimitedExprList__Group__1"
    // InternalFortXTrans.g:5194:1: rule__DelimitedExprList__Group__1 : rule__DelimitedExprList__Group__1__Impl ;
    public final void rule__DelimitedExprList__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5198:1: ( rule__DelimitedExprList__Group__1__Impl )
            // InternalFortXTrans.g:5199:2: rule__DelimitedExprList__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__DelimitedExprList__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExprList__Group__1"


    // $ANTLR start "rule__DelimitedExprList__Group__1__Impl"
    // InternalFortXTrans.g:5205:1: rule__DelimitedExprList__Group__1__Impl : ( ( rule__DelimitedExprList__Group_1__0 )* ) ;
    public final void rule__DelimitedExprList__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5209:1: ( ( ( rule__DelimitedExprList__Group_1__0 )* ) )
            // InternalFortXTrans.g:5210:1: ( ( rule__DelimitedExprList__Group_1__0 )* )
            {
            // InternalFortXTrans.g:5210:1: ( ( rule__DelimitedExprList__Group_1__0 )* )
            // InternalFortXTrans.g:5211:2: ( rule__DelimitedExprList__Group_1__0 )*
            {
             before(grammarAccess.getDelimitedExprListAccess().getGroup_1()); 
            // InternalFortXTrans.g:5212:2: ( rule__DelimitedExprList__Group_1__0 )*
            loop51:
            do {
                int alt51=2;
                int LA51_0 = input.LA(1);

                if ( (LA51_0==29) ) {
                    alt51=1;
                }


                switch (alt51) {
            	case 1 :
            	    // InternalFortXTrans.g:5212:3: rule__DelimitedExprList__Group_1__0
            	    {
            	    pushFollow(FOLLOW_15);
            	    rule__DelimitedExprList__Group_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop51;
                }
            } while (true);

             after(grammarAccess.getDelimitedExprListAccess().getGroup_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExprList__Group__1__Impl"


    // $ANTLR start "rule__DelimitedExprList__Group_1__0"
    // InternalFortXTrans.g:5221:1: rule__DelimitedExprList__Group_1__0 : rule__DelimitedExprList__Group_1__0__Impl rule__DelimitedExprList__Group_1__1 ;
    public final void rule__DelimitedExprList__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5225:1: ( rule__DelimitedExprList__Group_1__0__Impl rule__DelimitedExprList__Group_1__1 )
            // InternalFortXTrans.g:5226:2: rule__DelimitedExprList__Group_1__0__Impl rule__DelimitedExprList__Group_1__1
            {
            pushFollow(FOLLOW_33);
            rule__DelimitedExprList__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DelimitedExprList__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExprList__Group_1__0"


    // $ANTLR start "rule__DelimitedExprList__Group_1__0__Impl"
    // InternalFortXTrans.g:5233:1: rule__DelimitedExprList__Group_1__0__Impl : ( ',' ) ;
    public final void rule__DelimitedExprList__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5237:1: ( ( ',' ) )
            // InternalFortXTrans.g:5238:1: ( ',' )
            {
            // InternalFortXTrans.g:5238:1: ( ',' )
            // InternalFortXTrans.g:5239:2: ','
            {
             before(grammarAccess.getDelimitedExprListAccess().getCommaKeyword_1_0()); 
            match(input,29,FOLLOW_2); 
             after(grammarAccess.getDelimitedExprListAccess().getCommaKeyword_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExprList__Group_1__0__Impl"


    // $ANTLR start "rule__DelimitedExprList__Group_1__1"
    // InternalFortXTrans.g:5248:1: rule__DelimitedExprList__Group_1__1 : rule__DelimitedExprList__Group_1__1__Impl ;
    public final void rule__DelimitedExprList__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5252:1: ( rule__DelimitedExprList__Group_1__1__Impl )
            // InternalFortXTrans.g:5253:2: rule__DelimitedExprList__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__DelimitedExprList__Group_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExprList__Group_1__1"


    // $ANTLR start "rule__DelimitedExprList__Group_1__1__Impl"
    // InternalFortXTrans.g:5259:1: rule__DelimitedExprList__Group_1__1__Impl : ( ( rule__DelimitedExprList__DelimAssignment_1_1 ) ) ;
    public final void rule__DelimitedExprList__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5263:1: ( ( ( rule__DelimitedExprList__DelimAssignment_1_1 ) ) )
            // InternalFortXTrans.g:5264:1: ( ( rule__DelimitedExprList__DelimAssignment_1_1 ) )
            {
            // InternalFortXTrans.g:5264:1: ( ( rule__DelimitedExprList__DelimAssignment_1_1 ) )
            // InternalFortXTrans.g:5265:2: ( rule__DelimitedExprList__DelimAssignment_1_1 )
            {
             before(grammarAccess.getDelimitedExprListAccess().getDelimAssignment_1_1()); 
            // InternalFortXTrans.g:5266:2: ( rule__DelimitedExprList__DelimAssignment_1_1 )
            // InternalFortXTrans.g:5266:3: rule__DelimitedExprList__DelimAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__DelimitedExprList__DelimAssignment_1_1();

            state._fsp--;


            }

             after(grammarAccess.getDelimitedExprListAccess().getDelimAssignment_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExprList__Group_1__1__Impl"


    // $ANTLR start "rule__Expr__Group__0"
    // InternalFortXTrans.g:5275:1: rule__Expr__Group__0 : rule__Expr__Group__0__Impl rule__Expr__Group__1 ;
    public final void rule__Expr__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5279:1: ( rule__Expr__Group__0__Impl rule__Expr__Group__1 )
            // InternalFortXTrans.g:5280:2: rule__Expr__Group__0__Impl rule__Expr__Group__1
            {
            pushFollow(FOLLOW_20);
            rule__Expr__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Expr__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Expr__Group__0"


    // $ANTLR start "rule__Expr__Group__0__Impl"
    // InternalFortXTrans.g:5287:1: rule__Expr__Group__0__Impl : ( ruleOr ) ;
    public final void rule__Expr__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5291:1: ( ( ruleOr ) )
            // InternalFortXTrans.g:5292:1: ( ruleOr )
            {
            // InternalFortXTrans.g:5292:1: ( ruleOr )
            // InternalFortXTrans.g:5293:2: ruleOr
            {
             before(grammarAccess.getExprAccess().getOrParserRuleCall_0()); 
            pushFollow(FOLLOW_2);
            ruleOr();

            state._fsp--;

             after(grammarAccess.getExprAccess().getOrParserRuleCall_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Expr__Group__0__Impl"


    // $ANTLR start "rule__Expr__Group__1"
    // InternalFortXTrans.g:5302:1: rule__Expr__Group__1 : rule__Expr__Group__1__Impl ;
    public final void rule__Expr__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5306:1: ( rule__Expr__Group__1__Impl )
            // InternalFortXTrans.g:5307:2: rule__Expr__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Expr__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Expr__Group__1"


    // $ANTLR start "rule__Expr__Group__1__Impl"
    // InternalFortXTrans.g:5313:1: rule__Expr__Group__1__Impl : ( ( rule__Expr__TailAssignment_1 )* ) ;
    public final void rule__Expr__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5317:1: ( ( ( rule__Expr__TailAssignment_1 )* ) )
            // InternalFortXTrans.g:5318:1: ( ( rule__Expr__TailAssignment_1 )* )
            {
            // InternalFortXTrans.g:5318:1: ( ( rule__Expr__TailAssignment_1 )* )
            // InternalFortXTrans.g:5319:2: ( rule__Expr__TailAssignment_1 )*
            {
             before(grammarAccess.getExprAccess().getTailAssignment_1()); 
            // InternalFortXTrans.g:5320:2: ( rule__Expr__TailAssignment_1 )*
            loop52:
            do {
                int alt52=2;
                int LA52_0 = input.LA(1);

                if ( (LA52_0==32) ) {
                    alt52=1;
                }


                switch (alt52) {
            	case 1 :
            	    // InternalFortXTrans.g:5320:3: rule__Expr__TailAssignment_1
            	    {
            	    pushFollow(FOLLOW_35);
            	    rule__Expr__TailAssignment_1();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop52;
                }
            } while (true);

             after(grammarAccess.getExprAccess().getTailAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Expr__Group__1__Impl"


    // $ANTLR start "rule__Or__Group__0"
    // InternalFortXTrans.g:5329:1: rule__Or__Group__0 : rule__Or__Group__0__Impl rule__Or__Group__1 ;
    public final void rule__Or__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5333:1: ( rule__Or__Group__0__Impl rule__Or__Group__1 )
            // InternalFortXTrans.g:5334:2: rule__Or__Group__0__Impl rule__Or__Group__1
            {
            pushFollow(FOLLOW_36);
            rule__Or__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Or__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Or__Group__0"


    // $ANTLR start "rule__Or__Group__0__Impl"
    // InternalFortXTrans.g:5341:1: rule__Or__Group__0__Impl : ( ruleAnd ) ;
    public final void rule__Or__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5345:1: ( ( ruleAnd ) )
            // InternalFortXTrans.g:5346:1: ( ruleAnd )
            {
            // InternalFortXTrans.g:5346:1: ( ruleAnd )
            // InternalFortXTrans.g:5347:2: ruleAnd
            {
             before(grammarAccess.getOrAccess().getAndParserRuleCall_0()); 
            pushFollow(FOLLOW_2);
            ruleAnd();

            state._fsp--;

             after(grammarAccess.getOrAccess().getAndParserRuleCall_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Or__Group__0__Impl"


    // $ANTLR start "rule__Or__Group__1"
    // InternalFortXTrans.g:5356:1: rule__Or__Group__1 : rule__Or__Group__1__Impl ;
    public final void rule__Or__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5360:1: ( rule__Or__Group__1__Impl )
            // InternalFortXTrans.g:5361:2: rule__Or__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Or__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Or__Group__1"


    // $ANTLR start "rule__Or__Group__1__Impl"
    // InternalFortXTrans.g:5367:1: rule__Or__Group__1__Impl : ( ( rule__Or__Group_1__0 )* ) ;
    public final void rule__Or__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5371:1: ( ( ( rule__Or__Group_1__0 )* ) )
            // InternalFortXTrans.g:5372:1: ( ( rule__Or__Group_1__0 )* )
            {
            // InternalFortXTrans.g:5372:1: ( ( rule__Or__Group_1__0 )* )
            // InternalFortXTrans.g:5373:2: ( rule__Or__Group_1__0 )*
            {
             before(grammarAccess.getOrAccess().getGroup_1()); 
            // InternalFortXTrans.g:5374:2: ( rule__Or__Group_1__0 )*
            loop53:
            do {
                int alt53=2;
                int LA53_0 = input.LA(1);

                if ( (LA53_0==38) ) {
                    alt53=1;
                }


                switch (alt53) {
            	case 1 :
            	    // InternalFortXTrans.g:5374:3: rule__Or__Group_1__0
            	    {
            	    pushFollow(FOLLOW_37);
            	    rule__Or__Group_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop53;
                }
            } while (true);

             after(grammarAccess.getOrAccess().getGroup_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Or__Group__1__Impl"


    // $ANTLR start "rule__Or__Group_1__0"
    // InternalFortXTrans.g:5383:1: rule__Or__Group_1__0 : rule__Or__Group_1__0__Impl rule__Or__Group_1__1 ;
    public final void rule__Or__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5387:1: ( rule__Or__Group_1__0__Impl rule__Or__Group_1__1 )
            // InternalFortXTrans.g:5388:2: rule__Or__Group_1__0__Impl rule__Or__Group_1__1
            {
            pushFollow(FOLLOW_36);
            rule__Or__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Or__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Or__Group_1__0"


    // $ANTLR start "rule__Or__Group_1__0__Impl"
    // InternalFortXTrans.g:5395:1: rule__Or__Group_1__0__Impl : ( () ) ;
    public final void rule__Or__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5399:1: ( ( () ) )
            // InternalFortXTrans.g:5400:1: ( () )
            {
            // InternalFortXTrans.g:5400:1: ( () )
            // InternalFortXTrans.g:5401:2: ()
            {
             before(grammarAccess.getOrAccess().getOrLeftAction_1_0()); 
            // InternalFortXTrans.g:5402:2: ()
            // InternalFortXTrans.g:5402:3: 
            {
            }

             after(grammarAccess.getOrAccess().getOrLeftAction_1_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Or__Group_1__0__Impl"


    // $ANTLR start "rule__Or__Group_1__1"
    // InternalFortXTrans.g:5410:1: rule__Or__Group_1__1 : rule__Or__Group_1__1__Impl rule__Or__Group_1__2 ;
    public final void rule__Or__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5414:1: ( rule__Or__Group_1__1__Impl rule__Or__Group_1__2 )
            // InternalFortXTrans.g:5415:2: rule__Or__Group_1__1__Impl rule__Or__Group_1__2
            {
            pushFollow(FOLLOW_32);
            rule__Or__Group_1__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Or__Group_1__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Or__Group_1__1"


    // $ANTLR start "rule__Or__Group_1__1__Impl"
    // InternalFortXTrans.g:5422:1: rule__Or__Group_1__1__Impl : ( 'OR' ) ;
    public final void rule__Or__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5426:1: ( ( 'OR' ) )
            // InternalFortXTrans.g:5427:1: ( 'OR' )
            {
            // InternalFortXTrans.g:5427:1: ( 'OR' )
            // InternalFortXTrans.g:5428:2: 'OR'
            {
             before(grammarAccess.getOrAccess().getORKeyword_1_1()); 
            match(input,38,FOLLOW_2); 
             after(grammarAccess.getOrAccess().getORKeyword_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Or__Group_1__1__Impl"


    // $ANTLR start "rule__Or__Group_1__2"
    // InternalFortXTrans.g:5437:1: rule__Or__Group_1__2 : rule__Or__Group_1__2__Impl ;
    public final void rule__Or__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5441:1: ( rule__Or__Group_1__2__Impl )
            // InternalFortXTrans.g:5442:2: rule__Or__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Or__Group_1__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Or__Group_1__2"


    // $ANTLR start "rule__Or__Group_1__2__Impl"
    // InternalFortXTrans.g:5448:1: rule__Or__Group_1__2__Impl : ( ( rule__Or__RightAssignment_1_2 ) ) ;
    public final void rule__Or__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5452:1: ( ( ( rule__Or__RightAssignment_1_2 ) ) )
            // InternalFortXTrans.g:5453:1: ( ( rule__Or__RightAssignment_1_2 ) )
            {
            // InternalFortXTrans.g:5453:1: ( ( rule__Or__RightAssignment_1_2 ) )
            // InternalFortXTrans.g:5454:2: ( rule__Or__RightAssignment_1_2 )
            {
             before(grammarAccess.getOrAccess().getRightAssignment_1_2()); 
            // InternalFortXTrans.g:5455:2: ( rule__Or__RightAssignment_1_2 )
            // InternalFortXTrans.g:5455:3: rule__Or__RightAssignment_1_2
            {
            pushFollow(FOLLOW_2);
            rule__Or__RightAssignment_1_2();

            state._fsp--;


            }

             after(grammarAccess.getOrAccess().getRightAssignment_1_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Or__Group_1__2__Impl"


    // $ANTLR start "rule__And__Group__0"
    // InternalFortXTrans.g:5464:1: rule__And__Group__0 : rule__And__Group__0__Impl rule__And__Group__1 ;
    public final void rule__And__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5468:1: ( rule__And__Group__0__Impl rule__And__Group__1 )
            // InternalFortXTrans.g:5469:2: rule__And__Group__0__Impl rule__And__Group__1
            {
            pushFollow(FOLLOW_38);
            rule__And__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__And__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__And__Group__0"


    // $ANTLR start "rule__And__Group__0__Impl"
    // InternalFortXTrans.g:5476:1: rule__And__Group__0__Impl : ( ruleEquality ) ;
    public final void rule__And__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5480:1: ( ( ruleEquality ) )
            // InternalFortXTrans.g:5481:1: ( ruleEquality )
            {
            // InternalFortXTrans.g:5481:1: ( ruleEquality )
            // InternalFortXTrans.g:5482:2: ruleEquality
            {
             before(grammarAccess.getAndAccess().getEqualityParserRuleCall_0()); 
            pushFollow(FOLLOW_2);
            ruleEquality();

            state._fsp--;

             after(grammarAccess.getAndAccess().getEqualityParserRuleCall_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__And__Group__0__Impl"


    // $ANTLR start "rule__And__Group__1"
    // InternalFortXTrans.g:5491:1: rule__And__Group__1 : rule__And__Group__1__Impl ;
    public final void rule__And__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5495:1: ( rule__And__Group__1__Impl )
            // InternalFortXTrans.g:5496:2: rule__And__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__And__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__And__Group__1"


    // $ANTLR start "rule__And__Group__1__Impl"
    // InternalFortXTrans.g:5502:1: rule__And__Group__1__Impl : ( ( rule__And__Group_1__0 )* ) ;
    public final void rule__And__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5506:1: ( ( ( rule__And__Group_1__0 )* ) )
            // InternalFortXTrans.g:5507:1: ( ( rule__And__Group_1__0 )* )
            {
            // InternalFortXTrans.g:5507:1: ( ( rule__And__Group_1__0 )* )
            // InternalFortXTrans.g:5508:2: ( rule__And__Group_1__0 )*
            {
             before(grammarAccess.getAndAccess().getGroup_1()); 
            // InternalFortXTrans.g:5509:2: ( rule__And__Group_1__0 )*
            loop54:
            do {
                int alt54=2;
                int LA54_0 = input.LA(1);

                if ( (LA54_0==39) ) {
                    alt54=1;
                }


                switch (alt54) {
            	case 1 :
            	    // InternalFortXTrans.g:5509:3: rule__And__Group_1__0
            	    {
            	    pushFollow(FOLLOW_39);
            	    rule__And__Group_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop54;
                }
            } while (true);

             after(grammarAccess.getAndAccess().getGroup_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__And__Group__1__Impl"


    // $ANTLR start "rule__And__Group_1__0"
    // InternalFortXTrans.g:5518:1: rule__And__Group_1__0 : rule__And__Group_1__0__Impl rule__And__Group_1__1 ;
    public final void rule__And__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5522:1: ( rule__And__Group_1__0__Impl rule__And__Group_1__1 )
            // InternalFortXTrans.g:5523:2: rule__And__Group_1__0__Impl rule__And__Group_1__1
            {
            pushFollow(FOLLOW_38);
            rule__And__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__And__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__And__Group_1__0"


    // $ANTLR start "rule__And__Group_1__0__Impl"
    // InternalFortXTrans.g:5530:1: rule__And__Group_1__0__Impl : ( () ) ;
    public final void rule__And__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5534:1: ( ( () ) )
            // InternalFortXTrans.g:5535:1: ( () )
            {
            // InternalFortXTrans.g:5535:1: ( () )
            // InternalFortXTrans.g:5536:2: ()
            {
             before(grammarAccess.getAndAccess().getAndLeftAction_1_0()); 
            // InternalFortXTrans.g:5537:2: ()
            // InternalFortXTrans.g:5537:3: 
            {
            }

             after(grammarAccess.getAndAccess().getAndLeftAction_1_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__And__Group_1__0__Impl"


    // $ANTLR start "rule__And__Group_1__1"
    // InternalFortXTrans.g:5545:1: rule__And__Group_1__1 : rule__And__Group_1__1__Impl rule__And__Group_1__2 ;
    public final void rule__And__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5549:1: ( rule__And__Group_1__1__Impl rule__And__Group_1__2 )
            // InternalFortXTrans.g:5550:2: rule__And__Group_1__1__Impl rule__And__Group_1__2
            {
            pushFollow(FOLLOW_32);
            rule__And__Group_1__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__And__Group_1__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__And__Group_1__1"


    // $ANTLR start "rule__And__Group_1__1__Impl"
    // InternalFortXTrans.g:5557:1: rule__And__Group_1__1__Impl : ( 'AND' ) ;
    public final void rule__And__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5561:1: ( ( 'AND' ) )
            // InternalFortXTrans.g:5562:1: ( 'AND' )
            {
            // InternalFortXTrans.g:5562:1: ( 'AND' )
            // InternalFortXTrans.g:5563:2: 'AND'
            {
             before(grammarAccess.getAndAccess().getANDKeyword_1_1()); 
            match(input,39,FOLLOW_2); 
             after(grammarAccess.getAndAccess().getANDKeyword_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__And__Group_1__1__Impl"


    // $ANTLR start "rule__And__Group_1__2"
    // InternalFortXTrans.g:5572:1: rule__And__Group_1__2 : rule__And__Group_1__2__Impl ;
    public final void rule__And__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5576:1: ( rule__And__Group_1__2__Impl )
            // InternalFortXTrans.g:5577:2: rule__And__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__And__Group_1__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__And__Group_1__2"


    // $ANTLR start "rule__And__Group_1__2__Impl"
    // InternalFortXTrans.g:5583:1: rule__And__Group_1__2__Impl : ( ( rule__And__RightAssignment_1_2 ) ) ;
    public final void rule__And__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5587:1: ( ( ( rule__And__RightAssignment_1_2 ) ) )
            // InternalFortXTrans.g:5588:1: ( ( rule__And__RightAssignment_1_2 ) )
            {
            // InternalFortXTrans.g:5588:1: ( ( rule__And__RightAssignment_1_2 ) )
            // InternalFortXTrans.g:5589:2: ( rule__And__RightAssignment_1_2 )
            {
             before(grammarAccess.getAndAccess().getRightAssignment_1_2()); 
            // InternalFortXTrans.g:5590:2: ( rule__And__RightAssignment_1_2 )
            // InternalFortXTrans.g:5590:3: rule__And__RightAssignment_1_2
            {
            pushFollow(FOLLOW_2);
            rule__And__RightAssignment_1_2();

            state._fsp--;


            }

             after(grammarAccess.getAndAccess().getRightAssignment_1_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__And__Group_1__2__Impl"


    // $ANTLR start "rule__Equality__Group__0"
    // InternalFortXTrans.g:5599:1: rule__Equality__Group__0 : rule__Equality__Group__0__Impl rule__Equality__Group__1 ;
    public final void rule__Equality__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5603:1: ( rule__Equality__Group__0__Impl rule__Equality__Group__1 )
            // InternalFortXTrans.g:5604:2: rule__Equality__Group__0__Impl rule__Equality__Group__1
            {
            pushFollow(FOLLOW_40);
            rule__Equality__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Equality__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equality__Group__0"


    // $ANTLR start "rule__Equality__Group__0__Impl"
    // InternalFortXTrans.g:5611:1: rule__Equality__Group__0__Impl : ( ruleComparison ) ;
    public final void rule__Equality__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5615:1: ( ( ruleComparison ) )
            // InternalFortXTrans.g:5616:1: ( ruleComparison )
            {
            // InternalFortXTrans.g:5616:1: ( ruleComparison )
            // InternalFortXTrans.g:5617:2: ruleComparison
            {
             before(grammarAccess.getEqualityAccess().getComparisonParserRuleCall_0()); 
            pushFollow(FOLLOW_2);
            ruleComparison();

            state._fsp--;

             after(grammarAccess.getEqualityAccess().getComparisonParserRuleCall_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equality__Group__0__Impl"


    // $ANTLR start "rule__Equality__Group__1"
    // InternalFortXTrans.g:5626:1: rule__Equality__Group__1 : rule__Equality__Group__1__Impl ;
    public final void rule__Equality__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5630:1: ( rule__Equality__Group__1__Impl )
            // InternalFortXTrans.g:5631:2: rule__Equality__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Equality__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equality__Group__1"


    // $ANTLR start "rule__Equality__Group__1__Impl"
    // InternalFortXTrans.g:5637:1: rule__Equality__Group__1__Impl : ( ( rule__Equality__Group_1__0 )* ) ;
    public final void rule__Equality__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5641:1: ( ( ( rule__Equality__Group_1__0 )* ) )
            // InternalFortXTrans.g:5642:1: ( ( rule__Equality__Group_1__0 )* )
            {
            // InternalFortXTrans.g:5642:1: ( ( rule__Equality__Group_1__0 )* )
            // InternalFortXTrans.g:5643:2: ( rule__Equality__Group_1__0 )*
            {
             before(grammarAccess.getEqualityAccess().getGroup_1()); 
            // InternalFortXTrans.g:5644:2: ( rule__Equality__Group_1__0 )*
            loop55:
            do {
                int alt55=2;
                switch ( input.LA(1) ) {
                case 13:
                    {
                    alt55=1;
                    }
                    break;
                case 14:
                    {
                    alt55=1;
                    }
                    break;
                case 15:
                    {
                    alt55=1;
                    }
                    break;
                case 16:
                    {
                    alt55=1;
                    }
                    break;

                }

                switch (alt55) {
            	case 1 :
            	    // InternalFortXTrans.g:5644:3: rule__Equality__Group_1__0
            	    {
            	    pushFollow(FOLLOW_41);
            	    rule__Equality__Group_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop55;
                }
            } while (true);

             after(grammarAccess.getEqualityAccess().getGroup_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equality__Group__1__Impl"


    // $ANTLR start "rule__Equality__Group_1__0"
    // InternalFortXTrans.g:5653:1: rule__Equality__Group_1__0 : rule__Equality__Group_1__0__Impl rule__Equality__Group_1__1 ;
    public final void rule__Equality__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5657:1: ( rule__Equality__Group_1__0__Impl rule__Equality__Group_1__1 )
            // InternalFortXTrans.g:5658:2: rule__Equality__Group_1__0__Impl rule__Equality__Group_1__1
            {
            pushFollow(FOLLOW_40);
            rule__Equality__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Equality__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equality__Group_1__0"


    // $ANTLR start "rule__Equality__Group_1__0__Impl"
    // InternalFortXTrans.g:5665:1: rule__Equality__Group_1__0__Impl : ( () ) ;
    public final void rule__Equality__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5669:1: ( ( () ) )
            // InternalFortXTrans.g:5670:1: ( () )
            {
            // InternalFortXTrans.g:5670:1: ( () )
            // InternalFortXTrans.g:5671:2: ()
            {
             before(grammarAccess.getEqualityAccess().getEqualityLeftAction_1_0()); 
            // InternalFortXTrans.g:5672:2: ()
            // InternalFortXTrans.g:5672:3: 
            {
            }

             after(grammarAccess.getEqualityAccess().getEqualityLeftAction_1_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equality__Group_1__0__Impl"


    // $ANTLR start "rule__Equality__Group_1__1"
    // InternalFortXTrans.g:5680:1: rule__Equality__Group_1__1 : rule__Equality__Group_1__1__Impl rule__Equality__Group_1__2 ;
    public final void rule__Equality__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5684:1: ( rule__Equality__Group_1__1__Impl rule__Equality__Group_1__2 )
            // InternalFortXTrans.g:5685:2: rule__Equality__Group_1__1__Impl rule__Equality__Group_1__2
            {
            pushFollow(FOLLOW_32);
            rule__Equality__Group_1__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Equality__Group_1__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equality__Group_1__1"


    // $ANTLR start "rule__Equality__Group_1__1__Impl"
    // InternalFortXTrans.g:5692:1: rule__Equality__Group_1__1__Impl : ( ( rule__Equality__OpAssignment_1_1 ) ) ;
    public final void rule__Equality__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5696:1: ( ( ( rule__Equality__OpAssignment_1_1 ) ) )
            // InternalFortXTrans.g:5697:1: ( ( rule__Equality__OpAssignment_1_1 ) )
            {
            // InternalFortXTrans.g:5697:1: ( ( rule__Equality__OpAssignment_1_1 ) )
            // InternalFortXTrans.g:5698:2: ( rule__Equality__OpAssignment_1_1 )
            {
             before(grammarAccess.getEqualityAccess().getOpAssignment_1_1()); 
            // InternalFortXTrans.g:5699:2: ( rule__Equality__OpAssignment_1_1 )
            // InternalFortXTrans.g:5699:3: rule__Equality__OpAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Equality__OpAssignment_1_1();

            state._fsp--;


            }

             after(grammarAccess.getEqualityAccess().getOpAssignment_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equality__Group_1__1__Impl"


    // $ANTLR start "rule__Equality__Group_1__2"
    // InternalFortXTrans.g:5707:1: rule__Equality__Group_1__2 : rule__Equality__Group_1__2__Impl ;
    public final void rule__Equality__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5711:1: ( rule__Equality__Group_1__2__Impl )
            // InternalFortXTrans.g:5712:2: rule__Equality__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Equality__Group_1__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equality__Group_1__2"


    // $ANTLR start "rule__Equality__Group_1__2__Impl"
    // InternalFortXTrans.g:5718:1: rule__Equality__Group_1__2__Impl : ( ( rule__Equality__RightAssignment_1_2 ) ) ;
    public final void rule__Equality__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5722:1: ( ( ( rule__Equality__RightAssignment_1_2 ) ) )
            // InternalFortXTrans.g:5723:1: ( ( rule__Equality__RightAssignment_1_2 ) )
            {
            // InternalFortXTrans.g:5723:1: ( ( rule__Equality__RightAssignment_1_2 ) )
            // InternalFortXTrans.g:5724:2: ( rule__Equality__RightAssignment_1_2 )
            {
             before(grammarAccess.getEqualityAccess().getRightAssignment_1_2()); 
            // InternalFortXTrans.g:5725:2: ( rule__Equality__RightAssignment_1_2 )
            // InternalFortXTrans.g:5725:3: rule__Equality__RightAssignment_1_2
            {
            pushFollow(FOLLOW_2);
            rule__Equality__RightAssignment_1_2();

            state._fsp--;


            }

             after(grammarAccess.getEqualityAccess().getRightAssignment_1_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equality__Group_1__2__Impl"


    // $ANTLR start "rule__Comparison__Group__0"
    // InternalFortXTrans.g:5734:1: rule__Comparison__Group__0 : rule__Comparison__Group__0__Impl rule__Comparison__Group__1 ;
    public final void rule__Comparison__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5738:1: ( rule__Comparison__Group__0__Impl rule__Comparison__Group__1 )
            // InternalFortXTrans.g:5739:2: rule__Comparison__Group__0__Impl rule__Comparison__Group__1
            {
            pushFollow(FOLLOW_42);
            rule__Comparison__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Comparison__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Group__0"


    // $ANTLR start "rule__Comparison__Group__0__Impl"
    // InternalFortXTrans.g:5746:1: rule__Comparison__Group__0__Impl : ( ruleAddExpr ) ;
    public final void rule__Comparison__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5750:1: ( ( ruleAddExpr ) )
            // InternalFortXTrans.g:5751:1: ( ruleAddExpr )
            {
            // InternalFortXTrans.g:5751:1: ( ruleAddExpr )
            // InternalFortXTrans.g:5752:2: ruleAddExpr
            {
             before(grammarAccess.getComparisonAccess().getAddExprParserRuleCall_0()); 
            pushFollow(FOLLOW_2);
            ruleAddExpr();

            state._fsp--;

             after(grammarAccess.getComparisonAccess().getAddExprParserRuleCall_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Group__0__Impl"


    // $ANTLR start "rule__Comparison__Group__1"
    // InternalFortXTrans.g:5761:1: rule__Comparison__Group__1 : rule__Comparison__Group__1__Impl ;
    public final void rule__Comparison__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5765:1: ( rule__Comparison__Group__1__Impl )
            // InternalFortXTrans.g:5766:2: rule__Comparison__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Comparison__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Group__1"


    // $ANTLR start "rule__Comparison__Group__1__Impl"
    // InternalFortXTrans.g:5772:1: rule__Comparison__Group__1__Impl : ( ( rule__Comparison__Group_1__0 )* ) ;
    public final void rule__Comparison__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5776:1: ( ( ( rule__Comparison__Group_1__0 )* ) )
            // InternalFortXTrans.g:5777:1: ( ( rule__Comparison__Group_1__0 )* )
            {
            // InternalFortXTrans.g:5777:1: ( ( rule__Comparison__Group_1__0 )* )
            // InternalFortXTrans.g:5778:2: ( rule__Comparison__Group_1__0 )*
            {
             before(grammarAccess.getComparisonAccess().getGroup_1()); 
            // InternalFortXTrans.g:5779:2: ( rule__Comparison__Group_1__0 )*
            loop56:
            do {
                int alt56=2;
                alt56 = dfa56.predict(input);
                switch (alt56) {
            	case 1 :
            	    // InternalFortXTrans.g:5779:3: rule__Comparison__Group_1__0
            	    {
            	    pushFollow(FOLLOW_43);
            	    rule__Comparison__Group_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop56;
                }
            } while (true);

             after(grammarAccess.getComparisonAccess().getGroup_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Group__1__Impl"


    // $ANTLR start "rule__Comparison__Group_1__0"
    // InternalFortXTrans.g:5788:1: rule__Comparison__Group_1__0 : rule__Comparison__Group_1__0__Impl rule__Comparison__Group_1__1 ;
    public final void rule__Comparison__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5792:1: ( rule__Comparison__Group_1__0__Impl rule__Comparison__Group_1__1 )
            // InternalFortXTrans.g:5793:2: rule__Comparison__Group_1__0__Impl rule__Comparison__Group_1__1
            {
            pushFollow(FOLLOW_42);
            rule__Comparison__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Comparison__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Group_1__0"


    // $ANTLR start "rule__Comparison__Group_1__0__Impl"
    // InternalFortXTrans.g:5800:1: rule__Comparison__Group_1__0__Impl : ( () ) ;
    public final void rule__Comparison__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5804:1: ( ( () ) )
            // InternalFortXTrans.g:5805:1: ( () )
            {
            // InternalFortXTrans.g:5805:1: ( () )
            // InternalFortXTrans.g:5806:2: ()
            {
             before(grammarAccess.getComparisonAccess().getComparisonLeftAction_1_0()); 
            // InternalFortXTrans.g:5807:2: ()
            // InternalFortXTrans.g:5807:3: 
            {
            }

             after(grammarAccess.getComparisonAccess().getComparisonLeftAction_1_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Group_1__0__Impl"


    // $ANTLR start "rule__Comparison__Group_1__1"
    // InternalFortXTrans.g:5815:1: rule__Comparison__Group_1__1 : rule__Comparison__Group_1__1__Impl rule__Comparison__Group_1__2 ;
    public final void rule__Comparison__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5819:1: ( rule__Comparison__Group_1__1__Impl rule__Comparison__Group_1__2 )
            // InternalFortXTrans.g:5820:2: rule__Comparison__Group_1__1__Impl rule__Comparison__Group_1__2
            {
            pushFollow(FOLLOW_32);
            rule__Comparison__Group_1__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Comparison__Group_1__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Group_1__1"


    // $ANTLR start "rule__Comparison__Group_1__1__Impl"
    // InternalFortXTrans.g:5827:1: rule__Comparison__Group_1__1__Impl : ( ( rule__Comparison__OpAssignment_1_1 ) ) ;
    public final void rule__Comparison__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5831:1: ( ( ( rule__Comparison__OpAssignment_1_1 ) ) )
            // InternalFortXTrans.g:5832:1: ( ( rule__Comparison__OpAssignment_1_1 ) )
            {
            // InternalFortXTrans.g:5832:1: ( ( rule__Comparison__OpAssignment_1_1 ) )
            // InternalFortXTrans.g:5833:2: ( rule__Comparison__OpAssignment_1_1 )
            {
             before(grammarAccess.getComparisonAccess().getOpAssignment_1_1()); 
            // InternalFortXTrans.g:5834:2: ( rule__Comparison__OpAssignment_1_1 )
            // InternalFortXTrans.g:5834:3: rule__Comparison__OpAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Comparison__OpAssignment_1_1();

            state._fsp--;


            }

             after(grammarAccess.getComparisonAccess().getOpAssignment_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Group_1__1__Impl"


    // $ANTLR start "rule__Comparison__Group_1__2"
    // InternalFortXTrans.g:5842:1: rule__Comparison__Group_1__2 : rule__Comparison__Group_1__2__Impl ;
    public final void rule__Comparison__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5846:1: ( rule__Comparison__Group_1__2__Impl )
            // InternalFortXTrans.g:5847:2: rule__Comparison__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Comparison__Group_1__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Group_1__2"


    // $ANTLR start "rule__Comparison__Group_1__2__Impl"
    // InternalFortXTrans.g:5853:1: rule__Comparison__Group_1__2__Impl : ( ( rule__Comparison__RightAssignment_1_2 ) ) ;
    public final void rule__Comparison__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5857:1: ( ( ( rule__Comparison__RightAssignment_1_2 ) ) )
            // InternalFortXTrans.g:5858:1: ( ( rule__Comparison__RightAssignment_1_2 ) )
            {
            // InternalFortXTrans.g:5858:1: ( ( rule__Comparison__RightAssignment_1_2 ) )
            // InternalFortXTrans.g:5859:2: ( rule__Comparison__RightAssignment_1_2 )
            {
             before(grammarAccess.getComparisonAccess().getRightAssignment_1_2()); 
            // InternalFortXTrans.g:5860:2: ( rule__Comparison__RightAssignment_1_2 )
            // InternalFortXTrans.g:5860:3: rule__Comparison__RightAssignment_1_2
            {
            pushFollow(FOLLOW_2);
            rule__Comparison__RightAssignment_1_2();

            state._fsp--;


            }

             after(grammarAccess.getComparisonAccess().getRightAssignment_1_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Group_1__2__Impl"


    // $ANTLR start "rule__AddExpr__Group__0"
    // InternalFortXTrans.g:5869:1: rule__AddExpr__Group__0 : rule__AddExpr__Group__0__Impl rule__AddExpr__Group__1 ;
    public final void rule__AddExpr__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5873:1: ( rule__AddExpr__Group__0__Impl rule__AddExpr__Group__1 )
            // InternalFortXTrans.g:5874:2: rule__AddExpr__Group__0__Impl rule__AddExpr__Group__1
            {
            pushFollow(FOLLOW_44);
            rule__AddExpr__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__AddExpr__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AddExpr__Group__0"


    // $ANTLR start "rule__AddExpr__Group__0__Impl"
    // InternalFortXTrans.g:5881:1: rule__AddExpr__Group__0__Impl : ( ruleSubExpr ) ;
    public final void rule__AddExpr__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5885:1: ( ( ruleSubExpr ) )
            // InternalFortXTrans.g:5886:1: ( ruleSubExpr )
            {
            // InternalFortXTrans.g:5886:1: ( ruleSubExpr )
            // InternalFortXTrans.g:5887:2: ruleSubExpr
            {
             before(grammarAccess.getAddExprAccess().getSubExprParserRuleCall_0()); 
            pushFollow(FOLLOW_2);
            ruleSubExpr();

            state._fsp--;

             after(grammarAccess.getAddExprAccess().getSubExprParserRuleCall_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AddExpr__Group__0__Impl"


    // $ANTLR start "rule__AddExpr__Group__1"
    // InternalFortXTrans.g:5896:1: rule__AddExpr__Group__1 : rule__AddExpr__Group__1__Impl ;
    public final void rule__AddExpr__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5900:1: ( rule__AddExpr__Group__1__Impl )
            // InternalFortXTrans.g:5901:2: rule__AddExpr__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AddExpr__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AddExpr__Group__1"


    // $ANTLR start "rule__AddExpr__Group__1__Impl"
    // InternalFortXTrans.g:5907:1: rule__AddExpr__Group__1__Impl : ( ( rule__AddExpr__Group_1__0 )* ) ;
    public final void rule__AddExpr__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5911:1: ( ( ( rule__AddExpr__Group_1__0 )* ) )
            // InternalFortXTrans.g:5912:1: ( ( rule__AddExpr__Group_1__0 )* )
            {
            // InternalFortXTrans.g:5912:1: ( ( rule__AddExpr__Group_1__0 )* )
            // InternalFortXTrans.g:5913:2: ( rule__AddExpr__Group_1__0 )*
            {
             before(grammarAccess.getAddExprAccess().getGroup_1()); 
            // InternalFortXTrans.g:5914:2: ( rule__AddExpr__Group_1__0 )*
            loop57:
            do {
                int alt57=2;
                int LA57_0 = input.LA(1);

                if ( (LA57_0==40) ) {
                    alt57=1;
                }


                switch (alt57) {
            	case 1 :
            	    // InternalFortXTrans.g:5914:3: rule__AddExpr__Group_1__0
            	    {
            	    pushFollow(FOLLOW_45);
            	    rule__AddExpr__Group_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop57;
                }
            } while (true);

             after(grammarAccess.getAddExprAccess().getGroup_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AddExpr__Group__1__Impl"


    // $ANTLR start "rule__AddExpr__Group_1__0"
    // InternalFortXTrans.g:5923:1: rule__AddExpr__Group_1__0 : rule__AddExpr__Group_1__0__Impl rule__AddExpr__Group_1__1 ;
    public final void rule__AddExpr__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5927:1: ( rule__AddExpr__Group_1__0__Impl rule__AddExpr__Group_1__1 )
            // InternalFortXTrans.g:5928:2: rule__AddExpr__Group_1__0__Impl rule__AddExpr__Group_1__1
            {
            pushFollow(FOLLOW_44);
            rule__AddExpr__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__AddExpr__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AddExpr__Group_1__0"


    // $ANTLR start "rule__AddExpr__Group_1__0__Impl"
    // InternalFortXTrans.g:5935:1: rule__AddExpr__Group_1__0__Impl : ( () ) ;
    public final void rule__AddExpr__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5939:1: ( ( () ) )
            // InternalFortXTrans.g:5940:1: ( () )
            {
            // InternalFortXTrans.g:5940:1: ( () )
            // InternalFortXTrans.g:5941:2: ()
            {
             before(grammarAccess.getAddExprAccess().getAddExprLeftAction_1_0()); 
            // InternalFortXTrans.g:5942:2: ()
            // InternalFortXTrans.g:5942:3: 
            {
            }

             after(grammarAccess.getAddExprAccess().getAddExprLeftAction_1_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AddExpr__Group_1__0__Impl"


    // $ANTLR start "rule__AddExpr__Group_1__1"
    // InternalFortXTrans.g:5950:1: rule__AddExpr__Group_1__1 : rule__AddExpr__Group_1__1__Impl rule__AddExpr__Group_1__2 ;
    public final void rule__AddExpr__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5954:1: ( rule__AddExpr__Group_1__1__Impl rule__AddExpr__Group_1__2 )
            // InternalFortXTrans.g:5955:2: rule__AddExpr__Group_1__1__Impl rule__AddExpr__Group_1__2
            {
            pushFollow(FOLLOW_32);
            rule__AddExpr__Group_1__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__AddExpr__Group_1__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AddExpr__Group_1__1"


    // $ANTLR start "rule__AddExpr__Group_1__1__Impl"
    // InternalFortXTrans.g:5962:1: rule__AddExpr__Group_1__1__Impl : ( '+' ) ;
    public final void rule__AddExpr__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5966:1: ( ( '+' ) )
            // InternalFortXTrans.g:5967:1: ( '+' )
            {
            // InternalFortXTrans.g:5967:1: ( '+' )
            // InternalFortXTrans.g:5968:2: '+'
            {
             before(grammarAccess.getAddExprAccess().getPlusSignKeyword_1_1()); 
            match(input,40,FOLLOW_2); 
             after(grammarAccess.getAddExprAccess().getPlusSignKeyword_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AddExpr__Group_1__1__Impl"


    // $ANTLR start "rule__AddExpr__Group_1__2"
    // InternalFortXTrans.g:5977:1: rule__AddExpr__Group_1__2 : rule__AddExpr__Group_1__2__Impl ;
    public final void rule__AddExpr__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5981:1: ( rule__AddExpr__Group_1__2__Impl )
            // InternalFortXTrans.g:5982:2: rule__AddExpr__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AddExpr__Group_1__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AddExpr__Group_1__2"


    // $ANTLR start "rule__AddExpr__Group_1__2__Impl"
    // InternalFortXTrans.g:5988:1: rule__AddExpr__Group_1__2__Impl : ( ( rule__AddExpr__RightAssignment_1_2 ) ) ;
    public final void rule__AddExpr__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5992:1: ( ( ( rule__AddExpr__RightAssignment_1_2 ) ) )
            // InternalFortXTrans.g:5993:1: ( ( rule__AddExpr__RightAssignment_1_2 ) )
            {
            // InternalFortXTrans.g:5993:1: ( ( rule__AddExpr__RightAssignment_1_2 ) )
            // InternalFortXTrans.g:5994:2: ( rule__AddExpr__RightAssignment_1_2 )
            {
             before(grammarAccess.getAddExprAccess().getRightAssignment_1_2()); 
            // InternalFortXTrans.g:5995:2: ( rule__AddExpr__RightAssignment_1_2 )
            // InternalFortXTrans.g:5995:3: rule__AddExpr__RightAssignment_1_2
            {
            pushFollow(FOLLOW_2);
            rule__AddExpr__RightAssignment_1_2();

            state._fsp--;


            }

             after(grammarAccess.getAddExprAccess().getRightAssignment_1_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AddExpr__Group_1__2__Impl"


    // $ANTLR start "rule__SubExpr__Group__0"
    // InternalFortXTrans.g:6004:1: rule__SubExpr__Group__0 : rule__SubExpr__Group__0__Impl rule__SubExpr__Group__1 ;
    public final void rule__SubExpr__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6008:1: ( rule__SubExpr__Group__0__Impl rule__SubExpr__Group__1 )
            // InternalFortXTrans.g:6009:2: rule__SubExpr__Group__0__Impl rule__SubExpr__Group__1
            {
            pushFollow(FOLLOW_46);
            rule__SubExpr__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__SubExpr__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubExpr__Group__0"


    // $ANTLR start "rule__SubExpr__Group__0__Impl"
    // InternalFortXTrans.g:6016:1: rule__SubExpr__Group__0__Impl : ( ruleDivExpr ) ;
    public final void rule__SubExpr__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6020:1: ( ( ruleDivExpr ) )
            // InternalFortXTrans.g:6021:1: ( ruleDivExpr )
            {
            // InternalFortXTrans.g:6021:1: ( ruleDivExpr )
            // InternalFortXTrans.g:6022:2: ruleDivExpr
            {
             before(grammarAccess.getSubExprAccess().getDivExprParserRuleCall_0()); 
            pushFollow(FOLLOW_2);
            ruleDivExpr();

            state._fsp--;

             after(grammarAccess.getSubExprAccess().getDivExprParserRuleCall_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubExpr__Group__0__Impl"


    // $ANTLR start "rule__SubExpr__Group__1"
    // InternalFortXTrans.g:6031:1: rule__SubExpr__Group__1 : rule__SubExpr__Group__1__Impl ;
    public final void rule__SubExpr__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6035:1: ( rule__SubExpr__Group__1__Impl )
            // InternalFortXTrans.g:6036:2: rule__SubExpr__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__SubExpr__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubExpr__Group__1"


    // $ANTLR start "rule__SubExpr__Group__1__Impl"
    // InternalFortXTrans.g:6042:1: rule__SubExpr__Group__1__Impl : ( ( rule__SubExpr__Group_1__0 )* ) ;
    public final void rule__SubExpr__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6046:1: ( ( ( rule__SubExpr__Group_1__0 )* ) )
            // InternalFortXTrans.g:6047:1: ( ( rule__SubExpr__Group_1__0 )* )
            {
            // InternalFortXTrans.g:6047:1: ( ( rule__SubExpr__Group_1__0 )* )
            // InternalFortXTrans.g:6048:2: ( rule__SubExpr__Group_1__0 )*
            {
             before(grammarAccess.getSubExprAccess().getGroup_1()); 
            // InternalFortXTrans.g:6049:2: ( rule__SubExpr__Group_1__0 )*
            loop58:
            do {
                int alt58=2;
                int LA58_0 = input.LA(1);

                if ( (LA58_0==41) ) {
                    alt58=1;
                }


                switch (alt58) {
            	case 1 :
            	    // InternalFortXTrans.g:6049:3: rule__SubExpr__Group_1__0
            	    {
            	    pushFollow(FOLLOW_47);
            	    rule__SubExpr__Group_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop58;
                }
            } while (true);

             after(grammarAccess.getSubExprAccess().getGroup_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubExpr__Group__1__Impl"


    // $ANTLR start "rule__SubExpr__Group_1__0"
    // InternalFortXTrans.g:6058:1: rule__SubExpr__Group_1__0 : rule__SubExpr__Group_1__0__Impl rule__SubExpr__Group_1__1 ;
    public final void rule__SubExpr__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6062:1: ( rule__SubExpr__Group_1__0__Impl rule__SubExpr__Group_1__1 )
            // InternalFortXTrans.g:6063:2: rule__SubExpr__Group_1__0__Impl rule__SubExpr__Group_1__1
            {
            pushFollow(FOLLOW_46);
            rule__SubExpr__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__SubExpr__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubExpr__Group_1__0"


    // $ANTLR start "rule__SubExpr__Group_1__0__Impl"
    // InternalFortXTrans.g:6070:1: rule__SubExpr__Group_1__0__Impl : ( () ) ;
    public final void rule__SubExpr__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6074:1: ( ( () ) )
            // InternalFortXTrans.g:6075:1: ( () )
            {
            // InternalFortXTrans.g:6075:1: ( () )
            // InternalFortXTrans.g:6076:2: ()
            {
             before(grammarAccess.getSubExprAccess().getSubExprLeftAction_1_0()); 
            // InternalFortXTrans.g:6077:2: ()
            // InternalFortXTrans.g:6077:3: 
            {
            }

             after(grammarAccess.getSubExprAccess().getSubExprLeftAction_1_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubExpr__Group_1__0__Impl"


    // $ANTLR start "rule__SubExpr__Group_1__1"
    // InternalFortXTrans.g:6085:1: rule__SubExpr__Group_1__1 : rule__SubExpr__Group_1__1__Impl rule__SubExpr__Group_1__2 ;
    public final void rule__SubExpr__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6089:1: ( rule__SubExpr__Group_1__1__Impl rule__SubExpr__Group_1__2 )
            // InternalFortXTrans.g:6090:2: rule__SubExpr__Group_1__1__Impl rule__SubExpr__Group_1__2
            {
            pushFollow(FOLLOW_32);
            rule__SubExpr__Group_1__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__SubExpr__Group_1__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubExpr__Group_1__1"


    // $ANTLR start "rule__SubExpr__Group_1__1__Impl"
    // InternalFortXTrans.g:6097:1: rule__SubExpr__Group_1__1__Impl : ( '-' ) ;
    public final void rule__SubExpr__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6101:1: ( ( '-' ) )
            // InternalFortXTrans.g:6102:1: ( '-' )
            {
            // InternalFortXTrans.g:6102:1: ( '-' )
            // InternalFortXTrans.g:6103:2: '-'
            {
             before(grammarAccess.getSubExprAccess().getHyphenMinusKeyword_1_1()); 
            match(input,41,FOLLOW_2); 
             after(grammarAccess.getSubExprAccess().getHyphenMinusKeyword_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubExpr__Group_1__1__Impl"


    // $ANTLR start "rule__SubExpr__Group_1__2"
    // InternalFortXTrans.g:6112:1: rule__SubExpr__Group_1__2 : rule__SubExpr__Group_1__2__Impl ;
    public final void rule__SubExpr__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6116:1: ( rule__SubExpr__Group_1__2__Impl )
            // InternalFortXTrans.g:6117:2: rule__SubExpr__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__SubExpr__Group_1__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubExpr__Group_1__2"


    // $ANTLR start "rule__SubExpr__Group_1__2__Impl"
    // InternalFortXTrans.g:6123:1: rule__SubExpr__Group_1__2__Impl : ( ( rule__SubExpr__RightAssignment_1_2 ) ) ;
    public final void rule__SubExpr__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6127:1: ( ( ( rule__SubExpr__RightAssignment_1_2 ) ) )
            // InternalFortXTrans.g:6128:1: ( ( rule__SubExpr__RightAssignment_1_2 ) )
            {
            // InternalFortXTrans.g:6128:1: ( ( rule__SubExpr__RightAssignment_1_2 ) )
            // InternalFortXTrans.g:6129:2: ( rule__SubExpr__RightAssignment_1_2 )
            {
             before(grammarAccess.getSubExprAccess().getRightAssignment_1_2()); 
            // InternalFortXTrans.g:6130:2: ( rule__SubExpr__RightAssignment_1_2 )
            // InternalFortXTrans.g:6130:3: rule__SubExpr__RightAssignment_1_2
            {
            pushFollow(FOLLOW_2);
            rule__SubExpr__RightAssignment_1_2();

            state._fsp--;


            }

             after(grammarAccess.getSubExprAccess().getRightAssignment_1_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubExpr__Group_1__2__Impl"


    // $ANTLR start "rule__DivExpr__Group__0"
    // InternalFortXTrans.g:6139:1: rule__DivExpr__Group__0 : rule__DivExpr__Group__0__Impl rule__DivExpr__Group__1 ;
    public final void rule__DivExpr__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6143:1: ( rule__DivExpr__Group__0__Impl rule__DivExpr__Group__1 )
            // InternalFortXTrans.g:6144:2: rule__DivExpr__Group__0__Impl rule__DivExpr__Group__1
            {
            pushFollow(FOLLOW_48);
            rule__DivExpr__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DivExpr__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DivExpr__Group__0"


    // $ANTLR start "rule__DivExpr__Group__0__Impl"
    // InternalFortXTrans.g:6151:1: rule__DivExpr__Group__0__Impl : ( ruleMultExpr ) ;
    public final void rule__DivExpr__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6155:1: ( ( ruleMultExpr ) )
            // InternalFortXTrans.g:6156:1: ( ruleMultExpr )
            {
            // InternalFortXTrans.g:6156:1: ( ruleMultExpr )
            // InternalFortXTrans.g:6157:2: ruleMultExpr
            {
             before(grammarAccess.getDivExprAccess().getMultExprParserRuleCall_0()); 
            pushFollow(FOLLOW_2);
            ruleMultExpr();

            state._fsp--;

             after(grammarAccess.getDivExprAccess().getMultExprParserRuleCall_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DivExpr__Group__0__Impl"


    // $ANTLR start "rule__DivExpr__Group__1"
    // InternalFortXTrans.g:6166:1: rule__DivExpr__Group__1 : rule__DivExpr__Group__1__Impl ;
    public final void rule__DivExpr__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6170:1: ( rule__DivExpr__Group__1__Impl )
            // InternalFortXTrans.g:6171:2: rule__DivExpr__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__DivExpr__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DivExpr__Group__1"


    // $ANTLR start "rule__DivExpr__Group__1__Impl"
    // InternalFortXTrans.g:6177:1: rule__DivExpr__Group__1__Impl : ( ( rule__DivExpr__Group_1__0 )* ) ;
    public final void rule__DivExpr__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6181:1: ( ( ( rule__DivExpr__Group_1__0 )* ) )
            // InternalFortXTrans.g:6182:1: ( ( rule__DivExpr__Group_1__0 )* )
            {
            // InternalFortXTrans.g:6182:1: ( ( rule__DivExpr__Group_1__0 )* )
            // InternalFortXTrans.g:6183:2: ( rule__DivExpr__Group_1__0 )*
            {
             before(grammarAccess.getDivExprAccess().getGroup_1()); 
            // InternalFortXTrans.g:6184:2: ( rule__DivExpr__Group_1__0 )*
            loop59:
            do {
                int alt59=2;
                int LA59_0 = input.LA(1);

                if ( (LA59_0==42) ) {
                    alt59=1;
                }


                switch (alt59) {
            	case 1 :
            	    // InternalFortXTrans.g:6184:3: rule__DivExpr__Group_1__0
            	    {
            	    pushFollow(FOLLOW_49);
            	    rule__DivExpr__Group_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop59;
                }
            } while (true);

             after(grammarAccess.getDivExprAccess().getGroup_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DivExpr__Group__1__Impl"


    // $ANTLR start "rule__DivExpr__Group_1__0"
    // InternalFortXTrans.g:6193:1: rule__DivExpr__Group_1__0 : rule__DivExpr__Group_1__0__Impl rule__DivExpr__Group_1__1 ;
    public final void rule__DivExpr__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6197:1: ( rule__DivExpr__Group_1__0__Impl rule__DivExpr__Group_1__1 )
            // InternalFortXTrans.g:6198:2: rule__DivExpr__Group_1__0__Impl rule__DivExpr__Group_1__1
            {
            pushFollow(FOLLOW_48);
            rule__DivExpr__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DivExpr__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DivExpr__Group_1__0"


    // $ANTLR start "rule__DivExpr__Group_1__0__Impl"
    // InternalFortXTrans.g:6205:1: rule__DivExpr__Group_1__0__Impl : ( () ) ;
    public final void rule__DivExpr__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6209:1: ( ( () ) )
            // InternalFortXTrans.g:6210:1: ( () )
            {
            // InternalFortXTrans.g:6210:1: ( () )
            // InternalFortXTrans.g:6211:2: ()
            {
             before(grammarAccess.getDivExprAccess().getDivExprLeftAction_1_0()); 
            // InternalFortXTrans.g:6212:2: ()
            // InternalFortXTrans.g:6212:3: 
            {
            }

             after(grammarAccess.getDivExprAccess().getDivExprLeftAction_1_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DivExpr__Group_1__0__Impl"


    // $ANTLR start "rule__DivExpr__Group_1__1"
    // InternalFortXTrans.g:6220:1: rule__DivExpr__Group_1__1 : rule__DivExpr__Group_1__1__Impl rule__DivExpr__Group_1__2 ;
    public final void rule__DivExpr__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6224:1: ( rule__DivExpr__Group_1__1__Impl rule__DivExpr__Group_1__2 )
            // InternalFortXTrans.g:6225:2: rule__DivExpr__Group_1__1__Impl rule__DivExpr__Group_1__2
            {
            pushFollow(FOLLOW_32);
            rule__DivExpr__Group_1__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DivExpr__Group_1__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DivExpr__Group_1__1"


    // $ANTLR start "rule__DivExpr__Group_1__1__Impl"
    // InternalFortXTrans.g:6232:1: rule__DivExpr__Group_1__1__Impl : ( '/' ) ;
    public final void rule__DivExpr__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6236:1: ( ( '/' ) )
            // InternalFortXTrans.g:6237:1: ( '/' )
            {
            // InternalFortXTrans.g:6237:1: ( '/' )
            // InternalFortXTrans.g:6238:2: '/'
            {
             before(grammarAccess.getDivExprAccess().getSolidusKeyword_1_1()); 
            match(input,42,FOLLOW_2); 
             after(grammarAccess.getDivExprAccess().getSolidusKeyword_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DivExpr__Group_1__1__Impl"


    // $ANTLR start "rule__DivExpr__Group_1__2"
    // InternalFortXTrans.g:6247:1: rule__DivExpr__Group_1__2 : rule__DivExpr__Group_1__2__Impl ;
    public final void rule__DivExpr__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6251:1: ( rule__DivExpr__Group_1__2__Impl )
            // InternalFortXTrans.g:6252:2: rule__DivExpr__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__DivExpr__Group_1__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DivExpr__Group_1__2"


    // $ANTLR start "rule__DivExpr__Group_1__2__Impl"
    // InternalFortXTrans.g:6258:1: rule__DivExpr__Group_1__2__Impl : ( ( rule__DivExpr__RightAssignment_1_2 ) ) ;
    public final void rule__DivExpr__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6262:1: ( ( ( rule__DivExpr__RightAssignment_1_2 ) ) )
            // InternalFortXTrans.g:6263:1: ( ( rule__DivExpr__RightAssignment_1_2 ) )
            {
            // InternalFortXTrans.g:6263:1: ( ( rule__DivExpr__RightAssignment_1_2 ) )
            // InternalFortXTrans.g:6264:2: ( rule__DivExpr__RightAssignment_1_2 )
            {
             before(grammarAccess.getDivExprAccess().getRightAssignment_1_2()); 
            // InternalFortXTrans.g:6265:2: ( rule__DivExpr__RightAssignment_1_2 )
            // InternalFortXTrans.g:6265:3: rule__DivExpr__RightAssignment_1_2
            {
            pushFollow(FOLLOW_2);
            rule__DivExpr__RightAssignment_1_2();

            state._fsp--;


            }

             after(grammarAccess.getDivExprAccess().getRightAssignment_1_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DivExpr__Group_1__2__Impl"


    // $ANTLR start "rule__MultExpr__Group__0"
    // InternalFortXTrans.g:6274:1: rule__MultExpr__Group__0 : rule__MultExpr__Group__0__Impl rule__MultExpr__Group__1 ;
    public final void rule__MultExpr__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6278:1: ( rule__MultExpr__Group__0__Impl rule__MultExpr__Group__1 )
            // InternalFortXTrans.g:6279:2: rule__MultExpr__Group__0__Impl rule__MultExpr__Group__1
            {
            pushFollow(FOLLOW_50);
            rule__MultExpr__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__MultExpr__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultExpr__Group__0"


    // $ANTLR start "rule__MultExpr__Group__0__Impl"
    // InternalFortXTrans.g:6286:1: rule__MultExpr__Group__0__Impl : ( ruleExponentExpr ) ;
    public final void rule__MultExpr__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6290:1: ( ( ruleExponentExpr ) )
            // InternalFortXTrans.g:6291:1: ( ruleExponentExpr )
            {
            // InternalFortXTrans.g:6291:1: ( ruleExponentExpr )
            // InternalFortXTrans.g:6292:2: ruleExponentExpr
            {
             before(grammarAccess.getMultExprAccess().getExponentExprParserRuleCall_0()); 
            pushFollow(FOLLOW_2);
            ruleExponentExpr();

            state._fsp--;

             after(grammarAccess.getMultExprAccess().getExponentExprParserRuleCall_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultExpr__Group__0__Impl"


    // $ANTLR start "rule__MultExpr__Group__1"
    // InternalFortXTrans.g:6301:1: rule__MultExpr__Group__1 : rule__MultExpr__Group__1__Impl ;
    public final void rule__MultExpr__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6305:1: ( rule__MultExpr__Group__1__Impl )
            // InternalFortXTrans.g:6306:2: rule__MultExpr__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__MultExpr__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultExpr__Group__1"


    // $ANTLR start "rule__MultExpr__Group__1__Impl"
    // InternalFortXTrans.g:6312:1: rule__MultExpr__Group__1__Impl : ( ( rule__MultExpr__Group_1__0 )* ) ;
    public final void rule__MultExpr__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6316:1: ( ( ( rule__MultExpr__Group_1__0 )* ) )
            // InternalFortXTrans.g:6317:1: ( ( rule__MultExpr__Group_1__0 )* )
            {
            // InternalFortXTrans.g:6317:1: ( ( rule__MultExpr__Group_1__0 )* )
            // InternalFortXTrans.g:6318:2: ( rule__MultExpr__Group_1__0 )*
            {
             before(grammarAccess.getMultExprAccess().getGroup_1()); 
            // InternalFortXTrans.g:6319:2: ( rule__MultExpr__Group_1__0 )*
            loop60:
            do {
                int alt60=2;
                int LA60_0 = input.LA(1);

                if ( (LA60_0==43) ) {
                    alt60=1;
                }


                switch (alt60) {
            	case 1 :
            	    // InternalFortXTrans.g:6319:3: rule__MultExpr__Group_1__0
            	    {
            	    pushFollow(FOLLOW_51);
            	    rule__MultExpr__Group_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop60;
                }
            } while (true);

             after(grammarAccess.getMultExprAccess().getGroup_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultExpr__Group__1__Impl"


    // $ANTLR start "rule__MultExpr__Group_1__0"
    // InternalFortXTrans.g:6328:1: rule__MultExpr__Group_1__0 : rule__MultExpr__Group_1__0__Impl rule__MultExpr__Group_1__1 ;
    public final void rule__MultExpr__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6332:1: ( rule__MultExpr__Group_1__0__Impl rule__MultExpr__Group_1__1 )
            // InternalFortXTrans.g:6333:2: rule__MultExpr__Group_1__0__Impl rule__MultExpr__Group_1__1
            {
            pushFollow(FOLLOW_50);
            rule__MultExpr__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__MultExpr__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultExpr__Group_1__0"


    // $ANTLR start "rule__MultExpr__Group_1__0__Impl"
    // InternalFortXTrans.g:6340:1: rule__MultExpr__Group_1__0__Impl : ( () ) ;
    public final void rule__MultExpr__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6344:1: ( ( () ) )
            // InternalFortXTrans.g:6345:1: ( () )
            {
            // InternalFortXTrans.g:6345:1: ( () )
            // InternalFortXTrans.g:6346:2: ()
            {
             before(grammarAccess.getMultExprAccess().getMultExprLeftAction_1_0()); 
            // InternalFortXTrans.g:6347:2: ()
            // InternalFortXTrans.g:6347:3: 
            {
            }

             after(grammarAccess.getMultExprAccess().getMultExprLeftAction_1_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultExpr__Group_1__0__Impl"


    // $ANTLR start "rule__MultExpr__Group_1__1"
    // InternalFortXTrans.g:6355:1: rule__MultExpr__Group_1__1 : rule__MultExpr__Group_1__1__Impl rule__MultExpr__Group_1__2 ;
    public final void rule__MultExpr__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6359:1: ( rule__MultExpr__Group_1__1__Impl rule__MultExpr__Group_1__2 )
            // InternalFortXTrans.g:6360:2: rule__MultExpr__Group_1__1__Impl rule__MultExpr__Group_1__2
            {
            pushFollow(FOLLOW_32);
            rule__MultExpr__Group_1__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__MultExpr__Group_1__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultExpr__Group_1__1"


    // $ANTLR start "rule__MultExpr__Group_1__1__Impl"
    // InternalFortXTrans.g:6367:1: rule__MultExpr__Group_1__1__Impl : ( '*' ) ;
    public final void rule__MultExpr__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6371:1: ( ( '*' ) )
            // InternalFortXTrans.g:6372:1: ( '*' )
            {
            // InternalFortXTrans.g:6372:1: ( '*' )
            // InternalFortXTrans.g:6373:2: '*'
            {
             before(grammarAccess.getMultExprAccess().getAsteriskKeyword_1_1()); 
            match(input,43,FOLLOW_2); 
             after(grammarAccess.getMultExprAccess().getAsteriskKeyword_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultExpr__Group_1__1__Impl"


    // $ANTLR start "rule__MultExpr__Group_1__2"
    // InternalFortXTrans.g:6382:1: rule__MultExpr__Group_1__2 : rule__MultExpr__Group_1__2__Impl ;
    public final void rule__MultExpr__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6386:1: ( rule__MultExpr__Group_1__2__Impl )
            // InternalFortXTrans.g:6387:2: rule__MultExpr__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__MultExpr__Group_1__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultExpr__Group_1__2"


    // $ANTLR start "rule__MultExpr__Group_1__2__Impl"
    // InternalFortXTrans.g:6393:1: rule__MultExpr__Group_1__2__Impl : ( ( rule__MultExpr__RightAssignment_1_2 ) ) ;
    public final void rule__MultExpr__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6397:1: ( ( ( rule__MultExpr__RightAssignment_1_2 ) ) )
            // InternalFortXTrans.g:6398:1: ( ( rule__MultExpr__RightAssignment_1_2 ) )
            {
            // InternalFortXTrans.g:6398:1: ( ( rule__MultExpr__RightAssignment_1_2 ) )
            // InternalFortXTrans.g:6399:2: ( rule__MultExpr__RightAssignment_1_2 )
            {
             before(grammarAccess.getMultExprAccess().getRightAssignment_1_2()); 
            // InternalFortXTrans.g:6400:2: ( rule__MultExpr__RightAssignment_1_2 )
            // InternalFortXTrans.g:6400:3: rule__MultExpr__RightAssignment_1_2
            {
            pushFollow(FOLLOW_2);
            rule__MultExpr__RightAssignment_1_2();

            state._fsp--;


            }

             after(grammarAccess.getMultExprAccess().getRightAssignment_1_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultExpr__Group_1__2__Impl"


    // $ANTLR start "rule__ExponentExpr__Group__0"
    // InternalFortXTrans.g:6409:1: rule__ExponentExpr__Group__0 : rule__ExponentExpr__Group__0__Impl rule__ExponentExpr__Group__1 ;
    public final void rule__ExponentExpr__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6413:1: ( rule__ExponentExpr__Group__0__Impl rule__ExponentExpr__Group__1 )
            // InternalFortXTrans.g:6414:2: rule__ExponentExpr__Group__0__Impl rule__ExponentExpr__Group__1
            {
            pushFollow(FOLLOW_52);
            rule__ExponentExpr__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ExponentExpr__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExponentExpr__Group__0"


    // $ANTLR start "rule__ExponentExpr__Group__0__Impl"
    // InternalFortXTrans.g:6421:1: rule__ExponentExpr__Group__0__Impl : ( rulePrimary ) ;
    public final void rule__ExponentExpr__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6425:1: ( ( rulePrimary ) )
            // InternalFortXTrans.g:6426:1: ( rulePrimary )
            {
            // InternalFortXTrans.g:6426:1: ( rulePrimary )
            // InternalFortXTrans.g:6427:2: rulePrimary
            {
             before(grammarAccess.getExponentExprAccess().getPrimaryParserRuleCall_0()); 
            pushFollow(FOLLOW_2);
            rulePrimary();

            state._fsp--;

             after(grammarAccess.getExponentExprAccess().getPrimaryParserRuleCall_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExponentExpr__Group__0__Impl"


    // $ANTLR start "rule__ExponentExpr__Group__1"
    // InternalFortXTrans.g:6436:1: rule__ExponentExpr__Group__1 : rule__ExponentExpr__Group__1__Impl ;
    public final void rule__ExponentExpr__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6440:1: ( rule__ExponentExpr__Group__1__Impl )
            // InternalFortXTrans.g:6441:2: rule__ExponentExpr__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ExponentExpr__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExponentExpr__Group__1"


    // $ANTLR start "rule__ExponentExpr__Group__1__Impl"
    // InternalFortXTrans.g:6447:1: rule__ExponentExpr__Group__1__Impl : ( ( rule__ExponentExpr__Group_1__0 )* ) ;
    public final void rule__ExponentExpr__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6451:1: ( ( ( rule__ExponentExpr__Group_1__0 )* ) )
            // InternalFortXTrans.g:6452:1: ( ( rule__ExponentExpr__Group_1__0 )* )
            {
            // InternalFortXTrans.g:6452:1: ( ( rule__ExponentExpr__Group_1__0 )* )
            // InternalFortXTrans.g:6453:2: ( rule__ExponentExpr__Group_1__0 )*
            {
             before(grammarAccess.getExponentExprAccess().getGroup_1()); 
            // InternalFortXTrans.g:6454:2: ( rule__ExponentExpr__Group_1__0 )*
            loop61:
            do {
                int alt61=2;
                int LA61_0 = input.LA(1);

                if ( (LA61_0==44) ) {
                    alt61=1;
                }


                switch (alt61) {
            	case 1 :
            	    // InternalFortXTrans.g:6454:3: rule__ExponentExpr__Group_1__0
            	    {
            	    pushFollow(FOLLOW_53);
            	    rule__ExponentExpr__Group_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop61;
                }
            } while (true);

             after(grammarAccess.getExponentExprAccess().getGroup_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExponentExpr__Group__1__Impl"


    // $ANTLR start "rule__ExponentExpr__Group_1__0"
    // InternalFortXTrans.g:6463:1: rule__ExponentExpr__Group_1__0 : rule__ExponentExpr__Group_1__0__Impl rule__ExponentExpr__Group_1__1 ;
    public final void rule__ExponentExpr__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6467:1: ( rule__ExponentExpr__Group_1__0__Impl rule__ExponentExpr__Group_1__1 )
            // InternalFortXTrans.g:6468:2: rule__ExponentExpr__Group_1__0__Impl rule__ExponentExpr__Group_1__1
            {
            pushFollow(FOLLOW_52);
            rule__ExponentExpr__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ExponentExpr__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExponentExpr__Group_1__0"


    // $ANTLR start "rule__ExponentExpr__Group_1__0__Impl"
    // InternalFortXTrans.g:6475:1: rule__ExponentExpr__Group_1__0__Impl : ( () ) ;
    public final void rule__ExponentExpr__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6479:1: ( ( () ) )
            // InternalFortXTrans.g:6480:1: ( () )
            {
            // InternalFortXTrans.g:6480:1: ( () )
            // InternalFortXTrans.g:6481:2: ()
            {
             before(grammarAccess.getExponentExprAccess().getExponentExprLeftAction_1_0()); 
            // InternalFortXTrans.g:6482:2: ()
            // InternalFortXTrans.g:6482:3: 
            {
            }

             after(grammarAccess.getExponentExprAccess().getExponentExprLeftAction_1_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExponentExpr__Group_1__0__Impl"


    // $ANTLR start "rule__ExponentExpr__Group_1__1"
    // InternalFortXTrans.g:6490:1: rule__ExponentExpr__Group_1__1 : rule__ExponentExpr__Group_1__1__Impl rule__ExponentExpr__Group_1__2 ;
    public final void rule__ExponentExpr__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6494:1: ( rule__ExponentExpr__Group_1__1__Impl rule__ExponentExpr__Group_1__2 )
            // InternalFortXTrans.g:6495:2: rule__ExponentExpr__Group_1__1__Impl rule__ExponentExpr__Group_1__2
            {
            pushFollow(FOLLOW_32);
            rule__ExponentExpr__Group_1__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ExponentExpr__Group_1__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExponentExpr__Group_1__1"


    // $ANTLR start "rule__ExponentExpr__Group_1__1__Impl"
    // InternalFortXTrans.g:6502:1: rule__ExponentExpr__Group_1__1__Impl : ( '^' ) ;
    public final void rule__ExponentExpr__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6506:1: ( ( '^' ) )
            // InternalFortXTrans.g:6507:1: ( '^' )
            {
            // InternalFortXTrans.g:6507:1: ( '^' )
            // InternalFortXTrans.g:6508:2: '^'
            {
             before(grammarAccess.getExponentExprAccess().getCircumflexAccentKeyword_1_1()); 
            match(input,44,FOLLOW_2); 
             after(grammarAccess.getExponentExprAccess().getCircumflexAccentKeyword_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExponentExpr__Group_1__1__Impl"


    // $ANTLR start "rule__ExponentExpr__Group_1__2"
    // InternalFortXTrans.g:6517:1: rule__ExponentExpr__Group_1__2 : rule__ExponentExpr__Group_1__2__Impl ;
    public final void rule__ExponentExpr__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6521:1: ( rule__ExponentExpr__Group_1__2__Impl )
            // InternalFortXTrans.g:6522:2: rule__ExponentExpr__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ExponentExpr__Group_1__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExponentExpr__Group_1__2"


    // $ANTLR start "rule__ExponentExpr__Group_1__2__Impl"
    // InternalFortXTrans.g:6528:1: rule__ExponentExpr__Group_1__2__Impl : ( ( rule__ExponentExpr__RightAssignment_1_2 ) ) ;
    public final void rule__ExponentExpr__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6532:1: ( ( ( rule__ExponentExpr__RightAssignment_1_2 ) ) )
            // InternalFortXTrans.g:6533:1: ( ( rule__ExponentExpr__RightAssignment_1_2 ) )
            {
            // InternalFortXTrans.g:6533:1: ( ( rule__ExponentExpr__RightAssignment_1_2 ) )
            // InternalFortXTrans.g:6534:2: ( rule__ExponentExpr__RightAssignment_1_2 )
            {
             before(grammarAccess.getExponentExprAccess().getRightAssignment_1_2()); 
            // InternalFortXTrans.g:6535:2: ( rule__ExponentExpr__RightAssignment_1_2 )
            // InternalFortXTrans.g:6535:3: rule__ExponentExpr__RightAssignment_1_2
            {
            pushFollow(FOLLOW_2);
            rule__ExponentExpr__RightAssignment_1_2();

            state._fsp--;


            }

             after(grammarAccess.getExponentExprAccess().getRightAssignment_1_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExponentExpr__Group_1__2__Impl"


    // $ANTLR start "rule__Primary__Group_0__0"
    // InternalFortXTrans.g:6544:1: rule__Primary__Group_0__0 : rule__Primary__Group_0__0__Impl rule__Primary__Group_0__1 ;
    public final void rule__Primary__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6548:1: ( rule__Primary__Group_0__0__Impl rule__Primary__Group_0__1 )
            // InternalFortXTrans.g:6549:2: rule__Primary__Group_0__0__Impl rule__Primary__Group_0__1
            {
            pushFollow(FOLLOW_54);
            rule__Primary__Group_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Primary__Group_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0__0"


    // $ANTLR start "rule__Primary__Group_0__0__Impl"
    // InternalFortXTrans.g:6556:1: rule__Primary__Group_0__0__Impl : ( ruleLiteralTuple ) ;
    public final void rule__Primary__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6560:1: ( ( ruleLiteralTuple ) )
            // InternalFortXTrans.g:6561:1: ( ruleLiteralTuple )
            {
            // InternalFortXTrans.g:6561:1: ( ruleLiteralTuple )
            // InternalFortXTrans.g:6562:2: ruleLiteralTuple
            {
             before(grammarAccess.getPrimaryAccess().getLiteralTupleParserRuleCall_0_0()); 
            pushFollow(FOLLOW_2);
            ruleLiteralTuple();

            state._fsp--;

             after(grammarAccess.getPrimaryAccess().getLiteralTupleParserRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0__0__Impl"


    // $ANTLR start "rule__Primary__Group_0__1"
    // InternalFortXTrans.g:6571:1: rule__Primary__Group_0__1 : rule__Primary__Group_0__1__Impl rule__Primary__Group_0__2 ;
    public final void rule__Primary__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6575:1: ( rule__Primary__Group_0__1__Impl rule__Primary__Group_0__2 )
            // InternalFortXTrans.g:6576:2: rule__Primary__Group_0__1__Impl rule__Primary__Group_0__2
            {
            pushFollow(FOLLOW_54);
            rule__Primary__Group_0__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Primary__Group_0__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0__1"


    // $ANTLR start "rule__Primary__Group_0__1__Impl"
    // InternalFortXTrans.g:6583:1: rule__Primary__Group_0__1__Impl : ( ( rule__Primary__Group_0_1__0 )? ) ;
    public final void rule__Primary__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6587:1: ( ( ( rule__Primary__Group_0_1__0 )? ) )
            // InternalFortXTrans.g:6588:1: ( ( rule__Primary__Group_0_1__0 )? )
            {
            // InternalFortXTrans.g:6588:1: ( ( rule__Primary__Group_0_1__0 )? )
            // InternalFortXTrans.g:6589:2: ( rule__Primary__Group_0_1__0 )?
            {
             before(grammarAccess.getPrimaryAccess().getGroup_0_1()); 
            // InternalFortXTrans.g:6590:2: ( rule__Primary__Group_0_1__0 )?
            int alt62=2;
            int LA62_0 = input.LA(1);

            if ( (LA62_0==61) ) {
                alt62=1;
            }
            switch (alt62) {
                case 1 :
                    // InternalFortXTrans.g:6590:3: rule__Primary__Group_0_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Primary__Group_0_1__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getPrimaryAccess().getGroup_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0__1__Impl"


    // $ANTLR start "rule__Primary__Group_0__2"
    // InternalFortXTrans.g:6598:1: rule__Primary__Group_0__2 : rule__Primary__Group_0__2__Impl ;
    public final void rule__Primary__Group_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6602:1: ( rule__Primary__Group_0__2__Impl )
            // InternalFortXTrans.g:6603:2: rule__Primary__Group_0__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Primary__Group_0__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0__2"


    // $ANTLR start "rule__Primary__Group_0__2__Impl"
    // InternalFortXTrans.g:6609:1: rule__Primary__Group_0__2__Impl : ( ( rule__Primary__Group_0_2__0 )? ) ;
    public final void rule__Primary__Group_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6613:1: ( ( ( rule__Primary__Group_0_2__0 )? ) )
            // InternalFortXTrans.g:6614:1: ( ( rule__Primary__Group_0_2__0 )? )
            {
            // InternalFortXTrans.g:6614:1: ( ( rule__Primary__Group_0_2__0 )? )
            // InternalFortXTrans.g:6615:2: ( rule__Primary__Group_0_2__0 )?
            {
             before(grammarAccess.getPrimaryAccess().getGroup_0_2()); 
            // InternalFortXTrans.g:6616:2: ( rule__Primary__Group_0_2__0 )?
            int alt63=2;
            int LA63_0 = input.LA(1);

            if ( (LA63_0==33) ) {
                alt63=1;
            }
            switch (alt63) {
                case 1 :
                    // InternalFortXTrans.g:6616:3: rule__Primary__Group_0_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Primary__Group_0_2__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getPrimaryAccess().getGroup_0_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0__2__Impl"


    // $ANTLR start "rule__Primary__Group_0_1__0"
    // InternalFortXTrans.g:6625:1: rule__Primary__Group_0_1__0 : rule__Primary__Group_0_1__0__Impl rule__Primary__Group_0_1__1 ;
    public final void rule__Primary__Group_0_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6629:1: ( rule__Primary__Group_0_1__0__Impl rule__Primary__Group_0_1__1 )
            // InternalFortXTrans.g:6630:2: rule__Primary__Group_0_1__0__Impl rule__Primary__Group_0_1__1
            {
            pushFollow(FOLLOW_55);
            rule__Primary__Group_0_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Primary__Group_0_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0_1__0"


    // $ANTLR start "rule__Primary__Group_0_1__0__Impl"
    // InternalFortXTrans.g:6637:1: rule__Primary__Group_0_1__0__Impl : ( () ) ;
    public final void rule__Primary__Group_0_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6641:1: ( ( () ) )
            // InternalFortXTrans.g:6642:1: ( () )
            {
            // InternalFortXTrans.g:6642:1: ( () )
            // InternalFortXTrans.g:6643:2: ()
            {
             before(grammarAccess.getPrimaryAccess().getAssopLeftAction_0_1_0()); 
            // InternalFortXTrans.g:6644:2: ()
            // InternalFortXTrans.g:6644:3: 
            {
            }

             after(grammarAccess.getPrimaryAccess().getAssopLeftAction_0_1_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0_1__0__Impl"


    // $ANTLR start "rule__Primary__Group_0_1__1"
    // InternalFortXTrans.g:6652:1: rule__Primary__Group_0_1__1 : rule__Primary__Group_0_1__1__Impl ;
    public final void rule__Primary__Group_0_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6656:1: ( rule__Primary__Group_0_1__1__Impl )
            // InternalFortXTrans.g:6657:2: rule__Primary__Group_0_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Primary__Group_0_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0_1__1"


    // $ANTLR start "rule__Primary__Group_0_1__1__Impl"
    // InternalFortXTrans.g:6663:1: rule__Primary__Group_0_1__1__Impl : ( ( rule__Primary__Group_0_1_1__0 ) ) ;
    public final void rule__Primary__Group_0_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6667:1: ( ( ( rule__Primary__Group_0_1_1__0 ) ) )
            // InternalFortXTrans.g:6668:1: ( ( rule__Primary__Group_0_1_1__0 ) )
            {
            // InternalFortXTrans.g:6668:1: ( ( rule__Primary__Group_0_1_1__0 ) )
            // InternalFortXTrans.g:6669:2: ( rule__Primary__Group_0_1_1__0 )
            {
             before(grammarAccess.getPrimaryAccess().getGroup_0_1_1()); 
            // InternalFortXTrans.g:6670:2: ( rule__Primary__Group_0_1_1__0 )
            // InternalFortXTrans.g:6670:3: rule__Primary__Group_0_1_1__0
            {
            pushFollow(FOLLOW_2);
            rule__Primary__Group_0_1_1__0();

            state._fsp--;


            }

             after(grammarAccess.getPrimaryAccess().getGroup_0_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0_1__1__Impl"


    // $ANTLR start "rule__Primary__Group_0_1_1__0"
    // InternalFortXTrans.g:6679:1: rule__Primary__Group_0_1_1__0 : rule__Primary__Group_0_1_1__0__Impl rule__Primary__Group_0_1_1__1 ;
    public final void rule__Primary__Group_0_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6683:1: ( rule__Primary__Group_0_1_1__0__Impl rule__Primary__Group_0_1_1__1 )
            // InternalFortXTrans.g:6684:2: rule__Primary__Group_0_1_1__0__Impl rule__Primary__Group_0_1_1__1
            {
            pushFollow(FOLLOW_32);
            rule__Primary__Group_0_1_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Primary__Group_0_1_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0_1_1__0"


    // $ANTLR start "rule__Primary__Group_0_1_1__0__Impl"
    // InternalFortXTrans.g:6691:1: rule__Primary__Group_0_1_1__0__Impl : ( ( rule__Primary__OpAssignment_0_1_1_0 ) ) ;
    public final void rule__Primary__Group_0_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6695:1: ( ( ( rule__Primary__OpAssignment_0_1_1_0 ) ) )
            // InternalFortXTrans.g:6696:1: ( ( rule__Primary__OpAssignment_0_1_1_0 ) )
            {
            // InternalFortXTrans.g:6696:1: ( ( rule__Primary__OpAssignment_0_1_1_0 ) )
            // InternalFortXTrans.g:6697:2: ( rule__Primary__OpAssignment_0_1_1_0 )
            {
             before(grammarAccess.getPrimaryAccess().getOpAssignment_0_1_1_0()); 
            // InternalFortXTrans.g:6698:2: ( rule__Primary__OpAssignment_0_1_1_0 )
            // InternalFortXTrans.g:6698:3: rule__Primary__OpAssignment_0_1_1_0
            {
            pushFollow(FOLLOW_2);
            rule__Primary__OpAssignment_0_1_1_0();

            state._fsp--;


            }

             after(grammarAccess.getPrimaryAccess().getOpAssignment_0_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0_1_1__0__Impl"


    // $ANTLR start "rule__Primary__Group_0_1_1__1"
    // InternalFortXTrans.g:6706:1: rule__Primary__Group_0_1_1__1 : rule__Primary__Group_0_1_1__1__Impl ;
    public final void rule__Primary__Group_0_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6710:1: ( rule__Primary__Group_0_1_1__1__Impl )
            // InternalFortXTrans.g:6711:2: rule__Primary__Group_0_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Primary__Group_0_1_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0_1_1__1"


    // $ANTLR start "rule__Primary__Group_0_1_1__1__Impl"
    // InternalFortXTrans.g:6717:1: rule__Primary__Group_0_1_1__1__Impl : ( ( rule__Primary__RightAssignment_0_1_1_1 ) ) ;
    public final void rule__Primary__Group_0_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6721:1: ( ( ( rule__Primary__RightAssignment_0_1_1_1 ) ) )
            // InternalFortXTrans.g:6722:1: ( ( rule__Primary__RightAssignment_0_1_1_1 ) )
            {
            // InternalFortXTrans.g:6722:1: ( ( rule__Primary__RightAssignment_0_1_1_1 ) )
            // InternalFortXTrans.g:6723:2: ( rule__Primary__RightAssignment_0_1_1_1 )
            {
             before(grammarAccess.getPrimaryAccess().getRightAssignment_0_1_1_1()); 
            // InternalFortXTrans.g:6724:2: ( rule__Primary__RightAssignment_0_1_1_1 )
            // InternalFortXTrans.g:6724:3: rule__Primary__RightAssignment_0_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Primary__RightAssignment_0_1_1_1();

            state._fsp--;


            }

             after(grammarAccess.getPrimaryAccess().getRightAssignment_0_1_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0_1_1__1__Impl"


    // $ANTLR start "rule__Primary__Group_0_2__0"
    // InternalFortXTrans.g:6733:1: rule__Primary__Group_0_2__0 : rule__Primary__Group_0_2__0__Impl rule__Primary__Group_0_2__1 ;
    public final void rule__Primary__Group_0_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6737:1: ( rule__Primary__Group_0_2__0__Impl rule__Primary__Group_0_2__1 )
            // InternalFortXTrans.g:6738:2: rule__Primary__Group_0_2__0__Impl rule__Primary__Group_0_2__1
            {
            pushFollow(FOLLOW_27);
            rule__Primary__Group_0_2__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Primary__Group_0_2__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0_2__0"


    // $ANTLR start "rule__Primary__Group_0_2__0__Impl"
    // InternalFortXTrans.g:6745:1: rule__Primary__Group_0_2__0__Impl : ( () ) ;
    public final void rule__Primary__Group_0_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6749:1: ( ( () ) )
            // InternalFortXTrans.g:6750:1: ( () )
            {
            // InternalFortXTrans.g:6750:1: ( () )
            // InternalFortXTrans.g:6751:2: ()
            {
             before(grammarAccess.getPrimaryAccess().getFCallLeftAction_0_2_0()); 
            // InternalFortXTrans.g:6752:2: ()
            // InternalFortXTrans.g:6752:3: 
            {
            }

             after(grammarAccess.getPrimaryAccess().getFCallLeftAction_0_2_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0_2__0__Impl"


    // $ANTLR start "rule__Primary__Group_0_2__1"
    // InternalFortXTrans.g:6760:1: rule__Primary__Group_0_2__1 : rule__Primary__Group_0_2__1__Impl rule__Primary__Group_0_2__2 ;
    public final void rule__Primary__Group_0_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6764:1: ( rule__Primary__Group_0_2__1__Impl rule__Primary__Group_0_2__2 )
            // InternalFortXTrans.g:6765:2: rule__Primary__Group_0_2__1__Impl rule__Primary__Group_0_2__2
            {
            pushFollow(FOLLOW_56);
            rule__Primary__Group_0_2__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Primary__Group_0_2__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0_2__1"


    // $ANTLR start "rule__Primary__Group_0_2__1__Impl"
    // InternalFortXTrans.g:6772:1: rule__Primary__Group_0_2__1__Impl : ( '(' ) ;
    public final void rule__Primary__Group_0_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6776:1: ( ( '(' ) )
            // InternalFortXTrans.g:6777:1: ( '(' )
            {
            // InternalFortXTrans.g:6777:1: ( '(' )
            // InternalFortXTrans.g:6778:2: '('
            {
             before(grammarAccess.getPrimaryAccess().getLeftParenthesisKeyword_0_2_1()); 
            match(input,33,FOLLOW_2); 
             after(grammarAccess.getPrimaryAccess().getLeftParenthesisKeyword_0_2_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0_2__1__Impl"


    // $ANTLR start "rule__Primary__Group_0_2__2"
    // InternalFortXTrans.g:6787:1: rule__Primary__Group_0_2__2 : rule__Primary__Group_0_2__2__Impl rule__Primary__Group_0_2__3 ;
    public final void rule__Primary__Group_0_2__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6791:1: ( rule__Primary__Group_0_2__2__Impl rule__Primary__Group_0_2__3 )
            // InternalFortXTrans.g:6792:2: rule__Primary__Group_0_2__2__Impl rule__Primary__Group_0_2__3
            {
            pushFollow(FOLLOW_56);
            rule__Primary__Group_0_2__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Primary__Group_0_2__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0_2__2"


    // $ANTLR start "rule__Primary__Group_0_2__2__Impl"
    // InternalFortXTrans.g:6799:1: rule__Primary__Group_0_2__2__Impl : ( ( rule__Primary__RightAssignment_0_2_2 )? ) ;
    public final void rule__Primary__Group_0_2__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6803:1: ( ( ( rule__Primary__RightAssignment_0_2_2 )? ) )
            // InternalFortXTrans.g:6804:1: ( ( rule__Primary__RightAssignment_0_2_2 )? )
            {
            // InternalFortXTrans.g:6804:1: ( ( rule__Primary__RightAssignment_0_2_2 )? )
            // InternalFortXTrans.g:6805:2: ( rule__Primary__RightAssignment_0_2_2 )?
            {
             before(grammarAccess.getPrimaryAccess().getRightAssignment_0_2_2()); 
            // InternalFortXTrans.g:6806:2: ( rule__Primary__RightAssignment_0_2_2 )?
            int alt64=2;
            int LA64_0 = input.LA(1);

            if ( ((LA64_0>=RULE_ID && LA64_0<=RULE_STRING)||LA64_0==33||LA64_0==45||(LA64_0>=69 && LA64_0<=70)) ) {
                alt64=1;
            }
            switch (alt64) {
                case 1 :
                    // InternalFortXTrans.g:6806:3: rule__Primary__RightAssignment_0_2_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__Primary__RightAssignment_0_2_2();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getPrimaryAccess().getRightAssignment_0_2_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0_2__2__Impl"


    // $ANTLR start "rule__Primary__Group_0_2__3"
    // InternalFortXTrans.g:6814:1: rule__Primary__Group_0_2__3 : rule__Primary__Group_0_2__3__Impl ;
    public final void rule__Primary__Group_0_2__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6818:1: ( rule__Primary__Group_0_2__3__Impl )
            // InternalFortXTrans.g:6819:2: rule__Primary__Group_0_2__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Primary__Group_0_2__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0_2__3"


    // $ANTLR start "rule__Primary__Group_0_2__3__Impl"
    // InternalFortXTrans.g:6825:1: rule__Primary__Group_0_2__3__Impl : ( ')' ) ;
    public final void rule__Primary__Group_0_2__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6829:1: ( ( ')' ) )
            // InternalFortXTrans.g:6830:1: ( ')' )
            {
            // InternalFortXTrans.g:6830:1: ( ')' )
            // InternalFortXTrans.g:6831:2: ')'
            {
             before(grammarAccess.getPrimaryAccess().getRightParenthesisKeyword_0_2_3()); 
            match(input,34,FOLLOW_2); 
             after(grammarAccess.getPrimaryAccess().getRightParenthesisKeyword_0_2_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0_2__3__Impl"


    // $ANTLR start "rule__Primary__Group_1__0"
    // InternalFortXTrans.g:6841:1: rule__Primary__Group_1__0 : rule__Primary__Group_1__0__Impl rule__Primary__Group_1__1 ;
    public final void rule__Primary__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6845:1: ( rule__Primary__Group_1__0__Impl rule__Primary__Group_1__1 )
            // InternalFortXTrans.g:6846:2: rule__Primary__Group_1__0__Impl rule__Primary__Group_1__1
            {
            pushFollow(FOLLOW_57);
            rule__Primary__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Primary__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_1__0"


    // $ANTLR start "rule__Primary__Group_1__0__Impl"
    // InternalFortXTrans.g:6853:1: rule__Primary__Group_1__0__Impl : ( () ) ;
    public final void rule__Primary__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6857:1: ( ( () ) )
            // InternalFortXTrans.g:6858:1: ( () )
            {
            // InternalFortXTrans.g:6858:1: ( () )
            // InternalFortXTrans.g:6859:2: ()
            {
             before(grammarAccess.getPrimaryAccess().getNotAction_1_0()); 
            // InternalFortXTrans.g:6860:2: ()
            // InternalFortXTrans.g:6860:3: 
            {
            }

             after(grammarAccess.getPrimaryAccess().getNotAction_1_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_1__0__Impl"


    // $ANTLR start "rule__Primary__Group_1__1"
    // InternalFortXTrans.g:6868:1: rule__Primary__Group_1__1 : rule__Primary__Group_1__1__Impl rule__Primary__Group_1__2 ;
    public final void rule__Primary__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6872:1: ( rule__Primary__Group_1__1__Impl rule__Primary__Group_1__2 )
            // InternalFortXTrans.g:6873:2: rule__Primary__Group_1__1__Impl rule__Primary__Group_1__2
            {
            pushFollow(FOLLOW_32);
            rule__Primary__Group_1__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Primary__Group_1__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_1__1"


    // $ANTLR start "rule__Primary__Group_1__1__Impl"
    // InternalFortXTrans.g:6880:1: rule__Primary__Group_1__1__Impl : ( '!' ) ;
    public final void rule__Primary__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6884:1: ( ( '!' ) )
            // InternalFortXTrans.g:6885:1: ( '!' )
            {
            // InternalFortXTrans.g:6885:1: ( '!' )
            // InternalFortXTrans.g:6886:2: '!'
            {
             before(grammarAccess.getPrimaryAccess().getExclamationMarkKeyword_1_1()); 
            match(input,45,FOLLOW_2); 
             after(grammarAccess.getPrimaryAccess().getExclamationMarkKeyword_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_1__1__Impl"


    // $ANTLR start "rule__Primary__Group_1__2"
    // InternalFortXTrans.g:6895:1: rule__Primary__Group_1__2 : rule__Primary__Group_1__2__Impl ;
    public final void rule__Primary__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6899:1: ( rule__Primary__Group_1__2__Impl )
            // InternalFortXTrans.g:6900:2: rule__Primary__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Primary__Group_1__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_1__2"


    // $ANTLR start "rule__Primary__Group_1__2__Impl"
    // InternalFortXTrans.g:6906:1: rule__Primary__Group_1__2__Impl : ( ( rule__Primary__ExpressionAssignment_1_2 ) ) ;
    public final void rule__Primary__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6910:1: ( ( ( rule__Primary__ExpressionAssignment_1_2 ) ) )
            // InternalFortXTrans.g:6911:1: ( ( rule__Primary__ExpressionAssignment_1_2 ) )
            {
            // InternalFortXTrans.g:6911:1: ( ( rule__Primary__ExpressionAssignment_1_2 ) )
            // InternalFortXTrans.g:6912:2: ( rule__Primary__ExpressionAssignment_1_2 )
            {
             before(grammarAccess.getPrimaryAccess().getExpressionAssignment_1_2()); 
            // InternalFortXTrans.g:6913:2: ( rule__Primary__ExpressionAssignment_1_2 )
            // InternalFortXTrans.g:6913:3: rule__Primary__ExpressionAssignment_1_2
            {
            pushFollow(FOLLOW_2);
            rule__Primary__ExpressionAssignment_1_2();

            state._fsp--;


            }

             after(grammarAccess.getPrimaryAccess().getExpressionAssignment_1_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_1__2__Impl"


    // $ANTLR start "rule__Primary__Group_2__0"
    // InternalFortXTrans.g:6922:1: rule__Primary__Group_2__0 : rule__Primary__Group_2__0__Impl rule__Primary__Group_2__1 ;
    public final void rule__Primary__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6926:1: ( rule__Primary__Group_2__0__Impl rule__Primary__Group_2__1 )
            // InternalFortXTrans.g:6927:2: rule__Primary__Group_2__0__Impl rule__Primary__Group_2__1
            {
            pushFollow(FOLLOW_32);
            rule__Primary__Group_2__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Primary__Group_2__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_2__0"


    // $ANTLR start "rule__Primary__Group_2__0__Impl"
    // InternalFortXTrans.g:6934:1: rule__Primary__Group_2__0__Impl : ( () ) ;
    public final void rule__Primary__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6938:1: ( ( () ) )
            // InternalFortXTrans.g:6939:1: ( () )
            {
            // InternalFortXTrans.g:6939:1: ( () )
            // InternalFortXTrans.g:6940:2: ()
            {
             before(grammarAccess.getPrimaryAccess().getParanAction_2_0()); 
            // InternalFortXTrans.g:6941:2: ()
            // InternalFortXTrans.g:6941:3: 
            {
            }

             after(grammarAccess.getPrimaryAccess().getParanAction_2_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_2__0__Impl"


    // $ANTLR start "rule__Primary__Group_2__1"
    // InternalFortXTrans.g:6949:1: rule__Primary__Group_2__1 : rule__Primary__Group_2__1__Impl rule__Primary__Group_2__2 ;
    public final void rule__Primary__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6953:1: ( rule__Primary__Group_2__1__Impl rule__Primary__Group_2__2 )
            // InternalFortXTrans.g:6954:2: rule__Primary__Group_2__1__Impl rule__Primary__Group_2__2
            {
            pushFollow(FOLLOW_32);
            rule__Primary__Group_2__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Primary__Group_2__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_2__1"


    // $ANTLR start "rule__Primary__Group_2__1__Impl"
    // InternalFortXTrans.g:6961:1: rule__Primary__Group_2__1__Impl : ( '(' ) ;
    public final void rule__Primary__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6965:1: ( ( '(' ) )
            // InternalFortXTrans.g:6966:1: ( '(' )
            {
            // InternalFortXTrans.g:6966:1: ( '(' )
            // InternalFortXTrans.g:6967:2: '('
            {
             before(grammarAccess.getPrimaryAccess().getLeftParenthesisKeyword_2_1()); 
            match(input,33,FOLLOW_2); 
             after(grammarAccess.getPrimaryAccess().getLeftParenthesisKeyword_2_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_2__1__Impl"


    // $ANTLR start "rule__Primary__Group_2__2"
    // InternalFortXTrans.g:6976:1: rule__Primary__Group_2__2 : rule__Primary__Group_2__2__Impl rule__Primary__Group_2__3 ;
    public final void rule__Primary__Group_2__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6980:1: ( rule__Primary__Group_2__2__Impl rule__Primary__Group_2__3 )
            // InternalFortXTrans.g:6981:2: rule__Primary__Group_2__2__Impl rule__Primary__Group_2__3
            {
            pushFollow(FOLLOW_28);
            rule__Primary__Group_2__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Primary__Group_2__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_2__2"


    // $ANTLR start "rule__Primary__Group_2__2__Impl"
    // InternalFortXTrans.g:6988:1: rule__Primary__Group_2__2__Impl : ( ( rule__Primary__ExpAssignment_2_2 ) ) ;
    public final void rule__Primary__Group_2__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6992:1: ( ( ( rule__Primary__ExpAssignment_2_2 ) ) )
            // InternalFortXTrans.g:6993:1: ( ( rule__Primary__ExpAssignment_2_2 ) )
            {
            // InternalFortXTrans.g:6993:1: ( ( rule__Primary__ExpAssignment_2_2 ) )
            // InternalFortXTrans.g:6994:2: ( rule__Primary__ExpAssignment_2_2 )
            {
             before(grammarAccess.getPrimaryAccess().getExpAssignment_2_2()); 
            // InternalFortXTrans.g:6995:2: ( rule__Primary__ExpAssignment_2_2 )
            // InternalFortXTrans.g:6995:3: rule__Primary__ExpAssignment_2_2
            {
            pushFollow(FOLLOW_2);
            rule__Primary__ExpAssignment_2_2();

            state._fsp--;


            }

             after(grammarAccess.getPrimaryAccess().getExpAssignment_2_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_2__2__Impl"


    // $ANTLR start "rule__Primary__Group_2__3"
    // InternalFortXTrans.g:7003:1: rule__Primary__Group_2__3 : rule__Primary__Group_2__3__Impl ;
    public final void rule__Primary__Group_2__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7007:1: ( rule__Primary__Group_2__3__Impl )
            // InternalFortXTrans.g:7008:2: rule__Primary__Group_2__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Primary__Group_2__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_2__3"


    // $ANTLR start "rule__Primary__Group_2__3__Impl"
    // InternalFortXTrans.g:7014:1: rule__Primary__Group_2__3__Impl : ( ')' ) ;
    public final void rule__Primary__Group_2__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7018:1: ( ( ')' ) )
            // InternalFortXTrans.g:7019:1: ( ')' )
            {
            // InternalFortXTrans.g:7019:1: ( ')' )
            // InternalFortXTrans.g:7020:2: ')'
            {
             before(grammarAccess.getPrimaryAccess().getRightParenthesisKeyword_2_3()); 
            match(input,34,FOLLOW_2); 
             after(grammarAccess.getPrimaryAccess().getRightParenthesisKeyword_2_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_2__3__Impl"


    // $ANTLR start "rule__ExprList__Group__0"
    // InternalFortXTrans.g:7030:1: rule__ExprList__Group__0 : rule__ExprList__Group__0__Impl rule__ExprList__Group__1 ;
    public final void rule__ExprList__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7034:1: ( rule__ExprList__Group__0__Impl rule__ExprList__Group__1 )
            // InternalFortXTrans.g:7035:2: rule__ExprList__Group__0__Impl rule__ExprList__Group__1
            {
            pushFollow(FOLLOW_25);
            rule__ExprList__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ExprList__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExprList__Group__0"


    // $ANTLR start "rule__ExprList__Group__0__Impl"
    // InternalFortXTrans.g:7042:1: rule__ExprList__Group__0__Impl : ( ( rule__ExprList__ExpsAssignment_0 ) ) ;
    public final void rule__ExprList__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7046:1: ( ( ( rule__ExprList__ExpsAssignment_0 ) ) )
            // InternalFortXTrans.g:7047:1: ( ( rule__ExprList__ExpsAssignment_0 ) )
            {
            // InternalFortXTrans.g:7047:1: ( ( rule__ExprList__ExpsAssignment_0 ) )
            // InternalFortXTrans.g:7048:2: ( rule__ExprList__ExpsAssignment_0 )
            {
             before(grammarAccess.getExprListAccess().getExpsAssignment_0()); 
            // InternalFortXTrans.g:7049:2: ( rule__ExprList__ExpsAssignment_0 )
            // InternalFortXTrans.g:7049:3: rule__ExprList__ExpsAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__ExprList__ExpsAssignment_0();

            state._fsp--;


            }

             after(grammarAccess.getExprListAccess().getExpsAssignment_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExprList__Group__0__Impl"


    // $ANTLR start "rule__ExprList__Group__1"
    // InternalFortXTrans.g:7057:1: rule__ExprList__Group__1 : rule__ExprList__Group__1__Impl ;
    public final void rule__ExprList__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7061:1: ( rule__ExprList__Group__1__Impl )
            // InternalFortXTrans.g:7062:2: rule__ExprList__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ExprList__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExprList__Group__1"


    // $ANTLR start "rule__ExprList__Group__1__Impl"
    // InternalFortXTrans.g:7068:1: rule__ExprList__Group__1__Impl : ( ( rule__ExprList__Group_1__0 )* ) ;
    public final void rule__ExprList__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7072:1: ( ( ( rule__ExprList__Group_1__0 )* ) )
            // InternalFortXTrans.g:7073:1: ( ( rule__ExprList__Group_1__0 )* )
            {
            // InternalFortXTrans.g:7073:1: ( ( rule__ExprList__Group_1__0 )* )
            // InternalFortXTrans.g:7074:2: ( rule__ExprList__Group_1__0 )*
            {
             before(grammarAccess.getExprListAccess().getGroup_1()); 
            // InternalFortXTrans.g:7075:2: ( rule__ExprList__Group_1__0 )*
            loop65:
            do {
                int alt65=2;
                int LA65_0 = input.LA(1);

                if ( (LA65_0==29) ) {
                    alt65=1;
                }


                switch (alt65) {
            	case 1 :
            	    // InternalFortXTrans.g:7075:3: rule__ExprList__Group_1__0
            	    {
            	    pushFollow(FOLLOW_15);
            	    rule__ExprList__Group_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop65;
                }
            } while (true);

             after(grammarAccess.getExprListAccess().getGroup_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExprList__Group__1__Impl"


    // $ANTLR start "rule__ExprList__Group_1__0"
    // InternalFortXTrans.g:7084:1: rule__ExprList__Group_1__0 : rule__ExprList__Group_1__0__Impl rule__ExprList__Group_1__1 ;
    public final void rule__ExprList__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7088:1: ( rule__ExprList__Group_1__0__Impl rule__ExprList__Group_1__1 )
            // InternalFortXTrans.g:7089:2: rule__ExprList__Group_1__0__Impl rule__ExprList__Group_1__1
            {
            pushFollow(FOLLOW_32);
            rule__ExprList__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ExprList__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExprList__Group_1__0"


    // $ANTLR start "rule__ExprList__Group_1__0__Impl"
    // InternalFortXTrans.g:7096:1: rule__ExprList__Group_1__0__Impl : ( ',' ) ;
    public final void rule__ExprList__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7100:1: ( ( ',' ) )
            // InternalFortXTrans.g:7101:1: ( ',' )
            {
            // InternalFortXTrans.g:7101:1: ( ',' )
            // InternalFortXTrans.g:7102:2: ','
            {
             before(grammarAccess.getExprListAccess().getCommaKeyword_1_0()); 
            match(input,29,FOLLOW_2); 
             after(grammarAccess.getExprListAccess().getCommaKeyword_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExprList__Group_1__0__Impl"


    // $ANTLR start "rule__ExprList__Group_1__1"
    // InternalFortXTrans.g:7111:1: rule__ExprList__Group_1__1 : rule__ExprList__Group_1__1__Impl ;
    public final void rule__ExprList__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7115:1: ( rule__ExprList__Group_1__1__Impl )
            // InternalFortXTrans.g:7116:2: rule__ExprList__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ExprList__Group_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExprList__Group_1__1"


    // $ANTLR start "rule__ExprList__Group_1__1__Impl"
    // InternalFortXTrans.g:7122:1: rule__ExprList__Group_1__1__Impl : ( ( rule__ExprList__ExpAssignment_1_1 ) ) ;
    public final void rule__ExprList__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7126:1: ( ( ( rule__ExprList__ExpAssignment_1_1 ) ) )
            // InternalFortXTrans.g:7127:1: ( ( rule__ExprList__ExpAssignment_1_1 ) )
            {
            // InternalFortXTrans.g:7127:1: ( ( rule__ExprList__ExpAssignment_1_1 ) )
            // InternalFortXTrans.g:7128:2: ( rule__ExprList__ExpAssignment_1_1 )
            {
             before(grammarAccess.getExprListAccess().getExpAssignment_1_1()); 
            // InternalFortXTrans.g:7129:2: ( rule__ExprList__ExpAssignment_1_1 )
            // InternalFortXTrans.g:7129:3: rule__ExprList__ExpAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__ExprList__ExpAssignment_1_1();

            state._fsp--;


            }

             after(grammarAccess.getExprListAccess().getExpAssignment_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExprList__Group_1__1__Impl"


    // $ANTLR start "rule__ExprTail__Group__0"
    // InternalFortXTrans.g:7138:1: rule__ExprTail__Group__0 : rule__ExprTail__Group__0__Impl rule__ExprTail__Group__1 ;
    public final void rule__ExprTail__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7142:1: ( rule__ExprTail__Group__0__Impl rule__ExprTail__Group__1 )
            // InternalFortXTrans.g:7143:2: rule__ExprTail__Group__0__Impl rule__ExprTail__Group__1
            {
            pushFollow(FOLLOW_5);
            rule__ExprTail__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ExprTail__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExprTail__Group__0"


    // $ANTLR start "rule__ExprTail__Group__0__Impl"
    // InternalFortXTrans.g:7150:1: rule__ExprTail__Group__0__Impl : ( 'as' ) ;
    public final void rule__ExprTail__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7154:1: ( ( 'as' ) )
            // InternalFortXTrans.g:7155:1: ( 'as' )
            {
            // InternalFortXTrans.g:7155:1: ( 'as' )
            // InternalFortXTrans.g:7156:2: 'as'
            {
             before(grammarAccess.getExprTailAccess().getAsKeyword_0()); 
            match(input,32,FOLLOW_2); 
             after(grammarAccess.getExprTailAccess().getAsKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExprTail__Group__0__Impl"


    // $ANTLR start "rule__ExprTail__Group__1"
    // InternalFortXTrans.g:7165:1: rule__ExprTail__Group__1 : rule__ExprTail__Group__1__Impl ;
    public final void rule__ExprTail__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7169:1: ( rule__ExprTail__Group__1__Impl )
            // InternalFortXTrans.g:7170:2: rule__ExprTail__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ExprTail__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExprTail__Group__1"


    // $ANTLR start "rule__ExprTail__Group__1__Impl"
    // InternalFortXTrans.g:7176:1: rule__ExprTail__Group__1__Impl : ( ( rule__ExprTail__TypeAssignment_1 ) ) ;
    public final void rule__ExprTail__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7180:1: ( ( ( rule__ExprTail__TypeAssignment_1 ) ) )
            // InternalFortXTrans.g:7181:1: ( ( rule__ExprTail__TypeAssignment_1 ) )
            {
            // InternalFortXTrans.g:7181:1: ( ( rule__ExprTail__TypeAssignment_1 ) )
            // InternalFortXTrans.g:7182:2: ( rule__ExprTail__TypeAssignment_1 )
            {
             before(grammarAccess.getExprTailAccess().getTypeAssignment_1()); 
            // InternalFortXTrans.g:7183:2: ( rule__ExprTail__TypeAssignment_1 )
            // InternalFortXTrans.g:7183:3: rule__ExprTail__TypeAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__ExprTail__TypeAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getExprTailAccess().getTypeAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExprTail__Group__1__Impl"


    // $ANTLR start "rule__DelimitedExpr__Group_1__0"
    // InternalFortXTrans.g:7192:1: rule__DelimitedExpr__Group_1__0 : rule__DelimitedExpr__Group_1__0__Impl rule__DelimitedExpr__Group_1__1 ;
    public final void rule__DelimitedExpr__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7196:1: ( rule__DelimitedExpr__Group_1__0__Impl rule__DelimitedExpr__Group_1__1 )
            // InternalFortXTrans.g:7197:2: rule__DelimitedExpr__Group_1__0__Impl rule__DelimitedExpr__Group_1__1
            {
            pushFollow(FOLLOW_32);
            rule__DelimitedExpr__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DelimitedExpr__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Group_1__0"


    // $ANTLR start "rule__DelimitedExpr__Group_1__0__Impl"
    // InternalFortXTrans.g:7204:1: rule__DelimitedExpr__Group_1__0__Impl : ( ( rule__DelimitedExpr__RetAssignment_1_0 ) ) ;
    public final void rule__DelimitedExpr__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7208:1: ( ( ( rule__DelimitedExpr__RetAssignment_1_0 ) ) )
            // InternalFortXTrans.g:7209:1: ( ( rule__DelimitedExpr__RetAssignment_1_0 ) )
            {
            // InternalFortXTrans.g:7209:1: ( ( rule__DelimitedExpr__RetAssignment_1_0 ) )
            // InternalFortXTrans.g:7210:2: ( rule__DelimitedExpr__RetAssignment_1_0 )
            {
             before(grammarAccess.getDelimitedExprAccess().getRetAssignment_1_0()); 
            // InternalFortXTrans.g:7211:2: ( rule__DelimitedExpr__RetAssignment_1_0 )
            // InternalFortXTrans.g:7211:3: rule__DelimitedExpr__RetAssignment_1_0
            {
            pushFollow(FOLLOW_2);
            rule__DelimitedExpr__RetAssignment_1_0();

            state._fsp--;


            }

             after(grammarAccess.getDelimitedExprAccess().getRetAssignment_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Group_1__0__Impl"


    // $ANTLR start "rule__DelimitedExpr__Group_1__1"
    // InternalFortXTrans.g:7219:1: rule__DelimitedExpr__Group_1__1 : rule__DelimitedExpr__Group_1__1__Impl ;
    public final void rule__DelimitedExpr__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7223:1: ( rule__DelimitedExpr__Group_1__1__Impl )
            // InternalFortXTrans.g:7224:2: rule__DelimitedExpr__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__DelimitedExpr__Group_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Group_1__1"


    // $ANTLR start "rule__DelimitedExpr__Group_1__1__Impl"
    // InternalFortXTrans.g:7230:1: rule__DelimitedExpr__Group_1__1__Impl : ( ( rule__DelimitedExpr__BlockAssignment_1_1 ) ) ;
    public final void rule__DelimitedExpr__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7234:1: ( ( ( rule__DelimitedExpr__BlockAssignment_1_1 ) ) )
            // InternalFortXTrans.g:7235:1: ( ( rule__DelimitedExpr__BlockAssignment_1_1 ) )
            {
            // InternalFortXTrans.g:7235:1: ( ( rule__DelimitedExpr__BlockAssignment_1_1 ) )
            // InternalFortXTrans.g:7236:2: ( rule__DelimitedExpr__BlockAssignment_1_1 )
            {
             before(grammarAccess.getDelimitedExprAccess().getBlockAssignment_1_1()); 
            // InternalFortXTrans.g:7237:2: ( rule__DelimitedExpr__BlockAssignment_1_1 )
            // InternalFortXTrans.g:7237:3: rule__DelimitedExpr__BlockAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__DelimitedExpr__BlockAssignment_1_1();

            state._fsp--;


            }

             after(grammarAccess.getDelimitedExprAccess().getBlockAssignment_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Group_1__1__Impl"


    // $ANTLR start "rule__DelimitedExpr__Group_2__0"
    // InternalFortXTrans.g:7246:1: rule__DelimitedExpr__Group_2__0 : rule__DelimitedExpr__Group_2__0__Impl rule__DelimitedExpr__Group_2__1 ;
    public final void rule__DelimitedExpr__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7250:1: ( rule__DelimitedExpr__Group_2__0__Impl rule__DelimitedExpr__Group_2__1 )
            // InternalFortXTrans.g:7251:2: rule__DelimitedExpr__Group_2__0__Impl rule__DelimitedExpr__Group_2__1
            {
            pushFollow(FOLLOW_32);
            rule__DelimitedExpr__Group_2__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DelimitedExpr__Group_2__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Group_2__0"


    // $ANTLR start "rule__DelimitedExpr__Group_2__0__Impl"
    // InternalFortXTrans.g:7258:1: rule__DelimitedExpr__Group_2__0__Impl : ( ( rule__DelimitedExpr__AwhileAssignment_2_0 ) ) ;
    public final void rule__DelimitedExpr__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7262:1: ( ( ( rule__DelimitedExpr__AwhileAssignment_2_0 ) ) )
            // InternalFortXTrans.g:7263:1: ( ( rule__DelimitedExpr__AwhileAssignment_2_0 ) )
            {
            // InternalFortXTrans.g:7263:1: ( ( rule__DelimitedExpr__AwhileAssignment_2_0 ) )
            // InternalFortXTrans.g:7264:2: ( rule__DelimitedExpr__AwhileAssignment_2_0 )
            {
             before(grammarAccess.getDelimitedExprAccess().getAwhileAssignment_2_0()); 
            // InternalFortXTrans.g:7265:2: ( rule__DelimitedExpr__AwhileAssignment_2_0 )
            // InternalFortXTrans.g:7265:3: rule__DelimitedExpr__AwhileAssignment_2_0
            {
            pushFollow(FOLLOW_2);
            rule__DelimitedExpr__AwhileAssignment_2_0();

            state._fsp--;


            }

             after(grammarAccess.getDelimitedExprAccess().getAwhileAssignment_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Group_2__0__Impl"


    // $ANTLR start "rule__DelimitedExpr__Group_2__1"
    // InternalFortXTrans.g:7273:1: rule__DelimitedExpr__Group_2__1 : rule__DelimitedExpr__Group_2__1__Impl rule__DelimitedExpr__Group_2__2 ;
    public final void rule__DelimitedExpr__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7277:1: ( rule__DelimitedExpr__Group_2__1__Impl rule__DelimitedExpr__Group_2__2 )
            // InternalFortXTrans.g:7278:2: rule__DelimitedExpr__Group_2__1__Impl rule__DelimitedExpr__Group_2__2
            {
            pushFollow(FOLLOW_58);
            rule__DelimitedExpr__Group_2__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DelimitedExpr__Group_2__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Group_2__1"


    // $ANTLR start "rule__DelimitedExpr__Group_2__1__Impl"
    // InternalFortXTrans.g:7285:1: rule__DelimitedExpr__Group_2__1__Impl : ( ( rule__DelimitedExpr__ExprAssignment_2_1 ) ) ;
    public final void rule__DelimitedExpr__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7289:1: ( ( ( rule__DelimitedExpr__ExprAssignment_2_1 ) ) )
            // InternalFortXTrans.g:7290:1: ( ( rule__DelimitedExpr__ExprAssignment_2_1 ) )
            {
            // InternalFortXTrans.g:7290:1: ( ( rule__DelimitedExpr__ExprAssignment_2_1 ) )
            // InternalFortXTrans.g:7291:2: ( rule__DelimitedExpr__ExprAssignment_2_1 )
            {
             before(grammarAccess.getDelimitedExprAccess().getExprAssignment_2_1()); 
            // InternalFortXTrans.g:7292:2: ( rule__DelimitedExpr__ExprAssignment_2_1 )
            // InternalFortXTrans.g:7292:3: rule__DelimitedExpr__ExprAssignment_2_1
            {
            pushFollow(FOLLOW_2);
            rule__DelimitedExpr__ExprAssignment_2_1();

            state._fsp--;


            }

             after(grammarAccess.getDelimitedExprAccess().getExprAssignment_2_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Group_2__1__Impl"


    // $ANTLR start "rule__DelimitedExpr__Group_2__2"
    // InternalFortXTrans.g:7300:1: rule__DelimitedExpr__Group_2__2 : rule__DelimitedExpr__Group_2__2__Impl ;
    public final void rule__DelimitedExpr__Group_2__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7304:1: ( rule__DelimitedExpr__Group_2__2__Impl )
            // InternalFortXTrans.g:7305:2: rule__DelimitedExpr__Group_2__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__DelimitedExpr__Group_2__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Group_2__2"


    // $ANTLR start "rule__DelimitedExpr__Group_2__2__Impl"
    // InternalFortXTrans.g:7311:1: rule__DelimitedExpr__Group_2__2__Impl : ( ( rule__DelimitedExpr__WhiledodAssignment_2_2 ) ) ;
    public final void rule__DelimitedExpr__Group_2__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7315:1: ( ( ( rule__DelimitedExpr__WhiledodAssignment_2_2 ) ) )
            // InternalFortXTrans.g:7316:1: ( ( rule__DelimitedExpr__WhiledodAssignment_2_2 ) )
            {
            // InternalFortXTrans.g:7316:1: ( ( rule__DelimitedExpr__WhiledodAssignment_2_2 ) )
            // InternalFortXTrans.g:7317:2: ( rule__DelimitedExpr__WhiledodAssignment_2_2 )
            {
             before(grammarAccess.getDelimitedExprAccess().getWhiledodAssignment_2_2()); 
            // InternalFortXTrans.g:7318:2: ( rule__DelimitedExpr__WhiledodAssignment_2_2 )
            // InternalFortXTrans.g:7318:3: rule__DelimitedExpr__WhiledodAssignment_2_2
            {
            pushFollow(FOLLOW_2);
            rule__DelimitedExpr__WhiledodAssignment_2_2();

            state._fsp--;


            }

             after(grammarAccess.getDelimitedExprAccess().getWhiledodAssignment_2_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Group_2__2__Impl"


    // $ANTLR start "rule__DelimitedExpr__Group_3__0"
    // InternalFortXTrans.g:7327:1: rule__DelimitedExpr__Group_3__0 : rule__DelimitedExpr__Group_3__0__Impl rule__DelimitedExpr__Group_3__1 ;
    public final void rule__DelimitedExpr__Group_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7331:1: ( rule__DelimitedExpr__Group_3__0__Impl rule__DelimitedExpr__Group_3__1 )
            // InternalFortXTrans.g:7332:2: rule__DelimitedExpr__Group_3__0__Impl rule__DelimitedExpr__Group_3__1
            {
            pushFollow(FOLLOW_59);
            rule__DelimitedExpr__Group_3__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DelimitedExpr__Group_3__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Group_3__0"


    // $ANTLR start "rule__DelimitedExpr__Group_3__0__Impl"
    // InternalFortXTrans.g:7339:1: rule__DelimitedExpr__Group_3__0__Impl : ( ( rule__DelimitedExpr__AforAssignment_3_0 ) ) ;
    public final void rule__DelimitedExpr__Group_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7343:1: ( ( ( rule__DelimitedExpr__AforAssignment_3_0 ) ) )
            // InternalFortXTrans.g:7344:1: ( ( rule__DelimitedExpr__AforAssignment_3_0 ) )
            {
            // InternalFortXTrans.g:7344:1: ( ( rule__DelimitedExpr__AforAssignment_3_0 ) )
            // InternalFortXTrans.g:7345:2: ( rule__DelimitedExpr__AforAssignment_3_0 )
            {
             before(grammarAccess.getDelimitedExprAccess().getAforAssignment_3_0()); 
            // InternalFortXTrans.g:7346:2: ( rule__DelimitedExpr__AforAssignment_3_0 )
            // InternalFortXTrans.g:7346:3: rule__DelimitedExpr__AforAssignment_3_0
            {
            pushFollow(FOLLOW_2);
            rule__DelimitedExpr__AforAssignment_3_0();

            state._fsp--;


            }

             after(grammarAccess.getDelimitedExprAccess().getAforAssignment_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Group_3__0__Impl"


    // $ANTLR start "rule__DelimitedExpr__Group_3__1"
    // InternalFortXTrans.g:7354:1: rule__DelimitedExpr__Group_3__1 : rule__DelimitedExpr__Group_3__1__Impl rule__DelimitedExpr__Group_3__2 ;
    public final void rule__DelimitedExpr__Group_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7358:1: ( rule__DelimitedExpr__Group_3__1__Impl rule__DelimitedExpr__Group_3__2 )
            // InternalFortXTrans.g:7359:2: rule__DelimitedExpr__Group_3__1__Impl rule__DelimitedExpr__Group_3__2
            {
            pushFollow(FOLLOW_58);
            rule__DelimitedExpr__Group_3__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DelimitedExpr__Group_3__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Group_3__1"


    // $ANTLR start "rule__DelimitedExpr__Group_3__1__Impl"
    // InternalFortXTrans.g:7366:1: rule__DelimitedExpr__Group_3__1__Impl : ( ( rule__DelimitedExpr__GenAssignment_3_1 ) ) ;
    public final void rule__DelimitedExpr__Group_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7370:1: ( ( ( rule__DelimitedExpr__GenAssignment_3_1 ) ) )
            // InternalFortXTrans.g:7371:1: ( ( rule__DelimitedExpr__GenAssignment_3_1 ) )
            {
            // InternalFortXTrans.g:7371:1: ( ( rule__DelimitedExpr__GenAssignment_3_1 ) )
            // InternalFortXTrans.g:7372:2: ( rule__DelimitedExpr__GenAssignment_3_1 )
            {
             before(grammarAccess.getDelimitedExprAccess().getGenAssignment_3_1()); 
            // InternalFortXTrans.g:7373:2: ( rule__DelimitedExpr__GenAssignment_3_1 )
            // InternalFortXTrans.g:7373:3: rule__DelimitedExpr__GenAssignment_3_1
            {
            pushFollow(FOLLOW_2);
            rule__DelimitedExpr__GenAssignment_3_1();

            state._fsp--;


            }

             after(grammarAccess.getDelimitedExprAccess().getGenAssignment_3_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Group_3__1__Impl"


    // $ANTLR start "rule__DelimitedExpr__Group_3__2"
    // InternalFortXTrans.g:7381:1: rule__DelimitedExpr__Group_3__2 : rule__DelimitedExpr__Group_3__2__Impl rule__DelimitedExpr__Group_3__3 ;
    public final void rule__DelimitedExpr__Group_3__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7385:1: ( rule__DelimitedExpr__Group_3__2__Impl rule__DelimitedExpr__Group_3__3 )
            // InternalFortXTrans.g:7386:2: rule__DelimitedExpr__Group_3__2__Impl rule__DelimitedExpr__Group_3__3
            {
            pushFollow(FOLLOW_60);
            rule__DelimitedExpr__Group_3__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DelimitedExpr__Group_3__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Group_3__2"


    // $ANTLR start "rule__DelimitedExpr__Group_3__2__Impl"
    // InternalFortXTrans.g:7393:1: rule__DelimitedExpr__Group_3__2__Impl : ( ( rule__DelimitedExpr__DofrontAssignment_3_2 ) ) ;
    public final void rule__DelimitedExpr__Group_3__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7397:1: ( ( ( rule__DelimitedExpr__DofrontAssignment_3_2 ) ) )
            // InternalFortXTrans.g:7398:1: ( ( rule__DelimitedExpr__DofrontAssignment_3_2 ) )
            {
            // InternalFortXTrans.g:7398:1: ( ( rule__DelimitedExpr__DofrontAssignment_3_2 ) )
            // InternalFortXTrans.g:7399:2: ( rule__DelimitedExpr__DofrontAssignment_3_2 )
            {
             before(grammarAccess.getDelimitedExprAccess().getDofrontAssignment_3_2()); 
            // InternalFortXTrans.g:7400:2: ( rule__DelimitedExpr__DofrontAssignment_3_2 )
            // InternalFortXTrans.g:7400:3: rule__DelimitedExpr__DofrontAssignment_3_2
            {
            pushFollow(FOLLOW_2);
            rule__DelimitedExpr__DofrontAssignment_3_2();

            state._fsp--;


            }

             after(grammarAccess.getDelimitedExprAccess().getDofrontAssignment_3_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Group_3__2__Impl"


    // $ANTLR start "rule__DelimitedExpr__Group_3__3"
    // InternalFortXTrans.g:7408:1: rule__DelimitedExpr__Group_3__3 : rule__DelimitedExpr__Group_3__3__Impl ;
    public final void rule__DelimitedExpr__Group_3__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7412:1: ( rule__DelimitedExpr__Group_3__3__Impl )
            // InternalFortXTrans.g:7413:2: rule__DelimitedExpr__Group_3__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__DelimitedExpr__Group_3__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Group_3__3"


    // $ANTLR start "rule__DelimitedExpr__Group_3__3__Impl"
    // InternalFortXTrans.g:7419:1: rule__DelimitedExpr__Group_3__3__Impl : ( 'end' ) ;
    public final void rule__DelimitedExpr__Group_3__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7423:1: ( ( 'end' ) )
            // InternalFortXTrans.g:7424:1: ( 'end' )
            {
            // InternalFortXTrans.g:7424:1: ( 'end' )
            // InternalFortXTrans.g:7425:2: 'end'
            {
             before(grammarAccess.getDelimitedExprAccess().getEndKeyword_3_3()); 
            match(input,26,FOLLOW_2); 
             after(grammarAccess.getDelimitedExprAccess().getEndKeyword_3_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Group_3__3__Impl"


    // $ANTLR start "rule__DelimitedExpr__Group_4__0"
    // InternalFortXTrans.g:7435:1: rule__DelimitedExpr__Group_4__0 : rule__DelimitedExpr__Group_4__0__Impl rule__DelimitedExpr__Group_4__1 ;
    public final void rule__DelimitedExpr__Group_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7439:1: ( rule__DelimitedExpr__Group_4__0__Impl rule__DelimitedExpr__Group_4__1 )
            // InternalFortXTrans.g:7440:2: rule__DelimitedExpr__Group_4__0__Impl rule__DelimitedExpr__Group_4__1
            {
            pushFollow(FOLLOW_32);
            rule__DelimitedExpr__Group_4__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DelimitedExpr__Group_4__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Group_4__0"


    // $ANTLR start "rule__DelimitedExpr__Group_4__0__Impl"
    // InternalFortXTrans.g:7447:1: rule__DelimitedExpr__Group_4__0__Impl : ( ( rule__DelimitedExpr__AnifAssignment_4_0 ) ) ;
    public final void rule__DelimitedExpr__Group_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7451:1: ( ( ( rule__DelimitedExpr__AnifAssignment_4_0 ) ) )
            // InternalFortXTrans.g:7452:1: ( ( rule__DelimitedExpr__AnifAssignment_4_0 ) )
            {
            // InternalFortXTrans.g:7452:1: ( ( rule__DelimitedExpr__AnifAssignment_4_0 ) )
            // InternalFortXTrans.g:7453:2: ( rule__DelimitedExpr__AnifAssignment_4_0 )
            {
             before(grammarAccess.getDelimitedExprAccess().getAnifAssignment_4_0()); 
            // InternalFortXTrans.g:7454:2: ( rule__DelimitedExpr__AnifAssignment_4_0 )
            // InternalFortXTrans.g:7454:3: rule__DelimitedExpr__AnifAssignment_4_0
            {
            pushFollow(FOLLOW_2);
            rule__DelimitedExpr__AnifAssignment_4_0();

            state._fsp--;


            }

             after(grammarAccess.getDelimitedExprAccess().getAnifAssignment_4_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Group_4__0__Impl"


    // $ANTLR start "rule__DelimitedExpr__Group_4__1"
    // InternalFortXTrans.g:7462:1: rule__DelimitedExpr__Group_4__1 : rule__DelimitedExpr__Group_4__1__Impl rule__DelimitedExpr__Group_4__2 ;
    public final void rule__DelimitedExpr__Group_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7466:1: ( rule__DelimitedExpr__Group_4__1__Impl rule__DelimitedExpr__Group_4__2 )
            // InternalFortXTrans.g:7467:2: rule__DelimitedExpr__Group_4__1__Impl rule__DelimitedExpr__Group_4__2
            {
            pushFollow(FOLLOW_61);
            rule__DelimitedExpr__Group_4__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DelimitedExpr__Group_4__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Group_4__1"


    // $ANTLR start "rule__DelimitedExpr__Group_4__1__Impl"
    // InternalFortXTrans.g:7474:1: rule__DelimitedExpr__Group_4__1__Impl : ( ( rule__DelimitedExpr__CondAssignment_4_1 ) ) ;
    public final void rule__DelimitedExpr__Group_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7478:1: ( ( ( rule__DelimitedExpr__CondAssignment_4_1 ) ) )
            // InternalFortXTrans.g:7479:1: ( ( rule__DelimitedExpr__CondAssignment_4_1 ) )
            {
            // InternalFortXTrans.g:7479:1: ( ( rule__DelimitedExpr__CondAssignment_4_1 ) )
            // InternalFortXTrans.g:7480:2: ( rule__DelimitedExpr__CondAssignment_4_1 )
            {
             before(grammarAccess.getDelimitedExprAccess().getCondAssignment_4_1()); 
            // InternalFortXTrans.g:7481:2: ( rule__DelimitedExpr__CondAssignment_4_1 )
            // InternalFortXTrans.g:7481:3: rule__DelimitedExpr__CondAssignment_4_1
            {
            pushFollow(FOLLOW_2);
            rule__DelimitedExpr__CondAssignment_4_1();

            state._fsp--;


            }

             after(grammarAccess.getDelimitedExprAccess().getCondAssignment_4_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Group_4__1__Impl"


    // $ANTLR start "rule__DelimitedExpr__Group_4__2"
    // InternalFortXTrans.g:7489:1: rule__DelimitedExpr__Group_4__2 : rule__DelimitedExpr__Group_4__2__Impl rule__DelimitedExpr__Group_4__3 ;
    public final void rule__DelimitedExpr__Group_4__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7493:1: ( rule__DelimitedExpr__Group_4__2__Impl rule__DelimitedExpr__Group_4__3 )
            // InternalFortXTrans.g:7494:2: rule__DelimitedExpr__Group_4__2__Impl rule__DelimitedExpr__Group_4__3
            {
            pushFollow(FOLLOW_32);
            rule__DelimitedExpr__Group_4__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DelimitedExpr__Group_4__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Group_4__2"


    // $ANTLR start "rule__DelimitedExpr__Group_4__2__Impl"
    // InternalFortXTrans.g:7501:1: rule__DelimitedExpr__Group_4__2__Impl : ( 'then' ) ;
    public final void rule__DelimitedExpr__Group_4__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7505:1: ( ( 'then' ) )
            // InternalFortXTrans.g:7506:1: ( 'then' )
            {
            // InternalFortXTrans.g:7506:1: ( 'then' )
            // InternalFortXTrans.g:7507:2: 'then'
            {
             before(grammarAccess.getDelimitedExprAccess().getThenKeyword_4_2()); 
            match(input,46,FOLLOW_2); 
             after(grammarAccess.getDelimitedExprAccess().getThenKeyword_4_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Group_4__2__Impl"


    // $ANTLR start "rule__DelimitedExpr__Group_4__3"
    // InternalFortXTrans.g:7516:1: rule__DelimitedExpr__Group_4__3 : rule__DelimitedExpr__Group_4__3__Impl rule__DelimitedExpr__Group_4__4 ;
    public final void rule__DelimitedExpr__Group_4__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7520:1: ( rule__DelimitedExpr__Group_4__3__Impl rule__DelimitedExpr__Group_4__4 )
            // InternalFortXTrans.g:7521:2: rule__DelimitedExpr__Group_4__3__Impl rule__DelimitedExpr__Group_4__4
            {
            pushFollow(FOLLOW_62);
            rule__DelimitedExpr__Group_4__3__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DelimitedExpr__Group_4__4();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Group_4__3"


    // $ANTLR start "rule__DelimitedExpr__Group_4__3__Impl"
    // InternalFortXTrans.g:7528:1: rule__DelimitedExpr__Group_4__3__Impl : ( ( rule__DelimitedExpr__BlocksAssignment_4_3 ) ) ;
    public final void rule__DelimitedExpr__Group_4__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7532:1: ( ( ( rule__DelimitedExpr__BlocksAssignment_4_3 ) ) )
            // InternalFortXTrans.g:7533:1: ( ( rule__DelimitedExpr__BlocksAssignment_4_3 ) )
            {
            // InternalFortXTrans.g:7533:1: ( ( rule__DelimitedExpr__BlocksAssignment_4_3 ) )
            // InternalFortXTrans.g:7534:2: ( rule__DelimitedExpr__BlocksAssignment_4_3 )
            {
             before(grammarAccess.getDelimitedExprAccess().getBlocksAssignment_4_3()); 
            // InternalFortXTrans.g:7535:2: ( rule__DelimitedExpr__BlocksAssignment_4_3 )
            // InternalFortXTrans.g:7535:3: rule__DelimitedExpr__BlocksAssignment_4_3
            {
            pushFollow(FOLLOW_2);
            rule__DelimitedExpr__BlocksAssignment_4_3();

            state._fsp--;


            }

             after(grammarAccess.getDelimitedExprAccess().getBlocksAssignment_4_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Group_4__3__Impl"


    // $ANTLR start "rule__DelimitedExpr__Group_4__4"
    // InternalFortXTrans.g:7543:1: rule__DelimitedExpr__Group_4__4 : rule__DelimitedExpr__Group_4__4__Impl rule__DelimitedExpr__Group_4__5 ;
    public final void rule__DelimitedExpr__Group_4__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7547:1: ( rule__DelimitedExpr__Group_4__4__Impl rule__DelimitedExpr__Group_4__5 )
            // InternalFortXTrans.g:7548:2: rule__DelimitedExpr__Group_4__4__Impl rule__DelimitedExpr__Group_4__5
            {
            pushFollow(FOLLOW_62);
            rule__DelimitedExpr__Group_4__4__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DelimitedExpr__Group_4__5();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Group_4__4"


    // $ANTLR start "rule__DelimitedExpr__Group_4__4__Impl"
    // InternalFortXTrans.g:7555:1: rule__DelimitedExpr__Group_4__4__Impl : ( ( rule__DelimitedExpr__ElifsAssignment_4_4 )? ) ;
    public final void rule__DelimitedExpr__Group_4__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7559:1: ( ( ( rule__DelimitedExpr__ElifsAssignment_4_4 )? ) )
            // InternalFortXTrans.g:7560:1: ( ( rule__DelimitedExpr__ElifsAssignment_4_4 )? )
            {
            // InternalFortXTrans.g:7560:1: ( ( rule__DelimitedExpr__ElifsAssignment_4_4 )? )
            // InternalFortXTrans.g:7561:2: ( rule__DelimitedExpr__ElifsAssignment_4_4 )?
            {
             before(grammarAccess.getDelimitedExprAccess().getElifsAssignment_4_4()); 
            // InternalFortXTrans.g:7562:2: ( rule__DelimitedExpr__ElifsAssignment_4_4 )?
            int alt66=2;
            int LA66_0 = input.LA(1);

            if ( (LA66_0==47) ) {
                alt66=1;
            }
            switch (alt66) {
                case 1 :
                    // InternalFortXTrans.g:7562:3: rule__DelimitedExpr__ElifsAssignment_4_4
                    {
                    pushFollow(FOLLOW_2);
                    rule__DelimitedExpr__ElifsAssignment_4_4();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getDelimitedExprAccess().getElifsAssignment_4_4()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Group_4__4__Impl"


    // $ANTLR start "rule__DelimitedExpr__Group_4__5"
    // InternalFortXTrans.g:7570:1: rule__DelimitedExpr__Group_4__5 : rule__DelimitedExpr__Group_4__5__Impl rule__DelimitedExpr__Group_4__6 ;
    public final void rule__DelimitedExpr__Group_4__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7574:1: ( rule__DelimitedExpr__Group_4__5__Impl rule__DelimitedExpr__Group_4__6 )
            // InternalFortXTrans.g:7575:2: rule__DelimitedExpr__Group_4__5__Impl rule__DelimitedExpr__Group_4__6
            {
            pushFollow(FOLLOW_62);
            rule__DelimitedExpr__Group_4__5__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DelimitedExpr__Group_4__6();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Group_4__5"


    // $ANTLR start "rule__DelimitedExpr__Group_4__5__Impl"
    // InternalFortXTrans.g:7582:1: rule__DelimitedExpr__Group_4__5__Impl : ( ( rule__DelimitedExpr__ElsAssignment_4_5 )? ) ;
    public final void rule__DelimitedExpr__Group_4__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7586:1: ( ( ( rule__DelimitedExpr__ElsAssignment_4_5 )? ) )
            // InternalFortXTrans.g:7587:1: ( ( rule__DelimitedExpr__ElsAssignment_4_5 )? )
            {
            // InternalFortXTrans.g:7587:1: ( ( rule__DelimitedExpr__ElsAssignment_4_5 )? )
            // InternalFortXTrans.g:7588:2: ( rule__DelimitedExpr__ElsAssignment_4_5 )?
            {
             before(grammarAccess.getDelimitedExprAccess().getElsAssignment_4_5()); 
            // InternalFortXTrans.g:7589:2: ( rule__DelimitedExpr__ElsAssignment_4_5 )?
            int alt67=2;
            int LA67_0 = input.LA(1);

            if ( (LA67_0==48) ) {
                alt67=1;
            }
            switch (alt67) {
                case 1 :
                    // InternalFortXTrans.g:7589:3: rule__DelimitedExpr__ElsAssignment_4_5
                    {
                    pushFollow(FOLLOW_2);
                    rule__DelimitedExpr__ElsAssignment_4_5();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getDelimitedExprAccess().getElsAssignment_4_5()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Group_4__5__Impl"


    // $ANTLR start "rule__DelimitedExpr__Group_4__6"
    // InternalFortXTrans.g:7597:1: rule__DelimitedExpr__Group_4__6 : rule__DelimitedExpr__Group_4__6__Impl ;
    public final void rule__DelimitedExpr__Group_4__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7601:1: ( rule__DelimitedExpr__Group_4__6__Impl )
            // InternalFortXTrans.g:7602:2: rule__DelimitedExpr__Group_4__6__Impl
            {
            pushFollow(FOLLOW_2);
            rule__DelimitedExpr__Group_4__6__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Group_4__6"


    // $ANTLR start "rule__DelimitedExpr__Group_4__6__Impl"
    // InternalFortXTrans.g:7608:1: rule__DelimitedExpr__Group_4__6__Impl : ( 'end' ) ;
    public final void rule__DelimitedExpr__Group_4__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7612:1: ( ( 'end' ) )
            // InternalFortXTrans.g:7613:1: ( 'end' )
            {
            // InternalFortXTrans.g:7613:1: ( 'end' )
            // InternalFortXTrans.g:7614:2: 'end'
            {
             before(grammarAccess.getDelimitedExprAccess().getEndKeyword_4_6()); 
            match(input,26,FOLLOW_2); 
             after(grammarAccess.getDelimitedExprAccess().getEndKeyword_4_6()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Group_4__6__Impl"


    // $ANTLR start "rule__Elifs__Group__0"
    // InternalFortXTrans.g:7624:1: rule__Elifs__Group__0 : rule__Elifs__Group__0__Impl rule__Elifs__Group__1 ;
    public final void rule__Elifs__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7628:1: ( rule__Elifs__Group__0__Impl rule__Elifs__Group__1 )
            // InternalFortXTrans.g:7629:2: rule__Elifs__Group__0__Impl rule__Elifs__Group__1
            {
            pushFollow(FOLLOW_63);
            rule__Elifs__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Elifs__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Elifs__Group__0"


    // $ANTLR start "rule__Elifs__Group__0__Impl"
    // InternalFortXTrans.g:7636:1: rule__Elifs__Group__0__Impl : ( ( rule__Elifs__EAssignment_0 ) ) ;
    public final void rule__Elifs__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7640:1: ( ( ( rule__Elifs__EAssignment_0 ) ) )
            // InternalFortXTrans.g:7641:1: ( ( rule__Elifs__EAssignment_0 ) )
            {
            // InternalFortXTrans.g:7641:1: ( ( rule__Elifs__EAssignment_0 ) )
            // InternalFortXTrans.g:7642:2: ( rule__Elifs__EAssignment_0 )
            {
             before(grammarAccess.getElifsAccess().getEAssignment_0()); 
            // InternalFortXTrans.g:7643:2: ( rule__Elifs__EAssignment_0 )
            // InternalFortXTrans.g:7643:3: rule__Elifs__EAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__Elifs__EAssignment_0();

            state._fsp--;


            }

             after(grammarAccess.getElifsAccess().getEAssignment_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Elifs__Group__0__Impl"


    // $ANTLR start "rule__Elifs__Group__1"
    // InternalFortXTrans.g:7651:1: rule__Elifs__Group__1 : rule__Elifs__Group__1__Impl ;
    public final void rule__Elifs__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7655:1: ( rule__Elifs__Group__1__Impl )
            // InternalFortXTrans.g:7656:2: rule__Elifs__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Elifs__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Elifs__Group__1"


    // $ANTLR start "rule__Elifs__Group__1__Impl"
    // InternalFortXTrans.g:7662:1: rule__Elifs__Group__1__Impl : ( ( rule__Elifs__EAssignment_1 )* ) ;
    public final void rule__Elifs__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7666:1: ( ( ( rule__Elifs__EAssignment_1 )* ) )
            // InternalFortXTrans.g:7667:1: ( ( rule__Elifs__EAssignment_1 )* )
            {
            // InternalFortXTrans.g:7667:1: ( ( rule__Elifs__EAssignment_1 )* )
            // InternalFortXTrans.g:7668:2: ( rule__Elifs__EAssignment_1 )*
            {
             before(grammarAccess.getElifsAccess().getEAssignment_1()); 
            // InternalFortXTrans.g:7669:2: ( rule__Elifs__EAssignment_1 )*
            loop68:
            do {
                int alt68=2;
                int LA68_0 = input.LA(1);

                if ( (LA68_0==47) ) {
                    alt68=1;
                }


                switch (alt68) {
            	case 1 :
            	    // InternalFortXTrans.g:7669:3: rule__Elifs__EAssignment_1
            	    {
            	    pushFollow(FOLLOW_64);
            	    rule__Elifs__EAssignment_1();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop68;
                }
            } while (true);

             after(grammarAccess.getElifsAccess().getEAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Elifs__Group__1__Impl"


    // $ANTLR start "rule__Elif__Group__0"
    // InternalFortXTrans.g:7678:1: rule__Elif__Group__0 : rule__Elif__Group__0__Impl rule__Elif__Group__1 ;
    public final void rule__Elif__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7682:1: ( rule__Elif__Group__0__Impl rule__Elif__Group__1 )
            // InternalFortXTrans.g:7683:2: rule__Elif__Group__0__Impl rule__Elif__Group__1
            {
            pushFollow(FOLLOW_32);
            rule__Elif__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Elif__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Elif__Group__0"


    // $ANTLR start "rule__Elif__Group__0__Impl"
    // InternalFortXTrans.g:7690:1: rule__Elif__Group__0__Impl : ( 'elif' ) ;
    public final void rule__Elif__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7694:1: ( ( 'elif' ) )
            // InternalFortXTrans.g:7695:1: ( 'elif' )
            {
            // InternalFortXTrans.g:7695:1: ( 'elif' )
            // InternalFortXTrans.g:7696:2: 'elif'
            {
             before(grammarAccess.getElifAccess().getElifKeyword_0()); 
            match(input,47,FOLLOW_2); 
             after(grammarAccess.getElifAccess().getElifKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Elif__Group__0__Impl"


    // $ANTLR start "rule__Elif__Group__1"
    // InternalFortXTrans.g:7705:1: rule__Elif__Group__1 : rule__Elif__Group__1__Impl rule__Elif__Group__2 ;
    public final void rule__Elif__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7709:1: ( rule__Elif__Group__1__Impl rule__Elif__Group__2 )
            // InternalFortXTrans.g:7710:2: rule__Elif__Group__1__Impl rule__Elif__Group__2
            {
            pushFollow(FOLLOW_61);
            rule__Elif__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Elif__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Elif__Group__1"


    // $ANTLR start "rule__Elif__Group__1__Impl"
    // InternalFortXTrans.g:7717:1: rule__Elif__Group__1__Impl : ( ( rule__Elif__ExprAssignment_1 ) ) ;
    public final void rule__Elif__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7721:1: ( ( ( rule__Elif__ExprAssignment_1 ) ) )
            // InternalFortXTrans.g:7722:1: ( ( rule__Elif__ExprAssignment_1 ) )
            {
            // InternalFortXTrans.g:7722:1: ( ( rule__Elif__ExprAssignment_1 ) )
            // InternalFortXTrans.g:7723:2: ( rule__Elif__ExprAssignment_1 )
            {
             before(grammarAccess.getElifAccess().getExprAssignment_1()); 
            // InternalFortXTrans.g:7724:2: ( rule__Elif__ExprAssignment_1 )
            // InternalFortXTrans.g:7724:3: rule__Elif__ExprAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__Elif__ExprAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getElifAccess().getExprAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Elif__Group__1__Impl"


    // $ANTLR start "rule__Elif__Group__2"
    // InternalFortXTrans.g:7732:1: rule__Elif__Group__2 : rule__Elif__Group__2__Impl rule__Elif__Group__3 ;
    public final void rule__Elif__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7736:1: ( rule__Elif__Group__2__Impl rule__Elif__Group__3 )
            // InternalFortXTrans.g:7737:2: rule__Elif__Group__2__Impl rule__Elif__Group__3
            {
            pushFollow(FOLLOW_32);
            rule__Elif__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Elif__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Elif__Group__2"


    // $ANTLR start "rule__Elif__Group__2__Impl"
    // InternalFortXTrans.g:7744:1: rule__Elif__Group__2__Impl : ( 'then' ) ;
    public final void rule__Elif__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7748:1: ( ( 'then' ) )
            // InternalFortXTrans.g:7749:1: ( 'then' )
            {
            // InternalFortXTrans.g:7749:1: ( 'then' )
            // InternalFortXTrans.g:7750:2: 'then'
            {
             before(grammarAccess.getElifAccess().getThenKeyword_2()); 
            match(input,46,FOLLOW_2); 
             after(grammarAccess.getElifAccess().getThenKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Elif__Group__2__Impl"


    // $ANTLR start "rule__Elif__Group__3"
    // InternalFortXTrans.g:7759:1: rule__Elif__Group__3 : rule__Elif__Group__3__Impl ;
    public final void rule__Elif__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7763:1: ( rule__Elif__Group__3__Impl )
            // InternalFortXTrans.g:7764:2: rule__Elif__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Elif__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Elif__Group__3"


    // $ANTLR start "rule__Elif__Group__3__Impl"
    // InternalFortXTrans.g:7770:1: rule__Elif__Group__3__Impl : ( ( rule__Elif__BlockAssignment_3 ) ) ;
    public final void rule__Elif__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7774:1: ( ( ( rule__Elif__BlockAssignment_3 ) ) )
            // InternalFortXTrans.g:7775:1: ( ( rule__Elif__BlockAssignment_3 ) )
            {
            // InternalFortXTrans.g:7775:1: ( ( rule__Elif__BlockAssignment_3 ) )
            // InternalFortXTrans.g:7776:2: ( rule__Elif__BlockAssignment_3 )
            {
             before(grammarAccess.getElifAccess().getBlockAssignment_3()); 
            // InternalFortXTrans.g:7777:2: ( rule__Elif__BlockAssignment_3 )
            // InternalFortXTrans.g:7777:3: rule__Elif__BlockAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__Elif__BlockAssignment_3();

            state._fsp--;


            }

             after(grammarAccess.getElifAccess().getBlockAssignment_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Elif__Group__3__Impl"


    // $ANTLR start "rule__Else__Group__0"
    // InternalFortXTrans.g:7786:1: rule__Else__Group__0 : rule__Else__Group__0__Impl rule__Else__Group__1 ;
    public final void rule__Else__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7790:1: ( rule__Else__Group__0__Impl rule__Else__Group__1 )
            // InternalFortXTrans.g:7791:2: rule__Else__Group__0__Impl rule__Else__Group__1
            {
            pushFollow(FOLLOW_32);
            rule__Else__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Else__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Else__Group__0"


    // $ANTLR start "rule__Else__Group__0__Impl"
    // InternalFortXTrans.g:7798:1: rule__Else__Group__0__Impl : ( 'else' ) ;
    public final void rule__Else__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7802:1: ( ( 'else' ) )
            // InternalFortXTrans.g:7803:1: ( 'else' )
            {
            // InternalFortXTrans.g:7803:1: ( 'else' )
            // InternalFortXTrans.g:7804:2: 'else'
            {
             before(grammarAccess.getElseAccess().getElseKeyword_0()); 
            match(input,48,FOLLOW_2); 
             after(grammarAccess.getElseAccess().getElseKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Else__Group__0__Impl"


    // $ANTLR start "rule__Else__Group__1"
    // InternalFortXTrans.g:7813:1: rule__Else__Group__1 : rule__Else__Group__1__Impl ;
    public final void rule__Else__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7817:1: ( rule__Else__Group__1__Impl )
            // InternalFortXTrans.g:7818:2: rule__Else__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Else__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Else__Group__1"


    // $ANTLR start "rule__Else__Group__1__Impl"
    // InternalFortXTrans.g:7824:1: rule__Else__Group__1__Impl : ( ( rule__Else__BlockAssignment_1 ) ) ;
    public final void rule__Else__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7828:1: ( ( ( rule__Else__BlockAssignment_1 ) ) )
            // InternalFortXTrans.g:7829:1: ( ( rule__Else__BlockAssignment_1 ) )
            {
            // InternalFortXTrans.g:7829:1: ( ( rule__Else__BlockAssignment_1 ) )
            // InternalFortXTrans.g:7830:2: ( rule__Else__BlockAssignment_1 )
            {
             before(grammarAccess.getElseAccess().getBlockAssignment_1()); 
            // InternalFortXTrans.g:7831:2: ( rule__Else__BlockAssignment_1 )
            // InternalFortXTrans.g:7831:3: rule__Else__BlockAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__Else__BlockAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getElseAccess().getBlockAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Else__Group__1__Impl"


    // $ANTLR start "rule__Generators__Group__0"
    // InternalFortXTrans.g:7840:1: rule__Generators__Group__0 : rule__Generators__Group__0__Impl rule__Generators__Group__1 ;
    public final void rule__Generators__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7844:1: ( rule__Generators__Group__0__Impl rule__Generators__Group__1 )
            // InternalFortXTrans.g:7845:2: rule__Generators__Group__0__Impl rule__Generators__Group__1
            {
            pushFollow(FOLLOW_25);
            rule__Generators__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Generators__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Generators__Group__0"


    // $ANTLR start "rule__Generators__Group__0__Impl"
    // InternalFortXTrans.g:7852:1: rule__Generators__Group__0__Impl : ( ( rule__Generators__BindingAssignment_0 ) ) ;
    public final void rule__Generators__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7856:1: ( ( ( rule__Generators__BindingAssignment_0 ) ) )
            // InternalFortXTrans.g:7857:1: ( ( rule__Generators__BindingAssignment_0 ) )
            {
            // InternalFortXTrans.g:7857:1: ( ( rule__Generators__BindingAssignment_0 ) )
            // InternalFortXTrans.g:7858:2: ( rule__Generators__BindingAssignment_0 )
            {
             before(grammarAccess.getGeneratorsAccess().getBindingAssignment_0()); 
            // InternalFortXTrans.g:7859:2: ( rule__Generators__BindingAssignment_0 )
            // InternalFortXTrans.g:7859:3: rule__Generators__BindingAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__Generators__BindingAssignment_0();

            state._fsp--;


            }

             after(grammarAccess.getGeneratorsAccess().getBindingAssignment_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Generators__Group__0__Impl"


    // $ANTLR start "rule__Generators__Group__1"
    // InternalFortXTrans.g:7867:1: rule__Generators__Group__1 : rule__Generators__Group__1__Impl ;
    public final void rule__Generators__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7871:1: ( rule__Generators__Group__1__Impl )
            // InternalFortXTrans.g:7872:2: rule__Generators__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Generators__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Generators__Group__1"


    // $ANTLR start "rule__Generators__Group__1__Impl"
    // InternalFortXTrans.g:7878:1: rule__Generators__Group__1__Impl : ( ( rule__Generators__Group_1__0 )* ) ;
    public final void rule__Generators__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7882:1: ( ( ( rule__Generators__Group_1__0 )* ) )
            // InternalFortXTrans.g:7883:1: ( ( rule__Generators__Group_1__0 )* )
            {
            // InternalFortXTrans.g:7883:1: ( ( rule__Generators__Group_1__0 )* )
            // InternalFortXTrans.g:7884:2: ( rule__Generators__Group_1__0 )*
            {
             before(grammarAccess.getGeneratorsAccess().getGroup_1()); 
            // InternalFortXTrans.g:7885:2: ( rule__Generators__Group_1__0 )*
            loop69:
            do {
                int alt69=2;
                int LA69_0 = input.LA(1);

                if ( (LA69_0==29) ) {
                    alt69=1;
                }


                switch (alt69) {
            	case 1 :
            	    // InternalFortXTrans.g:7885:3: rule__Generators__Group_1__0
            	    {
            	    pushFollow(FOLLOW_15);
            	    rule__Generators__Group_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop69;
                }
            } while (true);

             after(grammarAccess.getGeneratorsAccess().getGroup_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Generators__Group__1__Impl"


    // $ANTLR start "rule__Generators__Group_1__0"
    // InternalFortXTrans.g:7894:1: rule__Generators__Group_1__0 : rule__Generators__Group_1__0__Impl rule__Generators__Group_1__1 ;
    public final void rule__Generators__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7898:1: ( rule__Generators__Group_1__0__Impl rule__Generators__Group_1__1 )
            // InternalFortXTrans.g:7899:2: rule__Generators__Group_1__0__Impl rule__Generators__Group_1__1
            {
            pushFollow(FOLLOW_32);
            rule__Generators__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Generators__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Generators__Group_1__0"


    // $ANTLR start "rule__Generators__Group_1__0__Impl"
    // InternalFortXTrans.g:7906:1: rule__Generators__Group_1__0__Impl : ( ',' ) ;
    public final void rule__Generators__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7910:1: ( ( ',' ) )
            // InternalFortXTrans.g:7911:1: ( ',' )
            {
            // InternalFortXTrans.g:7911:1: ( ',' )
            // InternalFortXTrans.g:7912:2: ','
            {
             before(grammarAccess.getGeneratorsAccess().getCommaKeyword_1_0()); 
            match(input,29,FOLLOW_2); 
             after(grammarAccess.getGeneratorsAccess().getCommaKeyword_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Generators__Group_1__0__Impl"


    // $ANTLR start "rule__Generators__Group_1__1"
    // InternalFortXTrans.g:7921:1: rule__Generators__Group_1__1 : rule__Generators__Group_1__1__Impl ;
    public final void rule__Generators__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7925:1: ( rule__Generators__Group_1__1__Impl )
            // InternalFortXTrans.g:7926:2: rule__Generators__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Generators__Group_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Generators__Group_1__1"


    // $ANTLR start "rule__Generators__Group_1__1__Impl"
    // InternalFortXTrans.g:7932:1: rule__Generators__Group_1__1__Impl : ( ( rule__Generators__ClauseAssignment_1_1 ) ) ;
    public final void rule__Generators__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7936:1: ( ( ( rule__Generators__ClauseAssignment_1_1 ) ) )
            // InternalFortXTrans.g:7937:1: ( ( rule__Generators__ClauseAssignment_1_1 ) )
            {
            // InternalFortXTrans.g:7937:1: ( ( rule__Generators__ClauseAssignment_1_1 ) )
            // InternalFortXTrans.g:7938:2: ( rule__Generators__ClauseAssignment_1_1 )
            {
             before(grammarAccess.getGeneratorsAccess().getClauseAssignment_1_1()); 
            // InternalFortXTrans.g:7939:2: ( rule__Generators__ClauseAssignment_1_1 )
            // InternalFortXTrans.g:7939:3: rule__Generators__ClauseAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Generators__ClauseAssignment_1_1();

            state._fsp--;


            }

             after(grammarAccess.getGeneratorsAccess().getClauseAssignment_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Generators__Group_1__1__Impl"


    // $ANTLR start "rule__Binding__Group_0__0"
    // InternalFortXTrans.g:7948:1: rule__Binding__Group_0__0 : rule__Binding__Group_0__0__Impl rule__Binding__Group_0__1 ;
    public final void rule__Binding__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7952:1: ( rule__Binding__Group_0__0__Impl rule__Binding__Group_0__1 )
            // InternalFortXTrans.g:7953:2: rule__Binding__Group_0__0__Impl rule__Binding__Group_0__1
            {
            pushFollow(FOLLOW_65);
            rule__Binding__Group_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Binding__Group_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Binding__Group_0__0"


    // $ANTLR start "rule__Binding__Group_0__0__Impl"
    // InternalFortXTrans.g:7960:1: rule__Binding__Group_0__0__Impl : ( ( rule__Binding__IdtupAssignment_0_0 ) ) ;
    public final void rule__Binding__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7964:1: ( ( ( rule__Binding__IdtupAssignment_0_0 ) ) )
            // InternalFortXTrans.g:7965:1: ( ( rule__Binding__IdtupAssignment_0_0 ) )
            {
            // InternalFortXTrans.g:7965:1: ( ( rule__Binding__IdtupAssignment_0_0 ) )
            // InternalFortXTrans.g:7966:2: ( rule__Binding__IdtupAssignment_0_0 )
            {
             before(grammarAccess.getBindingAccess().getIdtupAssignment_0_0()); 
            // InternalFortXTrans.g:7967:2: ( rule__Binding__IdtupAssignment_0_0 )
            // InternalFortXTrans.g:7967:3: rule__Binding__IdtupAssignment_0_0
            {
            pushFollow(FOLLOW_2);
            rule__Binding__IdtupAssignment_0_0();

            state._fsp--;


            }

             after(grammarAccess.getBindingAccess().getIdtupAssignment_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Binding__Group_0__0__Impl"


    // $ANTLR start "rule__Binding__Group_0__1"
    // InternalFortXTrans.g:7975:1: rule__Binding__Group_0__1 : rule__Binding__Group_0__1__Impl rule__Binding__Group_0__2 ;
    public final void rule__Binding__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7979:1: ( rule__Binding__Group_0__1__Impl rule__Binding__Group_0__2 )
            // InternalFortXTrans.g:7980:2: rule__Binding__Group_0__1__Impl rule__Binding__Group_0__2
            {
            pushFollow(FOLLOW_32);
            rule__Binding__Group_0__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Binding__Group_0__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Binding__Group_0__1"


    // $ANTLR start "rule__Binding__Group_0__1__Impl"
    // InternalFortXTrans.g:7987:1: rule__Binding__Group_0__1__Impl : ( '<-' ) ;
    public final void rule__Binding__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7991:1: ( ( '<-' ) )
            // InternalFortXTrans.g:7992:1: ( '<-' )
            {
            // InternalFortXTrans.g:7992:1: ( '<-' )
            // InternalFortXTrans.g:7993:2: '<-'
            {
             before(grammarAccess.getBindingAccess().getLessThanSignHyphenMinusKeyword_0_1()); 
            match(input,49,FOLLOW_2); 
             after(grammarAccess.getBindingAccess().getLessThanSignHyphenMinusKeyword_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Binding__Group_0__1__Impl"


    // $ANTLR start "rule__Binding__Group_0__2"
    // InternalFortXTrans.g:8002:1: rule__Binding__Group_0__2 : rule__Binding__Group_0__2__Impl ;
    public final void rule__Binding__Group_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8006:1: ( rule__Binding__Group_0__2__Impl )
            // InternalFortXTrans.g:8007:2: rule__Binding__Group_0__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Binding__Group_0__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Binding__Group_0__2"


    // $ANTLR start "rule__Binding__Group_0__2__Impl"
    // InternalFortXTrans.g:8013:1: rule__Binding__Group_0__2__Impl : ( ( rule__Binding__GAssignment_0_2 ) ) ;
    public final void rule__Binding__Group_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8017:1: ( ( ( rule__Binding__GAssignment_0_2 ) ) )
            // InternalFortXTrans.g:8018:1: ( ( rule__Binding__GAssignment_0_2 ) )
            {
            // InternalFortXTrans.g:8018:1: ( ( rule__Binding__GAssignment_0_2 ) )
            // InternalFortXTrans.g:8019:2: ( rule__Binding__GAssignment_0_2 )
            {
             before(grammarAccess.getBindingAccess().getGAssignment_0_2()); 
            // InternalFortXTrans.g:8020:2: ( rule__Binding__GAssignment_0_2 )
            // InternalFortXTrans.g:8020:3: rule__Binding__GAssignment_0_2
            {
            pushFollow(FOLLOW_2);
            rule__Binding__GAssignment_0_2();

            state._fsp--;


            }

             after(grammarAccess.getBindingAccess().getGAssignment_0_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Binding__Group_0__2__Impl"


    // $ANTLR start "rule__Binding__Group_1__0"
    // InternalFortXTrans.g:8029:1: rule__Binding__Group_1__0 : rule__Binding__Group_1__0__Impl rule__Binding__Group_1__1 ;
    public final void rule__Binding__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8033:1: ( rule__Binding__Group_1__0__Impl rule__Binding__Group_1__1 )
            // InternalFortXTrans.g:8034:2: rule__Binding__Group_1__0__Impl rule__Binding__Group_1__1
            {
            pushFollow(FOLLOW_65);
            rule__Binding__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Binding__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Binding__Group_1__0"


    // $ANTLR start "rule__Binding__Group_1__0__Impl"
    // InternalFortXTrans.g:8041:1: rule__Binding__Group_1__0__Impl : ( ( rule__Binding__IdtupAssignment_1_0 ) ) ;
    public final void rule__Binding__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8045:1: ( ( ( rule__Binding__IdtupAssignment_1_0 ) ) )
            // InternalFortXTrans.g:8046:1: ( ( rule__Binding__IdtupAssignment_1_0 ) )
            {
            // InternalFortXTrans.g:8046:1: ( ( rule__Binding__IdtupAssignment_1_0 ) )
            // InternalFortXTrans.g:8047:2: ( rule__Binding__IdtupAssignment_1_0 )
            {
             before(grammarAccess.getBindingAccess().getIdtupAssignment_1_0()); 
            // InternalFortXTrans.g:8048:2: ( rule__Binding__IdtupAssignment_1_0 )
            // InternalFortXTrans.g:8048:3: rule__Binding__IdtupAssignment_1_0
            {
            pushFollow(FOLLOW_2);
            rule__Binding__IdtupAssignment_1_0();

            state._fsp--;


            }

             after(grammarAccess.getBindingAccess().getIdtupAssignment_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Binding__Group_1__0__Impl"


    // $ANTLR start "rule__Binding__Group_1__1"
    // InternalFortXTrans.g:8056:1: rule__Binding__Group_1__1 : rule__Binding__Group_1__1__Impl rule__Binding__Group_1__2 ;
    public final void rule__Binding__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8060:1: ( rule__Binding__Group_1__1__Impl rule__Binding__Group_1__2 )
            // InternalFortXTrans.g:8061:2: rule__Binding__Group_1__1__Impl rule__Binding__Group_1__2
            {
            pushFollow(FOLLOW_66);
            rule__Binding__Group_1__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Binding__Group_1__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Binding__Group_1__1"


    // $ANTLR start "rule__Binding__Group_1__1__Impl"
    // InternalFortXTrans.g:8068:1: rule__Binding__Group_1__1__Impl : ( '<-' ) ;
    public final void rule__Binding__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8072:1: ( ( '<-' ) )
            // InternalFortXTrans.g:8073:1: ( '<-' )
            {
            // InternalFortXTrans.g:8073:1: ( '<-' )
            // InternalFortXTrans.g:8074:2: '<-'
            {
             before(grammarAccess.getBindingAccess().getLessThanSignHyphenMinusKeyword_1_1()); 
            match(input,49,FOLLOW_2); 
             after(grammarAccess.getBindingAccess().getLessThanSignHyphenMinusKeyword_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Binding__Group_1__1__Impl"


    // $ANTLR start "rule__Binding__Group_1__2"
    // InternalFortXTrans.g:8083:1: rule__Binding__Group_1__2 : rule__Binding__Group_1__2__Impl rule__Binding__Group_1__3 ;
    public final void rule__Binding__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8087:1: ( rule__Binding__Group_1__2__Impl rule__Binding__Group_1__3 )
            // InternalFortXTrans.g:8088:2: rule__Binding__Group_1__2__Impl rule__Binding__Group_1__3
            {
            pushFollow(FOLLOW_27);
            rule__Binding__Group_1__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Binding__Group_1__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Binding__Group_1__2"


    // $ANTLR start "rule__Binding__Group_1__2__Impl"
    // InternalFortXTrans.g:8095:1: rule__Binding__Group_1__2__Impl : ( ( rule__Binding__SeqAssignment_1_2 ) ) ;
    public final void rule__Binding__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8099:1: ( ( ( rule__Binding__SeqAssignment_1_2 ) ) )
            // InternalFortXTrans.g:8100:1: ( ( rule__Binding__SeqAssignment_1_2 ) )
            {
            // InternalFortXTrans.g:8100:1: ( ( rule__Binding__SeqAssignment_1_2 ) )
            // InternalFortXTrans.g:8101:2: ( rule__Binding__SeqAssignment_1_2 )
            {
             before(grammarAccess.getBindingAccess().getSeqAssignment_1_2()); 
            // InternalFortXTrans.g:8102:2: ( rule__Binding__SeqAssignment_1_2 )
            // InternalFortXTrans.g:8102:3: rule__Binding__SeqAssignment_1_2
            {
            pushFollow(FOLLOW_2);
            rule__Binding__SeqAssignment_1_2();

            state._fsp--;


            }

             after(grammarAccess.getBindingAccess().getSeqAssignment_1_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Binding__Group_1__2__Impl"


    // $ANTLR start "rule__Binding__Group_1__3"
    // InternalFortXTrans.g:8110:1: rule__Binding__Group_1__3 : rule__Binding__Group_1__3__Impl rule__Binding__Group_1__4 ;
    public final void rule__Binding__Group_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8114:1: ( rule__Binding__Group_1__3__Impl rule__Binding__Group_1__4 )
            // InternalFortXTrans.g:8115:2: rule__Binding__Group_1__3__Impl rule__Binding__Group_1__4
            {
            pushFollow(FOLLOW_32);
            rule__Binding__Group_1__3__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Binding__Group_1__4();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Binding__Group_1__3"


    // $ANTLR start "rule__Binding__Group_1__3__Impl"
    // InternalFortXTrans.g:8122:1: rule__Binding__Group_1__3__Impl : ( '(' ) ;
    public final void rule__Binding__Group_1__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8126:1: ( ( '(' ) )
            // InternalFortXTrans.g:8127:1: ( '(' )
            {
            // InternalFortXTrans.g:8127:1: ( '(' )
            // InternalFortXTrans.g:8128:2: '('
            {
             before(grammarAccess.getBindingAccess().getLeftParenthesisKeyword_1_3()); 
            match(input,33,FOLLOW_2); 
             after(grammarAccess.getBindingAccess().getLeftParenthesisKeyword_1_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Binding__Group_1__3__Impl"


    // $ANTLR start "rule__Binding__Group_1__4"
    // InternalFortXTrans.g:8137:1: rule__Binding__Group_1__4 : rule__Binding__Group_1__4__Impl rule__Binding__Group_1__5 ;
    public final void rule__Binding__Group_1__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8141:1: ( rule__Binding__Group_1__4__Impl rule__Binding__Group_1__5 )
            // InternalFortXTrans.g:8142:2: rule__Binding__Group_1__4__Impl rule__Binding__Group_1__5
            {
            pushFollow(FOLLOW_28);
            rule__Binding__Group_1__4__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Binding__Group_1__5();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Binding__Group_1__4"


    // $ANTLR start "rule__Binding__Group_1__4__Impl"
    // InternalFortXTrans.g:8149:1: rule__Binding__Group_1__4__Impl : ( ( rule__Binding__GAssignment_1_4 ) ) ;
    public final void rule__Binding__Group_1__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8153:1: ( ( ( rule__Binding__GAssignment_1_4 ) ) )
            // InternalFortXTrans.g:8154:1: ( ( rule__Binding__GAssignment_1_4 ) )
            {
            // InternalFortXTrans.g:8154:1: ( ( rule__Binding__GAssignment_1_4 ) )
            // InternalFortXTrans.g:8155:2: ( rule__Binding__GAssignment_1_4 )
            {
             before(grammarAccess.getBindingAccess().getGAssignment_1_4()); 
            // InternalFortXTrans.g:8156:2: ( rule__Binding__GAssignment_1_4 )
            // InternalFortXTrans.g:8156:3: rule__Binding__GAssignment_1_4
            {
            pushFollow(FOLLOW_2);
            rule__Binding__GAssignment_1_4();

            state._fsp--;


            }

             after(grammarAccess.getBindingAccess().getGAssignment_1_4()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Binding__Group_1__4__Impl"


    // $ANTLR start "rule__Binding__Group_1__5"
    // InternalFortXTrans.g:8164:1: rule__Binding__Group_1__5 : rule__Binding__Group_1__5__Impl ;
    public final void rule__Binding__Group_1__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8168:1: ( rule__Binding__Group_1__5__Impl )
            // InternalFortXTrans.g:8169:2: rule__Binding__Group_1__5__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Binding__Group_1__5__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Binding__Group_1__5"


    // $ANTLR start "rule__Binding__Group_1__5__Impl"
    // InternalFortXTrans.g:8175:1: rule__Binding__Group_1__5__Impl : ( ')' ) ;
    public final void rule__Binding__Group_1__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8179:1: ( ( ')' ) )
            // InternalFortXTrans.g:8180:1: ( ')' )
            {
            // InternalFortXTrans.g:8180:1: ( ')' )
            // InternalFortXTrans.g:8181:2: ')'
            {
             before(grammarAccess.getBindingAccess().getRightParenthesisKeyword_1_5()); 
            match(input,34,FOLLOW_2); 
             after(grammarAccess.getBindingAccess().getRightParenthesisKeyword_1_5()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Binding__Group_1__5__Impl"


    // $ANTLR start "rule__GenSource__Group__0"
    // InternalFortXTrans.g:8191:1: rule__GenSource__Group__0 : rule__GenSource__Group__0__Impl rule__GenSource__Group__1 ;
    public final void rule__GenSource__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8195:1: ( rule__GenSource__Group__0__Impl rule__GenSource__Group__1 )
            // InternalFortXTrans.g:8196:2: rule__GenSource__Group__0__Impl rule__GenSource__Group__1
            {
            pushFollow(FOLLOW_67);
            rule__GenSource__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__GenSource__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GenSource__Group__0"


    // $ANTLR start "rule__GenSource__Group__0__Impl"
    // InternalFortXTrans.g:8203:1: rule__GenSource__Group__0__Impl : ( ruleExpr ) ;
    public final void rule__GenSource__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8207:1: ( ( ruleExpr ) )
            // InternalFortXTrans.g:8208:1: ( ruleExpr )
            {
            // InternalFortXTrans.g:8208:1: ( ruleExpr )
            // InternalFortXTrans.g:8209:2: ruleExpr
            {
             before(grammarAccess.getGenSourceAccess().getExprParserRuleCall_0()); 
            pushFollow(FOLLOW_2);
            ruleExpr();

            state._fsp--;

             after(grammarAccess.getGenSourceAccess().getExprParserRuleCall_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GenSource__Group__0__Impl"


    // $ANTLR start "rule__GenSource__Group__1"
    // InternalFortXTrans.g:8218:1: rule__GenSource__Group__1 : rule__GenSource__Group__1__Impl ;
    public final void rule__GenSource__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8222:1: ( rule__GenSource__Group__1__Impl )
            // InternalFortXTrans.g:8223:2: rule__GenSource__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__GenSource__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GenSource__Group__1"


    // $ANTLR start "rule__GenSource__Group__1__Impl"
    // InternalFortXTrans.g:8229:1: rule__GenSource__Group__1__Impl : ( ( rule__GenSource__Group_1__0 )? ) ;
    public final void rule__GenSource__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8233:1: ( ( ( rule__GenSource__Group_1__0 )? ) )
            // InternalFortXTrans.g:8234:1: ( ( rule__GenSource__Group_1__0 )? )
            {
            // InternalFortXTrans.g:8234:1: ( ( rule__GenSource__Group_1__0 )? )
            // InternalFortXTrans.g:8235:2: ( rule__GenSource__Group_1__0 )?
            {
             before(grammarAccess.getGenSourceAccess().getGroup_1()); 
            // InternalFortXTrans.g:8236:2: ( rule__GenSource__Group_1__0 )?
            int alt70=2;
            int LA70_0 = input.LA(1);

            if ( (LA70_0==50) ) {
                alt70=1;
            }
            switch (alt70) {
                case 1 :
                    // InternalFortXTrans.g:8236:3: rule__GenSource__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__GenSource__Group_1__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getGenSourceAccess().getGroup_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GenSource__Group__1__Impl"


    // $ANTLR start "rule__GenSource__Group_1__0"
    // InternalFortXTrans.g:8245:1: rule__GenSource__Group_1__0 : rule__GenSource__Group_1__0__Impl rule__GenSource__Group_1__1 ;
    public final void rule__GenSource__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8249:1: ( rule__GenSource__Group_1__0__Impl rule__GenSource__Group_1__1 )
            // InternalFortXTrans.g:8250:2: rule__GenSource__Group_1__0__Impl rule__GenSource__Group_1__1
            {
            pushFollow(FOLLOW_67);
            rule__GenSource__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__GenSource__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GenSource__Group_1__0"


    // $ANTLR start "rule__GenSource__Group_1__0__Impl"
    // InternalFortXTrans.g:8257:1: rule__GenSource__Group_1__0__Impl : ( () ) ;
    public final void rule__GenSource__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8261:1: ( ( () ) )
            // InternalFortXTrans.g:8262:1: ( () )
            {
            // InternalFortXTrans.g:8262:1: ( () )
            // InternalFortXTrans.g:8263:2: ()
            {
             before(grammarAccess.getGenSourceAccess().getGenSourceStartAction_1_0()); 
            // InternalFortXTrans.g:8264:2: ()
            // InternalFortXTrans.g:8264:3: 
            {
            }

             after(grammarAccess.getGenSourceAccess().getGenSourceStartAction_1_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GenSource__Group_1__0__Impl"


    // $ANTLR start "rule__GenSource__Group_1__1"
    // InternalFortXTrans.g:8272:1: rule__GenSource__Group_1__1 : rule__GenSource__Group_1__1__Impl rule__GenSource__Group_1__2 ;
    public final void rule__GenSource__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8276:1: ( rule__GenSource__Group_1__1__Impl rule__GenSource__Group_1__2 )
            // InternalFortXTrans.g:8277:2: rule__GenSource__Group_1__1__Impl rule__GenSource__Group_1__2
            {
            pushFollow(FOLLOW_32);
            rule__GenSource__Group_1__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__GenSource__Group_1__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GenSource__Group_1__1"


    // $ANTLR start "rule__GenSource__Group_1__1__Impl"
    // InternalFortXTrans.g:8284:1: rule__GenSource__Group_1__1__Impl : ( '#' ) ;
    public final void rule__GenSource__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8288:1: ( ( '#' ) )
            // InternalFortXTrans.g:8289:1: ( '#' )
            {
            // InternalFortXTrans.g:8289:1: ( '#' )
            // InternalFortXTrans.g:8290:2: '#'
            {
             before(grammarAccess.getGenSourceAccess().getNumberSignKeyword_1_1()); 
            match(input,50,FOLLOW_2); 
             after(grammarAccess.getGenSourceAccess().getNumberSignKeyword_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GenSource__Group_1__1__Impl"


    // $ANTLR start "rule__GenSource__Group_1__2"
    // InternalFortXTrans.g:8299:1: rule__GenSource__Group_1__2 : rule__GenSource__Group_1__2__Impl ;
    public final void rule__GenSource__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8303:1: ( rule__GenSource__Group_1__2__Impl )
            // InternalFortXTrans.g:8304:2: rule__GenSource__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__GenSource__Group_1__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GenSource__Group_1__2"


    // $ANTLR start "rule__GenSource__Group_1__2__Impl"
    // InternalFortXTrans.g:8310:1: rule__GenSource__Group_1__2__Impl : ( ( rule__GenSource__EndAssignment_1_2 ) ) ;
    public final void rule__GenSource__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8314:1: ( ( ( rule__GenSource__EndAssignment_1_2 ) ) )
            // InternalFortXTrans.g:8315:1: ( ( rule__GenSource__EndAssignment_1_2 ) )
            {
            // InternalFortXTrans.g:8315:1: ( ( rule__GenSource__EndAssignment_1_2 ) )
            // InternalFortXTrans.g:8316:2: ( rule__GenSource__EndAssignment_1_2 )
            {
             before(grammarAccess.getGenSourceAccess().getEndAssignment_1_2()); 
            // InternalFortXTrans.g:8317:2: ( rule__GenSource__EndAssignment_1_2 )
            // InternalFortXTrans.g:8317:3: rule__GenSource__EndAssignment_1_2
            {
            pushFollow(FOLLOW_2);
            rule__GenSource__EndAssignment_1_2();

            state._fsp--;


            }

             after(grammarAccess.getGenSourceAccess().getEndAssignment_1_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GenSource__Group_1__2__Impl"


    // $ANTLR start "rule__BlockElems__Group__0"
    // InternalFortXTrans.g:8326:1: rule__BlockElems__Group__0 : rule__BlockElems__Group__0__Impl rule__BlockElems__Group__1 ;
    public final void rule__BlockElems__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8330:1: ( rule__BlockElems__Group__0__Impl rule__BlockElems__Group__1 )
            // InternalFortXTrans.g:8331:2: rule__BlockElems__Group__0__Impl rule__BlockElems__Group__1
            {
            pushFollow(FOLLOW_32);
            rule__BlockElems__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__BlockElems__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BlockElems__Group__0"


    // $ANTLR start "rule__BlockElems__Group__0__Impl"
    // InternalFortXTrans.g:8338:1: rule__BlockElems__Group__0__Impl : ( ( rule__BlockElems__BlockAssignment_0 ) ) ;
    public final void rule__BlockElems__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8342:1: ( ( ( rule__BlockElems__BlockAssignment_0 ) ) )
            // InternalFortXTrans.g:8343:1: ( ( rule__BlockElems__BlockAssignment_0 ) )
            {
            // InternalFortXTrans.g:8343:1: ( ( rule__BlockElems__BlockAssignment_0 ) )
            // InternalFortXTrans.g:8344:2: ( rule__BlockElems__BlockAssignment_0 )
            {
             before(grammarAccess.getBlockElemsAccess().getBlockAssignment_0()); 
            // InternalFortXTrans.g:8345:2: ( rule__BlockElems__BlockAssignment_0 )
            // InternalFortXTrans.g:8345:3: rule__BlockElems__BlockAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__BlockElems__BlockAssignment_0();

            state._fsp--;


            }

             after(grammarAccess.getBlockElemsAccess().getBlockAssignment_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BlockElems__Group__0__Impl"


    // $ANTLR start "rule__BlockElems__Group__1"
    // InternalFortXTrans.g:8353:1: rule__BlockElems__Group__1 : rule__BlockElems__Group__1__Impl ;
    public final void rule__BlockElems__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8357:1: ( rule__BlockElems__Group__1__Impl )
            // InternalFortXTrans.g:8358:2: rule__BlockElems__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__BlockElems__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BlockElems__Group__1"


    // $ANTLR start "rule__BlockElems__Group__1__Impl"
    // InternalFortXTrans.g:8364:1: rule__BlockElems__Group__1__Impl : ( ( rule__BlockElems__BlockAssignment_1 )* ) ;
    public final void rule__BlockElems__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8368:1: ( ( ( rule__BlockElems__BlockAssignment_1 )* ) )
            // InternalFortXTrans.g:8369:1: ( ( rule__BlockElems__BlockAssignment_1 )* )
            {
            // InternalFortXTrans.g:8369:1: ( ( rule__BlockElems__BlockAssignment_1 )* )
            // InternalFortXTrans.g:8370:2: ( rule__BlockElems__BlockAssignment_1 )*
            {
             before(grammarAccess.getBlockElemsAccess().getBlockAssignment_1()); 
            // InternalFortXTrans.g:8371:2: ( rule__BlockElems__BlockAssignment_1 )*
            loop71:
            do {
                int alt71=2;
                int LA71_0 = input.LA(1);

                if ( ((LA71_0>=RULE_ID && LA71_0<=RULE_STRING)||LA71_0==33||LA71_0==36||LA71_0==45||LA71_0==52||LA71_0==59||(LA71_0>=62 && LA71_0<=65)||(LA71_0>=67 && LA71_0<=70)) ) {
                    alt71=1;
                }


                switch (alt71) {
            	case 1 :
            	    // InternalFortXTrans.g:8371:3: rule__BlockElems__BlockAssignment_1
            	    {
            	    pushFollow(FOLLOW_68);
            	    rule__BlockElems__BlockAssignment_1();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop71;
                }
            } while (true);

             after(grammarAccess.getBlockElemsAccess().getBlockAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BlockElems__Group__1__Impl"


    // $ANTLR start "rule__Do__Group__0"
    // InternalFortXTrans.g:8380:1: rule__Do__Group__0 : rule__Do__Group__0__Impl rule__Do__Group__1 ;
    public final void rule__Do__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8384:1: ( rule__Do__Group__0__Impl rule__Do__Group__1 )
            // InternalFortXTrans.g:8385:2: rule__Do__Group__0__Impl rule__Do__Group__1
            {
            pushFollow(FOLLOW_69);
            rule__Do__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Do__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Do__Group__0"


    // $ANTLR start "rule__Do__Group__0__Impl"
    // InternalFortXTrans.g:8392:1: rule__Do__Group__0__Impl : ( ( rule__Do__DofsAssignment_0 ) ) ;
    public final void rule__Do__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8396:1: ( ( ( rule__Do__DofsAssignment_0 ) ) )
            // InternalFortXTrans.g:8397:1: ( ( rule__Do__DofsAssignment_0 ) )
            {
            // InternalFortXTrans.g:8397:1: ( ( rule__Do__DofsAssignment_0 ) )
            // InternalFortXTrans.g:8398:2: ( rule__Do__DofsAssignment_0 )
            {
             before(grammarAccess.getDoAccess().getDofsAssignment_0()); 
            // InternalFortXTrans.g:8399:2: ( rule__Do__DofsAssignment_0 )
            // InternalFortXTrans.g:8399:3: rule__Do__DofsAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__Do__DofsAssignment_0();

            state._fsp--;


            }

             after(grammarAccess.getDoAccess().getDofsAssignment_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Do__Group__0__Impl"


    // $ANTLR start "rule__Do__Group__1"
    // InternalFortXTrans.g:8407:1: rule__Do__Group__1 : rule__Do__Group__1__Impl rule__Do__Group__2 ;
    public final void rule__Do__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8411:1: ( rule__Do__Group__1__Impl rule__Do__Group__2 )
            // InternalFortXTrans.g:8412:2: rule__Do__Group__1__Impl rule__Do__Group__2
            {
            pushFollow(FOLLOW_69);
            rule__Do__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Do__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Do__Group__1"


    // $ANTLR start "rule__Do__Group__1__Impl"
    // InternalFortXTrans.g:8419:1: rule__Do__Group__1__Impl : ( ( rule__Do__Group_1__0 )* ) ;
    public final void rule__Do__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8423:1: ( ( ( rule__Do__Group_1__0 )* ) )
            // InternalFortXTrans.g:8424:1: ( ( rule__Do__Group_1__0 )* )
            {
            // InternalFortXTrans.g:8424:1: ( ( rule__Do__Group_1__0 )* )
            // InternalFortXTrans.g:8425:2: ( rule__Do__Group_1__0 )*
            {
             before(grammarAccess.getDoAccess().getGroup_1()); 
            // InternalFortXTrans.g:8426:2: ( rule__Do__Group_1__0 )*
            loop72:
            do {
                int alt72=2;
                int LA72_0 = input.LA(1);

                if ( (LA72_0==51) ) {
                    alt72=1;
                }


                switch (alt72) {
            	case 1 :
            	    // InternalFortXTrans.g:8426:3: rule__Do__Group_1__0
            	    {
            	    pushFollow(FOLLOW_70);
            	    rule__Do__Group_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop72;
                }
            } while (true);

             after(grammarAccess.getDoAccess().getGroup_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Do__Group__1__Impl"


    // $ANTLR start "rule__Do__Group__2"
    // InternalFortXTrans.g:8434:1: rule__Do__Group__2 : rule__Do__Group__2__Impl ;
    public final void rule__Do__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8438:1: ( rule__Do__Group__2__Impl )
            // InternalFortXTrans.g:8439:2: rule__Do__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Do__Group__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Do__Group__2"


    // $ANTLR start "rule__Do__Group__2__Impl"
    // InternalFortXTrans.g:8445:1: rule__Do__Group__2__Impl : ( 'end' ) ;
    public final void rule__Do__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8449:1: ( ( 'end' ) )
            // InternalFortXTrans.g:8450:1: ( 'end' )
            {
            // InternalFortXTrans.g:8450:1: ( 'end' )
            // InternalFortXTrans.g:8451:2: 'end'
            {
             before(grammarAccess.getDoAccess().getEndKeyword_2()); 
            match(input,26,FOLLOW_2); 
             after(grammarAccess.getDoAccess().getEndKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Do__Group__2__Impl"


    // $ANTLR start "rule__Do__Group_1__0"
    // InternalFortXTrans.g:8461:1: rule__Do__Group_1__0 : rule__Do__Group_1__0__Impl rule__Do__Group_1__1 ;
    public final void rule__Do__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8465:1: ( rule__Do__Group_1__0__Impl rule__Do__Group_1__1 )
            // InternalFortXTrans.g:8466:2: rule__Do__Group_1__0__Impl rule__Do__Group_1__1
            {
            pushFollow(FOLLOW_58);
            rule__Do__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Do__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Do__Group_1__0"


    // $ANTLR start "rule__Do__Group_1__0__Impl"
    // InternalFortXTrans.g:8473:1: rule__Do__Group_1__0__Impl : ( 'also' ) ;
    public final void rule__Do__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8477:1: ( ( 'also' ) )
            // InternalFortXTrans.g:8478:1: ( 'also' )
            {
            // InternalFortXTrans.g:8478:1: ( 'also' )
            // InternalFortXTrans.g:8479:2: 'also'
            {
             before(grammarAccess.getDoAccess().getAlsoKeyword_1_0()); 
            match(input,51,FOLLOW_2); 
             after(grammarAccess.getDoAccess().getAlsoKeyword_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Do__Group_1__0__Impl"


    // $ANTLR start "rule__Do__Group_1__1"
    // InternalFortXTrans.g:8488:1: rule__Do__Group_1__1 : rule__Do__Group_1__1__Impl ;
    public final void rule__Do__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8492:1: ( rule__Do__Group_1__1__Impl )
            // InternalFortXTrans.g:8493:2: rule__Do__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Do__Group_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Do__Group_1__1"


    // $ANTLR start "rule__Do__Group_1__1__Impl"
    // InternalFortXTrans.g:8499:1: rule__Do__Group_1__1__Impl : ( ( rule__Do__DofsAssignment_1_1 ) ) ;
    public final void rule__Do__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8503:1: ( ( ( rule__Do__DofsAssignment_1_1 ) ) )
            // InternalFortXTrans.g:8504:1: ( ( rule__Do__DofsAssignment_1_1 ) )
            {
            // InternalFortXTrans.g:8504:1: ( ( rule__Do__DofsAssignment_1_1 ) )
            // InternalFortXTrans.g:8505:2: ( rule__Do__DofsAssignment_1_1 )
            {
             before(grammarAccess.getDoAccess().getDofsAssignment_1_1()); 
            // InternalFortXTrans.g:8506:2: ( rule__Do__DofsAssignment_1_1 )
            // InternalFortXTrans.g:8506:3: rule__Do__DofsAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Do__DofsAssignment_1_1();

            state._fsp--;


            }

             after(grammarAccess.getDoAccess().getDofsAssignment_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Do__Group_1__1__Impl"


    // $ANTLR start "rule__DoFront__Group__0"
    // InternalFortXTrans.g:8515:1: rule__DoFront__Group__0 : rule__DoFront__Group__0__Impl rule__DoFront__Group__1 ;
    public final void rule__DoFront__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8519:1: ( rule__DoFront__Group__0__Impl rule__DoFront__Group__1 )
            // InternalFortXTrans.g:8520:2: rule__DoFront__Group__0__Impl rule__DoFront__Group__1
            {
            pushFollow(FOLLOW_58);
            rule__DoFront__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DoFront__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DoFront__Group__0"


    // $ANTLR start "rule__DoFront__Group__0__Impl"
    // InternalFortXTrans.g:8527:1: rule__DoFront__Group__0__Impl : ( ( rule__DoFront__Group_0__0 )? ) ;
    public final void rule__DoFront__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8531:1: ( ( ( rule__DoFront__Group_0__0 )? ) )
            // InternalFortXTrans.g:8532:1: ( ( rule__DoFront__Group_0__0 )? )
            {
            // InternalFortXTrans.g:8532:1: ( ( rule__DoFront__Group_0__0 )? )
            // InternalFortXTrans.g:8533:2: ( rule__DoFront__Group_0__0 )?
            {
             before(grammarAccess.getDoFrontAccess().getGroup_0()); 
            // InternalFortXTrans.g:8534:2: ( rule__DoFront__Group_0__0 )?
            int alt73=2;
            int LA73_0 = input.LA(1);

            if ( (LA73_0==67) ) {
                alt73=1;
            }
            switch (alt73) {
                case 1 :
                    // InternalFortXTrans.g:8534:3: rule__DoFront__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__DoFront__Group_0__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getDoFrontAccess().getGroup_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DoFront__Group__0__Impl"


    // $ANTLR start "rule__DoFront__Group__1"
    // InternalFortXTrans.g:8542:1: rule__DoFront__Group__1 : rule__DoFront__Group__1__Impl rule__DoFront__Group__2 ;
    public final void rule__DoFront__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8546:1: ( rule__DoFront__Group__1__Impl rule__DoFront__Group__2 )
            // InternalFortXTrans.g:8547:2: rule__DoFront__Group__1__Impl rule__DoFront__Group__2
            {
            pushFollow(FOLLOW_58);
            rule__DoFront__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DoFront__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DoFront__Group__1"


    // $ANTLR start "rule__DoFront__Group__1__Impl"
    // InternalFortXTrans.g:8554:1: rule__DoFront__Group__1__Impl : ( ( rule__DoFront__AtomAssignment_1 )? ) ;
    public final void rule__DoFront__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8558:1: ( ( ( rule__DoFront__AtomAssignment_1 )? ) )
            // InternalFortXTrans.g:8559:1: ( ( rule__DoFront__AtomAssignment_1 )? )
            {
            // InternalFortXTrans.g:8559:1: ( ( rule__DoFront__AtomAssignment_1 )? )
            // InternalFortXTrans.g:8560:2: ( rule__DoFront__AtomAssignment_1 )?
            {
             before(grammarAccess.getDoFrontAccess().getAtomAssignment_1()); 
            // InternalFortXTrans.g:8561:2: ( rule__DoFront__AtomAssignment_1 )?
            int alt74=2;
            int LA74_0 = input.LA(1);

            if ( (LA74_0==59) ) {
                alt74=1;
            }
            switch (alt74) {
                case 1 :
                    // InternalFortXTrans.g:8561:3: rule__DoFront__AtomAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__DoFront__AtomAssignment_1();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getDoFrontAccess().getAtomAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DoFront__Group__1__Impl"


    // $ANTLR start "rule__DoFront__Group__2"
    // InternalFortXTrans.g:8569:1: rule__DoFront__Group__2 : rule__DoFront__Group__2__Impl rule__DoFront__Group__3 ;
    public final void rule__DoFront__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8573:1: ( rule__DoFront__Group__2__Impl rule__DoFront__Group__3 )
            // InternalFortXTrans.g:8574:2: rule__DoFront__Group__2__Impl rule__DoFront__Group__3
            {
            pushFollow(FOLLOW_32);
            rule__DoFront__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DoFront__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DoFront__Group__2"


    // $ANTLR start "rule__DoFront__Group__2__Impl"
    // InternalFortXTrans.g:8581:1: rule__DoFront__Group__2__Impl : ( 'do' ) ;
    public final void rule__DoFront__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8585:1: ( ( 'do' ) )
            // InternalFortXTrans.g:8586:1: ( 'do' )
            {
            // InternalFortXTrans.g:8586:1: ( 'do' )
            // InternalFortXTrans.g:8587:2: 'do'
            {
             before(grammarAccess.getDoFrontAccess().getDoKeyword_2()); 
            match(input,52,FOLLOW_2); 
             after(grammarAccess.getDoFrontAccess().getDoKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DoFront__Group__2__Impl"


    // $ANTLR start "rule__DoFront__Group__3"
    // InternalFortXTrans.g:8596:1: rule__DoFront__Group__3 : rule__DoFront__Group__3__Impl ;
    public final void rule__DoFront__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8600:1: ( rule__DoFront__Group__3__Impl )
            // InternalFortXTrans.g:8601:2: rule__DoFront__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__DoFront__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DoFront__Group__3"


    // $ANTLR start "rule__DoFront__Group__3__Impl"
    // InternalFortXTrans.g:8607:1: rule__DoFront__Group__3__Impl : ( ( rule__DoFront__BlockAssignment_3 ) ) ;
    public final void rule__DoFront__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8611:1: ( ( ( rule__DoFront__BlockAssignment_3 ) ) )
            // InternalFortXTrans.g:8612:1: ( ( rule__DoFront__BlockAssignment_3 ) )
            {
            // InternalFortXTrans.g:8612:1: ( ( rule__DoFront__BlockAssignment_3 ) )
            // InternalFortXTrans.g:8613:2: ( rule__DoFront__BlockAssignment_3 )
            {
             before(grammarAccess.getDoFrontAccess().getBlockAssignment_3()); 
            // InternalFortXTrans.g:8614:2: ( rule__DoFront__BlockAssignment_3 )
            // InternalFortXTrans.g:8614:3: rule__DoFront__BlockAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__DoFront__BlockAssignment_3();

            state._fsp--;


            }

             after(grammarAccess.getDoFrontAccess().getBlockAssignment_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DoFront__Group__3__Impl"


    // $ANTLR start "rule__DoFront__Group_0__0"
    // InternalFortXTrans.g:8623:1: rule__DoFront__Group_0__0 : rule__DoFront__Group_0__0__Impl rule__DoFront__Group_0__1 ;
    public final void rule__DoFront__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8627:1: ( rule__DoFront__Group_0__0__Impl rule__DoFront__Group_0__1 )
            // InternalFortXTrans.g:8628:2: rule__DoFront__Group_0__0__Impl rule__DoFront__Group_0__1
            {
            pushFollow(FOLLOW_32);
            rule__DoFront__Group_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DoFront__Group_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DoFront__Group_0__0"


    // $ANTLR start "rule__DoFront__Group_0__0__Impl"
    // InternalFortXTrans.g:8635:1: rule__DoFront__Group_0__0__Impl : ( ( rule__DoFront__AtAssignment_0_0 ) ) ;
    public final void rule__DoFront__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8639:1: ( ( ( rule__DoFront__AtAssignment_0_0 ) ) )
            // InternalFortXTrans.g:8640:1: ( ( rule__DoFront__AtAssignment_0_0 ) )
            {
            // InternalFortXTrans.g:8640:1: ( ( rule__DoFront__AtAssignment_0_0 ) )
            // InternalFortXTrans.g:8641:2: ( rule__DoFront__AtAssignment_0_0 )
            {
             before(grammarAccess.getDoFrontAccess().getAtAssignment_0_0()); 
            // InternalFortXTrans.g:8642:2: ( rule__DoFront__AtAssignment_0_0 )
            // InternalFortXTrans.g:8642:3: rule__DoFront__AtAssignment_0_0
            {
            pushFollow(FOLLOW_2);
            rule__DoFront__AtAssignment_0_0();

            state._fsp--;


            }

             after(grammarAccess.getDoFrontAccess().getAtAssignment_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DoFront__Group_0__0__Impl"


    // $ANTLR start "rule__DoFront__Group_0__1"
    // InternalFortXTrans.g:8650:1: rule__DoFront__Group_0__1 : rule__DoFront__Group_0__1__Impl ;
    public final void rule__DoFront__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8654:1: ( rule__DoFront__Group_0__1__Impl )
            // InternalFortXTrans.g:8655:2: rule__DoFront__Group_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__DoFront__Group_0__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DoFront__Group_0__1"


    // $ANTLR start "rule__DoFront__Group_0__1__Impl"
    // InternalFortXTrans.g:8661:1: rule__DoFront__Group_0__1__Impl : ( ( rule__DoFront__ExpAssignment_0_1 ) ) ;
    public final void rule__DoFront__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8665:1: ( ( ( rule__DoFront__ExpAssignment_0_1 ) ) )
            // InternalFortXTrans.g:8666:1: ( ( rule__DoFront__ExpAssignment_0_1 ) )
            {
            // InternalFortXTrans.g:8666:1: ( ( rule__DoFront__ExpAssignment_0_1 ) )
            // InternalFortXTrans.g:8667:2: ( rule__DoFront__ExpAssignment_0_1 )
            {
             before(grammarAccess.getDoFrontAccess().getExpAssignment_0_1()); 
            // InternalFortXTrans.g:8668:2: ( rule__DoFront__ExpAssignment_0_1 )
            // InternalFortXTrans.g:8668:3: rule__DoFront__ExpAssignment_0_1
            {
            pushFollow(FOLLOW_2);
            rule__DoFront__ExpAssignment_0_1();

            state._fsp--;


            }

             after(grammarAccess.getDoFrontAccess().getExpAssignment_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DoFront__Group_0__1__Impl"


    // $ANTLR start "rule__IsType__Group__0"
    // InternalFortXTrans.g:8677:1: rule__IsType__Group__0 : rule__IsType__Group__0__Impl rule__IsType__Group__1 ;
    public final void rule__IsType__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8681:1: ( rule__IsType__Group__0__Impl rule__IsType__Group__1 )
            // InternalFortXTrans.g:8682:2: rule__IsType__Group__0__Impl rule__IsType__Group__1
            {
            pushFollow(FOLLOW_5);
            rule__IsType__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__IsType__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IsType__Group__0"


    // $ANTLR start "rule__IsType__Group__0__Impl"
    // InternalFortXTrans.g:8689:1: rule__IsType__Group__0__Impl : ( ':' ) ;
    public final void rule__IsType__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8693:1: ( ( ':' ) )
            // InternalFortXTrans.g:8694:1: ( ':' )
            {
            // InternalFortXTrans.g:8694:1: ( ':' )
            // InternalFortXTrans.g:8695:2: ':'
            {
             before(grammarAccess.getIsTypeAccess().getColonKeyword_0()); 
            match(input,35,FOLLOW_2); 
             after(grammarAccess.getIsTypeAccess().getColonKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IsType__Group__0__Impl"


    // $ANTLR start "rule__IsType__Group__1"
    // InternalFortXTrans.g:8704:1: rule__IsType__Group__1 : rule__IsType__Group__1__Impl ;
    public final void rule__IsType__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8708:1: ( rule__IsType__Group__1__Impl )
            // InternalFortXTrans.g:8709:2: rule__IsType__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__IsType__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IsType__Group__1"


    // $ANTLR start "rule__IsType__Group__1__Impl"
    // InternalFortXTrans.g:8715:1: rule__IsType__Group__1__Impl : ( ( rule__IsType__TypeAssignment_1 ) ) ;
    public final void rule__IsType__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8719:1: ( ( ( rule__IsType__TypeAssignment_1 ) ) )
            // InternalFortXTrans.g:8720:1: ( ( rule__IsType__TypeAssignment_1 ) )
            {
            // InternalFortXTrans.g:8720:1: ( ( rule__IsType__TypeAssignment_1 ) )
            // InternalFortXTrans.g:8721:2: ( rule__IsType__TypeAssignment_1 )
            {
             before(grammarAccess.getIsTypeAccess().getTypeAssignment_1()); 
            // InternalFortXTrans.g:8722:2: ( rule__IsType__TypeAssignment_1 )
            // InternalFortXTrans.g:8722:3: rule__IsType__TypeAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__IsType__TypeAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getIsTypeAccess().getTypeAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IsType__Group__1__Impl"


    // $ANTLR start "rule__FieldDecl__Group_0__0"
    // InternalFortXTrans.g:8731:1: rule__FieldDecl__Group_0__0 : rule__FieldDecl__Group_0__0__Impl rule__FieldDecl__Group_0__1 ;
    public final void rule__FieldDecl__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8735:1: ( rule__FieldDecl__Group_0__0__Impl rule__FieldDecl__Group_0__1 )
            // InternalFortXTrans.g:8736:2: rule__FieldDecl__Group_0__0__Impl rule__FieldDecl__Group_0__1
            {
            pushFollow(FOLLOW_71);
            rule__FieldDecl__Group_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__FieldDecl__Group_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_0__0"


    // $ANTLR start "rule__FieldDecl__Group_0__0__Impl"
    // InternalFortXTrans.g:8743:1: rule__FieldDecl__Group_0__0__Impl : ( ( rule__FieldDecl__PriAssignment_0_0 )? ) ;
    public final void rule__FieldDecl__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8747:1: ( ( ( rule__FieldDecl__PriAssignment_0_0 )? ) )
            // InternalFortXTrans.g:8748:1: ( ( rule__FieldDecl__PriAssignment_0_0 )? )
            {
            // InternalFortXTrans.g:8748:1: ( ( rule__FieldDecl__PriAssignment_0_0 )? )
            // InternalFortXTrans.g:8749:2: ( rule__FieldDecl__PriAssignment_0_0 )?
            {
             before(grammarAccess.getFieldDeclAccess().getPriAssignment_0_0()); 
            // InternalFortXTrans.g:8750:2: ( rule__FieldDecl__PriAssignment_0_0 )?
            int alt75=2;
            int LA75_0 = input.LA(1);

            if ( (LA75_0==57) ) {
                alt75=1;
            }
            switch (alt75) {
                case 1 :
                    // InternalFortXTrans.g:8750:3: rule__FieldDecl__PriAssignment_0_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__FieldDecl__PriAssignment_0_0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getFieldDeclAccess().getPriAssignment_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_0__0__Impl"


    // $ANTLR start "rule__FieldDecl__Group_0__1"
    // InternalFortXTrans.g:8758:1: rule__FieldDecl__Group_0__1 : rule__FieldDecl__Group_0__1__Impl rule__FieldDecl__Group_0__2 ;
    public final void rule__FieldDecl__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8762:1: ( rule__FieldDecl__Group_0__1__Impl rule__FieldDecl__Group_0__2 )
            // InternalFortXTrans.g:8763:2: rule__FieldDecl__Group_0__1__Impl rule__FieldDecl__Group_0__2
            {
            pushFollow(FOLLOW_71);
            rule__FieldDecl__Group_0__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__FieldDecl__Group_0__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_0__1"


    // $ANTLR start "rule__FieldDecl__Group_0__1__Impl"
    // InternalFortXTrans.g:8770:1: rule__FieldDecl__Group_0__1__Impl : ( ( rule__FieldDecl__MutAssignment_0_1 )? ) ;
    public final void rule__FieldDecl__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8774:1: ( ( ( rule__FieldDecl__MutAssignment_0_1 )? ) )
            // InternalFortXTrans.g:8775:1: ( ( rule__FieldDecl__MutAssignment_0_1 )? )
            {
            // InternalFortXTrans.g:8775:1: ( ( rule__FieldDecl__MutAssignment_0_1 )? )
            // InternalFortXTrans.g:8776:2: ( rule__FieldDecl__MutAssignment_0_1 )?
            {
             before(grammarAccess.getFieldDeclAccess().getMutAssignment_0_1()); 
            // InternalFortXTrans.g:8777:2: ( rule__FieldDecl__MutAssignment_0_1 )?
            int alt76=2;
            int LA76_0 = input.LA(1);

            if ( (LA76_0==68) ) {
                alt76=1;
            }
            switch (alt76) {
                case 1 :
                    // InternalFortXTrans.g:8777:3: rule__FieldDecl__MutAssignment_0_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__FieldDecl__MutAssignment_0_1();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getFieldDeclAccess().getMutAssignment_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_0__1__Impl"


    // $ANTLR start "rule__FieldDecl__Group_0__2"
    // InternalFortXTrans.g:8785:1: rule__FieldDecl__Group_0__2 : rule__FieldDecl__Group_0__2__Impl rule__FieldDecl__Group_0__3 ;
    public final void rule__FieldDecl__Group_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8789:1: ( rule__FieldDecl__Group_0__2__Impl rule__FieldDecl__Group_0__3 )
            // InternalFortXTrans.g:8790:2: rule__FieldDecl__Group_0__2__Impl rule__FieldDecl__Group_0__3
            {
            pushFollow(FOLLOW_72);
            rule__FieldDecl__Group_0__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__FieldDecl__Group_0__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_0__2"


    // $ANTLR start "rule__FieldDecl__Group_0__2__Impl"
    // InternalFortXTrans.g:8797:1: rule__FieldDecl__Group_0__2__Impl : ( ( rule__FieldDecl__VarsAssignment_0_2 ) ) ;
    public final void rule__FieldDecl__Group_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8801:1: ( ( ( rule__FieldDecl__VarsAssignment_0_2 ) ) )
            // InternalFortXTrans.g:8802:1: ( ( rule__FieldDecl__VarsAssignment_0_2 ) )
            {
            // InternalFortXTrans.g:8802:1: ( ( rule__FieldDecl__VarsAssignment_0_2 ) )
            // InternalFortXTrans.g:8803:2: ( rule__FieldDecl__VarsAssignment_0_2 )
            {
             before(grammarAccess.getFieldDeclAccess().getVarsAssignment_0_2()); 
            // InternalFortXTrans.g:8804:2: ( rule__FieldDecl__VarsAssignment_0_2 )
            // InternalFortXTrans.g:8804:3: rule__FieldDecl__VarsAssignment_0_2
            {
            pushFollow(FOLLOW_2);
            rule__FieldDecl__VarsAssignment_0_2();

            state._fsp--;


            }

             after(grammarAccess.getFieldDeclAccess().getVarsAssignment_0_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_0__2__Impl"


    // $ANTLR start "rule__FieldDecl__Group_0__3"
    // InternalFortXTrans.g:8812:1: rule__FieldDecl__Group_0__3 : rule__FieldDecl__Group_0__3__Impl ;
    public final void rule__FieldDecl__Group_0__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8816:1: ( rule__FieldDecl__Group_0__3__Impl )
            // InternalFortXTrans.g:8817:2: rule__FieldDecl__Group_0__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FieldDecl__Group_0__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_0__3"


    // $ANTLR start "rule__FieldDecl__Group_0__3__Impl"
    // InternalFortXTrans.g:8823:1: rule__FieldDecl__Group_0__3__Impl : ( ( rule__FieldDecl__Group_0_3__0 )? ) ;
    public final void rule__FieldDecl__Group_0__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8827:1: ( ( ( rule__FieldDecl__Group_0_3__0 )? ) )
            // InternalFortXTrans.g:8828:1: ( ( rule__FieldDecl__Group_0_3__0 )? )
            {
            // InternalFortXTrans.g:8828:1: ( ( rule__FieldDecl__Group_0_3__0 )? )
            // InternalFortXTrans.g:8829:2: ( rule__FieldDecl__Group_0_3__0 )?
            {
             before(grammarAccess.getFieldDeclAccess().getGroup_0_3()); 
            // InternalFortXTrans.g:8830:2: ( rule__FieldDecl__Group_0_3__0 )?
            int alt77=2;
            int LA77_0 = input.LA(1);

            if ( (LA77_0==53) ) {
                alt77=1;
            }
            switch (alt77) {
                case 1 :
                    // InternalFortXTrans.g:8830:3: rule__FieldDecl__Group_0_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__FieldDecl__Group_0_3__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getFieldDeclAccess().getGroup_0_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_0__3__Impl"


    // $ANTLR start "rule__FieldDecl__Group_0_3__0"
    // InternalFortXTrans.g:8839:1: rule__FieldDecl__Group_0_3__0 : rule__FieldDecl__Group_0_3__0__Impl rule__FieldDecl__Group_0_3__1 ;
    public final void rule__FieldDecl__Group_0_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8843:1: ( rule__FieldDecl__Group_0_3__0__Impl rule__FieldDecl__Group_0_3__1 )
            // InternalFortXTrans.g:8844:2: rule__FieldDecl__Group_0_3__0__Impl rule__FieldDecl__Group_0_3__1
            {
            pushFollow(FOLLOW_32);
            rule__FieldDecl__Group_0_3__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__FieldDecl__Group_0_3__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_0_3__0"


    // $ANTLR start "rule__FieldDecl__Group_0_3__0__Impl"
    // InternalFortXTrans.g:8851:1: rule__FieldDecl__Group_0_3__0__Impl : ( '=' ) ;
    public final void rule__FieldDecl__Group_0_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8855:1: ( ( '=' ) )
            // InternalFortXTrans.g:8856:1: ( '=' )
            {
            // InternalFortXTrans.g:8856:1: ( '=' )
            // InternalFortXTrans.g:8857:2: '='
            {
             before(grammarAccess.getFieldDeclAccess().getEqualsSignKeyword_0_3_0()); 
            match(input,53,FOLLOW_2); 
             after(grammarAccess.getFieldDeclAccess().getEqualsSignKeyword_0_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_0_3__0__Impl"


    // $ANTLR start "rule__FieldDecl__Group_0_3__1"
    // InternalFortXTrans.g:8866:1: rule__FieldDecl__Group_0_3__1 : rule__FieldDecl__Group_0_3__1__Impl ;
    public final void rule__FieldDecl__Group_0_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8870:1: ( rule__FieldDecl__Group_0_3__1__Impl )
            // InternalFortXTrans.g:8871:2: rule__FieldDecl__Group_0_3__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FieldDecl__Group_0_3__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_0_3__1"


    // $ANTLR start "rule__FieldDecl__Group_0_3__1__Impl"
    // InternalFortXTrans.g:8877:1: rule__FieldDecl__Group_0_3__1__Impl : ( ( rule__FieldDecl__InitAssignment_0_3_1 ) ) ;
    public final void rule__FieldDecl__Group_0_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8881:1: ( ( ( rule__FieldDecl__InitAssignment_0_3_1 ) ) )
            // InternalFortXTrans.g:8882:1: ( ( rule__FieldDecl__InitAssignment_0_3_1 ) )
            {
            // InternalFortXTrans.g:8882:1: ( ( rule__FieldDecl__InitAssignment_0_3_1 ) )
            // InternalFortXTrans.g:8883:2: ( rule__FieldDecl__InitAssignment_0_3_1 )
            {
             before(grammarAccess.getFieldDeclAccess().getInitAssignment_0_3_1()); 
            // InternalFortXTrans.g:8884:2: ( rule__FieldDecl__InitAssignment_0_3_1 )
            // InternalFortXTrans.g:8884:3: rule__FieldDecl__InitAssignment_0_3_1
            {
            pushFollow(FOLLOW_2);
            rule__FieldDecl__InitAssignment_0_3_1();

            state._fsp--;


            }

             after(grammarAccess.getFieldDeclAccess().getInitAssignment_0_3_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_0_3__1__Impl"


    // $ANTLR start "rule__FieldDecl__Group_1__0"
    // InternalFortXTrans.g:8893:1: rule__FieldDecl__Group_1__0 : rule__FieldDecl__Group_1__0__Impl rule__FieldDecl__Group_1__1 ;
    public final void rule__FieldDecl__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8897:1: ( rule__FieldDecl__Group_1__0__Impl rule__FieldDecl__Group_1__1 )
            // InternalFortXTrans.g:8898:2: rule__FieldDecl__Group_1__0__Impl rule__FieldDecl__Group_1__1
            {
            pushFollow(FOLLOW_59);
            rule__FieldDecl__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__FieldDecl__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_1__0"


    // $ANTLR start "rule__FieldDecl__Group_1__0__Impl"
    // InternalFortXTrans.g:8905:1: rule__FieldDecl__Group_1__0__Impl : ( ( rule__FieldDecl__PriAssignment_1_0 )? ) ;
    public final void rule__FieldDecl__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8909:1: ( ( ( rule__FieldDecl__PriAssignment_1_0 )? ) )
            // InternalFortXTrans.g:8910:1: ( ( rule__FieldDecl__PriAssignment_1_0 )? )
            {
            // InternalFortXTrans.g:8910:1: ( ( rule__FieldDecl__PriAssignment_1_0 )? )
            // InternalFortXTrans.g:8911:2: ( rule__FieldDecl__PriAssignment_1_0 )?
            {
             before(grammarAccess.getFieldDeclAccess().getPriAssignment_1_0()); 
            // InternalFortXTrans.g:8912:2: ( rule__FieldDecl__PriAssignment_1_0 )?
            int alt78=2;
            int LA78_0 = input.LA(1);

            if ( (LA78_0==57) ) {
                alt78=1;
            }
            switch (alt78) {
                case 1 :
                    // InternalFortXTrans.g:8912:3: rule__FieldDecl__PriAssignment_1_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__FieldDecl__PriAssignment_1_0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getFieldDeclAccess().getPriAssignment_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_1__0__Impl"


    // $ANTLR start "rule__FieldDecl__Group_1__1"
    // InternalFortXTrans.g:8920:1: rule__FieldDecl__Group_1__1 : rule__FieldDecl__Group_1__1__Impl rule__FieldDecl__Group_1__2 ;
    public final void rule__FieldDecl__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8924:1: ( rule__FieldDecl__Group_1__1__Impl rule__FieldDecl__Group_1__2 )
            // InternalFortXTrans.g:8925:2: rule__FieldDecl__Group_1__1__Impl rule__FieldDecl__Group_1__2
            {
            pushFollow(FOLLOW_72);
            rule__FieldDecl__Group_1__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__FieldDecl__Group_1__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_1__1"


    // $ANTLR start "rule__FieldDecl__Group_1__1__Impl"
    // InternalFortXTrans.g:8932:1: rule__FieldDecl__Group_1__1__Impl : ( ( rule__FieldDecl__IdtupAssignment_1_1 ) ) ;
    public final void rule__FieldDecl__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8936:1: ( ( ( rule__FieldDecl__IdtupAssignment_1_1 ) ) )
            // InternalFortXTrans.g:8937:1: ( ( rule__FieldDecl__IdtupAssignment_1_1 ) )
            {
            // InternalFortXTrans.g:8937:1: ( ( rule__FieldDecl__IdtupAssignment_1_1 ) )
            // InternalFortXTrans.g:8938:2: ( rule__FieldDecl__IdtupAssignment_1_1 )
            {
             before(grammarAccess.getFieldDeclAccess().getIdtupAssignment_1_1()); 
            // InternalFortXTrans.g:8939:2: ( rule__FieldDecl__IdtupAssignment_1_1 )
            // InternalFortXTrans.g:8939:3: rule__FieldDecl__IdtupAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__FieldDecl__IdtupAssignment_1_1();

            state._fsp--;


            }

             after(grammarAccess.getFieldDeclAccess().getIdtupAssignment_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_1__1__Impl"


    // $ANTLR start "rule__FieldDecl__Group_1__2"
    // InternalFortXTrans.g:8947:1: rule__FieldDecl__Group_1__2 : rule__FieldDecl__Group_1__2__Impl rule__FieldDecl__Group_1__3 ;
    public final void rule__FieldDecl__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8951:1: ( rule__FieldDecl__Group_1__2__Impl rule__FieldDecl__Group_1__3 )
            // InternalFortXTrans.g:8952:2: rule__FieldDecl__Group_1__2__Impl rule__FieldDecl__Group_1__3
            {
            pushFollow(FOLLOW_32);
            rule__FieldDecl__Group_1__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__FieldDecl__Group_1__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_1__2"


    // $ANTLR start "rule__FieldDecl__Group_1__2__Impl"
    // InternalFortXTrans.g:8959:1: rule__FieldDecl__Group_1__2__Impl : ( '=' ) ;
    public final void rule__FieldDecl__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8963:1: ( ( '=' ) )
            // InternalFortXTrans.g:8964:1: ( '=' )
            {
            // InternalFortXTrans.g:8964:1: ( '=' )
            // InternalFortXTrans.g:8965:2: '='
            {
             before(grammarAccess.getFieldDeclAccess().getEqualsSignKeyword_1_2()); 
            match(input,53,FOLLOW_2); 
             after(grammarAccess.getFieldDeclAccess().getEqualsSignKeyword_1_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_1__2__Impl"


    // $ANTLR start "rule__FieldDecl__Group_1__3"
    // InternalFortXTrans.g:8974:1: rule__FieldDecl__Group_1__3 : rule__FieldDecl__Group_1__3__Impl ;
    public final void rule__FieldDecl__Group_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8978:1: ( rule__FieldDecl__Group_1__3__Impl )
            // InternalFortXTrans.g:8979:2: rule__FieldDecl__Group_1__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FieldDecl__Group_1__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_1__3"


    // $ANTLR start "rule__FieldDecl__Group_1__3__Impl"
    // InternalFortXTrans.g:8985:1: rule__FieldDecl__Group_1__3__Impl : ( ( rule__FieldDecl__InitAssignment_1_3 )? ) ;
    public final void rule__FieldDecl__Group_1__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8989:1: ( ( ( rule__FieldDecl__InitAssignment_1_3 )? ) )
            // InternalFortXTrans.g:8990:1: ( ( rule__FieldDecl__InitAssignment_1_3 )? )
            {
            // InternalFortXTrans.g:8990:1: ( ( rule__FieldDecl__InitAssignment_1_3 )? )
            // InternalFortXTrans.g:8991:2: ( rule__FieldDecl__InitAssignment_1_3 )?
            {
             before(grammarAccess.getFieldDeclAccess().getInitAssignment_1_3()); 
            // InternalFortXTrans.g:8992:2: ( rule__FieldDecl__InitAssignment_1_3 )?
            int alt79=2;
            alt79 = dfa79.predict(input);
            switch (alt79) {
                case 1 :
                    // InternalFortXTrans.g:8992:3: rule__FieldDecl__InitAssignment_1_3
                    {
                    pushFollow(FOLLOW_2);
                    rule__FieldDecl__InitAssignment_1_3();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getFieldDeclAccess().getInitAssignment_1_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_1__3__Impl"


    // $ANTLR start "rule__FieldDecl__Group_2__0"
    // InternalFortXTrans.g:9001:1: rule__FieldDecl__Group_2__0 : rule__FieldDecl__Group_2__0__Impl rule__FieldDecl__Group_2__1 ;
    public final void rule__FieldDecl__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9005:1: ( rule__FieldDecl__Group_2__0__Impl rule__FieldDecl__Group_2__1 )
            // InternalFortXTrans.g:9006:2: rule__FieldDecl__Group_2__0__Impl rule__FieldDecl__Group_2__1
            {
            pushFollow(FOLLOW_71);
            rule__FieldDecl__Group_2__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__FieldDecl__Group_2__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_2__0"


    // $ANTLR start "rule__FieldDecl__Group_2__0__Impl"
    // InternalFortXTrans.g:9013:1: rule__FieldDecl__Group_2__0__Impl : ( ( rule__FieldDecl__PriAssignment_2_0 )? ) ;
    public final void rule__FieldDecl__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9017:1: ( ( ( rule__FieldDecl__PriAssignment_2_0 )? ) )
            // InternalFortXTrans.g:9018:1: ( ( rule__FieldDecl__PriAssignment_2_0 )? )
            {
            // InternalFortXTrans.g:9018:1: ( ( rule__FieldDecl__PriAssignment_2_0 )? )
            // InternalFortXTrans.g:9019:2: ( rule__FieldDecl__PriAssignment_2_0 )?
            {
             before(grammarAccess.getFieldDeclAccess().getPriAssignment_2_0()); 
            // InternalFortXTrans.g:9020:2: ( rule__FieldDecl__PriAssignment_2_0 )?
            int alt80=2;
            int LA80_0 = input.LA(1);

            if ( (LA80_0==57) ) {
                alt80=1;
            }
            switch (alt80) {
                case 1 :
                    // InternalFortXTrans.g:9020:3: rule__FieldDecl__PriAssignment_2_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__FieldDecl__PriAssignment_2_0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getFieldDeclAccess().getPriAssignment_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_2__0__Impl"


    // $ANTLR start "rule__FieldDecl__Group_2__1"
    // InternalFortXTrans.g:9028:1: rule__FieldDecl__Group_2__1 : rule__FieldDecl__Group_2__1__Impl rule__FieldDecl__Group_2__2 ;
    public final void rule__FieldDecl__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9032:1: ( rule__FieldDecl__Group_2__1__Impl rule__FieldDecl__Group_2__2 )
            // InternalFortXTrans.g:9033:2: rule__FieldDecl__Group_2__1__Impl rule__FieldDecl__Group_2__2
            {
            pushFollow(FOLLOW_71);
            rule__FieldDecl__Group_2__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__FieldDecl__Group_2__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_2__1"


    // $ANTLR start "rule__FieldDecl__Group_2__1__Impl"
    // InternalFortXTrans.g:9040:1: rule__FieldDecl__Group_2__1__Impl : ( ( rule__FieldDecl__MutAssignment_2_1 )? ) ;
    public final void rule__FieldDecl__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9044:1: ( ( ( rule__FieldDecl__MutAssignment_2_1 )? ) )
            // InternalFortXTrans.g:9045:1: ( ( rule__FieldDecl__MutAssignment_2_1 )? )
            {
            // InternalFortXTrans.g:9045:1: ( ( rule__FieldDecl__MutAssignment_2_1 )? )
            // InternalFortXTrans.g:9046:2: ( rule__FieldDecl__MutAssignment_2_1 )?
            {
             before(grammarAccess.getFieldDeclAccess().getMutAssignment_2_1()); 
            // InternalFortXTrans.g:9047:2: ( rule__FieldDecl__MutAssignment_2_1 )?
            int alt81=2;
            int LA81_0 = input.LA(1);

            if ( (LA81_0==68) ) {
                alt81=1;
            }
            switch (alt81) {
                case 1 :
                    // InternalFortXTrans.g:9047:3: rule__FieldDecl__MutAssignment_2_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__FieldDecl__MutAssignment_2_1();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getFieldDeclAccess().getMutAssignment_2_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_2__1__Impl"


    // $ANTLR start "rule__FieldDecl__Group_2__2"
    // InternalFortXTrans.g:9055:1: rule__FieldDecl__Group_2__2 : rule__FieldDecl__Group_2__2__Impl rule__FieldDecl__Group_2__3 ;
    public final void rule__FieldDecl__Group_2__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9059:1: ( rule__FieldDecl__Group_2__2__Impl rule__FieldDecl__Group_2__3 )
            // InternalFortXTrans.g:9060:2: rule__FieldDecl__Group_2__2__Impl rule__FieldDecl__Group_2__3
            {
            pushFollow(FOLLOW_26);
            rule__FieldDecl__Group_2__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__FieldDecl__Group_2__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_2__2"


    // $ANTLR start "rule__FieldDecl__Group_2__2__Impl"
    // InternalFortXTrans.g:9067:1: rule__FieldDecl__Group_2__2__Impl : ( ( rule__FieldDecl__IdtupAssignment_2_2 ) ) ;
    public final void rule__FieldDecl__Group_2__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9071:1: ( ( ( rule__FieldDecl__IdtupAssignment_2_2 ) ) )
            // InternalFortXTrans.g:9072:1: ( ( rule__FieldDecl__IdtupAssignment_2_2 ) )
            {
            // InternalFortXTrans.g:9072:1: ( ( rule__FieldDecl__IdtupAssignment_2_2 ) )
            // InternalFortXTrans.g:9073:2: ( rule__FieldDecl__IdtupAssignment_2_2 )
            {
             before(grammarAccess.getFieldDeclAccess().getIdtupAssignment_2_2()); 
            // InternalFortXTrans.g:9074:2: ( rule__FieldDecl__IdtupAssignment_2_2 )
            // InternalFortXTrans.g:9074:3: rule__FieldDecl__IdtupAssignment_2_2
            {
            pushFollow(FOLLOW_2);
            rule__FieldDecl__IdtupAssignment_2_2();

            state._fsp--;


            }

             after(grammarAccess.getFieldDeclAccess().getIdtupAssignment_2_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_2__2__Impl"


    // $ANTLR start "rule__FieldDecl__Group_2__3"
    // InternalFortXTrans.g:9082:1: rule__FieldDecl__Group_2__3 : rule__FieldDecl__Group_2__3__Impl rule__FieldDecl__Group_2__4 ;
    public final void rule__FieldDecl__Group_2__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9086:1: ( rule__FieldDecl__Group_2__3__Impl rule__FieldDecl__Group_2__4 )
            // InternalFortXTrans.g:9087:2: rule__FieldDecl__Group_2__3__Impl rule__FieldDecl__Group_2__4
            {
            pushFollow(FOLLOW_5);
            rule__FieldDecl__Group_2__3__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__FieldDecl__Group_2__4();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_2__3"


    // $ANTLR start "rule__FieldDecl__Group_2__3__Impl"
    // InternalFortXTrans.g:9094:1: rule__FieldDecl__Group_2__3__Impl : ( ':' ) ;
    public final void rule__FieldDecl__Group_2__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9098:1: ( ( ':' ) )
            // InternalFortXTrans.g:9099:1: ( ':' )
            {
            // InternalFortXTrans.g:9099:1: ( ':' )
            // InternalFortXTrans.g:9100:2: ':'
            {
             before(grammarAccess.getFieldDeclAccess().getColonKeyword_2_3()); 
            match(input,35,FOLLOW_2); 
             after(grammarAccess.getFieldDeclAccess().getColonKeyword_2_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_2__3__Impl"


    // $ANTLR start "rule__FieldDecl__Group_2__4"
    // InternalFortXTrans.g:9109:1: rule__FieldDecl__Group_2__4 : rule__FieldDecl__Group_2__4__Impl rule__FieldDecl__Group_2__5 ;
    public final void rule__FieldDecl__Group_2__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9113:1: ( rule__FieldDecl__Group_2__4__Impl rule__FieldDecl__Group_2__5 )
            // InternalFortXTrans.g:9114:2: rule__FieldDecl__Group_2__4__Impl rule__FieldDecl__Group_2__5
            {
            pushFollow(FOLLOW_17);
            rule__FieldDecl__Group_2__4__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__FieldDecl__Group_2__5();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_2__4"


    // $ANTLR start "rule__FieldDecl__Group_2__4__Impl"
    // InternalFortXTrans.g:9121:1: rule__FieldDecl__Group_2__4__Impl : ( ( rule__FieldDecl__TypeAssignment_2_4 ) ) ;
    public final void rule__FieldDecl__Group_2__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9125:1: ( ( ( rule__FieldDecl__TypeAssignment_2_4 ) ) )
            // InternalFortXTrans.g:9126:1: ( ( rule__FieldDecl__TypeAssignment_2_4 ) )
            {
            // InternalFortXTrans.g:9126:1: ( ( rule__FieldDecl__TypeAssignment_2_4 ) )
            // InternalFortXTrans.g:9127:2: ( rule__FieldDecl__TypeAssignment_2_4 )
            {
             before(grammarAccess.getFieldDeclAccess().getTypeAssignment_2_4()); 
            // InternalFortXTrans.g:9128:2: ( rule__FieldDecl__TypeAssignment_2_4 )
            // InternalFortXTrans.g:9128:3: rule__FieldDecl__TypeAssignment_2_4
            {
            pushFollow(FOLLOW_2);
            rule__FieldDecl__TypeAssignment_2_4();

            state._fsp--;


            }

             after(grammarAccess.getFieldDeclAccess().getTypeAssignment_2_4()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_2__4__Impl"


    // $ANTLR start "rule__FieldDecl__Group_2__5"
    // InternalFortXTrans.g:9136:1: rule__FieldDecl__Group_2__5 : rule__FieldDecl__Group_2__5__Impl rule__FieldDecl__Group_2__6 ;
    public final void rule__FieldDecl__Group_2__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9140:1: ( rule__FieldDecl__Group_2__5__Impl rule__FieldDecl__Group_2__6 )
            // InternalFortXTrans.g:9141:2: rule__FieldDecl__Group_2__5__Impl rule__FieldDecl__Group_2__6
            {
            pushFollow(FOLLOW_72);
            rule__FieldDecl__Group_2__5__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__FieldDecl__Group_2__6();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_2__5"


    // $ANTLR start "rule__FieldDecl__Group_2__5__Impl"
    // InternalFortXTrans.g:9148:1: rule__FieldDecl__Group_2__5__Impl : ( RULE_DOTS ) ;
    public final void rule__FieldDecl__Group_2__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9152:1: ( ( RULE_DOTS ) )
            // InternalFortXTrans.g:9153:1: ( RULE_DOTS )
            {
            // InternalFortXTrans.g:9153:1: ( RULE_DOTS )
            // InternalFortXTrans.g:9154:2: RULE_DOTS
            {
             before(grammarAccess.getFieldDeclAccess().getDOTSTerminalRuleCall_2_5()); 
            match(input,RULE_DOTS,FOLLOW_2); 
             after(grammarAccess.getFieldDeclAccess().getDOTSTerminalRuleCall_2_5()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_2__5__Impl"


    // $ANTLR start "rule__FieldDecl__Group_2__6"
    // InternalFortXTrans.g:9163:1: rule__FieldDecl__Group_2__6 : rule__FieldDecl__Group_2__6__Impl ;
    public final void rule__FieldDecl__Group_2__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9167:1: ( rule__FieldDecl__Group_2__6__Impl )
            // InternalFortXTrans.g:9168:2: rule__FieldDecl__Group_2__6__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FieldDecl__Group_2__6__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_2__6"


    // $ANTLR start "rule__FieldDecl__Group_2__6__Impl"
    // InternalFortXTrans.g:9174:1: rule__FieldDecl__Group_2__6__Impl : ( ( rule__FieldDecl__Group_2_6__0 )? ) ;
    public final void rule__FieldDecl__Group_2__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9178:1: ( ( ( rule__FieldDecl__Group_2_6__0 )? ) )
            // InternalFortXTrans.g:9179:1: ( ( rule__FieldDecl__Group_2_6__0 )? )
            {
            // InternalFortXTrans.g:9179:1: ( ( rule__FieldDecl__Group_2_6__0 )? )
            // InternalFortXTrans.g:9180:2: ( rule__FieldDecl__Group_2_6__0 )?
            {
             before(grammarAccess.getFieldDeclAccess().getGroup_2_6()); 
            // InternalFortXTrans.g:9181:2: ( rule__FieldDecl__Group_2_6__0 )?
            int alt82=2;
            int LA82_0 = input.LA(1);

            if ( (LA82_0==53) ) {
                alt82=1;
            }
            switch (alt82) {
                case 1 :
                    // InternalFortXTrans.g:9181:3: rule__FieldDecl__Group_2_6__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__FieldDecl__Group_2_6__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getFieldDeclAccess().getGroup_2_6()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_2__6__Impl"


    // $ANTLR start "rule__FieldDecl__Group_2_6__0"
    // InternalFortXTrans.g:9190:1: rule__FieldDecl__Group_2_6__0 : rule__FieldDecl__Group_2_6__0__Impl rule__FieldDecl__Group_2_6__1 ;
    public final void rule__FieldDecl__Group_2_6__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9194:1: ( rule__FieldDecl__Group_2_6__0__Impl rule__FieldDecl__Group_2_6__1 )
            // InternalFortXTrans.g:9195:2: rule__FieldDecl__Group_2_6__0__Impl rule__FieldDecl__Group_2_6__1
            {
            pushFollow(FOLLOW_32);
            rule__FieldDecl__Group_2_6__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__FieldDecl__Group_2_6__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_2_6__0"


    // $ANTLR start "rule__FieldDecl__Group_2_6__0__Impl"
    // InternalFortXTrans.g:9202:1: rule__FieldDecl__Group_2_6__0__Impl : ( '=' ) ;
    public final void rule__FieldDecl__Group_2_6__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9206:1: ( ( '=' ) )
            // InternalFortXTrans.g:9207:1: ( '=' )
            {
            // InternalFortXTrans.g:9207:1: ( '=' )
            // InternalFortXTrans.g:9208:2: '='
            {
             before(grammarAccess.getFieldDeclAccess().getEqualsSignKeyword_2_6_0()); 
            match(input,53,FOLLOW_2); 
             after(grammarAccess.getFieldDeclAccess().getEqualsSignKeyword_2_6_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_2_6__0__Impl"


    // $ANTLR start "rule__FieldDecl__Group_2_6__1"
    // InternalFortXTrans.g:9217:1: rule__FieldDecl__Group_2_6__1 : rule__FieldDecl__Group_2_6__1__Impl ;
    public final void rule__FieldDecl__Group_2_6__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9221:1: ( rule__FieldDecl__Group_2_6__1__Impl )
            // InternalFortXTrans.g:9222:2: rule__FieldDecl__Group_2_6__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FieldDecl__Group_2_6__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_2_6__1"


    // $ANTLR start "rule__FieldDecl__Group_2_6__1__Impl"
    // InternalFortXTrans.g:9228:1: rule__FieldDecl__Group_2_6__1__Impl : ( ( rule__FieldDecl__InitAssignment_2_6_1 ) ) ;
    public final void rule__FieldDecl__Group_2_6__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9232:1: ( ( ( rule__FieldDecl__InitAssignment_2_6_1 ) ) )
            // InternalFortXTrans.g:9233:1: ( ( rule__FieldDecl__InitAssignment_2_6_1 ) )
            {
            // InternalFortXTrans.g:9233:1: ( ( rule__FieldDecl__InitAssignment_2_6_1 ) )
            // InternalFortXTrans.g:9234:2: ( rule__FieldDecl__InitAssignment_2_6_1 )
            {
             before(grammarAccess.getFieldDeclAccess().getInitAssignment_2_6_1()); 
            // InternalFortXTrans.g:9235:2: ( rule__FieldDecl__InitAssignment_2_6_1 )
            // InternalFortXTrans.g:9235:3: rule__FieldDecl__InitAssignment_2_6_1
            {
            pushFollow(FOLLOW_2);
            rule__FieldDecl__InitAssignment_2_6_1();

            state._fsp--;


            }

             after(grammarAccess.getFieldDeclAccess().getInitAssignment_2_6_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_2_6__1__Impl"


    // $ANTLR start "rule__FieldDecl__Group_3__0"
    // InternalFortXTrans.g:9244:1: rule__FieldDecl__Group_3__0 : rule__FieldDecl__Group_3__0__Impl rule__FieldDecl__Group_3__1 ;
    public final void rule__FieldDecl__Group_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9248:1: ( rule__FieldDecl__Group_3__0__Impl rule__FieldDecl__Group_3__1 )
            // InternalFortXTrans.g:9249:2: rule__FieldDecl__Group_3__0__Impl rule__FieldDecl__Group_3__1
            {
            pushFollow(FOLLOW_73);
            rule__FieldDecl__Group_3__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__FieldDecl__Group_3__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_3__0"


    // $ANTLR start "rule__FieldDecl__Group_3__0__Impl"
    // InternalFortXTrans.g:9256:1: rule__FieldDecl__Group_3__0__Impl : ( ( rule__FieldDecl__PriAssignment_3_0 )? ) ;
    public final void rule__FieldDecl__Group_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9260:1: ( ( ( rule__FieldDecl__PriAssignment_3_0 )? ) )
            // InternalFortXTrans.g:9261:1: ( ( rule__FieldDecl__PriAssignment_3_0 )? )
            {
            // InternalFortXTrans.g:9261:1: ( ( rule__FieldDecl__PriAssignment_3_0 )? )
            // InternalFortXTrans.g:9262:2: ( rule__FieldDecl__PriAssignment_3_0 )?
            {
             before(grammarAccess.getFieldDeclAccess().getPriAssignment_3_0()); 
            // InternalFortXTrans.g:9263:2: ( rule__FieldDecl__PriAssignment_3_0 )?
            int alt83=2;
            int LA83_0 = input.LA(1);

            if ( (LA83_0==57) ) {
                alt83=1;
            }
            switch (alt83) {
                case 1 :
                    // InternalFortXTrans.g:9263:3: rule__FieldDecl__PriAssignment_3_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__FieldDecl__PriAssignment_3_0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getFieldDeclAccess().getPriAssignment_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_3__0__Impl"


    // $ANTLR start "rule__FieldDecl__Group_3__1"
    // InternalFortXTrans.g:9271:1: rule__FieldDecl__Group_3__1 : rule__FieldDecl__Group_3__1__Impl rule__FieldDecl__Group_3__2 ;
    public final void rule__FieldDecl__Group_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9275:1: ( rule__FieldDecl__Group_3__1__Impl rule__FieldDecl__Group_3__2 )
            // InternalFortXTrans.g:9276:2: rule__FieldDecl__Group_3__1__Impl rule__FieldDecl__Group_3__2
            {
            pushFollow(FOLLOW_73);
            rule__FieldDecl__Group_3__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__FieldDecl__Group_3__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_3__1"


    // $ANTLR start "rule__FieldDecl__Group_3__1__Impl"
    // InternalFortXTrans.g:9283:1: rule__FieldDecl__Group_3__1__Impl : ( ( rule__FieldDecl__MutAssignment_3_1 )? ) ;
    public final void rule__FieldDecl__Group_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9287:1: ( ( ( rule__FieldDecl__MutAssignment_3_1 )? ) )
            // InternalFortXTrans.g:9288:1: ( ( rule__FieldDecl__MutAssignment_3_1 )? )
            {
            // InternalFortXTrans.g:9288:1: ( ( rule__FieldDecl__MutAssignment_3_1 )? )
            // InternalFortXTrans.g:9289:2: ( rule__FieldDecl__MutAssignment_3_1 )?
            {
             before(grammarAccess.getFieldDeclAccess().getMutAssignment_3_1()); 
            // InternalFortXTrans.g:9290:2: ( rule__FieldDecl__MutAssignment_3_1 )?
            int alt84=2;
            int LA84_0 = input.LA(1);

            if ( (LA84_0==68) ) {
                alt84=1;
            }
            switch (alt84) {
                case 1 :
                    // InternalFortXTrans.g:9290:3: rule__FieldDecl__MutAssignment_3_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__FieldDecl__MutAssignment_3_1();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getFieldDeclAccess().getMutAssignment_3_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_3__1__Impl"


    // $ANTLR start "rule__FieldDecl__Group_3__2"
    // InternalFortXTrans.g:9298:1: rule__FieldDecl__Group_3__2 : rule__FieldDecl__Group_3__2__Impl rule__FieldDecl__Group_3__3 ;
    public final void rule__FieldDecl__Group_3__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9302:1: ( rule__FieldDecl__Group_3__2__Impl rule__FieldDecl__Group_3__3 )
            // InternalFortXTrans.g:9303:2: rule__FieldDecl__Group_3__2__Impl rule__FieldDecl__Group_3__3
            {
            pushFollow(FOLLOW_26);
            rule__FieldDecl__Group_3__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__FieldDecl__Group_3__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_3__2"


    // $ANTLR start "rule__FieldDecl__Group_3__2__Impl"
    // InternalFortXTrans.g:9310:1: rule__FieldDecl__Group_3__2__Impl : ( ( rule__FieldDecl__IdtupAssignment_3_2 ) ) ;
    public final void rule__FieldDecl__Group_3__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9314:1: ( ( ( rule__FieldDecl__IdtupAssignment_3_2 ) ) )
            // InternalFortXTrans.g:9315:1: ( ( rule__FieldDecl__IdtupAssignment_3_2 ) )
            {
            // InternalFortXTrans.g:9315:1: ( ( rule__FieldDecl__IdtupAssignment_3_2 ) )
            // InternalFortXTrans.g:9316:2: ( rule__FieldDecl__IdtupAssignment_3_2 )
            {
             before(grammarAccess.getFieldDeclAccess().getIdtupAssignment_3_2()); 
            // InternalFortXTrans.g:9317:2: ( rule__FieldDecl__IdtupAssignment_3_2 )
            // InternalFortXTrans.g:9317:3: rule__FieldDecl__IdtupAssignment_3_2
            {
            pushFollow(FOLLOW_2);
            rule__FieldDecl__IdtupAssignment_3_2();

            state._fsp--;


            }

             after(grammarAccess.getFieldDeclAccess().getIdtupAssignment_3_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_3__2__Impl"


    // $ANTLR start "rule__FieldDecl__Group_3__3"
    // InternalFortXTrans.g:9325:1: rule__FieldDecl__Group_3__3 : rule__FieldDecl__Group_3__3__Impl rule__FieldDecl__Group_3__4 ;
    public final void rule__FieldDecl__Group_3__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9329:1: ( rule__FieldDecl__Group_3__3__Impl rule__FieldDecl__Group_3__4 )
            // InternalFortXTrans.g:9330:2: rule__FieldDecl__Group_3__3__Impl rule__FieldDecl__Group_3__4
            {
            pushFollow(FOLLOW_27);
            rule__FieldDecl__Group_3__3__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__FieldDecl__Group_3__4();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_3__3"


    // $ANTLR start "rule__FieldDecl__Group_3__3__Impl"
    // InternalFortXTrans.g:9337:1: rule__FieldDecl__Group_3__3__Impl : ( ':' ) ;
    public final void rule__FieldDecl__Group_3__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9341:1: ( ( ':' ) )
            // InternalFortXTrans.g:9342:1: ( ':' )
            {
            // InternalFortXTrans.g:9342:1: ( ':' )
            // InternalFortXTrans.g:9343:2: ':'
            {
             before(grammarAccess.getFieldDeclAccess().getColonKeyword_3_3()); 
            match(input,35,FOLLOW_2); 
             after(grammarAccess.getFieldDeclAccess().getColonKeyword_3_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_3__3__Impl"


    // $ANTLR start "rule__FieldDecl__Group_3__4"
    // InternalFortXTrans.g:9352:1: rule__FieldDecl__Group_3__4 : rule__FieldDecl__Group_3__4__Impl rule__FieldDecl__Group_3__5 ;
    public final void rule__FieldDecl__Group_3__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9356:1: ( rule__FieldDecl__Group_3__4__Impl rule__FieldDecl__Group_3__5 )
            // InternalFortXTrans.g:9357:2: rule__FieldDecl__Group_3__4__Impl rule__FieldDecl__Group_3__5
            {
            pushFollow(FOLLOW_72);
            rule__FieldDecl__Group_3__4__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__FieldDecl__Group_3__5();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_3__4"


    // $ANTLR start "rule__FieldDecl__Group_3__4__Impl"
    // InternalFortXTrans.g:9364:1: rule__FieldDecl__Group_3__4__Impl : ( ( rule__FieldDecl__TuptypeAssignment_3_4 ) ) ;
    public final void rule__FieldDecl__Group_3__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9368:1: ( ( ( rule__FieldDecl__TuptypeAssignment_3_4 ) ) )
            // InternalFortXTrans.g:9369:1: ( ( rule__FieldDecl__TuptypeAssignment_3_4 ) )
            {
            // InternalFortXTrans.g:9369:1: ( ( rule__FieldDecl__TuptypeAssignment_3_4 ) )
            // InternalFortXTrans.g:9370:2: ( rule__FieldDecl__TuptypeAssignment_3_4 )
            {
             before(grammarAccess.getFieldDeclAccess().getTuptypeAssignment_3_4()); 
            // InternalFortXTrans.g:9371:2: ( rule__FieldDecl__TuptypeAssignment_3_4 )
            // InternalFortXTrans.g:9371:3: rule__FieldDecl__TuptypeAssignment_3_4
            {
            pushFollow(FOLLOW_2);
            rule__FieldDecl__TuptypeAssignment_3_4();

            state._fsp--;


            }

             after(grammarAccess.getFieldDeclAccess().getTuptypeAssignment_3_4()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_3__4__Impl"


    // $ANTLR start "rule__FieldDecl__Group_3__5"
    // InternalFortXTrans.g:9379:1: rule__FieldDecl__Group_3__5 : rule__FieldDecl__Group_3__5__Impl ;
    public final void rule__FieldDecl__Group_3__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9383:1: ( rule__FieldDecl__Group_3__5__Impl )
            // InternalFortXTrans.g:9384:2: rule__FieldDecl__Group_3__5__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FieldDecl__Group_3__5__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_3__5"


    // $ANTLR start "rule__FieldDecl__Group_3__5__Impl"
    // InternalFortXTrans.g:9390:1: rule__FieldDecl__Group_3__5__Impl : ( ( rule__FieldDecl__Group_3_5__0 )? ) ;
    public final void rule__FieldDecl__Group_3__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9394:1: ( ( ( rule__FieldDecl__Group_3_5__0 )? ) )
            // InternalFortXTrans.g:9395:1: ( ( rule__FieldDecl__Group_3_5__0 )? )
            {
            // InternalFortXTrans.g:9395:1: ( ( rule__FieldDecl__Group_3_5__0 )? )
            // InternalFortXTrans.g:9396:2: ( rule__FieldDecl__Group_3_5__0 )?
            {
             before(grammarAccess.getFieldDeclAccess().getGroup_3_5()); 
            // InternalFortXTrans.g:9397:2: ( rule__FieldDecl__Group_3_5__0 )?
            int alt85=2;
            int LA85_0 = input.LA(1);

            if ( (LA85_0==53) ) {
                alt85=1;
            }
            switch (alt85) {
                case 1 :
                    // InternalFortXTrans.g:9397:3: rule__FieldDecl__Group_3_5__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__FieldDecl__Group_3_5__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getFieldDeclAccess().getGroup_3_5()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_3__5__Impl"


    // $ANTLR start "rule__FieldDecl__Group_3_5__0"
    // InternalFortXTrans.g:9406:1: rule__FieldDecl__Group_3_5__0 : rule__FieldDecl__Group_3_5__0__Impl rule__FieldDecl__Group_3_5__1 ;
    public final void rule__FieldDecl__Group_3_5__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9410:1: ( rule__FieldDecl__Group_3_5__0__Impl rule__FieldDecl__Group_3_5__1 )
            // InternalFortXTrans.g:9411:2: rule__FieldDecl__Group_3_5__0__Impl rule__FieldDecl__Group_3_5__1
            {
            pushFollow(FOLLOW_32);
            rule__FieldDecl__Group_3_5__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__FieldDecl__Group_3_5__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_3_5__0"


    // $ANTLR start "rule__FieldDecl__Group_3_5__0__Impl"
    // InternalFortXTrans.g:9418:1: rule__FieldDecl__Group_3_5__0__Impl : ( '=' ) ;
    public final void rule__FieldDecl__Group_3_5__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9422:1: ( ( '=' ) )
            // InternalFortXTrans.g:9423:1: ( '=' )
            {
            // InternalFortXTrans.g:9423:1: ( '=' )
            // InternalFortXTrans.g:9424:2: '='
            {
             before(grammarAccess.getFieldDeclAccess().getEqualsSignKeyword_3_5_0()); 
            match(input,53,FOLLOW_2); 
             after(grammarAccess.getFieldDeclAccess().getEqualsSignKeyword_3_5_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_3_5__0__Impl"


    // $ANTLR start "rule__FieldDecl__Group_3_5__1"
    // InternalFortXTrans.g:9433:1: rule__FieldDecl__Group_3_5__1 : rule__FieldDecl__Group_3_5__1__Impl ;
    public final void rule__FieldDecl__Group_3_5__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9437:1: ( rule__FieldDecl__Group_3_5__1__Impl )
            // InternalFortXTrans.g:9438:2: rule__FieldDecl__Group_3_5__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FieldDecl__Group_3_5__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_3_5__1"


    // $ANTLR start "rule__FieldDecl__Group_3_5__1__Impl"
    // InternalFortXTrans.g:9444:1: rule__FieldDecl__Group_3_5__1__Impl : ( ( rule__FieldDecl__InitAssignment_3_5_1 ) ) ;
    public final void rule__FieldDecl__Group_3_5__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9448:1: ( ( ( rule__FieldDecl__InitAssignment_3_5_1 ) ) )
            // InternalFortXTrans.g:9449:1: ( ( rule__FieldDecl__InitAssignment_3_5_1 ) )
            {
            // InternalFortXTrans.g:9449:1: ( ( rule__FieldDecl__InitAssignment_3_5_1 ) )
            // InternalFortXTrans.g:9450:2: ( rule__FieldDecl__InitAssignment_3_5_1 )
            {
             before(grammarAccess.getFieldDeclAccess().getInitAssignment_3_5_1()); 
            // InternalFortXTrans.g:9451:2: ( rule__FieldDecl__InitAssignment_3_5_1 )
            // InternalFortXTrans.g:9451:3: rule__FieldDecl__InitAssignment_3_5_1
            {
            pushFollow(FOLLOW_2);
            rule__FieldDecl__InitAssignment_3_5_1();

            state._fsp--;


            }

             after(grammarAccess.getFieldDeclAccess().getInitAssignment_3_5_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_3_5__1__Impl"


    // $ANTLR start "rule__NoNewlineVarWTypes__Group_1__0"
    // InternalFortXTrans.g:9460:1: rule__NoNewlineVarWTypes__Group_1__0 : rule__NoNewlineVarWTypes__Group_1__0__Impl rule__NoNewlineVarWTypes__Group_1__1 ;
    public final void rule__NoNewlineVarWTypes__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9464:1: ( rule__NoNewlineVarWTypes__Group_1__0__Impl rule__NoNewlineVarWTypes__Group_1__1 )
            // InternalFortXTrans.g:9465:2: rule__NoNewlineVarWTypes__Group_1__0__Impl rule__NoNewlineVarWTypes__Group_1__1
            {
            pushFollow(FOLLOW_5);
            rule__NoNewlineVarWTypes__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__NoNewlineVarWTypes__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NoNewlineVarWTypes__Group_1__0"


    // $ANTLR start "rule__NoNewlineVarWTypes__Group_1__0__Impl"
    // InternalFortXTrans.g:9472:1: rule__NoNewlineVarWTypes__Group_1__0__Impl : ( '(' ) ;
    public final void rule__NoNewlineVarWTypes__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9476:1: ( ( '(' ) )
            // InternalFortXTrans.g:9477:1: ( '(' )
            {
            // InternalFortXTrans.g:9477:1: ( '(' )
            // InternalFortXTrans.g:9478:2: '('
            {
             before(grammarAccess.getNoNewlineVarWTypesAccess().getLeftParenthesisKeyword_1_0()); 
            match(input,33,FOLLOW_2); 
             after(grammarAccess.getNoNewlineVarWTypesAccess().getLeftParenthesisKeyword_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NoNewlineVarWTypes__Group_1__0__Impl"


    // $ANTLR start "rule__NoNewlineVarWTypes__Group_1__1"
    // InternalFortXTrans.g:9487:1: rule__NoNewlineVarWTypes__Group_1__1 : rule__NoNewlineVarWTypes__Group_1__1__Impl rule__NoNewlineVarWTypes__Group_1__2 ;
    public final void rule__NoNewlineVarWTypes__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9491:1: ( rule__NoNewlineVarWTypes__Group_1__1__Impl rule__NoNewlineVarWTypes__Group_1__2 )
            // InternalFortXTrans.g:9492:2: rule__NoNewlineVarWTypes__Group_1__1__Impl rule__NoNewlineVarWTypes__Group_1__2
            {
            pushFollow(FOLLOW_25);
            rule__NoNewlineVarWTypes__Group_1__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__NoNewlineVarWTypes__Group_1__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NoNewlineVarWTypes__Group_1__1"


    // $ANTLR start "rule__NoNewlineVarWTypes__Group_1__1__Impl"
    // InternalFortXTrans.g:9499:1: rule__NoNewlineVarWTypes__Group_1__1__Impl : ( ( rule__NoNewlineVarWTypes__MultipleAssignment_1_1 ) ) ;
    public final void rule__NoNewlineVarWTypes__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9503:1: ( ( ( rule__NoNewlineVarWTypes__MultipleAssignment_1_1 ) ) )
            // InternalFortXTrans.g:9504:1: ( ( rule__NoNewlineVarWTypes__MultipleAssignment_1_1 ) )
            {
            // InternalFortXTrans.g:9504:1: ( ( rule__NoNewlineVarWTypes__MultipleAssignment_1_1 ) )
            // InternalFortXTrans.g:9505:2: ( rule__NoNewlineVarWTypes__MultipleAssignment_1_1 )
            {
             before(grammarAccess.getNoNewlineVarWTypesAccess().getMultipleAssignment_1_1()); 
            // InternalFortXTrans.g:9506:2: ( rule__NoNewlineVarWTypes__MultipleAssignment_1_1 )
            // InternalFortXTrans.g:9506:3: rule__NoNewlineVarWTypes__MultipleAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__NoNewlineVarWTypes__MultipleAssignment_1_1();

            state._fsp--;


            }

             after(grammarAccess.getNoNewlineVarWTypesAccess().getMultipleAssignment_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NoNewlineVarWTypes__Group_1__1__Impl"


    // $ANTLR start "rule__NoNewlineVarWTypes__Group_1__2"
    // InternalFortXTrans.g:9514:1: rule__NoNewlineVarWTypes__Group_1__2 : rule__NoNewlineVarWTypes__Group_1__2__Impl rule__NoNewlineVarWTypes__Group_1__3 ;
    public final void rule__NoNewlineVarWTypes__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9518:1: ( rule__NoNewlineVarWTypes__Group_1__2__Impl rule__NoNewlineVarWTypes__Group_1__3 )
            // InternalFortXTrans.g:9519:2: rule__NoNewlineVarWTypes__Group_1__2__Impl rule__NoNewlineVarWTypes__Group_1__3
            {
            pushFollow(FOLLOW_28);
            rule__NoNewlineVarWTypes__Group_1__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__NoNewlineVarWTypes__Group_1__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NoNewlineVarWTypes__Group_1__2"


    // $ANTLR start "rule__NoNewlineVarWTypes__Group_1__2__Impl"
    // InternalFortXTrans.g:9526:1: rule__NoNewlineVarWTypes__Group_1__2__Impl : ( ( ( rule__NoNewlineVarWTypes__Group_1_2__0 ) ) ( ( rule__NoNewlineVarWTypes__Group_1_2__0 )* ) ) ;
    public final void rule__NoNewlineVarWTypes__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9530:1: ( ( ( ( rule__NoNewlineVarWTypes__Group_1_2__0 ) ) ( ( rule__NoNewlineVarWTypes__Group_1_2__0 )* ) ) )
            // InternalFortXTrans.g:9531:1: ( ( ( rule__NoNewlineVarWTypes__Group_1_2__0 ) ) ( ( rule__NoNewlineVarWTypes__Group_1_2__0 )* ) )
            {
            // InternalFortXTrans.g:9531:1: ( ( ( rule__NoNewlineVarWTypes__Group_1_2__0 ) ) ( ( rule__NoNewlineVarWTypes__Group_1_2__0 )* ) )
            // InternalFortXTrans.g:9532:2: ( ( rule__NoNewlineVarWTypes__Group_1_2__0 ) ) ( ( rule__NoNewlineVarWTypes__Group_1_2__0 )* )
            {
            // InternalFortXTrans.g:9532:2: ( ( rule__NoNewlineVarWTypes__Group_1_2__0 ) )
            // InternalFortXTrans.g:9533:3: ( rule__NoNewlineVarWTypes__Group_1_2__0 )
            {
             before(grammarAccess.getNoNewlineVarWTypesAccess().getGroup_1_2()); 
            // InternalFortXTrans.g:9534:3: ( rule__NoNewlineVarWTypes__Group_1_2__0 )
            // InternalFortXTrans.g:9534:4: rule__NoNewlineVarWTypes__Group_1_2__0
            {
            pushFollow(FOLLOW_15);
            rule__NoNewlineVarWTypes__Group_1_2__0();

            state._fsp--;


            }

             after(grammarAccess.getNoNewlineVarWTypesAccess().getGroup_1_2()); 

            }

            // InternalFortXTrans.g:9537:2: ( ( rule__NoNewlineVarWTypes__Group_1_2__0 )* )
            // InternalFortXTrans.g:9538:3: ( rule__NoNewlineVarWTypes__Group_1_2__0 )*
            {
             before(grammarAccess.getNoNewlineVarWTypesAccess().getGroup_1_2()); 
            // InternalFortXTrans.g:9539:3: ( rule__NoNewlineVarWTypes__Group_1_2__0 )*
            loop86:
            do {
                int alt86=2;
                int LA86_0 = input.LA(1);

                if ( (LA86_0==29) ) {
                    alt86=1;
                }


                switch (alt86) {
            	case 1 :
            	    // InternalFortXTrans.g:9539:4: rule__NoNewlineVarWTypes__Group_1_2__0
            	    {
            	    pushFollow(FOLLOW_15);
            	    rule__NoNewlineVarWTypes__Group_1_2__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop86;
                }
            } while (true);

             after(grammarAccess.getNoNewlineVarWTypesAccess().getGroup_1_2()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NoNewlineVarWTypes__Group_1__2__Impl"


    // $ANTLR start "rule__NoNewlineVarWTypes__Group_1__3"
    // InternalFortXTrans.g:9548:1: rule__NoNewlineVarWTypes__Group_1__3 : rule__NoNewlineVarWTypes__Group_1__3__Impl ;
    public final void rule__NoNewlineVarWTypes__Group_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9552:1: ( rule__NoNewlineVarWTypes__Group_1__3__Impl )
            // InternalFortXTrans.g:9553:2: rule__NoNewlineVarWTypes__Group_1__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__NoNewlineVarWTypes__Group_1__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NoNewlineVarWTypes__Group_1__3"


    // $ANTLR start "rule__NoNewlineVarWTypes__Group_1__3__Impl"
    // InternalFortXTrans.g:9559:1: rule__NoNewlineVarWTypes__Group_1__3__Impl : ( ')' ) ;
    public final void rule__NoNewlineVarWTypes__Group_1__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9563:1: ( ( ')' ) )
            // InternalFortXTrans.g:9564:1: ( ')' )
            {
            // InternalFortXTrans.g:9564:1: ( ')' )
            // InternalFortXTrans.g:9565:2: ')'
            {
             before(grammarAccess.getNoNewlineVarWTypesAccess().getRightParenthesisKeyword_1_3()); 
            match(input,34,FOLLOW_2); 
             after(grammarAccess.getNoNewlineVarWTypesAccess().getRightParenthesisKeyword_1_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NoNewlineVarWTypes__Group_1__3__Impl"


    // $ANTLR start "rule__NoNewlineVarWTypes__Group_1_2__0"
    // InternalFortXTrans.g:9575:1: rule__NoNewlineVarWTypes__Group_1_2__0 : rule__NoNewlineVarWTypes__Group_1_2__0__Impl rule__NoNewlineVarWTypes__Group_1_2__1 ;
    public final void rule__NoNewlineVarWTypes__Group_1_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9579:1: ( rule__NoNewlineVarWTypes__Group_1_2__0__Impl rule__NoNewlineVarWTypes__Group_1_2__1 )
            // InternalFortXTrans.g:9580:2: rule__NoNewlineVarWTypes__Group_1_2__0__Impl rule__NoNewlineVarWTypes__Group_1_2__1
            {
            pushFollow(FOLLOW_5);
            rule__NoNewlineVarWTypes__Group_1_2__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__NoNewlineVarWTypes__Group_1_2__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NoNewlineVarWTypes__Group_1_2__0"


    // $ANTLR start "rule__NoNewlineVarWTypes__Group_1_2__0__Impl"
    // InternalFortXTrans.g:9587:1: rule__NoNewlineVarWTypes__Group_1_2__0__Impl : ( ',' ) ;
    public final void rule__NoNewlineVarWTypes__Group_1_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9591:1: ( ( ',' ) )
            // InternalFortXTrans.g:9592:1: ( ',' )
            {
            // InternalFortXTrans.g:9592:1: ( ',' )
            // InternalFortXTrans.g:9593:2: ','
            {
             before(grammarAccess.getNoNewlineVarWTypesAccess().getCommaKeyword_1_2_0()); 
            match(input,29,FOLLOW_2); 
             after(grammarAccess.getNoNewlineVarWTypesAccess().getCommaKeyword_1_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NoNewlineVarWTypes__Group_1_2__0__Impl"


    // $ANTLR start "rule__NoNewlineVarWTypes__Group_1_2__1"
    // InternalFortXTrans.g:9602:1: rule__NoNewlineVarWTypes__Group_1_2__1 : rule__NoNewlineVarWTypes__Group_1_2__1__Impl ;
    public final void rule__NoNewlineVarWTypes__Group_1_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9606:1: ( rule__NoNewlineVarWTypes__Group_1_2__1__Impl )
            // InternalFortXTrans.g:9607:2: rule__NoNewlineVarWTypes__Group_1_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__NoNewlineVarWTypes__Group_1_2__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NoNewlineVarWTypes__Group_1_2__1"


    // $ANTLR start "rule__NoNewlineVarWTypes__Group_1_2__1__Impl"
    // InternalFortXTrans.g:9613:1: rule__NoNewlineVarWTypes__Group_1_2__1__Impl : ( ( rule__NoNewlineVarWTypes__MultipleAssignment_1_2_1 ) ) ;
    public final void rule__NoNewlineVarWTypes__Group_1_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9617:1: ( ( ( rule__NoNewlineVarWTypes__MultipleAssignment_1_2_1 ) ) )
            // InternalFortXTrans.g:9618:1: ( ( rule__NoNewlineVarWTypes__MultipleAssignment_1_2_1 ) )
            {
            // InternalFortXTrans.g:9618:1: ( ( rule__NoNewlineVarWTypes__MultipleAssignment_1_2_1 ) )
            // InternalFortXTrans.g:9619:2: ( rule__NoNewlineVarWTypes__MultipleAssignment_1_2_1 )
            {
             before(grammarAccess.getNoNewlineVarWTypesAccess().getMultipleAssignment_1_2_1()); 
            // InternalFortXTrans.g:9620:2: ( rule__NoNewlineVarWTypes__MultipleAssignment_1_2_1 )
            // InternalFortXTrans.g:9620:3: rule__NoNewlineVarWTypes__MultipleAssignment_1_2_1
            {
            pushFollow(FOLLOW_2);
            rule__NoNewlineVarWTypes__MultipleAssignment_1_2_1();

            state._fsp--;


            }

             after(grammarAccess.getNoNewlineVarWTypesAccess().getMultipleAssignment_1_2_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NoNewlineVarWTypes__Group_1_2__1__Impl"


    // $ANTLR start "rule__NoNewlineVarWType__Group__0"
    // InternalFortXTrans.g:9629:1: rule__NoNewlineVarWType__Group__0 : rule__NoNewlineVarWType__Group__0__Impl rule__NoNewlineVarWType__Group__1 ;
    public final void rule__NoNewlineVarWType__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9633:1: ( rule__NoNewlineVarWType__Group__0__Impl rule__NoNewlineVarWType__Group__1 )
            // InternalFortXTrans.g:9634:2: rule__NoNewlineVarWType__Group__0__Impl rule__NoNewlineVarWType__Group__1
            {
            pushFollow(FOLLOW_26);
            rule__NoNewlineVarWType__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__NoNewlineVarWType__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NoNewlineVarWType__Group__0"


    // $ANTLR start "rule__NoNewlineVarWType__Group__0__Impl"
    // InternalFortXTrans.g:9641:1: rule__NoNewlineVarWType__Group__0__Impl : ( ( rule__NoNewlineVarWType__BidAssignment_0 ) ) ;
    public final void rule__NoNewlineVarWType__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9645:1: ( ( ( rule__NoNewlineVarWType__BidAssignment_0 ) ) )
            // InternalFortXTrans.g:9646:1: ( ( rule__NoNewlineVarWType__BidAssignment_0 ) )
            {
            // InternalFortXTrans.g:9646:1: ( ( rule__NoNewlineVarWType__BidAssignment_0 ) )
            // InternalFortXTrans.g:9647:2: ( rule__NoNewlineVarWType__BidAssignment_0 )
            {
             before(grammarAccess.getNoNewlineVarWTypeAccess().getBidAssignment_0()); 
            // InternalFortXTrans.g:9648:2: ( rule__NoNewlineVarWType__BidAssignment_0 )
            // InternalFortXTrans.g:9648:3: rule__NoNewlineVarWType__BidAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__NoNewlineVarWType__BidAssignment_0();

            state._fsp--;


            }

             after(grammarAccess.getNoNewlineVarWTypeAccess().getBidAssignment_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NoNewlineVarWType__Group__0__Impl"


    // $ANTLR start "rule__NoNewlineVarWType__Group__1"
    // InternalFortXTrans.g:9656:1: rule__NoNewlineVarWType__Group__1 : rule__NoNewlineVarWType__Group__1__Impl ;
    public final void rule__NoNewlineVarWType__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9660:1: ( rule__NoNewlineVarWType__Group__1__Impl )
            // InternalFortXTrans.g:9661:2: rule__NoNewlineVarWType__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__NoNewlineVarWType__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NoNewlineVarWType__Group__1"


    // $ANTLR start "rule__NoNewlineVarWType__Group__1__Impl"
    // InternalFortXTrans.g:9667:1: rule__NoNewlineVarWType__Group__1__Impl : ( ( rule__NoNewlineVarWType__IstypeAssignment_1 ) ) ;
    public final void rule__NoNewlineVarWType__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9671:1: ( ( ( rule__NoNewlineVarWType__IstypeAssignment_1 ) ) )
            // InternalFortXTrans.g:9672:1: ( ( rule__NoNewlineVarWType__IstypeAssignment_1 ) )
            {
            // InternalFortXTrans.g:9672:1: ( ( rule__NoNewlineVarWType__IstypeAssignment_1 ) )
            // InternalFortXTrans.g:9673:2: ( rule__NoNewlineVarWType__IstypeAssignment_1 )
            {
             before(grammarAccess.getNoNewlineVarWTypeAccess().getIstypeAssignment_1()); 
            // InternalFortXTrans.g:9674:2: ( rule__NoNewlineVarWType__IstypeAssignment_1 )
            // InternalFortXTrans.g:9674:3: rule__NoNewlineVarWType__IstypeAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__NoNewlineVarWType__IstypeAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getNoNewlineVarWTypeAccess().getIstypeAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NoNewlineVarWType__Group__1__Impl"


    // $ANTLR start "rule__LiteralList__Group__0"
    // InternalFortXTrans.g:9683:1: rule__LiteralList__Group__0 : rule__LiteralList__Group__0__Impl rule__LiteralList__Group__1 ;
    public final void rule__LiteralList__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9687:1: ( rule__LiteralList__Group__0__Impl rule__LiteralList__Group__1 )
            // InternalFortXTrans.g:9688:2: rule__LiteralList__Group__0__Impl rule__LiteralList__Group__1
            {
            pushFollow(FOLLOW_74);
            rule__LiteralList__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__LiteralList__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralList__Group__0"


    // $ANTLR start "rule__LiteralList__Group__0__Impl"
    // InternalFortXTrans.g:9695:1: rule__LiteralList__Group__0__Impl : ( '(' ) ;
    public final void rule__LiteralList__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9699:1: ( ( '(' ) )
            // InternalFortXTrans.g:9700:1: ( '(' )
            {
            // InternalFortXTrans.g:9700:1: ( '(' )
            // InternalFortXTrans.g:9701:2: '('
            {
             before(grammarAccess.getLiteralListAccess().getLeftParenthesisKeyword_0()); 
            match(input,33,FOLLOW_2); 
             after(grammarAccess.getLiteralListAccess().getLeftParenthesisKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralList__Group__0__Impl"


    // $ANTLR start "rule__LiteralList__Group__1"
    // InternalFortXTrans.g:9710:1: rule__LiteralList__Group__1 : rule__LiteralList__Group__1__Impl rule__LiteralList__Group__2 ;
    public final void rule__LiteralList__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9714:1: ( rule__LiteralList__Group__1__Impl rule__LiteralList__Group__2 )
            // InternalFortXTrans.g:9715:2: rule__LiteralList__Group__1__Impl rule__LiteralList__Group__2
            {
            pushFollow(FOLLOW_23);
            rule__LiteralList__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__LiteralList__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralList__Group__1"


    // $ANTLR start "rule__LiteralList__Group__1__Impl"
    // InternalFortXTrans.g:9722:1: rule__LiteralList__Group__1__Impl : ( ( rule__LiteralList__LitAssignment_1 ) ) ;
    public final void rule__LiteralList__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9726:1: ( ( ( rule__LiteralList__LitAssignment_1 ) ) )
            // InternalFortXTrans.g:9727:1: ( ( rule__LiteralList__LitAssignment_1 ) )
            {
            // InternalFortXTrans.g:9727:1: ( ( rule__LiteralList__LitAssignment_1 ) )
            // InternalFortXTrans.g:9728:2: ( rule__LiteralList__LitAssignment_1 )
            {
             before(grammarAccess.getLiteralListAccess().getLitAssignment_1()); 
            // InternalFortXTrans.g:9729:2: ( rule__LiteralList__LitAssignment_1 )
            // InternalFortXTrans.g:9729:3: rule__LiteralList__LitAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__LiteralList__LitAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getLiteralListAccess().getLitAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralList__Group__1__Impl"


    // $ANTLR start "rule__LiteralList__Group__2"
    // InternalFortXTrans.g:9737:1: rule__LiteralList__Group__2 : rule__LiteralList__Group__2__Impl rule__LiteralList__Group__3 ;
    public final void rule__LiteralList__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9741:1: ( rule__LiteralList__Group__2__Impl rule__LiteralList__Group__3 )
            // InternalFortXTrans.g:9742:2: rule__LiteralList__Group__2__Impl rule__LiteralList__Group__3
            {
            pushFollow(FOLLOW_23);
            rule__LiteralList__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__LiteralList__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralList__Group__2"


    // $ANTLR start "rule__LiteralList__Group__2__Impl"
    // InternalFortXTrans.g:9749:1: rule__LiteralList__Group__2__Impl : ( ( rule__LiteralList__Group_2__0 )* ) ;
    public final void rule__LiteralList__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9753:1: ( ( ( rule__LiteralList__Group_2__0 )* ) )
            // InternalFortXTrans.g:9754:1: ( ( rule__LiteralList__Group_2__0 )* )
            {
            // InternalFortXTrans.g:9754:1: ( ( rule__LiteralList__Group_2__0 )* )
            // InternalFortXTrans.g:9755:2: ( rule__LiteralList__Group_2__0 )*
            {
             before(grammarAccess.getLiteralListAccess().getGroup_2()); 
            // InternalFortXTrans.g:9756:2: ( rule__LiteralList__Group_2__0 )*
            loop87:
            do {
                int alt87=2;
                int LA87_0 = input.LA(1);

                if ( (LA87_0==29) ) {
                    alt87=1;
                }


                switch (alt87) {
            	case 1 :
            	    // InternalFortXTrans.g:9756:3: rule__LiteralList__Group_2__0
            	    {
            	    pushFollow(FOLLOW_15);
            	    rule__LiteralList__Group_2__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop87;
                }
            } while (true);

             after(grammarAccess.getLiteralListAccess().getGroup_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralList__Group__2__Impl"


    // $ANTLR start "rule__LiteralList__Group__3"
    // InternalFortXTrans.g:9764:1: rule__LiteralList__Group__3 : rule__LiteralList__Group__3__Impl ;
    public final void rule__LiteralList__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9768:1: ( rule__LiteralList__Group__3__Impl )
            // InternalFortXTrans.g:9769:2: rule__LiteralList__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__LiteralList__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralList__Group__3"


    // $ANTLR start "rule__LiteralList__Group__3__Impl"
    // InternalFortXTrans.g:9775:1: rule__LiteralList__Group__3__Impl : ( ')' ) ;
    public final void rule__LiteralList__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9779:1: ( ( ')' ) )
            // InternalFortXTrans.g:9780:1: ( ')' )
            {
            // InternalFortXTrans.g:9780:1: ( ')' )
            // InternalFortXTrans.g:9781:2: ')'
            {
             before(grammarAccess.getLiteralListAccess().getRightParenthesisKeyword_3()); 
            match(input,34,FOLLOW_2); 
             after(grammarAccess.getLiteralListAccess().getRightParenthesisKeyword_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralList__Group__3__Impl"


    // $ANTLR start "rule__LiteralList__Group_2__0"
    // InternalFortXTrans.g:9791:1: rule__LiteralList__Group_2__0 : rule__LiteralList__Group_2__0__Impl rule__LiteralList__Group_2__1 ;
    public final void rule__LiteralList__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9795:1: ( rule__LiteralList__Group_2__0__Impl rule__LiteralList__Group_2__1 )
            // InternalFortXTrans.g:9796:2: rule__LiteralList__Group_2__0__Impl rule__LiteralList__Group_2__1
            {
            pushFollow(FOLLOW_74);
            rule__LiteralList__Group_2__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__LiteralList__Group_2__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralList__Group_2__0"


    // $ANTLR start "rule__LiteralList__Group_2__0__Impl"
    // InternalFortXTrans.g:9803:1: rule__LiteralList__Group_2__0__Impl : ( ',' ) ;
    public final void rule__LiteralList__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9807:1: ( ( ',' ) )
            // InternalFortXTrans.g:9808:1: ( ',' )
            {
            // InternalFortXTrans.g:9808:1: ( ',' )
            // InternalFortXTrans.g:9809:2: ','
            {
             before(grammarAccess.getLiteralListAccess().getCommaKeyword_2_0()); 
            match(input,29,FOLLOW_2); 
             after(grammarAccess.getLiteralListAccess().getCommaKeyword_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralList__Group_2__0__Impl"


    // $ANTLR start "rule__LiteralList__Group_2__1"
    // InternalFortXTrans.g:9818:1: rule__LiteralList__Group_2__1 : rule__LiteralList__Group_2__1__Impl ;
    public final void rule__LiteralList__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9822:1: ( rule__LiteralList__Group_2__1__Impl )
            // InternalFortXTrans.g:9823:2: rule__LiteralList__Group_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__LiteralList__Group_2__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralList__Group_2__1"


    // $ANTLR start "rule__LiteralList__Group_2__1__Impl"
    // InternalFortXTrans.g:9829:1: rule__LiteralList__Group_2__1__Impl : ( ( rule__LiteralList__LitAssignment_2_1 ) ) ;
    public final void rule__LiteralList__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9833:1: ( ( ( rule__LiteralList__LitAssignment_2_1 ) ) )
            // InternalFortXTrans.g:9834:1: ( ( rule__LiteralList__LitAssignment_2_1 ) )
            {
            // InternalFortXTrans.g:9834:1: ( ( rule__LiteralList__LitAssignment_2_1 ) )
            // InternalFortXTrans.g:9835:2: ( rule__LiteralList__LitAssignment_2_1 )
            {
             before(grammarAccess.getLiteralListAccess().getLitAssignment_2_1()); 
            // InternalFortXTrans.g:9836:2: ( rule__LiteralList__LitAssignment_2_1 )
            // InternalFortXTrans.g:9836:3: rule__LiteralList__LitAssignment_2_1
            {
            pushFollow(FOLLOW_2);
            rule__LiteralList__LitAssignment_2_1();

            state._fsp--;


            }

             after(grammarAccess.getLiteralListAccess().getLitAssignment_2_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralList__Group_2__1__Impl"


    // $ANTLR start "rule__Literal__Group_0__0"
    // InternalFortXTrans.g:9845:1: rule__Literal__Group_0__0 : rule__Literal__Group_0__0__Impl rule__Literal__Group_0__1 ;
    public final void rule__Literal__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9849:1: ( rule__Literal__Group_0__0__Impl rule__Literal__Group_0__1 )
            // InternalFortXTrans.g:9850:2: rule__Literal__Group_0__0__Impl rule__Literal__Group_0__1
            {
            pushFollow(FOLLOW_75);
            rule__Literal__Group_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Literal__Group_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Literal__Group_0__0"


    // $ANTLR start "rule__Literal__Group_0__0__Impl"
    // InternalFortXTrans.g:9857:1: rule__Literal__Group_0__0__Impl : ( () ) ;
    public final void rule__Literal__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9861:1: ( ( () ) )
            // InternalFortXTrans.g:9862:1: ( () )
            {
            // InternalFortXTrans.g:9862:1: ( () )
            // InternalFortXTrans.g:9863:2: ()
            {
             before(grammarAccess.getLiteralAccess().getIntConstAction_0_0()); 
            // InternalFortXTrans.g:9864:2: ()
            // InternalFortXTrans.g:9864:3: 
            {
            }

             after(grammarAccess.getLiteralAccess().getIntConstAction_0_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Literal__Group_0__0__Impl"


    // $ANTLR start "rule__Literal__Group_0__1"
    // InternalFortXTrans.g:9872:1: rule__Literal__Group_0__1 : rule__Literal__Group_0__1__Impl ;
    public final void rule__Literal__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9876:1: ( rule__Literal__Group_0__1__Impl )
            // InternalFortXTrans.g:9877:2: rule__Literal__Group_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Literal__Group_0__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Literal__Group_0__1"


    // $ANTLR start "rule__Literal__Group_0__1__Impl"
    // InternalFortXTrans.g:9883:1: rule__Literal__Group_0__1__Impl : ( ( rule__Literal__ValueAssignment_0_1 ) ) ;
    public final void rule__Literal__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9887:1: ( ( ( rule__Literal__ValueAssignment_0_1 ) ) )
            // InternalFortXTrans.g:9888:1: ( ( rule__Literal__ValueAssignment_0_1 ) )
            {
            // InternalFortXTrans.g:9888:1: ( ( rule__Literal__ValueAssignment_0_1 ) )
            // InternalFortXTrans.g:9889:2: ( rule__Literal__ValueAssignment_0_1 )
            {
             before(grammarAccess.getLiteralAccess().getValueAssignment_0_1()); 
            // InternalFortXTrans.g:9890:2: ( rule__Literal__ValueAssignment_0_1 )
            // InternalFortXTrans.g:9890:3: rule__Literal__ValueAssignment_0_1
            {
            pushFollow(FOLLOW_2);
            rule__Literal__ValueAssignment_0_1();

            state._fsp--;


            }

             after(grammarAccess.getLiteralAccess().getValueAssignment_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Literal__Group_0__1__Impl"


    // $ANTLR start "rule__Literal__Group_1__0"
    // InternalFortXTrans.g:9899:1: rule__Literal__Group_1__0 : rule__Literal__Group_1__0__Impl rule__Literal__Group_1__1 ;
    public final void rule__Literal__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9903:1: ( rule__Literal__Group_1__0__Impl rule__Literal__Group_1__1 )
            // InternalFortXTrans.g:9904:2: rule__Literal__Group_1__0__Impl rule__Literal__Group_1__1
            {
            pushFollow(FOLLOW_76);
            rule__Literal__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Literal__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Literal__Group_1__0"


    // $ANTLR start "rule__Literal__Group_1__0__Impl"
    // InternalFortXTrans.g:9911:1: rule__Literal__Group_1__0__Impl : ( () ) ;
    public final void rule__Literal__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9915:1: ( ( () ) )
            // InternalFortXTrans.g:9916:1: ( () )
            {
            // InternalFortXTrans.g:9916:1: ( () )
            // InternalFortXTrans.g:9917:2: ()
            {
             before(grammarAccess.getLiteralAccess().getFloatConstAction_1_0()); 
            // InternalFortXTrans.g:9918:2: ()
            // InternalFortXTrans.g:9918:3: 
            {
            }

             after(grammarAccess.getLiteralAccess().getFloatConstAction_1_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Literal__Group_1__0__Impl"


    // $ANTLR start "rule__Literal__Group_1__1"
    // InternalFortXTrans.g:9926:1: rule__Literal__Group_1__1 : rule__Literal__Group_1__1__Impl ;
    public final void rule__Literal__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9930:1: ( rule__Literal__Group_1__1__Impl )
            // InternalFortXTrans.g:9931:2: rule__Literal__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Literal__Group_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Literal__Group_1__1"


    // $ANTLR start "rule__Literal__Group_1__1__Impl"
    // InternalFortXTrans.g:9937:1: rule__Literal__Group_1__1__Impl : ( ( rule__Literal__ValueAssignment_1_1 ) ) ;
    public final void rule__Literal__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9941:1: ( ( ( rule__Literal__ValueAssignment_1_1 ) ) )
            // InternalFortXTrans.g:9942:1: ( ( rule__Literal__ValueAssignment_1_1 ) )
            {
            // InternalFortXTrans.g:9942:1: ( ( rule__Literal__ValueAssignment_1_1 ) )
            // InternalFortXTrans.g:9943:2: ( rule__Literal__ValueAssignment_1_1 )
            {
             before(grammarAccess.getLiteralAccess().getValueAssignment_1_1()); 
            // InternalFortXTrans.g:9944:2: ( rule__Literal__ValueAssignment_1_1 )
            // InternalFortXTrans.g:9944:3: rule__Literal__ValueAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Literal__ValueAssignment_1_1();

            state._fsp--;


            }

             after(grammarAccess.getLiteralAccess().getValueAssignment_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Literal__Group_1__1__Impl"


    // $ANTLR start "rule__Literal__Group_2__0"
    // InternalFortXTrans.g:9953:1: rule__Literal__Group_2__0 : rule__Literal__Group_2__0__Impl rule__Literal__Group_2__1 ;
    public final void rule__Literal__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9957:1: ( rule__Literal__Group_2__0__Impl rule__Literal__Group_2__1 )
            // InternalFortXTrans.g:9958:2: rule__Literal__Group_2__0__Impl rule__Literal__Group_2__1
            {
            pushFollow(FOLLOW_77);
            rule__Literal__Group_2__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Literal__Group_2__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Literal__Group_2__0"


    // $ANTLR start "rule__Literal__Group_2__0__Impl"
    // InternalFortXTrans.g:9965:1: rule__Literal__Group_2__0__Impl : ( () ) ;
    public final void rule__Literal__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9969:1: ( ( () ) )
            // InternalFortXTrans.g:9970:1: ( () )
            {
            // InternalFortXTrans.g:9970:1: ( () )
            // InternalFortXTrans.g:9971:2: ()
            {
             before(grammarAccess.getLiteralAccess().getStrConstAction_2_0()); 
            // InternalFortXTrans.g:9972:2: ()
            // InternalFortXTrans.g:9972:3: 
            {
            }

             after(grammarAccess.getLiteralAccess().getStrConstAction_2_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Literal__Group_2__0__Impl"


    // $ANTLR start "rule__Literal__Group_2__1"
    // InternalFortXTrans.g:9980:1: rule__Literal__Group_2__1 : rule__Literal__Group_2__1__Impl ;
    public final void rule__Literal__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9984:1: ( rule__Literal__Group_2__1__Impl )
            // InternalFortXTrans.g:9985:2: rule__Literal__Group_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Literal__Group_2__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Literal__Group_2__1"


    // $ANTLR start "rule__Literal__Group_2__1__Impl"
    // InternalFortXTrans.g:9991:1: rule__Literal__Group_2__1__Impl : ( ( rule__Literal__ValueAssignment_2_1 ) ) ;
    public final void rule__Literal__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9995:1: ( ( ( rule__Literal__ValueAssignment_2_1 ) ) )
            // InternalFortXTrans.g:9996:1: ( ( rule__Literal__ValueAssignment_2_1 ) )
            {
            // InternalFortXTrans.g:9996:1: ( ( rule__Literal__ValueAssignment_2_1 ) )
            // InternalFortXTrans.g:9997:2: ( rule__Literal__ValueAssignment_2_1 )
            {
             before(grammarAccess.getLiteralAccess().getValueAssignment_2_1()); 
            // InternalFortXTrans.g:9998:2: ( rule__Literal__ValueAssignment_2_1 )
            // InternalFortXTrans.g:9998:3: rule__Literal__ValueAssignment_2_1
            {
            pushFollow(FOLLOW_2);
            rule__Literal__ValueAssignment_2_1();

            state._fsp--;


            }

             after(grammarAccess.getLiteralAccess().getValueAssignment_2_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Literal__Group_2__1__Impl"


    // $ANTLR start "rule__Literal__Group_3__0"
    // InternalFortXTrans.g:10007:1: rule__Literal__Group_3__0 : rule__Literal__Group_3__0__Impl rule__Literal__Group_3__1 ;
    public final void rule__Literal__Group_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10011:1: ( rule__Literal__Group_3__0__Impl rule__Literal__Group_3__1 )
            // InternalFortXTrans.g:10012:2: rule__Literal__Group_3__0__Impl rule__Literal__Group_3__1
            {
            pushFollow(FOLLOW_74);
            rule__Literal__Group_3__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Literal__Group_3__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Literal__Group_3__0"


    // $ANTLR start "rule__Literal__Group_3__0__Impl"
    // InternalFortXTrans.g:10019:1: rule__Literal__Group_3__0__Impl : ( () ) ;
    public final void rule__Literal__Group_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10023:1: ( ( () ) )
            // InternalFortXTrans.g:10024:1: ( () )
            {
            // InternalFortXTrans.g:10024:1: ( () )
            // InternalFortXTrans.g:10025:2: ()
            {
             before(grammarAccess.getLiteralAccess().getBoolConstAction_3_0()); 
            // InternalFortXTrans.g:10026:2: ()
            // InternalFortXTrans.g:10026:3: 
            {
            }

             after(grammarAccess.getLiteralAccess().getBoolConstAction_3_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Literal__Group_3__0__Impl"


    // $ANTLR start "rule__Literal__Group_3__1"
    // InternalFortXTrans.g:10034:1: rule__Literal__Group_3__1 : rule__Literal__Group_3__1__Impl ;
    public final void rule__Literal__Group_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10038:1: ( rule__Literal__Group_3__1__Impl )
            // InternalFortXTrans.g:10039:2: rule__Literal__Group_3__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Literal__Group_3__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Literal__Group_3__1"


    // $ANTLR start "rule__Literal__Group_3__1__Impl"
    // InternalFortXTrans.g:10045:1: rule__Literal__Group_3__1__Impl : ( ( rule__Literal__Alternatives_3_1 ) ) ;
    public final void rule__Literal__Group_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10049:1: ( ( ( rule__Literal__Alternatives_3_1 ) ) )
            // InternalFortXTrans.g:10050:1: ( ( rule__Literal__Alternatives_3_1 ) )
            {
            // InternalFortXTrans.g:10050:1: ( ( rule__Literal__Alternatives_3_1 ) )
            // InternalFortXTrans.g:10051:2: ( rule__Literal__Alternatives_3_1 )
            {
             before(grammarAccess.getLiteralAccess().getAlternatives_3_1()); 
            // InternalFortXTrans.g:10052:2: ( rule__Literal__Alternatives_3_1 )
            // InternalFortXTrans.g:10052:3: rule__Literal__Alternatives_3_1
            {
            pushFollow(FOLLOW_2);
            rule__Literal__Alternatives_3_1();

            state._fsp--;


            }

             after(grammarAccess.getLiteralAccess().getAlternatives_3_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Literal__Group_3__1__Impl"


    // $ANTLR start "rule__LocalVarDecl__Group_0__0"
    // InternalFortXTrans.g:10061:1: rule__LocalVarDecl__Group_0__0 : rule__LocalVarDecl__Group_0__0__Impl rule__LocalVarDecl__Group_0__1 ;
    public final void rule__LocalVarDecl__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10065:1: ( rule__LocalVarDecl__Group_0__0__Impl rule__LocalVarDecl__Group_0__1 )
            // InternalFortXTrans.g:10066:2: rule__LocalVarDecl__Group_0__0__Impl rule__LocalVarDecl__Group_0__1
            {
            pushFollow(FOLLOW_71);
            rule__LocalVarDecl__Group_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__LocalVarDecl__Group_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_0__0"


    // $ANTLR start "rule__LocalVarDecl__Group_0__0__Impl"
    // InternalFortXTrans.g:10073:1: rule__LocalVarDecl__Group_0__0__Impl : ( ( rule__LocalVarDecl__MutAssignment_0_0 )? ) ;
    public final void rule__LocalVarDecl__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10077:1: ( ( ( rule__LocalVarDecl__MutAssignment_0_0 )? ) )
            // InternalFortXTrans.g:10078:1: ( ( rule__LocalVarDecl__MutAssignment_0_0 )? )
            {
            // InternalFortXTrans.g:10078:1: ( ( rule__LocalVarDecl__MutAssignment_0_0 )? )
            // InternalFortXTrans.g:10079:2: ( rule__LocalVarDecl__MutAssignment_0_0 )?
            {
             before(grammarAccess.getLocalVarDeclAccess().getMutAssignment_0_0()); 
            // InternalFortXTrans.g:10080:2: ( rule__LocalVarDecl__MutAssignment_0_0 )?
            int alt88=2;
            int LA88_0 = input.LA(1);

            if ( (LA88_0==68) ) {
                alt88=1;
            }
            switch (alt88) {
                case 1 :
                    // InternalFortXTrans.g:10080:3: rule__LocalVarDecl__MutAssignment_0_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__LocalVarDecl__MutAssignment_0_0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getLocalVarDeclAccess().getMutAssignment_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_0__0__Impl"


    // $ANTLR start "rule__LocalVarDecl__Group_0__1"
    // InternalFortXTrans.g:10088:1: rule__LocalVarDecl__Group_0__1 : rule__LocalVarDecl__Group_0__1__Impl rule__LocalVarDecl__Group_0__2 ;
    public final void rule__LocalVarDecl__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10092:1: ( rule__LocalVarDecl__Group_0__1__Impl rule__LocalVarDecl__Group_0__2 )
            // InternalFortXTrans.g:10093:2: rule__LocalVarDecl__Group_0__1__Impl rule__LocalVarDecl__Group_0__2
            {
            pushFollow(FOLLOW_72);
            rule__LocalVarDecl__Group_0__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__LocalVarDecl__Group_0__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_0__1"


    // $ANTLR start "rule__LocalVarDecl__Group_0__1__Impl"
    // InternalFortXTrans.g:10100:1: rule__LocalVarDecl__Group_0__1__Impl : ( ( rule__LocalVarDecl__VarsAssignment_0_1 ) ) ;
    public final void rule__LocalVarDecl__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10104:1: ( ( ( rule__LocalVarDecl__VarsAssignment_0_1 ) ) )
            // InternalFortXTrans.g:10105:1: ( ( rule__LocalVarDecl__VarsAssignment_0_1 ) )
            {
            // InternalFortXTrans.g:10105:1: ( ( rule__LocalVarDecl__VarsAssignment_0_1 ) )
            // InternalFortXTrans.g:10106:2: ( rule__LocalVarDecl__VarsAssignment_0_1 )
            {
             before(grammarAccess.getLocalVarDeclAccess().getVarsAssignment_0_1()); 
            // InternalFortXTrans.g:10107:2: ( rule__LocalVarDecl__VarsAssignment_0_1 )
            // InternalFortXTrans.g:10107:3: rule__LocalVarDecl__VarsAssignment_0_1
            {
            pushFollow(FOLLOW_2);
            rule__LocalVarDecl__VarsAssignment_0_1();

            state._fsp--;


            }

             after(grammarAccess.getLocalVarDeclAccess().getVarsAssignment_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_0__1__Impl"


    // $ANTLR start "rule__LocalVarDecl__Group_0__2"
    // InternalFortXTrans.g:10115:1: rule__LocalVarDecl__Group_0__2 : rule__LocalVarDecl__Group_0__2__Impl rule__LocalVarDecl__Group_0__3 ;
    public final void rule__LocalVarDecl__Group_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10119:1: ( rule__LocalVarDecl__Group_0__2__Impl rule__LocalVarDecl__Group_0__3 )
            // InternalFortXTrans.g:10120:2: rule__LocalVarDecl__Group_0__2__Impl rule__LocalVarDecl__Group_0__3
            {
            pushFollow(FOLLOW_32);
            rule__LocalVarDecl__Group_0__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__LocalVarDecl__Group_0__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_0__2"


    // $ANTLR start "rule__LocalVarDecl__Group_0__2__Impl"
    // InternalFortXTrans.g:10127:1: rule__LocalVarDecl__Group_0__2__Impl : ( '=' ) ;
    public final void rule__LocalVarDecl__Group_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10131:1: ( ( '=' ) )
            // InternalFortXTrans.g:10132:1: ( '=' )
            {
            // InternalFortXTrans.g:10132:1: ( '=' )
            // InternalFortXTrans.g:10133:2: '='
            {
             before(grammarAccess.getLocalVarDeclAccess().getEqualsSignKeyword_0_2()); 
            match(input,53,FOLLOW_2); 
             after(grammarAccess.getLocalVarDeclAccess().getEqualsSignKeyword_0_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_0__2__Impl"


    // $ANTLR start "rule__LocalVarDecl__Group_0__3"
    // InternalFortXTrans.g:10142:1: rule__LocalVarDecl__Group_0__3 : rule__LocalVarDecl__Group_0__3__Impl ;
    public final void rule__LocalVarDecl__Group_0__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10146:1: ( rule__LocalVarDecl__Group_0__3__Impl )
            // InternalFortXTrans.g:10147:2: rule__LocalVarDecl__Group_0__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__LocalVarDecl__Group_0__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_0__3"


    // $ANTLR start "rule__LocalVarDecl__Group_0__3__Impl"
    // InternalFortXTrans.g:10153:1: rule__LocalVarDecl__Group_0__3__Impl : ( ( rule__LocalVarDecl__InitAssignment_0_3 ) ) ;
    public final void rule__LocalVarDecl__Group_0__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10157:1: ( ( ( rule__LocalVarDecl__InitAssignment_0_3 ) ) )
            // InternalFortXTrans.g:10158:1: ( ( rule__LocalVarDecl__InitAssignment_0_3 ) )
            {
            // InternalFortXTrans.g:10158:1: ( ( rule__LocalVarDecl__InitAssignment_0_3 ) )
            // InternalFortXTrans.g:10159:2: ( rule__LocalVarDecl__InitAssignment_0_3 )
            {
             before(grammarAccess.getLocalVarDeclAccess().getInitAssignment_0_3()); 
            // InternalFortXTrans.g:10160:2: ( rule__LocalVarDecl__InitAssignment_0_3 )
            // InternalFortXTrans.g:10160:3: rule__LocalVarDecl__InitAssignment_0_3
            {
            pushFollow(FOLLOW_2);
            rule__LocalVarDecl__InitAssignment_0_3();

            state._fsp--;


            }

             after(grammarAccess.getLocalVarDeclAccess().getInitAssignment_0_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_0__3__Impl"


    // $ANTLR start "rule__LocalVarDecl__Group_1__0"
    // InternalFortXTrans.g:10169:1: rule__LocalVarDecl__Group_1__0 : rule__LocalVarDecl__Group_1__0__Impl rule__LocalVarDecl__Group_1__1 ;
    public final void rule__LocalVarDecl__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10173:1: ( rule__LocalVarDecl__Group_1__0__Impl rule__LocalVarDecl__Group_1__1 )
            // InternalFortXTrans.g:10174:2: rule__LocalVarDecl__Group_1__0__Impl rule__LocalVarDecl__Group_1__1
            {
            pushFollow(FOLLOW_72);
            rule__LocalVarDecl__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__LocalVarDecl__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_1__0"


    // $ANTLR start "rule__LocalVarDecl__Group_1__0__Impl"
    // InternalFortXTrans.g:10181:1: rule__LocalVarDecl__Group_1__0__Impl : ( ( rule__LocalVarDecl__IdtupAssignment_1_0 ) ) ;
    public final void rule__LocalVarDecl__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10185:1: ( ( ( rule__LocalVarDecl__IdtupAssignment_1_0 ) ) )
            // InternalFortXTrans.g:10186:1: ( ( rule__LocalVarDecl__IdtupAssignment_1_0 ) )
            {
            // InternalFortXTrans.g:10186:1: ( ( rule__LocalVarDecl__IdtupAssignment_1_0 ) )
            // InternalFortXTrans.g:10187:2: ( rule__LocalVarDecl__IdtupAssignment_1_0 )
            {
             before(grammarAccess.getLocalVarDeclAccess().getIdtupAssignment_1_0()); 
            // InternalFortXTrans.g:10188:2: ( rule__LocalVarDecl__IdtupAssignment_1_0 )
            // InternalFortXTrans.g:10188:3: rule__LocalVarDecl__IdtupAssignment_1_0
            {
            pushFollow(FOLLOW_2);
            rule__LocalVarDecl__IdtupAssignment_1_0();

            state._fsp--;


            }

             after(grammarAccess.getLocalVarDeclAccess().getIdtupAssignment_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_1__0__Impl"


    // $ANTLR start "rule__LocalVarDecl__Group_1__1"
    // InternalFortXTrans.g:10196:1: rule__LocalVarDecl__Group_1__1 : rule__LocalVarDecl__Group_1__1__Impl rule__LocalVarDecl__Group_1__2 ;
    public final void rule__LocalVarDecl__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10200:1: ( rule__LocalVarDecl__Group_1__1__Impl rule__LocalVarDecl__Group_1__2 )
            // InternalFortXTrans.g:10201:2: rule__LocalVarDecl__Group_1__1__Impl rule__LocalVarDecl__Group_1__2
            {
            pushFollow(FOLLOW_32);
            rule__LocalVarDecl__Group_1__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__LocalVarDecl__Group_1__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_1__1"


    // $ANTLR start "rule__LocalVarDecl__Group_1__1__Impl"
    // InternalFortXTrans.g:10208:1: rule__LocalVarDecl__Group_1__1__Impl : ( '=' ) ;
    public final void rule__LocalVarDecl__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10212:1: ( ( '=' ) )
            // InternalFortXTrans.g:10213:1: ( '=' )
            {
            // InternalFortXTrans.g:10213:1: ( '=' )
            // InternalFortXTrans.g:10214:2: '='
            {
             before(grammarAccess.getLocalVarDeclAccess().getEqualsSignKeyword_1_1()); 
            match(input,53,FOLLOW_2); 
             after(grammarAccess.getLocalVarDeclAccess().getEqualsSignKeyword_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_1__1__Impl"


    // $ANTLR start "rule__LocalVarDecl__Group_1__2"
    // InternalFortXTrans.g:10223:1: rule__LocalVarDecl__Group_1__2 : rule__LocalVarDecl__Group_1__2__Impl ;
    public final void rule__LocalVarDecl__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10227:1: ( rule__LocalVarDecl__Group_1__2__Impl )
            // InternalFortXTrans.g:10228:2: rule__LocalVarDecl__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__LocalVarDecl__Group_1__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_1__2"


    // $ANTLR start "rule__LocalVarDecl__Group_1__2__Impl"
    // InternalFortXTrans.g:10234:1: rule__LocalVarDecl__Group_1__2__Impl : ( ( rule__LocalVarDecl__InitAssignment_1_2 ) ) ;
    public final void rule__LocalVarDecl__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10238:1: ( ( ( rule__LocalVarDecl__InitAssignment_1_2 ) ) )
            // InternalFortXTrans.g:10239:1: ( ( rule__LocalVarDecl__InitAssignment_1_2 ) )
            {
            // InternalFortXTrans.g:10239:1: ( ( rule__LocalVarDecl__InitAssignment_1_2 ) )
            // InternalFortXTrans.g:10240:2: ( rule__LocalVarDecl__InitAssignment_1_2 )
            {
             before(grammarAccess.getLocalVarDeclAccess().getInitAssignment_1_2()); 
            // InternalFortXTrans.g:10241:2: ( rule__LocalVarDecl__InitAssignment_1_2 )
            // InternalFortXTrans.g:10241:3: rule__LocalVarDecl__InitAssignment_1_2
            {
            pushFollow(FOLLOW_2);
            rule__LocalVarDecl__InitAssignment_1_2();

            state._fsp--;


            }

             after(grammarAccess.getLocalVarDeclAccess().getInitAssignment_1_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_1__2__Impl"


    // $ANTLR start "rule__LocalVarDecl__Group_2__0"
    // InternalFortXTrans.g:10250:1: rule__LocalVarDecl__Group_2__0 : rule__LocalVarDecl__Group_2__0__Impl rule__LocalVarDecl__Group_2__1 ;
    public final void rule__LocalVarDecl__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10254:1: ( rule__LocalVarDecl__Group_2__0__Impl rule__LocalVarDecl__Group_2__1 )
            // InternalFortXTrans.g:10255:2: rule__LocalVarDecl__Group_2__0__Impl rule__LocalVarDecl__Group_2__1
            {
            pushFollow(FOLLOW_71);
            rule__LocalVarDecl__Group_2__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__LocalVarDecl__Group_2__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_2__0"


    // $ANTLR start "rule__LocalVarDecl__Group_2__0__Impl"
    // InternalFortXTrans.g:10262:1: rule__LocalVarDecl__Group_2__0__Impl : ( ( rule__LocalVarDecl__MutAssignment_2_0 )? ) ;
    public final void rule__LocalVarDecl__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10266:1: ( ( ( rule__LocalVarDecl__MutAssignment_2_0 )? ) )
            // InternalFortXTrans.g:10267:1: ( ( rule__LocalVarDecl__MutAssignment_2_0 )? )
            {
            // InternalFortXTrans.g:10267:1: ( ( rule__LocalVarDecl__MutAssignment_2_0 )? )
            // InternalFortXTrans.g:10268:2: ( rule__LocalVarDecl__MutAssignment_2_0 )?
            {
             before(grammarAccess.getLocalVarDeclAccess().getMutAssignment_2_0()); 
            // InternalFortXTrans.g:10269:2: ( rule__LocalVarDecl__MutAssignment_2_0 )?
            int alt89=2;
            int LA89_0 = input.LA(1);

            if ( (LA89_0==68) ) {
                alt89=1;
            }
            switch (alt89) {
                case 1 :
                    // InternalFortXTrans.g:10269:3: rule__LocalVarDecl__MutAssignment_2_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__LocalVarDecl__MutAssignment_2_0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getLocalVarDeclAccess().getMutAssignment_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_2__0__Impl"


    // $ANTLR start "rule__LocalVarDecl__Group_2__1"
    // InternalFortXTrans.g:10277:1: rule__LocalVarDecl__Group_2__1 : rule__LocalVarDecl__Group_2__1__Impl rule__LocalVarDecl__Group_2__2 ;
    public final void rule__LocalVarDecl__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10281:1: ( rule__LocalVarDecl__Group_2__1__Impl rule__LocalVarDecl__Group_2__2 )
            // InternalFortXTrans.g:10282:2: rule__LocalVarDecl__Group_2__1__Impl rule__LocalVarDecl__Group_2__2
            {
            pushFollow(FOLLOW_26);
            rule__LocalVarDecl__Group_2__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__LocalVarDecl__Group_2__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_2__1"


    // $ANTLR start "rule__LocalVarDecl__Group_2__1__Impl"
    // InternalFortXTrans.g:10289:1: rule__LocalVarDecl__Group_2__1__Impl : ( ( rule__LocalVarDecl__IdtupAssignment_2_1 ) ) ;
    public final void rule__LocalVarDecl__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10293:1: ( ( ( rule__LocalVarDecl__IdtupAssignment_2_1 ) ) )
            // InternalFortXTrans.g:10294:1: ( ( rule__LocalVarDecl__IdtupAssignment_2_1 ) )
            {
            // InternalFortXTrans.g:10294:1: ( ( rule__LocalVarDecl__IdtupAssignment_2_1 ) )
            // InternalFortXTrans.g:10295:2: ( rule__LocalVarDecl__IdtupAssignment_2_1 )
            {
             before(grammarAccess.getLocalVarDeclAccess().getIdtupAssignment_2_1()); 
            // InternalFortXTrans.g:10296:2: ( rule__LocalVarDecl__IdtupAssignment_2_1 )
            // InternalFortXTrans.g:10296:3: rule__LocalVarDecl__IdtupAssignment_2_1
            {
            pushFollow(FOLLOW_2);
            rule__LocalVarDecl__IdtupAssignment_2_1();

            state._fsp--;


            }

             after(grammarAccess.getLocalVarDeclAccess().getIdtupAssignment_2_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_2__1__Impl"


    // $ANTLR start "rule__LocalVarDecl__Group_2__2"
    // InternalFortXTrans.g:10304:1: rule__LocalVarDecl__Group_2__2 : rule__LocalVarDecl__Group_2__2__Impl rule__LocalVarDecl__Group_2__3 ;
    public final void rule__LocalVarDecl__Group_2__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10308:1: ( rule__LocalVarDecl__Group_2__2__Impl rule__LocalVarDecl__Group_2__3 )
            // InternalFortXTrans.g:10309:2: rule__LocalVarDecl__Group_2__2__Impl rule__LocalVarDecl__Group_2__3
            {
            pushFollow(FOLLOW_5);
            rule__LocalVarDecl__Group_2__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__LocalVarDecl__Group_2__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_2__2"


    // $ANTLR start "rule__LocalVarDecl__Group_2__2__Impl"
    // InternalFortXTrans.g:10316:1: rule__LocalVarDecl__Group_2__2__Impl : ( ':' ) ;
    public final void rule__LocalVarDecl__Group_2__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10320:1: ( ( ':' ) )
            // InternalFortXTrans.g:10321:1: ( ':' )
            {
            // InternalFortXTrans.g:10321:1: ( ':' )
            // InternalFortXTrans.g:10322:2: ':'
            {
             before(grammarAccess.getLocalVarDeclAccess().getColonKeyword_2_2()); 
            match(input,35,FOLLOW_2); 
             after(grammarAccess.getLocalVarDeclAccess().getColonKeyword_2_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_2__2__Impl"


    // $ANTLR start "rule__LocalVarDecl__Group_2__3"
    // InternalFortXTrans.g:10331:1: rule__LocalVarDecl__Group_2__3 : rule__LocalVarDecl__Group_2__3__Impl rule__LocalVarDecl__Group_2__4 ;
    public final void rule__LocalVarDecl__Group_2__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10335:1: ( rule__LocalVarDecl__Group_2__3__Impl rule__LocalVarDecl__Group_2__4 )
            // InternalFortXTrans.g:10336:2: rule__LocalVarDecl__Group_2__3__Impl rule__LocalVarDecl__Group_2__4
            {
            pushFollow(FOLLOW_17);
            rule__LocalVarDecl__Group_2__3__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__LocalVarDecl__Group_2__4();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_2__3"


    // $ANTLR start "rule__LocalVarDecl__Group_2__3__Impl"
    // InternalFortXTrans.g:10343:1: rule__LocalVarDecl__Group_2__3__Impl : ( ( rule__LocalVarDecl__TypeAssignment_2_3 ) ) ;
    public final void rule__LocalVarDecl__Group_2__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10347:1: ( ( ( rule__LocalVarDecl__TypeAssignment_2_3 ) ) )
            // InternalFortXTrans.g:10348:1: ( ( rule__LocalVarDecl__TypeAssignment_2_3 ) )
            {
            // InternalFortXTrans.g:10348:1: ( ( rule__LocalVarDecl__TypeAssignment_2_3 ) )
            // InternalFortXTrans.g:10349:2: ( rule__LocalVarDecl__TypeAssignment_2_3 )
            {
             before(grammarAccess.getLocalVarDeclAccess().getTypeAssignment_2_3()); 
            // InternalFortXTrans.g:10350:2: ( rule__LocalVarDecl__TypeAssignment_2_3 )
            // InternalFortXTrans.g:10350:3: rule__LocalVarDecl__TypeAssignment_2_3
            {
            pushFollow(FOLLOW_2);
            rule__LocalVarDecl__TypeAssignment_2_3();

            state._fsp--;


            }

             after(grammarAccess.getLocalVarDeclAccess().getTypeAssignment_2_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_2__3__Impl"


    // $ANTLR start "rule__LocalVarDecl__Group_2__4"
    // InternalFortXTrans.g:10358:1: rule__LocalVarDecl__Group_2__4 : rule__LocalVarDecl__Group_2__4__Impl rule__LocalVarDecl__Group_2__5 ;
    public final void rule__LocalVarDecl__Group_2__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10362:1: ( rule__LocalVarDecl__Group_2__4__Impl rule__LocalVarDecl__Group_2__5 )
            // InternalFortXTrans.g:10363:2: rule__LocalVarDecl__Group_2__4__Impl rule__LocalVarDecl__Group_2__5
            {
            pushFollow(FOLLOW_72);
            rule__LocalVarDecl__Group_2__4__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__LocalVarDecl__Group_2__5();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_2__4"


    // $ANTLR start "rule__LocalVarDecl__Group_2__4__Impl"
    // InternalFortXTrans.g:10370:1: rule__LocalVarDecl__Group_2__4__Impl : ( RULE_DOTS ) ;
    public final void rule__LocalVarDecl__Group_2__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10374:1: ( ( RULE_DOTS ) )
            // InternalFortXTrans.g:10375:1: ( RULE_DOTS )
            {
            // InternalFortXTrans.g:10375:1: ( RULE_DOTS )
            // InternalFortXTrans.g:10376:2: RULE_DOTS
            {
             before(grammarAccess.getLocalVarDeclAccess().getDOTSTerminalRuleCall_2_4()); 
            match(input,RULE_DOTS,FOLLOW_2); 
             after(grammarAccess.getLocalVarDeclAccess().getDOTSTerminalRuleCall_2_4()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_2__4__Impl"


    // $ANTLR start "rule__LocalVarDecl__Group_2__5"
    // InternalFortXTrans.g:10385:1: rule__LocalVarDecl__Group_2__5 : rule__LocalVarDecl__Group_2__5__Impl rule__LocalVarDecl__Group_2__6 ;
    public final void rule__LocalVarDecl__Group_2__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10389:1: ( rule__LocalVarDecl__Group_2__5__Impl rule__LocalVarDecl__Group_2__6 )
            // InternalFortXTrans.g:10390:2: rule__LocalVarDecl__Group_2__5__Impl rule__LocalVarDecl__Group_2__6
            {
            pushFollow(FOLLOW_32);
            rule__LocalVarDecl__Group_2__5__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__LocalVarDecl__Group_2__6();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_2__5"


    // $ANTLR start "rule__LocalVarDecl__Group_2__5__Impl"
    // InternalFortXTrans.g:10397:1: rule__LocalVarDecl__Group_2__5__Impl : ( '=' ) ;
    public final void rule__LocalVarDecl__Group_2__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10401:1: ( ( '=' ) )
            // InternalFortXTrans.g:10402:1: ( '=' )
            {
            // InternalFortXTrans.g:10402:1: ( '=' )
            // InternalFortXTrans.g:10403:2: '='
            {
             before(grammarAccess.getLocalVarDeclAccess().getEqualsSignKeyword_2_5()); 
            match(input,53,FOLLOW_2); 
             after(grammarAccess.getLocalVarDeclAccess().getEqualsSignKeyword_2_5()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_2__5__Impl"


    // $ANTLR start "rule__LocalVarDecl__Group_2__6"
    // InternalFortXTrans.g:10412:1: rule__LocalVarDecl__Group_2__6 : rule__LocalVarDecl__Group_2__6__Impl ;
    public final void rule__LocalVarDecl__Group_2__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10416:1: ( rule__LocalVarDecl__Group_2__6__Impl )
            // InternalFortXTrans.g:10417:2: rule__LocalVarDecl__Group_2__6__Impl
            {
            pushFollow(FOLLOW_2);
            rule__LocalVarDecl__Group_2__6__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_2__6"


    // $ANTLR start "rule__LocalVarDecl__Group_2__6__Impl"
    // InternalFortXTrans.g:10423:1: rule__LocalVarDecl__Group_2__6__Impl : ( ( rule__LocalVarDecl__InitAssignment_2_6 ) ) ;
    public final void rule__LocalVarDecl__Group_2__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10427:1: ( ( ( rule__LocalVarDecl__InitAssignment_2_6 ) ) )
            // InternalFortXTrans.g:10428:1: ( ( rule__LocalVarDecl__InitAssignment_2_6 ) )
            {
            // InternalFortXTrans.g:10428:1: ( ( rule__LocalVarDecl__InitAssignment_2_6 ) )
            // InternalFortXTrans.g:10429:2: ( rule__LocalVarDecl__InitAssignment_2_6 )
            {
             before(grammarAccess.getLocalVarDeclAccess().getInitAssignment_2_6()); 
            // InternalFortXTrans.g:10430:2: ( rule__LocalVarDecl__InitAssignment_2_6 )
            // InternalFortXTrans.g:10430:3: rule__LocalVarDecl__InitAssignment_2_6
            {
            pushFollow(FOLLOW_2);
            rule__LocalVarDecl__InitAssignment_2_6();

            state._fsp--;


            }

             after(grammarAccess.getLocalVarDeclAccess().getInitAssignment_2_6()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_2__6__Impl"


    // $ANTLR start "rule__LocalVarDecl__Group_3__0"
    // InternalFortXTrans.g:10439:1: rule__LocalVarDecl__Group_3__0 : rule__LocalVarDecl__Group_3__0__Impl rule__LocalVarDecl__Group_3__1 ;
    public final void rule__LocalVarDecl__Group_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10443:1: ( rule__LocalVarDecl__Group_3__0__Impl rule__LocalVarDecl__Group_3__1 )
            // InternalFortXTrans.g:10444:2: rule__LocalVarDecl__Group_3__0__Impl rule__LocalVarDecl__Group_3__1
            {
            pushFollow(FOLLOW_71);
            rule__LocalVarDecl__Group_3__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__LocalVarDecl__Group_3__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_3__0"


    // $ANTLR start "rule__LocalVarDecl__Group_3__0__Impl"
    // InternalFortXTrans.g:10451:1: rule__LocalVarDecl__Group_3__0__Impl : ( ( rule__LocalVarDecl__MutAssignment_3_0 )? ) ;
    public final void rule__LocalVarDecl__Group_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10455:1: ( ( ( rule__LocalVarDecl__MutAssignment_3_0 )? ) )
            // InternalFortXTrans.g:10456:1: ( ( rule__LocalVarDecl__MutAssignment_3_0 )? )
            {
            // InternalFortXTrans.g:10456:1: ( ( rule__LocalVarDecl__MutAssignment_3_0 )? )
            // InternalFortXTrans.g:10457:2: ( rule__LocalVarDecl__MutAssignment_3_0 )?
            {
             before(grammarAccess.getLocalVarDeclAccess().getMutAssignment_3_0()); 
            // InternalFortXTrans.g:10458:2: ( rule__LocalVarDecl__MutAssignment_3_0 )?
            int alt90=2;
            int LA90_0 = input.LA(1);

            if ( (LA90_0==68) ) {
                alt90=1;
            }
            switch (alt90) {
                case 1 :
                    // InternalFortXTrans.g:10458:3: rule__LocalVarDecl__MutAssignment_3_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__LocalVarDecl__MutAssignment_3_0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getLocalVarDeclAccess().getMutAssignment_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_3__0__Impl"


    // $ANTLR start "rule__LocalVarDecl__Group_3__1"
    // InternalFortXTrans.g:10466:1: rule__LocalVarDecl__Group_3__1 : rule__LocalVarDecl__Group_3__1__Impl rule__LocalVarDecl__Group_3__2 ;
    public final void rule__LocalVarDecl__Group_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10470:1: ( rule__LocalVarDecl__Group_3__1__Impl rule__LocalVarDecl__Group_3__2 )
            // InternalFortXTrans.g:10471:2: rule__LocalVarDecl__Group_3__1__Impl rule__LocalVarDecl__Group_3__2
            {
            pushFollow(FOLLOW_26);
            rule__LocalVarDecl__Group_3__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__LocalVarDecl__Group_3__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_3__1"


    // $ANTLR start "rule__LocalVarDecl__Group_3__1__Impl"
    // InternalFortXTrans.g:10478:1: rule__LocalVarDecl__Group_3__1__Impl : ( ( rule__LocalVarDecl__IdtupAssignment_3_1 ) ) ;
    public final void rule__LocalVarDecl__Group_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10482:1: ( ( ( rule__LocalVarDecl__IdtupAssignment_3_1 ) ) )
            // InternalFortXTrans.g:10483:1: ( ( rule__LocalVarDecl__IdtupAssignment_3_1 ) )
            {
            // InternalFortXTrans.g:10483:1: ( ( rule__LocalVarDecl__IdtupAssignment_3_1 ) )
            // InternalFortXTrans.g:10484:2: ( rule__LocalVarDecl__IdtupAssignment_3_1 )
            {
             before(grammarAccess.getLocalVarDeclAccess().getIdtupAssignment_3_1()); 
            // InternalFortXTrans.g:10485:2: ( rule__LocalVarDecl__IdtupAssignment_3_1 )
            // InternalFortXTrans.g:10485:3: rule__LocalVarDecl__IdtupAssignment_3_1
            {
            pushFollow(FOLLOW_2);
            rule__LocalVarDecl__IdtupAssignment_3_1();

            state._fsp--;


            }

             after(grammarAccess.getLocalVarDeclAccess().getIdtupAssignment_3_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_3__1__Impl"


    // $ANTLR start "rule__LocalVarDecl__Group_3__2"
    // InternalFortXTrans.g:10493:1: rule__LocalVarDecl__Group_3__2 : rule__LocalVarDecl__Group_3__2__Impl rule__LocalVarDecl__Group_3__3 ;
    public final void rule__LocalVarDecl__Group_3__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10497:1: ( rule__LocalVarDecl__Group_3__2__Impl rule__LocalVarDecl__Group_3__3 )
            // InternalFortXTrans.g:10498:2: rule__LocalVarDecl__Group_3__2__Impl rule__LocalVarDecl__Group_3__3
            {
            pushFollow(FOLLOW_27);
            rule__LocalVarDecl__Group_3__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__LocalVarDecl__Group_3__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_3__2"


    // $ANTLR start "rule__LocalVarDecl__Group_3__2__Impl"
    // InternalFortXTrans.g:10505:1: rule__LocalVarDecl__Group_3__2__Impl : ( ':' ) ;
    public final void rule__LocalVarDecl__Group_3__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10509:1: ( ( ':' ) )
            // InternalFortXTrans.g:10510:1: ( ':' )
            {
            // InternalFortXTrans.g:10510:1: ( ':' )
            // InternalFortXTrans.g:10511:2: ':'
            {
             before(grammarAccess.getLocalVarDeclAccess().getColonKeyword_3_2()); 
            match(input,35,FOLLOW_2); 
             after(grammarAccess.getLocalVarDeclAccess().getColonKeyword_3_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_3__2__Impl"


    // $ANTLR start "rule__LocalVarDecl__Group_3__3"
    // InternalFortXTrans.g:10520:1: rule__LocalVarDecl__Group_3__3 : rule__LocalVarDecl__Group_3__3__Impl rule__LocalVarDecl__Group_3__4 ;
    public final void rule__LocalVarDecl__Group_3__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10524:1: ( rule__LocalVarDecl__Group_3__3__Impl rule__LocalVarDecl__Group_3__4 )
            // InternalFortXTrans.g:10525:2: rule__LocalVarDecl__Group_3__3__Impl rule__LocalVarDecl__Group_3__4
            {
            pushFollow(FOLLOW_72);
            rule__LocalVarDecl__Group_3__3__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__LocalVarDecl__Group_3__4();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_3__3"


    // $ANTLR start "rule__LocalVarDecl__Group_3__3__Impl"
    // InternalFortXTrans.g:10532:1: rule__LocalVarDecl__Group_3__3__Impl : ( ( rule__LocalVarDecl__TuptypeAssignment_3_3 ) ) ;
    public final void rule__LocalVarDecl__Group_3__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10536:1: ( ( ( rule__LocalVarDecl__TuptypeAssignment_3_3 ) ) )
            // InternalFortXTrans.g:10537:1: ( ( rule__LocalVarDecl__TuptypeAssignment_3_3 ) )
            {
            // InternalFortXTrans.g:10537:1: ( ( rule__LocalVarDecl__TuptypeAssignment_3_3 ) )
            // InternalFortXTrans.g:10538:2: ( rule__LocalVarDecl__TuptypeAssignment_3_3 )
            {
             before(grammarAccess.getLocalVarDeclAccess().getTuptypeAssignment_3_3()); 
            // InternalFortXTrans.g:10539:2: ( rule__LocalVarDecl__TuptypeAssignment_3_3 )
            // InternalFortXTrans.g:10539:3: rule__LocalVarDecl__TuptypeAssignment_3_3
            {
            pushFollow(FOLLOW_2);
            rule__LocalVarDecl__TuptypeAssignment_3_3();

            state._fsp--;


            }

             after(grammarAccess.getLocalVarDeclAccess().getTuptypeAssignment_3_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_3__3__Impl"


    // $ANTLR start "rule__LocalVarDecl__Group_3__4"
    // InternalFortXTrans.g:10547:1: rule__LocalVarDecl__Group_3__4 : rule__LocalVarDecl__Group_3__4__Impl rule__LocalVarDecl__Group_3__5 ;
    public final void rule__LocalVarDecl__Group_3__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10551:1: ( rule__LocalVarDecl__Group_3__4__Impl rule__LocalVarDecl__Group_3__5 )
            // InternalFortXTrans.g:10552:2: rule__LocalVarDecl__Group_3__4__Impl rule__LocalVarDecl__Group_3__5
            {
            pushFollow(FOLLOW_32);
            rule__LocalVarDecl__Group_3__4__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__LocalVarDecl__Group_3__5();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_3__4"


    // $ANTLR start "rule__LocalVarDecl__Group_3__4__Impl"
    // InternalFortXTrans.g:10559:1: rule__LocalVarDecl__Group_3__4__Impl : ( '=' ) ;
    public final void rule__LocalVarDecl__Group_3__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10563:1: ( ( '=' ) )
            // InternalFortXTrans.g:10564:1: ( '=' )
            {
            // InternalFortXTrans.g:10564:1: ( '=' )
            // InternalFortXTrans.g:10565:2: '='
            {
             before(grammarAccess.getLocalVarDeclAccess().getEqualsSignKeyword_3_4()); 
            match(input,53,FOLLOW_2); 
             after(grammarAccess.getLocalVarDeclAccess().getEqualsSignKeyword_3_4()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_3__4__Impl"


    // $ANTLR start "rule__LocalVarDecl__Group_3__5"
    // InternalFortXTrans.g:10574:1: rule__LocalVarDecl__Group_3__5 : rule__LocalVarDecl__Group_3__5__Impl ;
    public final void rule__LocalVarDecl__Group_3__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10578:1: ( rule__LocalVarDecl__Group_3__5__Impl )
            // InternalFortXTrans.g:10579:2: rule__LocalVarDecl__Group_3__5__Impl
            {
            pushFollow(FOLLOW_2);
            rule__LocalVarDecl__Group_3__5__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_3__5"


    // $ANTLR start "rule__LocalVarDecl__Group_3__5__Impl"
    // InternalFortXTrans.g:10585:1: rule__LocalVarDecl__Group_3__5__Impl : ( ( rule__LocalVarDecl__InitAssignment_3_5 ) ) ;
    public final void rule__LocalVarDecl__Group_3__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10589:1: ( ( ( rule__LocalVarDecl__InitAssignment_3_5 ) ) )
            // InternalFortXTrans.g:10590:1: ( ( rule__LocalVarDecl__InitAssignment_3_5 ) )
            {
            // InternalFortXTrans.g:10590:1: ( ( rule__LocalVarDecl__InitAssignment_3_5 ) )
            // InternalFortXTrans.g:10591:2: ( rule__LocalVarDecl__InitAssignment_3_5 )
            {
             before(grammarAccess.getLocalVarDeclAccess().getInitAssignment_3_5()); 
            // InternalFortXTrans.g:10592:2: ( rule__LocalVarDecl__InitAssignment_3_5 )
            // InternalFortXTrans.g:10592:3: rule__LocalVarDecl__InitAssignment_3_5
            {
            pushFollow(FOLLOW_2);
            rule__LocalVarDecl__InitAssignment_3_5();

            state._fsp--;


            }

             after(grammarAccess.getLocalVarDeclAccess().getInitAssignment_3_5()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_3__5__Impl"


    // $ANTLR start "rule__Component__NameAssignment_1"
    // InternalFortXTrans.g:10601:1: rule__Component__NameAssignment_1 : ( RULE_ID ) ;
    public final void rule__Component__NameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10605:1: ( ( RULE_ID ) )
            // InternalFortXTrans.g:10606:2: ( RULE_ID )
            {
            // InternalFortXTrans.g:10606:2: ( RULE_ID )
            // InternalFortXTrans.g:10607:3: RULE_ID
            {
             before(grammarAccess.getComponentAccess().getNameIDTerminalRuleCall_1_0()); 
            match(input,RULE_ID,FOLLOW_2); 
             after(grammarAccess.getComponentAccess().getNameIDTerminalRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Component__NameAssignment_1"


    // $ANTLR start "rule__Component__ImportsAssignment_2"
    // InternalFortXTrans.g:10616:1: rule__Component__ImportsAssignment_2 : ( ruleImport ) ;
    public final void rule__Component__ImportsAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10620:1: ( ( ruleImport ) )
            // InternalFortXTrans.g:10621:2: ( ruleImport )
            {
            // InternalFortXTrans.g:10621:2: ( ruleImport )
            // InternalFortXTrans.g:10622:3: ruleImport
            {
             before(grammarAccess.getComponentAccess().getImportsImportParserRuleCall_2_0()); 
            pushFollow(FOLLOW_2);
            ruleImport();

            state._fsp--;

             after(grammarAccess.getComponentAccess().getImportsImportParserRuleCall_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Component__ImportsAssignment_2"


    // $ANTLR start "rule__Component__ExportsAssignment_3"
    // InternalFortXTrans.g:10631:1: rule__Component__ExportsAssignment_3 : ( ruleExport ) ;
    public final void rule__Component__ExportsAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10635:1: ( ( ruleExport ) )
            // InternalFortXTrans.g:10636:2: ( ruleExport )
            {
            // InternalFortXTrans.g:10636:2: ( ruleExport )
            // InternalFortXTrans.g:10637:3: ruleExport
            {
             before(grammarAccess.getComponentAccess().getExportsExportParserRuleCall_3_0()); 
            pushFollow(FOLLOW_2);
            ruleExport();

            state._fsp--;

             after(grammarAccess.getComponentAccess().getExportsExportParserRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Component__ExportsAssignment_3"


    // $ANTLR start "rule__Component__DeclsAssignment_4"
    // InternalFortXTrans.g:10646:1: rule__Component__DeclsAssignment_4 : ( ruleDecls ) ;
    public final void rule__Component__DeclsAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10650:1: ( ( ruleDecls ) )
            // InternalFortXTrans.g:10651:2: ( ruleDecls )
            {
            // InternalFortXTrans.g:10651:2: ( ruleDecls )
            // InternalFortXTrans.g:10652:3: ruleDecls
            {
             before(grammarAccess.getComponentAccess().getDeclsDeclsParserRuleCall_4_0()); 
            pushFollow(FOLLOW_2);
            ruleDecls();

            state._fsp--;

             after(grammarAccess.getComponentAccess().getDeclsDeclsParserRuleCall_4_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Component__DeclsAssignment_4"


    // $ANTLR start "rule__API__NameAssignment_1"
    // InternalFortXTrans.g:10661:1: rule__API__NameAssignment_1 : ( RULE_ID ) ;
    public final void rule__API__NameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10665:1: ( ( RULE_ID ) )
            // InternalFortXTrans.g:10666:2: ( RULE_ID )
            {
            // InternalFortXTrans.g:10666:2: ( RULE_ID )
            // InternalFortXTrans.g:10667:3: RULE_ID
            {
             before(grammarAccess.getAPIAccess().getNameIDTerminalRuleCall_1_0()); 
            match(input,RULE_ID,FOLLOW_2); 
             after(grammarAccess.getAPIAccess().getNameIDTerminalRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__API__NameAssignment_1"


    // $ANTLR start "rule__API__ImportsAssignment_2"
    // InternalFortXTrans.g:10676:1: rule__API__ImportsAssignment_2 : ( ruleImport ) ;
    public final void rule__API__ImportsAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10680:1: ( ( ruleImport ) )
            // InternalFortXTrans.g:10681:2: ( ruleImport )
            {
            // InternalFortXTrans.g:10681:2: ( ruleImport )
            // InternalFortXTrans.g:10682:3: ruleImport
            {
             before(grammarAccess.getAPIAccess().getImportsImportParserRuleCall_2_0()); 
            pushFollow(FOLLOW_2);
            ruleImport();

            state._fsp--;

             after(grammarAccess.getAPIAccess().getImportsImportParserRuleCall_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__API__ImportsAssignment_2"


    // $ANTLR start "rule__Import__ImpsAssignment_0_0"
    // InternalFortXTrans.g:10691:1: rule__Import__ImpsAssignment_0_0 : ( ( 'import' ) ) ;
    public final void rule__Import__ImpsAssignment_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10695:1: ( ( ( 'import' ) ) )
            // InternalFortXTrans.g:10696:2: ( ( 'import' ) )
            {
            // InternalFortXTrans.g:10696:2: ( ( 'import' ) )
            // InternalFortXTrans.g:10697:3: ( 'import' )
            {
             before(grammarAccess.getImportAccess().getImpsImportKeyword_0_0_0()); 
            // InternalFortXTrans.g:10698:3: ( 'import' )
            // InternalFortXTrans.g:10699:4: 'import'
            {
             before(grammarAccess.getImportAccess().getImpsImportKeyword_0_0_0()); 
            match(input,54,FOLLOW_2); 
             after(grammarAccess.getImportAccess().getImpsImportKeyword_0_0_0()); 

            }

             after(grammarAccess.getImportAccess().getImpsImportKeyword_0_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Import__ImpsAssignment_0_0"


    // $ANTLR start "rule__Import__ImportedNamesAssignment_0_1"
    // InternalFortXTrans.g:10710:1: rule__Import__ImportedNamesAssignment_0_1 : ( ruleImportedNames ) ;
    public final void rule__Import__ImportedNamesAssignment_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10714:1: ( ( ruleImportedNames ) )
            // InternalFortXTrans.g:10715:2: ( ruleImportedNames )
            {
            // InternalFortXTrans.g:10715:2: ( ruleImportedNames )
            // InternalFortXTrans.g:10716:3: ruleImportedNames
            {
             before(grammarAccess.getImportAccess().getImportedNamesImportedNamesParserRuleCall_0_1_0()); 
            pushFollow(FOLLOW_2);
            ruleImportedNames();

            state._fsp--;

             after(grammarAccess.getImportAccess().getImportedNamesImportedNamesParserRuleCall_0_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Import__ImportedNamesAssignment_0_1"


    // $ANTLR start "rule__Import__ImpsAssignment_1_0"
    // InternalFortXTrans.g:10725:1: rule__Import__ImpsAssignment_1_0 : ( ( 'import' ) ) ;
    public final void rule__Import__ImpsAssignment_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10729:1: ( ( ( 'import' ) ) )
            // InternalFortXTrans.g:10730:2: ( ( 'import' ) )
            {
            // InternalFortXTrans.g:10730:2: ( ( 'import' ) )
            // InternalFortXTrans.g:10731:3: ( 'import' )
            {
             before(grammarAccess.getImportAccess().getImpsImportKeyword_1_0_0()); 
            // InternalFortXTrans.g:10732:3: ( 'import' )
            // InternalFortXTrans.g:10733:4: 'import'
            {
             before(grammarAccess.getImportAccess().getImpsImportKeyword_1_0_0()); 
            match(input,54,FOLLOW_2); 
             after(grammarAccess.getImportAccess().getImpsImportKeyword_1_0_0()); 

            }

             after(grammarAccess.getImportAccess().getImpsImportKeyword_1_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Import__ImpsAssignment_1_0"


    // $ANTLR start "rule__Import__ApiAssignment_1_1"
    // InternalFortXTrans.g:10744:1: rule__Import__ApiAssignment_1_1 : ( ( 'api' ) ) ;
    public final void rule__Import__ApiAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10748:1: ( ( ( 'api' ) ) )
            // InternalFortXTrans.g:10749:2: ( ( 'api' ) )
            {
            // InternalFortXTrans.g:10749:2: ( ( 'api' ) )
            // InternalFortXTrans.g:10750:3: ( 'api' )
            {
             before(grammarAccess.getImportAccess().getApiApiKeyword_1_1_0()); 
            // InternalFortXTrans.g:10751:3: ( 'api' )
            // InternalFortXTrans.g:10752:4: 'api'
            {
             before(grammarAccess.getImportAccess().getApiApiKeyword_1_1_0()); 
            match(input,27,FOLLOW_2); 
             after(grammarAccess.getImportAccess().getApiApiKeyword_1_1_0()); 

            }

             after(grammarAccess.getImportAccess().getApiApiKeyword_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Import__ApiAssignment_1_1"


    // $ANTLR start "rule__Import__AliasedimportedNamesAssignment_1_2"
    // InternalFortXTrans.g:10763:1: rule__Import__AliasedimportedNamesAssignment_1_2 : ( ruleAliasedAPINames ) ;
    public final void rule__Import__AliasedimportedNamesAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10767:1: ( ( ruleAliasedAPINames ) )
            // InternalFortXTrans.g:10768:2: ( ruleAliasedAPINames )
            {
            // InternalFortXTrans.g:10768:2: ( ruleAliasedAPINames )
            // InternalFortXTrans.g:10769:3: ruleAliasedAPINames
            {
             before(grammarAccess.getImportAccess().getAliasedimportedNamesAliasedAPINamesParserRuleCall_1_2_0()); 
            pushFollow(FOLLOW_2);
            ruleAliasedAPINames();

            state._fsp--;

             after(grammarAccess.getImportAccess().getAliasedimportedNamesAliasedAPINamesParserRuleCall_1_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Import__AliasedimportedNamesAssignment_1_2"


    // $ANTLR start "rule__Export__ExpAssignment_0_0"
    // InternalFortXTrans.g:10778:1: rule__Export__ExpAssignment_0_0 : ( ( 'export' ) ) ;
    public final void rule__Export__ExpAssignment_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10782:1: ( ( ( 'export' ) ) )
            // InternalFortXTrans.g:10783:2: ( ( 'export' ) )
            {
            // InternalFortXTrans.g:10783:2: ( ( 'export' ) )
            // InternalFortXTrans.g:10784:3: ( 'export' )
            {
             before(grammarAccess.getExportAccess().getExpExportKeyword_0_0_0()); 
            // InternalFortXTrans.g:10785:3: ( 'export' )
            // InternalFortXTrans.g:10786:4: 'export'
            {
             before(grammarAccess.getExportAccess().getExpExportKeyword_0_0_0()); 
            match(input,55,FOLLOW_2); 
             after(grammarAccess.getExportAccess().getExpExportKeyword_0_0_0()); 

            }

             after(grammarAccess.getExportAccess().getExpExportKeyword_0_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Export__ExpAssignment_0_0"


    // $ANTLR start "rule__Export__ExportedNameAssignment_0_1"
    // InternalFortXTrans.g:10797:1: rule__Export__ExportedNameAssignment_0_1 : ( ruleQualifiedName ) ;
    public final void rule__Export__ExportedNameAssignment_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10801:1: ( ( ruleQualifiedName ) )
            // InternalFortXTrans.g:10802:2: ( ruleQualifiedName )
            {
            // InternalFortXTrans.g:10802:2: ( ruleQualifiedName )
            // InternalFortXTrans.g:10803:3: ruleQualifiedName
            {
             before(grammarAccess.getExportAccess().getExportedNameQualifiedNameParserRuleCall_0_1_0()); 
            pushFollow(FOLLOW_2);
            ruleQualifiedName();

            state._fsp--;

             after(grammarAccess.getExportAccess().getExportedNameQualifiedNameParserRuleCall_0_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Export__ExportedNameAssignment_0_1"


    // $ANTLR start "rule__Export__ExpAssignment_1_0"
    // InternalFortXTrans.g:10812:1: rule__Export__ExpAssignment_1_0 : ( ( 'export' ) ) ;
    public final void rule__Export__ExpAssignment_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10816:1: ( ( ( 'export' ) ) )
            // InternalFortXTrans.g:10817:2: ( ( 'export' ) )
            {
            // InternalFortXTrans.g:10817:2: ( ( 'export' ) )
            // InternalFortXTrans.g:10818:3: ( 'export' )
            {
             before(grammarAccess.getExportAccess().getExpExportKeyword_1_0_0()); 
            // InternalFortXTrans.g:10819:3: ( 'export' )
            // InternalFortXTrans.g:10820:4: 'export'
            {
             before(grammarAccess.getExportAccess().getExpExportKeyword_1_0_0()); 
            match(input,55,FOLLOW_2); 
             after(grammarAccess.getExportAccess().getExpExportKeyword_1_0_0()); 

            }

             after(grammarAccess.getExportAccess().getExpExportKeyword_1_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Export__ExpAssignment_1_0"


    // $ANTLR start "rule__Export__BrackAssignment_1_1"
    // InternalFortXTrans.g:10831:1: rule__Export__BrackAssignment_1_1 : ( ( '{' ) ) ;
    public final void rule__Export__BrackAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10835:1: ( ( ( '{' ) ) )
            // InternalFortXTrans.g:10836:2: ( ( '{' ) )
            {
            // InternalFortXTrans.g:10836:2: ( ( '{' ) )
            // InternalFortXTrans.g:10837:3: ( '{' )
            {
             before(grammarAccess.getExportAccess().getBrackLeftCurlyBracketKeyword_1_1_0()); 
            // InternalFortXTrans.g:10838:3: ( '{' )
            // InternalFortXTrans.g:10839:4: '{'
            {
             before(grammarAccess.getExportAccess().getBrackLeftCurlyBracketKeyword_1_1_0()); 
            match(input,31,FOLLOW_2); 
             after(grammarAccess.getExportAccess().getBrackLeftCurlyBracketKeyword_1_1_0()); 

            }

             after(grammarAccess.getExportAccess().getBrackLeftCurlyBracketKeyword_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Export__BrackAssignment_1_1"


    // $ANTLR start "rule__Export__ExportedNameAssignment_1_2"
    // InternalFortXTrans.g:10850:1: rule__Export__ExportedNameAssignment_1_2 : ( ruleQualifiedName ) ;
    public final void rule__Export__ExportedNameAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10854:1: ( ( ruleQualifiedName ) )
            // InternalFortXTrans.g:10855:2: ( ruleQualifiedName )
            {
            // InternalFortXTrans.g:10855:2: ( ruleQualifiedName )
            // InternalFortXTrans.g:10856:3: ruleQualifiedName
            {
             before(grammarAccess.getExportAccess().getExportedNameQualifiedNameParserRuleCall_1_2_0()); 
            pushFollow(FOLLOW_2);
            ruleQualifiedName();

            state._fsp--;

             after(grammarAccess.getExportAccess().getExportedNameQualifiedNameParserRuleCall_1_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Export__ExportedNameAssignment_1_2"


    // $ANTLR start "rule__Export__ExportedNameAssignment_1_3_1"
    // InternalFortXTrans.g:10865:1: rule__Export__ExportedNameAssignment_1_3_1 : ( ruleQualifiedName ) ;
    public final void rule__Export__ExportedNameAssignment_1_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10869:1: ( ( ruleQualifiedName ) )
            // InternalFortXTrans.g:10870:2: ( ruleQualifiedName )
            {
            // InternalFortXTrans.g:10870:2: ( ruleQualifiedName )
            // InternalFortXTrans.g:10871:3: ruleQualifiedName
            {
             before(grammarAccess.getExportAccess().getExportedNameQualifiedNameParserRuleCall_1_3_1_0()); 
            pushFollow(FOLLOW_2);
            ruleQualifiedName();

            state._fsp--;

             after(grammarAccess.getExportAccess().getExportedNameQualifiedNameParserRuleCall_1_3_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Export__ExportedNameAssignment_1_3_1"


    // $ANTLR start "rule__ImportedNames__ImpnameAssignment_0_0"
    // InternalFortXTrans.g:10880:1: rule__ImportedNames__ImpnameAssignment_0_0 : ( ruleQualifiedName ) ;
    public final void rule__ImportedNames__ImpnameAssignment_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10884:1: ( ( ruleQualifiedName ) )
            // InternalFortXTrans.g:10885:2: ( ruleQualifiedName )
            {
            // InternalFortXTrans.g:10885:2: ( ruleQualifiedName )
            // InternalFortXTrans.g:10886:3: ruleQualifiedName
            {
             before(grammarAccess.getImportedNamesAccess().getImpnameQualifiedNameParserRuleCall_0_0_0()); 
            pushFollow(FOLLOW_2);
            ruleQualifiedName();

            state._fsp--;

             after(grammarAccess.getImportedNamesAccess().getImpnameQualifiedNameParserRuleCall_0_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__ImpnameAssignment_0_0"


    // $ANTLR start "rule__ImportedNames__ExceptAssignment_0_5_0"
    // InternalFortXTrans.g:10895:1: rule__ImportedNames__ExceptAssignment_0_5_0 : ( ( 'except' ) ) ;
    public final void rule__ImportedNames__ExceptAssignment_0_5_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10899:1: ( ( ( 'except' ) ) )
            // InternalFortXTrans.g:10900:2: ( ( 'except' ) )
            {
            // InternalFortXTrans.g:10900:2: ( ( 'except' ) )
            // InternalFortXTrans.g:10901:3: ( 'except' )
            {
             before(grammarAccess.getImportedNamesAccess().getExceptExceptKeyword_0_5_0_0()); 
            // InternalFortXTrans.g:10902:3: ( 'except' )
            // InternalFortXTrans.g:10903:4: 'except'
            {
             before(grammarAccess.getImportedNamesAccess().getExceptExceptKeyword_0_5_0_0()); 
            match(input,56,FOLLOW_2); 
             after(grammarAccess.getImportedNamesAccess().getExceptExceptKeyword_0_5_0_0()); 

            }

             after(grammarAccess.getImportedNamesAccess().getExceptExceptKeyword_0_5_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__ExceptAssignment_0_5_0"


    // $ANTLR start "rule__ImportedNames__SimpAssignment_0_5_1"
    // InternalFortXTrans.g:10914:1: rule__ImportedNames__SimpAssignment_0_5_1 : ( ruleSimpleNames ) ;
    public final void rule__ImportedNames__SimpAssignment_0_5_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10918:1: ( ( ruleSimpleNames ) )
            // InternalFortXTrans.g:10919:2: ( ruleSimpleNames )
            {
            // InternalFortXTrans.g:10919:2: ( ruleSimpleNames )
            // InternalFortXTrans.g:10920:3: ruleSimpleNames
            {
             before(grammarAccess.getImportedNamesAccess().getSimpSimpleNamesParserRuleCall_0_5_1_0()); 
            pushFollow(FOLLOW_2);
            ruleSimpleNames();

            state._fsp--;

             after(grammarAccess.getImportedNamesAccess().getSimpSimpleNamesParserRuleCall_0_5_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__SimpAssignment_0_5_1"


    // $ANTLR start "rule__ImportedNames__ImpnameAssignment_1_0"
    // InternalFortXTrans.g:10929:1: rule__ImportedNames__ImpnameAssignment_1_0 : ( ruleQualifiedName ) ;
    public final void rule__ImportedNames__ImpnameAssignment_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10933:1: ( ( ruleQualifiedName ) )
            // InternalFortXTrans.g:10934:2: ( ruleQualifiedName )
            {
            // InternalFortXTrans.g:10934:2: ( ruleQualifiedName )
            // InternalFortXTrans.g:10935:3: ruleQualifiedName
            {
             before(grammarAccess.getImportedNamesAccess().getImpnameQualifiedNameParserRuleCall_1_0_0()); 
            pushFollow(FOLLOW_2);
            ruleQualifiedName();

            state._fsp--;

             after(grammarAccess.getImportedNamesAccess().getImpnameQualifiedNameParserRuleCall_1_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__ImpnameAssignment_1_0"


    // $ANTLR start "rule__ImportedNames__SimpListAssignment_1_3"
    // InternalFortXTrans.g:10944:1: rule__ImportedNames__SimpListAssignment_1_3 : ( ruleAliasedSimpleName ) ;
    public final void rule__ImportedNames__SimpListAssignment_1_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10948:1: ( ( ruleAliasedSimpleName ) )
            // InternalFortXTrans.g:10949:2: ( ruleAliasedSimpleName )
            {
            // InternalFortXTrans.g:10949:2: ( ruleAliasedSimpleName )
            // InternalFortXTrans.g:10950:3: ruleAliasedSimpleName
            {
             before(grammarAccess.getImportedNamesAccess().getSimpListAliasedSimpleNameParserRuleCall_1_3_0()); 
            pushFollow(FOLLOW_2);
            ruleAliasedSimpleName();

            state._fsp--;

             after(grammarAccess.getImportedNamesAccess().getSimpListAliasedSimpleNameParserRuleCall_1_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__SimpListAssignment_1_3"


    // $ANTLR start "rule__ImportedNames__SimpListAssignment_1_4_1"
    // InternalFortXTrans.g:10959:1: rule__ImportedNames__SimpListAssignment_1_4_1 : ( ruleAliasedSimpleName ) ;
    public final void rule__ImportedNames__SimpListAssignment_1_4_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10963:1: ( ( ruleAliasedSimpleName ) )
            // InternalFortXTrans.g:10964:2: ( ruleAliasedSimpleName )
            {
            // InternalFortXTrans.g:10964:2: ( ruleAliasedSimpleName )
            // InternalFortXTrans.g:10965:3: ruleAliasedSimpleName
            {
             before(grammarAccess.getImportedNamesAccess().getSimpListAliasedSimpleNameParserRuleCall_1_4_1_0()); 
            pushFollow(FOLLOW_2);
            ruleAliasedSimpleName();

            state._fsp--;

             after(grammarAccess.getImportedNamesAccess().getSimpListAliasedSimpleNameParserRuleCall_1_4_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__SimpListAssignment_1_4_1"


    // $ANTLR start "rule__ImportedNames__CommaAssignment_1_5_0"
    // InternalFortXTrans.g:10974:1: rule__ImportedNames__CommaAssignment_1_5_0 : ( ( ',' ) ) ;
    public final void rule__ImportedNames__CommaAssignment_1_5_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10978:1: ( ( ( ',' ) ) )
            // InternalFortXTrans.g:10979:2: ( ( ',' ) )
            {
            // InternalFortXTrans.g:10979:2: ( ( ',' ) )
            // InternalFortXTrans.g:10980:3: ( ',' )
            {
             before(grammarAccess.getImportedNamesAccess().getCommaCommaKeyword_1_5_0_0()); 
            // InternalFortXTrans.g:10981:3: ( ',' )
            // InternalFortXTrans.g:10982:4: ','
            {
             before(grammarAccess.getImportedNamesAccess().getCommaCommaKeyword_1_5_0_0()); 
            match(input,29,FOLLOW_2); 
             after(grammarAccess.getImportedNamesAccess().getCommaCommaKeyword_1_5_0_0()); 

            }

             after(grammarAccess.getImportedNamesAccess().getCommaCommaKeyword_1_5_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__CommaAssignment_1_5_0"


    // $ANTLR start "rule__ImportedNames__DotsAssignment_1_5_1"
    // InternalFortXTrans.g:10993:1: rule__ImportedNames__DotsAssignment_1_5_1 : ( RULE_DOTS ) ;
    public final void rule__ImportedNames__DotsAssignment_1_5_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10997:1: ( ( RULE_DOTS ) )
            // InternalFortXTrans.g:10998:2: ( RULE_DOTS )
            {
            // InternalFortXTrans.g:10998:2: ( RULE_DOTS )
            // InternalFortXTrans.g:10999:3: RULE_DOTS
            {
             before(grammarAccess.getImportedNamesAccess().getDotsDOTSTerminalRuleCall_1_5_1_0()); 
            match(input,RULE_DOTS,FOLLOW_2); 
             after(grammarAccess.getImportedNamesAccess().getDotsDOTSTerminalRuleCall_1_5_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__DotsAssignment_1_5_1"


    // $ANTLR start "rule__ImportedNames__ImpnameAssignment_2_0"
    // InternalFortXTrans.g:11008:1: rule__ImportedNames__ImpnameAssignment_2_0 : ( ruleQualifiedName ) ;
    public final void rule__ImportedNames__ImpnameAssignment_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11012:1: ( ( ruleQualifiedName ) )
            // InternalFortXTrans.g:11013:2: ( ruleQualifiedName )
            {
            // InternalFortXTrans.g:11013:2: ( ruleQualifiedName )
            // InternalFortXTrans.g:11014:3: ruleQualifiedName
            {
             before(grammarAccess.getImportedNamesAccess().getImpnameQualifiedNameParserRuleCall_2_0_0()); 
            pushFollow(FOLLOW_2);
            ruleQualifiedName();

            state._fsp--;

             after(grammarAccess.getImportedNamesAccess().getImpnameQualifiedNameParserRuleCall_2_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__ImpnameAssignment_2_0"


    // $ANTLR start "rule__ImportedNames__AsnameAssignment_2_1_1"
    // InternalFortXTrans.g:11023:1: rule__ImportedNames__AsnameAssignment_2_1_1 : ( RULE_ID ) ;
    public final void rule__ImportedNames__AsnameAssignment_2_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11027:1: ( ( RULE_ID ) )
            // InternalFortXTrans.g:11028:2: ( RULE_ID )
            {
            // InternalFortXTrans.g:11028:2: ( RULE_ID )
            // InternalFortXTrans.g:11029:3: RULE_ID
            {
             before(grammarAccess.getImportedNamesAccess().getAsnameIDTerminalRuleCall_2_1_1_0()); 
            match(input,RULE_ID,FOLLOW_2); 
             after(grammarAccess.getImportedNamesAccess().getAsnameIDTerminalRuleCall_2_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__AsnameAssignment_2_1_1"


    // $ANTLR start "rule__QualifiedName__SAssignment_0"
    // InternalFortXTrans.g:11038:1: rule__QualifiedName__SAssignment_0 : ( ruleSimpleName ) ;
    public final void rule__QualifiedName__SAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11042:1: ( ( ruleSimpleName ) )
            // InternalFortXTrans.g:11043:2: ( ruleSimpleName )
            {
            // InternalFortXTrans.g:11043:2: ( ruleSimpleName )
            // InternalFortXTrans.g:11044:3: ruleSimpleName
            {
             before(grammarAccess.getQualifiedNameAccess().getSSimpleNameParserRuleCall_0_0()); 
            pushFollow(FOLLOW_2);
            ruleSimpleName();

            state._fsp--;

             after(grammarAccess.getQualifiedNameAccess().getSSimpleNameParserRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedName__SAssignment_0"


    // $ANTLR start "rule__QualifiedName__SAssignment_1_1"
    // InternalFortXTrans.g:11053:1: rule__QualifiedName__SAssignment_1_1 : ( ruleSimpleName ) ;
    public final void rule__QualifiedName__SAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11057:1: ( ( ruleSimpleName ) )
            // InternalFortXTrans.g:11058:2: ( ruleSimpleName )
            {
            // InternalFortXTrans.g:11058:2: ( ruleSimpleName )
            // InternalFortXTrans.g:11059:3: ruleSimpleName
            {
             before(grammarAccess.getQualifiedNameAccess().getSSimpleNameParserRuleCall_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleSimpleName();

            state._fsp--;

             after(grammarAccess.getQualifiedNameAccess().getSSimpleNameParserRuleCall_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedName__SAssignment_1_1"


    // $ANTLR start "rule__QualifiedName__DotsAssignment_2"
    // InternalFortXTrans.g:11068:1: rule__QualifiedName__DotsAssignment_2 : ( RULE_DOTS ) ;
    public final void rule__QualifiedName__DotsAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11072:1: ( ( RULE_DOTS ) )
            // InternalFortXTrans.g:11073:2: ( RULE_DOTS )
            {
            // InternalFortXTrans.g:11073:2: ( RULE_DOTS )
            // InternalFortXTrans.g:11074:3: RULE_DOTS
            {
             before(grammarAccess.getQualifiedNameAccess().getDotsDOTSTerminalRuleCall_2_0()); 
            match(input,RULE_DOTS,FOLLOW_2); 
             after(grammarAccess.getQualifiedNameAccess().getDotsDOTSTerminalRuleCall_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedName__DotsAssignment_2"


    // $ANTLR start "rule__QualifiedNameTuple__QlistAssignment_1"
    // InternalFortXTrans.g:11083:1: rule__QualifiedNameTuple__QlistAssignment_1 : ( ruleQualifiedName ) ;
    public final void rule__QualifiedNameTuple__QlistAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11087:1: ( ( ruleQualifiedName ) )
            // InternalFortXTrans.g:11088:2: ( ruleQualifiedName )
            {
            // InternalFortXTrans.g:11088:2: ( ruleQualifiedName )
            // InternalFortXTrans.g:11089:3: ruleQualifiedName
            {
             before(grammarAccess.getQualifiedNameTupleAccess().getQlistQualifiedNameParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleQualifiedName();

            state._fsp--;

             after(grammarAccess.getQualifiedNameTupleAccess().getQlistQualifiedNameParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedNameTuple__QlistAssignment_1"


    // $ANTLR start "rule__QualifiedNameTuple__QlistAssignment_2_1"
    // InternalFortXTrans.g:11098:1: rule__QualifiedNameTuple__QlistAssignment_2_1 : ( ruleQualifiedName ) ;
    public final void rule__QualifiedNameTuple__QlistAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11102:1: ( ( ruleQualifiedName ) )
            // InternalFortXTrans.g:11103:2: ( ruleQualifiedName )
            {
            // InternalFortXTrans.g:11103:2: ( ruleQualifiedName )
            // InternalFortXTrans.g:11104:3: ruleQualifiedName
            {
             before(grammarAccess.getQualifiedNameTupleAccess().getQlistQualifiedNameParserRuleCall_2_1_0()); 
            pushFollow(FOLLOW_2);
            ruleQualifiedName();

            state._fsp--;

             after(grammarAccess.getQualifiedNameTupleAccess().getQlistQualifiedNameParserRuleCall_2_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedNameTuple__QlistAssignment_2_1"


    // $ANTLR start "rule__SimpleNames__NameListAssignment_0"
    // InternalFortXTrans.g:11113:1: rule__SimpleNames__NameListAssignment_0 : ( ruleSimpleName ) ;
    public final void rule__SimpleNames__NameListAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11117:1: ( ( ruleSimpleName ) )
            // InternalFortXTrans.g:11118:2: ( ruleSimpleName )
            {
            // InternalFortXTrans.g:11118:2: ( ruleSimpleName )
            // InternalFortXTrans.g:11119:3: ruleSimpleName
            {
             before(grammarAccess.getSimpleNamesAccess().getNameListSimpleNameParserRuleCall_0_0()); 
            pushFollow(FOLLOW_2);
            ruleSimpleName();

            state._fsp--;

             after(grammarAccess.getSimpleNamesAccess().getNameListSimpleNameParserRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleNames__NameListAssignment_0"


    // $ANTLR start "rule__SimpleNames__BrackAssignment_1_0"
    // InternalFortXTrans.g:11128:1: rule__SimpleNames__BrackAssignment_1_0 : ( ( '{' ) ) ;
    public final void rule__SimpleNames__BrackAssignment_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11132:1: ( ( ( '{' ) ) )
            // InternalFortXTrans.g:11133:2: ( ( '{' ) )
            {
            // InternalFortXTrans.g:11133:2: ( ( '{' ) )
            // InternalFortXTrans.g:11134:3: ( '{' )
            {
             before(grammarAccess.getSimpleNamesAccess().getBrackLeftCurlyBracketKeyword_1_0_0()); 
            // InternalFortXTrans.g:11135:3: ( '{' )
            // InternalFortXTrans.g:11136:4: '{'
            {
             before(grammarAccess.getSimpleNamesAccess().getBrackLeftCurlyBracketKeyword_1_0_0()); 
            match(input,31,FOLLOW_2); 
             after(grammarAccess.getSimpleNamesAccess().getBrackLeftCurlyBracketKeyword_1_0_0()); 

            }

             after(grammarAccess.getSimpleNamesAccess().getBrackLeftCurlyBracketKeyword_1_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleNames__BrackAssignment_1_0"


    // $ANTLR start "rule__SimpleNames__NameListAssignment_1_1"
    // InternalFortXTrans.g:11147:1: rule__SimpleNames__NameListAssignment_1_1 : ( ruleSimpleName ) ;
    public final void rule__SimpleNames__NameListAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11151:1: ( ( ruleSimpleName ) )
            // InternalFortXTrans.g:11152:2: ( ruleSimpleName )
            {
            // InternalFortXTrans.g:11152:2: ( ruleSimpleName )
            // InternalFortXTrans.g:11153:3: ruleSimpleName
            {
             before(grammarAccess.getSimpleNamesAccess().getNameListSimpleNameParserRuleCall_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleSimpleName();

            state._fsp--;

             after(grammarAccess.getSimpleNamesAccess().getNameListSimpleNameParserRuleCall_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleNames__NameListAssignment_1_1"


    // $ANTLR start "rule__SimpleNames__NameListAssignment_1_2_1"
    // InternalFortXTrans.g:11162:1: rule__SimpleNames__NameListAssignment_1_2_1 : ( ruleSimpleName ) ;
    public final void rule__SimpleNames__NameListAssignment_1_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11166:1: ( ( ruleSimpleName ) )
            // InternalFortXTrans.g:11167:2: ( ruleSimpleName )
            {
            // InternalFortXTrans.g:11167:2: ( ruleSimpleName )
            // InternalFortXTrans.g:11168:3: ruleSimpleName
            {
             before(grammarAccess.getSimpleNamesAccess().getNameListSimpleNameParserRuleCall_1_2_1_0()); 
            pushFollow(FOLLOW_2);
            ruleSimpleName();

            state._fsp--;

             after(grammarAccess.getSimpleNamesAccess().getNameListSimpleNameParserRuleCall_1_2_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleNames__NameListAssignment_1_2_1"


    // $ANTLR start "rule__SimpleName__NameAssignment"
    // InternalFortXTrans.g:11177:1: rule__SimpleName__NameAssignment : ( RULE_ID ) ;
    public final void rule__SimpleName__NameAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11181:1: ( ( RULE_ID ) )
            // InternalFortXTrans.g:11182:2: ( RULE_ID )
            {
            // InternalFortXTrans.g:11182:2: ( RULE_ID )
            // InternalFortXTrans.g:11183:3: RULE_ID
            {
             before(grammarAccess.getSimpleNameAccess().getNameIDTerminalRuleCall_0()); 
            match(input,RULE_ID,FOLLOW_2); 
             after(grammarAccess.getSimpleNameAccess().getNameIDTerminalRuleCall_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleName__NameAssignment"


    // $ANTLR start "rule__AliasedSimpleName__OrigAssignment_0"
    // InternalFortXTrans.g:11192:1: rule__AliasedSimpleName__OrigAssignment_0 : ( RULE_ID ) ;
    public final void rule__AliasedSimpleName__OrigAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11196:1: ( ( RULE_ID ) )
            // InternalFortXTrans.g:11197:2: ( RULE_ID )
            {
            // InternalFortXTrans.g:11197:2: ( RULE_ID )
            // InternalFortXTrans.g:11198:3: RULE_ID
            {
             before(grammarAccess.getAliasedSimpleNameAccess().getOrigIDTerminalRuleCall_0_0()); 
            match(input,RULE_ID,FOLLOW_2); 
             after(grammarAccess.getAliasedSimpleNameAccess().getOrigIDTerminalRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedSimpleName__OrigAssignment_0"


    // $ANTLR start "rule__AliasedSimpleName__AsNameAssignment_1_1"
    // InternalFortXTrans.g:11207:1: rule__AliasedSimpleName__AsNameAssignment_1_1 : ( RULE_ID ) ;
    public final void rule__AliasedSimpleName__AsNameAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11211:1: ( ( RULE_ID ) )
            // InternalFortXTrans.g:11212:2: ( RULE_ID )
            {
            // InternalFortXTrans.g:11212:2: ( RULE_ID )
            // InternalFortXTrans.g:11213:3: RULE_ID
            {
             before(grammarAccess.getAliasedSimpleNameAccess().getAsNameIDTerminalRuleCall_1_1_0()); 
            match(input,RULE_ID,FOLLOW_2); 
             after(grammarAccess.getAliasedSimpleNameAccess().getAsNameIDTerminalRuleCall_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedSimpleName__AsNameAssignment_1_1"


    // $ANTLR start "rule__AliasedAPINames__NameListAssignment_0"
    // InternalFortXTrans.g:11222:1: rule__AliasedAPINames__NameListAssignment_0 : ( ruleAliasedAPIName ) ;
    public final void rule__AliasedAPINames__NameListAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11226:1: ( ( ruleAliasedAPIName ) )
            // InternalFortXTrans.g:11227:2: ( ruleAliasedAPIName )
            {
            // InternalFortXTrans.g:11227:2: ( ruleAliasedAPIName )
            // InternalFortXTrans.g:11228:3: ruleAliasedAPIName
            {
             before(grammarAccess.getAliasedAPINamesAccess().getNameListAliasedAPINameParserRuleCall_0_0()); 
            pushFollow(FOLLOW_2);
            ruleAliasedAPIName();

            state._fsp--;

             after(grammarAccess.getAliasedAPINamesAccess().getNameListAliasedAPINameParserRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedAPINames__NameListAssignment_0"


    // $ANTLR start "rule__AliasedAPINames__BrackAssignment_1_0"
    // InternalFortXTrans.g:11237:1: rule__AliasedAPINames__BrackAssignment_1_0 : ( ( '{' ) ) ;
    public final void rule__AliasedAPINames__BrackAssignment_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11241:1: ( ( ( '{' ) ) )
            // InternalFortXTrans.g:11242:2: ( ( '{' ) )
            {
            // InternalFortXTrans.g:11242:2: ( ( '{' ) )
            // InternalFortXTrans.g:11243:3: ( '{' )
            {
             before(grammarAccess.getAliasedAPINamesAccess().getBrackLeftCurlyBracketKeyword_1_0_0()); 
            // InternalFortXTrans.g:11244:3: ( '{' )
            // InternalFortXTrans.g:11245:4: '{'
            {
             before(grammarAccess.getAliasedAPINamesAccess().getBrackLeftCurlyBracketKeyword_1_0_0()); 
            match(input,31,FOLLOW_2); 
             after(grammarAccess.getAliasedAPINamesAccess().getBrackLeftCurlyBracketKeyword_1_0_0()); 

            }

             after(grammarAccess.getAliasedAPINamesAccess().getBrackLeftCurlyBracketKeyword_1_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedAPINames__BrackAssignment_1_0"


    // $ANTLR start "rule__AliasedAPINames__NameListAssignment_1_1"
    // InternalFortXTrans.g:11256:1: rule__AliasedAPINames__NameListAssignment_1_1 : ( ruleAliasedAPIName ) ;
    public final void rule__AliasedAPINames__NameListAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11260:1: ( ( ruleAliasedAPIName ) )
            // InternalFortXTrans.g:11261:2: ( ruleAliasedAPIName )
            {
            // InternalFortXTrans.g:11261:2: ( ruleAliasedAPIName )
            // InternalFortXTrans.g:11262:3: ruleAliasedAPIName
            {
             before(grammarAccess.getAliasedAPINamesAccess().getNameListAliasedAPINameParserRuleCall_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleAliasedAPIName();

            state._fsp--;

             after(grammarAccess.getAliasedAPINamesAccess().getNameListAliasedAPINameParserRuleCall_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedAPINames__NameListAssignment_1_1"


    // $ANTLR start "rule__AliasedAPINames__NameListAssignment_1_2_1"
    // InternalFortXTrans.g:11271:1: rule__AliasedAPINames__NameListAssignment_1_2_1 : ( ruleAliasedAPIName ) ;
    public final void rule__AliasedAPINames__NameListAssignment_1_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11275:1: ( ( ruleAliasedAPIName ) )
            // InternalFortXTrans.g:11276:2: ( ruleAliasedAPIName )
            {
            // InternalFortXTrans.g:11276:2: ( ruleAliasedAPIName )
            // InternalFortXTrans.g:11277:3: ruleAliasedAPIName
            {
             before(grammarAccess.getAliasedAPINamesAccess().getNameListAliasedAPINameParserRuleCall_1_2_1_0()); 
            pushFollow(FOLLOW_2);
            ruleAliasedAPIName();

            state._fsp--;

             after(grammarAccess.getAliasedAPINamesAccess().getNameListAliasedAPINameParserRuleCall_1_2_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedAPINames__NameListAssignment_1_2_1"


    // $ANTLR start "rule__AliasedAPIName__OrigAssignment_0"
    // InternalFortXTrans.g:11286:1: rule__AliasedAPIName__OrigAssignment_0 : ( ruleQualifiedName ) ;
    public final void rule__AliasedAPIName__OrigAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11290:1: ( ( ruleQualifiedName ) )
            // InternalFortXTrans.g:11291:2: ( ruleQualifiedName )
            {
            // InternalFortXTrans.g:11291:2: ( ruleQualifiedName )
            // InternalFortXTrans.g:11292:3: ruleQualifiedName
            {
             before(grammarAccess.getAliasedAPINameAccess().getOrigQualifiedNameParserRuleCall_0_0()); 
            pushFollow(FOLLOW_2);
            ruleQualifiedName();

            state._fsp--;

             after(grammarAccess.getAliasedAPINameAccess().getOrigQualifiedNameParserRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedAPIName__OrigAssignment_0"


    // $ANTLR start "rule__AliasedAPIName__AsNameAssignment_1_1"
    // InternalFortXTrans.g:11301:1: rule__AliasedAPIName__AsNameAssignment_1_1 : ( RULE_ID ) ;
    public final void rule__AliasedAPIName__AsNameAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11305:1: ( ( RULE_ID ) )
            // InternalFortXTrans.g:11306:2: ( RULE_ID )
            {
            // InternalFortXTrans.g:11306:2: ( RULE_ID )
            // InternalFortXTrans.g:11307:3: RULE_ID
            {
             before(grammarAccess.getAliasedAPINameAccess().getAsNameIDTerminalRuleCall_1_1_0()); 
            match(input,RULE_ID,FOLLOW_2); 
             after(grammarAccess.getAliasedAPINameAccess().getAsNameIDTerminalRuleCall_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedAPIName__AsNameAssignment_1_1"


    // $ANTLR start "rule__Decls__DeclsAssignment"
    // InternalFortXTrans.g:11316:1: rule__Decls__DeclsAssignment : ( ruleDecl ) ;
    public final void rule__Decls__DeclsAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11320:1: ( ( ruleDecl ) )
            // InternalFortXTrans.g:11321:2: ( ruleDecl )
            {
            // InternalFortXTrans.g:11321:2: ( ruleDecl )
            // InternalFortXTrans.g:11322:3: ruleDecl
            {
             before(grammarAccess.getDeclsAccess().getDeclsDeclParserRuleCall_0()); 
            pushFollow(FOLLOW_2);
            ruleDecl();

            state._fsp--;

             after(grammarAccess.getDeclsAccess().getDeclsDeclParserRuleCall_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Decls__DeclsAssignment"


    // $ANTLR start "rule__Decl__FunctionAssignment_0"
    // InternalFortXTrans.g:11331:1: rule__Decl__FunctionAssignment_0 : ( ruleFnDecl ) ;
    public final void rule__Decl__FunctionAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11335:1: ( ( ruleFnDecl ) )
            // InternalFortXTrans.g:11336:2: ( ruleFnDecl )
            {
            // InternalFortXTrans.g:11336:2: ( ruleFnDecl )
            // InternalFortXTrans.g:11337:3: ruleFnDecl
            {
             before(grammarAccess.getDeclAccess().getFunctionFnDeclParserRuleCall_0_0()); 
            pushFollow(FOLLOW_2);
            ruleFnDecl();

            state._fsp--;

             after(grammarAccess.getDeclAccess().getFunctionFnDeclParserRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Decl__FunctionAssignment_0"


    // $ANTLR start "rule__Decl__FieldAssignment_1"
    // InternalFortXTrans.g:11346:1: rule__Decl__FieldAssignment_1 : ( ruleFieldDecl ) ;
    public final void rule__Decl__FieldAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11350:1: ( ( ruleFieldDecl ) )
            // InternalFortXTrans.g:11351:2: ( ruleFieldDecl )
            {
            // InternalFortXTrans.g:11351:2: ( ruleFieldDecl )
            // InternalFortXTrans.g:11352:3: ruleFieldDecl
            {
             before(grammarAccess.getDeclAccess().getFieldFieldDeclParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleFieldDecl();

            state._fsp--;

             after(grammarAccess.getDeclAccess().getFieldFieldDeclParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Decl__FieldAssignment_1"


    // $ANTLR start "rule__FnMods__ModsAssignment"
    // InternalFortXTrans.g:11361:1: rule__FnMods__ModsAssignment : ( ruleFnMod ) ;
    public final void rule__FnMods__ModsAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11365:1: ( ( ruleFnMod ) )
            // InternalFortXTrans.g:11366:2: ( ruleFnMod )
            {
            // InternalFortXTrans.g:11366:2: ( ruleFnMod )
            // InternalFortXTrans.g:11367:3: ruleFnMod
            {
             before(grammarAccess.getFnModsAccess().getModsFnModParserRuleCall_0()); 
            pushFollow(FOLLOW_2);
            ruleFnMod();

            state._fsp--;

             after(grammarAccess.getFnModsAccess().getModsFnModParserRuleCall_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FnMods__ModsAssignment"


    // $ANTLR start "rule__FnMod__ModtypeAssignment_0"
    // InternalFortXTrans.g:11376:1: rule__FnMod__ModtypeAssignment_0 : ( ( 'private' ) ) ;
    public final void rule__FnMod__ModtypeAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11380:1: ( ( ( 'private' ) ) )
            // InternalFortXTrans.g:11381:2: ( ( 'private' ) )
            {
            // InternalFortXTrans.g:11381:2: ( ( 'private' ) )
            // InternalFortXTrans.g:11382:3: ( 'private' )
            {
             before(grammarAccess.getFnModAccess().getModtypePrivateKeyword_0_0()); 
            // InternalFortXTrans.g:11383:3: ( 'private' )
            // InternalFortXTrans.g:11384:4: 'private'
            {
             before(grammarAccess.getFnModAccess().getModtypePrivateKeyword_0_0()); 
            match(input,57,FOLLOW_2); 
             after(grammarAccess.getFnModAccess().getModtypePrivateKeyword_0_0()); 

            }

             after(grammarAccess.getFnModAccess().getModtypePrivateKeyword_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FnMod__ModtypeAssignment_0"


    // $ANTLR start "rule__FnMod__ModtypeAssignment_1"
    // InternalFortXTrans.g:11395:1: rule__FnMod__ModtypeAssignment_1 : ( ( 'test' ) ) ;
    public final void rule__FnMod__ModtypeAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11399:1: ( ( ( 'test' ) ) )
            // InternalFortXTrans.g:11400:2: ( ( 'test' ) )
            {
            // InternalFortXTrans.g:11400:2: ( ( 'test' ) )
            // InternalFortXTrans.g:11401:3: ( 'test' )
            {
             before(grammarAccess.getFnModAccess().getModtypeTestKeyword_1_0()); 
            // InternalFortXTrans.g:11402:3: ( 'test' )
            // InternalFortXTrans.g:11403:4: 'test'
            {
             before(grammarAccess.getFnModAccess().getModtypeTestKeyword_1_0()); 
            match(input,58,FOLLOW_2); 
             after(grammarAccess.getFnModAccess().getModtypeTestKeyword_1_0()); 

            }

             after(grammarAccess.getFnModAccess().getModtypeTestKeyword_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FnMod__ModtypeAssignment_1"


    // $ANTLR start "rule__FnMod__ModtypeAssignment_2"
    // InternalFortXTrans.g:11414:1: rule__FnMod__ModtypeAssignment_2 : ( ( 'atomic' ) ) ;
    public final void rule__FnMod__ModtypeAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11418:1: ( ( ( 'atomic' ) ) )
            // InternalFortXTrans.g:11419:2: ( ( 'atomic' ) )
            {
            // InternalFortXTrans.g:11419:2: ( ( 'atomic' ) )
            // InternalFortXTrans.g:11420:3: ( 'atomic' )
            {
             before(grammarAccess.getFnModAccess().getModtypeAtomicKeyword_2_0()); 
            // InternalFortXTrans.g:11421:3: ( 'atomic' )
            // InternalFortXTrans.g:11422:4: 'atomic'
            {
             before(grammarAccess.getFnModAccess().getModtypeAtomicKeyword_2_0()); 
            match(input,59,FOLLOW_2); 
             after(grammarAccess.getFnModAccess().getModtypeAtomicKeyword_2_0()); 

            }

             after(grammarAccess.getFnModAccess().getModtypeAtomicKeyword_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FnMod__ModtypeAssignment_2"


    // $ANTLR start "rule__FnMod__ModtypeAssignment_3"
    // InternalFortXTrans.g:11433:1: rule__FnMod__ModtypeAssignment_3 : ( ( 'io' ) ) ;
    public final void rule__FnMod__ModtypeAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11437:1: ( ( ( 'io' ) ) )
            // InternalFortXTrans.g:11438:2: ( ( 'io' ) )
            {
            // InternalFortXTrans.g:11438:2: ( ( 'io' ) )
            // InternalFortXTrans.g:11439:3: ( 'io' )
            {
             before(grammarAccess.getFnModAccess().getModtypeIoKeyword_3_0()); 
            // InternalFortXTrans.g:11440:3: ( 'io' )
            // InternalFortXTrans.g:11441:4: 'io'
            {
             before(grammarAccess.getFnModAccess().getModtypeIoKeyword_3_0()); 
            match(input,60,FOLLOW_2); 
             after(grammarAccess.getFnModAccess().getModtypeIoKeyword_3_0()); 

            }

             after(grammarAccess.getFnModAccess().getModtypeIoKeyword_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FnMod__ModtypeAssignment_3"


    // $ANTLR start "rule__ValParam__ParamsAssignment_0"
    // InternalFortXTrans.g:11452:1: rule__ValParam__ParamsAssignment_0 : ( ruleParam ) ;
    public final void rule__ValParam__ParamsAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11456:1: ( ( ruleParam ) )
            // InternalFortXTrans.g:11457:2: ( ruleParam )
            {
            // InternalFortXTrans.g:11457:2: ( ruleParam )
            // InternalFortXTrans.g:11458:3: ruleParam
            {
             before(grammarAccess.getValParamAccess().getParamsParamParserRuleCall_0_0()); 
            pushFollow(FOLLOW_2);
            ruleParam();

            state._fsp--;

             after(grammarAccess.getValParamAccess().getParamsParamParserRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValParam__ParamsAssignment_0"


    // $ANTLR start "rule__ValParam__BrackAssignment_1_0"
    // InternalFortXTrans.g:11467:1: rule__ValParam__BrackAssignment_1_0 : ( ( '(' ) ) ;
    public final void rule__ValParam__BrackAssignment_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11471:1: ( ( ( '(' ) ) )
            // InternalFortXTrans.g:11472:2: ( ( '(' ) )
            {
            // InternalFortXTrans.g:11472:2: ( ( '(' ) )
            // InternalFortXTrans.g:11473:3: ( '(' )
            {
             before(grammarAccess.getValParamAccess().getBrackLeftParenthesisKeyword_1_0_0()); 
            // InternalFortXTrans.g:11474:3: ( '(' )
            // InternalFortXTrans.g:11475:4: '('
            {
             before(grammarAccess.getValParamAccess().getBrackLeftParenthesisKeyword_1_0_0()); 
            match(input,33,FOLLOW_2); 
             after(grammarAccess.getValParamAccess().getBrackLeftParenthesisKeyword_1_0_0()); 

            }

             after(grammarAccess.getValParamAccess().getBrackLeftParenthesisKeyword_1_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValParam__BrackAssignment_1_0"


    // $ANTLR start "rule__ValParam__ParamsAssignment_1_1_0"
    // InternalFortXTrans.g:11486:1: rule__ValParam__ParamsAssignment_1_1_0 : ( ruleParam ) ;
    public final void rule__ValParam__ParamsAssignment_1_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11490:1: ( ( ruleParam ) )
            // InternalFortXTrans.g:11491:2: ( ruleParam )
            {
            // InternalFortXTrans.g:11491:2: ( ruleParam )
            // InternalFortXTrans.g:11492:3: ruleParam
            {
             before(grammarAccess.getValParamAccess().getParamsParamParserRuleCall_1_1_0_0()); 
            pushFollow(FOLLOW_2);
            ruleParam();

            state._fsp--;

             after(grammarAccess.getValParamAccess().getParamsParamParserRuleCall_1_1_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValParam__ParamsAssignment_1_1_0"


    // $ANTLR start "rule__ValParam__ParamsAssignment_1_1_1_1"
    // InternalFortXTrans.g:11501:1: rule__ValParam__ParamsAssignment_1_1_1_1 : ( ruleParam ) ;
    public final void rule__ValParam__ParamsAssignment_1_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11505:1: ( ( ruleParam ) )
            // InternalFortXTrans.g:11506:2: ( ruleParam )
            {
            // InternalFortXTrans.g:11506:2: ( ruleParam )
            // InternalFortXTrans.g:11507:3: ruleParam
            {
             before(grammarAccess.getValParamAccess().getParamsParamParserRuleCall_1_1_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleParam();

            state._fsp--;

             after(grammarAccess.getValParamAccess().getParamsParamParserRuleCall_1_1_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValParam__ParamsAssignment_1_1_1_1"


    // $ANTLR start "rule__Param__ParIdAssignment_0"
    // InternalFortXTrans.g:11516:1: rule__Param__ParIdAssignment_0 : ( ruleQualifiedName ) ;
    public final void rule__Param__ParIdAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11520:1: ( ( ruleQualifiedName ) )
            // InternalFortXTrans.g:11521:2: ( ruleQualifiedName )
            {
            // InternalFortXTrans.g:11521:2: ( ruleQualifiedName )
            // InternalFortXTrans.g:11522:3: ruleQualifiedName
            {
             before(grammarAccess.getParamAccess().getParIdQualifiedNameParserRuleCall_0_0()); 
            pushFollow(FOLLOW_2);
            ruleQualifiedName();

            state._fsp--;

             after(grammarAccess.getParamAccess().getParIdQualifiedNameParserRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Param__ParIdAssignment_0"


    // $ANTLR start "rule__Param__IstypeAssignment_1"
    // InternalFortXTrans.g:11531:1: rule__Param__IstypeAssignment_1 : ( ruleIsType ) ;
    public final void rule__Param__IstypeAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11535:1: ( ( ruleIsType ) )
            // InternalFortXTrans.g:11536:2: ( ruleIsType )
            {
            // InternalFortXTrans.g:11536:2: ( ruleIsType )
            // InternalFortXTrans.g:11537:3: ruleIsType
            {
             before(grammarAccess.getParamAccess().getIstypeIsTypeParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleIsType();

            state._fsp--;

             after(grammarAccess.getParamAccess().getIstypeIsTypeParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Param__IstypeAssignment_1"


    // $ANTLR start "rule__RetType__EmptyAssignment_0_1"
    // InternalFortXTrans.g:11546:1: rule__RetType__EmptyAssignment_0_1 : ( ( '(' ) ) ;
    public final void rule__RetType__EmptyAssignment_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11550:1: ( ( ( '(' ) ) )
            // InternalFortXTrans.g:11551:2: ( ( '(' ) )
            {
            // InternalFortXTrans.g:11551:2: ( ( '(' ) )
            // InternalFortXTrans.g:11552:3: ( '(' )
            {
             before(grammarAccess.getRetTypeAccess().getEmptyLeftParenthesisKeyword_0_1_0()); 
            // InternalFortXTrans.g:11553:3: ( '(' )
            // InternalFortXTrans.g:11554:4: '('
            {
             before(grammarAccess.getRetTypeAccess().getEmptyLeftParenthesisKeyword_0_1_0()); 
            match(input,33,FOLLOW_2); 
             after(grammarAccess.getRetTypeAccess().getEmptyLeftParenthesisKeyword_0_1_0()); 

            }

             after(grammarAccess.getRetTypeAccess().getEmptyLeftParenthesisKeyword_0_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RetType__EmptyAssignment_0_1"


    // $ANTLR start "rule__RetType__TypeAssignment_1_1"
    // InternalFortXTrans.g:11565:1: rule__RetType__TypeAssignment_1_1 : ( ruleSimpleName ) ;
    public final void rule__RetType__TypeAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11569:1: ( ( ruleSimpleName ) )
            // InternalFortXTrans.g:11570:2: ( ruleSimpleName )
            {
            // InternalFortXTrans.g:11570:2: ( ruleSimpleName )
            // InternalFortXTrans.g:11571:3: ruleSimpleName
            {
             before(grammarAccess.getRetTypeAccess().getTypeSimpleNameParserRuleCall_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleSimpleName();

            state._fsp--;

             after(grammarAccess.getRetTypeAccess().getTypeSimpleNameParserRuleCall_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RetType__TypeAssignment_1_1"


    // $ANTLR start "rule__TupleType__TypesAssignment_1"
    // InternalFortXTrans.g:11580:1: rule__TupleType__TypesAssignment_1 : ( ruleSimpleName ) ;
    public final void rule__TupleType__TypesAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11584:1: ( ( ruleSimpleName ) )
            // InternalFortXTrans.g:11585:2: ( ruleSimpleName )
            {
            // InternalFortXTrans.g:11585:2: ( ruleSimpleName )
            // InternalFortXTrans.g:11586:3: ruleSimpleName
            {
             before(grammarAccess.getTupleTypeAccess().getTypesSimpleNameParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleSimpleName();

            state._fsp--;

             after(grammarAccess.getTupleTypeAccess().getTypesSimpleNameParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TupleType__TypesAssignment_1"


    // $ANTLR start "rule__TupleType__TypesAssignment_2_1"
    // InternalFortXTrans.g:11595:1: rule__TupleType__TypesAssignment_2_1 : ( ruleSimpleName ) ;
    public final void rule__TupleType__TypesAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11599:1: ( ( ruleSimpleName ) )
            // InternalFortXTrans.g:11600:2: ( ruleSimpleName )
            {
            // InternalFortXTrans.g:11600:2: ( ruleSimpleName )
            // InternalFortXTrans.g:11601:3: ruleSimpleName
            {
             before(grammarAccess.getTupleTypeAccess().getTypesSimpleNameParserRuleCall_2_1_0()); 
            pushFollow(FOLLOW_2);
            ruleSimpleName();

            state._fsp--;

             after(grammarAccess.getTupleTypeAccess().getTypesSimpleNameParserRuleCall_2_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TupleType__TypesAssignment_2_1"


    // $ANTLR start "rule__FnDecl__ModsAssignment_0"
    // InternalFortXTrans.g:11610:1: rule__FnDecl__ModsAssignment_0 : ( ruleFnMods ) ;
    public final void rule__FnDecl__ModsAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11614:1: ( ( ruleFnMods ) )
            // InternalFortXTrans.g:11615:2: ( ruleFnMods )
            {
            // InternalFortXTrans.g:11615:2: ( ruleFnMods )
            // InternalFortXTrans.g:11616:3: ruleFnMods
            {
             before(grammarAccess.getFnDeclAccess().getModsFnModsParserRuleCall_0_0()); 
            pushFollow(FOLLOW_2);
            ruleFnMods();

            state._fsp--;

             after(grammarAccess.getFnDeclAccess().getModsFnModsParserRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FnDecl__ModsAssignment_0"


    // $ANTLR start "rule__FnDecl__NameAssignment_1"
    // InternalFortXTrans.g:11625:1: rule__FnDecl__NameAssignment_1 : ( RULE_ID ) ;
    public final void rule__FnDecl__NameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11629:1: ( ( RULE_ID ) )
            // InternalFortXTrans.g:11630:2: ( RULE_ID )
            {
            // InternalFortXTrans.g:11630:2: ( RULE_ID )
            // InternalFortXTrans.g:11631:3: RULE_ID
            {
             before(grammarAccess.getFnDeclAccess().getNameIDTerminalRuleCall_1_0()); 
            match(input,RULE_ID,FOLLOW_2); 
             after(grammarAccess.getFnDeclAccess().getNameIDTerminalRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FnDecl__NameAssignment_1"


    // $ANTLR start "rule__FnDecl__ParamsAssignment_2"
    // InternalFortXTrans.g:11640:1: rule__FnDecl__ParamsAssignment_2 : ( ruleValParam ) ;
    public final void rule__FnDecl__ParamsAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11644:1: ( ( ruleValParam ) )
            // InternalFortXTrans.g:11645:2: ( ruleValParam )
            {
            // InternalFortXTrans.g:11645:2: ( ruleValParam )
            // InternalFortXTrans.g:11646:3: ruleValParam
            {
             before(grammarAccess.getFnDeclAccess().getParamsValParamParserRuleCall_2_0()); 
            pushFollow(FOLLOW_2);
            ruleValParam();

            state._fsp--;

             after(grammarAccess.getFnDeclAccess().getParamsValParamParserRuleCall_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FnDecl__ParamsAssignment_2"


    // $ANTLR start "rule__FnDecl__RetValAssignment_3"
    // InternalFortXTrans.g:11655:1: rule__FnDecl__RetValAssignment_3 : ( ruleRetType ) ;
    public final void rule__FnDecl__RetValAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11659:1: ( ( ruleRetType ) )
            // InternalFortXTrans.g:11660:2: ( ruleRetType )
            {
            // InternalFortXTrans.g:11660:2: ( ruleRetType )
            // InternalFortXTrans.g:11661:3: ruleRetType
            {
             before(grammarAccess.getFnDeclAccess().getRetValRetTypeParserRuleCall_3_0()); 
            pushFollow(FOLLOW_2);
            ruleRetType();

            state._fsp--;

             after(grammarAccess.getFnDeclAccess().getRetValRetTypeParserRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FnDecl__RetValAssignment_3"


    // $ANTLR start "rule__FnDecl__BodyAssignment_4_0"
    // InternalFortXTrans.g:11670:1: rule__FnDecl__BodyAssignment_4_0 : ( ( '=' ) ) ;
    public final void rule__FnDecl__BodyAssignment_4_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11674:1: ( ( ( '=' ) ) )
            // InternalFortXTrans.g:11675:2: ( ( '=' ) )
            {
            // InternalFortXTrans.g:11675:2: ( ( '=' ) )
            // InternalFortXTrans.g:11676:3: ( '=' )
            {
             before(grammarAccess.getFnDeclAccess().getBodyEqualsSignKeyword_4_0_0()); 
            // InternalFortXTrans.g:11677:3: ( '=' )
            // InternalFortXTrans.g:11678:4: '='
            {
             before(grammarAccess.getFnDeclAccess().getBodyEqualsSignKeyword_4_0_0()); 
            match(input,53,FOLLOW_2); 
             after(grammarAccess.getFnDeclAccess().getBodyEqualsSignKeyword_4_0_0()); 

            }

             after(grammarAccess.getFnDeclAccess().getBodyEqualsSignKeyword_4_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FnDecl__BodyAssignment_4_0"


    // $ANTLR start "rule__FnDecl__FnItselfAssignment_4_1"
    // InternalFortXTrans.g:11689:1: rule__FnDecl__FnItselfAssignment_4_1 : ( ruleStmnts ) ;
    public final void rule__FnDecl__FnItselfAssignment_4_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11693:1: ( ( ruleStmnts ) )
            // InternalFortXTrans.g:11694:2: ( ruleStmnts )
            {
            // InternalFortXTrans.g:11694:2: ( ruleStmnts )
            // InternalFortXTrans.g:11695:3: ruleStmnts
            {
             before(grammarAccess.getFnDeclAccess().getFnItselfStmntsParserRuleCall_4_1_0()); 
            pushFollow(FOLLOW_2);
            ruleStmnts();

            state._fsp--;

             after(grammarAccess.getFnDeclAccess().getFnItselfStmntsParserRuleCall_4_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FnDecl__FnItselfAssignment_4_1"


    // $ANTLR start "rule__Stmnts__FrontAssignment_0"
    // InternalFortXTrans.g:11704:1: rule__Stmnts__FrontAssignment_0 : ( ruleStmnt ) ;
    public final void rule__Stmnts__FrontAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11708:1: ( ( ruleStmnt ) )
            // InternalFortXTrans.g:11709:2: ( ruleStmnt )
            {
            // InternalFortXTrans.g:11709:2: ( ruleStmnt )
            // InternalFortXTrans.g:11710:3: ruleStmnt
            {
             before(grammarAccess.getStmntsAccess().getFrontStmntParserRuleCall_0_0()); 
            pushFollow(FOLLOW_2);
            ruleStmnt();

            state._fsp--;

             after(grammarAccess.getStmntsAccess().getFrontStmntParserRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Stmnts__FrontAssignment_0"


    // $ANTLR start "rule__Stmnts__LocVarAssignment_1"
    // InternalFortXTrans.g:11719:1: rule__Stmnts__LocVarAssignment_1 : ( ruleLocalVarDecl ) ;
    public final void rule__Stmnts__LocVarAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11723:1: ( ( ruleLocalVarDecl ) )
            // InternalFortXTrans.g:11724:2: ( ruleLocalVarDecl )
            {
            // InternalFortXTrans.g:11724:2: ( ruleLocalVarDecl )
            // InternalFortXTrans.g:11725:3: ruleLocalVarDecl
            {
             before(grammarAccess.getStmntsAccess().getLocVarLocalVarDeclParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleLocalVarDecl();

            state._fsp--;

             after(grammarAccess.getStmntsAccess().getLocVarLocalVarDeclParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Stmnts__LocVarAssignment_1"


    // $ANTLR start "rule__Stmnts__ExpAssignment_2"
    // InternalFortXTrans.g:11734:1: rule__Stmnts__ExpAssignment_2 : ( ruleExpr ) ;
    public final void rule__Stmnts__ExpAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11738:1: ( ( ruleExpr ) )
            // InternalFortXTrans.g:11739:2: ( ruleExpr )
            {
            // InternalFortXTrans.g:11739:2: ( ruleExpr )
            // InternalFortXTrans.g:11740:3: ruleExpr
            {
             before(grammarAccess.getStmntsAccess().getExpExprParserRuleCall_2_0()); 
            pushFollow(FOLLOW_2);
            ruleExpr();

            state._fsp--;

             after(grammarAccess.getStmntsAccess().getExpExprParserRuleCall_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Stmnts__ExpAssignment_2"


    // $ANTLR start "rule__Stmnt__DelimAssignment_0"
    // InternalFortXTrans.g:11749:1: rule__Stmnt__DelimAssignment_0 : ( ruleDelimitedExpr ) ;
    public final void rule__Stmnt__DelimAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11753:1: ( ( ruleDelimitedExpr ) )
            // InternalFortXTrans.g:11754:2: ( ruleDelimitedExpr )
            {
            // InternalFortXTrans.g:11754:2: ( ruleDelimitedExpr )
            // InternalFortXTrans.g:11755:3: ruleDelimitedExpr
            {
             before(grammarAccess.getStmntAccess().getDelimDelimitedExprParserRuleCall_0_0()); 
            pushFollow(FOLLOW_2);
            ruleDelimitedExpr();

            state._fsp--;

             after(grammarAccess.getStmntAccess().getDelimDelimitedExprParserRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Stmnt__DelimAssignment_0"


    // $ANTLR start "rule__Stmnt__DelimsAssignment_1_1"
    // InternalFortXTrans.g:11764:1: rule__Stmnt__DelimsAssignment_1_1 : ( ruleDelimitedExprList ) ;
    public final void rule__Stmnt__DelimsAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11768:1: ( ( ruleDelimitedExprList ) )
            // InternalFortXTrans.g:11769:2: ( ruleDelimitedExprList )
            {
            // InternalFortXTrans.g:11769:2: ( ruleDelimitedExprList )
            // InternalFortXTrans.g:11770:3: ruleDelimitedExprList
            {
             before(grammarAccess.getStmntAccess().getDelimsDelimitedExprListParserRuleCall_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleDelimitedExprList();

            state._fsp--;

             after(grammarAccess.getStmntAccess().getDelimsDelimitedExprListParserRuleCall_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Stmnt__DelimsAssignment_1_1"


    // $ANTLR start "rule__DelimitedExprList__DelimAssignment_0"
    // InternalFortXTrans.g:11779:1: rule__DelimitedExprList__DelimAssignment_0 : ( ruleDelimitedExpr ) ;
    public final void rule__DelimitedExprList__DelimAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11783:1: ( ( ruleDelimitedExpr ) )
            // InternalFortXTrans.g:11784:2: ( ruleDelimitedExpr )
            {
            // InternalFortXTrans.g:11784:2: ( ruleDelimitedExpr )
            // InternalFortXTrans.g:11785:3: ruleDelimitedExpr
            {
             before(grammarAccess.getDelimitedExprListAccess().getDelimDelimitedExprParserRuleCall_0_0()); 
            pushFollow(FOLLOW_2);
            ruleDelimitedExpr();

            state._fsp--;

             after(grammarAccess.getDelimitedExprListAccess().getDelimDelimitedExprParserRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExprList__DelimAssignment_0"


    // $ANTLR start "rule__DelimitedExprList__DelimAssignment_1_1"
    // InternalFortXTrans.g:11794:1: rule__DelimitedExprList__DelimAssignment_1_1 : ( ruleDelimitedExpr ) ;
    public final void rule__DelimitedExprList__DelimAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11798:1: ( ( ruleDelimitedExpr ) )
            // InternalFortXTrans.g:11799:2: ( ruleDelimitedExpr )
            {
            // InternalFortXTrans.g:11799:2: ( ruleDelimitedExpr )
            // InternalFortXTrans.g:11800:3: ruleDelimitedExpr
            {
             before(grammarAccess.getDelimitedExprListAccess().getDelimDelimitedExprParserRuleCall_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleDelimitedExpr();

            state._fsp--;

             after(grammarAccess.getDelimitedExprListAccess().getDelimDelimitedExprParserRuleCall_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExprList__DelimAssignment_1_1"


    // $ANTLR start "rule__Expr__TailAssignment_1"
    // InternalFortXTrans.g:11809:1: rule__Expr__TailAssignment_1 : ( ruleExprTail ) ;
    public final void rule__Expr__TailAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11813:1: ( ( ruleExprTail ) )
            // InternalFortXTrans.g:11814:2: ( ruleExprTail )
            {
            // InternalFortXTrans.g:11814:2: ( ruleExprTail )
            // InternalFortXTrans.g:11815:3: ruleExprTail
            {
             before(grammarAccess.getExprAccess().getTailExprTailParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleExprTail();

            state._fsp--;

             after(grammarAccess.getExprAccess().getTailExprTailParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Expr__TailAssignment_1"


    // $ANTLR start "rule__Or__RightAssignment_1_2"
    // InternalFortXTrans.g:11824:1: rule__Or__RightAssignment_1_2 : ( ruleAnd ) ;
    public final void rule__Or__RightAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11828:1: ( ( ruleAnd ) )
            // InternalFortXTrans.g:11829:2: ( ruleAnd )
            {
            // InternalFortXTrans.g:11829:2: ( ruleAnd )
            // InternalFortXTrans.g:11830:3: ruleAnd
            {
             before(grammarAccess.getOrAccess().getRightAndParserRuleCall_1_2_0()); 
            pushFollow(FOLLOW_2);
            ruleAnd();

            state._fsp--;

             after(grammarAccess.getOrAccess().getRightAndParserRuleCall_1_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Or__RightAssignment_1_2"


    // $ANTLR start "rule__And__RightAssignment_1_2"
    // InternalFortXTrans.g:11839:1: rule__And__RightAssignment_1_2 : ( ruleEquality ) ;
    public final void rule__And__RightAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11843:1: ( ( ruleEquality ) )
            // InternalFortXTrans.g:11844:2: ( ruleEquality )
            {
            // InternalFortXTrans.g:11844:2: ( ruleEquality )
            // InternalFortXTrans.g:11845:3: ruleEquality
            {
             before(grammarAccess.getAndAccess().getRightEqualityParserRuleCall_1_2_0()); 
            pushFollow(FOLLOW_2);
            ruleEquality();

            state._fsp--;

             after(grammarAccess.getAndAccess().getRightEqualityParserRuleCall_1_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__And__RightAssignment_1_2"


    // $ANTLR start "rule__Equality__OpAssignment_1_1"
    // InternalFortXTrans.g:11854:1: rule__Equality__OpAssignment_1_1 : ( ( rule__Equality__OpAlternatives_1_1_0 ) ) ;
    public final void rule__Equality__OpAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11858:1: ( ( ( rule__Equality__OpAlternatives_1_1_0 ) ) )
            // InternalFortXTrans.g:11859:2: ( ( rule__Equality__OpAlternatives_1_1_0 ) )
            {
            // InternalFortXTrans.g:11859:2: ( ( rule__Equality__OpAlternatives_1_1_0 ) )
            // InternalFortXTrans.g:11860:3: ( rule__Equality__OpAlternatives_1_1_0 )
            {
             before(grammarAccess.getEqualityAccess().getOpAlternatives_1_1_0()); 
            // InternalFortXTrans.g:11861:3: ( rule__Equality__OpAlternatives_1_1_0 )
            // InternalFortXTrans.g:11861:4: rule__Equality__OpAlternatives_1_1_0
            {
            pushFollow(FOLLOW_2);
            rule__Equality__OpAlternatives_1_1_0();

            state._fsp--;


            }

             after(grammarAccess.getEqualityAccess().getOpAlternatives_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equality__OpAssignment_1_1"


    // $ANTLR start "rule__Equality__RightAssignment_1_2"
    // InternalFortXTrans.g:11869:1: rule__Equality__RightAssignment_1_2 : ( ruleComparison ) ;
    public final void rule__Equality__RightAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11873:1: ( ( ruleComparison ) )
            // InternalFortXTrans.g:11874:2: ( ruleComparison )
            {
            // InternalFortXTrans.g:11874:2: ( ruleComparison )
            // InternalFortXTrans.g:11875:3: ruleComparison
            {
             before(grammarAccess.getEqualityAccess().getRightComparisonParserRuleCall_1_2_0()); 
            pushFollow(FOLLOW_2);
            ruleComparison();

            state._fsp--;

             after(grammarAccess.getEqualityAccess().getRightComparisonParserRuleCall_1_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equality__RightAssignment_1_2"


    // $ANTLR start "rule__Comparison__OpAssignment_1_1"
    // InternalFortXTrans.g:11884:1: rule__Comparison__OpAssignment_1_1 : ( ( rule__Comparison__OpAlternatives_1_1_0 ) ) ;
    public final void rule__Comparison__OpAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11888:1: ( ( ( rule__Comparison__OpAlternatives_1_1_0 ) ) )
            // InternalFortXTrans.g:11889:2: ( ( rule__Comparison__OpAlternatives_1_1_0 ) )
            {
            // InternalFortXTrans.g:11889:2: ( ( rule__Comparison__OpAlternatives_1_1_0 ) )
            // InternalFortXTrans.g:11890:3: ( rule__Comparison__OpAlternatives_1_1_0 )
            {
             before(grammarAccess.getComparisonAccess().getOpAlternatives_1_1_0()); 
            // InternalFortXTrans.g:11891:3: ( rule__Comparison__OpAlternatives_1_1_0 )
            // InternalFortXTrans.g:11891:4: rule__Comparison__OpAlternatives_1_1_0
            {
            pushFollow(FOLLOW_2);
            rule__Comparison__OpAlternatives_1_1_0();

            state._fsp--;


            }

             after(grammarAccess.getComparisonAccess().getOpAlternatives_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__OpAssignment_1_1"


    // $ANTLR start "rule__Comparison__RightAssignment_1_2"
    // InternalFortXTrans.g:11899:1: rule__Comparison__RightAssignment_1_2 : ( ruleAddExpr ) ;
    public final void rule__Comparison__RightAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11903:1: ( ( ruleAddExpr ) )
            // InternalFortXTrans.g:11904:2: ( ruleAddExpr )
            {
            // InternalFortXTrans.g:11904:2: ( ruleAddExpr )
            // InternalFortXTrans.g:11905:3: ruleAddExpr
            {
             before(grammarAccess.getComparisonAccess().getRightAddExprParserRuleCall_1_2_0()); 
            pushFollow(FOLLOW_2);
            ruleAddExpr();

            state._fsp--;

             after(grammarAccess.getComparisonAccess().getRightAddExprParserRuleCall_1_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__RightAssignment_1_2"


    // $ANTLR start "rule__AddExpr__RightAssignment_1_2"
    // InternalFortXTrans.g:11914:1: rule__AddExpr__RightAssignment_1_2 : ( ruleSubExpr ) ;
    public final void rule__AddExpr__RightAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11918:1: ( ( ruleSubExpr ) )
            // InternalFortXTrans.g:11919:2: ( ruleSubExpr )
            {
            // InternalFortXTrans.g:11919:2: ( ruleSubExpr )
            // InternalFortXTrans.g:11920:3: ruleSubExpr
            {
             before(grammarAccess.getAddExprAccess().getRightSubExprParserRuleCall_1_2_0()); 
            pushFollow(FOLLOW_2);
            ruleSubExpr();

            state._fsp--;

             after(grammarAccess.getAddExprAccess().getRightSubExprParserRuleCall_1_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AddExpr__RightAssignment_1_2"


    // $ANTLR start "rule__SubExpr__RightAssignment_1_2"
    // InternalFortXTrans.g:11929:1: rule__SubExpr__RightAssignment_1_2 : ( ruleDivExpr ) ;
    public final void rule__SubExpr__RightAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11933:1: ( ( ruleDivExpr ) )
            // InternalFortXTrans.g:11934:2: ( ruleDivExpr )
            {
            // InternalFortXTrans.g:11934:2: ( ruleDivExpr )
            // InternalFortXTrans.g:11935:3: ruleDivExpr
            {
             before(grammarAccess.getSubExprAccess().getRightDivExprParserRuleCall_1_2_0()); 
            pushFollow(FOLLOW_2);
            ruleDivExpr();

            state._fsp--;

             after(grammarAccess.getSubExprAccess().getRightDivExprParserRuleCall_1_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubExpr__RightAssignment_1_2"


    // $ANTLR start "rule__DivExpr__RightAssignment_1_2"
    // InternalFortXTrans.g:11944:1: rule__DivExpr__RightAssignment_1_2 : ( ruleMultExpr ) ;
    public final void rule__DivExpr__RightAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11948:1: ( ( ruleMultExpr ) )
            // InternalFortXTrans.g:11949:2: ( ruleMultExpr )
            {
            // InternalFortXTrans.g:11949:2: ( ruleMultExpr )
            // InternalFortXTrans.g:11950:3: ruleMultExpr
            {
             before(grammarAccess.getDivExprAccess().getRightMultExprParserRuleCall_1_2_0()); 
            pushFollow(FOLLOW_2);
            ruleMultExpr();

            state._fsp--;

             after(grammarAccess.getDivExprAccess().getRightMultExprParserRuleCall_1_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DivExpr__RightAssignment_1_2"


    // $ANTLR start "rule__MultExpr__RightAssignment_1_2"
    // InternalFortXTrans.g:11959:1: rule__MultExpr__RightAssignment_1_2 : ( ruleExponentExpr ) ;
    public final void rule__MultExpr__RightAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11963:1: ( ( ruleExponentExpr ) )
            // InternalFortXTrans.g:11964:2: ( ruleExponentExpr )
            {
            // InternalFortXTrans.g:11964:2: ( ruleExponentExpr )
            // InternalFortXTrans.g:11965:3: ruleExponentExpr
            {
             before(grammarAccess.getMultExprAccess().getRightExponentExprParserRuleCall_1_2_0()); 
            pushFollow(FOLLOW_2);
            ruleExponentExpr();

            state._fsp--;

             after(grammarAccess.getMultExprAccess().getRightExponentExprParserRuleCall_1_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultExpr__RightAssignment_1_2"


    // $ANTLR start "rule__ExponentExpr__RightAssignment_1_2"
    // InternalFortXTrans.g:11974:1: rule__ExponentExpr__RightAssignment_1_2 : ( rulePrimary ) ;
    public final void rule__ExponentExpr__RightAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11978:1: ( ( rulePrimary ) )
            // InternalFortXTrans.g:11979:2: ( rulePrimary )
            {
            // InternalFortXTrans.g:11979:2: ( rulePrimary )
            // InternalFortXTrans.g:11980:3: rulePrimary
            {
             before(grammarAccess.getExponentExprAccess().getRightPrimaryParserRuleCall_1_2_0()); 
            pushFollow(FOLLOW_2);
            rulePrimary();

            state._fsp--;

             after(grammarAccess.getExponentExprAccess().getRightPrimaryParserRuleCall_1_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExponentExpr__RightAssignment_1_2"


    // $ANTLR start "rule__Primary__OpAssignment_0_1_1_0"
    // InternalFortXTrans.g:11989:1: rule__Primary__OpAssignment_0_1_1_0 : ( ( ':=' ) ) ;
    public final void rule__Primary__OpAssignment_0_1_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11993:1: ( ( ( ':=' ) ) )
            // InternalFortXTrans.g:11994:2: ( ( ':=' ) )
            {
            // InternalFortXTrans.g:11994:2: ( ( ':=' ) )
            // InternalFortXTrans.g:11995:3: ( ':=' )
            {
             before(grammarAccess.getPrimaryAccess().getOpColonEqualsSignKeyword_0_1_1_0_0()); 
            // InternalFortXTrans.g:11996:3: ( ':=' )
            // InternalFortXTrans.g:11997:4: ':='
            {
             before(grammarAccess.getPrimaryAccess().getOpColonEqualsSignKeyword_0_1_1_0_0()); 
            match(input,61,FOLLOW_2); 
             after(grammarAccess.getPrimaryAccess().getOpColonEqualsSignKeyword_0_1_1_0_0()); 

            }

             after(grammarAccess.getPrimaryAccess().getOpColonEqualsSignKeyword_0_1_1_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__OpAssignment_0_1_1_0"


    // $ANTLR start "rule__Primary__RightAssignment_0_1_1_1"
    // InternalFortXTrans.g:12008:1: rule__Primary__RightAssignment_0_1_1_1 : ( ruleExprList ) ;
    public final void rule__Primary__RightAssignment_0_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12012:1: ( ( ruleExprList ) )
            // InternalFortXTrans.g:12013:2: ( ruleExprList )
            {
            // InternalFortXTrans.g:12013:2: ( ruleExprList )
            // InternalFortXTrans.g:12014:3: ruleExprList
            {
             before(grammarAccess.getPrimaryAccess().getRightExprListParserRuleCall_0_1_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleExprList();

            state._fsp--;

             after(grammarAccess.getPrimaryAccess().getRightExprListParserRuleCall_0_1_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__RightAssignment_0_1_1_1"


    // $ANTLR start "rule__Primary__RightAssignment_0_2_2"
    // InternalFortXTrans.g:12023:1: rule__Primary__RightAssignment_0_2_2 : ( ruleExprList ) ;
    public final void rule__Primary__RightAssignment_0_2_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12027:1: ( ( ruleExprList ) )
            // InternalFortXTrans.g:12028:2: ( ruleExprList )
            {
            // InternalFortXTrans.g:12028:2: ( ruleExprList )
            // InternalFortXTrans.g:12029:3: ruleExprList
            {
             before(grammarAccess.getPrimaryAccess().getRightExprListParserRuleCall_0_2_2_0()); 
            pushFollow(FOLLOW_2);
            ruleExprList();

            state._fsp--;

             after(grammarAccess.getPrimaryAccess().getRightExprListParserRuleCall_0_2_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__RightAssignment_0_2_2"


    // $ANTLR start "rule__Primary__ExpressionAssignment_1_2"
    // InternalFortXTrans.g:12038:1: rule__Primary__ExpressionAssignment_1_2 : ( rulePrimary ) ;
    public final void rule__Primary__ExpressionAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12042:1: ( ( rulePrimary ) )
            // InternalFortXTrans.g:12043:2: ( rulePrimary )
            {
            // InternalFortXTrans.g:12043:2: ( rulePrimary )
            // InternalFortXTrans.g:12044:3: rulePrimary
            {
             before(grammarAccess.getPrimaryAccess().getExpressionPrimaryParserRuleCall_1_2_0()); 
            pushFollow(FOLLOW_2);
            rulePrimary();

            state._fsp--;

             after(grammarAccess.getPrimaryAccess().getExpressionPrimaryParserRuleCall_1_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__ExpressionAssignment_1_2"


    // $ANTLR start "rule__Primary__ExpAssignment_2_2"
    // InternalFortXTrans.g:12053:1: rule__Primary__ExpAssignment_2_2 : ( ruleExprList ) ;
    public final void rule__Primary__ExpAssignment_2_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12057:1: ( ( ruleExprList ) )
            // InternalFortXTrans.g:12058:2: ( ruleExprList )
            {
            // InternalFortXTrans.g:12058:2: ( ruleExprList )
            // InternalFortXTrans.g:12059:3: ruleExprList
            {
             before(grammarAccess.getPrimaryAccess().getExpExprListParserRuleCall_2_2_0()); 
            pushFollow(FOLLOW_2);
            ruleExprList();

            state._fsp--;

             after(grammarAccess.getPrimaryAccess().getExpExprListParserRuleCall_2_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__ExpAssignment_2_2"


    // $ANTLR start "rule__ExprList__ExpsAssignment_0"
    // InternalFortXTrans.g:12068:1: rule__ExprList__ExpsAssignment_0 : ( ruleExpr ) ;
    public final void rule__ExprList__ExpsAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12072:1: ( ( ruleExpr ) )
            // InternalFortXTrans.g:12073:2: ( ruleExpr )
            {
            // InternalFortXTrans.g:12073:2: ( ruleExpr )
            // InternalFortXTrans.g:12074:3: ruleExpr
            {
             before(grammarAccess.getExprListAccess().getExpsExprParserRuleCall_0_0()); 
            pushFollow(FOLLOW_2);
            ruleExpr();

            state._fsp--;

             after(grammarAccess.getExprListAccess().getExpsExprParserRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExprList__ExpsAssignment_0"


    // $ANTLR start "rule__ExprList__ExpAssignment_1_1"
    // InternalFortXTrans.g:12083:1: rule__ExprList__ExpAssignment_1_1 : ( ruleExpr ) ;
    public final void rule__ExprList__ExpAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12087:1: ( ( ruleExpr ) )
            // InternalFortXTrans.g:12088:2: ( ruleExpr )
            {
            // InternalFortXTrans.g:12088:2: ( ruleExpr )
            // InternalFortXTrans.g:12089:3: ruleExpr
            {
             before(grammarAccess.getExprListAccess().getExpExprParserRuleCall_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleExpr();

            state._fsp--;

             after(grammarAccess.getExprListAccess().getExpExprParserRuleCall_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExprList__ExpAssignment_1_1"


    // $ANTLR start "rule__ExprTail__TypeAssignment_1"
    // InternalFortXTrans.g:12098:1: rule__ExprTail__TypeAssignment_1 : ( ruleSimpleName ) ;
    public final void rule__ExprTail__TypeAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12102:1: ( ( ruleSimpleName ) )
            // InternalFortXTrans.g:12103:2: ( ruleSimpleName )
            {
            // InternalFortXTrans.g:12103:2: ( ruleSimpleName )
            // InternalFortXTrans.g:12104:3: ruleSimpleName
            {
             before(grammarAccess.getExprTailAccess().getTypeSimpleNameParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleSimpleName();

            state._fsp--;

             after(grammarAccess.getExprTailAccess().getTypeSimpleNameParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExprTail__TypeAssignment_1"


    // $ANTLR start "rule__DelimitedExpr__DodAssignment_0"
    // InternalFortXTrans.g:12113:1: rule__DelimitedExpr__DodAssignment_0 : ( ruleDo ) ;
    public final void rule__DelimitedExpr__DodAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12117:1: ( ( ruleDo ) )
            // InternalFortXTrans.g:12118:2: ( ruleDo )
            {
            // InternalFortXTrans.g:12118:2: ( ruleDo )
            // InternalFortXTrans.g:12119:3: ruleDo
            {
             before(grammarAccess.getDelimitedExprAccess().getDodDoParserRuleCall_0_0()); 
            pushFollow(FOLLOW_2);
            ruleDo();

            state._fsp--;

             after(grammarAccess.getDelimitedExprAccess().getDodDoParserRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__DodAssignment_0"


    // $ANTLR start "rule__DelimitedExpr__RetAssignment_1_0"
    // InternalFortXTrans.g:12128:1: rule__DelimitedExpr__RetAssignment_1_0 : ( ( 'return' ) ) ;
    public final void rule__DelimitedExpr__RetAssignment_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12132:1: ( ( ( 'return' ) ) )
            // InternalFortXTrans.g:12133:2: ( ( 'return' ) )
            {
            // InternalFortXTrans.g:12133:2: ( ( 'return' ) )
            // InternalFortXTrans.g:12134:3: ( 'return' )
            {
             before(grammarAccess.getDelimitedExprAccess().getRetReturnKeyword_1_0_0()); 
            // InternalFortXTrans.g:12135:3: ( 'return' )
            // InternalFortXTrans.g:12136:4: 'return'
            {
             before(grammarAccess.getDelimitedExprAccess().getRetReturnKeyword_1_0_0()); 
            match(input,62,FOLLOW_2); 
             after(grammarAccess.getDelimitedExprAccess().getRetReturnKeyword_1_0_0()); 

            }

             after(grammarAccess.getDelimitedExprAccess().getRetReturnKeyword_1_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__RetAssignment_1_0"


    // $ANTLR start "rule__DelimitedExpr__BlockAssignment_1_1"
    // InternalFortXTrans.g:12147:1: rule__DelimitedExpr__BlockAssignment_1_1 : ( ruleBlockElem ) ;
    public final void rule__DelimitedExpr__BlockAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12151:1: ( ( ruleBlockElem ) )
            // InternalFortXTrans.g:12152:2: ( ruleBlockElem )
            {
            // InternalFortXTrans.g:12152:2: ( ruleBlockElem )
            // InternalFortXTrans.g:12153:3: ruleBlockElem
            {
             before(grammarAccess.getDelimitedExprAccess().getBlockBlockElemParserRuleCall_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleBlockElem();

            state._fsp--;

             after(grammarAccess.getDelimitedExprAccess().getBlockBlockElemParserRuleCall_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__BlockAssignment_1_1"


    // $ANTLR start "rule__DelimitedExpr__AwhileAssignment_2_0"
    // InternalFortXTrans.g:12162:1: rule__DelimitedExpr__AwhileAssignment_2_0 : ( ( 'while' ) ) ;
    public final void rule__DelimitedExpr__AwhileAssignment_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12166:1: ( ( ( 'while' ) ) )
            // InternalFortXTrans.g:12167:2: ( ( 'while' ) )
            {
            // InternalFortXTrans.g:12167:2: ( ( 'while' ) )
            // InternalFortXTrans.g:12168:3: ( 'while' )
            {
             before(grammarAccess.getDelimitedExprAccess().getAwhileWhileKeyword_2_0_0()); 
            // InternalFortXTrans.g:12169:3: ( 'while' )
            // InternalFortXTrans.g:12170:4: 'while'
            {
             before(grammarAccess.getDelimitedExprAccess().getAwhileWhileKeyword_2_0_0()); 
            match(input,63,FOLLOW_2); 
             after(grammarAccess.getDelimitedExprAccess().getAwhileWhileKeyword_2_0_0()); 

            }

             after(grammarAccess.getDelimitedExprAccess().getAwhileWhileKeyword_2_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__AwhileAssignment_2_0"


    // $ANTLR start "rule__DelimitedExpr__ExprAssignment_2_1"
    // InternalFortXTrans.g:12181:1: rule__DelimitedExpr__ExprAssignment_2_1 : ( ruleExpr ) ;
    public final void rule__DelimitedExpr__ExprAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12185:1: ( ( ruleExpr ) )
            // InternalFortXTrans.g:12186:2: ( ruleExpr )
            {
            // InternalFortXTrans.g:12186:2: ( ruleExpr )
            // InternalFortXTrans.g:12187:3: ruleExpr
            {
             before(grammarAccess.getDelimitedExprAccess().getExprExprParserRuleCall_2_1_0()); 
            pushFollow(FOLLOW_2);
            ruleExpr();

            state._fsp--;

             after(grammarAccess.getDelimitedExprAccess().getExprExprParserRuleCall_2_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__ExprAssignment_2_1"


    // $ANTLR start "rule__DelimitedExpr__WhiledodAssignment_2_2"
    // InternalFortXTrans.g:12196:1: rule__DelimitedExpr__WhiledodAssignment_2_2 : ( ruleDo ) ;
    public final void rule__DelimitedExpr__WhiledodAssignment_2_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12200:1: ( ( ruleDo ) )
            // InternalFortXTrans.g:12201:2: ( ruleDo )
            {
            // InternalFortXTrans.g:12201:2: ( ruleDo )
            // InternalFortXTrans.g:12202:3: ruleDo
            {
             before(grammarAccess.getDelimitedExprAccess().getWhiledodDoParserRuleCall_2_2_0()); 
            pushFollow(FOLLOW_2);
            ruleDo();

            state._fsp--;

             after(grammarAccess.getDelimitedExprAccess().getWhiledodDoParserRuleCall_2_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__WhiledodAssignment_2_2"


    // $ANTLR start "rule__DelimitedExpr__AforAssignment_3_0"
    // InternalFortXTrans.g:12211:1: rule__DelimitedExpr__AforAssignment_3_0 : ( ( 'for' ) ) ;
    public final void rule__DelimitedExpr__AforAssignment_3_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12215:1: ( ( ( 'for' ) ) )
            // InternalFortXTrans.g:12216:2: ( ( 'for' ) )
            {
            // InternalFortXTrans.g:12216:2: ( ( 'for' ) )
            // InternalFortXTrans.g:12217:3: ( 'for' )
            {
             before(grammarAccess.getDelimitedExprAccess().getAforForKeyword_3_0_0()); 
            // InternalFortXTrans.g:12218:3: ( 'for' )
            // InternalFortXTrans.g:12219:4: 'for'
            {
             before(grammarAccess.getDelimitedExprAccess().getAforForKeyword_3_0_0()); 
            match(input,64,FOLLOW_2); 
             after(grammarAccess.getDelimitedExprAccess().getAforForKeyword_3_0_0()); 

            }

             after(grammarAccess.getDelimitedExprAccess().getAforForKeyword_3_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__AforAssignment_3_0"


    // $ANTLR start "rule__DelimitedExpr__GenAssignment_3_1"
    // InternalFortXTrans.g:12230:1: rule__DelimitedExpr__GenAssignment_3_1 : ( ruleGenerators ) ;
    public final void rule__DelimitedExpr__GenAssignment_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12234:1: ( ( ruleGenerators ) )
            // InternalFortXTrans.g:12235:2: ( ruleGenerators )
            {
            // InternalFortXTrans.g:12235:2: ( ruleGenerators )
            // InternalFortXTrans.g:12236:3: ruleGenerators
            {
             before(grammarAccess.getDelimitedExprAccess().getGenGeneratorsParserRuleCall_3_1_0()); 
            pushFollow(FOLLOW_2);
            ruleGenerators();

            state._fsp--;

             after(grammarAccess.getDelimitedExprAccess().getGenGeneratorsParserRuleCall_3_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__GenAssignment_3_1"


    // $ANTLR start "rule__DelimitedExpr__DofrontAssignment_3_2"
    // InternalFortXTrans.g:12245:1: rule__DelimitedExpr__DofrontAssignment_3_2 : ( ruleDoFront ) ;
    public final void rule__DelimitedExpr__DofrontAssignment_3_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12249:1: ( ( ruleDoFront ) )
            // InternalFortXTrans.g:12250:2: ( ruleDoFront )
            {
            // InternalFortXTrans.g:12250:2: ( ruleDoFront )
            // InternalFortXTrans.g:12251:3: ruleDoFront
            {
             before(grammarAccess.getDelimitedExprAccess().getDofrontDoFrontParserRuleCall_3_2_0()); 
            pushFollow(FOLLOW_2);
            ruleDoFront();

            state._fsp--;

             after(grammarAccess.getDelimitedExprAccess().getDofrontDoFrontParserRuleCall_3_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__DofrontAssignment_3_2"


    // $ANTLR start "rule__DelimitedExpr__AnifAssignment_4_0"
    // InternalFortXTrans.g:12260:1: rule__DelimitedExpr__AnifAssignment_4_0 : ( ( 'if' ) ) ;
    public final void rule__DelimitedExpr__AnifAssignment_4_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12264:1: ( ( ( 'if' ) ) )
            // InternalFortXTrans.g:12265:2: ( ( 'if' ) )
            {
            // InternalFortXTrans.g:12265:2: ( ( 'if' ) )
            // InternalFortXTrans.g:12266:3: ( 'if' )
            {
             before(grammarAccess.getDelimitedExprAccess().getAnifIfKeyword_4_0_0()); 
            // InternalFortXTrans.g:12267:3: ( 'if' )
            // InternalFortXTrans.g:12268:4: 'if'
            {
             before(grammarAccess.getDelimitedExprAccess().getAnifIfKeyword_4_0_0()); 
            match(input,65,FOLLOW_2); 
             after(grammarAccess.getDelimitedExprAccess().getAnifIfKeyword_4_0_0()); 

            }

             after(grammarAccess.getDelimitedExprAccess().getAnifIfKeyword_4_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__AnifAssignment_4_0"


    // $ANTLR start "rule__DelimitedExpr__CondAssignment_4_1"
    // InternalFortXTrans.g:12279:1: rule__DelimitedExpr__CondAssignment_4_1 : ( ruleExpr ) ;
    public final void rule__DelimitedExpr__CondAssignment_4_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12283:1: ( ( ruleExpr ) )
            // InternalFortXTrans.g:12284:2: ( ruleExpr )
            {
            // InternalFortXTrans.g:12284:2: ( ruleExpr )
            // InternalFortXTrans.g:12285:3: ruleExpr
            {
             before(grammarAccess.getDelimitedExprAccess().getCondExprParserRuleCall_4_1_0()); 
            pushFollow(FOLLOW_2);
            ruleExpr();

            state._fsp--;

             after(grammarAccess.getDelimitedExprAccess().getCondExprParserRuleCall_4_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__CondAssignment_4_1"


    // $ANTLR start "rule__DelimitedExpr__BlocksAssignment_4_3"
    // InternalFortXTrans.g:12294:1: rule__DelimitedExpr__BlocksAssignment_4_3 : ( ruleBlockElems ) ;
    public final void rule__DelimitedExpr__BlocksAssignment_4_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12298:1: ( ( ruleBlockElems ) )
            // InternalFortXTrans.g:12299:2: ( ruleBlockElems )
            {
            // InternalFortXTrans.g:12299:2: ( ruleBlockElems )
            // InternalFortXTrans.g:12300:3: ruleBlockElems
            {
             before(grammarAccess.getDelimitedExprAccess().getBlocksBlockElemsParserRuleCall_4_3_0()); 
            pushFollow(FOLLOW_2);
            ruleBlockElems();

            state._fsp--;

             after(grammarAccess.getDelimitedExprAccess().getBlocksBlockElemsParserRuleCall_4_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__BlocksAssignment_4_3"


    // $ANTLR start "rule__DelimitedExpr__ElifsAssignment_4_4"
    // InternalFortXTrans.g:12309:1: rule__DelimitedExpr__ElifsAssignment_4_4 : ( ruleElifs ) ;
    public final void rule__DelimitedExpr__ElifsAssignment_4_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12313:1: ( ( ruleElifs ) )
            // InternalFortXTrans.g:12314:2: ( ruleElifs )
            {
            // InternalFortXTrans.g:12314:2: ( ruleElifs )
            // InternalFortXTrans.g:12315:3: ruleElifs
            {
             before(grammarAccess.getDelimitedExprAccess().getElifsElifsParserRuleCall_4_4_0()); 
            pushFollow(FOLLOW_2);
            ruleElifs();

            state._fsp--;

             after(grammarAccess.getDelimitedExprAccess().getElifsElifsParserRuleCall_4_4_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__ElifsAssignment_4_4"


    // $ANTLR start "rule__DelimitedExpr__ElsAssignment_4_5"
    // InternalFortXTrans.g:12324:1: rule__DelimitedExpr__ElsAssignment_4_5 : ( ruleElse ) ;
    public final void rule__DelimitedExpr__ElsAssignment_4_5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12328:1: ( ( ruleElse ) )
            // InternalFortXTrans.g:12329:2: ( ruleElse )
            {
            // InternalFortXTrans.g:12329:2: ( ruleElse )
            // InternalFortXTrans.g:12330:3: ruleElse
            {
             before(grammarAccess.getDelimitedExprAccess().getElsElseParserRuleCall_4_5_0()); 
            pushFollow(FOLLOW_2);
            ruleElse();

            state._fsp--;

             after(grammarAccess.getDelimitedExprAccess().getElsElseParserRuleCall_4_5_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__ElsAssignment_4_5"


    // $ANTLR start "rule__Elifs__EAssignment_0"
    // InternalFortXTrans.g:12339:1: rule__Elifs__EAssignment_0 : ( ruleElif ) ;
    public final void rule__Elifs__EAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12343:1: ( ( ruleElif ) )
            // InternalFortXTrans.g:12344:2: ( ruleElif )
            {
            // InternalFortXTrans.g:12344:2: ( ruleElif )
            // InternalFortXTrans.g:12345:3: ruleElif
            {
             before(grammarAccess.getElifsAccess().getEElifParserRuleCall_0_0()); 
            pushFollow(FOLLOW_2);
            ruleElif();

            state._fsp--;

             after(grammarAccess.getElifsAccess().getEElifParserRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Elifs__EAssignment_0"


    // $ANTLR start "rule__Elifs__EAssignment_1"
    // InternalFortXTrans.g:12354:1: rule__Elifs__EAssignment_1 : ( ruleElif ) ;
    public final void rule__Elifs__EAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12358:1: ( ( ruleElif ) )
            // InternalFortXTrans.g:12359:2: ( ruleElif )
            {
            // InternalFortXTrans.g:12359:2: ( ruleElif )
            // InternalFortXTrans.g:12360:3: ruleElif
            {
             before(grammarAccess.getElifsAccess().getEElifParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleElif();

            state._fsp--;

             after(grammarAccess.getElifsAccess().getEElifParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Elifs__EAssignment_1"


    // $ANTLR start "rule__Elif__ExprAssignment_1"
    // InternalFortXTrans.g:12369:1: rule__Elif__ExprAssignment_1 : ( ruleExpr ) ;
    public final void rule__Elif__ExprAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12373:1: ( ( ruleExpr ) )
            // InternalFortXTrans.g:12374:2: ( ruleExpr )
            {
            // InternalFortXTrans.g:12374:2: ( ruleExpr )
            // InternalFortXTrans.g:12375:3: ruleExpr
            {
             before(grammarAccess.getElifAccess().getExprExprParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleExpr();

            state._fsp--;

             after(grammarAccess.getElifAccess().getExprExprParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Elif__ExprAssignment_1"


    // $ANTLR start "rule__Elif__BlockAssignment_3"
    // InternalFortXTrans.g:12384:1: rule__Elif__BlockAssignment_3 : ( ruleBlockElems ) ;
    public final void rule__Elif__BlockAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12388:1: ( ( ruleBlockElems ) )
            // InternalFortXTrans.g:12389:2: ( ruleBlockElems )
            {
            // InternalFortXTrans.g:12389:2: ( ruleBlockElems )
            // InternalFortXTrans.g:12390:3: ruleBlockElems
            {
             before(grammarAccess.getElifAccess().getBlockBlockElemsParserRuleCall_3_0()); 
            pushFollow(FOLLOW_2);
            ruleBlockElems();

            state._fsp--;

             after(grammarAccess.getElifAccess().getBlockBlockElemsParserRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Elif__BlockAssignment_3"


    // $ANTLR start "rule__Else__BlockAssignment_1"
    // InternalFortXTrans.g:12399:1: rule__Else__BlockAssignment_1 : ( ruleBlockElems ) ;
    public final void rule__Else__BlockAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12403:1: ( ( ruleBlockElems ) )
            // InternalFortXTrans.g:12404:2: ( ruleBlockElems )
            {
            // InternalFortXTrans.g:12404:2: ( ruleBlockElems )
            // InternalFortXTrans.g:12405:3: ruleBlockElems
            {
             before(grammarAccess.getElseAccess().getBlockBlockElemsParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleBlockElems();

            state._fsp--;

             after(grammarAccess.getElseAccess().getBlockBlockElemsParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Else__BlockAssignment_1"


    // $ANTLR start "rule__Generators__BindingAssignment_0"
    // InternalFortXTrans.g:12414:1: rule__Generators__BindingAssignment_0 : ( ruleBinding ) ;
    public final void rule__Generators__BindingAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12418:1: ( ( ruleBinding ) )
            // InternalFortXTrans.g:12419:2: ( ruleBinding )
            {
            // InternalFortXTrans.g:12419:2: ( ruleBinding )
            // InternalFortXTrans.g:12420:3: ruleBinding
            {
             before(grammarAccess.getGeneratorsAccess().getBindingBindingParserRuleCall_0_0()); 
            pushFollow(FOLLOW_2);
            ruleBinding();

            state._fsp--;

             after(grammarAccess.getGeneratorsAccess().getBindingBindingParserRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Generators__BindingAssignment_0"


    // $ANTLR start "rule__Generators__ClauseAssignment_1_1"
    // InternalFortXTrans.g:12429:1: rule__Generators__ClauseAssignment_1_1 : ( ruleGenClause ) ;
    public final void rule__Generators__ClauseAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12433:1: ( ( ruleGenClause ) )
            // InternalFortXTrans.g:12434:2: ( ruleGenClause )
            {
            // InternalFortXTrans.g:12434:2: ( ruleGenClause )
            // InternalFortXTrans.g:12435:3: ruleGenClause
            {
             before(grammarAccess.getGeneratorsAccess().getClauseGenClauseParserRuleCall_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleGenClause();

            state._fsp--;

             after(grammarAccess.getGeneratorsAccess().getClauseGenClauseParserRuleCall_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Generators__ClauseAssignment_1_1"


    // $ANTLR start "rule__Binding__IdtupAssignment_0_0"
    // InternalFortXTrans.g:12444:1: rule__Binding__IdtupAssignment_0_0 : ( ruleQualified ) ;
    public final void rule__Binding__IdtupAssignment_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12448:1: ( ( ruleQualified ) )
            // InternalFortXTrans.g:12449:2: ( ruleQualified )
            {
            // InternalFortXTrans.g:12449:2: ( ruleQualified )
            // InternalFortXTrans.g:12450:3: ruleQualified
            {
             before(grammarAccess.getBindingAccess().getIdtupQualifiedParserRuleCall_0_0_0()); 
            pushFollow(FOLLOW_2);
            ruleQualified();

            state._fsp--;

             after(grammarAccess.getBindingAccess().getIdtupQualifiedParserRuleCall_0_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Binding__IdtupAssignment_0_0"


    // $ANTLR start "rule__Binding__GAssignment_0_2"
    // InternalFortXTrans.g:12459:1: rule__Binding__GAssignment_0_2 : ( ruleGenSource ) ;
    public final void rule__Binding__GAssignment_0_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12463:1: ( ( ruleGenSource ) )
            // InternalFortXTrans.g:12464:2: ( ruleGenSource )
            {
            // InternalFortXTrans.g:12464:2: ( ruleGenSource )
            // InternalFortXTrans.g:12465:3: ruleGenSource
            {
             before(grammarAccess.getBindingAccess().getGGenSourceParserRuleCall_0_2_0()); 
            pushFollow(FOLLOW_2);
            ruleGenSource();

            state._fsp--;

             after(grammarAccess.getBindingAccess().getGGenSourceParserRuleCall_0_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Binding__GAssignment_0_2"


    // $ANTLR start "rule__Binding__IdtupAssignment_1_0"
    // InternalFortXTrans.g:12474:1: rule__Binding__IdtupAssignment_1_0 : ( ruleQualified ) ;
    public final void rule__Binding__IdtupAssignment_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12478:1: ( ( ruleQualified ) )
            // InternalFortXTrans.g:12479:2: ( ruleQualified )
            {
            // InternalFortXTrans.g:12479:2: ( ruleQualified )
            // InternalFortXTrans.g:12480:3: ruleQualified
            {
             before(grammarAccess.getBindingAccess().getIdtupQualifiedParserRuleCall_1_0_0()); 
            pushFollow(FOLLOW_2);
            ruleQualified();

            state._fsp--;

             after(grammarAccess.getBindingAccess().getIdtupQualifiedParserRuleCall_1_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Binding__IdtupAssignment_1_0"


    // $ANTLR start "rule__Binding__SeqAssignment_1_2"
    // InternalFortXTrans.g:12489:1: rule__Binding__SeqAssignment_1_2 : ( ( 'seq' ) ) ;
    public final void rule__Binding__SeqAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12493:1: ( ( ( 'seq' ) ) )
            // InternalFortXTrans.g:12494:2: ( ( 'seq' ) )
            {
            // InternalFortXTrans.g:12494:2: ( ( 'seq' ) )
            // InternalFortXTrans.g:12495:3: ( 'seq' )
            {
             before(grammarAccess.getBindingAccess().getSeqSeqKeyword_1_2_0()); 
            // InternalFortXTrans.g:12496:3: ( 'seq' )
            // InternalFortXTrans.g:12497:4: 'seq'
            {
             before(grammarAccess.getBindingAccess().getSeqSeqKeyword_1_2_0()); 
            match(input,66,FOLLOW_2); 
             after(grammarAccess.getBindingAccess().getSeqSeqKeyword_1_2_0()); 

            }

             after(grammarAccess.getBindingAccess().getSeqSeqKeyword_1_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Binding__SeqAssignment_1_2"


    // $ANTLR start "rule__Binding__GAssignment_1_4"
    // InternalFortXTrans.g:12508:1: rule__Binding__GAssignment_1_4 : ( ruleGenSource ) ;
    public final void rule__Binding__GAssignment_1_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12512:1: ( ( ruleGenSource ) )
            // InternalFortXTrans.g:12513:2: ( ruleGenSource )
            {
            // InternalFortXTrans.g:12513:2: ( ruleGenSource )
            // InternalFortXTrans.g:12514:3: ruleGenSource
            {
             before(grammarAccess.getBindingAccess().getGGenSourceParserRuleCall_1_4_0()); 
            pushFollow(FOLLOW_2);
            ruleGenSource();

            state._fsp--;

             after(grammarAccess.getBindingAccess().getGGenSourceParserRuleCall_1_4_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Binding__GAssignment_1_4"


    // $ANTLR start "rule__GenSource__EndAssignment_1_2"
    // InternalFortXTrans.g:12523:1: rule__GenSource__EndAssignment_1_2 : ( ruleExpr ) ;
    public final void rule__GenSource__EndAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12527:1: ( ( ruleExpr ) )
            // InternalFortXTrans.g:12528:2: ( ruleExpr )
            {
            // InternalFortXTrans.g:12528:2: ( ruleExpr )
            // InternalFortXTrans.g:12529:3: ruleExpr
            {
             before(grammarAccess.getGenSourceAccess().getEndExprParserRuleCall_1_2_0()); 
            pushFollow(FOLLOW_2);
            ruleExpr();

            state._fsp--;

             after(grammarAccess.getGenSourceAccess().getEndExprParserRuleCall_1_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GenSource__EndAssignment_1_2"


    // $ANTLR start "rule__GenClause__BindingAssignment_0"
    // InternalFortXTrans.g:12538:1: rule__GenClause__BindingAssignment_0 : ( ruleBinding ) ;
    public final void rule__GenClause__BindingAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12542:1: ( ( ruleBinding ) )
            // InternalFortXTrans.g:12543:2: ( ruleBinding )
            {
            // InternalFortXTrans.g:12543:2: ( ruleBinding )
            // InternalFortXTrans.g:12544:3: ruleBinding
            {
             before(grammarAccess.getGenClauseAccess().getBindingBindingParserRuleCall_0_0()); 
            pushFollow(FOLLOW_2);
            ruleBinding();

            state._fsp--;

             after(grammarAccess.getGenClauseAccess().getBindingBindingParserRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GenClause__BindingAssignment_0"


    // $ANTLR start "rule__GenClause__ExprAssignment_1"
    // InternalFortXTrans.g:12553:1: rule__GenClause__ExprAssignment_1 : ( ruleExpr ) ;
    public final void rule__GenClause__ExprAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12557:1: ( ( ruleExpr ) )
            // InternalFortXTrans.g:12558:2: ( ruleExpr )
            {
            // InternalFortXTrans.g:12558:2: ( ruleExpr )
            // InternalFortXTrans.g:12559:3: ruleExpr
            {
             before(grammarAccess.getGenClauseAccess().getExprExprParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleExpr();

            state._fsp--;

             after(grammarAccess.getGenClauseAccess().getExprExprParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GenClause__ExprAssignment_1"


    // $ANTLR start "rule__BlockElems__BlockAssignment_0"
    // InternalFortXTrans.g:12568:1: rule__BlockElems__BlockAssignment_0 : ( ruleBlockElem ) ;
    public final void rule__BlockElems__BlockAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12572:1: ( ( ruleBlockElem ) )
            // InternalFortXTrans.g:12573:2: ( ruleBlockElem )
            {
            // InternalFortXTrans.g:12573:2: ( ruleBlockElem )
            // InternalFortXTrans.g:12574:3: ruleBlockElem
            {
             before(grammarAccess.getBlockElemsAccess().getBlockBlockElemParserRuleCall_0_0()); 
            pushFollow(FOLLOW_2);
            ruleBlockElem();

            state._fsp--;

             after(grammarAccess.getBlockElemsAccess().getBlockBlockElemParserRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BlockElems__BlockAssignment_0"


    // $ANTLR start "rule__BlockElems__BlockAssignment_1"
    // InternalFortXTrans.g:12583:1: rule__BlockElems__BlockAssignment_1 : ( ruleBlockElem ) ;
    public final void rule__BlockElems__BlockAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12587:1: ( ( ruleBlockElem ) )
            // InternalFortXTrans.g:12588:2: ( ruleBlockElem )
            {
            // InternalFortXTrans.g:12588:2: ( ruleBlockElem )
            // InternalFortXTrans.g:12589:3: ruleBlockElem
            {
             before(grammarAccess.getBlockElemsAccess().getBlockBlockElemParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleBlockElem();

            state._fsp--;

             after(grammarAccess.getBlockElemsAccess().getBlockBlockElemParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BlockElems__BlockAssignment_1"


    // $ANTLR start "rule__BlockElem__StAssignment"
    // InternalFortXTrans.g:12598:1: rule__BlockElem__StAssignment : ( ruleStmnts ) ;
    public final void rule__BlockElem__StAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12602:1: ( ( ruleStmnts ) )
            // InternalFortXTrans.g:12603:2: ( ruleStmnts )
            {
            // InternalFortXTrans.g:12603:2: ( ruleStmnts )
            // InternalFortXTrans.g:12604:3: ruleStmnts
            {
             before(grammarAccess.getBlockElemAccess().getStStmntsParserRuleCall_0()); 
            pushFollow(FOLLOW_2);
            ruleStmnts();

            state._fsp--;

             after(grammarAccess.getBlockElemAccess().getStStmntsParserRuleCall_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BlockElem__StAssignment"


    // $ANTLR start "rule__Do__DofsAssignment_0"
    // InternalFortXTrans.g:12613:1: rule__Do__DofsAssignment_0 : ( ruleDoFront ) ;
    public final void rule__Do__DofsAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12617:1: ( ( ruleDoFront ) )
            // InternalFortXTrans.g:12618:2: ( ruleDoFront )
            {
            // InternalFortXTrans.g:12618:2: ( ruleDoFront )
            // InternalFortXTrans.g:12619:3: ruleDoFront
            {
             before(grammarAccess.getDoAccess().getDofsDoFrontParserRuleCall_0_0()); 
            pushFollow(FOLLOW_2);
            ruleDoFront();

            state._fsp--;

             after(grammarAccess.getDoAccess().getDofsDoFrontParserRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Do__DofsAssignment_0"


    // $ANTLR start "rule__Do__DofsAssignment_1_1"
    // InternalFortXTrans.g:12628:1: rule__Do__DofsAssignment_1_1 : ( ruleDoFront ) ;
    public final void rule__Do__DofsAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12632:1: ( ( ruleDoFront ) )
            // InternalFortXTrans.g:12633:2: ( ruleDoFront )
            {
            // InternalFortXTrans.g:12633:2: ( ruleDoFront )
            // InternalFortXTrans.g:12634:3: ruleDoFront
            {
             before(grammarAccess.getDoAccess().getDofsDoFrontParserRuleCall_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleDoFront();

            state._fsp--;

             after(grammarAccess.getDoAccess().getDofsDoFrontParserRuleCall_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Do__DofsAssignment_1_1"


    // $ANTLR start "rule__DoFront__AtAssignment_0_0"
    // InternalFortXTrans.g:12643:1: rule__DoFront__AtAssignment_0_0 : ( ( 'at' ) ) ;
    public final void rule__DoFront__AtAssignment_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12647:1: ( ( ( 'at' ) ) )
            // InternalFortXTrans.g:12648:2: ( ( 'at' ) )
            {
            // InternalFortXTrans.g:12648:2: ( ( 'at' ) )
            // InternalFortXTrans.g:12649:3: ( 'at' )
            {
             before(grammarAccess.getDoFrontAccess().getAtAtKeyword_0_0_0()); 
            // InternalFortXTrans.g:12650:3: ( 'at' )
            // InternalFortXTrans.g:12651:4: 'at'
            {
             before(grammarAccess.getDoFrontAccess().getAtAtKeyword_0_0_0()); 
            match(input,67,FOLLOW_2); 
             after(grammarAccess.getDoFrontAccess().getAtAtKeyword_0_0_0()); 

            }

             after(grammarAccess.getDoFrontAccess().getAtAtKeyword_0_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DoFront__AtAssignment_0_0"


    // $ANTLR start "rule__DoFront__ExpAssignment_0_1"
    // InternalFortXTrans.g:12662:1: rule__DoFront__ExpAssignment_0_1 : ( ruleExpr ) ;
    public final void rule__DoFront__ExpAssignment_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12666:1: ( ( ruleExpr ) )
            // InternalFortXTrans.g:12667:2: ( ruleExpr )
            {
            // InternalFortXTrans.g:12667:2: ( ruleExpr )
            // InternalFortXTrans.g:12668:3: ruleExpr
            {
             before(grammarAccess.getDoFrontAccess().getExpExprParserRuleCall_0_1_0()); 
            pushFollow(FOLLOW_2);
            ruleExpr();

            state._fsp--;

             after(grammarAccess.getDoFrontAccess().getExpExprParserRuleCall_0_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DoFront__ExpAssignment_0_1"


    // $ANTLR start "rule__DoFront__AtomAssignment_1"
    // InternalFortXTrans.g:12677:1: rule__DoFront__AtomAssignment_1 : ( ( 'atomic' ) ) ;
    public final void rule__DoFront__AtomAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12681:1: ( ( ( 'atomic' ) ) )
            // InternalFortXTrans.g:12682:2: ( ( 'atomic' ) )
            {
            // InternalFortXTrans.g:12682:2: ( ( 'atomic' ) )
            // InternalFortXTrans.g:12683:3: ( 'atomic' )
            {
             before(grammarAccess.getDoFrontAccess().getAtomAtomicKeyword_1_0()); 
            // InternalFortXTrans.g:12684:3: ( 'atomic' )
            // InternalFortXTrans.g:12685:4: 'atomic'
            {
             before(grammarAccess.getDoFrontAccess().getAtomAtomicKeyword_1_0()); 
            match(input,59,FOLLOW_2); 
             after(grammarAccess.getDoFrontAccess().getAtomAtomicKeyword_1_0()); 

            }

             after(grammarAccess.getDoFrontAccess().getAtomAtomicKeyword_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DoFront__AtomAssignment_1"


    // $ANTLR start "rule__DoFront__BlockAssignment_3"
    // InternalFortXTrans.g:12696:1: rule__DoFront__BlockAssignment_3 : ( ruleBlockElems ) ;
    public final void rule__DoFront__BlockAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12700:1: ( ( ruleBlockElems ) )
            // InternalFortXTrans.g:12701:2: ( ruleBlockElems )
            {
            // InternalFortXTrans.g:12701:2: ( ruleBlockElems )
            // InternalFortXTrans.g:12702:3: ruleBlockElems
            {
             before(grammarAccess.getDoFrontAccess().getBlockBlockElemsParserRuleCall_3_0()); 
            pushFollow(FOLLOW_2);
            ruleBlockElems();

            state._fsp--;

             after(grammarAccess.getDoFrontAccess().getBlockBlockElemsParserRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DoFront__BlockAssignment_3"


    // $ANTLR start "rule__IsType__TypeAssignment_1"
    // InternalFortXTrans.g:12711:1: rule__IsType__TypeAssignment_1 : ( ruleSimpleName ) ;
    public final void rule__IsType__TypeAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12715:1: ( ( ruleSimpleName ) )
            // InternalFortXTrans.g:12716:2: ( ruleSimpleName )
            {
            // InternalFortXTrans.g:12716:2: ( ruleSimpleName )
            // InternalFortXTrans.g:12717:3: ruleSimpleName
            {
             before(grammarAccess.getIsTypeAccess().getTypeSimpleNameParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleSimpleName();

            state._fsp--;

             after(grammarAccess.getIsTypeAccess().getTypeSimpleNameParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IsType__TypeAssignment_1"


    // $ANTLR start "rule__FieldDecl__PriAssignment_0_0"
    // InternalFortXTrans.g:12726:1: rule__FieldDecl__PriAssignment_0_0 : ( ( 'private' ) ) ;
    public final void rule__FieldDecl__PriAssignment_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12730:1: ( ( ( 'private' ) ) )
            // InternalFortXTrans.g:12731:2: ( ( 'private' ) )
            {
            // InternalFortXTrans.g:12731:2: ( ( 'private' ) )
            // InternalFortXTrans.g:12732:3: ( 'private' )
            {
             before(grammarAccess.getFieldDeclAccess().getPriPrivateKeyword_0_0_0()); 
            // InternalFortXTrans.g:12733:3: ( 'private' )
            // InternalFortXTrans.g:12734:4: 'private'
            {
             before(grammarAccess.getFieldDeclAccess().getPriPrivateKeyword_0_0_0()); 
            match(input,57,FOLLOW_2); 
             after(grammarAccess.getFieldDeclAccess().getPriPrivateKeyword_0_0_0()); 

            }

             after(grammarAccess.getFieldDeclAccess().getPriPrivateKeyword_0_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__PriAssignment_0_0"


    // $ANTLR start "rule__FieldDecl__MutAssignment_0_1"
    // InternalFortXTrans.g:12745:1: rule__FieldDecl__MutAssignment_0_1 : ( ( 'var' ) ) ;
    public final void rule__FieldDecl__MutAssignment_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12749:1: ( ( ( 'var' ) ) )
            // InternalFortXTrans.g:12750:2: ( ( 'var' ) )
            {
            // InternalFortXTrans.g:12750:2: ( ( 'var' ) )
            // InternalFortXTrans.g:12751:3: ( 'var' )
            {
             before(grammarAccess.getFieldDeclAccess().getMutVarKeyword_0_1_0()); 
            // InternalFortXTrans.g:12752:3: ( 'var' )
            // InternalFortXTrans.g:12753:4: 'var'
            {
             before(grammarAccess.getFieldDeclAccess().getMutVarKeyword_0_1_0()); 
            match(input,68,FOLLOW_2); 
             after(grammarAccess.getFieldDeclAccess().getMutVarKeyword_0_1_0()); 

            }

             after(grammarAccess.getFieldDeclAccess().getMutVarKeyword_0_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__MutAssignment_0_1"


    // $ANTLR start "rule__FieldDecl__VarsAssignment_0_2"
    // InternalFortXTrans.g:12764:1: rule__FieldDecl__VarsAssignment_0_2 : ( ruleNoNewlineVarWTypes ) ;
    public final void rule__FieldDecl__VarsAssignment_0_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12768:1: ( ( ruleNoNewlineVarWTypes ) )
            // InternalFortXTrans.g:12769:2: ( ruleNoNewlineVarWTypes )
            {
            // InternalFortXTrans.g:12769:2: ( ruleNoNewlineVarWTypes )
            // InternalFortXTrans.g:12770:3: ruleNoNewlineVarWTypes
            {
             before(grammarAccess.getFieldDeclAccess().getVarsNoNewlineVarWTypesParserRuleCall_0_2_0()); 
            pushFollow(FOLLOW_2);
            ruleNoNewlineVarWTypes();

            state._fsp--;

             after(grammarAccess.getFieldDeclAccess().getVarsNoNewlineVarWTypesParserRuleCall_0_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__VarsAssignment_0_2"


    // $ANTLR start "rule__FieldDecl__InitAssignment_0_3_1"
    // InternalFortXTrans.g:12779:1: rule__FieldDecl__InitAssignment_0_3_1 : ( ruleExpr ) ;
    public final void rule__FieldDecl__InitAssignment_0_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12783:1: ( ( ruleExpr ) )
            // InternalFortXTrans.g:12784:2: ( ruleExpr )
            {
            // InternalFortXTrans.g:12784:2: ( ruleExpr )
            // InternalFortXTrans.g:12785:3: ruleExpr
            {
             before(grammarAccess.getFieldDeclAccess().getInitExprParserRuleCall_0_3_1_0()); 
            pushFollow(FOLLOW_2);
            ruleExpr();

            state._fsp--;

             after(grammarAccess.getFieldDeclAccess().getInitExprParserRuleCall_0_3_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__InitAssignment_0_3_1"


    // $ANTLR start "rule__FieldDecl__PriAssignment_1_0"
    // InternalFortXTrans.g:12794:1: rule__FieldDecl__PriAssignment_1_0 : ( ( 'private' ) ) ;
    public final void rule__FieldDecl__PriAssignment_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12798:1: ( ( ( 'private' ) ) )
            // InternalFortXTrans.g:12799:2: ( ( 'private' ) )
            {
            // InternalFortXTrans.g:12799:2: ( ( 'private' ) )
            // InternalFortXTrans.g:12800:3: ( 'private' )
            {
             before(grammarAccess.getFieldDeclAccess().getPriPrivateKeyword_1_0_0()); 
            // InternalFortXTrans.g:12801:3: ( 'private' )
            // InternalFortXTrans.g:12802:4: 'private'
            {
             before(grammarAccess.getFieldDeclAccess().getPriPrivateKeyword_1_0_0()); 
            match(input,57,FOLLOW_2); 
             after(grammarAccess.getFieldDeclAccess().getPriPrivateKeyword_1_0_0()); 

            }

             after(grammarAccess.getFieldDeclAccess().getPriPrivateKeyword_1_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__PriAssignment_1_0"


    // $ANTLR start "rule__FieldDecl__IdtupAssignment_1_1"
    // InternalFortXTrans.g:12813:1: rule__FieldDecl__IdtupAssignment_1_1 : ( ruleQualified ) ;
    public final void rule__FieldDecl__IdtupAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12817:1: ( ( ruleQualified ) )
            // InternalFortXTrans.g:12818:2: ( ruleQualified )
            {
            // InternalFortXTrans.g:12818:2: ( ruleQualified )
            // InternalFortXTrans.g:12819:3: ruleQualified
            {
             before(grammarAccess.getFieldDeclAccess().getIdtupQualifiedParserRuleCall_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleQualified();

            state._fsp--;

             after(grammarAccess.getFieldDeclAccess().getIdtupQualifiedParserRuleCall_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__IdtupAssignment_1_1"


    // $ANTLR start "rule__FieldDecl__InitAssignment_1_3"
    // InternalFortXTrans.g:12828:1: rule__FieldDecl__InitAssignment_1_3 : ( ruleExpr ) ;
    public final void rule__FieldDecl__InitAssignment_1_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12832:1: ( ( ruleExpr ) )
            // InternalFortXTrans.g:12833:2: ( ruleExpr )
            {
            // InternalFortXTrans.g:12833:2: ( ruleExpr )
            // InternalFortXTrans.g:12834:3: ruleExpr
            {
             before(grammarAccess.getFieldDeclAccess().getInitExprParserRuleCall_1_3_0()); 
            pushFollow(FOLLOW_2);
            ruleExpr();

            state._fsp--;

             after(grammarAccess.getFieldDeclAccess().getInitExprParserRuleCall_1_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__InitAssignment_1_3"


    // $ANTLR start "rule__FieldDecl__PriAssignment_2_0"
    // InternalFortXTrans.g:12843:1: rule__FieldDecl__PriAssignment_2_0 : ( ( 'private' ) ) ;
    public final void rule__FieldDecl__PriAssignment_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12847:1: ( ( ( 'private' ) ) )
            // InternalFortXTrans.g:12848:2: ( ( 'private' ) )
            {
            // InternalFortXTrans.g:12848:2: ( ( 'private' ) )
            // InternalFortXTrans.g:12849:3: ( 'private' )
            {
             before(grammarAccess.getFieldDeclAccess().getPriPrivateKeyword_2_0_0()); 
            // InternalFortXTrans.g:12850:3: ( 'private' )
            // InternalFortXTrans.g:12851:4: 'private'
            {
             before(grammarAccess.getFieldDeclAccess().getPriPrivateKeyword_2_0_0()); 
            match(input,57,FOLLOW_2); 
             after(grammarAccess.getFieldDeclAccess().getPriPrivateKeyword_2_0_0()); 

            }

             after(grammarAccess.getFieldDeclAccess().getPriPrivateKeyword_2_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__PriAssignment_2_0"


    // $ANTLR start "rule__FieldDecl__MutAssignment_2_1"
    // InternalFortXTrans.g:12862:1: rule__FieldDecl__MutAssignment_2_1 : ( ( 'var' ) ) ;
    public final void rule__FieldDecl__MutAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12866:1: ( ( ( 'var' ) ) )
            // InternalFortXTrans.g:12867:2: ( ( 'var' ) )
            {
            // InternalFortXTrans.g:12867:2: ( ( 'var' ) )
            // InternalFortXTrans.g:12868:3: ( 'var' )
            {
             before(grammarAccess.getFieldDeclAccess().getMutVarKeyword_2_1_0()); 
            // InternalFortXTrans.g:12869:3: ( 'var' )
            // InternalFortXTrans.g:12870:4: 'var'
            {
             before(grammarAccess.getFieldDeclAccess().getMutVarKeyword_2_1_0()); 
            match(input,68,FOLLOW_2); 
             after(grammarAccess.getFieldDeclAccess().getMutVarKeyword_2_1_0()); 

            }

             after(grammarAccess.getFieldDeclAccess().getMutVarKeyword_2_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__MutAssignment_2_1"


    // $ANTLR start "rule__FieldDecl__IdtupAssignment_2_2"
    // InternalFortXTrans.g:12881:1: rule__FieldDecl__IdtupAssignment_2_2 : ( ruleQualified ) ;
    public final void rule__FieldDecl__IdtupAssignment_2_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12885:1: ( ( ruleQualified ) )
            // InternalFortXTrans.g:12886:2: ( ruleQualified )
            {
            // InternalFortXTrans.g:12886:2: ( ruleQualified )
            // InternalFortXTrans.g:12887:3: ruleQualified
            {
             before(grammarAccess.getFieldDeclAccess().getIdtupQualifiedParserRuleCall_2_2_0()); 
            pushFollow(FOLLOW_2);
            ruleQualified();

            state._fsp--;

             after(grammarAccess.getFieldDeclAccess().getIdtupQualifiedParserRuleCall_2_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__IdtupAssignment_2_2"


    // $ANTLR start "rule__FieldDecl__TypeAssignment_2_4"
    // InternalFortXTrans.g:12896:1: rule__FieldDecl__TypeAssignment_2_4 : ( ruleSimpleName ) ;
    public final void rule__FieldDecl__TypeAssignment_2_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12900:1: ( ( ruleSimpleName ) )
            // InternalFortXTrans.g:12901:2: ( ruleSimpleName )
            {
            // InternalFortXTrans.g:12901:2: ( ruleSimpleName )
            // InternalFortXTrans.g:12902:3: ruleSimpleName
            {
             before(grammarAccess.getFieldDeclAccess().getTypeSimpleNameParserRuleCall_2_4_0()); 
            pushFollow(FOLLOW_2);
            ruleSimpleName();

            state._fsp--;

             after(grammarAccess.getFieldDeclAccess().getTypeSimpleNameParserRuleCall_2_4_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__TypeAssignment_2_4"


    // $ANTLR start "rule__FieldDecl__InitAssignment_2_6_1"
    // InternalFortXTrans.g:12911:1: rule__FieldDecl__InitAssignment_2_6_1 : ( ruleExpr ) ;
    public final void rule__FieldDecl__InitAssignment_2_6_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12915:1: ( ( ruleExpr ) )
            // InternalFortXTrans.g:12916:2: ( ruleExpr )
            {
            // InternalFortXTrans.g:12916:2: ( ruleExpr )
            // InternalFortXTrans.g:12917:3: ruleExpr
            {
             before(grammarAccess.getFieldDeclAccess().getInitExprParserRuleCall_2_6_1_0()); 
            pushFollow(FOLLOW_2);
            ruleExpr();

            state._fsp--;

             after(grammarAccess.getFieldDeclAccess().getInitExprParserRuleCall_2_6_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__InitAssignment_2_6_1"


    // $ANTLR start "rule__FieldDecl__PriAssignment_3_0"
    // InternalFortXTrans.g:12926:1: rule__FieldDecl__PriAssignment_3_0 : ( ( 'private' ) ) ;
    public final void rule__FieldDecl__PriAssignment_3_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12930:1: ( ( ( 'private' ) ) )
            // InternalFortXTrans.g:12931:2: ( ( 'private' ) )
            {
            // InternalFortXTrans.g:12931:2: ( ( 'private' ) )
            // InternalFortXTrans.g:12932:3: ( 'private' )
            {
             before(grammarAccess.getFieldDeclAccess().getPriPrivateKeyword_3_0_0()); 
            // InternalFortXTrans.g:12933:3: ( 'private' )
            // InternalFortXTrans.g:12934:4: 'private'
            {
             before(grammarAccess.getFieldDeclAccess().getPriPrivateKeyword_3_0_0()); 
            match(input,57,FOLLOW_2); 
             after(grammarAccess.getFieldDeclAccess().getPriPrivateKeyword_3_0_0()); 

            }

             after(grammarAccess.getFieldDeclAccess().getPriPrivateKeyword_3_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__PriAssignment_3_0"


    // $ANTLR start "rule__FieldDecl__MutAssignment_3_1"
    // InternalFortXTrans.g:12945:1: rule__FieldDecl__MutAssignment_3_1 : ( ( 'var' ) ) ;
    public final void rule__FieldDecl__MutAssignment_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12949:1: ( ( ( 'var' ) ) )
            // InternalFortXTrans.g:12950:2: ( ( 'var' ) )
            {
            // InternalFortXTrans.g:12950:2: ( ( 'var' ) )
            // InternalFortXTrans.g:12951:3: ( 'var' )
            {
             before(grammarAccess.getFieldDeclAccess().getMutVarKeyword_3_1_0()); 
            // InternalFortXTrans.g:12952:3: ( 'var' )
            // InternalFortXTrans.g:12953:4: 'var'
            {
             before(grammarAccess.getFieldDeclAccess().getMutVarKeyword_3_1_0()); 
            match(input,68,FOLLOW_2); 
             after(grammarAccess.getFieldDeclAccess().getMutVarKeyword_3_1_0()); 

            }

             after(grammarAccess.getFieldDeclAccess().getMutVarKeyword_3_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__MutAssignment_3_1"


    // $ANTLR start "rule__FieldDecl__IdtupAssignment_3_2"
    // InternalFortXTrans.g:12964:1: rule__FieldDecl__IdtupAssignment_3_2 : ( ruleQualified ) ;
    public final void rule__FieldDecl__IdtupAssignment_3_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12968:1: ( ( ruleQualified ) )
            // InternalFortXTrans.g:12969:2: ( ruleQualified )
            {
            // InternalFortXTrans.g:12969:2: ( ruleQualified )
            // InternalFortXTrans.g:12970:3: ruleQualified
            {
             before(grammarAccess.getFieldDeclAccess().getIdtupQualifiedParserRuleCall_3_2_0()); 
            pushFollow(FOLLOW_2);
            ruleQualified();

            state._fsp--;

             after(grammarAccess.getFieldDeclAccess().getIdtupQualifiedParserRuleCall_3_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__IdtupAssignment_3_2"


    // $ANTLR start "rule__FieldDecl__TuptypeAssignment_3_4"
    // InternalFortXTrans.g:12979:1: rule__FieldDecl__TuptypeAssignment_3_4 : ( ruleTupleType ) ;
    public final void rule__FieldDecl__TuptypeAssignment_3_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12983:1: ( ( ruleTupleType ) )
            // InternalFortXTrans.g:12984:2: ( ruleTupleType )
            {
            // InternalFortXTrans.g:12984:2: ( ruleTupleType )
            // InternalFortXTrans.g:12985:3: ruleTupleType
            {
             before(grammarAccess.getFieldDeclAccess().getTuptypeTupleTypeParserRuleCall_3_4_0()); 
            pushFollow(FOLLOW_2);
            ruleTupleType();

            state._fsp--;

             after(grammarAccess.getFieldDeclAccess().getTuptypeTupleTypeParserRuleCall_3_4_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__TuptypeAssignment_3_4"


    // $ANTLR start "rule__FieldDecl__InitAssignment_3_5_1"
    // InternalFortXTrans.g:12994:1: rule__FieldDecl__InitAssignment_3_5_1 : ( ruleExpr ) ;
    public final void rule__FieldDecl__InitAssignment_3_5_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12998:1: ( ( ruleExpr ) )
            // InternalFortXTrans.g:12999:2: ( ruleExpr )
            {
            // InternalFortXTrans.g:12999:2: ( ruleExpr )
            // InternalFortXTrans.g:13000:3: ruleExpr
            {
             before(grammarAccess.getFieldDeclAccess().getInitExprParserRuleCall_3_5_1_0()); 
            pushFollow(FOLLOW_2);
            ruleExpr();

            state._fsp--;

             after(grammarAccess.getFieldDeclAccess().getInitExprParserRuleCall_3_5_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__InitAssignment_3_5_1"


    // $ANTLR start "rule__NoNewlineVarWTypes__SingleAssignment_0"
    // InternalFortXTrans.g:13009:1: rule__NoNewlineVarWTypes__SingleAssignment_0 : ( ruleNoNewlineVarWType ) ;
    public final void rule__NoNewlineVarWTypes__SingleAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13013:1: ( ( ruleNoNewlineVarWType ) )
            // InternalFortXTrans.g:13014:2: ( ruleNoNewlineVarWType )
            {
            // InternalFortXTrans.g:13014:2: ( ruleNoNewlineVarWType )
            // InternalFortXTrans.g:13015:3: ruleNoNewlineVarWType
            {
             before(grammarAccess.getNoNewlineVarWTypesAccess().getSingleNoNewlineVarWTypeParserRuleCall_0_0()); 
            pushFollow(FOLLOW_2);
            ruleNoNewlineVarWType();

            state._fsp--;

             after(grammarAccess.getNoNewlineVarWTypesAccess().getSingleNoNewlineVarWTypeParserRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NoNewlineVarWTypes__SingleAssignment_0"


    // $ANTLR start "rule__NoNewlineVarWTypes__MultipleAssignment_1_1"
    // InternalFortXTrans.g:13024:1: rule__NoNewlineVarWTypes__MultipleAssignment_1_1 : ( ruleNoNewlineVarWType ) ;
    public final void rule__NoNewlineVarWTypes__MultipleAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13028:1: ( ( ruleNoNewlineVarWType ) )
            // InternalFortXTrans.g:13029:2: ( ruleNoNewlineVarWType )
            {
            // InternalFortXTrans.g:13029:2: ( ruleNoNewlineVarWType )
            // InternalFortXTrans.g:13030:3: ruleNoNewlineVarWType
            {
             before(grammarAccess.getNoNewlineVarWTypesAccess().getMultipleNoNewlineVarWTypeParserRuleCall_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleNoNewlineVarWType();

            state._fsp--;

             after(grammarAccess.getNoNewlineVarWTypesAccess().getMultipleNoNewlineVarWTypeParserRuleCall_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NoNewlineVarWTypes__MultipleAssignment_1_1"


    // $ANTLR start "rule__NoNewlineVarWTypes__MultipleAssignment_1_2_1"
    // InternalFortXTrans.g:13039:1: rule__NoNewlineVarWTypes__MultipleAssignment_1_2_1 : ( ruleNoNewlineVarWType ) ;
    public final void rule__NoNewlineVarWTypes__MultipleAssignment_1_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13043:1: ( ( ruleNoNewlineVarWType ) )
            // InternalFortXTrans.g:13044:2: ( ruleNoNewlineVarWType )
            {
            // InternalFortXTrans.g:13044:2: ( ruleNoNewlineVarWType )
            // InternalFortXTrans.g:13045:3: ruleNoNewlineVarWType
            {
             before(grammarAccess.getNoNewlineVarWTypesAccess().getMultipleNoNewlineVarWTypeParserRuleCall_1_2_1_0()); 
            pushFollow(FOLLOW_2);
            ruleNoNewlineVarWType();

            state._fsp--;

             after(grammarAccess.getNoNewlineVarWTypesAccess().getMultipleNoNewlineVarWTypeParserRuleCall_1_2_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NoNewlineVarWTypes__MultipleAssignment_1_2_1"


    // $ANTLR start "rule__NoNewlineVarWType__BidAssignment_0"
    // InternalFortXTrans.g:13054:1: rule__NoNewlineVarWType__BidAssignment_0 : ( ruleQualifiedName ) ;
    public final void rule__NoNewlineVarWType__BidAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13058:1: ( ( ruleQualifiedName ) )
            // InternalFortXTrans.g:13059:2: ( ruleQualifiedName )
            {
            // InternalFortXTrans.g:13059:2: ( ruleQualifiedName )
            // InternalFortXTrans.g:13060:3: ruleQualifiedName
            {
             before(grammarAccess.getNoNewlineVarWTypeAccess().getBidQualifiedNameParserRuleCall_0_0()); 
            pushFollow(FOLLOW_2);
            ruleQualifiedName();

            state._fsp--;

             after(grammarAccess.getNoNewlineVarWTypeAccess().getBidQualifiedNameParserRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NoNewlineVarWType__BidAssignment_0"


    // $ANTLR start "rule__NoNewlineVarWType__IstypeAssignment_1"
    // InternalFortXTrans.g:13069:1: rule__NoNewlineVarWType__IstypeAssignment_1 : ( ruleIsType ) ;
    public final void rule__NoNewlineVarWType__IstypeAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13073:1: ( ( ruleIsType ) )
            // InternalFortXTrans.g:13074:2: ( ruleIsType )
            {
            // InternalFortXTrans.g:13074:2: ( ruleIsType )
            // InternalFortXTrans.g:13075:3: ruleIsType
            {
             before(grammarAccess.getNoNewlineVarWTypeAccess().getIstypeIsTypeParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleIsType();

            state._fsp--;

             after(grammarAccess.getNoNewlineVarWTypeAccess().getIstypeIsTypeParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NoNewlineVarWType__IstypeAssignment_1"


    // $ANTLR start "rule__LiteralList__LitAssignment_1"
    // InternalFortXTrans.g:13084:1: rule__LiteralList__LitAssignment_1 : ( ruleLiteral ) ;
    public final void rule__LiteralList__LitAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13088:1: ( ( ruleLiteral ) )
            // InternalFortXTrans.g:13089:2: ( ruleLiteral )
            {
            // InternalFortXTrans.g:13089:2: ( ruleLiteral )
            // InternalFortXTrans.g:13090:3: ruleLiteral
            {
             before(grammarAccess.getLiteralListAccess().getLitLiteralParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleLiteral();

            state._fsp--;

             after(grammarAccess.getLiteralListAccess().getLitLiteralParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralList__LitAssignment_1"


    // $ANTLR start "rule__LiteralList__LitAssignment_2_1"
    // InternalFortXTrans.g:13099:1: rule__LiteralList__LitAssignment_2_1 : ( ruleLiteral ) ;
    public final void rule__LiteralList__LitAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13103:1: ( ( ruleLiteral ) )
            // InternalFortXTrans.g:13104:2: ( ruleLiteral )
            {
            // InternalFortXTrans.g:13104:2: ( ruleLiteral )
            // InternalFortXTrans.g:13105:3: ruleLiteral
            {
             before(grammarAccess.getLiteralListAccess().getLitLiteralParserRuleCall_2_1_0()); 
            pushFollow(FOLLOW_2);
            ruleLiteral();

            state._fsp--;

             after(grammarAccess.getLiteralListAccess().getLitLiteralParserRuleCall_2_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralList__LitAssignment_2_1"


    // $ANTLR start "rule__Literal__ValueAssignment_0_1"
    // InternalFortXTrans.g:13114:1: rule__Literal__ValueAssignment_0_1 : ( RULE_INT ) ;
    public final void rule__Literal__ValueAssignment_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13118:1: ( ( RULE_INT ) )
            // InternalFortXTrans.g:13119:2: ( RULE_INT )
            {
            // InternalFortXTrans.g:13119:2: ( RULE_INT )
            // InternalFortXTrans.g:13120:3: RULE_INT
            {
             before(grammarAccess.getLiteralAccess().getValueINTTerminalRuleCall_0_1_0()); 
            match(input,RULE_INT,FOLLOW_2); 
             after(grammarAccess.getLiteralAccess().getValueINTTerminalRuleCall_0_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Literal__ValueAssignment_0_1"


    // $ANTLR start "rule__Literal__ValueAssignment_1_1"
    // InternalFortXTrans.g:13129:1: rule__Literal__ValueAssignment_1_1 : ( RULE_FLOAT ) ;
    public final void rule__Literal__ValueAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13133:1: ( ( RULE_FLOAT ) )
            // InternalFortXTrans.g:13134:2: ( RULE_FLOAT )
            {
            // InternalFortXTrans.g:13134:2: ( RULE_FLOAT )
            // InternalFortXTrans.g:13135:3: RULE_FLOAT
            {
             before(grammarAccess.getLiteralAccess().getValueFLOATTerminalRuleCall_1_1_0()); 
            match(input,RULE_FLOAT,FOLLOW_2); 
             after(grammarAccess.getLiteralAccess().getValueFLOATTerminalRuleCall_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Literal__ValueAssignment_1_1"


    // $ANTLR start "rule__Literal__ValueAssignment_2_1"
    // InternalFortXTrans.g:13144:1: rule__Literal__ValueAssignment_2_1 : ( RULE_STRING ) ;
    public final void rule__Literal__ValueAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13148:1: ( ( RULE_STRING ) )
            // InternalFortXTrans.g:13149:2: ( RULE_STRING )
            {
            // InternalFortXTrans.g:13149:2: ( RULE_STRING )
            // InternalFortXTrans.g:13150:3: RULE_STRING
            {
             before(grammarAccess.getLiteralAccess().getValueSTRINGTerminalRuleCall_2_1_0()); 
            match(input,RULE_STRING,FOLLOW_2); 
             after(grammarAccess.getLiteralAccess().getValueSTRINGTerminalRuleCall_2_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Literal__ValueAssignment_2_1"


    // $ANTLR start "rule__Literal__ValueAssignment_3_1_0"
    // InternalFortXTrans.g:13159:1: rule__Literal__ValueAssignment_3_1_0 : ( ( 'true' ) ) ;
    public final void rule__Literal__ValueAssignment_3_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13163:1: ( ( ( 'true' ) ) )
            // InternalFortXTrans.g:13164:2: ( ( 'true' ) )
            {
            // InternalFortXTrans.g:13164:2: ( ( 'true' ) )
            // InternalFortXTrans.g:13165:3: ( 'true' )
            {
             before(grammarAccess.getLiteralAccess().getValueTrueKeyword_3_1_0_0()); 
            // InternalFortXTrans.g:13166:3: ( 'true' )
            // InternalFortXTrans.g:13167:4: 'true'
            {
             before(grammarAccess.getLiteralAccess().getValueTrueKeyword_3_1_0_0()); 
            match(input,69,FOLLOW_2); 
             after(grammarAccess.getLiteralAccess().getValueTrueKeyword_3_1_0_0()); 

            }

             after(grammarAccess.getLiteralAccess().getValueTrueKeyword_3_1_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Literal__ValueAssignment_3_1_0"


    // $ANTLR start "rule__Literal__ValueAssignment_3_1_1"
    // InternalFortXTrans.g:13178:1: rule__Literal__ValueAssignment_3_1_1 : ( ( 'false' ) ) ;
    public final void rule__Literal__ValueAssignment_3_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13182:1: ( ( ( 'false' ) ) )
            // InternalFortXTrans.g:13183:2: ( ( 'false' ) )
            {
            // InternalFortXTrans.g:13183:2: ( ( 'false' ) )
            // InternalFortXTrans.g:13184:3: ( 'false' )
            {
             before(grammarAccess.getLiteralAccess().getValueFalseKeyword_3_1_1_0()); 
            // InternalFortXTrans.g:13185:3: ( 'false' )
            // InternalFortXTrans.g:13186:4: 'false'
            {
             before(grammarAccess.getLiteralAccess().getValueFalseKeyword_3_1_1_0()); 
            match(input,70,FOLLOW_2); 
             after(grammarAccess.getLiteralAccess().getValueFalseKeyword_3_1_1_0()); 

            }

             after(grammarAccess.getLiteralAccess().getValueFalseKeyword_3_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Literal__ValueAssignment_3_1_1"


    // $ANTLR start "rule__LocalVarDecl__MutAssignment_0_0"
    // InternalFortXTrans.g:13197:1: rule__LocalVarDecl__MutAssignment_0_0 : ( ( 'var' ) ) ;
    public final void rule__LocalVarDecl__MutAssignment_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13201:1: ( ( ( 'var' ) ) )
            // InternalFortXTrans.g:13202:2: ( ( 'var' ) )
            {
            // InternalFortXTrans.g:13202:2: ( ( 'var' ) )
            // InternalFortXTrans.g:13203:3: ( 'var' )
            {
             before(grammarAccess.getLocalVarDeclAccess().getMutVarKeyword_0_0_0()); 
            // InternalFortXTrans.g:13204:3: ( 'var' )
            // InternalFortXTrans.g:13205:4: 'var'
            {
             before(grammarAccess.getLocalVarDeclAccess().getMutVarKeyword_0_0_0()); 
            match(input,68,FOLLOW_2); 
             after(grammarAccess.getLocalVarDeclAccess().getMutVarKeyword_0_0_0()); 

            }

             after(grammarAccess.getLocalVarDeclAccess().getMutVarKeyword_0_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__MutAssignment_0_0"


    // $ANTLR start "rule__LocalVarDecl__VarsAssignment_0_1"
    // InternalFortXTrans.g:13216:1: rule__LocalVarDecl__VarsAssignment_0_1 : ( ruleNoNewlineVarWTypes ) ;
    public final void rule__LocalVarDecl__VarsAssignment_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13220:1: ( ( ruleNoNewlineVarWTypes ) )
            // InternalFortXTrans.g:13221:2: ( ruleNoNewlineVarWTypes )
            {
            // InternalFortXTrans.g:13221:2: ( ruleNoNewlineVarWTypes )
            // InternalFortXTrans.g:13222:3: ruleNoNewlineVarWTypes
            {
             before(grammarAccess.getLocalVarDeclAccess().getVarsNoNewlineVarWTypesParserRuleCall_0_1_0()); 
            pushFollow(FOLLOW_2);
            ruleNoNewlineVarWTypes();

            state._fsp--;

             after(grammarAccess.getLocalVarDeclAccess().getVarsNoNewlineVarWTypesParserRuleCall_0_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__VarsAssignment_0_1"


    // $ANTLR start "rule__LocalVarDecl__InitAssignment_0_3"
    // InternalFortXTrans.g:13231:1: rule__LocalVarDecl__InitAssignment_0_3 : ( ruleExpr ) ;
    public final void rule__LocalVarDecl__InitAssignment_0_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13235:1: ( ( ruleExpr ) )
            // InternalFortXTrans.g:13236:2: ( ruleExpr )
            {
            // InternalFortXTrans.g:13236:2: ( ruleExpr )
            // InternalFortXTrans.g:13237:3: ruleExpr
            {
             before(grammarAccess.getLocalVarDeclAccess().getInitExprParserRuleCall_0_3_0()); 
            pushFollow(FOLLOW_2);
            ruleExpr();

            state._fsp--;

             after(grammarAccess.getLocalVarDeclAccess().getInitExprParserRuleCall_0_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__InitAssignment_0_3"


    // $ANTLR start "rule__LocalVarDecl__IdtupAssignment_1_0"
    // InternalFortXTrans.g:13246:1: rule__LocalVarDecl__IdtupAssignment_1_0 : ( ruleQualified ) ;
    public final void rule__LocalVarDecl__IdtupAssignment_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13250:1: ( ( ruleQualified ) )
            // InternalFortXTrans.g:13251:2: ( ruleQualified )
            {
            // InternalFortXTrans.g:13251:2: ( ruleQualified )
            // InternalFortXTrans.g:13252:3: ruleQualified
            {
             before(grammarAccess.getLocalVarDeclAccess().getIdtupQualifiedParserRuleCall_1_0_0()); 
            pushFollow(FOLLOW_2);
            ruleQualified();

            state._fsp--;

             after(grammarAccess.getLocalVarDeclAccess().getIdtupQualifiedParserRuleCall_1_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__IdtupAssignment_1_0"


    // $ANTLR start "rule__LocalVarDecl__InitAssignment_1_2"
    // InternalFortXTrans.g:13261:1: rule__LocalVarDecl__InitAssignment_1_2 : ( ruleExpr ) ;
    public final void rule__LocalVarDecl__InitAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13265:1: ( ( ruleExpr ) )
            // InternalFortXTrans.g:13266:2: ( ruleExpr )
            {
            // InternalFortXTrans.g:13266:2: ( ruleExpr )
            // InternalFortXTrans.g:13267:3: ruleExpr
            {
             before(grammarAccess.getLocalVarDeclAccess().getInitExprParserRuleCall_1_2_0()); 
            pushFollow(FOLLOW_2);
            ruleExpr();

            state._fsp--;

             after(grammarAccess.getLocalVarDeclAccess().getInitExprParserRuleCall_1_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__InitAssignment_1_2"


    // $ANTLR start "rule__LocalVarDecl__MutAssignment_2_0"
    // InternalFortXTrans.g:13276:1: rule__LocalVarDecl__MutAssignment_2_0 : ( ( 'var' ) ) ;
    public final void rule__LocalVarDecl__MutAssignment_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13280:1: ( ( ( 'var' ) ) )
            // InternalFortXTrans.g:13281:2: ( ( 'var' ) )
            {
            // InternalFortXTrans.g:13281:2: ( ( 'var' ) )
            // InternalFortXTrans.g:13282:3: ( 'var' )
            {
             before(grammarAccess.getLocalVarDeclAccess().getMutVarKeyword_2_0_0()); 
            // InternalFortXTrans.g:13283:3: ( 'var' )
            // InternalFortXTrans.g:13284:4: 'var'
            {
             before(grammarAccess.getLocalVarDeclAccess().getMutVarKeyword_2_0_0()); 
            match(input,68,FOLLOW_2); 
             after(grammarAccess.getLocalVarDeclAccess().getMutVarKeyword_2_0_0()); 

            }

             after(grammarAccess.getLocalVarDeclAccess().getMutVarKeyword_2_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__MutAssignment_2_0"


    // $ANTLR start "rule__LocalVarDecl__IdtupAssignment_2_1"
    // InternalFortXTrans.g:13295:1: rule__LocalVarDecl__IdtupAssignment_2_1 : ( ruleQualified ) ;
    public final void rule__LocalVarDecl__IdtupAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13299:1: ( ( ruleQualified ) )
            // InternalFortXTrans.g:13300:2: ( ruleQualified )
            {
            // InternalFortXTrans.g:13300:2: ( ruleQualified )
            // InternalFortXTrans.g:13301:3: ruleQualified
            {
             before(grammarAccess.getLocalVarDeclAccess().getIdtupQualifiedParserRuleCall_2_1_0()); 
            pushFollow(FOLLOW_2);
            ruleQualified();

            state._fsp--;

             after(grammarAccess.getLocalVarDeclAccess().getIdtupQualifiedParserRuleCall_2_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__IdtupAssignment_2_1"


    // $ANTLR start "rule__LocalVarDecl__TypeAssignment_2_3"
    // InternalFortXTrans.g:13310:1: rule__LocalVarDecl__TypeAssignment_2_3 : ( ruleSimpleName ) ;
    public final void rule__LocalVarDecl__TypeAssignment_2_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13314:1: ( ( ruleSimpleName ) )
            // InternalFortXTrans.g:13315:2: ( ruleSimpleName )
            {
            // InternalFortXTrans.g:13315:2: ( ruleSimpleName )
            // InternalFortXTrans.g:13316:3: ruleSimpleName
            {
             before(grammarAccess.getLocalVarDeclAccess().getTypeSimpleNameParserRuleCall_2_3_0()); 
            pushFollow(FOLLOW_2);
            ruleSimpleName();

            state._fsp--;

             after(grammarAccess.getLocalVarDeclAccess().getTypeSimpleNameParserRuleCall_2_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__TypeAssignment_2_3"


    // $ANTLR start "rule__LocalVarDecl__InitAssignment_2_6"
    // InternalFortXTrans.g:13325:1: rule__LocalVarDecl__InitAssignment_2_6 : ( ruleExpr ) ;
    public final void rule__LocalVarDecl__InitAssignment_2_6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13329:1: ( ( ruleExpr ) )
            // InternalFortXTrans.g:13330:2: ( ruleExpr )
            {
            // InternalFortXTrans.g:13330:2: ( ruleExpr )
            // InternalFortXTrans.g:13331:3: ruleExpr
            {
             before(grammarAccess.getLocalVarDeclAccess().getInitExprParserRuleCall_2_6_0()); 
            pushFollow(FOLLOW_2);
            ruleExpr();

            state._fsp--;

             after(grammarAccess.getLocalVarDeclAccess().getInitExprParserRuleCall_2_6_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__InitAssignment_2_6"


    // $ANTLR start "rule__LocalVarDecl__MutAssignment_3_0"
    // InternalFortXTrans.g:13340:1: rule__LocalVarDecl__MutAssignment_3_0 : ( ( 'var' ) ) ;
    public final void rule__LocalVarDecl__MutAssignment_3_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13344:1: ( ( ( 'var' ) ) )
            // InternalFortXTrans.g:13345:2: ( ( 'var' ) )
            {
            // InternalFortXTrans.g:13345:2: ( ( 'var' ) )
            // InternalFortXTrans.g:13346:3: ( 'var' )
            {
             before(grammarAccess.getLocalVarDeclAccess().getMutVarKeyword_3_0_0()); 
            // InternalFortXTrans.g:13347:3: ( 'var' )
            // InternalFortXTrans.g:13348:4: 'var'
            {
             before(grammarAccess.getLocalVarDeclAccess().getMutVarKeyword_3_0_0()); 
            match(input,68,FOLLOW_2); 
             after(grammarAccess.getLocalVarDeclAccess().getMutVarKeyword_3_0_0()); 

            }

             after(grammarAccess.getLocalVarDeclAccess().getMutVarKeyword_3_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__MutAssignment_3_0"


    // $ANTLR start "rule__LocalVarDecl__IdtupAssignment_3_1"
    // InternalFortXTrans.g:13359:1: rule__LocalVarDecl__IdtupAssignment_3_1 : ( ruleQualified ) ;
    public final void rule__LocalVarDecl__IdtupAssignment_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13363:1: ( ( ruleQualified ) )
            // InternalFortXTrans.g:13364:2: ( ruleQualified )
            {
            // InternalFortXTrans.g:13364:2: ( ruleQualified )
            // InternalFortXTrans.g:13365:3: ruleQualified
            {
             before(grammarAccess.getLocalVarDeclAccess().getIdtupQualifiedParserRuleCall_3_1_0()); 
            pushFollow(FOLLOW_2);
            ruleQualified();

            state._fsp--;

             after(grammarAccess.getLocalVarDeclAccess().getIdtupQualifiedParserRuleCall_3_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__IdtupAssignment_3_1"


    // $ANTLR start "rule__LocalVarDecl__TuptypeAssignment_3_3"
    // InternalFortXTrans.g:13374:1: rule__LocalVarDecl__TuptypeAssignment_3_3 : ( ruleTupleType ) ;
    public final void rule__LocalVarDecl__TuptypeAssignment_3_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13378:1: ( ( ruleTupleType ) )
            // InternalFortXTrans.g:13379:2: ( ruleTupleType )
            {
            // InternalFortXTrans.g:13379:2: ( ruleTupleType )
            // InternalFortXTrans.g:13380:3: ruleTupleType
            {
             before(grammarAccess.getLocalVarDeclAccess().getTuptypeTupleTypeParserRuleCall_3_3_0()); 
            pushFollow(FOLLOW_2);
            ruleTupleType();

            state._fsp--;

             after(grammarAccess.getLocalVarDeclAccess().getTuptypeTupleTypeParserRuleCall_3_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__TuptypeAssignment_3_3"


    // $ANTLR start "rule__LocalVarDecl__InitAssignment_3_5"
    // InternalFortXTrans.g:13389:1: rule__LocalVarDecl__InitAssignment_3_5 : ( ruleExpr ) ;
    public final void rule__LocalVarDecl__InitAssignment_3_5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13393:1: ( ( ruleExpr ) )
            // InternalFortXTrans.g:13394:2: ( ruleExpr )
            {
            // InternalFortXTrans.g:13394:2: ( ruleExpr )
            // InternalFortXTrans.g:13395:3: ruleExpr
            {
             before(grammarAccess.getLocalVarDeclAccess().getInitExprParserRuleCall_3_5_0()); 
            pushFollow(FOLLOW_2);
            ruleExpr();

            state._fsp--;

             after(grammarAccess.getLocalVarDeclAccess().getInitExprParserRuleCall_3_5_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__InitAssignment_3_5"

    // Delegated rules


    protected DFA1 dfa1 = new DFA1(this);
    protected DFA6 dfa6 = new DFA6(this);
    protected DFA14 dfa14 = new DFA14(this);
    protected DFA18 dfa18 = new DFA18(this);
    protected DFA20 dfa20 = new DFA20(this);
    protected DFA21 dfa21 = new DFA21(this);
    protected DFA22 dfa22 = new DFA22(this);
    protected DFA28 dfa28 = new DFA28(this);
    protected DFA56 dfa56 = new DFA56(this);
    protected DFA79 dfa79 = new DFA79(this);
    static final String dfa_1s = "\133\uffff";
    static final String dfa_2s = "\1\1\132\uffff";
    static final String dfa_3s = "\1\5\1\uffff\4\5\1\4\7\5\1\4\2\5\1\43\1\5\1\uffff\1\4\1\5\1\4\1\5\1\43\1\5\1\4\1\uffff\1\4\1\uffff\2\5\1\43\1\4\1\5\1\35\1\5\1\43\1\5\1\4\1\uffff\1\5\1\43\1\5\1\35\1\4\1\5\1\35\1\5\1\43\2\4\1\5\1\35\1\4\1\35\1\5\1\uffff\2\4\1\5\1\35\1\4\2\5\1\35\1\5\1\35\1\4\1\uffff\3\4\1\5\1\43\2\5\1\43\1\5\1\4\1\35\1\4\1\35\1\5\1\uffff\1\4\1\5\1\43\1\5\1\4\1\35";
    static final String dfa_4s = "\1\104\1\uffff\1\104\3\74\1\65\1\41\1\5\4\74\1\41\1\43\1\42\1\5\1\65\1\41\1\uffff\1\43\1\5\1\43\1\5\1\43\1\5\1\43\1\uffff\1\65\1\uffff\2\5\2\43\1\5\1\43\1\5\1\65\1\5\1\43\1\uffff\1\5\1\43\1\5\1\42\1\43\1\5\1\43\1\5\2\43\1\42\1\41\1\35\1\43\1\42\1\5\1\uffff\1\43\1\42\1\5\1\42\1\4\2\5\1\42\1\5\2\42\1\uffff\2\43\1\42\1\5\1\43\2\5\1\43\1\5\1\43\1\42\1\43\1\42\1\5\1\uffff\1\43\1\5\1\43\1\5\1\43\1\42";
    static final String dfa_5s = "\1\uffff\1\2\21\uffff\1\1\7\uffff\1\1\1\uffff\1\1\12\uffff\1\1\20\uffff\1\1\13\uffff\1\1\16\uffff\1\1\6\uffff";
    static final String dfa_6s = "\133\uffff}>";
    static final String[] dfa_7s = {
            "\1\6\24\uffff\1\1\6\uffff\1\10\27\uffff\1\2\1\3\1\4\1\5\7\uffff\1\7",
            "",
            "\1\6\33\uffff\1\10\27\uffff\1\11\1\12\1\13\1\14\7\uffff\1\7",
            "\1\15\63\uffff\1\11\1\12\1\13\1\14",
            "\1\15\63\uffff\1\11\1\12\1\13\1\14",
            "\1\15\63\uffff\1\11\1\12\1\13\1\14",
            "\1\21\1\16\30\uffff\1\20\2\uffff\1\17\1\uffff\1\22\21\uffff\1\23",
            "\1\24\33\uffff\1\25",
            "\1\26",
            "\1\15\63\uffff\1\11\1\12\1\13\1\14",
            "\1\15\63\uffff\1\11\1\12\1\13\1\14",
            "\1\15\63\uffff\1\11\1\12\1\13\1\14",
            "\1\15\63\uffff\1\11\1\12\1\13\1\14",
            "\1\16\33\uffff\1\17",
            "\1\30\31\uffff\1\27\4\uffff\1\31",
            "\1\32\34\uffff\1\33",
            "\1\34",
            "\1\22\21\uffff\1\23",
            "\1\35\33\uffff\1\36",
            "",
            "\1\40\31\uffff\1\37\4\uffff\1\22",
            "\1\41",
            "\1\43\30\uffff\1\44\1\42\3\uffff\1\45\1\46",
            "\1\47",
            "\1\31",
            "\1\50",
            "\1\52\31\uffff\1\51\4\uffff\1\53",
            "",
            "\1\21\31\uffff\1\20\4\uffff\1\22\21\uffff\1\23",
            "",
            "\1\54",
            "\1\55",
            "\1\22",
            "\1\57\30\uffff\1\60\1\56\3\uffff\1\61\1\46",
            "\1\62",
            "\1\44\4\uffff\1\45\1\46",
            "\1\63",
            "\1\64\21\uffff\1\23",
            "\1\65",
            "\1\30\31\uffff\1\27\4\uffff\1\31",
            "",
            "\1\66",
            "\1\53",
            "\1\67",
            "\1\70\4\uffff\1\71",
            "\1\40\31\uffff\1\37\4\uffff\1\22",
            "\1\72",
            "\1\60\4\uffff\1\61\1\46",
            "\1\73",
            "\1\64",
            "\1\43\30\uffff\1\44\1\42\3\uffff\1\45\1\46",
            "\1\75\30\uffff\1\44\1\74\3\uffff\1\45",
            "\1\76\33\uffff\1\36",
            "\1\77",
            "\1\52\31\uffff\1\51\4\uffff\1\53",
            "\1\100\4\uffff\1\33",
            "\1\101",
            "",
            "\1\57\30\uffff\1\60\1\56\3\uffff\1\61\1\46",
            "\1\103\30\uffff\1\60\1\102\3\uffff\1\61",
            "\1\104",
            "\1\44\4\uffff\1\45",
            "\1\105",
            "\1\106",
            "\1\107",
            "\1\70\4\uffff\1\71",
            "\1\110",
            "\1\60\4\uffff\1\61",
            "\1\75\30\uffff\1\44\1\74\3\uffff\1\45",
            "",
            "\1\112\31\uffff\1\111\4\uffff\1\113",
            "\1\115\31\uffff\1\114\4\uffff\1\116",
            "\1\103\30\uffff\1\60\1\102\3\uffff\1\61",
            "\1\117",
            "\1\113",
            "\1\120",
            "\1\121",
            "\1\116",
            "\1\122",
            "\1\112\31\uffff\1\111\4\uffff\1\113",
            "\1\123\4\uffff\1\124",
            "\1\115\31\uffff\1\114\4\uffff\1\116",
            "\1\100\4\uffff\1\33",
            "\1\125",
            "",
            "\1\127\31\uffff\1\126\4\uffff\1\130",
            "\1\131",
            "\1\130",
            "\1\132",
            "\1\127\31\uffff\1\126\4\uffff\1\130",
            "\1\123\4\uffff\1\124"
    };

    static final short[] dfa_1 = DFA.unpackEncodedString(dfa_1s);
    static final short[] dfa_2 = DFA.unpackEncodedString(dfa_2s);
    static final char[] dfa_3 = DFA.unpackEncodedStringToUnsignedChars(dfa_3s);
    static final char[] dfa_4 = DFA.unpackEncodedStringToUnsignedChars(dfa_4s);
    static final short[] dfa_5 = DFA.unpackEncodedString(dfa_5s);
    static final short[] dfa_6 = DFA.unpackEncodedString(dfa_6s);
    static final short[][] dfa_7 = unpackEncodedStringArray(dfa_7s);

    class DFA1 extends DFA {

        public DFA1(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 1;
            this.eot = dfa_1;
            this.eof = dfa_2;
            this.min = dfa_3;
            this.max = dfa_4;
            this.accept = dfa_5;
            this.special = dfa_6;
            this.transition = dfa_7;
        }
        public String getDescription() {
            return "()* loopback of 425:4: ( rule__Decls__DeclsAssignment )*";
        }
    }
    static final String dfa_8s = "\12\uffff";
    static final String dfa_9s = "\1\uffff\1\4\1\uffff\1\4\1\uffff\1\4\4\uffff";
    static final String dfa_10s = "\1\5\1\4\1\5\1\32\1\uffff\2\4\1\37\2\uffff";
    static final String dfa_11s = "\1\5\1\67\1\37\1\67\1\uffff\1\67\1\5\1\37\2\uffff";
    static final String dfa_12s = "\4\uffff\1\3\3\uffff\1\1\1\2";
    static final String dfa_13s = "\12\uffff}>";
    static final String[] dfa_14s = {
            "\1\1",
            "\1\3\25\uffff\1\4\3\uffff\1\2\1\uffff\1\4\25\uffff\2\4",
            "\1\5\31\uffff\1\6",
            "\1\4\3\uffff\1\7\1\uffff\1\4\25\uffff\2\4",
            "",
            "\1\3\25\uffff\1\4\3\uffff\1\2\1\uffff\1\4\25\uffff\2\4",
            "\1\10\1\11",
            "\1\6",
            "",
            ""
    };

    static final short[] dfa_8 = DFA.unpackEncodedString(dfa_8s);
    static final short[] dfa_9 = DFA.unpackEncodedString(dfa_9s);
    static final char[] dfa_10 = DFA.unpackEncodedStringToUnsignedChars(dfa_10s);
    static final char[] dfa_11 = DFA.unpackEncodedStringToUnsignedChars(dfa_11s);
    static final short[] dfa_12 = DFA.unpackEncodedString(dfa_12s);
    static final short[] dfa_13 = DFA.unpackEncodedString(dfa_13s);
    static final short[][] dfa_14 = unpackEncodedStringArray(dfa_14s);

    class DFA6 extends DFA {

        public DFA6(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 6;
            this.eot = dfa_8;
            this.eof = dfa_9;
            this.min = dfa_10;
            this.max = dfa_11;
            this.accept = dfa_12;
            this.special = dfa_13;
            this.transition = dfa_14;
        }
        public String getDescription() {
            return "1629:1: rule__ImportedNames__Alternatives : ( ( ( rule__ImportedNames__Group_0__0 ) ) | ( ( rule__ImportedNames__Group_1__0 ) ) | ( ( rule__ImportedNames__Group_2__0 ) ) );";
        }
    }
    static final String dfa_15s = "\23\uffff";
    static final String dfa_16s = "\3\uffff\1\5\3\uffff\1\5\1\uffff\1\5\3\uffff\1\5\5\uffff";
    static final String dfa_17s = "\1\5\2\uffff\1\4\1\5\1\uffff\2\5\2\4\1\5\1\15\2\5\2\4\1\5\1\15\1\4";
    static final String dfa_18s = "\1\106\2\uffff\2\106\1\uffff\1\5\1\106\1\75\1\106\1\5\1\75\2\106\2\75\1\5\2\75";
    static final String dfa_19s = "\1\uffff\1\1\1\2\2\uffff\1\3\15\uffff";
    static final String dfa_20s = "\23\uffff}>";
    static final String[] dfa_21s = {
            "\1\3\3\5\30\uffff\1\4\2\uffff\1\1\10\uffff\1\5\6\uffff\1\1\6\uffff\1\1\2\uffff\4\1\1\uffff\1\1\1\2\2\5",
            "",
            "",
            "\1\7\4\5\4\uffff\14\5\1\uffff\1\5\2\uffff\1\5\1\6\1\uffff\2\5\1\uffff\1\2\12\5\1\uffff\2\5\2\uffff\2\5\1\2\3\uffff\11\5\1\uffff\4\5",
            "\1\10\3\5\30\uffff\1\5\13\uffff\1\5\27\uffff\2\5",
            "",
            "\1\11",
            "\4\5\4\uffff\14\5\1\uffff\1\5\2\uffff\1\5\2\uffff\2\5\1\uffff\1\2\12\5\1\uffff\2\5\2\uffff\2\5\1\2\3\uffff\11\5\1\uffff\4\5",
            "\1\13\10\uffff\14\5\4\uffff\1\14\1\12\1\uffff\2\5\1\15\1\2\2\uffff\7\5\20\uffff\1\5",
            "\1\7\4\5\4\uffff\14\5\1\uffff\1\5\2\uffff\1\5\1\6\1\uffff\2\5\1\uffff\1\2\12\5\1\uffff\2\5\2\uffff\2\5\1\2\3\uffff\11\5\1\uffff\4\5",
            "\1\16",
            "\14\5\4\uffff\1\14\2\uffff\2\5\1\15\1\2\2\uffff\7\5\20\uffff\1\5",
            "\1\17\3\5\30\uffff\1\5\13\uffff\1\5\27\uffff\2\5",
            "\4\5\4\uffff\14\5\1\uffff\1\5\2\uffff\1\5\2\uffff\2\5\1\uffff\1\2\12\5\1\uffff\2\5\2\uffff\2\5\1\2\3\uffff\11\5\1\uffff\4\5",
            "\1\13\10\uffff\14\5\4\uffff\1\14\1\12\1\uffff\2\5\1\15\1\2\2\uffff\7\5\20\uffff\1\5",
            "\1\21\10\uffff\14\5\4\uffff\1\14\1\20\1\uffff\2\5\1\15\3\uffff\7\5\20\uffff\1\5",
            "\1\22",
            "\14\5\4\uffff\1\14\2\uffff\2\5\1\15\3\uffff\7\5\20\uffff\1\5",
            "\1\21\10\uffff\14\5\4\uffff\1\14\1\20\1\uffff\2\5\1\15\3\uffff\7\5\20\uffff\1\5"
    };

    static final short[] dfa_15 = DFA.unpackEncodedString(dfa_15s);
    static final short[] dfa_16 = DFA.unpackEncodedString(dfa_16s);
    static final char[] dfa_17 = DFA.unpackEncodedStringToUnsignedChars(dfa_17s);
    static final char[] dfa_18 = DFA.unpackEncodedStringToUnsignedChars(dfa_18s);
    static final short[] dfa_19 = DFA.unpackEncodedString(dfa_19s);
    static final short[] dfa_20 = DFA.unpackEncodedString(dfa_20s);
    static final short[][] dfa_21 = unpackEncodedStringArray(dfa_21s);

    class DFA14 extends DFA {

        public DFA14(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 14;
            this.eot = dfa_15;
            this.eof = dfa_16;
            this.min = dfa_17;
            this.max = dfa_18;
            this.accept = dfa_19;
            this.special = dfa_20;
            this.transition = dfa_21;
        }
        public String getDescription() {
            return "1815:1: rule__Stmnts__Alternatives : ( ( ( rule__Stmnts__FrontAssignment_0 ) ) | ( ( rule__Stmnts__LocVarAssignment_1 ) ) | ( ( rule__Stmnts__ExpAssignment_2 ) ) );";
        }
    }
    static final String dfa_22s = "\33\uffff";
    static final String dfa_23s = "\1\5\1\uffff\1\5\1\uffff\5\15\1\uffff\1\4\1\5\1\uffff\1\5\1\15\1\5\1\uffff\5\15\2\4\1\5\1\15\1\4";
    static final String dfa_24s = "\1\106\1\uffff\1\106\1\uffff\5\75\1\uffff\1\75\1\106\1\uffff\1\5\1\75\1\106\1\uffff\7\75\1\5\2\75";
    static final String dfa_25s = "\1\uffff\1\1\1\uffff\1\2\5\uffff\1\3\2\uffff\1\1\3\uffff\1\1\12\uffff";
    static final String dfa_26s = "\33\uffff}>";
    static final String[] dfa_27s = {
            "\4\1\30\uffff\1\2\13\uffff\1\3\27\uffff\2\1",
            "",
            "\1\12\1\4\1\5\1\6\30\uffff\1\11\13\uffff\1\11\27\uffff\1\7\1\10",
            "",
            "\14\11\4\uffff\1\13\2\uffff\2\11\1\14\3\uffff\7\11\20\uffff\1\11",
            "\14\11\4\uffff\1\13\2\uffff\2\11\1\14\3\uffff\7\11\20\uffff\1\11",
            "\14\11\4\uffff\1\13\2\uffff\2\11\1\14\3\uffff\7\11\20\uffff\1\11",
            "\14\11\4\uffff\1\13\2\uffff\2\11\1\14\3\uffff\7\11\20\uffff\1\11",
            "\14\11\4\uffff\1\13\2\uffff\2\11\1\14\3\uffff\7\11\20\uffff\1\11",
            "",
            "\1\16\10\uffff\14\11\4\uffff\1\17\1\15\1\uffff\2\11\1\20\3\uffff\7\11\20\uffff\1\11",
            "\1\11\1\21\1\22\1\23\30\uffff\1\11\13\uffff\1\11\27\uffff\1\24\1\25",
            "",
            "\1\26",
            "\14\11\4\uffff\1\17\2\uffff\2\11\1\20\3\uffff\7\11\20\uffff\1\11",
            "\1\27\3\11\30\uffff\1\11\13\uffff\1\11\27\uffff\2\11",
            "",
            "\14\11\4\uffff\1\13\2\uffff\2\11\1\14\3\uffff\7\11\20\uffff\1\11",
            "\14\11\4\uffff\1\13\2\uffff\2\11\1\14\3\uffff\7\11\20\uffff\1\11",
            "\14\11\4\uffff\1\13\2\uffff\2\11\1\14\3\uffff\7\11\20\uffff\1\11",
            "\14\11\4\uffff\1\13\2\uffff\2\11\1\14\3\uffff\7\11\20\uffff\1\11",
            "\14\11\4\uffff\1\13\2\uffff\2\11\1\14\3\uffff\7\11\20\uffff\1\11",
            "\1\16\10\uffff\14\11\4\uffff\1\17\1\15\1\uffff\2\11\1\20\3\uffff\7\11\20\uffff\1\11",
            "\1\31\10\uffff\14\11\4\uffff\1\17\1\30\1\uffff\2\11\1\20\3\uffff\7\11\20\uffff\1\11",
            "\1\32",
            "\14\11\4\uffff\1\17\2\uffff\2\11\1\20\3\uffff\7\11\20\uffff\1\11",
            "\1\31\10\uffff\14\11\4\uffff\1\17\1\30\1\uffff\2\11\1\20\3\uffff\7\11\20\uffff\1\11"
    };

    static final short[] dfa_22 = DFA.unpackEncodedString(dfa_22s);
    static final char[] dfa_23 = DFA.unpackEncodedStringToUnsignedChars(dfa_23s);
    static final char[] dfa_24 = DFA.unpackEncodedStringToUnsignedChars(dfa_24s);
    static final short[] dfa_25 = DFA.unpackEncodedString(dfa_25s);
    static final short[] dfa_26 = DFA.unpackEncodedString(dfa_26s);
    static final short[][] dfa_27 = unpackEncodedStringArray(dfa_27s);

    class DFA18 extends DFA {

        public DFA18(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 18;
            this.eot = dfa_22;
            this.eof = dfa_22;
            this.min = dfa_23;
            this.max = dfa_24;
            this.accept = dfa_25;
            this.special = dfa_26;
            this.transition = dfa_27;
        }
        public String getDescription() {
            return "1953:1: rule__Primary__Alternatives : ( ( ( rule__Primary__Group_0__0 ) ) | ( ( rule__Primary__Group_1__0 ) ) | ( ( rule__Primary__Group_2__0 ) ) );";
        }
    }
    static final String dfa_28s = "\1\5\1\4\2\5\1\61\1\5\2\4\2\uffff\1\5\1\35\1\5\1\61\2\4\1\5\1\35\1\4";
    static final String dfa_29s = "\1\41\1\61\2\5\1\61\1\106\1\42\1\61\2\uffff\1\5\1\42\1\5\1\61\2\42\1\5\2\42";
    static final String dfa_30s = "\10\uffff\1\2\1\1\11\uffff";
    static final String[] dfa_31s = {
            "\1\1\33\uffff\1\2",
            "\1\4\31\uffff\1\3\22\uffff\1\5",
            "\1\6",
            "\1\7",
            "\1\5",
            "\4\11\30\uffff\1\11\13\uffff\1\11\24\uffff\1\10\2\uffff\2\11",
            "\1\13\30\uffff\1\14\1\12\3\uffff\1\15",
            "\1\4\31\uffff\1\3\22\uffff\1\5",
            "",
            "",
            "\1\16",
            "\1\14\4\uffff\1\15",
            "\1\17",
            "\1\5",
            "\1\13\30\uffff\1\14\1\12\3\uffff\1\15",
            "\1\21\30\uffff\1\14\1\20\3\uffff\1\15",
            "\1\22",
            "\1\14\4\uffff\1\15",
            "\1\21\30\uffff\1\14\1\20\3\uffff\1\15"
    };
    static final char[] dfa_28 = DFA.unpackEncodedStringToUnsignedChars(dfa_28s);
    static final char[] dfa_29 = DFA.unpackEncodedStringToUnsignedChars(dfa_29s);
    static final short[] dfa_30 = DFA.unpackEncodedString(dfa_30s);
    static final short[][] dfa_31 = unpackEncodedStringArray(dfa_31s);

    class DFA20 extends DFA {

        public DFA20(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 20;
            this.eot = dfa_15;
            this.eof = dfa_15;
            this.min = dfa_28;
            this.max = dfa_29;
            this.accept = dfa_30;
            this.special = dfa_20;
            this.transition = dfa_31;
        }
        public String getDescription() {
            return "2019:1: rule__Binding__Alternatives : ( ( ( rule__Binding__Group_0__0 ) ) | ( ( rule__Binding__Group_1__0 ) ) );";
        }
    }
    static final String dfa_32s = "\22\uffff";
    static final String dfa_33s = "\1\uffff\1\3\3\uffff\1\3\2\uffff\1\3\3\uffff\1\3\5\uffff";
    static final String dfa_34s = "\1\5\1\4\1\5\1\uffff\1\5\1\15\1\uffff\2\4\1\5\1\15\1\5\1\15\2\4\1\5\1\15\1\4";
    static final String dfa_35s = "\1\106\1\103\1\106\1\uffff\1\5\1\103\1\uffff\1\75\1\103\1\5\1\75\1\106\1\103\2\75\1\5\2\75";
    static final String dfa_36s = "\3\uffff\1\2\2\uffff\1\1\13\uffff";
    static final String dfa_37s = "\22\uffff}>";
    static final String[] dfa_38s = {
            "\1\1\3\3\30\uffff\1\2\13\uffff\1\3\27\uffff\2\3",
            "\1\5\10\uffff\14\3\4\uffff\1\3\1\4\1\uffff\2\3\4\uffff\7\3\4\uffff\1\6\2\uffff\1\3\6\uffff\1\3\1\uffff\1\3\5\uffff\1\3",
            "\1\7\3\3\30\uffff\1\3\13\uffff\1\3\27\uffff\2\3",
            "",
            "\1\10",
            "\14\3\4\uffff\1\3\2\uffff\2\3\4\uffff\7\3\4\uffff\1\6\2\uffff\1\3\6\uffff\1\3\1\uffff\1\3\5\uffff\1\3",
            "",
            "\1\12\10\uffff\14\3\4\uffff\1\13\1\11\1\uffff\2\3\1\14\3\uffff\7\3\20\uffff\1\3",
            "\1\5\10\uffff\14\3\4\uffff\1\3\1\4\1\uffff\2\3\4\uffff\7\3\4\uffff\1\6\2\uffff\1\3\6\uffff\1\3\1\uffff\1\3\5\uffff\1\3",
            "\1\15",
            "\14\3\4\uffff\1\13\2\uffff\2\3\1\14\3\uffff\7\3\20\uffff\1\3",
            "\1\16\3\3\30\uffff\1\3\13\uffff\1\3\27\uffff\2\3",
            "\14\3\4\uffff\1\3\2\uffff\2\3\4\uffff\7\3\4\uffff\1\6\2\uffff\1\3\6\uffff\1\3\1\uffff\1\3\5\uffff\1\3",
            "\1\12\10\uffff\14\3\4\uffff\1\13\1\11\1\uffff\2\3\1\14\3\uffff\7\3\20\uffff\1\3",
            "\1\20\10\uffff\14\3\4\uffff\1\13\1\17\1\uffff\2\3\1\14\3\uffff\7\3\20\uffff\1\3",
            "\1\21",
            "\14\3\4\uffff\1\13\2\uffff\2\3\1\14\3\uffff\7\3\20\uffff\1\3",
            "\1\20\10\uffff\14\3\4\uffff\1\13\1\17\1\uffff\2\3\1\14\3\uffff\7\3\20\uffff\1\3"
    };

    static final short[] dfa_32 = DFA.unpackEncodedString(dfa_32s);
    static final short[] dfa_33 = DFA.unpackEncodedString(dfa_33s);
    static final char[] dfa_34 = DFA.unpackEncodedStringToUnsignedChars(dfa_34s);
    static final char[] dfa_35 = DFA.unpackEncodedStringToUnsignedChars(dfa_35s);
    static final short[] dfa_36 = DFA.unpackEncodedString(dfa_36s);
    static final short[] dfa_37 = DFA.unpackEncodedString(dfa_37s);
    static final short[][] dfa_38 = unpackEncodedStringArray(dfa_38s);

    class DFA21 extends DFA {

        public DFA21(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 21;
            this.eot = dfa_32;
            this.eof = dfa_33;
            this.min = dfa_34;
            this.max = dfa_35;
            this.accept = dfa_36;
            this.special = dfa_37;
            this.transition = dfa_38;
        }
        public String getDescription() {
            return "2040:1: rule__GenClause__Alternatives : ( ( ( rule__GenClause__BindingAssignment_0 ) ) | ( ( rule__GenClause__ExprAssignment_1 ) ) );";
        }
    }
    static final String dfa_39s = "\50\uffff";
    static final String dfa_40s = "\20\uffff\1\24\27\uffff";
    static final String dfa_41s = "\3\5\1\4\1\5\1\4\2\5\1\43\1\uffff\1\5\1\4\1\5\1\43\3\4\1\uffff\1\5\1\35\1\uffff\1\5\1\43\1\4\1\5\1\35\1\5\1\43\1\uffff\2\4\1\5\2\4\1\5\1\35\1\5\1\35\2\4";
    static final String dfa_42s = "\2\104\1\41\1\65\1\5\1\43\2\5\1\65\1\uffff\1\41\1\43\1\5\2\43\1\65\1\104\1\uffff\1\5\1\43\1\uffff\1\5\1\65\1\43\1\5\1\43\1\5\1\43\1\uffff\1\43\1\42\1\41\1\43\1\42\1\5\1\42\1\5\3\42";
    static final String dfa_43s = "\11\uffff\1\2\7\uffff\1\4\2\uffff\1\1\7\uffff\1\3\13\uffff";
    static final String dfa_44s = "\50\uffff}>";
    static final String[] dfa_45s = {
            "\1\3\33\uffff\1\4\27\uffff\1\1\12\uffff\1\2",
            "\1\3\33\uffff\1\4\42\uffff\1\2",
            "\1\5\33\uffff\1\6",
            "\1\10\31\uffff\1\7\4\uffff\1\12\21\uffff\1\11",
            "\1\13",
            "\1\15\31\uffff\1\14\4\uffff\1\12",
            "\1\16",
            "\1\17",
            "\1\12\21\uffff\1\11",
            "",
            "\1\20\33\uffff\1\21",
            "\1\23\30\uffff\1\25\1\22\3\uffff\1\26\1\24",
            "\1\27",
            "\1\12",
            "\1\31\30\uffff\1\32\1\30\3\uffff\1\33\1\24",
            "\1\10\31\uffff\1\7\4\uffff\1\12\21\uffff\1\11",
            "\1\34\1\24\24\uffff\1\24\6\uffff\1\24\23\uffff\1\24\3\uffff\4\24\7\uffff\1\24",
            "",
            "\1\35",
            "\1\25\4\uffff\1\26\1\24",
            "",
            "\1\36",
            "\1\37\21\uffff\1\11",
            "\1\15\31\uffff\1\14\4\uffff\1\12",
            "\1\40",
            "\1\32\4\uffff\1\33\1\24",
            "\1\41",
            "\1\37",
            "",
            "\1\23\30\uffff\1\25\1\22\3\uffff\1\26\1\24",
            "\1\43\30\uffff\1\25\1\42\3\uffff\1\26",
            "\1\34\33\uffff\1\21",
            "\1\31\30\uffff\1\32\1\30\3\uffff\1\33\1\24",
            "\1\45\30\uffff\1\32\1\44\3\uffff\1\33",
            "\1\46",
            "\1\25\4\uffff\1\26",
            "\1\47",
            "\1\32\4\uffff\1\33",
            "\1\43\30\uffff\1\25\1\42\3\uffff\1\26",
            "\1\45\30\uffff\1\32\1\44\3\uffff\1\33"
    };

    static final short[] dfa_39 = DFA.unpackEncodedString(dfa_39s);
    static final short[] dfa_40 = DFA.unpackEncodedString(dfa_40s);
    static final char[] dfa_41 = DFA.unpackEncodedStringToUnsignedChars(dfa_41s);
    static final char[] dfa_42 = DFA.unpackEncodedStringToUnsignedChars(dfa_42s);
    static final short[] dfa_43 = DFA.unpackEncodedString(dfa_43s);
    static final short[] dfa_44 = DFA.unpackEncodedString(dfa_44s);
    static final short[][] dfa_45 = unpackEncodedStringArray(dfa_45s);

    class DFA22 extends DFA {

        public DFA22(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 22;
            this.eot = dfa_39;
            this.eof = dfa_40;
            this.min = dfa_41;
            this.max = dfa_42;
            this.accept = dfa_43;
            this.special = dfa_44;
            this.transition = dfa_45;
        }
        public String getDescription() {
            return "2061:1: rule__FieldDecl__Alternatives : ( ( ( rule__FieldDecl__Group_0__0 ) ) | ( ( rule__FieldDecl__Group_1__0 ) ) | ( ( rule__FieldDecl__Group_2__0 ) ) | ( ( rule__FieldDecl__Group_3__0 ) ) );";
        }
    }
    static final String dfa_46s = "\47\uffff";
    static final String dfa_47s = "\2\5\1\4\1\5\1\4\2\5\1\43\1\5\1\uffff\1\4\1\5\1\43\3\4\1\uffff\1\5\1\35\1\5\1\43\1\uffff\1\4\1\5\1\35\1\5\1\43\1\uffff\2\4\1\5\2\4\1\5\1\35\1\5\1\35\2\4";
    static final String dfa_48s = "\1\104\1\41\1\65\1\5\1\43\2\5\1\65\1\41\1\uffff\1\43\1\5\2\43\2\65\1\uffff\1\5\1\43\1\5\1\65\1\uffff\1\43\1\5\1\43\1\5\1\43\1\uffff\1\43\1\42\1\41\1\43\1\42\1\5\1\42\1\5\3\42";
    static final String dfa_49s = "\11\uffff\1\2\6\uffff\1\4\4\uffff\1\1\5\uffff\1\3\13\uffff";
    static final String dfa_50s = "\47\uffff}>";
    static final String[] dfa_51s = {
            "\1\2\33\uffff\1\3\42\uffff\1\1",
            "\1\4\33\uffff\1\5",
            "\1\7\31\uffff\1\6\4\uffff\1\10\21\uffff\1\11",
            "\1\12",
            "\1\14\31\uffff\1\13\4\uffff\1\10",
            "\1\15",
            "\1\16",
            "\1\10\21\uffff\1\11",
            "\1\17\33\uffff\1\20",
            "",
            "\1\22\30\uffff\1\23\1\21\3\uffff\1\24\1\25",
            "\1\26",
            "\1\10",
            "\1\30\30\uffff\1\31\1\27\3\uffff\1\32\1\25",
            "\1\7\31\uffff\1\6\4\uffff\1\10\21\uffff\1\11",
            "\1\33\60\uffff\1\25",
            "",
            "\1\34",
            "\1\23\4\uffff\1\24\1\25",
            "\1\35",
            "\1\36\21\uffff\1\11",
            "",
            "\1\14\31\uffff\1\13\4\uffff\1\10",
            "\1\37",
            "\1\31\4\uffff\1\32\1\25",
            "\1\40",
            "\1\36",
            "",
            "\1\22\30\uffff\1\23\1\21\3\uffff\1\24\1\25",
            "\1\42\30\uffff\1\23\1\41\3\uffff\1\24",
            "\1\33\33\uffff\1\20",
            "\1\30\30\uffff\1\31\1\27\3\uffff\1\32\1\25",
            "\1\44\30\uffff\1\31\1\43\3\uffff\1\32",
            "\1\45",
            "\1\23\4\uffff\1\24",
            "\1\46",
            "\1\31\4\uffff\1\32",
            "\1\42\30\uffff\1\23\1\41\3\uffff\1\24",
            "\1\44\30\uffff\1\31\1\43\3\uffff\1\32"
    };

    static final short[] dfa_46 = DFA.unpackEncodedString(dfa_46s);
    static final char[] dfa_47 = DFA.unpackEncodedStringToUnsignedChars(dfa_47s);
    static final char[] dfa_48 = DFA.unpackEncodedStringToUnsignedChars(dfa_48s);
    static final short[] dfa_49 = DFA.unpackEncodedString(dfa_49s);
    static final short[] dfa_50 = DFA.unpackEncodedString(dfa_50s);
    static final short[][] dfa_51 = unpackEncodedStringArray(dfa_51s);

    class DFA28 extends DFA {

        public DFA28(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 28;
            this.eot = dfa_46;
            this.eof = dfa_46;
            this.min = dfa_47;
            this.max = dfa_48;
            this.accept = dfa_49;
            this.special = dfa_50;
            this.transition = dfa_51;
        }
        public String getDescription() {
            return "2211:1: rule__LocalVarDecl__Alternatives : ( ( ( rule__LocalVarDecl__Group_0__0 ) ) | ( ( rule__LocalVarDecl__Group_1__0 ) ) | ( ( rule__LocalVarDecl__Group_2__0 ) ) | ( ( rule__LocalVarDecl__Group_3__0 ) ) );";
        }
    }
    static final String dfa_52s = "\1\1\11\uffff";
    static final String dfa_53s = "\1\5\11\uffff";
    static final String dfa_54s = "\1\106\11\uffff";
    static final String dfa_55s = "\1\uffff\1\2\10\1";
    static final String[] dfa_56s = {
            "\4\1\4\uffff\4\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\uffff\1\1\2\uffff\1\1\2\uffff\3\1\1\uffff\15\1\1\uffff\3\1\4\uffff\4\1\1\uffff\4\1\1\uffff\4\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[] dfa_52 = DFA.unpackEncodedString(dfa_52s);
    static final char[] dfa_53 = DFA.unpackEncodedStringToUnsignedChars(dfa_53s);
    static final char[] dfa_54 = DFA.unpackEncodedStringToUnsignedChars(dfa_54s);
    static final short[] dfa_55 = DFA.unpackEncodedString(dfa_55s);
    static final short[][] dfa_56 = unpackEncodedStringArray(dfa_56s);

    class DFA56 extends DFA {

        public DFA56(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 56;
            this.eot = dfa_8;
            this.eof = dfa_52;
            this.min = dfa_53;
            this.max = dfa_54;
            this.accept = dfa_55;
            this.special = dfa_13;
            this.transition = dfa_56;
        }
        public String getDescription() {
            return "()* loopback of 5779:2: ( rule__Comparison__Group_1__0 )*";
        }
    }
    static final String dfa_57s = "\57\uffff";
    static final String dfa_58s = "\1\4\2\uffff\1\1\3\uffff\1\1\5\uffff\2\23\40\uffff";
    static final String dfa_59s = "\1\5\1\uffff\1\5\1\4\1\uffff\1\4\2\5\1\4\2\5\1\15\2\5\1\4\1\5\1\43\1\5\1\4\1\uffff\3\4\1\uffff\1\5\1\15\2\5\1\15\1\4\1\35\1\4\1\5\1\4\1\5\1\43\1\5\1\4\1\35\1\uffff\1\5\1\4\1\5\1\43\1\5\1\4\1\35";
    static final String dfa_60s = "\1\106\1\uffff\1\106\1\104\1\uffff\1\75\1\5\1\104\1\65\1\106\1\5\1\75\1\106\2\104\1\5\1\65\1\41\1\75\1\uffff\2\75\1\65\1\uffff\1\5\1\75\2\5\2\75\1\42\1\75\1\5\1\43\1\5\1\43\1\5\1\43\1\42\1\uffff\1\5\1\43\1\5\1\43\1\5\1\43\1\42";
    static final String dfa_61s = "\1\uffff\1\1\2\uffff\1\2\16\uffff\1\1\3\uffff\1\1\17\uffff\1\1\7\uffff";
    static final String dfa_62s = "\57\uffff}>";
    static final String[] dfa_63s = {
            "\1\3\3\1\21\uffff\1\4\6\uffff\1\2\13\uffff\1\1\13\uffff\4\4\7\uffff\1\4\2\1",
            "",
            "\1\5\3\1\30\uffff\1\1\13\uffff\1\1\27\uffff\2\1",
            "\1\7\1\10\7\uffff\14\1\1\uffff\1\1\3\uffff\1\6\1\uffff\1\1\1\11\1\uffff\1\4\2\uffff\7\1\10\uffff\1\4\3\uffff\5\1\6\uffff\1\1",
            "",
            "\1\13\10\uffff\14\1\4\uffff\1\14\1\12\1\uffff\2\1\1\15\1\4\2\uffff\7\1\20\uffff\1\1",
            "\1\16",
            "\1\1\7\uffff\14\1\1\uffff\1\1\5\uffff\2\1\1\uffff\1\4\2\uffff\7\1\10\uffff\1\4\3\uffff\5\1\6\uffff\1\1",
            "\1\20\1\1\30\uffff\1\17\2\uffff\1\1\1\uffff\1\21\21\uffff\1\1",
            "\1\22\3\23\30\uffff\2\23\12\uffff\1\23\27\uffff\2\23",
            "\1\24",
            "\14\23\4\uffff\1\14\2\uffff\2\23\1\15\1\4\2\uffff\7\23\20\uffff\1\23",
            "\1\25\3\23\30\uffff\1\23\13\uffff\1\23\27\uffff\2\23",
            "\1\23\7\uffff\14\23\1\uffff\1\23\5\uffff\2\23\1\uffff\1\4\2\uffff\7\23\10\uffff\1\4\3\uffff\5\23\6\uffff\1\23",
            "\1\7\1\23\7\uffff\14\23\1\uffff\1\23\3\uffff\1\6\1\uffff\2\23\1\uffff\1\4\2\uffff\7\23\10\uffff\1\4\3\uffff\5\23\6\uffff\1\23",
            "\1\26",
            "\1\21\21\uffff\1\23",
            "\1\27\33\uffff\1\27",
            "\1\31\10\uffff\14\27\4\uffff\1\27\1\30\1\uffff\3\27\1\32\2\uffff\7\27\20\uffff\1\27",
            "",
            "\1\13\10\uffff\14\27\4\uffff\1\14\1\12\1\uffff\2\27\1\15\1\4\2\uffff\7\27\20\uffff\1\27",
            "\1\34\10\uffff\14\27\4\uffff\1\14\1\33\1\uffff\2\27\1\15\3\uffff\7\27\20\uffff\1\27",
            "\1\20\31\uffff\1\17\4\uffff\1\21\21\uffff\1\27",
            "",
            "\1\35",
            "\14\27\4\uffff\1\27\2\uffff\3\27\1\32\2\uffff\7\27\20\uffff\1\27",
            "\1\36",
            "\1\37",
            "\14\27\4\uffff\1\14\2\uffff\2\27\1\15\3\uffff\7\27\20\uffff\1\27",
            "\1\31\10\uffff\14\27\4\uffff\1\27\1\30\1\uffff\3\27\1\32\2\uffff\7\27\20\uffff\1\27",
            "\1\40\4\uffff\1\4",
            "\1\34\10\uffff\14\27\4\uffff\1\14\1\33\1\uffff\2\27\1\15\3\uffff\7\27\20\uffff\1\27",
            "\1\41",
            "\1\43\31\uffff\1\42\4\uffff\1\44",
            "\1\45",
            "\1\44",
            "\1\46",
            "\1\43\31\uffff\1\42\4\uffff\1\44",
            "\1\50\4\uffff\1\47",
            "",
            "\1\51",
            "\1\53\31\uffff\1\52\4\uffff\1\54",
            "\1\55",
            "\1\54",
            "\1\56",
            "\1\53\31\uffff\1\52\4\uffff\1\54",
            "\1\50\4\uffff\1\47"
    };

    static final short[] dfa_57 = DFA.unpackEncodedString(dfa_57s);
    static final short[] dfa_58 = DFA.unpackEncodedString(dfa_58s);
    static final char[] dfa_59 = DFA.unpackEncodedStringToUnsignedChars(dfa_59s);
    static final char[] dfa_60 = DFA.unpackEncodedStringToUnsignedChars(dfa_60s);
    static final short[] dfa_61 = DFA.unpackEncodedString(dfa_61s);
    static final short[] dfa_62 = DFA.unpackEncodedString(dfa_62s);
    static final short[][] dfa_63 = unpackEncodedStringArray(dfa_63s);

    class DFA79 extends DFA {

        public DFA79(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 79;
            this.eot = dfa_57;
            this.eof = dfa_58;
            this.min = dfa_59;
            this.max = dfa_60;
            this.accept = dfa_61;
            this.special = dfa_62;
            this.transition = dfa_63;
        }
        public String getDescription() {
            return "8992:2: ( rule__FieldDecl__InitAssignment_1_3 )?";
        }
    }
 

    public static final BitSet FOLLOW_1 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_2 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_3 = new BitSet(new long[]{0x1E00000200000022L,0x0000000000000010L});
    public static final BitSet FOLLOW_4 = new BitSet(new long[]{0x1E00000000000002L});
    public static final BitSet FOLLOW_5 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_6 = new BitSet(new long[]{0x00C0000000000000L});
    public static final BitSet FOLLOW_7 = new BitSet(new long[]{0x0040000000000002L});
    public static final BitSet FOLLOW_8 = new BitSet(new long[]{0x1E00000204000020L,0x0000000000000010L});
    public static final BitSet FOLLOW_9 = new BitSet(new long[]{0x00C0000000000002L});
    public static final BitSet FOLLOW_10 = new BitSet(new long[]{0x0040000004000000L});
    public static final BitSet FOLLOW_11 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_12 = new BitSet(new long[]{0x0000000080000020L});
    public static final BitSet FOLLOW_13 = new BitSet(new long[]{0x0000000080000000L});
    public static final BitSet FOLLOW_14 = new BitSet(new long[]{0x0000000030000000L});
    public static final BitSet FOLLOW_15 = new BitSet(new long[]{0x0000000020000002L});
    public static final BitSet FOLLOW_16 = new BitSet(new long[]{0x0000000040000000L});
    public static final BitSet FOLLOW_17 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_18 = new BitSet(new long[]{0x0000000010000000L});
    public static final BitSet FOLLOW_19 = new BitSet(new long[]{0x0100000000000000L});
    public static final BitSet FOLLOW_20 = new BitSet(new long[]{0x0000000100000000L});
    public static final BitSet FOLLOW_21 = new BitSet(new long[]{0x0000000040000010L});
    public static final BitSet FOLLOW_22 = new BitSet(new long[]{0x0000000040000002L});
    public static final BitSet FOLLOW_23 = new BitSet(new long[]{0x0000000420000000L});
    public static final BitSet FOLLOW_24 = new BitSet(new long[]{0x0000000400000020L});
    public static final BitSet FOLLOW_25 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_26 = new BitSet(new long[]{0x0000000800000000L});
    public static final BitSet FOLLOW_27 = new BitSet(new long[]{0x0000000200000000L});
    public static final BitSet FOLLOW_28 = new BitSet(new long[]{0x0000000400000000L});
    public static final BitSet FOLLOW_29 = new BitSet(new long[]{0x1E00000000000020L});
    public static final BitSet FOLLOW_30 = new BitSet(new long[]{0x0000000200000020L});
    public static final BitSet FOLLOW_31 = new BitSet(new long[]{0x0020000800000000L});
    public static final BitSet FOLLOW_32 = new BitSet(new long[]{0xCA102012000001E0L,0x000000000000007BL});
    public static final BitSet FOLLOW_33 = new BitSet(new long[]{0xC810000000000000L,0x000000000000000BL});
    public static final BitSet FOLLOW_34 = new BitSet(new long[]{0x0000002000000000L});
    public static final BitSet FOLLOW_35 = new BitSet(new long[]{0x0000000100000002L});
    public static final BitSet FOLLOW_36 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_37 = new BitSet(new long[]{0x0000004000000002L});
    public static final BitSet FOLLOW_38 = new BitSet(new long[]{0x0000008000000000L});
    public static final BitSet FOLLOW_39 = new BitSet(new long[]{0x0000008000000002L});
    public static final BitSet FOLLOW_40 = new BitSet(new long[]{0x000000000001E000L});
    public static final BitSet FOLLOW_41 = new BitSet(new long[]{0x000000000001E002L});
    public static final BitSet FOLLOW_42 = new BitSet(new long[]{0x0000000001FE0000L});
    public static final BitSet FOLLOW_43 = new BitSet(new long[]{0x0000000001FE0002L});
    public static final BitSet FOLLOW_44 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_45 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_46 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_47 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_48 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_49 = new BitSet(new long[]{0x0000040000000002L});
    public static final BitSet FOLLOW_50 = new BitSet(new long[]{0x0000080000000000L});
    public static final BitSet FOLLOW_51 = new BitSet(new long[]{0x0000080000000002L});
    public static final BitSet FOLLOW_52 = new BitSet(new long[]{0x0000100000000000L});
    public static final BitSet FOLLOW_53 = new BitSet(new long[]{0x0000100000000002L});
    public static final BitSet FOLLOW_54 = new BitSet(new long[]{0x2000000200000000L});
    public static final BitSet FOLLOW_55 = new BitSet(new long[]{0x2000000000000000L});
    public static final BitSet FOLLOW_56 = new BitSet(new long[]{0xCA102016000001E0L,0x000000000000007BL});
    public static final BitSet FOLLOW_57 = new BitSet(new long[]{0x0000200000000000L});
    public static final BitSet FOLLOW_58 = new BitSet(new long[]{0x0810000000000000L,0x0000000000000008L});
    public static final BitSet FOLLOW_59 = new BitSet(new long[]{0x0200000200000020L});
    public static final BitSet FOLLOW_60 = new BitSet(new long[]{0x0000000004000000L});
    public static final BitSet FOLLOW_61 = new BitSet(new long[]{0x0000400000000000L});
    public static final BitSet FOLLOW_62 = new BitSet(new long[]{0x0001800004000000L});
    public static final BitSet FOLLOW_63 = new BitSet(new long[]{0x0000800000000000L});
    public static final BitSet FOLLOW_64 = new BitSet(new long[]{0x0000800000000002L});
    public static final BitSet FOLLOW_65 = new BitSet(new long[]{0x0002000000000000L});
    public static final BitSet FOLLOW_66 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_67 = new BitSet(new long[]{0x0004000000000000L});
    public static final BitSet FOLLOW_68 = new BitSet(new long[]{0xCA102012000001E2L,0x000000000000007BL});
    public static final BitSet FOLLOW_69 = new BitSet(new long[]{0x0008000004000000L});
    public static final BitSet FOLLOW_70 = new BitSet(new long[]{0x0008000000000002L});
    public static final BitSet FOLLOW_71 = new BitSet(new long[]{0x0200000200000020L,0x0000000000000010L});
    public static final BitSet FOLLOW_72 = new BitSet(new long[]{0x0020000000000000L});
    public static final BitSet FOLLOW_73 = new BitSet(new long[]{0x1E00000200000020L,0x0000000000000010L});
    public static final BitSet FOLLOW_74 = new BitSet(new long[]{0x00000000000001C0L,0x0000000000000060L});
    public static final BitSet FOLLOW_75 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_76 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_77 = new BitSet(new long[]{0x0000000000000100L});

}