package srf.transpiler.fortxtrans.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import srf.transpiler.fortxtrans.services.FortXTransGrammarAccess;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;

@SuppressWarnings("all")
public class InternalFortXTransParser extends AbstractInternalContentAssistParser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "RULE_DOTS", "RULE_ID", "RULE_INT", "RULE_FLOAT", "RULE_STRING", "RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS", "RULE_ANY_OTHER", "'==='", "'=/='", "'EQ'", "'NE'", "'>='", "'<='", "'>'", "'<'", "'LT'", "'GT'", "'LE'", "'GE'", "'component'", "'end'", "'api'", "'}'", "','", "'.'", "'{'", "'as'", "'('", "')'", "':'", "'|'", "'OR'", "'AND'", "'+'", "'-'", "'/'", "'*'", "'[\\\\'", "'\\\\]'", "'fn'", "'=>'", "'['", "']'", "':='", "'!'", "'then'", "'elif'", "'else'", "'<-'", "'#'", "'also'", "'do'", "'='", "'import'", "'export'", "'except'", "'private'", "'test'", "'atomic'", "'io'", "'^'", "'return'", "'while'", "'for'", "'if'", "'seq'", "'at'", "'var'", "'true'", "'false'"
    };
    public static final int T__50=50;
    public static final int RULE_DOTS=4;
    public static final int T__19=19;
    public static final int T__15=15;
    public static final int T__59=59;
    public static final int T__16=16;
    public static final int T__17=17;
    public static final int T__18=18;
    public static final int T__55=55;
    public static final int T__56=56;
    public static final int T__13=13;
    public static final int T__57=57;
    public static final int T__14=14;
    public static final int T__58=58;
    public static final int T__51=51;
    public static final int T__52=52;
    public static final int T__53=53;
    public static final int T__54=54;
    public static final int T__60=60;
    public static final int T__61=61;
    public static final int RULE_ID=5;
    public static final int T__26=26;
    public static final int T__27=27;
    public static final int T__28=28;
    public static final int RULE_INT=6;
    public static final int T__29=29;
    public static final int T__22=22;
    public static final int T__66=66;
    public static final int RULE_ML_COMMENT=9;
    public static final int T__23=23;
    public static final int T__67=67;
    public static final int T__24=24;
    public static final int T__68=68;
    public static final int T__25=25;
    public static final int T__69=69;
    public static final int T__62=62;
    public static final int T__63=63;
    public static final int T__20=20;
    public static final int T__64=64;
    public static final int T__21=21;
    public static final int T__65=65;
    public static final int T__70=70;
    public static final int T__71=71;
    public static final int T__72=72;
    public static final int RULE_STRING=8;
    public static final int RULE_SL_COMMENT=10;
    public static final int T__37=37;
    public static final int T__38=38;
    public static final int T__39=39;
    public static final int T__33=33;
    public static final int T__34=34;
    public static final int T__35=35;
    public static final int T__36=36;
    public static final int T__73=73;
    public static final int EOF=-1;
    public static final int T__30=30;
    public static final int T__74=74;
    public static final int T__31=31;
    public static final int T__75=75;
    public static final int T__32=32;
    public static final int RULE_WS=11;
    public static final int RULE_ANY_OTHER=12;
    public static final int T__48=48;
    public static final int T__49=49;
    public static final int T__44=44;
    public static final int T__45=45;
    public static final int RULE_FLOAT=7;
    public static final int T__46=46;
    public static final int T__47=47;
    public static final int T__40=40;
    public static final int T__41=41;
    public static final int T__42=42;
    public static final int T__43=43;

    // delegates
    // delegators


        public InternalFortXTransParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public InternalFortXTransParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
             
        }
        

    public String[] getTokenNames() { return InternalFortXTransParser.tokenNames; }
    public String getGrammarFileName() { return "InternalFortXTrans.g"; }


    	private FortXTransGrammarAccess grammarAccess;

    	public void setGrammarAccess(FortXTransGrammarAccess grammarAccess) {
    		this.grammarAccess = grammarAccess;
    	}

    	@Override
    	protected Grammar getGrammar() {
    		return grammarAccess.getGrammar();
    	}

    	@Override
    	protected String getValueForTokenName(String tokenName) {
    		return tokenName;
    	}



    // $ANTLR start "entryRuleModel"
    // InternalFortXTrans.g:53:1: entryRuleModel : ruleModel EOF ;
    public final void entryRuleModel() throws RecognitionException {
        try {
            // InternalFortXTrans.g:54:1: ( ruleModel EOF )
            // InternalFortXTrans.g:55:1: ruleModel EOF
            {
             before(grammarAccess.getModelRule()); 
            pushFollow(FOLLOW_1);
            ruleModel();

            state._fsp--;

             after(grammarAccess.getModelRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleModel"


    // $ANTLR start "ruleModel"
    // InternalFortXTrans.g:62:1: ruleModel : ( ( rule__Model__Alternatives ) ) ;
    public final void ruleModel() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:66:2: ( ( ( rule__Model__Alternatives ) ) )
            // InternalFortXTrans.g:67:2: ( ( rule__Model__Alternatives ) )
            {
            // InternalFortXTrans.g:67:2: ( ( rule__Model__Alternatives ) )
            // InternalFortXTrans.g:68:3: ( rule__Model__Alternatives )
            {
             before(grammarAccess.getModelAccess().getAlternatives()); 
            // InternalFortXTrans.g:69:3: ( rule__Model__Alternatives )
            // InternalFortXTrans.g:69:4: rule__Model__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__Model__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getModelAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleModel"


    // $ANTLR start "entryRuleComponent"
    // InternalFortXTrans.g:78:1: entryRuleComponent : ruleComponent EOF ;
    public final void entryRuleComponent() throws RecognitionException {
        try {
            // InternalFortXTrans.g:79:1: ( ruleComponent EOF )
            // InternalFortXTrans.g:80:1: ruleComponent EOF
            {
             before(grammarAccess.getComponentRule()); 
            pushFollow(FOLLOW_1);
            ruleComponent();

            state._fsp--;

             after(grammarAccess.getComponentRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleComponent"


    // $ANTLR start "ruleComponent"
    // InternalFortXTrans.g:87:1: ruleComponent : ( ( rule__Component__Group__0 ) ) ;
    public final void ruleComponent() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:91:2: ( ( ( rule__Component__Group__0 ) ) )
            // InternalFortXTrans.g:92:2: ( ( rule__Component__Group__0 ) )
            {
            // InternalFortXTrans.g:92:2: ( ( rule__Component__Group__0 ) )
            // InternalFortXTrans.g:93:3: ( rule__Component__Group__0 )
            {
             before(grammarAccess.getComponentAccess().getGroup()); 
            // InternalFortXTrans.g:94:3: ( rule__Component__Group__0 )
            // InternalFortXTrans.g:94:4: rule__Component__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Component__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getComponentAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleComponent"


    // $ANTLR start "entryRuleAPI"
    // InternalFortXTrans.g:103:1: entryRuleAPI : ruleAPI EOF ;
    public final void entryRuleAPI() throws RecognitionException {
        try {
            // InternalFortXTrans.g:104:1: ( ruleAPI EOF )
            // InternalFortXTrans.g:105:1: ruleAPI EOF
            {
             before(grammarAccess.getAPIRule()); 
            pushFollow(FOLLOW_1);
            ruleAPI();

            state._fsp--;

             after(grammarAccess.getAPIRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAPI"


    // $ANTLR start "ruleAPI"
    // InternalFortXTrans.g:112:1: ruleAPI : ( ( rule__API__Group__0 ) ) ;
    public final void ruleAPI() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:116:2: ( ( ( rule__API__Group__0 ) ) )
            // InternalFortXTrans.g:117:2: ( ( rule__API__Group__0 ) )
            {
            // InternalFortXTrans.g:117:2: ( ( rule__API__Group__0 ) )
            // InternalFortXTrans.g:118:3: ( rule__API__Group__0 )
            {
             before(grammarAccess.getAPIAccess().getGroup()); 
            // InternalFortXTrans.g:119:3: ( rule__API__Group__0 )
            // InternalFortXTrans.g:119:4: rule__API__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__API__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getAPIAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAPI"


    // $ANTLR start "entryRuleImport"
    // InternalFortXTrans.g:128:1: entryRuleImport : ruleImport EOF ;
    public final void entryRuleImport() throws RecognitionException {
        try {
            // InternalFortXTrans.g:129:1: ( ruleImport EOF )
            // InternalFortXTrans.g:130:1: ruleImport EOF
            {
             before(grammarAccess.getImportRule()); 
            pushFollow(FOLLOW_1);
            ruleImport();

            state._fsp--;

             after(grammarAccess.getImportRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleImport"


    // $ANTLR start "ruleImport"
    // InternalFortXTrans.g:137:1: ruleImport : ( ( rule__Import__Alternatives ) ) ;
    public final void ruleImport() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:141:2: ( ( ( rule__Import__Alternatives ) ) )
            // InternalFortXTrans.g:142:2: ( ( rule__Import__Alternatives ) )
            {
            // InternalFortXTrans.g:142:2: ( ( rule__Import__Alternatives ) )
            // InternalFortXTrans.g:143:3: ( rule__Import__Alternatives )
            {
             before(grammarAccess.getImportAccess().getAlternatives()); 
            // InternalFortXTrans.g:144:3: ( rule__Import__Alternatives )
            // InternalFortXTrans.g:144:4: rule__Import__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__Import__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getImportAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleImport"


    // $ANTLR start "entryRuleExport"
    // InternalFortXTrans.g:153:1: entryRuleExport : ruleExport EOF ;
    public final void entryRuleExport() throws RecognitionException {
        try {
            // InternalFortXTrans.g:154:1: ( ruleExport EOF )
            // InternalFortXTrans.g:155:1: ruleExport EOF
            {
             before(grammarAccess.getExportRule()); 
            pushFollow(FOLLOW_1);
            ruleExport();

            state._fsp--;

             after(grammarAccess.getExportRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleExport"


    // $ANTLR start "ruleExport"
    // InternalFortXTrans.g:162:1: ruleExport : ( ( rule__Export__Alternatives ) ) ;
    public final void ruleExport() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:166:2: ( ( ( rule__Export__Alternatives ) ) )
            // InternalFortXTrans.g:167:2: ( ( rule__Export__Alternatives ) )
            {
            // InternalFortXTrans.g:167:2: ( ( rule__Export__Alternatives ) )
            // InternalFortXTrans.g:168:3: ( rule__Export__Alternatives )
            {
             before(grammarAccess.getExportAccess().getAlternatives()); 
            // InternalFortXTrans.g:169:3: ( rule__Export__Alternatives )
            // InternalFortXTrans.g:169:4: rule__Export__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__Export__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getExportAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleExport"


    // $ANTLR start "entryRuleImportedNames"
    // InternalFortXTrans.g:178:1: entryRuleImportedNames : ruleImportedNames EOF ;
    public final void entryRuleImportedNames() throws RecognitionException {
        try {
            // InternalFortXTrans.g:179:1: ( ruleImportedNames EOF )
            // InternalFortXTrans.g:180:1: ruleImportedNames EOF
            {
             before(grammarAccess.getImportedNamesRule()); 
            pushFollow(FOLLOW_1);
            ruleImportedNames();

            state._fsp--;

             after(grammarAccess.getImportedNamesRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleImportedNames"


    // $ANTLR start "ruleImportedNames"
    // InternalFortXTrans.g:187:1: ruleImportedNames : ( ( rule__ImportedNames__Alternatives ) ) ;
    public final void ruleImportedNames() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:191:2: ( ( ( rule__ImportedNames__Alternatives ) ) )
            // InternalFortXTrans.g:192:2: ( ( rule__ImportedNames__Alternatives ) )
            {
            // InternalFortXTrans.g:192:2: ( ( rule__ImportedNames__Alternatives ) )
            // InternalFortXTrans.g:193:3: ( rule__ImportedNames__Alternatives )
            {
             before(grammarAccess.getImportedNamesAccess().getAlternatives()); 
            // InternalFortXTrans.g:194:3: ( rule__ImportedNames__Alternatives )
            // InternalFortXTrans.g:194:4: rule__ImportedNames__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__ImportedNames__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getImportedNamesAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleImportedNames"


    // $ANTLR start "entryRuleQualifiedName"
    // InternalFortXTrans.g:203:1: entryRuleQualifiedName : ruleQualifiedName EOF ;
    public final void entryRuleQualifiedName() throws RecognitionException {
        try {
            // InternalFortXTrans.g:204:1: ( ruleQualifiedName EOF )
            // InternalFortXTrans.g:205:1: ruleQualifiedName EOF
            {
             before(grammarAccess.getQualifiedNameRule()); 
            pushFollow(FOLLOW_1);
            ruleQualifiedName();

            state._fsp--;

             after(grammarAccess.getQualifiedNameRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleQualifiedName"


    // $ANTLR start "ruleQualifiedName"
    // InternalFortXTrans.g:212:1: ruleQualifiedName : ( ( rule__QualifiedName__Group__0 ) ) ;
    public final void ruleQualifiedName() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:216:2: ( ( ( rule__QualifiedName__Group__0 ) ) )
            // InternalFortXTrans.g:217:2: ( ( rule__QualifiedName__Group__0 ) )
            {
            // InternalFortXTrans.g:217:2: ( ( rule__QualifiedName__Group__0 ) )
            // InternalFortXTrans.g:218:3: ( rule__QualifiedName__Group__0 )
            {
             before(grammarAccess.getQualifiedNameAccess().getGroup()); 
            // InternalFortXTrans.g:219:3: ( rule__QualifiedName__Group__0 )
            // InternalFortXTrans.g:219:4: rule__QualifiedName__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__QualifiedName__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getQualifiedNameAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleQualifiedName"


    // $ANTLR start "entryRuleQualified"
    // InternalFortXTrans.g:228:1: entryRuleQualified : ruleQualified EOF ;
    public final void entryRuleQualified() throws RecognitionException {
        try {
            // InternalFortXTrans.g:229:1: ( ruleQualified EOF )
            // InternalFortXTrans.g:230:1: ruleQualified EOF
            {
             before(grammarAccess.getQualifiedRule()); 
            pushFollow(FOLLOW_1);
            ruleQualified();

            state._fsp--;

             after(grammarAccess.getQualifiedRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleQualified"


    // $ANTLR start "ruleQualified"
    // InternalFortXTrans.g:237:1: ruleQualified : ( ( rule__Qualified__Alternatives ) ) ;
    public final void ruleQualified() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:241:2: ( ( ( rule__Qualified__Alternatives ) ) )
            // InternalFortXTrans.g:242:2: ( ( rule__Qualified__Alternatives ) )
            {
            // InternalFortXTrans.g:242:2: ( ( rule__Qualified__Alternatives ) )
            // InternalFortXTrans.g:243:3: ( rule__Qualified__Alternatives )
            {
             before(grammarAccess.getQualifiedAccess().getAlternatives()); 
            // InternalFortXTrans.g:244:3: ( rule__Qualified__Alternatives )
            // InternalFortXTrans.g:244:4: rule__Qualified__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__Qualified__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getQualifiedAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleQualified"


    // $ANTLR start "entryRuleQualifiedNameTuple"
    // InternalFortXTrans.g:253:1: entryRuleQualifiedNameTuple : ruleQualifiedNameTuple EOF ;
    public final void entryRuleQualifiedNameTuple() throws RecognitionException {
        try {
            // InternalFortXTrans.g:254:1: ( ruleQualifiedNameTuple EOF )
            // InternalFortXTrans.g:255:1: ruleQualifiedNameTuple EOF
            {
             before(grammarAccess.getQualifiedNameTupleRule()); 
            pushFollow(FOLLOW_1);
            ruleQualifiedNameTuple();

            state._fsp--;

             after(grammarAccess.getQualifiedNameTupleRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleQualifiedNameTuple"


    // $ANTLR start "ruleQualifiedNameTuple"
    // InternalFortXTrans.g:262:1: ruleQualifiedNameTuple : ( ( rule__QualifiedNameTuple__Group__0 ) ) ;
    public final void ruleQualifiedNameTuple() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:266:2: ( ( ( rule__QualifiedNameTuple__Group__0 ) ) )
            // InternalFortXTrans.g:267:2: ( ( rule__QualifiedNameTuple__Group__0 ) )
            {
            // InternalFortXTrans.g:267:2: ( ( rule__QualifiedNameTuple__Group__0 ) )
            // InternalFortXTrans.g:268:3: ( rule__QualifiedNameTuple__Group__0 )
            {
             before(grammarAccess.getQualifiedNameTupleAccess().getGroup()); 
            // InternalFortXTrans.g:269:3: ( rule__QualifiedNameTuple__Group__0 )
            // InternalFortXTrans.g:269:4: rule__QualifiedNameTuple__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__QualifiedNameTuple__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getQualifiedNameTupleAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleQualifiedNameTuple"


    // $ANTLR start "entryRuleSimpleNames"
    // InternalFortXTrans.g:278:1: entryRuleSimpleNames : ruleSimpleNames EOF ;
    public final void entryRuleSimpleNames() throws RecognitionException {
        try {
            // InternalFortXTrans.g:279:1: ( ruleSimpleNames EOF )
            // InternalFortXTrans.g:280:1: ruleSimpleNames EOF
            {
             before(grammarAccess.getSimpleNamesRule()); 
            pushFollow(FOLLOW_1);
            ruleSimpleNames();

            state._fsp--;

             after(grammarAccess.getSimpleNamesRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSimpleNames"


    // $ANTLR start "ruleSimpleNames"
    // InternalFortXTrans.g:287:1: ruleSimpleNames : ( ( rule__SimpleNames__Alternatives ) ) ;
    public final void ruleSimpleNames() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:291:2: ( ( ( rule__SimpleNames__Alternatives ) ) )
            // InternalFortXTrans.g:292:2: ( ( rule__SimpleNames__Alternatives ) )
            {
            // InternalFortXTrans.g:292:2: ( ( rule__SimpleNames__Alternatives ) )
            // InternalFortXTrans.g:293:3: ( rule__SimpleNames__Alternatives )
            {
             before(grammarAccess.getSimpleNamesAccess().getAlternatives()); 
            // InternalFortXTrans.g:294:3: ( rule__SimpleNames__Alternatives )
            // InternalFortXTrans.g:294:4: rule__SimpleNames__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__SimpleNames__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getSimpleNamesAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSimpleNames"


    // $ANTLR start "entryRuleSimpleName"
    // InternalFortXTrans.g:303:1: entryRuleSimpleName : ruleSimpleName EOF ;
    public final void entryRuleSimpleName() throws RecognitionException {
        try {
            // InternalFortXTrans.g:304:1: ( ruleSimpleName EOF )
            // InternalFortXTrans.g:305:1: ruleSimpleName EOF
            {
             before(grammarAccess.getSimpleNameRule()); 
            pushFollow(FOLLOW_1);
            ruleSimpleName();

            state._fsp--;

             after(grammarAccess.getSimpleNameRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSimpleName"


    // $ANTLR start "ruleSimpleName"
    // InternalFortXTrans.g:312:1: ruleSimpleName : ( ( rule__SimpleName__NameAssignment ) ) ;
    public final void ruleSimpleName() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:316:2: ( ( ( rule__SimpleName__NameAssignment ) ) )
            // InternalFortXTrans.g:317:2: ( ( rule__SimpleName__NameAssignment ) )
            {
            // InternalFortXTrans.g:317:2: ( ( rule__SimpleName__NameAssignment ) )
            // InternalFortXTrans.g:318:3: ( rule__SimpleName__NameAssignment )
            {
             before(grammarAccess.getSimpleNameAccess().getNameAssignment()); 
            // InternalFortXTrans.g:319:3: ( rule__SimpleName__NameAssignment )
            // InternalFortXTrans.g:319:4: rule__SimpleName__NameAssignment
            {
            pushFollow(FOLLOW_2);
            rule__SimpleName__NameAssignment();

            state._fsp--;


            }

             after(grammarAccess.getSimpleNameAccess().getNameAssignment()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSimpleName"


    // $ANTLR start "entryRuleAliasedSimpleName"
    // InternalFortXTrans.g:328:1: entryRuleAliasedSimpleName : ruleAliasedSimpleName EOF ;
    public final void entryRuleAliasedSimpleName() throws RecognitionException {
        try {
            // InternalFortXTrans.g:329:1: ( ruleAliasedSimpleName EOF )
            // InternalFortXTrans.g:330:1: ruleAliasedSimpleName EOF
            {
             before(grammarAccess.getAliasedSimpleNameRule()); 
            pushFollow(FOLLOW_1);
            ruleAliasedSimpleName();

            state._fsp--;

             after(grammarAccess.getAliasedSimpleNameRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAliasedSimpleName"


    // $ANTLR start "ruleAliasedSimpleName"
    // InternalFortXTrans.g:337:1: ruleAliasedSimpleName : ( ( rule__AliasedSimpleName__Group__0 ) ) ;
    public final void ruleAliasedSimpleName() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:341:2: ( ( ( rule__AliasedSimpleName__Group__0 ) ) )
            // InternalFortXTrans.g:342:2: ( ( rule__AliasedSimpleName__Group__0 ) )
            {
            // InternalFortXTrans.g:342:2: ( ( rule__AliasedSimpleName__Group__0 ) )
            // InternalFortXTrans.g:343:3: ( rule__AliasedSimpleName__Group__0 )
            {
             before(grammarAccess.getAliasedSimpleNameAccess().getGroup()); 
            // InternalFortXTrans.g:344:3: ( rule__AliasedSimpleName__Group__0 )
            // InternalFortXTrans.g:344:4: rule__AliasedSimpleName__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__AliasedSimpleName__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getAliasedSimpleNameAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAliasedSimpleName"


    // $ANTLR start "entryRuleAliasedAPINames"
    // InternalFortXTrans.g:353:1: entryRuleAliasedAPINames : ruleAliasedAPINames EOF ;
    public final void entryRuleAliasedAPINames() throws RecognitionException {
        try {
            // InternalFortXTrans.g:354:1: ( ruleAliasedAPINames EOF )
            // InternalFortXTrans.g:355:1: ruleAliasedAPINames EOF
            {
             before(grammarAccess.getAliasedAPINamesRule()); 
            pushFollow(FOLLOW_1);
            ruleAliasedAPINames();

            state._fsp--;

             after(grammarAccess.getAliasedAPINamesRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAliasedAPINames"


    // $ANTLR start "ruleAliasedAPINames"
    // InternalFortXTrans.g:362:1: ruleAliasedAPINames : ( ( rule__AliasedAPINames__Alternatives ) ) ;
    public final void ruleAliasedAPINames() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:366:2: ( ( ( rule__AliasedAPINames__Alternatives ) ) )
            // InternalFortXTrans.g:367:2: ( ( rule__AliasedAPINames__Alternatives ) )
            {
            // InternalFortXTrans.g:367:2: ( ( rule__AliasedAPINames__Alternatives ) )
            // InternalFortXTrans.g:368:3: ( rule__AliasedAPINames__Alternatives )
            {
             before(grammarAccess.getAliasedAPINamesAccess().getAlternatives()); 
            // InternalFortXTrans.g:369:3: ( rule__AliasedAPINames__Alternatives )
            // InternalFortXTrans.g:369:4: rule__AliasedAPINames__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__AliasedAPINames__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getAliasedAPINamesAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAliasedAPINames"


    // $ANTLR start "entryRuleAliasedAPIName"
    // InternalFortXTrans.g:378:1: entryRuleAliasedAPIName : ruleAliasedAPIName EOF ;
    public final void entryRuleAliasedAPIName() throws RecognitionException {
        try {
            // InternalFortXTrans.g:379:1: ( ruleAliasedAPIName EOF )
            // InternalFortXTrans.g:380:1: ruleAliasedAPIName EOF
            {
             before(grammarAccess.getAliasedAPINameRule()); 
            pushFollow(FOLLOW_1);
            ruleAliasedAPIName();

            state._fsp--;

             after(grammarAccess.getAliasedAPINameRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAliasedAPIName"


    // $ANTLR start "ruleAliasedAPIName"
    // InternalFortXTrans.g:387:1: ruleAliasedAPIName : ( ( rule__AliasedAPIName__Group__0 ) ) ;
    public final void ruleAliasedAPIName() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:391:2: ( ( ( rule__AliasedAPIName__Group__0 ) ) )
            // InternalFortXTrans.g:392:2: ( ( rule__AliasedAPIName__Group__0 ) )
            {
            // InternalFortXTrans.g:392:2: ( ( rule__AliasedAPIName__Group__0 ) )
            // InternalFortXTrans.g:393:3: ( rule__AliasedAPIName__Group__0 )
            {
             before(grammarAccess.getAliasedAPINameAccess().getGroup()); 
            // InternalFortXTrans.g:394:3: ( rule__AliasedAPIName__Group__0 )
            // InternalFortXTrans.g:394:4: rule__AliasedAPIName__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__AliasedAPIName__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getAliasedAPINameAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAliasedAPIName"


    // $ANTLR start "entryRuleDecls"
    // InternalFortXTrans.g:403:1: entryRuleDecls : ruleDecls EOF ;
    public final void entryRuleDecls() throws RecognitionException {
        try {
            // InternalFortXTrans.g:404:1: ( ruleDecls EOF )
            // InternalFortXTrans.g:405:1: ruleDecls EOF
            {
             before(grammarAccess.getDeclsRule()); 
            pushFollow(FOLLOW_1);
            ruleDecls();

            state._fsp--;

             after(grammarAccess.getDeclsRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDecls"


    // $ANTLR start "ruleDecls"
    // InternalFortXTrans.g:412:1: ruleDecls : ( ( ( rule__Decls__DeclsAssignment ) ) ( ( rule__Decls__DeclsAssignment )* ) ) ;
    public final void ruleDecls() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:416:2: ( ( ( ( rule__Decls__DeclsAssignment ) ) ( ( rule__Decls__DeclsAssignment )* ) ) )
            // InternalFortXTrans.g:417:2: ( ( ( rule__Decls__DeclsAssignment ) ) ( ( rule__Decls__DeclsAssignment )* ) )
            {
            // InternalFortXTrans.g:417:2: ( ( ( rule__Decls__DeclsAssignment ) ) ( ( rule__Decls__DeclsAssignment )* ) )
            // InternalFortXTrans.g:418:3: ( ( rule__Decls__DeclsAssignment ) ) ( ( rule__Decls__DeclsAssignment )* )
            {
            // InternalFortXTrans.g:418:3: ( ( rule__Decls__DeclsAssignment ) )
            // InternalFortXTrans.g:419:4: ( rule__Decls__DeclsAssignment )
            {
             before(grammarAccess.getDeclsAccess().getDeclsAssignment()); 
            // InternalFortXTrans.g:420:4: ( rule__Decls__DeclsAssignment )
            // InternalFortXTrans.g:420:5: rule__Decls__DeclsAssignment
            {
            pushFollow(FOLLOW_3);
            rule__Decls__DeclsAssignment();

            state._fsp--;


            }

             after(grammarAccess.getDeclsAccess().getDeclsAssignment()); 

            }

            // InternalFortXTrans.g:423:3: ( ( rule__Decls__DeclsAssignment )* )
            // InternalFortXTrans.g:424:4: ( rule__Decls__DeclsAssignment )*
            {
             before(grammarAccess.getDeclsAccess().getDeclsAssignment()); 
            // InternalFortXTrans.g:425:4: ( rule__Decls__DeclsAssignment )*
            loop1:
            do {
                int alt1=2;
                alt1 = dfa1.predict(input);
                switch (alt1) {
            	case 1 :
            	    // InternalFortXTrans.g:425:5: rule__Decls__DeclsAssignment
            	    {
            	    pushFollow(FOLLOW_3);
            	    rule__Decls__DeclsAssignment();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop1;
                }
            } while (true);

             after(grammarAccess.getDeclsAccess().getDeclsAssignment()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDecls"


    // $ANTLR start "entryRuleDecl"
    // InternalFortXTrans.g:435:1: entryRuleDecl : ruleDecl EOF ;
    public final void entryRuleDecl() throws RecognitionException {
        try {
            // InternalFortXTrans.g:436:1: ( ruleDecl EOF )
            // InternalFortXTrans.g:437:1: ruleDecl EOF
            {
             before(grammarAccess.getDeclRule()); 
            pushFollow(FOLLOW_1);
            ruleDecl();

            state._fsp--;

             after(grammarAccess.getDeclRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDecl"


    // $ANTLR start "ruleDecl"
    // InternalFortXTrans.g:444:1: ruleDecl : ( ( rule__Decl__Alternatives ) ) ;
    public final void ruleDecl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:448:2: ( ( ( rule__Decl__Alternatives ) ) )
            // InternalFortXTrans.g:449:2: ( ( rule__Decl__Alternatives ) )
            {
            // InternalFortXTrans.g:449:2: ( ( rule__Decl__Alternatives ) )
            // InternalFortXTrans.g:450:3: ( rule__Decl__Alternatives )
            {
             before(grammarAccess.getDeclAccess().getAlternatives()); 
            // InternalFortXTrans.g:451:3: ( rule__Decl__Alternatives )
            // InternalFortXTrans.g:451:4: rule__Decl__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__Decl__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getDeclAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDecl"


    // $ANTLR start "entryRuleValParam"
    // InternalFortXTrans.g:460:1: entryRuleValParam : ruleValParam EOF ;
    public final void entryRuleValParam() throws RecognitionException {
        try {
            // InternalFortXTrans.g:461:1: ( ruleValParam EOF )
            // InternalFortXTrans.g:462:1: ruleValParam EOF
            {
             before(grammarAccess.getValParamRule()); 
            pushFollow(FOLLOW_1);
            ruleValParam();

            state._fsp--;

             after(grammarAccess.getValParamRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleValParam"


    // $ANTLR start "ruleValParam"
    // InternalFortXTrans.g:469:1: ruleValParam : ( ( rule__ValParam__Alternatives ) ) ;
    public final void ruleValParam() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:473:2: ( ( ( rule__ValParam__Alternatives ) ) )
            // InternalFortXTrans.g:474:2: ( ( rule__ValParam__Alternatives ) )
            {
            // InternalFortXTrans.g:474:2: ( ( rule__ValParam__Alternatives ) )
            // InternalFortXTrans.g:475:3: ( rule__ValParam__Alternatives )
            {
             before(grammarAccess.getValParamAccess().getAlternatives()); 
            // InternalFortXTrans.g:476:3: ( rule__ValParam__Alternatives )
            // InternalFortXTrans.g:476:4: rule__ValParam__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__ValParam__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getValParamAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleValParam"


    // $ANTLR start "entryRuleParam"
    // InternalFortXTrans.g:485:1: entryRuleParam : ruleParam EOF ;
    public final void entryRuleParam() throws RecognitionException {
        try {
            // InternalFortXTrans.g:486:1: ( ruleParam EOF )
            // InternalFortXTrans.g:487:1: ruleParam EOF
            {
             before(grammarAccess.getParamRule()); 
            pushFollow(FOLLOW_1);
            ruleParam();

            state._fsp--;

             after(grammarAccess.getParamRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleParam"


    // $ANTLR start "ruleParam"
    // InternalFortXTrans.g:494:1: ruleParam : ( ( rule__Param__Group__0 ) ) ;
    public final void ruleParam() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:498:2: ( ( ( rule__Param__Group__0 ) ) )
            // InternalFortXTrans.g:499:2: ( ( rule__Param__Group__0 ) )
            {
            // InternalFortXTrans.g:499:2: ( ( rule__Param__Group__0 ) )
            // InternalFortXTrans.g:500:3: ( rule__Param__Group__0 )
            {
             before(grammarAccess.getParamAccess().getGroup()); 
            // InternalFortXTrans.g:501:3: ( rule__Param__Group__0 )
            // InternalFortXTrans.g:501:4: rule__Param__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Param__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getParamAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleParam"


    // $ANTLR start "entryRuleRetType"
    // InternalFortXTrans.g:510:1: entryRuleRetType : ruleRetType EOF ;
    public final void entryRuleRetType() throws RecognitionException {
        try {
            // InternalFortXTrans.g:511:1: ( ruleRetType EOF )
            // InternalFortXTrans.g:512:1: ruleRetType EOF
            {
             before(grammarAccess.getRetTypeRule()); 
            pushFollow(FOLLOW_1);
            ruleRetType();

            state._fsp--;

             after(grammarAccess.getRetTypeRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleRetType"


    // $ANTLR start "ruleRetType"
    // InternalFortXTrans.g:519:1: ruleRetType : ( ( rule__RetType__Alternatives ) ) ;
    public final void ruleRetType() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:523:2: ( ( ( rule__RetType__Alternatives ) ) )
            // InternalFortXTrans.g:524:2: ( ( rule__RetType__Alternatives ) )
            {
            // InternalFortXTrans.g:524:2: ( ( rule__RetType__Alternatives ) )
            // InternalFortXTrans.g:525:3: ( rule__RetType__Alternatives )
            {
             before(grammarAccess.getRetTypeAccess().getAlternatives()); 
            // InternalFortXTrans.g:526:3: ( rule__RetType__Alternatives )
            // InternalFortXTrans.g:526:4: rule__RetType__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__RetType__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getRetTypeAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleRetType"


    // $ANTLR start "entryRuleTupleType"
    // InternalFortXTrans.g:535:1: entryRuleTupleType : ruleTupleType EOF ;
    public final void entryRuleTupleType() throws RecognitionException {
        try {
            // InternalFortXTrans.g:536:1: ( ruleTupleType EOF )
            // InternalFortXTrans.g:537:1: ruleTupleType EOF
            {
             before(grammarAccess.getTupleTypeRule()); 
            pushFollow(FOLLOW_1);
            ruleTupleType();

            state._fsp--;

             after(grammarAccess.getTupleTypeRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTupleType"


    // $ANTLR start "ruleTupleType"
    // InternalFortXTrans.g:544:1: ruleTupleType : ( ( rule__TupleType__Group__0 ) ) ;
    public final void ruleTupleType() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:548:2: ( ( ( rule__TupleType__Group__0 ) ) )
            // InternalFortXTrans.g:549:2: ( ( rule__TupleType__Group__0 ) )
            {
            // InternalFortXTrans.g:549:2: ( ( rule__TupleType__Group__0 ) )
            // InternalFortXTrans.g:550:3: ( rule__TupleType__Group__0 )
            {
             before(grammarAccess.getTupleTypeAccess().getGroup()); 
            // InternalFortXTrans.g:551:3: ( rule__TupleType__Group__0 )
            // InternalFortXTrans.g:551:4: rule__TupleType__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__TupleType__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getTupleTypeAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTupleType"


    // $ANTLR start "entryRuleFnMods"
    // InternalFortXTrans.g:560:1: entryRuleFnMods : ruleFnMods EOF ;
    public final void entryRuleFnMods() throws RecognitionException {
        try {
            // InternalFortXTrans.g:561:1: ( ruleFnMods EOF )
            // InternalFortXTrans.g:562:1: ruleFnMods EOF
            {
             before(grammarAccess.getFnModsRule()); 
            pushFollow(FOLLOW_1);
            ruleFnMods();

            state._fsp--;

             after(grammarAccess.getFnModsRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleFnMods"


    // $ANTLR start "ruleFnMods"
    // InternalFortXTrans.g:569:1: ruleFnMods : ( ( ( rule__FnMods__ModsAssignment ) ) ( ( rule__FnMods__ModsAssignment )* ) ) ;
    public final void ruleFnMods() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:573:2: ( ( ( ( rule__FnMods__ModsAssignment ) ) ( ( rule__FnMods__ModsAssignment )* ) ) )
            // InternalFortXTrans.g:574:2: ( ( ( rule__FnMods__ModsAssignment ) ) ( ( rule__FnMods__ModsAssignment )* ) )
            {
            // InternalFortXTrans.g:574:2: ( ( ( rule__FnMods__ModsAssignment ) ) ( ( rule__FnMods__ModsAssignment )* ) )
            // InternalFortXTrans.g:575:3: ( ( rule__FnMods__ModsAssignment ) ) ( ( rule__FnMods__ModsAssignment )* )
            {
            // InternalFortXTrans.g:575:3: ( ( rule__FnMods__ModsAssignment ) )
            // InternalFortXTrans.g:576:4: ( rule__FnMods__ModsAssignment )
            {
             before(grammarAccess.getFnModsAccess().getModsAssignment()); 
            // InternalFortXTrans.g:577:4: ( rule__FnMods__ModsAssignment )
            // InternalFortXTrans.g:577:5: rule__FnMods__ModsAssignment
            {
            pushFollow(FOLLOW_4);
            rule__FnMods__ModsAssignment();

            state._fsp--;


            }

             after(grammarAccess.getFnModsAccess().getModsAssignment()); 

            }

            // InternalFortXTrans.g:580:3: ( ( rule__FnMods__ModsAssignment )* )
            // InternalFortXTrans.g:581:4: ( rule__FnMods__ModsAssignment )*
            {
             before(grammarAccess.getFnModsAccess().getModsAssignment()); 
            // InternalFortXTrans.g:582:4: ( rule__FnMods__ModsAssignment )*
            loop2:
            do {
                int alt2=2;
                int LA2_0 = input.LA(1);

                if ( ((LA2_0>=62 && LA2_0<=65)) ) {
                    alt2=1;
                }


                switch (alt2) {
            	case 1 :
            	    // InternalFortXTrans.g:582:5: rule__FnMods__ModsAssignment
            	    {
            	    pushFollow(FOLLOW_4);
            	    rule__FnMods__ModsAssignment();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop2;
                }
            } while (true);

             after(grammarAccess.getFnModsAccess().getModsAssignment()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFnMods"


    // $ANTLR start "entryRuleFnMod"
    // InternalFortXTrans.g:592:1: entryRuleFnMod : ruleFnMod EOF ;
    public final void entryRuleFnMod() throws RecognitionException {
        try {
            // InternalFortXTrans.g:593:1: ( ruleFnMod EOF )
            // InternalFortXTrans.g:594:1: ruleFnMod EOF
            {
             before(grammarAccess.getFnModRule()); 
            pushFollow(FOLLOW_1);
            ruleFnMod();

            state._fsp--;

             after(grammarAccess.getFnModRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleFnMod"


    // $ANTLR start "ruleFnMod"
    // InternalFortXTrans.g:601:1: ruleFnMod : ( ( rule__FnMod__Alternatives ) ) ;
    public final void ruleFnMod() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:605:2: ( ( ( rule__FnMod__Alternatives ) ) )
            // InternalFortXTrans.g:606:2: ( ( rule__FnMod__Alternatives ) )
            {
            // InternalFortXTrans.g:606:2: ( ( rule__FnMod__Alternatives ) )
            // InternalFortXTrans.g:607:3: ( rule__FnMod__Alternatives )
            {
             before(grammarAccess.getFnModAccess().getAlternatives()); 
            // InternalFortXTrans.g:608:3: ( rule__FnMod__Alternatives )
            // InternalFortXTrans.g:608:4: rule__FnMod__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__FnMod__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getFnModAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFnMod"


    // $ANTLR start "entryRuleFnDecl"
    // InternalFortXTrans.g:617:1: entryRuleFnDecl : ruleFnDecl EOF ;
    public final void entryRuleFnDecl() throws RecognitionException {
        try {
            // InternalFortXTrans.g:618:1: ( ruleFnDecl EOF )
            // InternalFortXTrans.g:619:1: ruleFnDecl EOF
            {
             before(grammarAccess.getFnDeclRule()); 
            pushFollow(FOLLOW_1);
            ruleFnDecl();

            state._fsp--;

             after(grammarAccess.getFnDeclRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleFnDecl"


    // $ANTLR start "ruleFnDecl"
    // InternalFortXTrans.g:626:1: ruleFnDecl : ( ( rule__FnDecl__Group__0 ) ) ;
    public final void ruleFnDecl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:630:2: ( ( ( rule__FnDecl__Group__0 ) ) )
            // InternalFortXTrans.g:631:2: ( ( rule__FnDecl__Group__0 ) )
            {
            // InternalFortXTrans.g:631:2: ( ( rule__FnDecl__Group__0 ) )
            // InternalFortXTrans.g:632:3: ( rule__FnDecl__Group__0 )
            {
             before(grammarAccess.getFnDeclAccess().getGroup()); 
            // InternalFortXTrans.g:633:3: ( rule__FnDecl__Group__0 )
            // InternalFortXTrans.g:633:4: rule__FnDecl__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__FnDecl__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getFnDeclAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFnDecl"


    // $ANTLR start "entryRuleStmnts"
    // InternalFortXTrans.g:642:1: entryRuleStmnts : ruleStmnts EOF ;
    public final void entryRuleStmnts() throws RecognitionException {
        try {
            // InternalFortXTrans.g:643:1: ( ruleStmnts EOF )
            // InternalFortXTrans.g:644:1: ruleStmnts EOF
            {
             before(grammarAccess.getStmntsRule()); 
            pushFollow(FOLLOW_1);
            ruleStmnts();

            state._fsp--;

             after(grammarAccess.getStmntsRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleStmnts"


    // $ANTLR start "ruleStmnts"
    // InternalFortXTrans.g:651:1: ruleStmnts : ( ( rule__Stmnts__Alternatives ) ) ;
    public final void ruleStmnts() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:655:2: ( ( ( rule__Stmnts__Alternatives ) ) )
            // InternalFortXTrans.g:656:2: ( ( rule__Stmnts__Alternatives ) )
            {
            // InternalFortXTrans.g:656:2: ( ( rule__Stmnts__Alternatives ) )
            // InternalFortXTrans.g:657:3: ( rule__Stmnts__Alternatives )
            {
             before(grammarAccess.getStmntsAccess().getAlternatives()); 
            // InternalFortXTrans.g:658:3: ( rule__Stmnts__Alternatives )
            // InternalFortXTrans.g:658:4: rule__Stmnts__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__Stmnts__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getStmntsAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleStmnts"


    // $ANTLR start "entryRuleStmnt"
    // InternalFortXTrans.g:667:1: entryRuleStmnt : ruleStmnt EOF ;
    public final void entryRuleStmnt() throws RecognitionException {
        try {
            // InternalFortXTrans.g:668:1: ( ruleStmnt EOF )
            // InternalFortXTrans.g:669:1: ruleStmnt EOF
            {
             before(grammarAccess.getStmntRule()); 
            pushFollow(FOLLOW_1);
            ruleStmnt();

            state._fsp--;

             after(grammarAccess.getStmntRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleStmnt"


    // $ANTLR start "ruleStmnt"
    // InternalFortXTrans.g:676:1: ruleStmnt : ( ( rule__Stmnt__DelimAssignment ) ) ;
    public final void ruleStmnt() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:680:2: ( ( ( rule__Stmnt__DelimAssignment ) ) )
            // InternalFortXTrans.g:681:2: ( ( rule__Stmnt__DelimAssignment ) )
            {
            // InternalFortXTrans.g:681:2: ( ( rule__Stmnt__DelimAssignment ) )
            // InternalFortXTrans.g:682:3: ( rule__Stmnt__DelimAssignment )
            {
             before(grammarAccess.getStmntAccess().getDelimAssignment()); 
            // InternalFortXTrans.g:683:3: ( rule__Stmnt__DelimAssignment )
            // InternalFortXTrans.g:683:4: rule__Stmnt__DelimAssignment
            {
            pushFollow(FOLLOW_2);
            rule__Stmnt__DelimAssignment();

            state._fsp--;


            }

             after(grammarAccess.getStmntAccess().getDelimAssignment()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleStmnt"


    // $ANTLR start "entryRuleStmntList"
    // InternalFortXTrans.g:692:1: entryRuleStmntList : ruleStmntList EOF ;
    public final void entryRuleStmntList() throws RecognitionException {
        try {
            // InternalFortXTrans.g:693:1: ( ruleStmntList EOF )
            // InternalFortXTrans.g:694:1: ruleStmntList EOF
            {
             before(grammarAccess.getStmntListRule()); 
            pushFollow(FOLLOW_1);
            ruleStmntList();

            state._fsp--;

             after(grammarAccess.getStmntListRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleStmntList"


    // $ANTLR start "ruleStmntList"
    // InternalFortXTrans.g:701:1: ruleStmntList : ( ( rule__StmntList__Group__0 ) ) ;
    public final void ruleStmntList() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:705:2: ( ( ( rule__StmntList__Group__0 ) ) )
            // InternalFortXTrans.g:706:2: ( ( rule__StmntList__Group__0 ) )
            {
            // InternalFortXTrans.g:706:2: ( ( rule__StmntList__Group__0 ) )
            // InternalFortXTrans.g:707:3: ( rule__StmntList__Group__0 )
            {
             before(grammarAccess.getStmntListAccess().getGroup()); 
            // InternalFortXTrans.g:708:3: ( rule__StmntList__Group__0 )
            // InternalFortXTrans.g:708:4: rule__StmntList__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__StmntList__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getStmntListAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleStmntList"


    // $ANTLR start "entryRuleExpr"
    // InternalFortXTrans.g:717:1: entryRuleExpr : ruleExpr EOF ;
    public final void entryRuleExpr() throws RecognitionException {
        try {
            // InternalFortXTrans.g:718:1: ( ruleExpr EOF )
            // InternalFortXTrans.g:719:1: ruleExpr EOF
            {
             before(grammarAccess.getExprRule()); 
            pushFollow(FOLLOW_1);
            ruleExpr();

            state._fsp--;

             after(grammarAccess.getExprRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleExpr"


    // $ANTLR start "ruleExpr"
    // InternalFortXTrans.g:726:1: ruleExpr : ( ( rule__Expr__Group__0 ) ) ;
    public final void ruleExpr() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:730:2: ( ( ( rule__Expr__Group__0 ) ) )
            // InternalFortXTrans.g:731:2: ( ( rule__Expr__Group__0 ) )
            {
            // InternalFortXTrans.g:731:2: ( ( rule__Expr__Group__0 ) )
            // InternalFortXTrans.g:732:3: ( rule__Expr__Group__0 )
            {
             before(grammarAccess.getExprAccess().getGroup()); 
            // InternalFortXTrans.g:733:3: ( rule__Expr__Group__0 )
            // InternalFortXTrans.g:733:4: rule__Expr__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Expr__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getExprAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleExpr"


    // $ANTLR start "entryRuleOr"
    // InternalFortXTrans.g:742:1: entryRuleOr : ruleOr EOF ;
    public final void entryRuleOr() throws RecognitionException {
        try {
            // InternalFortXTrans.g:743:1: ( ruleOr EOF )
            // InternalFortXTrans.g:744:1: ruleOr EOF
            {
             before(grammarAccess.getOrRule()); 
            pushFollow(FOLLOW_1);
            ruleOr();

            state._fsp--;

             after(grammarAccess.getOrRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOr"


    // $ANTLR start "ruleOr"
    // InternalFortXTrans.g:751:1: ruleOr : ( ( rule__Or__Group__0 ) ) ;
    public final void ruleOr() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:755:2: ( ( ( rule__Or__Group__0 ) ) )
            // InternalFortXTrans.g:756:2: ( ( rule__Or__Group__0 ) )
            {
            // InternalFortXTrans.g:756:2: ( ( rule__Or__Group__0 ) )
            // InternalFortXTrans.g:757:3: ( rule__Or__Group__0 )
            {
             before(grammarAccess.getOrAccess().getGroup()); 
            // InternalFortXTrans.g:758:3: ( rule__Or__Group__0 )
            // InternalFortXTrans.g:758:4: rule__Or__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Or__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getOrAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOr"


    // $ANTLR start "entryRuleAnd"
    // InternalFortXTrans.g:767:1: entryRuleAnd : ruleAnd EOF ;
    public final void entryRuleAnd() throws RecognitionException {
        try {
            // InternalFortXTrans.g:768:1: ( ruleAnd EOF )
            // InternalFortXTrans.g:769:1: ruleAnd EOF
            {
             before(grammarAccess.getAndRule()); 
            pushFollow(FOLLOW_1);
            ruleAnd();

            state._fsp--;

             after(grammarAccess.getAndRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAnd"


    // $ANTLR start "ruleAnd"
    // InternalFortXTrans.g:776:1: ruleAnd : ( ( rule__And__Group__0 ) ) ;
    public final void ruleAnd() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:780:2: ( ( ( rule__And__Group__0 ) ) )
            // InternalFortXTrans.g:781:2: ( ( rule__And__Group__0 ) )
            {
            // InternalFortXTrans.g:781:2: ( ( rule__And__Group__0 ) )
            // InternalFortXTrans.g:782:3: ( rule__And__Group__0 )
            {
             before(grammarAccess.getAndAccess().getGroup()); 
            // InternalFortXTrans.g:783:3: ( rule__And__Group__0 )
            // InternalFortXTrans.g:783:4: rule__And__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__And__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getAndAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAnd"


    // $ANTLR start "entryRuleEquality"
    // InternalFortXTrans.g:792:1: entryRuleEquality : ruleEquality EOF ;
    public final void entryRuleEquality() throws RecognitionException {
        try {
            // InternalFortXTrans.g:793:1: ( ruleEquality EOF )
            // InternalFortXTrans.g:794:1: ruleEquality EOF
            {
             before(grammarAccess.getEqualityRule()); 
            pushFollow(FOLLOW_1);
            ruleEquality();

            state._fsp--;

             after(grammarAccess.getEqualityRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleEquality"


    // $ANTLR start "ruleEquality"
    // InternalFortXTrans.g:801:1: ruleEquality : ( ( rule__Equality__Group__0 ) ) ;
    public final void ruleEquality() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:805:2: ( ( ( rule__Equality__Group__0 ) ) )
            // InternalFortXTrans.g:806:2: ( ( rule__Equality__Group__0 ) )
            {
            // InternalFortXTrans.g:806:2: ( ( rule__Equality__Group__0 ) )
            // InternalFortXTrans.g:807:3: ( rule__Equality__Group__0 )
            {
             before(grammarAccess.getEqualityAccess().getGroup()); 
            // InternalFortXTrans.g:808:3: ( rule__Equality__Group__0 )
            // InternalFortXTrans.g:808:4: rule__Equality__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Equality__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getEqualityAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleEquality"


    // $ANTLR start "entryRuleComparison"
    // InternalFortXTrans.g:817:1: entryRuleComparison : ruleComparison EOF ;
    public final void entryRuleComparison() throws RecognitionException {
        try {
            // InternalFortXTrans.g:818:1: ( ruleComparison EOF )
            // InternalFortXTrans.g:819:1: ruleComparison EOF
            {
             before(grammarAccess.getComparisonRule()); 
            pushFollow(FOLLOW_1);
            ruleComparison();

            state._fsp--;

             after(grammarAccess.getComparisonRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleComparison"


    // $ANTLR start "ruleComparison"
    // InternalFortXTrans.g:826:1: ruleComparison : ( ( rule__Comparison__Group__0 ) ) ;
    public final void ruleComparison() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:830:2: ( ( ( rule__Comparison__Group__0 ) ) )
            // InternalFortXTrans.g:831:2: ( ( rule__Comparison__Group__0 ) )
            {
            // InternalFortXTrans.g:831:2: ( ( rule__Comparison__Group__0 ) )
            // InternalFortXTrans.g:832:3: ( rule__Comparison__Group__0 )
            {
             before(grammarAccess.getComparisonAccess().getGroup()); 
            // InternalFortXTrans.g:833:3: ( rule__Comparison__Group__0 )
            // InternalFortXTrans.g:833:4: rule__Comparison__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Comparison__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getComparisonAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleComparison"


    // $ANTLR start "entryRuleAddExpr"
    // InternalFortXTrans.g:842:1: entryRuleAddExpr : ruleAddExpr EOF ;
    public final void entryRuleAddExpr() throws RecognitionException {
        try {
            // InternalFortXTrans.g:843:1: ( ruleAddExpr EOF )
            // InternalFortXTrans.g:844:1: ruleAddExpr EOF
            {
             before(grammarAccess.getAddExprRule()); 
            pushFollow(FOLLOW_1);
            ruleAddExpr();

            state._fsp--;

             after(grammarAccess.getAddExprRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAddExpr"


    // $ANTLR start "ruleAddExpr"
    // InternalFortXTrans.g:851:1: ruleAddExpr : ( ( rule__AddExpr__Group__0 ) ) ;
    public final void ruleAddExpr() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:855:2: ( ( ( rule__AddExpr__Group__0 ) ) )
            // InternalFortXTrans.g:856:2: ( ( rule__AddExpr__Group__0 ) )
            {
            // InternalFortXTrans.g:856:2: ( ( rule__AddExpr__Group__0 ) )
            // InternalFortXTrans.g:857:3: ( rule__AddExpr__Group__0 )
            {
             before(grammarAccess.getAddExprAccess().getGroup()); 
            // InternalFortXTrans.g:858:3: ( rule__AddExpr__Group__0 )
            // InternalFortXTrans.g:858:4: rule__AddExpr__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__AddExpr__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getAddExprAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAddExpr"


    // $ANTLR start "entryRuleSubExpr"
    // InternalFortXTrans.g:867:1: entryRuleSubExpr : ruleSubExpr EOF ;
    public final void entryRuleSubExpr() throws RecognitionException {
        try {
            // InternalFortXTrans.g:868:1: ( ruleSubExpr EOF )
            // InternalFortXTrans.g:869:1: ruleSubExpr EOF
            {
             before(grammarAccess.getSubExprRule()); 
            pushFollow(FOLLOW_1);
            ruleSubExpr();

            state._fsp--;

             after(grammarAccess.getSubExprRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSubExpr"


    // $ANTLR start "ruleSubExpr"
    // InternalFortXTrans.g:876:1: ruleSubExpr : ( ( rule__SubExpr__Group__0 ) ) ;
    public final void ruleSubExpr() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:880:2: ( ( ( rule__SubExpr__Group__0 ) ) )
            // InternalFortXTrans.g:881:2: ( ( rule__SubExpr__Group__0 ) )
            {
            // InternalFortXTrans.g:881:2: ( ( rule__SubExpr__Group__0 ) )
            // InternalFortXTrans.g:882:3: ( rule__SubExpr__Group__0 )
            {
             before(grammarAccess.getSubExprAccess().getGroup()); 
            // InternalFortXTrans.g:883:3: ( rule__SubExpr__Group__0 )
            // InternalFortXTrans.g:883:4: rule__SubExpr__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__SubExpr__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getSubExprAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSubExpr"


    // $ANTLR start "entryRuleDivExpr"
    // InternalFortXTrans.g:892:1: entryRuleDivExpr : ruleDivExpr EOF ;
    public final void entryRuleDivExpr() throws RecognitionException {
        try {
            // InternalFortXTrans.g:893:1: ( ruleDivExpr EOF )
            // InternalFortXTrans.g:894:1: ruleDivExpr EOF
            {
             before(grammarAccess.getDivExprRule()); 
            pushFollow(FOLLOW_1);
            ruleDivExpr();

            state._fsp--;

             after(grammarAccess.getDivExprRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDivExpr"


    // $ANTLR start "ruleDivExpr"
    // InternalFortXTrans.g:901:1: ruleDivExpr : ( ( rule__DivExpr__Group__0 ) ) ;
    public final void ruleDivExpr() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:905:2: ( ( ( rule__DivExpr__Group__0 ) ) )
            // InternalFortXTrans.g:906:2: ( ( rule__DivExpr__Group__0 ) )
            {
            // InternalFortXTrans.g:906:2: ( ( rule__DivExpr__Group__0 ) )
            // InternalFortXTrans.g:907:3: ( rule__DivExpr__Group__0 )
            {
             before(grammarAccess.getDivExprAccess().getGroup()); 
            // InternalFortXTrans.g:908:3: ( rule__DivExpr__Group__0 )
            // InternalFortXTrans.g:908:4: rule__DivExpr__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__DivExpr__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getDivExprAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDivExpr"


    // $ANTLR start "entryRuleMultExpr"
    // InternalFortXTrans.g:917:1: entryRuleMultExpr : ruleMultExpr EOF ;
    public final void entryRuleMultExpr() throws RecognitionException {
        try {
            // InternalFortXTrans.g:918:1: ( ruleMultExpr EOF )
            // InternalFortXTrans.g:919:1: ruleMultExpr EOF
            {
             before(grammarAccess.getMultExprRule()); 
            pushFollow(FOLLOW_1);
            ruleMultExpr();

            state._fsp--;

             after(grammarAccess.getMultExprRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleMultExpr"


    // $ANTLR start "ruleMultExpr"
    // InternalFortXTrans.g:926:1: ruleMultExpr : ( ( rule__MultExpr__Group__0 ) ) ;
    public final void ruleMultExpr() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:930:2: ( ( ( rule__MultExpr__Group__0 ) ) )
            // InternalFortXTrans.g:931:2: ( ( rule__MultExpr__Group__0 ) )
            {
            // InternalFortXTrans.g:931:2: ( ( rule__MultExpr__Group__0 ) )
            // InternalFortXTrans.g:932:3: ( rule__MultExpr__Group__0 )
            {
             before(grammarAccess.getMultExprAccess().getGroup()); 
            // InternalFortXTrans.g:933:3: ( rule__MultExpr__Group__0 )
            // InternalFortXTrans.g:933:4: rule__MultExpr__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__MultExpr__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getMultExprAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleMultExpr"


    // $ANTLR start "entryRuleExponentExpr"
    // InternalFortXTrans.g:942:1: entryRuleExponentExpr : ruleExponentExpr EOF ;
    public final void entryRuleExponentExpr() throws RecognitionException {
        try {
            // InternalFortXTrans.g:943:1: ( ruleExponentExpr EOF )
            // InternalFortXTrans.g:944:1: ruleExponentExpr EOF
            {
             before(grammarAccess.getExponentExprRule()); 
            pushFollow(FOLLOW_1);
            ruleExponentExpr();

            state._fsp--;

             after(grammarAccess.getExponentExprRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleExponentExpr"


    // $ANTLR start "ruleExponentExpr"
    // InternalFortXTrans.g:951:1: ruleExponentExpr : ( ( rule__ExponentExpr__Group__0 ) ) ;
    public final void ruleExponentExpr() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:955:2: ( ( ( rule__ExponentExpr__Group__0 ) ) )
            // InternalFortXTrans.g:956:2: ( ( rule__ExponentExpr__Group__0 ) )
            {
            // InternalFortXTrans.g:956:2: ( ( rule__ExponentExpr__Group__0 ) )
            // InternalFortXTrans.g:957:3: ( rule__ExponentExpr__Group__0 )
            {
             before(grammarAccess.getExponentExprAccess().getGroup()); 
            // InternalFortXTrans.g:958:3: ( rule__ExponentExpr__Group__0 )
            // InternalFortXTrans.g:958:4: rule__ExponentExpr__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__ExponentExpr__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getExponentExprAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleExponentExpr"


    // $ANTLR start "entryRulePrimary"
    // InternalFortXTrans.g:967:1: entryRulePrimary : rulePrimary EOF ;
    public final void entryRulePrimary() throws RecognitionException {
        try {
            // InternalFortXTrans.g:968:1: ( rulePrimary EOF )
            // InternalFortXTrans.g:969:1: rulePrimary EOF
            {
             before(grammarAccess.getPrimaryRule()); 
            pushFollow(FOLLOW_1);
            rulePrimary();

            state._fsp--;

             after(grammarAccess.getPrimaryRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulePrimary"


    // $ANTLR start "rulePrimary"
    // InternalFortXTrans.g:976:1: rulePrimary : ( ( rule__Primary__Alternatives ) ) ;
    public final void rulePrimary() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:980:2: ( ( ( rule__Primary__Alternatives ) ) )
            // InternalFortXTrans.g:981:2: ( ( rule__Primary__Alternatives ) )
            {
            // InternalFortXTrans.g:981:2: ( ( rule__Primary__Alternatives ) )
            // InternalFortXTrans.g:982:3: ( rule__Primary__Alternatives )
            {
             before(grammarAccess.getPrimaryAccess().getAlternatives()); 
            // InternalFortXTrans.g:983:3: ( rule__Primary__Alternatives )
            // InternalFortXTrans.g:983:4: rule__Primary__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__Primary__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getPrimaryAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePrimary"


    // $ANTLR start "entryRuleExprList"
    // InternalFortXTrans.g:992:1: entryRuleExprList : ruleExprList EOF ;
    public final void entryRuleExprList() throws RecognitionException {
        try {
            // InternalFortXTrans.g:993:1: ( ruleExprList EOF )
            // InternalFortXTrans.g:994:1: ruleExprList EOF
            {
             before(grammarAccess.getExprListRule()); 
            pushFollow(FOLLOW_1);
            ruleExprList();

            state._fsp--;

             after(grammarAccess.getExprListRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleExprList"


    // $ANTLR start "ruleExprList"
    // InternalFortXTrans.g:1001:1: ruleExprList : ( ( rule__ExprList__Group__0 ) ) ;
    public final void ruleExprList() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1005:2: ( ( ( rule__ExprList__Group__0 ) ) )
            // InternalFortXTrans.g:1006:2: ( ( rule__ExprList__Group__0 ) )
            {
            // InternalFortXTrans.g:1006:2: ( ( rule__ExprList__Group__0 ) )
            // InternalFortXTrans.g:1007:3: ( rule__ExprList__Group__0 )
            {
             before(grammarAccess.getExprListAccess().getGroup()); 
            // InternalFortXTrans.g:1008:3: ( rule__ExprList__Group__0 )
            // InternalFortXTrans.g:1008:4: rule__ExprList__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__ExprList__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getExprListAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleExprList"


    // $ANTLR start "entryRuleExprTail"
    // InternalFortXTrans.g:1017:1: entryRuleExprTail : ruleExprTail EOF ;
    public final void entryRuleExprTail() throws RecognitionException {
        try {
            // InternalFortXTrans.g:1018:1: ( ruleExprTail EOF )
            // InternalFortXTrans.g:1019:1: ruleExprTail EOF
            {
             before(grammarAccess.getExprTailRule()); 
            pushFollow(FOLLOW_1);
            ruleExprTail();

            state._fsp--;

             after(grammarAccess.getExprTailRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleExprTail"


    // $ANTLR start "ruleExprTail"
    // InternalFortXTrans.g:1026:1: ruleExprTail : ( ( rule__ExprTail__Group__0 ) ) ;
    public final void ruleExprTail() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1030:2: ( ( ( rule__ExprTail__Group__0 ) ) )
            // InternalFortXTrans.g:1031:2: ( ( rule__ExprTail__Group__0 ) )
            {
            // InternalFortXTrans.g:1031:2: ( ( rule__ExprTail__Group__0 ) )
            // InternalFortXTrans.g:1032:3: ( rule__ExprTail__Group__0 )
            {
             before(grammarAccess.getExprTailAccess().getGroup()); 
            // InternalFortXTrans.g:1033:3: ( rule__ExprTail__Group__0 )
            // InternalFortXTrans.g:1033:4: rule__ExprTail__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__ExprTail__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getExprTailAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleExprTail"


    // $ANTLR start "entryRuleDelimitedExpr"
    // InternalFortXTrans.g:1042:1: entryRuleDelimitedExpr : ruleDelimitedExpr EOF ;
    public final void entryRuleDelimitedExpr() throws RecognitionException {
        try {
            // InternalFortXTrans.g:1043:1: ( ruleDelimitedExpr EOF )
            // InternalFortXTrans.g:1044:1: ruleDelimitedExpr EOF
            {
             before(grammarAccess.getDelimitedExprRule()); 
            pushFollow(FOLLOW_1);
            ruleDelimitedExpr();

            state._fsp--;

             after(grammarAccess.getDelimitedExprRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDelimitedExpr"


    // $ANTLR start "ruleDelimitedExpr"
    // InternalFortXTrans.g:1051:1: ruleDelimitedExpr : ( ( rule__DelimitedExpr__Alternatives ) ) ;
    public final void ruleDelimitedExpr() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1055:2: ( ( ( rule__DelimitedExpr__Alternatives ) ) )
            // InternalFortXTrans.g:1056:2: ( ( rule__DelimitedExpr__Alternatives ) )
            {
            // InternalFortXTrans.g:1056:2: ( ( rule__DelimitedExpr__Alternatives ) )
            // InternalFortXTrans.g:1057:3: ( rule__DelimitedExpr__Alternatives )
            {
             before(grammarAccess.getDelimitedExprAccess().getAlternatives()); 
            // InternalFortXTrans.g:1058:3: ( rule__DelimitedExpr__Alternatives )
            // InternalFortXTrans.g:1058:4: rule__DelimitedExpr__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__DelimitedExpr__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getDelimitedExprAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDelimitedExpr"


    // $ANTLR start "entryRuleElifs"
    // InternalFortXTrans.g:1067:1: entryRuleElifs : ruleElifs EOF ;
    public final void entryRuleElifs() throws RecognitionException {
        try {
            // InternalFortXTrans.g:1068:1: ( ruleElifs EOF )
            // InternalFortXTrans.g:1069:1: ruleElifs EOF
            {
             before(grammarAccess.getElifsRule()); 
            pushFollow(FOLLOW_1);
            ruleElifs();

            state._fsp--;

             after(grammarAccess.getElifsRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleElifs"


    // $ANTLR start "ruleElifs"
    // InternalFortXTrans.g:1076:1: ruleElifs : ( ( rule__Elifs__Group__0 ) ) ;
    public final void ruleElifs() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1080:2: ( ( ( rule__Elifs__Group__0 ) ) )
            // InternalFortXTrans.g:1081:2: ( ( rule__Elifs__Group__0 ) )
            {
            // InternalFortXTrans.g:1081:2: ( ( rule__Elifs__Group__0 ) )
            // InternalFortXTrans.g:1082:3: ( rule__Elifs__Group__0 )
            {
             before(grammarAccess.getElifsAccess().getGroup()); 
            // InternalFortXTrans.g:1083:3: ( rule__Elifs__Group__0 )
            // InternalFortXTrans.g:1083:4: rule__Elifs__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Elifs__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getElifsAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleElifs"


    // $ANTLR start "entryRuleElif"
    // InternalFortXTrans.g:1092:1: entryRuleElif : ruleElif EOF ;
    public final void entryRuleElif() throws RecognitionException {
        try {
            // InternalFortXTrans.g:1093:1: ( ruleElif EOF )
            // InternalFortXTrans.g:1094:1: ruleElif EOF
            {
             before(grammarAccess.getElifRule()); 
            pushFollow(FOLLOW_1);
            ruleElif();

            state._fsp--;

             after(grammarAccess.getElifRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleElif"


    // $ANTLR start "ruleElif"
    // InternalFortXTrans.g:1101:1: ruleElif : ( ( rule__Elif__Group__0 ) ) ;
    public final void ruleElif() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1105:2: ( ( ( rule__Elif__Group__0 ) ) )
            // InternalFortXTrans.g:1106:2: ( ( rule__Elif__Group__0 ) )
            {
            // InternalFortXTrans.g:1106:2: ( ( rule__Elif__Group__0 ) )
            // InternalFortXTrans.g:1107:3: ( rule__Elif__Group__0 )
            {
             before(grammarAccess.getElifAccess().getGroup()); 
            // InternalFortXTrans.g:1108:3: ( rule__Elif__Group__0 )
            // InternalFortXTrans.g:1108:4: rule__Elif__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Elif__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getElifAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleElif"


    // $ANTLR start "entryRuleElse"
    // InternalFortXTrans.g:1117:1: entryRuleElse : ruleElse EOF ;
    public final void entryRuleElse() throws RecognitionException {
        try {
            // InternalFortXTrans.g:1118:1: ( ruleElse EOF )
            // InternalFortXTrans.g:1119:1: ruleElse EOF
            {
             before(grammarAccess.getElseRule()); 
            pushFollow(FOLLOW_1);
            ruleElse();

            state._fsp--;

             after(grammarAccess.getElseRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleElse"


    // $ANTLR start "ruleElse"
    // InternalFortXTrans.g:1126:1: ruleElse : ( ( rule__Else__Group__0 ) ) ;
    public final void ruleElse() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1130:2: ( ( ( rule__Else__Group__0 ) ) )
            // InternalFortXTrans.g:1131:2: ( ( rule__Else__Group__0 ) )
            {
            // InternalFortXTrans.g:1131:2: ( ( rule__Else__Group__0 ) )
            // InternalFortXTrans.g:1132:3: ( rule__Else__Group__0 )
            {
             before(grammarAccess.getElseAccess().getGroup()); 
            // InternalFortXTrans.g:1133:3: ( rule__Else__Group__0 )
            // InternalFortXTrans.g:1133:4: rule__Else__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Else__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getElseAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleElse"


    // $ANTLR start "entryRuleGenerators"
    // InternalFortXTrans.g:1142:1: entryRuleGenerators : ruleGenerators EOF ;
    public final void entryRuleGenerators() throws RecognitionException {
        try {
            // InternalFortXTrans.g:1143:1: ( ruleGenerators EOF )
            // InternalFortXTrans.g:1144:1: ruleGenerators EOF
            {
             before(grammarAccess.getGeneratorsRule()); 
            pushFollow(FOLLOW_1);
            ruleGenerators();

            state._fsp--;

             after(grammarAccess.getGeneratorsRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleGenerators"


    // $ANTLR start "ruleGenerators"
    // InternalFortXTrans.g:1151:1: ruleGenerators : ( ( rule__Generators__Group__0 ) ) ;
    public final void ruleGenerators() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1155:2: ( ( ( rule__Generators__Group__0 ) ) )
            // InternalFortXTrans.g:1156:2: ( ( rule__Generators__Group__0 ) )
            {
            // InternalFortXTrans.g:1156:2: ( ( rule__Generators__Group__0 ) )
            // InternalFortXTrans.g:1157:3: ( rule__Generators__Group__0 )
            {
             before(grammarAccess.getGeneratorsAccess().getGroup()); 
            // InternalFortXTrans.g:1158:3: ( rule__Generators__Group__0 )
            // InternalFortXTrans.g:1158:4: rule__Generators__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Generators__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getGeneratorsAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleGenerators"


    // $ANTLR start "entryRuleBinding"
    // InternalFortXTrans.g:1167:1: entryRuleBinding : ruleBinding EOF ;
    public final void entryRuleBinding() throws RecognitionException {
        try {
            // InternalFortXTrans.g:1168:1: ( ruleBinding EOF )
            // InternalFortXTrans.g:1169:1: ruleBinding EOF
            {
             before(grammarAccess.getBindingRule()); 
            pushFollow(FOLLOW_1);
            ruleBinding();

            state._fsp--;

             after(grammarAccess.getBindingRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleBinding"


    // $ANTLR start "ruleBinding"
    // InternalFortXTrans.g:1176:1: ruleBinding : ( ( rule__Binding__Alternatives ) ) ;
    public final void ruleBinding() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1180:2: ( ( ( rule__Binding__Alternatives ) ) )
            // InternalFortXTrans.g:1181:2: ( ( rule__Binding__Alternatives ) )
            {
            // InternalFortXTrans.g:1181:2: ( ( rule__Binding__Alternatives ) )
            // InternalFortXTrans.g:1182:3: ( rule__Binding__Alternatives )
            {
             before(grammarAccess.getBindingAccess().getAlternatives()); 
            // InternalFortXTrans.g:1183:3: ( rule__Binding__Alternatives )
            // InternalFortXTrans.g:1183:4: rule__Binding__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__Binding__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getBindingAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleBinding"


    // $ANTLR start "entryRuleGenSource"
    // InternalFortXTrans.g:1192:1: entryRuleGenSource : ruleGenSource EOF ;
    public final void entryRuleGenSource() throws RecognitionException {
        try {
            // InternalFortXTrans.g:1193:1: ( ruleGenSource EOF )
            // InternalFortXTrans.g:1194:1: ruleGenSource EOF
            {
             before(grammarAccess.getGenSourceRule()); 
            pushFollow(FOLLOW_1);
            ruleGenSource();

            state._fsp--;

             after(grammarAccess.getGenSourceRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleGenSource"


    // $ANTLR start "ruleGenSource"
    // InternalFortXTrans.g:1201:1: ruleGenSource : ( ( rule__GenSource__Group__0 ) ) ;
    public final void ruleGenSource() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1205:2: ( ( ( rule__GenSource__Group__0 ) ) )
            // InternalFortXTrans.g:1206:2: ( ( rule__GenSource__Group__0 ) )
            {
            // InternalFortXTrans.g:1206:2: ( ( rule__GenSource__Group__0 ) )
            // InternalFortXTrans.g:1207:3: ( rule__GenSource__Group__0 )
            {
             before(grammarAccess.getGenSourceAccess().getGroup()); 
            // InternalFortXTrans.g:1208:3: ( rule__GenSource__Group__0 )
            // InternalFortXTrans.g:1208:4: rule__GenSource__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__GenSource__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getGenSourceAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleGenSource"


    // $ANTLR start "entryRuleGenClause"
    // InternalFortXTrans.g:1217:1: entryRuleGenClause : ruleGenClause EOF ;
    public final void entryRuleGenClause() throws RecognitionException {
        try {
            // InternalFortXTrans.g:1218:1: ( ruleGenClause EOF )
            // InternalFortXTrans.g:1219:1: ruleGenClause EOF
            {
             before(grammarAccess.getGenClauseRule()); 
            pushFollow(FOLLOW_1);
            ruleGenClause();

            state._fsp--;

             after(grammarAccess.getGenClauseRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleGenClause"


    // $ANTLR start "ruleGenClause"
    // InternalFortXTrans.g:1226:1: ruleGenClause : ( ( rule__GenClause__Alternatives ) ) ;
    public final void ruleGenClause() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1230:2: ( ( ( rule__GenClause__Alternatives ) ) )
            // InternalFortXTrans.g:1231:2: ( ( rule__GenClause__Alternatives ) )
            {
            // InternalFortXTrans.g:1231:2: ( ( rule__GenClause__Alternatives ) )
            // InternalFortXTrans.g:1232:3: ( rule__GenClause__Alternatives )
            {
             before(grammarAccess.getGenClauseAccess().getAlternatives()); 
            // InternalFortXTrans.g:1233:3: ( rule__GenClause__Alternatives )
            // InternalFortXTrans.g:1233:4: rule__GenClause__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__GenClause__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getGenClauseAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleGenClause"


    // $ANTLR start "entryRuleBlockElems"
    // InternalFortXTrans.g:1242:1: entryRuleBlockElems : ruleBlockElems EOF ;
    public final void entryRuleBlockElems() throws RecognitionException {
        try {
            // InternalFortXTrans.g:1243:1: ( ruleBlockElems EOF )
            // InternalFortXTrans.g:1244:1: ruleBlockElems EOF
            {
             before(grammarAccess.getBlockElemsRule()); 
            pushFollow(FOLLOW_1);
            ruleBlockElems();

            state._fsp--;

             after(grammarAccess.getBlockElemsRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleBlockElems"


    // $ANTLR start "ruleBlockElems"
    // InternalFortXTrans.g:1251:1: ruleBlockElems : ( ( rule__BlockElems__Group__0 ) ) ;
    public final void ruleBlockElems() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1255:2: ( ( ( rule__BlockElems__Group__0 ) ) )
            // InternalFortXTrans.g:1256:2: ( ( rule__BlockElems__Group__0 ) )
            {
            // InternalFortXTrans.g:1256:2: ( ( rule__BlockElems__Group__0 ) )
            // InternalFortXTrans.g:1257:3: ( rule__BlockElems__Group__0 )
            {
             before(grammarAccess.getBlockElemsAccess().getGroup()); 
            // InternalFortXTrans.g:1258:3: ( rule__BlockElems__Group__0 )
            // InternalFortXTrans.g:1258:4: rule__BlockElems__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__BlockElems__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getBlockElemsAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleBlockElems"


    // $ANTLR start "entryRuleBlockElem"
    // InternalFortXTrans.g:1267:1: entryRuleBlockElem : ruleBlockElem EOF ;
    public final void entryRuleBlockElem() throws RecognitionException {
        try {
            // InternalFortXTrans.g:1268:1: ( ruleBlockElem EOF )
            // InternalFortXTrans.g:1269:1: ruleBlockElem EOF
            {
             before(grammarAccess.getBlockElemRule()); 
            pushFollow(FOLLOW_1);
            ruleBlockElem();

            state._fsp--;

             after(grammarAccess.getBlockElemRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleBlockElem"


    // $ANTLR start "ruleBlockElem"
    // InternalFortXTrans.g:1276:1: ruleBlockElem : ( ( rule__BlockElem__StAssignment ) ) ;
    public final void ruleBlockElem() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1280:2: ( ( ( rule__BlockElem__StAssignment ) ) )
            // InternalFortXTrans.g:1281:2: ( ( rule__BlockElem__StAssignment ) )
            {
            // InternalFortXTrans.g:1281:2: ( ( rule__BlockElem__StAssignment ) )
            // InternalFortXTrans.g:1282:3: ( rule__BlockElem__StAssignment )
            {
             before(grammarAccess.getBlockElemAccess().getStAssignment()); 
            // InternalFortXTrans.g:1283:3: ( rule__BlockElem__StAssignment )
            // InternalFortXTrans.g:1283:4: rule__BlockElem__StAssignment
            {
            pushFollow(FOLLOW_2);
            rule__BlockElem__StAssignment();

            state._fsp--;


            }

             after(grammarAccess.getBlockElemAccess().getStAssignment()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleBlockElem"


    // $ANTLR start "entryRuleDo"
    // InternalFortXTrans.g:1292:1: entryRuleDo : ruleDo EOF ;
    public final void entryRuleDo() throws RecognitionException {
        try {
            // InternalFortXTrans.g:1293:1: ( ruleDo EOF )
            // InternalFortXTrans.g:1294:1: ruleDo EOF
            {
             before(grammarAccess.getDoRule()); 
            pushFollow(FOLLOW_1);
            ruleDo();

            state._fsp--;

             after(grammarAccess.getDoRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDo"


    // $ANTLR start "ruleDo"
    // InternalFortXTrans.g:1301:1: ruleDo : ( ( rule__Do__Group__0 ) ) ;
    public final void ruleDo() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1305:2: ( ( ( rule__Do__Group__0 ) ) )
            // InternalFortXTrans.g:1306:2: ( ( rule__Do__Group__0 ) )
            {
            // InternalFortXTrans.g:1306:2: ( ( rule__Do__Group__0 ) )
            // InternalFortXTrans.g:1307:3: ( rule__Do__Group__0 )
            {
             before(grammarAccess.getDoAccess().getGroup()); 
            // InternalFortXTrans.g:1308:3: ( rule__Do__Group__0 )
            // InternalFortXTrans.g:1308:4: rule__Do__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Do__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getDoAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDo"


    // $ANTLR start "entryRuleDoFront"
    // InternalFortXTrans.g:1317:1: entryRuleDoFront : ruleDoFront EOF ;
    public final void entryRuleDoFront() throws RecognitionException {
        try {
            // InternalFortXTrans.g:1318:1: ( ruleDoFront EOF )
            // InternalFortXTrans.g:1319:1: ruleDoFront EOF
            {
             before(grammarAccess.getDoFrontRule()); 
            pushFollow(FOLLOW_1);
            ruleDoFront();

            state._fsp--;

             after(grammarAccess.getDoFrontRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDoFront"


    // $ANTLR start "ruleDoFront"
    // InternalFortXTrans.g:1326:1: ruleDoFront : ( ( rule__DoFront__Group__0 ) ) ;
    public final void ruleDoFront() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1330:2: ( ( ( rule__DoFront__Group__0 ) ) )
            // InternalFortXTrans.g:1331:2: ( ( rule__DoFront__Group__0 ) )
            {
            // InternalFortXTrans.g:1331:2: ( ( rule__DoFront__Group__0 ) )
            // InternalFortXTrans.g:1332:3: ( rule__DoFront__Group__0 )
            {
             before(grammarAccess.getDoFrontAccess().getGroup()); 
            // InternalFortXTrans.g:1333:3: ( rule__DoFront__Group__0 )
            // InternalFortXTrans.g:1333:4: rule__DoFront__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__DoFront__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getDoFrontAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDoFront"


    // $ANTLR start "entryRuleIsType"
    // InternalFortXTrans.g:1342:1: entryRuleIsType : ruleIsType EOF ;
    public final void entryRuleIsType() throws RecognitionException {
        try {
            // InternalFortXTrans.g:1343:1: ( ruleIsType EOF )
            // InternalFortXTrans.g:1344:1: ruleIsType EOF
            {
             before(grammarAccess.getIsTypeRule()); 
            pushFollow(FOLLOW_1);
            ruleIsType();

            state._fsp--;

             after(grammarAccess.getIsTypeRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleIsType"


    // $ANTLR start "ruleIsType"
    // InternalFortXTrans.g:1351:1: ruleIsType : ( ( rule__IsType__Group__0 ) ) ;
    public final void ruleIsType() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1355:2: ( ( ( rule__IsType__Group__0 ) ) )
            // InternalFortXTrans.g:1356:2: ( ( rule__IsType__Group__0 ) )
            {
            // InternalFortXTrans.g:1356:2: ( ( rule__IsType__Group__0 ) )
            // InternalFortXTrans.g:1357:3: ( rule__IsType__Group__0 )
            {
             before(grammarAccess.getIsTypeAccess().getGroup()); 
            // InternalFortXTrans.g:1358:3: ( rule__IsType__Group__0 )
            // InternalFortXTrans.g:1358:4: rule__IsType__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__IsType__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getIsTypeAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleIsType"


    // $ANTLR start "entryRuleFieldDecl"
    // InternalFortXTrans.g:1367:1: entryRuleFieldDecl : ruleFieldDecl EOF ;
    public final void entryRuleFieldDecl() throws RecognitionException {
        try {
            // InternalFortXTrans.g:1368:1: ( ruleFieldDecl EOF )
            // InternalFortXTrans.g:1369:1: ruleFieldDecl EOF
            {
             before(grammarAccess.getFieldDeclRule()); 
            pushFollow(FOLLOW_1);
            ruleFieldDecl();

            state._fsp--;

             after(grammarAccess.getFieldDeclRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleFieldDecl"


    // $ANTLR start "ruleFieldDecl"
    // InternalFortXTrans.g:1376:1: ruleFieldDecl : ( ( rule__FieldDecl__Alternatives ) ) ;
    public final void ruleFieldDecl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1380:2: ( ( ( rule__FieldDecl__Alternatives ) ) )
            // InternalFortXTrans.g:1381:2: ( ( rule__FieldDecl__Alternatives ) )
            {
            // InternalFortXTrans.g:1381:2: ( ( rule__FieldDecl__Alternatives ) )
            // InternalFortXTrans.g:1382:3: ( rule__FieldDecl__Alternatives )
            {
             before(grammarAccess.getFieldDeclAccess().getAlternatives()); 
            // InternalFortXTrans.g:1383:3: ( rule__FieldDecl__Alternatives )
            // InternalFortXTrans.g:1383:4: rule__FieldDecl__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__FieldDecl__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getFieldDeclAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFieldDecl"


    // $ANTLR start "entryRuleNoNewlineVarWTypes"
    // InternalFortXTrans.g:1392:1: entryRuleNoNewlineVarWTypes : ruleNoNewlineVarWTypes EOF ;
    public final void entryRuleNoNewlineVarWTypes() throws RecognitionException {
        try {
            // InternalFortXTrans.g:1393:1: ( ruleNoNewlineVarWTypes EOF )
            // InternalFortXTrans.g:1394:1: ruleNoNewlineVarWTypes EOF
            {
             before(grammarAccess.getNoNewlineVarWTypesRule()); 
            pushFollow(FOLLOW_1);
            ruleNoNewlineVarWTypes();

            state._fsp--;

             after(grammarAccess.getNoNewlineVarWTypesRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleNoNewlineVarWTypes"


    // $ANTLR start "ruleNoNewlineVarWTypes"
    // InternalFortXTrans.g:1401:1: ruleNoNewlineVarWTypes : ( ( rule__NoNewlineVarWTypes__Alternatives ) ) ;
    public final void ruleNoNewlineVarWTypes() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1405:2: ( ( ( rule__NoNewlineVarWTypes__Alternatives ) ) )
            // InternalFortXTrans.g:1406:2: ( ( rule__NoNewlineVarWTypes__Alternatives ) )
            {
            // InternalFortXTrans.g:1406:2: ( ( rule__NoNewlineVarWTypes__Alternatives ) )
            // InternalFortXTrans.g:1407:3: ( rule__NoNewlineVarWTypes__Alternatives )
            {
             before(grammarAccess.getNoNewlineVarWTypesAccess().getAlternatives()); 
            // InternalFortXTrans.g:1408:3: ( rule__NoNewlineVarWTypes__Alternatives )
            // InternalFortXTrans.g:1408:4: rule__NoNewlineVarWTypes__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__NoNewlineVarWTypes__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getNoNewlineVarWTypesAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleNoNewlineVarWTypes"


    // $ANTLR start "entryRuleNoNewlineVarWType"
    // InternalFortXTrans.g:1417:1: entryRuleNoNewlineVarWType : ruleNoNewlineVarWType EOF ;
    public final void entryRuleNoNewlineVarWType() throws RecognitionException {
        try {
            // InternalFortXTrans.g:1418:1: ( ruleNoNewlineVarWType EOF )
            // InternalFortXTrans.g:1419:1: ruleNoNewlineVarWType EOF
            {
             before(grammarAccess.getNoNewlineVarWTypeRule()); 
            pushFollow(FOLLOW_1);
            ruleNoNewlineVarWType();

            state._fsp--;

             after(grammarAccess.getNoNewlineVarWTypeRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleNoNewlineVarWType"


    // $ANTLR start "ruleNoNewlineVarWType"
    // InternalFortXTrans.g:1426:1: ruleNoNewlineVarWType : ( ( rule__NoNewlineVarWType__Group__0 ) ) ;
    public final void ruleNoNewlineVarWType() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1430:2: ( ( ( rule__NoNewlineVarWType__Group__0 ) ) )
            // InternalFortXTrans.g:1431:2: ( ( rule__NoNewlineVarWType__Group__0 ) )
            {
            // InternalFortXTrans.g:1431:2: ( ( rule__NoNewlineVarWType__Group__0 ) )
            // InternalFortXTrans.g:1432:3: ( rule__NoNewlineVarWType__Group__0 )
            {
             before(grammarAccess.getNoNewlineVarWTypeAccess().getGroup()); 
            // InternalFortXTrans.g:1433:3: ( rule__NoNewlineVarWType__Group__0 )
            // InternalFortXTrans.g:1433:4: rule__NoNewlineVarWType__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__NoNewlineVarWType__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getNoNewlineVarWTypeAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleNoNewlineVarWType"


    // $ANTLR start "entryRuleLiteralTuple"
    // InternalFortXTrans.g:1442:1: entryRuleLiteralTuple : ruleLiteralTuple EOF ;
    public final void entryRuleLiteralTuple() throws RecognitionException {
        try {
            // InternalFortXTrans.g:1443:1: ( ruleLiteralTuple EOF )
            // InternalFortXTrans.g:1444:1: ruleLiteralTuple EOF
            {
             before(grammarAccess.getLiteralTupleRule()); 
            pushFollow(FOLLOW_1);
            ruleLiteralTuple();

            state._fsp--;

             after(grammarAccess.getLiteralTupleRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleLiteralTuple"


    // $ANTLR start "ruleLiteralTuple"
    // InternalFortXTrans.g:1451:1: ruleLiteralTuple : ( ( rule__LiteralTuple__Alternatives ) ) ;
    public final void ruleLiteralTuple() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1455:2: ( ( ( rule__LiteralTuple__Alternatives ) ) )
            // InternalFortXTrans.g:1456:2: ( ( rule__LiteralTuple__Alternatives ) )
            {
            // InternalFortXTrans.g:1456:2: ( ( rule__LiteralTuple__Alternatives ) )
            // InternalFortXTrans.g:1457:3: ( rule__LiteralTuple__Alternatives )
            {
             before(grammarAccess.getLiteralTupleAccess().getAlternatives()); 
            // InternalFortXTrans.g:1458:3: ( rule__LiteralTuple__Alternatives )
            // InternalFortXTrans.g:1458:4: rule__LiteralTuple__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__LiteralTuple__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getLiteralTupleAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleLiteralTuple"


    // $ANTLR start "entryRuleLiteralTup"
    // InternalFortXTrans.g:1467:1: entryRuleLiteralTup : ruleLiteralTup EOF ;
    public final void entryRuleLiteralTup() throws RecognitionException {
        try {
            // InternalFortXTrans.g:1468:1: ( ruleLiteralTup EOF )
            // InternalFortXTrans.g:1469:1: ruleLiteralTup EOF
            {
             before(grammarAccess.getLiteralTupRule()); 
            pushFollow(FOLLOW_1);
            ruleLiteralTup();

            state._fsp--;

             after(grammarAccess.getLiteralTupRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleLiteralTup"


    // $ANTLR start "ruleLiteralTup"
    // InternalFortXTrans.g:1476:1: ruleLiteralTup : ( ( rule__LiteralTup__Alternatives ) ) ;
    public final void ruleLiteralTup() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1480:2: ( ( ( rule__LiteralTup__Alternatives ) ) )
            // InternalFortXTrans.g:1481:2: ( ( rule__LiteralTup__Alternatives ) )
            {
            // InternalFortXTrans.g:1481:2: ( ( rule__LiteralTup__Alternatives ) )
            // InternalFortXTrans.g:1482:3: ( rule__LiteralTup__Alternatives )
            {
             before(grammarAccess.getLiteralTupAccess().getAlternatives()); 
            // InternalFortXTrans.g:1483:3: ( rule__LiteralTup__Alternatives )
            // InternalFortXTrans.g:1483:4: rule__LiteralTup__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__LiteralTup__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getLiteralTupAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleLiteralTup"


    // $ANTLR start "entryRuleLiteralList"
    // InternalFortXTrans.g:1492:1: entryRuleLiteralList : ruleLiteralList EOF ;
    public final void entryRuleLiteralList() throws RecognitionException {
        try {
            // InternalFortXTrans.g:1493:1: ( ruleLiteralList EOF )
            // InternalFortXTrans.g:1494:1: ruleLiteralList EOF
            {
             before(grammarAccess.getLiteralListRule()); 
            pushFollow(FOLLOW_1);
            ruleLiteralList();

            state._fsp--;

             after(grammarAccess.getLiteralListRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleLiteralList"


    // $ANTLR start "ruleLiteralList"
    // InternalFortXTrans.g:1501:1: ruleLiteralList : ( ( rule__LiteralList__Group__0 ) ) ;
    public final void ruleLiteralList() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1505:2: ( ( ( rule__LiteralList__Group__0 ) ) )
            // InternalFortXTrans.g:1506:2: ( ( rule__LiteralList__Group__0 ) )
            {
            // InternalFortXTrans.g:1506:2: ( ( rule__LiteralList__Group__0 ) )
            // InternalFortXTrans.g:1507:3: ( rule__LiteralList__Group__0 )
            {
             before(grammarAccess.getLiteralListAccess().getGroup()); 
            // InternalFortXTrans.g:1508:3: ( rule__LiteralList__Group__0 )
            // InternalFortXTrans.g:1508:4: rule__LiteralList__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__LiteralList__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getLiteralListAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleLiteralList"


    // $ANTLR start "entryRuleLiteral"
    // InternalFortXTrans.g:1517:1: entryRuleLiteral : ruleLiteral EOF ;
    public final void entryRuleLiteral() throws RecognitionException {
        try {
            // InternalFortXTrans.g:1518:1: ( ruleLiteral EOF )
            // InternalFortXTrans.g:1519:1: ruleLiteral EOF
            {
             before(grammarAccess.getLiteralRule()); 
            pushFollow(FOLLOW_1);
            ruleLiteral();

            state._fsp--;

             after(grammarAccess.getLiteralRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleLiteral"


    // $ANTLR start "ruleLiteral"
    // InternalFortXTrans.g:1526:1: ruleLiteral : ( ( rule__Literal__Alternatives ) ) ;
    public final void ruleLiteral() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1530:2: ( ( ( rule__Literal__Alternatives ) ) )
            // InternalFortXTrans.g:1531:2: ( ( rule__Literal__Alternatives ) )
            {
            // InternalFortXTrans.g:1531:2: ( ( rule__Literal__Alternatives ) )
            // InternalFortXTrans.g:1532:3: ( rule__Literal__Alternatives )
            {
             before(grammarAccess.getLiteralAccess().getAlternatives()); 
            // InternalFortXTrans.g:1533:3: ( rule__Literal__Alternatives )
            // InternalFortXTrans.g:1533:4: rule__Literal__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__Literal__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getLiteralAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleLiteral"


    // $ANTLR start "entryRuleLocalVarDecl"
    // InternalFortXTrans.g:1542:1: entryRuleLocalVarDecl : ruleLocalVarDecl EOF ;
    public final void entryRuleLocalVarDecl() throws RecognitionException {
        try {
            // InternalFortXTrans.g:1543:1: ( ruleLocalVarDecl EOF )
            // InternalFortXTrans.g:1544:1: ruleLocalVarDecl EOF
            {
             before(grammarAccess.getLocalVarDeclRule()); 
            pushFollow(FOLLOW_1);
            ruleLocalVarDecl();

            state._fsp--;

             after(grammarAccess.getLocalVarDeclRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleLocalVarDecl"


    // $ANTLR start "ruleLocalVarDecl"
    // InternalFortXTrans.g:1551:1: ruleLocalVarDecl : ( ( rule__LocalVarDecl__Alternatives ) ) ;
    public final void ruleLocalVarDecl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1555:2: ( ( ( rule__LocalVarDecl__Alternatives ) ) )
            // InternalFortXTrans.g:1556:2: ( ( rule__LocalVarDecl__Alternatives ) )
            {
            // InternalFortXTrans.g:1556:2: ( ( rule__LocalVarDecl__Alternatives ) )
            // InternalFortXTrans.g:1557:3: ( rule__LocalVarDecl__Alternatives )
            {
             before(grammarAccess.getLocalVarDeclAccess().getAlternatives()); 
            // InternalFortXTrans.g:1558:3: ( rule__LocalVarDecl__Alternatives )
            // InternalFortXTrans.g:1558:4: rule__LocalVarDecl__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__LocalVarDecl__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getLocalVarDeclAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleLocalVarDecl"


    // $ANTLR start "rule__Model__Alternatives"
    // InternalFortXTrans.g:1566:1: rule__Model__Alternatives : ( ( ruleComponent ) | ( ruleAPI ) );
    public final void rule__Model__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1570:1: ( ( ruleComponent ) | ( ruleAPI ) )
            int alt3=2;
            int LA3_0 = input.LA(1);

            if ( (LA3_0==25) ) {
                alt3=1;
            }
            else if ( (LA3_0==27) ) {
                alt3=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 3, 0, input);

                throw nvae;
            }
            switch (alt3) {
                case 1 :
                    // InternalFortXTrans.g:1571:2: ( ruleComponent )
                    {
                    // InternalFortXTrans.g:1571:2: ( ruleComponent )
                    // InternalFortXTrans.g:1572:3: ruleComponent
                    {
                     before(grammarAccess.getModelAccess().getComponentParserRuleCall_0()); 
                    pushFollow(FOLLOW_2);
                    ruleComponent();

                    state._fsp--;

                     after(grammarAccess.getModelAccess().getComponentParserRuleCall_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalFortXTrans.g:1577:2: ( ruleAPI )
                    {
                    // InternalFortXTrans.g:1577:2: ( ruleAPI )
                    // InternalFortXTrans.g:1578:3: ruleAPI
                    {
                     before(grammarAccess.getModelAccess().getAPIParserRuleCall_1()); 
                    pushFollow(FOLLOW_2);
                    ruleAPI();

                    state._fsp--;

                     after(grammarAccess.getModelAccess().getAPIParserRuleCall_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Model__Alternatives"


    // $ANTLR start "rule__Import__Alternatives"
    // InternalFortXTrans.g:1587:1: rule__Import__Alternatives : ( ( ( rule__Import__Group_0__0 ) ) | ( ( rule__Import__Group_1__0 ) ) );
    public final void rule__Import__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1591:1: ( ( ( rule__Import__Group_0__0 ) ) | ( ( rule__Import__Group_1__0 ) ) )
            int alt4=2;
            int LA4_0 = input.LA(1);

            if ( (LA4_0==59) ) {
                int LA4_1 = input.LA(2);

                if ( (LA4_1==RULE_ID) ) {
                    alt4=1;
                }
                else if ( (LA4_1==27) ) {
                    alt4=2;
                }
                else {
                    NoViableAltException nvae =
                        new NoViableAltException("", 4, 1, input);

                    throw nvae;
                }
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 4, 0, input);

                throw nvae;
            }
            switch (alt4) {
                case 1 :
                    // InternalFortXTrans.g:1592:2: ( ( rule__Import__Group_0__0 ) )
                    {
                    // InternalFortXTrans.g:1592:2: ( ( rule__Import__Group_0__0 ) )
                    // InternalFortXTrans.g:1593:3: ( rule__Import__Group_0__0 )
                    {
                     before(grammarAccess.getImportAccess().getGroup_0()); 
                    // InternalFortXTrans.g:1594:3: ( rule__Import__Group_0__0 )
                    // InternalFortXTrans.g:1594:4: rule__Import__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Import__Group_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getImportAccess().getGroup_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalFortXTrans.g:1598:2: ( ( rule__Import__Group_1__0 ) )
                    {
                    // InternalFortXTrans.g:1598:2: ( ( rule__Import__Group_1__0 ) )
                    // InternalFortXTrans.g:1599:3: ( rule__Import__Group_1__0 )
                    {
                     before(grammarAccess.getImportAccess().getGroup_1()); 
                    // InternalFortXTrans.g:1600:3: ( rule__Import__Group_1__0 )
                    // InternalFortXTrans.g:1600:4: rule__Import__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Import__Group_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getImportAccess().getGroup_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Import__Alternatives"


    // $ANTLR start "rule__Export__Alternatives"
    // InternalFortXTrans.g:1608:1: rule__Export__Alternatives : ( ( ( rule__Export__Group_0__0 ) ) | ( ( rule__Export__Group_1__0 ) ) );
    public final void rule__Export__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1612:1: ( ( ( rule__Export__Group_0__0 ) ) | ( ( rule__Export__Group_1__0 ) ) )
            int alt5=2;
            int LA5_0 = input.LA(1);

            if ( (LA5_0==60) ) {
                int LA5_1 = input.LA(2);

                if ( (LA5_1==RULE_ID) ) {
                    alt5=1;
                }
                else if ( (LA5_1==31) ) {
                    alt5=2;
                }
                else {
                    NoViableAltException nvae =
                        new NoViableAltException("", 5, 1, input);

                    throw nvae;
                }
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 5, 0, input);

                throw nvae;
            }
            switch (alt5) {
                case 1 :
                    // InternalFortXTrans.g:1613:2: ( ( rule__Export__Group_0__0 ) )
                    {
                    // InternalFortXTrans.g:1613:2: ( ( rule__Export__Group_0__0 ) )
                    // InternalFortXTrans.g:1614:3: ( rule__Export__Group_0__0 )
                    {
                     before(grammarAccess.getExportAccess().getGroup_0()); 
                    // InternalFortXTrans.g:1615:3: ( rule__Export__Group_0__0 )
                    // InternalFortXTrans.g:1615:4: rule__Export__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Export__Group_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getExportAccess().getGroup_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalFortXTrans.g:1619:2: ( ( rule__Export__Group_1__0 ) )
                    {
                    // InternalFortXTrans.g:1619:2: ( ( rule__Export__Group_1__0 ) )
                    // InternalFortXTrans.g:1620:3: ( rule__Export__Group_1__0 )
                    {
                     before(grammarAccess.getExportAccess().getGroup_1()); 
                    // InternalFortXTrans.g:1621:3: ( rule__Export__Group_1__0 )
                    // InternalFortXTrans.g:1621:4: rule__Export__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Export__Group_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getExportAccess().getGroup_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Export__Alternatives"


    // $ANTLR start "rule__ImportedNames__Alternatives"
    // InternalFortXTrans.g:1629:1: rule__ImportedNames__Alternatives : ( ( ( rule__ImportedNames__Group_0__0 ) ) | ( ( rule__ImportedNames__Group_1__0 ) ) | ( ( rule__ImportedNames__Group_2__0 ) ) );
    public final void rule__ImportedNames__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1633:1: ( ( ( rule__ImportedNames__Group_0__0 ) ) | ( ( rule__ImportedNames__Group_1__0 ) ) | ( ( rule__ImportedNames__Group_2__0 ) ) )
            int alt6=3;
            alt6 = dfa6.predict(input);
            switch (alt6) {
                case 1 :
                    // InternalFortXTrans.g:1634:2: ( ( rule__ImportedNames__Group_0__0 ) )
                    {
                    // InternalFortXTrans.g:1634:2: ( ( rule__ImportedNames__Group_0__0 ) )
                    // InternalFortXTrans.g:1635:3: ( rule__ImportedNames__Group_0__0 )
                    {
                     before(grammarAccess.getImportedNamesAccess().getGroup_0()); 
                    // InternalFortXTrans.g:1636:3: ( rule__ImportedNames__Group_0__0 )
                    // InternalFortXTrans.g:1636:4: rule__ImportedNames__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ImportedNames__Group_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getImportedNamesAccess().getGroup_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalFortXTrans.g:1640:2: ( ( rule__ImportedNames__Group_1__0 ) )
                    {
                    // InternalFortXTrans.g:1640:2: ( ( rule__ImportedNames__Group_1__0 ) )
                    // InternalFortXTrans.g:1641:3: ( rule__ImportedNames__Group_1__0 )
                    {
                     before(grammarAccess.getImportedNamesAccess().getGroup_1()); 
                    // InternalFortXTrans.g:1642:3: ( rule__ImportedNames__Group_1__0 )
                    // InternalFortXTrans.g:1642:4: rule__ImportedNames__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ImportedNames__Group_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getImportedNamesAccess().getGroup_1()); 

                    }


                    }
                    break;
                case 3 :
                    // InternalFortXTrans.g:1646:2: ( ( rule__ImportedNames__Group_2__0 ) )
                    {
                    // InternalFortXTrans.g:1646:2: ( ( rule__ImportedNames__Group_2__0 ) )
                    // InternalFortXTrans.g:1647:3: ( rule__ImportedNames__Group_2__0 )
                    {
                     before(grammarAccess.getImportedNamesAccess().getGroup_2()); 
                    // InternalFortXTrans.g:1648:3: ( rule__ImportedNames__Group_2__0 )
                    // InternalFortXTrans.g:1648:4: rule__ImportedNames__Group_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ImportedNames__Group_2__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getImportedNamesAccess().getGroup_2()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Alternatives"


    // $ANTLR start "rule__Qualified__Alternatives"
    // InternalFortXTrans.g:1656:1: rule__Qualified__Alternatives : ( ( ruleQualifiedName ) | ( ( rule__Qualified__Group_1__0 ) ) );
    public final void rule__Qualified__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1660:1: ( ( ruleQualifiedName ) | ( ( rule__Qualified__Group_1__0 ) ) )
            int alt7=2;
            int LA7_0 = input.LA(1);

            if ( (LA7_0==RULE_ID) ) {
                alt7=1;
            }
            else if ( (LA7_0==33) ) {
                alt7=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 7, 0, input);

                throw nvae;
            }
            switch (alt7) {
                case 1 :
                    // InternalFortXTrans.g:1661:2: ( ruleQualifiedName )
                    {
                    // InternalFortXTrans.g:1661:2: ( ruleQualifiedName )
                    // InternalFortXTrans.g:1662:3: ruleQualifiedName
                    {
                     before(grammarAccess.getQualifiedAccess().getQualifiedNameParserRuleCall_0()); 
                    pushFollow(FOLLOW_2);
                    ruleQualifiedName();

                    state._fsp--;

                     after(grammarAccess.getQualifiedAccess().getQualifiedNameParserRuleCall_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalFortXTrans.g:1667:2: ( ( rule__Qualified__Group_1__0 ) )
                    {
                    // InternalFortXTrans.g:1667:2: ( ( rule__Qualified__Group_1__0 ) )
                    // InternalFortXTrans.g:1668:3: ( rule__Qualified__Group_1__0 )
                    {
                     before(grammarAccess.getQualifiedAccess().getGroup_1()); 
                    // InternalFortXTrans.g:1669:3: ( rule__Qualified__Group_1__0 )
                    // InternalFortXTrans.g:1669:4: rule__Qualified__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Qualified__Group_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getQualifiedAccess().getGroup_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Qualified__Alternatives"


    // $ANTLR start "rule__SimpleNames__Alternatives"
    // InternalFortXTrans.g:1677:1: rule__SimpleNames__Alternatives : ( ( ( rule__SimpleNames__NameListAssignment_0 ) ) | ( ( rule__SimpleNames__Group_1__0 ) ) );
    public final void rule__SimpleNames__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1681:1: ( ( ( rule__SimpleNames__NameListAssignment_0 ) ) | ( ( rule__SimpleNames__Group_1__0 ) ) )
            int alt8=2;
            int LA8_0 = input.LA(1);

            if ( (LA8_0==RULE_ID) ) {
                alt8=1;
            }
            else if ( (LA8_0==31) ) {
                alt8=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 8, 0, input);

                throw nvae;
            }
            switch (alt8) {
                case 1 :
                    // InternalFortXTrans.g:1682:2: ( ( rule__SimpleNames__NameListAssignment_0 ) )
                    {
                    // InternalFortXTrans.g:1682:2: ( ( rule__SimpleNames__NameListAssignment_0 ) )
                    // InternalFortXTrans.g:1683:3: ( rule__SimpleNames__NameListAssignment_0 )
                    {
                     before(grammarAccess.getSimpleNamesAccess().getNameListAssignment_0()); 
                    // InternalFortXTrans.g:1684:3: ( rule__SimpleNames__NameListAssignment_0 )
                    // InternalFortXTrans.g:1684:4: rule__SimpleNames__NameListAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__SimpleNames__NameListAssignment_0();

                    state._fsp--;


                    }

                     after(grammarAccess.getSimpleNamesAccess().getNameListAssignment_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalFortXTrans.g:1688:2: ( ( rule__SimpleNames__Group_1__0 ) )
                    {
                    // InternalFortXTrans.g:1688:2: ( ( rule__SimpleNames__Group_1__0 ) )
                    // InternalFortXTrans.g:1689:3: ( rule__SimpleNames__Group_1__0 )
                    {
                     before(grammarAccess.getSimpleNamesAccess().getGroup_1()); 
                    // InternalFortXTrans.g:1690:3: ( rule__SimpleNames__Group_1__0 )
                    // InternalFortXTrans.g:1690:4: rule__SimpleNames__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__SimpleNames__Group_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getSimpleNamesAccess().getGroup_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleNames__Alternatives"


    // $ANTLR start "rule__AliasedAPINames__Alternatives"
    // InternalFortXTrans.g:1698:1: rule__AliasedAPINames__Alternatives : ( ( ( rule__AliasedAPINames__NameListAssignment_0 ) ) | ( ( rule__AliasedAPINames__Group_1__0 ) ) );
    public final void rule__AliasedAPINames__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1702:1: ( ( ( rule__AliasedAPINames__NameListAssignment_0 ) ) | ( ( rule__AliasedAPINames__Group_1__0 ) ) )
            int alt9=2;
            int LA9_0 = input.LA(1);

            if ( (LA9_0==RULE_ID) ) {
                alt9=1;
            }
            else if ( (LA9_0==31) ) {
                alt9=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 9, 0, input);

                throw nvae;
            }
            switch (alt9) {
                case 1 :
                    // InternalFortXTrans.g:1703:2: ( ( rule__AliasedAPINames__NameListAssignment_0 ) )
                    {
                    // InternalFortXTrans.g:1703:2: ( ( rule__AliasedAPINames__NameListAssignment_0 ) )
                    // InternalFortXTrans.g:1704:3: ( rule__AliasedAPINames__NameListAssignment_0 )
                    {
                     before(grammarAccess.getAliasedAPINamesAccess().getNameListAssignment_0()); 
                    // InternalFortXTrans.g:1705:3: ( rule__AliasedAPINames__NameListAssignment_0 )
                    // InternalFortXTrans.g:1705:4: rule__AliasedAPINames__NameListAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__AliasedAPINames__NameListAssignment_0();

                    state._fsp--;


                    }

                     after(grammarAccess.getAliasedAPINamesAccess().getNameListAssignment_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalFortXTrans.g:1709:2: ( ( rule__AliasedAPINames__Group_1__0 ) )
                    {
                    // InternalFortXTrans.g:1709:2: ( ( rule__AliasedAPINames__Group_1__0 ) )
                    // InternalFortXTrans.g:1710:3: ( rule__AliasedAPINames__Group_1__0 )
                    {
                     before(grammarAccess.getAliasedAPINamesAccess().getGroup_1()); 
                    // InternalFortXTrans.g:1711:3: ( rule__AliasedAPINames__Group_1__0 )
                    // InternalFortXTrans.g:1711:4: rule__AliasedAPINames__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__AliasedAPINames__Group_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getAliasedAPINamesAccess().getGroup_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedAPINames__Alternatives"


    // $ANTLR start "rule__Decl__Alternatives"
    // InternalFortXTrans.g:1719:1: rule__Decl__Alternatives : ( ( ( rule__Decl__FunctionAssignment_0 ) ) | ( ( rule__Decl__FieldAssignment_1 ) ) );
    public final void rule__Decl__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1723:1: ( ( ( rule__Decl__FunctionAssignment_0 ) ) | ( ( rule__Decl__FieldAssignment_1 ) ) )
            int alt10=2;
            switch ( input.LA(1) ) {
            case 62:
                {
                switch ( input.LA(2) ) {
                case RULE_ID:
                    {
                    int LA10_3 = input.LA(3);

                    if ( (LA10_3==RULE_ID||LA10_3==33) ) {
                        alt10=1;
                    }
                    else if ( (LA10_3==RULE_DOTS||LA10_3==30||LA10_3==35||LA10_3==58) ) {
                        alt10=2;
                    }
                    else {
                        NoViableAltException nvae =
                            new NoViableAltException("", 10, 3, input);

                        throw nvae;
                    }
                    }
                    break;
                case 33:
                case 73:
                    {
                    alt10=2;
                    }
                    break;
                case 62:
                case 63:
                case 64:
                case 65:
                    {
                    alt10=1;
                    }
                    break;
                default:
                    NoViableAltException nvae =
                        new NoViableAltException("", 10, 1, input);

                    throw nvae;
                }

                }
                break;
            case 63:
            case 64:
            case 65:
                {
                alt10=1;
                }
                break;
            case RULE_ID:
                {
                int LA10_3 = input.LA(2);

                if ( (LA10_3==RULE_ID||LA10_3==33) ) {
                    alt10=1;
                }
                else if ( (LA10_3==RULE_DOTS||LA10_3==30||LA10_3==35||LA10_3==58) ) {
                    alt10=2;
                }
                else {
                    NoViableAltException nvae =
                        new NoViableAltException("", 10, 3, input);

                    throw nvae;
                }
                }
                break;
            case 33:
            case 73:
                {
                alt10=2;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 10, 0, input);

                throw nvae;
            }

            switch (alt10) {
                case 1 :
                    // InternalFortXTrans.g:1724:2: ( ( rule__Decl__FunctionAssignment_0 ) )
                    {
                    // InternalFortXTrans.g:1724:2: ( ( rule__Decl__FunctionAssignment_0 ) )
                    // InternalFortXTrans.g:1725:3: ( rule__Decl__FunctionAssignment_0 )
                    {
                     before(grammarAccess.getDeclAccess().getFunctionAssignment_0()); 
                    // InternalFortXTrans.g:1726:3: ( rule__Decl__FunctionAssignment_0 )
                    // InternalFortXTrans.g:1726:4: rule__Decl__FunctionAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Decl__FunctionAssignment_0();

                    state._fsp--;


                    }

                     after(grammarAccess.getDeclAccess().getFunctionAssignment_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalFortXTrans.g:1730:2: ( ( rule__Decl__FieldAssignment_1 ) )
                    {
                    // InternalFortXTrans.g:1730:2: ( ( rule__Decl__FieldAssignment_1 ) )
                    // InternalFortXTrans.g:1731:3: ( rule__Decl__FieldAssignment_1 )
                    {
                     before(grammarAccess.getDeclAccess().getFieldAssignment_1()); 
                    // InternalFortXTrans.g:1732:3: ( rule__Decl__FieldAssignment_1 )
                    // InternalFortXTrans.g:1732:4: rule__Decl__FieldAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__Decl__FieldAssignment_1();

                    state._fsp--;


                    }

                     after(grammarAccess.getDeclAccess().getFieldAssignment_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Decl__Alternatives"


    // $ANTLR start "rule__ValParam__Alternatives"
    // InternalFortXTrans.g:1740:1: rule__ValParam__Alternatives : ( ( ( rule__ValParam__ParamsAssignment_0 ) ) | ( ( rule__ValParam__Group_1__0 ) ) );
    public final void rule__ValParam__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1744:1: ( ( ( rule__ValParam__ParamsAssignment_0 ) ) | ( ( rule__ValParam__Group_1__0 ) ) )
            int alt11=2;
            int LA11_0 = input.LA(1);

            if ( (LA11_0==RULE_ID) ) {
                alt11=1;
            }
            else if ( (LA11_0==33) ) {
                alt11=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 11, 0, input);

                throw nvae;
            }
            switch (alt11) {
                case 1 :
                    // InternalFortXTrans.g:1745:2: ( ( rule__ValParam__ParamsAssignment_0 ) )
                    {
                    // InternalFortXTrans.g:1745:2: ( ( rule__ValParam__ParamsAssignment_0 ) )
                    // InternalFortXTrans.g:1746:3: ( rule__ValParam__ParamsAssignment_0 )
                    {
                     before(grammarAccess.getValParamAccess().getParamsAssignment_0()); 
                    // InternalFortXTrans.g:1747:3: ( rule__ValParam__ParamsAssignment_0 )
                    // InternalFortXTrans.g:1747:4: rule__ValParam__ParamsAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ValParam__ParamsAssignment_0();

                    state._fsp--;


                    }

                     after(grammarAccess.getValParamAccess().getParamsAssignment_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalFortXTrans.g:1751:2: ( ( rule__ValParam__Group_1__0 ) )
                    {
                    // InternalFortXTrans.g:1751:2: ( ( rule__ValParam__Group_1__0 ) )
                    // InternalFortXTrans.g:1752:3: ( rule__ValParam__Group_1__0 )
                    {
                     before(grammarAccess.getValParamAccess().getGroup_1()); 
                    // InternalFortXTrans.g:1753:3: ( rule__ValParam__Group_1__0 )
                    // InternalFortXTrans.g:1753:4: rule__ValParam__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ValParam__Group_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getValParamAccess().getGroup_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValParam__Alternatives"


    // $ANTLR start "rule__RetType__Alternatives"
    // InternalFortXTrans.g:1761:1: rule__RetType__Alternatives : ( ( ( rule__RetType__Group_0__0 ) ) | ( ( rule__RetType__Group_1__0 ) ) );
    public final void rule__RetType__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1765:1: ( ( ( rule__RetType__Group_0__0 ) ) | ( ( rule__RetType__Group_1__0 ) ) )
            int alt12=2;
            int LA12_0 = input.LA(1);

            if ( (LA12_0==35) ) {
                int LA12_1 = input.LA(2);

                if ( (LA12_1==33) ) {
                    alt12=1;
                }
                else if ( (LA12_1==RULE_ID) ) {
                    alt12=2;
                }
                else {
                    NoViableAltException nvae =
                        new NoViableAltException("", 12, 1, input);

                    throw nvae;
                }
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 12, 0, input);

                throw nvae;
            }
            switch (alt12) {
                case 1 :
                    // InternalFortXTrans.g:1766:2: ( ( rule__RetType__Group_0__0 ) )
                    {
                    // InternalFortXTrans.g:1766:2: ( ( rule__RetType__Group_0__0 ) )
                    // InternalFortXTrans.g:1767:3: ( rule__RetType__Group_0__0 )
                    {
                     before(grammarAccess.getRetTypeAccess().getGroup_0()); 
                    // InternalFortXTrans.g:1768:3: ( rule__RetType__Group_0__0 )
                    // InternalFortXTrans.g:1768:4: rule__RetType__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__RetType__Group_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getRetTypeAccess().getGroup_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalFortXTrans.g:1772:2: ( ( rule__RetType__Group_1__0 ) )
                    {
                    // InternalFortXTrans.g:1772:2: ( ( rule__RetType__Group_1__0 ) )
                    // InternalFortXTrans.g:1773:3: ( rule__RetType__Group_1__0 )
                    {
                     before(grammarAccess.getRetTypeAccess().getGroup_1()); 
                    // InternalFortXTrans.g:1774:3: ( rule__RetType__Group_1__0 )
                    // InternalFortXTrans.g:1774:4: rule__RetType__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__RetType__Group_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getRetTypeAccess().getGroup_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RetType__Alternatives"


    // $ANTLR start "rule__FnMod__Alternatives"
    // InternalFortXTrans.g:1782:1: rule__FnMod__Alternatives : ( ( ( rule__FnMod__ModtypeAssignment_0 ) ) | ( ( rule__FnMod__ModtypeAssignment_1 ) ) | ( ( rule__FnMod__ModtypeAssignment_2 ) ) | ( ( rule__FnMod__ModtypeAssignment_3 ) ) );
    public final void rule__FnMod__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1786:1: ( ( ( rule__FnMod__ModtypeAssignment_0 ) ) | ( ( rule__FnMod__ModtypeAssignment_1 ) ) | ( ( rule__FnMod__ModtypeAssignment_2 ) ) | ( ( rule__FnMod__ModtypeAssignment_3 ) ) )
            int alt13=4;
            switch ( input.LA(1) ) {
            case 62:
                {
                alt13=1;
                }
                break;
            case 63:
                {
                alt13=2;
                }
                break;
            case 64:
                {
                alt13=3;
                }
                break;
            case 65:
                {
                alt13=4;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 13, 0, input);

                throw nvae;
            }

            switch (alt13) {
                case 1 :
                    // InternalFortXTrans.g:1787:2: ( ( rule__FnMod__ModtypeAssignment_0 ) )
                    {
                    // InternalFortXTrans.g:1787:2: ( ( rule__FnMod__ModtypeAssignment_0 ) )
                    // InternalFortXTrans.g:1788:3: ( rule__FnMod__ModtypeAssignment_0 )
                    {
                     before(grammarAccess.getFnModAccess().getModtypeAssignment_0()); 
                    // InternalFortXTrans.g:1789:3: ( rule__FnMod__ModtypeAssignment_0 )
                    // InternalFortXTrans.g:1789:4: rule__FnMod__ModtypeAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__FnMod__ModtypeAssignment_0();

                    state._fsp--;


                    }

                     after(grammarAccess.getFnModAccess().getModtypeAssignment_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalFortXTrans.g:1793:2: ( ( rule__FnMod__ModtypeAssignment_1 ) )
                    {
                    // InternalFortXTrans.g:1793:2: ( ( rule__FnMod__ModtypeAssignment_1 ) )
                    // InternalFortXTrans.g:1794:3: ( rule__FnMod__ModtypeAssignment_1 )
                    {
                     before(grammarAccess.getFnModAccess().getModtypeAssignment_1()); 
                    // InternalFortXTrans.g:1795:3: ( rule__FnMod__ModtypeAssignment_1 )
                    // InternalFortXTrans.g:1795:4: rule__FnMod__ModtypeAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__FnMod__ModtypeAssignment_1();

                    state._fsp--;


                    }

                     after(grammarAccess.getFnModAccess().getModtypeAssignment_1()); 

                    }


                    }
                    break;
                case 3 :
                    // InternalFortXTrans.g:1799:2: ( ( rule__FnMod__ModtypeAssignment_2 ) )
                    {
                    // InternalFortXTrans.g:1799:2: ( ( rule__FnMod__ModtypeAssignment_2 ) )
                    // InternalFortXTrans.g:1800:3: ( rule__FnMod__ModtypeAssignment_2 )
                    {
                     before(grammarAccess.getFnModAccess().getModtypeAssignment_2()); 
                    // InternalFortXTrans.g:1801:3: ( rule__FnMod__ModtypeAssignment_2 )
                    // InternalFortXTrans.g:1801:4: rule__FnMod__ModtypeAssignment_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__FnMod__ModtypeAssignment_2();

                    state._fsp--;


                    }

                     after(grammarAccess.getFnModAccess().getModtypeAssignment_2()); 

                    }


                    }
                    break;
                case 4 :
                    // InternalFortXTrans.g:1805:2: ( ( rule__FnMod__ModtypeAssignment_3 ) )
                    {
                    // InternalFortXTrans.g:1805:2: ( ( rule__FnMod__ModtypeAssignment_3 ) )
                    // InternalFortXTrans.g:1806:3: ( rule__FnMod__ModtypeAssignment_3 )
                    {
                     before(grammarAccess.getFnModAccess().getModtypeAssignment_3()); 
                    // InternalFortXTrans.g:1807:3: ( rule__FnMod__ModtypeAssignment_3 )
                    // InternalFortXTrans.g:1807:4: rule__FnMod__ModtypeAssignment_3
                    {
                    pushFollow(FOLLOW_2);
                    rule__FnMod__ModtypeAssignment_3();

                    state._fsp--;


                    }

                     after(grammarAccess.getFnModAccess().getModtypeAssignment_3()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FnMod__Alternatives"


    // $ANTLR start "rule__Stmnts__Alternatives"
    // InternalFortXTrans.g:1815:1: rule__Stmnts__Alternatives : ( ( ( rule__Stmnts__FrontAssignment_0 ) ) | ( ( rule__Stmnts__Group_1__0 ) ) | ( ( rule__Stmnts__LocVarAssignment_2 ) ) | ( ( rule__Stmnts__ExpAssignment_3 ) ) );
    public final void rule__Stmnts__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1819:1: ( ( ( rule__Stmnts__FrontAssignment_0 ) ) | ( ( rule__Stmnts__Group_1__0 ) ) | ( ( rule__Stmnts__LocVarAssignment_2 ) ) | ( ( rule__Stmnts__ExpAssignment_3 ) ) )
            int alt14=4;
            alt14 = dfa14.predict(input);
            switch (alt14) {
                case 1 :
                    // InternalFortXTrans.g:1820:2: ( ( rule__Stmnts__FrontAssignment_0 ) )
                    {
                    // InternalFortXTrans.g:1820:2: ( ( rule__Stmnts__FrontAssignment_0 ) )
                    // InternalFortXTrans.g:1821:3: ( rule__Stmnts__FrontAssignment_0 )
                    {
                     before(grammarAccess.getStmntsAccess().getFrontAssignment_0()); 
                    // InternalFortXTrans.g:1822:3: ( rule__Stmnts__FrontAssignment_0 )
                    // InternalFortXTrans.g:1822:4: rule__Stmnts__FrontAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Stmnts__FrontAssignment_0();

                    state._fsp--;


                    }

                     after(grammarAccess.getStmntsAccess().getFrontAssignment_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalFortXTrans.g:1826:2: ( ( rule__Stmnts__Group_1__0 ) )
                    {
                    // InternalFortXTrans.g:1826:2: ( ( rule__Stmnts__Group_1__0 ) )
                    // InternalFortXTrans.g:1827:3: ( rule__Stmnts__Group_1__0 )
                    {
                     before(grammarAccess.getStmntsAccess().getGroup_1()); 
                    // InternalFortXTrans.g:1828:3: ( rule__Stmnts__Group_1__0 )
                    // InternalFortXTrans.g:1828:4: rule__Stmnts__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Stmnts__Group_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getStmntsAccess().getGroup_1()); 

                    }


                    }
                    break;
                case 3 :
                    // InternalFortXTrans.g:1832:2: ( ( rule__Stmnts__LocVarAssignment_2 ) )
                    {
                    // InternalFortXTrans.g:1832:2: ( ( rule__Stmnts__LocVarAssignment_2 ) )
                    // InternalFortXTrans.g:1833:3: ( rule__Stmnts__LocVarAssignment_2 )
                    {
                     before(grammarAccess.getStmntsAccess().getLocVarAssignment_2()); 
                    // InternalFortXTrans.g:1834:3: ( rule__Stmnts__LocVarAssignment_2 )
                    // InternalFortXTrans.g:1834:4: rule__Stmnts__LocVarAssignment_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__Stmnts__LocVarAssignment_2();

                    state._fsp--;


                    }

                     after(grammarAccess.getStmntsAccess().getLocVarAssignment_2()); 

                    }


                    }
                    break;
                case 4 :
                    // InternalFortXTrans.g:1838:2: ( ( rule__Stmnts__ExpAssignment_3 ) )
                    {
                    // InternalFortXTrans.g:1838:2: ( ( rule__Stmnts__ExpAssignment_3 ) )
                    // InternalFortXTrans.g:1839:3: ( rule__Stmnts__ExpAssignment_3 )
                    {
                     before(grammarAccess.getStmntsAccess().getExpAssignment_3()); 
                    // InternalFortXTrans.g:1840:3: ( rule__Stmnts__ExpAssignment_3 )
                    // InternalFortXTrans.g:1840:4: rule__Stmnts__ExpAssignment_3
                    {
                    pushFollow(FOLLOW_2);
                    rule__Stmnts__ExpAssignment_3();

                    state._fsp--;


                    }

                     after(grammarAccess.getStmntsAccess().getExpAssignment_3()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Stmnts__Alternatives"


    // $ANTLR start "rule__Equality__OpAlternatives_1_1_0"
    // InternalFortXTrans.g:1848:1: rule__Equality__OpAlternatives_1_1_0 : ( ( '===' ) | ( '=/=' ) | ( 'EQ' ) | ( 'NE' ) );
    public final void rule__Equality__OpAlternatives_1_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1852:1: ( ( '===' ) | ( '=/=' ) | ( 'EQ' ) | ( 'NE' ) )
            int alt15=4;
            switch ( input.LA(1) ) {
            case 13:
                {
                alt15=1;
                }
                break;
            case 14:
                {
                alt15=2;
                }
                break;
            case 15:
                {
                alt15=3;
                }
                break;
            case 16:
                {
                alt15=4;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 15, 0, input);

                throw nvae;
            }

            switch (alt15) {
                case 1 :
                    // InternalFortXTrans.g:1853:2: ( '===' )
                    {
                    // InternalFortXTrans.g:1853:2: ( '===' )
                    // InternalFortXTrans.g:1854:3: '==='
                    {
                     before(grammarAccess.getEqualityAccess().getOpEqualsSignEqualsSignEqualsSignKeyword_1_1_0_0()); 
                    match(input,13,FOLLOW_2); 
                     after(grammarAccess.getEqualityAccess().getOpEqualsSignEqualsSignEqualsSignKeyword_1_1_0_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalFortXTrans.g:1859:2: ( '=/=' )
                    {
                    // InternalFortXTrans.g:1859:2: ( '=/=' )
                    // InternalFortXTrans.g:1860:3: '=/='
                    {
                     before(grammarAccess.getEqualityAccess().getOpEqualsSignSolidusEqualsSignKeyword_1_1_0_1()); 
                    match(input,14,FOLLOW_2); 
                     after(grammarAccess.getEqualityAccess().getOpEqualsSignSolidusEqualsSignKeyword_1_1_0_1()); 

                    }


                    }
                    break;
                case 3 :
                    // InternalFortXTrans.g:1865:2: ( 'EQ' )
                    {
                    // InternalFortXTrans.g:1865:2: ( 'EQ' )
                    // InternalFortXTrans.g:1866:3: 'EQ'
                    {
                     before(grammarAccess.getEqualityAccess().getOpEQKeyword_1_1_0_2()); 
                    match(input,15,FOLLOW_2); 
                     after(grammarAccess.getEqualityAccess().getOpEQKeyword_1_1_0_2()); 

                    }


                    }
                    break;
                case 4 :
                    // InternalFortXTrans.g:1871:2: ( 'NE' )
                    {
                    // InternalFortXTrans.g:1871:2: ( 'NE' )
                    // InternalFortXTrans.g:1872:3: 'NE'
                    {
                     before(grammarAccess.getEqualityAccess().getOpNEKeyword_1_1_0_3()); 
                    match(input,16,FOLLOW_2); 
                     after(grammarAccess.getEqualityAccess().getOpNEKeyword_1_1_0_3()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equality__OpAlternatives_1_1_0"


    // $ANTLR start "rule__Comparison__OpAlternatives_1_1_0"
    // InternalFortXTrans.g:1881:1: rule__Comparison__OpAlternatives_1_1_0 : ( ( '>=' ) | ( '<=' ) | ( '>' ) | ( '<' ) | ( 'LT' ) | ( 'GT' ) | ( 'LE' ) | ( 'GE' ) );
    public final void rule__Comparison__OpAlternatives_1_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1885:1: ( ( '>=' ) | ( '<=' ) | ( '>' ) | ( '<' ) | ( 'LT' ) | ( 'GT' ) | ( 'LE' ) | ( 'GE' ) )
            int alt16=8;
            switch ( input.LA(1) ) {
            case 17:
                {
                alt16=1;
                }
                break;
            case 18:
                {
                alt16=2;
                }
                break;
            case 19:
                {
                alt16=3;
                }
                break;
            case 20:
                {
                alt16=4;
                }
                break;
            case 21:
                {
                alt16=5;
                }
                break;
            case 22:
                {
                alt16=6;
                }
                break;
            case 23:
                {
                alt16=7;
                }
                break;
            case 24:
                {
                alt16=8;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 16, 0, input);

                throw nvae;
            }

            switch (alt16) {
                case 1 :
                    // InternalFortXTrans.g:1886:2: ( '>=' )
                    {
                    // InternalFortXTrans.g:1886:2: ( '>=' )
                    // InternalFortXTrans.g:1887:3: '>='
                    {
                     before(grammarAccess.getComparisonAccess().getOpGreaterThanSignEqualsSignKeyword_1_1_0_0()); 
                    match(input,17,FOLLOW_2); 
                     after(grammarAccess.getComparisonAccess().getOpGreaterThanSignEqualsSignKeyword_1_1_0_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalFortXTrans.g:1892:2: ( '<=' )
                    {
                    // InternalFortXTrans.g:1892:2: ( '<=' )
                    // InternalFortXTrans.g:1893:3: '<='
                    {
                     before(grammarAccess.getComparisonAccess().getOpLessThanSignEqualsSignKeyword_1_1_0_1()); 
                    match(input,18,FOLLOW_2); 
                     after(grammarAccess.getComparisonAccess().getOpLessThanSignEqualsSignKeyword_1_1_0_1()); 

                    }


                    }
                    break;
                case 3 :
                    // InternalFortXTrans.g:1898:2: ( '>' )
                    {
                    // InternalFortXTrans.g:1898:2: ( '>' )
                    // InternalFortXTrans.g:1899:3: '>'
                    {
                     before(grammarAccess.getComparisonAccess().getOpGreaterThanSignKeyword_1_1_0_2()); 
                    match(input,19,FOLLOW_2); 
                     after(grammarAccess.getComparisonAccess().getOpGreaterThanSignKeyword_1_1_0_2()); 

                    }


                    }
                    break;
                case 4 :
                    // InternalFortXTrans.g:1904:2: ( '<' )
                    {
                    // InternalFortXTrans.g:1904:2: ( '<' )
                    // InternalFortXTrans.g:1905:3: '<'
                    {
                     before(grammarAccess.getComparisonAccess().getOpLessThanSignKeyword_1_1_0_3()); 
                    match(input,20,FOLLOW_2); 
                     after(grammarAccess.getComparisonAccess().getOpLessThanSignKeyword_1_1_0_3()); 

                    }


                    }
                    break;
                case 5 :
                    // InternalFortXTrans.g:1910:2: ( 'LT' )
                    {
                    // InternalFortXTrans.g:1910:2: ( 'LT' )
                    // InternalFortXTrans.g:1911:3: 'LT'
                    {
                     before(grammarAccess.getComparisonAccess().getOpLTKeyword_1_1_0_4()); 
                    match(input,21,FOLLOW_2); 
                     after(grammarAccess.getComparisonAccess().getOpLTKeyword_1_1_0_4()); 

                    }


                    }
                    break;
                case 6 :
                    // InternalFortXTrans.g:1916:2: ( 'GT' )
                    {
                    // InternalFortXTrans.g:1916:2: ( 'GT' )
                    // InternalFortXTrans.g:1917:3: 'GT'
                    {
                     before(grammarAccess.getComparisonAccess().getOpGTKeyword_1_1_0_5()); 
                    match(input,22,FOLLOW_2); 
                     after(grammarAccess.getComparisonAccess().getOpGTKeyword_1_1_0_5()); 

                    }


                    }
                    break;
                case 7 :
                    // InternalFortXTrans.g:1922:2: ( 'LE' )
                    {
                    // InternalFortXTrans.g:1922:2: ( 'LE' )
                    // InternalFortXTrans.g:1923:3: 'LE'
                    {
                     before(grammarAccess.getComparisonAccess().getOpLEKeyword_1_1_0_6()); 
                    match(input,23,FOLLOW_2); 
                     after(grammarAccess.getComparisonAccess().getOpLEKeyword_1_1_0_6()); 

                    }


                    }
                    break;
                case 8 :
                    // InternalFortXTrans.g:1928:2: ( 'GE' )
                    {
                    // InternalFortXTrans.g:1928:2: ( 'GE' )
                    // InternalFortXTrans.g:1929:3: 'GE'
                    {
                     before(grammarAccess.getComparisonAccess().getOpGEKeyword_1_1_0_7()); 
                    match(input,24,FOLLOW_2); 
                     after(grammarAccess.getComparisonAccess().getOpGEKeyword_1_1_0_7()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__OpAlternatives_1_1_0"


    // $ANTLR start "rule__Primary__Alternatives"
    // InternalFortXTrans.g:1938:1: rule__Primary__Alternatives : ( ( ( rule__Primary__Group_0__0 ) ) | ( ( rule__Primary__Group_1__0 ) ) | ( ( rule__Primary__Group_2__0 ) ) | ( ( rule__Primary__Group_3__0 ) ) );
    public final void rule__Primary__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1942:1: ( ( ( rule__Primary__Group_0__0 ) ) | ( ( rule__Primary__Group_1__0 ) ) | ( ( rule__Primary__Group_2__0 ) ) | ( ( rule__Primary__Group_3__0 ) ) )
            int alt17=4;
            alt17 = dfa17.predict(input);
            switch (alt17) {
                case 1 :
                    // InternalFortXTrans.g:1943:2: ( ( rule__Primary__Group_0__0 ) )
                    {
                    // InternalFortXTrans.g:1943:2: ( ( rule__Primary__Group_0__0 ) )
                    // InternalFortXTrans.g:1944:3: ( rule__Primary__Group_0__0 )
                    {
                     before(grammarAccess.getPrimaryAccess().getGroup_0()); 
                    // InternalFortXTrans.g:1945:3: ( rule__Primary__Group_0__0 )
                    // InternalFortXTrans.g:1945:4: rule__Primary__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Primary__Group_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getPrimaryAccess().getGroup_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalFortXTrans.g:1949:2: ( ( rule__Primary__Group_1__0 ) )
                    {
                    // InternalFortXTrans.g:1949:2: ( ( rule__Primary__Group_1__0 ) )
                    // InternalFortXTrans.g:1950:3: ( rule__Primary__Group_1__0 )
                    {
                     before(grammarAccess.getPrimaryAccess().getGroup_1()); 
                    // InternalFortXTrans.g:1951:3: ( rule__Primary__Group_1__0 )
                    // InternalFortXTrans.g:1951:4: rule__Primary__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Primary__Group_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getPrimaryAccess().getGroup_1()); 

                    }


                    }
                    break;
                case 3 :
                    // InternalFortXTrans.g:1955:2: ( ( rule__Primary__Group_2__0 ) )
                    {
                    // InternalFortXTrans.g:1955:2: ( ( rule__Primary__Group_2__0 ) )
                    // InternalFortXTrans.g:1956:3: ( rule__Primary__Group_2__0 )
                    {
                     before(grammarAccess.getPrimaryAccess().getGroup_2()); 
                    // InternalFortXTrans.g:1957:3: ( rule__Primary__Group_2__0 )
                    // InternalFortXTrans.g:1957:4: rule__Primary__Group_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Primary__Group_2__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getPrimaryAccess().getGroup_2()); 

                    }


                    }
                    break;
                case 4 :
                    // InternalFortXTrans.g:1961:2: ( ( rule__Primary__Group_3__0 ) )
                    {
                    // InternalFortXTrans.g:1961:2: ( ( rule__Primary__Group_3__0 ) )
                    // InternalFortXTrans.g:1962:3: ( rule__Primary__Group_3__0 )
                    {
                     before(grammarAccess.getPrimaryAccess().getGroup_3()); 
                    // InternalFortXTrans.g:1963:3: ( rule__Primary__Group_3__0 )
                    // InternalFortXTrans.g:1963:4: rule__Primary__Group_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Primary__Group_3__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getPrimaryAccess().getGroup_3()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Alternatives"


    // $ANTLR start "rule__Primary__Alternatives_0_3_7"
    // InternalFortXTrans.g:1971:1: rule__Primary__Alternatives_0_3_7 : ( ( ( rule__Primary__Group_0_3_7_0__0 ) ) | ( ( rule__Primary__LitAssignment_0_3_7_1 ) ) );
    public final void rule__Primary__Alternatives_0_3_7() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1975:1: ( ( ( rule__Primary__Group_0_3_7_0__0 ) ) | ( ( rule__Primary__LitAssignment_0_3_7_1 ) ) )
            int alt18=2;
            int LA18_0 = input.LA(1);

            if ( (LA18_0==45) ) {
                alt18=1;
            }
            else if ( ((LA18_0>=RULE_ID && LA18_0<=RULE_STRING)||LA18_0==33||(LA18_0>=74 && LA18_0<=75)) ) {
                alt18=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 18, 0, input);

                throw nvae;
            }
            switch (alt18) {
                case 1 :
                    // InternalFortXTrans.g:1976:2: ( ( rule__Primary__Group_0_3_7_0__0 ) )
                    {
                    // InternalFortXTrans.g:1976:2: ( ( rule__Primary__Group_0_3_7_0__0 ) )
                    // InternalFortXTrans.g:1977:3: ( rule__Primary__Group_0_3_7_0__0 )
                    {
                     before(grammarAccess.getPrimaryAccess().getGroup_0_3_7_0()); 
                    // InternalFortXTrans.g:1978:3: ( rule__Primary__Group_0_3_7_0__0 )
                    // InternalFortXTrans.g:1978:4: rule__Primary__Group_0_3_7_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Primary__Group_0_3_7_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getPrimaryAccess().getGroup_0_3_7_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalFortXTrans.g:1982:2: ( ( rule__Primary__LitAssignment_0_3_7_1 ) )
                    {
                    // InternalFortXTrans.g:1982:2: ( ( rule__Primary__LitAssignment_0_3_7_1 ) )
                    // InternalFortXTrans.g:1983:3: ( rule__Primary__LitAssignment_0_3_7_1 )
                    {
                     before(grammarAccess.getPrimaryAccess().getLitAssignment_0_3_7_1()); 
                    // InternalFortXTrans.g:1984:3: ( rule__Primary__LitAssignment_0_3_7_1 )
                    // InternalFortXTrans.g:1984:4: rule__Primary__LitAssignment_0_3_7_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__Primary__LitAssignment_0_3_7_1();

                    state._fsp--;


                    }

                     after(grammarAccess.getPrimaryAccess().getLitAssignment_0_3_7_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Alternatives_0_3_7"


    // $ANTLR start "rule__DelimitedExpr__Alternatives"
    // InternalFortXTrans.g:1992:1: rule__DelimitedExpr__Alternatives : ( ( ( rule__DelimitedExpr__DodAssignment_0 ) ) | ( ( rule__DelimitedExpr__Group_1__0 ) ) | ( ( rule__DelimitedExpr__Group_2__0 ) ) | ( ( rule__DelimitedExpr__Group_3__0 ) ) | ( ( rule__DelimitedExpr__Group_4__0 ) ) );
    public final void rule__DelimitedExpr__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1996:1: ( ( ( rule__DelimitedExpr__DodAssignment_0 ) ) | ( ( rule__DelimitedExpr__Group_1__0 ) ) | ( ( rule__DelimitedExpr__Group_2__0 ) ) | ( ( rule__DelimitedExpr__Group_3__0 ) ) | ( ( rule__DelimitedExpr__Group_4__0 ) ) )
            int alt19=5;
            switch ( input.LA(1) ) {
            case 57:
            case 64:
            case 72:
                {
                alt19=1;
                }
                break;
            case 67:
                {
                alt19=2;
                }
                break;
            case 68:
                {
                alt19=3;
                }
                break;
            case 69:
                {
                alt19=4;
                }
                break;
            case 70:
                {
                alt19=5;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 19, 0, input);

                throw nvae;
            }

            switch (alt19) {
                case 1 :
                    // InternalFortXTrans.g:1997:2: ( ( rule__DelimitedExpr__DodAssignment_0 ) )
                    {
                    // InternalFortXTrans.g:1997:2: ( ( rule__DelimitedExpr__DodAssignment_0 ) )
                    // InternalFortXTrans.g:1998:3: ( rule__DelimitedExpr__DodAssignment_0 )
                    {
                     before(grammarAccess.getDelimitedExprAccess().getDodAssignment_0()); 
                    // InternalFortXTrans.g:1999:3: ( rule__DelimitedExpr__DodAssignment_0 )
                    // InternalFortXTrans.g:1999:4: rule__DelimitedExpr__DodAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__DelimitedExpr__DodAssignment_0();

                    state._fsp--;


                    }

                     after(grammarAccess.getDelimitedExprAccess().getDodAssignment_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalFortXTrans.g:2003:2: ( ( rule__DelimitedExpr__Group_1__0 ) )
                    {
                    // InternalFortXTrans.g:2003:2: ( ( rule__DelimitedExpr__Group_1__0 ) )
                    // InternalFortXTrans.g:2004:3: ( rule__DelimitedExpr__Group_1__0 )
                    {
                     before(grammarAccess.getDelimitedExprAccess().getGroup_1()); 
                    // InternalFortXTrans.g:2005:3: ( rule__DelimitedExpr__Group_1__0 )
                    // InternalFortXTrans.g:2005:4: rule__DelimitedExpr__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__DelimitedExpr__Group_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getDelimitedExprAccess().getGroup_1()); 

                    }


                    }
                    break;
                case 3 :
                    // InternalFortXTrans.g:2009:2: ( ( rule__DelimitedExpr__Group_2__0 ) )
                    {
                    // InternalFortXTrans.g:2009:2: ( ( rule__DelimitedExpr__Group_2__0 ) )
                    // InternalFortXTrans.g:2010:3: ( rule__DelimitedExpr__Group_2__0 )
                    {
                     before(grammarAccess.getDelimitedExprAccess().getGroup_2()); 
                    // InternalFortXTrans.g:2011:3: ( rule__DelimitedExpr__Group_2__0 )
                    // InternalFortXTrans.g:2011:4: rule__DelimitedExpr__Group_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__DelimitedExpr__Group_2__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getDelimitedExprAccess().getGroup_2()); 

                    }


                    }
                    break;
                case 4 :
                    // InternalFortXTrans.g:2015:2: ( ( rule__DelimitedExpr__Group_3__0 ) )
                    {
                    // InternalFortXTrans.g:2015:2: ( ( rule__DelimitedExpr__Group_3__0 ) )
                    // InternalFortXTrans.g:2016:3: ( rule__DelimitedExpr__Group_3__0 )
                    {
                     before(grammarAccess.getDelimitedExprAccess().getGroup_3()); 
                    // InternalFortXTrans.g:2017:3: ( rule__DelimitedExpr__Group_3__0 )
                    // InternalFortXTrans.g:2017:4: rule__DelimitedExpr__Group_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__DelimitedExpr__Group_3__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getDelimitedExprAccess().getGroup_3()); 

                    }


                    }
                    break;
                case 5 :
                    // InternalFortXTrans.g:2021:2: ( ( rule__DelimitedExpr__Group_4__0 ) )
                    {
                    // InternalFortXTrans.g:2021:2: ( ( rule__DelimitedExpr__Group_4__0 ) )
                    // InternalFortXTrans.g:2022:3: ( rule__DelimitedExpr__Group_4__0 )
                    {
                     before(grammarAccess.getDelimitedExprAccess().getGroup_4()); 
                    // InternalFortXTrans.g:2023:3: ( rule__DelimitedExpr__Group_4__0 )
                    // InternalFortXTrans.g:2023:4: rule__DelimitedExpr__Group_4__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__DelimitedExpr__Group_4__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getDelimitedExprAccess().getGroup_4()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Alternatives"


    // $ANTLR start "rule__Binding__Alternatives"
    // InternalFortXTrans.g:2031:1: rule__Binding__Alternatives : ( ( ( rule__Binding__Group_0__0 ) ) | ( ( rule__Binding__Group_1__0 ) ) );
    public final void rule__Binding__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2035:1: ( ( ( rule__Binding__Group_0__0 ) ) | ( ( rule__Binding__Group_1__0 ) ) )
            int alt20=2;
            alt20 = dfa20.predict(input);
            switch (alt20) {
                case 1 :
                    // InternalFortXTrans.g:2036:2: ( ( rule__Binding__Group_0__0 ) )
                    {
                    // InternalFortXTrans.g:2036:2: ( ( rule__Binding__Group_0__0 ) )
                    // InternalFortXTrans.g:2037:3: ( rule__Binding__Group_0__0 )
                    {
                     before(grammarAccess.getBindingAccess().getGroup_0()); 
                    // InternalFortXTrans.g:2038:3: ( rule__Binding__Group_0__0 )
                    // InternalFortXTrans.g:2038:4: rule__Binding__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Binding__Group_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getBindingAccess().getGroup_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalFortXTrans.g:2042:2: ( ( rule__Binding__Group_1__0 ) )
                    {
                    // InternalFortXTrans.g:2042:2: ( ( rule__Binding__Group_1__0 ) )
                    // InternalFortXTrans.g:2043:3: ( rule__Binding__Group_1__0 )
                    {
                     before(grammarAccess.getBindingAccess().getGroup_1()); 
                    // InternalFortXTrans.g:2044:3: ( rule__Binding__Group_1__0 )
                    // InternalFortXTrans.g:2044:4: rule__Binding__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Binding__Group_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getBindingAccess().getGroup_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Binding__Alternatives"


    // $ANTLR start "rule__GenClause__Alternatives"
    // InternalFortXTrans.g:2052:1: rule__GenClause__Alternatives : ( ( ( rule__GenClause__BindingAssignment_0 ) ) | ( ( rule__GenClause__ExprAssignment_1 ) ) );
    public final void rule__GenClause__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2056:1: ( ( ( rule__GenClause__BindingAssignment_0 ) ) | ( ( rule__GenClause__ExprAssignment_1 ) ) )
            int alt21=2;
            alt21 = dfa21.predict(input);
            switch (alt21) {
                case 1 :
                    // InternalFortXTrans.g:2057:2: ( ( rule__GenClause__BindingAssignment_0 ) )
                    {
                    // InternalFortXTrans.g:2057:2: ( ( rule__GenClause__BindingAssignment_0 ) )
                    // InternalFortXTrans.g:2058:3: ( rule__GenClause__BindingAssignment_0 )
                    {
                     before(grammarAccess.getGenClauseAccess().getBindingAssignment_0()); 
                    // InternalFortXTrans.g:2059:3: ( rule__GenClause__BindingAssignment_0 )
                    // InternalFortXTrans.g:2059:4: rule__GenClause__BindingAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__GenClause__BindingAssignment_0();

                    state._fsp--;


                    }

                     after(grammarAccess.getGenClauseAccess().getBindingAssignment_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalFortXTrans.g:2063:2: ( ( rule__GenClause__ExprAssignment_1 ) )
                    {
                    // InternalFortXTrans.g:2063:2: ( ( rule__GenClause__ExprAssignment_1 ) )
                    // InternalFortXTrans.g:2064:3: ( rule__GenClause__ExprAssignment_1 )
                    {
                     before(grammarAccess.getGenClauseAccess().getExprAssignment_1()); 
                    // InternalFortXTrans.g:2065:3: ( rule__GenClause__ExprAssignment_1 )
                    // InternalFortXTrans.g:2065:4: rule__GenClause__ExprAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__GenClause__ExprAssignment_1();

                    state._fsp--;


                    }

                     after(grammarAccess.getGenClauseAccess().getExprAssignment_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GenClause__Alternatives"


    // $ANTLR start "rule__FieldDecl__Alternatives"
    // InternalFortXTrans.g:2073:1: rule__FieldDecl__Alternatives : ( ( ( rule__FieldDecl__Group_0__0 ) ) | ( ( rule__FieldDecl__Group_1__0 ) ) | ( ( rule__FieldDecl__Group_2__0 ) ) | ( ( rule__FieldDecl__Group_3__0 ) ) );
    public final void rule__FieldDecl__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2077:1: ( ( ( rule__FieldDecl__Group_0__0 ) ) | ( ( rule__FieldDecl__Group_1__0 ) ) | ( ( rule__FieldDecl__Group_2__0 ) ) | ( ( rule__FieldDecl__Group_3__0 ) ) )
            int alt22=4;
            alt22 = dfa22.predict(input);
            switch (alt22) {
                case 1 :
                    // InternalFortXTrans.g:2078:2: ( ( rule__FieldDecl__Group_0__0 ) )
                    {
                    // InternalFortXTrans.g:2078:2: ( ( rule__FieldDecl__Group_0__0 ) )
                    // InternalFortXTrans.g:2079:3: ( rule__FieldDecl__Group_0__0 )
                    {
                     before(grammarAccess.getFieldDeclAccess().getGroup_0()); 
                    // InternalFortXTrans.g:2080:3: ( rule__FieldDecl__Group_0__0 )
                    // InternalFortXTrans.g:2080:4: rule__FieldDecl__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__FieldDecl__Group_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getFieldDeclAccess().getGroup_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalFortXTrans.g:2084:2: ( ( rule__FieldDecl__Group_1__0 ) )
                    {
                    // InternalFortXTrans.g:2084:2: ( ( rule__FieldDecl__Group_1__0 ) )
                    // InternalFortXTrans.g:2085:3: ( rule__FieldDecl__Group_1__0 )
                    {
                     before(grammarAccess.getFieldDeclAccess().getGroup_1()); 
                    // InternalFortXTrans.g:2086:3: ( rule__FieldDecl__Group_1__0 )
                    // InternalFortXTrans.g:2086:4: rule__FieldDecl__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__FieldDecl__Group_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getFieldDeclAccess().getGroup_1()); 

                    }


                    }
                    break;
                case 3 :
                    // InternalFortXTrans.g:2090:2: ( ( rule__FieldDecl__Group_2__0 ) )
                    {
                    // InternalFortXTrans.g:2090:2: ( ( rule__FieldDecl__Group_2__0 ) )
                    // InternalFortXTrans.g:2091:3: ( rule__FieldDecl__Group_2__0 )
                    {
                     before(grammarAccess.getFieldDeclAccess().getGroup_2()); 
                    // InternalFortXTrans.g:2092:3: ( rule__FieldDecl__Group_2__0 )
                    // InternalFortXTrans.g:2092:4: rule__FieldDecl__Group_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__FieldDecl__Group_2__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getFieldDeclAccess().getGroup_2()); 

                    }


                    }
                    break;
                case 4 :
                    // InternalFortXTrans.g:2096:2: ( ( rule__FieldDecl__Group_3__0 ) )
                    {
                    // InternalFortXTrans.g:2096:2: ( ( rule__FieldDecl__Group_3__0 ) )
                    // InternalFortXTrans.g:2097:3: ( rule__FieldDecl__Group_3__0 )
                    {
                     before(grammarAccess.getFieldDeclAccess().getGroup_3()); 
                    // InternalFortXTrans.g:2098:3: ( rule__FieldDecl__Group_3__0 )
                    // InternalFortXTrans.g:2098:4: rule__FieldDecl__Group_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__FieldDecl__Group_3__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getFieldDeclAccess().getGroup_3()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Alternatives"


    // $ANTLR start "rule__NoNewlineVarWTypes__Alternatives"
    // InternalFortXTrans.g:2106:1: rule__NoNewlineVarWTypes__Alternatives : ( ( ( rule__NoNewlineVarWTypes__Group_0__0 ) ) | ( ( rule__NoNewlineVarWTypes__Group_1__0 ) ) );
    public final void rule__NoNewlineVarWTypes__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2110:1: ( ( ( rule__NoNewlineVarWTypes__Group_0__0 ) ) | ( ( rule__NoNewlineVarWTypes__Group_1__0 ) ) )
            int alt23=2;
            int LA23_0 = input.LA(1);

            if ( (LA23_0==RULE_ID) ) {
                alt23=1;
            }
            else if ( (LA23_0==33) ) {
                alt23=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 23, 0, input);

                throw nvae;
            }
            switch (alt23) {
                case 1 :
                    // InternalFortXTrans.g:2111:2: ( ( rule__NoNewlineVarWTypes__Group_0__0 ) )
                    {
                    // InternalFortXTrans.g:2111:2: ( ( rule__NoNewlineVarWTypes__Group_0__0 ) )
                    // InternalFortXTrans.g:2112:3: ( rule__NoNewlineVarWTypes__Group_0__0 )
                    {
                     before(grammarAccess.getNoNewlineVarWTypesAccess().getGroup_0()); 
                    // InternalFortXTrans.g:2113:3: ( rule__NoNewlineVarWTypes__Group_0__0 )
                    // InternalFortXTrans.g:2113:4: rule__NoNewlineVarWTypes__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__NoNewlineVarWTypes__Group_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getNoNewlineVarWTypesAccess().getGroup_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalFortXTrans.g:2117:2: ( ( rule__NoNewlineVarWTypes__Group_1__0 ) )
                    {
                    // InternalFortXTrans.g:2117:2: ( ( rule__NoNewlineVarWTypes__Group_1__0 ) )
                    // InternalFortXTrans.g:2118:3: ( rule__NoNewlineVarWTypes__Group_1__0 )
                    {
                     before(grammarAccess.getNoNewlineVarWTypesAccess().getGroup_1()); 
                    // InternalFortXTrans.g:2119:3: ( rule__NoNewlineVarWTypes__Group_1__0 )
                    // InternalFortXTrans.g:2119:4: rule__NoNewlineVarWTypes__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__NoNewlineVarWTypes__Group_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getNoNewlineVarWTypesAccess().getGroup_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NoNewlineVarWTypes__Alternatives"


    // $ANTLR start "rule__LiteralTuple__Alternatives"
    // InternalFortXTrans.g:2127:1: rule__LiteralTuple__Alternatives : ( ( ruleLiteralTup ) | ( ruleQualified ) );
    public final void rule__LiteralTuple__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2131:1: ( ( ruleLiteralTup ) | ( ruleQualified ) )
            int alt24=2;
            switch ( input.LA(1) ) {
            case RULE_INT:
            case RULE_FLOAT:
            case RULE_STRING:
            case 74:
            case 75:
                {
                alt24=1;
                }
                break;
            case 33:
                {
                int LA24_2 = input.LA(2);

                if ( ((LA24_2>=RULE_INT && LA24_2<=RULE_STRING)||(LA24_2>=74 && LA24_2<=75)) ) {
                    alt24=1;
                }
                else if ( (LA24_2==RULE_ID) ) {
                    alt24=2;
                }
                else {
                    NoViableAltException nvae =
                        new NoViableAltException("", 24, 2, input);

                    throw nvae;
                }
                }
                break;
            case RULE_ID:
                {
                alt24=2;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 24, 0, input);

                throw nvae;
            }

            switch (alt24) {
                case 1 :
                    // InternalFortXTrans.g:2132:2: ( ruleLiteralTup )
                    {
                    // InternalFortXTrans.g:2132:2: ( ruleLiteralTup )
                    // InternalFortXTrans.g:2133:3: ruleLiteralTup
                    {
                     before(grammarAccess.getLiteralTupleAccess().getLiteralTupParserRuleCall_0()); 
                    pushFollow(FOLLOW_2);
                    ruleLiteralTup();

                    state._fsp--;

                     after(grammarAccess.getLiteralTupleAccess().getLiteralTupParserRuleCall_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalFortXTrans.g:2138:2: ( ruleQualified )
                    {
                    // InternalFortXTrans.g:2138:2: ( ruleQualified )
                    // InternalFortXTrans.g:2139:3: ruleQualified
                    {
                     before(grammarAccess.getLiteralTupleAccess().getQualifiedParserRuleCall_1()); 
                    pushFollow(FOLLOW_2);
                    ruleQualified();

                    state._fsp--;

                     after(grammarAccess.getLiteralTupleAccess().getQualifiedParserRuleCall_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralTuple__Alternatives"


    // $ANTLR start "rule__LiteralTup__Alternatives"
    // InternalFortXTrans.g:2148:1: rule__LiteralTup__Alternatives : ( ( ruleLiteral ) | ( ( rule__LiteralTup__Group_1__0 ) ) );
    public final void rule__LiteralTup__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2152:1: ( ( ruleLiteral ) | ( ( rule__LiteralTup__Group_1__0 ) ) )
            int alt25=2;
            int LA25_0 = input.LA(1);

            if ( ((LA25_0>=RULE_INT && LA25_0<=RULE_STRING)||(LA25_0>=74 && LA25_0<=75)) ) {
                alt25=1;
            }
            else if ( (LA25_0==33) ) {
                alt25=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 25, 0, input);

                throw nvae;
            }
            switch (alt25) {
                case 1 :
                    // InternalFortXTrans.g:2153:2: ( ruleLiteral )
                    {
                    // InternalFortXTrans.g:2153:2: ( ruleLiteral )
                    // InternalFortXTrans.g:2154:3: ruleLiteral
                    {
                     before(grammarAccess.getLiteralTupAccess().getLiteralParserRuleCall_0()); 
                    pushFollow(FOLLOW_2);
                    ruleLiteral();

                    state._fsp--;

                     after(grammarAccess.getLiteralTupAccess().getLiteralParserRuleCall_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalFortXTrans.g:2159:2: ( ( rule__LiteralTup__Group_1__0 ) )
                    {
                    // InternalFortXTrans.g:2159:2: ( ( rule__LiteralTup__Group_1__0 ) )
                    // InternalFortXTrans.g:2160:3: ( rule__LiteralTup__Group_1__0 )
                    {
                     before(grammarAccess.getLiteralTupAccess().getGroup_1()); 
                    // InternalFortXTrans.g:2161:3: ( rule__LiteralTup__Group_1__0 )
                    // InternalFortXTrans.g:2161:4: rule__LiteralTup__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__LiteralTup__Group_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getLiteralTupAccess().getGroup_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralTup__Alternatives"


    // $ANTLR start "rule__Literal__Alternatives"
    // InternalFortXTrans.g:2169:1: rule__Literal__Alternatives : ( ( ( rule__Literal__Group_0__0 ) ) | ( ( rule__Literal__Group_1__0 ) ) | ( ( rule__Literal__Group_2__0 ) ) | ( ( rule__Literal__Group_3__0 ) ) );
    public final void rule__Literal__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2173:1: ( ( ( rule__Literal__Group_0__0 ) ) | ( ( rule__Literal__Group_1__0 ) ) | ( ( rule__Literal__Group_2__0 ) ) | ( ( rule__Literal__Group_3__0 ) ) )
            int alt26=4;
            switch ( input.LA(1) ) {
            case RULE_INT:
                {
                alt26=1;
                }
                break;
            case RULE_FLOAT:
                {
                alt26=2;
                }
                break;
            case RULE_STRING:
                {
                alt26=3;
                }
                break;
            case 74:
            case 75:
                {
                alt26=4;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 26, 0, input);

                throw nvae;
            }

            switch (alt26) {
                case 1 :
                    // InternalFortXTrans.g:2174:2: ( ( rule__Literal__Group_0__0 ) )
                    {
                    // InternalFortXTrans.g:2174:2: ( ( rule__Literal__Group_0__0 ) )
                    // InternalFortXTrans.g:2175:3: ( rule__Literal__Group_0__0 )
                    {
                     before(grammarAccess.getLiteralAccess().getGroup_0()); 
                    // InternalFortXTrans.g:2176:3: ( rule__Literal__Group_0__0 )
                    // InternalFortXTrans.g:2176:4: rule__Literal__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Literal__Group_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getLiteralAccess().getGroup_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalFortXTrans.g:2180:2: ( ( rule__Literal__Group_1__0 ) )
                    {
                    // InternalFortXTrans.g:2180:2: ( ( rule__Literal__Group_1__0 ) )
                    // InternalFortXTrans.g:2181:3: ( rule__Literal__Group_1__0 )
                    {
                     before(grammarAccess.getLiteralAccess().getGroup_1()); 
                    // InternalFortXTrans.g:2182:3: ( rule__Literal__Group_1__0 )
                    // InternalFortXTrans.g:2182:4: rule__Literal__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Literal__Group_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getLiteralAccess().getGroup_1()); 

                    }


                    }
                    break;
                case 3 :
                    // InternalFortXTrans.g:2186:2: ( ( rule__Literal__Group_2__0 ) )
                    {
                    // InternalFortXTrans.g:2186:2: ( ( rule__Literal__Group_2__0 ) )
                    // InternalFortXTrans.g:2187:3: ( rule__Literal__Group_2__0 )
                    {
                     before(grammarAccess.getLiteralAccess().getGroup_2()); 
                    // InternalFortXTrans.g:2188:3: ( rule__Literal__Group_2__0 )
                    // InternalFortXTrans.g:2188:4: rule__Literal__Group_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Literal__Group_2__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getLiteralAccess().getGroup_2()); 

                    }


                    }
                    break;
                case 4 :
                    // InternalFortXTrans.g:2192:2: ( ( rule__Literal__Group_3__0 ) )
                    {
                    // InternalFortXTrans.g:2192:2: ( ( rule__Literal__Group_3__0 ) )
                    // InternalFortXTrans.g:2193:3: ( rule__Literal__Group_3__0 )
                    {
                     before(grammarAccess.getLiteralAccess().getGroup_3()); 
                    // InternalFortXTrans.g:2194:3: ( rule__Literal__Group_3__0 )
                    // InternalFortXTrans.g:2194:4: rule__Literal__Group_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Literal__Group_3__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getLiteralAccess().getGroup_3()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Literal__Alternatives"


    // $ANTLR start "rule__Literal__Alternatives_3_1"
    // InternalFortXTrans.g:2202:1: rule__Literal__Alternatives_3_1 : ( ( ( rule__Literal__ValueAssignment_3_1_0 ) ) | ( ( rule__Literal__ValueAssignment_3_1_1 ) ) );
    public final void rule__Literal__Alternatives_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2206:1: ( ( ( rule__Literal__ValueAssignment_3_1_0 ) ) | ( ( rule__Literal__ValueAssignment_3_1_1 ) ) )
            int alt27=2;
            int LA27_0 = input.LA(1);

            if ( (LA27_0==74) ) {
                alt27=1;
            }
            else if ( (LA27_0==75) ) {
                alt27=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 27, 0, input);

                throw nvae;
            }
            switch (alt27) {
                case 1 :
                    // InternalFortXTrans.g:2207:2: ( ( rule__Literal__ValueAssignment_3_1_0 ) )
                    {
                    // InternalFortXTrans.g:2207:2: ( ( rule__Literal__ValueAssignment_3_1_0 ) )
                    // InternalFortXTrans.g:2208:3: ( rule__Literal__ValueAssignment_3_1_0 )
                    {
                     before(grammarAccess.getLiteralAccess().getValueAssignment_3_1_0()); 
                    // InternalFortXTrans.g:2209:3: ( rule__Literal__ValueAssignment_3_1_0 )
                    // InternalFortXTrans.g:2209:4: rule__Literal__ValueAssignment_3_1_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Literal__ValueAssignment_3_1_0();

                    state._fsp--;


                    }

                     after(grammarAccess.getLiteralAccess().getValueAssignment_3_1_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalFortXTrans.g:2213:2: ( ( rule__Literal__ValueAssignment_3_1_1 ) )
                    {
                    // InternalFortXTrans.g:2213:2: ( ( rule__Literal__ValueAssignment_3_1_1 ) )
                    // InternalFortXTrans.g:2214:3: ( rule__Literal__ValueAssignment_3_1_1 )
                    {
                     before(grammarAccess.getLiteralAccess().getValueAssignment_3_1_1()); 
                    // InternalFortXTrans.g:2215:3: ( rule__Literal__ValueAssignment_3_1_1 )
                    // InternalFortXTrans.g:2215:4: rule__Literal__ValueAssignment_3_1_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__Literal__ValueAssignment_3_1_1();

                    state._fsp--;


                    }

                     after(grammarAccess.getLiteralAccess().getValueAssignment_3_1_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Literal__Alternatives_3_1"


    // $ANTLR start "rule__LocalVarDecl__Alternatives"
    // InternalFortXTrans.g:2223:1: rule__LocalVarDecl__Alternatives : ( ( ( rule__LocalVarDecl__Group_0__0 ) ) | ( ( rule__LocalVarDecl__Group_1__0 ) ) | ( ( rule__LocalVarDecl__Group_2__0 ) ) | ( ( rule__LocalVarDecl__Group_3__0 ) ) );
    public final void rule__LocalVarDecl__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2227:1: ( ( ( rule__LocalVarDecl__Group_0__0 ) ) | ( ( rule__LocalVarDecl__Group_1__0 ) ) | ( ( rule__LocalVarDecl__Group_2__0 ) ) | ( ( rule__LocalVarDecl__Group_3__0 ) ) )
            int alt28=4;
            alt28 = dfa28.predict(input);
            switch (alt28) {
                case 1 :
                    // InternalFortXTrans.g:2228:2: ( ( rule__LocalVarDecl__Group_0__0 ) )
                    {
                    // InternalFortXTrans.g:2228:2: ( ( rule__LocalVarDecl__Group_0__0 ) )
                    // InternalFortXTrans.g:2229:3: ( rule__LocalVarDecl__Group_0__0 )
                    {
                     before(grammarAccess.getLocalVarDeclAccess().getGroup_0()); 
                    // InternalFortXTrans.g:2230:3: ( rule__LocalVarDecl__Group_0__0 )
                    // InternalFortXTrans.g:2230:4: rule__LocalVarDecl__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__LocalVarDecl__Group_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getLocalVarDeclAccess().getGroup_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalFortXTrans.g:2234:2: ( ( rule__LocalVarDecl__Group_1__0 ) )
                    {
                    // InternalFortXTrans.g:2234:2: ( ( rule__LocalVarDecl__Group_1__0 ) )
                    // InternalFortXTrans.g:2235:3: ( rule__LocalVarDecl__Group_1__0 )
                    {
                     before(grammarAccess.getLocalVarDeclAccess().getGroup_1()); 
                    // InternalFortXTrans.g:2236:3: ( rule__LocalVarDecl__Group_1__0 )
                    // InternalFortXTrans.g:2236:4: rule__LocalVarDecl__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__LocalVarDecl__Group_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getLocalVarDeclAccess().getGroup_1()); 

                    }


                    }
                    break;
                case 3 :
                    // InternalFortXTrans.g:2240:2: ( ( rule__LocalVarDecl__Group_2__0 ) )
                    {
                    // InternalFortXTrans.g:2240:2: ( ( rule__LocalVarDecl__Group_2__0 ) )
                    // InternalFortXTrans.g:2241:3: ( rule__LocalVarDecl__Group_2__0 )
                    {
                     before(grammarAccess.getLocalVarDeclAccess().getGroup_2()); 
                    // InternalFortXTrans.g:2242:3: ( rule__LocalVarDecl__Group_2__0 )
                    // InternalFortXTrans.g:2242:4: rule__LocalVarDecl__Group_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__LocalVarDecl__Group_2__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getLocalVarDeclAccess().getGroup_2()); 

                    }


                    }
                    break;
                case 4 :
                    // InternalFortXTrans.g:2246:2: ( ( rule__LocalVarDecl__Group_3__0 ) )
                    {
                    // InternalFortXTrans.g:2246:2: ( ( rule__LocalVarDecl__Group_3__0 ) )
                    // InternalFortXTrans.g:2247:3: ( rule__LocalVarDecl__Group_3__0 )
                    {
                     before(grammarAccess.getLocalVarDeclAccess().getGroup_3()); 
                    // InternalFortXTrans.g:2248:3: ( rule__LocalVarDecl__Group_3__0 )
                    // InternalFortXTrans.g:2248:4: rule__LocalVarDecl__Group_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__LocalVarDecl__Group_3__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getLocalVarDeclAccess().getGroup_3()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Alternatives"


    // $ANTLR start "rule__Component__Group__0"
    // InternalFortXTrans.g:2256:1: rule__Component__Group__0 : rule__Component__Group__0__Impl rule__Component__Group__1 ;
    public final void rule__Component__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2260:1: ( rule__Component__Group__0__Impl rule__Component__Group__1 )
            // InternalFortXTrans.g:2261:2: rule__Component__Group__0__Impl rule__Component__Group__1
            {
            pushFollow(FOLLOW_5);
            rule__Component__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Component__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Component__Group__0"


    // $ANTLR start "rule__Component__Group__0__Impl"
    // InternalFortXTrans.g:2268:1: rule__Component__Group__0__Impl : ( 'component' ) ;
    public final void rule__Component__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2272:1: ( ( 'component' ) )
            // InternalFortXTrans.g:2273:1: ( 'component' )
            {
            // InternalFortXTrans.g:2273:1: ( 'component' )
            // InternalFortXTrans.g:2274:2: 'component'
            {
             before(grammarAccess.getComponentAccess().getComponentKeyword_0()); 
            match(input,25,FOLLOW_2); 
             after(grammarAccess.getComponentAccess().getComponentKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Component__Group__0__Impl"


    // $ANTLR start "rule__Component__Group__1"
    // InternalFortXTrans.g:2283:1: rule__Component__Group__1 : rule__Component__Group__1__Impl rule__Component__Group__2 ;
    public final void rule__Component__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2287:1: ( rule__Component__Group__1__Impl rule__Component__Group__2 )
            // InternalFortXTrans.g:2288:2: rule__Component__Group__1__Impl rule__Component__Group__2
            {
            pushFollow(FOLLOW_6);
            rule__Component__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Component__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Component__Group__1"


    // $ANTLR start "rule__Component__Group__1__Impl"
    // InternalFortXTrans.g:2295:1: rule__Component__Group__1__Impl : ( ( rule__Component__NameAssignment_1 ) ) ;
    public final void rule__Component__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2299:1: ( ( ( rule__Component__NameAssignment_1 ) ) )
            // InternalFortXTrans.g:2300:1: ( ( rule__Component__NameAssignment_1 ) )
            {
            // InternalFortXTrans.g:2300:1: ( ( rule__Component__NameAssignment_1 ) )
            // InternalFortXTrans.g:2301:2: ( rule__Component__NameAssignment_1 )
            {
             before(grammarAccess.getComponentAccess().getNameAssignment_1()); 
            // InternalFortXTrans.g:2302:2: ( rule__Component__NameAssignment_1 )
            // InternalFortXTrans.g:2302:3: rule__Component__NameAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__Component__NameAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getComponentAccess().getNameAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Component__Group__1__Impl"


    // $ANTLR start "rule__Component__Group__2"
    // InternalFortXTrans.g:2310:1: rule__Component__Group__2 : rule__Component__Group__2__Impl rule__Component__Group__3 ;
    public final void rule__Component__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2314:1: ( rule__Component__Group__2__Impl rule__Component__Group__3 )
            // InternalFortXTrans.g:2315:2: rule__Component__Group__2__Impl rule__Component__Group__3
            {
            pushFollow(FOLLOW_6);
            rule__Component__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Component__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Component__Group__2"


    // $ANTLR start "rule__Component__Group__2__Impl"
    // InternalFortXTrans.g:2322:1: rule__Component__Group__2__Impl : ( ( rule__Component__ImportsAssignment_2 )* ) ;
    public final void rule__Component__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2326:1: ( ( ( rule__Component__ImportsAssignment_2 )* ) )
            // InternalFortXTrans.g:2327:1: ( ( rule__Component__ImportsAssignment_2 )* )
            {
            // InternalFortXTrans.g:2327:1: ( ( rule__Component__ImportsAssignment_2 )* )
            // InternalFortXTrans.g:2328:2: ( rule__Component__ImportsAssignment_2 )*
            {
             before(grammarAccess.getComponentAccess().getImportsAssignment_2()); 
            // InternalFortXTrans.g:2329:2: ( rule__Component__ImportsAssignment_2 )*
            loop29:
            do {
                int alt29=2;
                int LA29_0 = input.LA(1);

                if ( (LA29_0==59) ) {
                    alt29=1;
                }


                switch (alt29) {
            	case 1 :
            	    // InternalFortXTrans.g:2329:3: rule__Component__ImportsAssignment_2
            	    {
            	    pushFollow(FOLLOW_7);
            	    rule__Component__ImportsAssignment_2();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop29;
                }
            } while (true);

             after(grammarAccess.getComponentAccess().getImportsAssignment_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Component__Group__2__Impl"


    // $ANTLR start "rule__Component__Group__3"
    // InternalFortXTrans.g:2337:1: rule__Component__Group__3 : rule__Component__Group__3__Impl rule__Component__Group__4 ;
    public final void rule__Component__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2341:1: ( rule__Component__Group__3__Impl rule__Component__Group__4 )
            // InternalFortXTrans.g:2342:2: rule__Component__Group__3__Impl rule__Component__Group__4
            {
            pushFollow(FOLLOW_8);
            rule__Component__Group__3__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Component__Group__4();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Component__Group__3"


    // $ANTLR start "rule__Component__Group__3__Impl"
    // InternalFortXTrans.g:2349:1: rule__Component__Group__3__Impl : ( ( ( rule__Component__ExportsAssignment_3 ) ) ( ( rule__Component__ExportsAssignment_3 )* ) ) ;
    public final void rule__Component__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2353:1: ( ( ( ( rule__Component__ExportsAssignment_3 ) ) ( ( rule__Component__ExportsAssignment_3 )* ) ) )
            // InternalFortXTrans.g:2354:1: ( ( ( rule__Component__ExportsAssignment_3 ) ) ( ( rule__Component__ExportsAssignment_3 )* ) )
            {
            // InternalFortXTrans.g:2354:1: ( ( ( rule__Component__ExportsAssignment_3 ) ) ( ( rule__Component__ExportsAssignment_3 )* ) )
            // InternalFortXTrans.g:2355:2: ( ( rule__Component__ExportsAssignment_3 ) ) ( ( rule__Component__ExportsAssignment_3 )* )
            {
            // InternalFortXTrans.g:2355:2: ( ( rule__Component__ExportsAssignment_3 ) )
            // InternalFortXTrans.g:2356:3: ( rule__Component__ExportsAssignment_3 )
            {
             before(grammarAccess.getComponentAccess().getExportsAssignment_3()); 
            // InternalFortXTrans.g:2357:3: ( rule__Component__ExportsAssignment_3 )
            // InternalFortXTrans.g:2357:4: rule__Component__ExportsAssignment_3
            {
            pushFollow(FOLLOW_9);
            rule__Component__ExportsAssignment_3();

            state._fsp--;


            }

             after(grammarAccess.getComponentAccess().getExportsAssignment_3()); 

            }

            // InternalFortXTrans.g:2360:2: ( ( rule__Component__ExportsAssignment_3 )* )
            // InternalFortXTrans.g:2361:3: ( rule__Component__ExportsAssignment_3 )*
            {
             before(grammarAccess.getComponentAccess().getExportsAssignment_3()); 
            // InternalFortXTrans.g:2362:3: ( rule__Component__ExportsAssignment_3 )*
            loop30:
            do {
                int alt30=2;
                int LA30_0 = input.LA(1);

                if ( (LA30_0==60) ) {
                    alt30=1;
                }


                switch (alt30) {
            	case 1 :
            	    // InternalFortXTrans.g:2362:4: rule__Component__ExportsAssignment_3
            	    {
            	    pushFollow(FOLLOW_9);
            	    rule__Component__ExportsAssignment_3();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop30;
                }
            } while (true);

             after(grammarAccess.getComponentAccess().getExportsAssignment_3()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Component__Group__3__Impl"


    // $ANTLR start "rule__Component__Group__4"
    // InternalFortXTrans.g:2371:1: rule__Component__Group__4 : rule__Component__Group__4__Impl rule__Component__Group__5 ;
    public final void rule__Component__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2375:1: ( rule__Component__Group__4__Impl rule__Component__Group__5 )
            // InternalFortXTrans.g:2376:2: rule__Component__Group__4__Impl rule__Component__Group__5
            {
            pushFollow(FOLLOW_8);
            rule__Component__Group__4__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Component__Group__5();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Component__Group__4"


    // $ANTLR start "rule__Component__Group__4__Impl"
    // InternalFortXTrans.g:2383:1: rule__Component__Group__4__Impl : ( ( rule__Component__DeclsAssignment_4 )* ) ;
    public final void rule__Component__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2387:1: ( ( ( rule__Component__DeclsAssignment_4 )* ) )
            // InternalFortXTrans.g:2388:1: ( ( rule__Component__DeclsAssignment_4 )* )
            {
            // InternalFortXTrans.g:2388:1: ( ( rule__Component__DeclsAssignment_4 )* )
            // InternalFortXTrans.g:2389:2: ( rule__Component__DeclsAssignment_4 )*
            {
             before(grammarAccess.getComponentAccess().getDeclsAssignment_4()); 
            // InternalFortXTrans.g:2390:2: ( rule__Component__DeclsAssignment_4 )*
            loop31:
            do {
                int alt31=2;
                int LA31_0 = input.LA(1);

                if ( (LA31_0==RULE_ID||LA31_0==33||(LA31_0>=62 && LA31_0<=65)||LA31_0==73) ) {
                    alt31=1;
                }


                switch (alt31) {
            	case 1 :
            	    // InternalFortXTrans.g:2390:3: rule__Component__DeclsAssignment_4
            	    {
            	    pushFollow(FOLLOW_3);
            	    rule__Component__DeclsAssignment_4();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop31;
                }
            } while (true);

             after(grammarAccess.getComponentAccess().getDeclsAssignment_4()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Component__Group__4__Impl"


    // $ANTLR start "rule__Component__Group__5"
    // InternalFortXTrans.g:2398:1: rule__Component__Group__5 : rule__Component__Group__5__Impl ;
    public final void rule__Component__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2402:1: ( rule__Component__Group__5__Impl )
            // InternalFortXTrans.g:2403:2: rule__Component__Group__5__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Component__Group__5__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Component__Group__5"


    // $ANTLR start "rule__Component__Group__5__Impl"
    // InternalFortXTrans.g:2409:1: rule__Component__Group__5__Impl : ( 'end' ) ;
    public final void rule__Component__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2413:1: ( ( 'end' ) )
            // InternalFortXTrans.g:2414:1: ( 'end' )
            {
            // InternalFortXTrans.g:2414:1: ( 'end' )
            // InternalFortXTrans.g:2415:2: 'end'
            {
             before(grammarAccess.getComponentAccess().getEndKeyword_5()); 
            match(input,26,FOLLOW_2); 
             after(grammarAccess.getComponentAccess().getEndKeyword_5()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Component__Group__5__Impl"


    // $ANTLR start "rule__API__Group__0"
    // InternalFortXTrans.g:2425:1: rule__API__Group__0 : rule__API__Group__0__Impl rule__API__Group__1 ;
    public final void rule__API__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2429:1: ( rule__API__Group__0__Impl rule__API__Group__1 )
            // InternalFortXTrans.g:2430:2: rule__API__Group__0__Impl rule__API__Group__1
            {
            pushFollow(FOLLOW_5);
            rule__API__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__API__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__API__Group__0"


    // $ANTLR start "rule__API__Group__0__Impl"
    // InternalFortXTrans.g:2437:1: rule__API__Group__0__Impl : ( 'api' ) ;
    public final void rule__API__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2441:1: ( ( 'api' ) )
            // InternalFortXTrans.g:2442:1: ( 'api' )
            {
            // InternalFortXTrans.g:2442:1: ( 'api' )
            // InternalFortXTrans.g:2443:2: 'api'
            {
             before(grammarAccess.getAPIAccess().getApiKeyword_0()); 
            match(input,27,FOLLOW_2); 
             after(grammarAccess.getAPIAccess().getApiKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__API__Group__0__Impl"


    // $ANTLR start "rule__API__Group__1"
    // InternalFortXTrans.g:2452:1: rule__API__Group__1 : rule__API__Group__1__Impl rule__API__Group__2 ;
    public final void rule__API__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2456:1: ( rule__API__Group__1__Impl rule__API__Group__2 )
            // InternalFortXTrans.g:2457:2: rule__API__Group__1__Impl rule__API__Group__2
            {
            pushFollow(FOLLOW_10);
            rule__API__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__API__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__API__Group__1"


    // $ANTLR start "rule__API__Group__1__Impl"
    // InternalFortXTrans.g:2464:1: rule__API__Group__1__Impl : ( ( rule__API__NameAssignment_1 ) ) ;
    public final void rule__API__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2468:1: ( ( ( rule__API__NameAssignment_1 ) ) )
            // InternalFortXTrans.g:2469:1: ( ( rule__API__NameAssignment_1 ) )
            {
            // InternalFortXTrans.g:2469:1: ( ( rule__API__NameAssignment_1 ) )
            // InternalFortXTrans.g:2470:2: ( rule__API__NameAssignment_1 )
            {
             before(grammarAccess.getAPIAccess().getNameAssignment_1()); 
            // InternalFortXTrans.g:2471:2: ( rule__API__NameAssignment_1 )
            // InternalFortXTrans.g:2471:3: rule__API__NameAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__API__NameAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getAPIAccess().getNameAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__API__Group__1__Impl"


    // $ANTLR start "rule__API__Group__2"
    // InternalFortXTrans.g:2479:1: rule__API__Group__2 : rule__API__Group__2__Impl rule__API__Group__3 ;
    public final void rule__API__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2483:1: ( rule__API__Group__2__Impl rule__API__Group__3 )
            // InternalFortXTrans.g:2484:2: rule__API__Group__2__Impl rule__API__Group__3
            {
            pushFollow(FOLLOW_10);
            rule__API__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__API__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__API__Group__2"


    // $ANTLR start "rule__API__Group__2__Impl"
    // InternalFortXTrans.g:2491:1: rule__API__Group__2__Impl : ( ( rule__API__ImportsAssignment_2 )* ) ;
    public final void rule__API__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2495:1: ( ( ( rule__API__ImportsAssignment_2 )* ) )
            // InternalFortXTrans.g:2496:1: ( ( rule__API__ImportsAssignment_2 )* )
            {
            // InternalFortXTrans.g:2496:1: ( ( rule__API__ImportsAssignment_2 )* )
            // InternalFortXTrans.g:2497:2: ( rule__API__ImportsAssignment_2 )*
            {
             before(grammarAccess.getAPIAccess().getImportsAssignment_2()); 
            // InternalFortXTrans.g:2498:2: ( rule__API__ImportsAssignment_2 )*
            loop32:
            do {
                int alt32=2;
                int LA32_0 = input.LA(1);

                if ( (LA32_0==59) ) {
                    alt32=1;
                }


                switch (alt32) {
            	case 1 :
            	    // InternalFortXTrans.g:2498:3: rule__API__ImportsAssignment_2
            	    {
            	    pushFollow(FOLLOW_7);
            	    rule__API__ImportsAssignment_2();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop32;
                }
            } while (true);

             after(grammarAccess.getAPIAccess().getImportsAssignment_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__API__Group__2__Impl"


    // $ANTLR start "rule__API__Group__3"
    // InternalFortXTrans.g:2506:1: rule__API__Group__3 : rule__API__Group__3__Impl ;
    public final void rule__API__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2510:1: ( rule__API__Group__3__Impl )
            // InternalFortXTrans.g:2511:2: rule__API__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__API__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__API__Group__3"


    // $ANTLR start "rule__API__Group__3__Impl"
    // InternalFortXTrans.g:2517:1: rule__API__Group__3__Impl : ( 'end' ) ;
    public final void rule__API__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2521:1: ( ( 'end' ) )
            // InternalFortXTrans.g:2522:1: ( 'end' )
            {
            // InternalFortXTrans.g:2522:1: ( 'end' )
            // InternalFortXTrans.g:2523:2: 'end'
            {
             before(grammarAccess.getAPIAccess().getEndKeyword_3()); 
            match(input,26,FOLLOW_2); 
             after(grammarAccess.getAPIAccess().getEndKeyword_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__API__Group__3__Impl"


    // $ANTLR start "rule__Import__Group_0__0"
    // InternalFortXTrans.g:2533:1: rule__Import__Group_0__0 : rule__Import__Group_0__0__Impl rule__Import__Group_0__1 ;
    public final void rule__Import__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2537:1: ( rule__Import__Group_0__0__Impl rule__Import__Group_0__1 )
            // InternalFortXTrans.g:2538:2: rule__Import__Group_0__0__Impl rule__Import__Group_0__1
            {
            pushFollow(FOLLOW_5);
            rule__Import__Group_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Import__Group_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Import__Group_0__0"


    // $ANTLR start "rule__Import__Group_0__0__Impl"
    // InternalFortXTrans.g:2545:1: rule__Import__Group_0__0__Impl : ( ( rule__Import__ImpsAssignment_0_0 ) ) ;
    public final void rule__Import__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2549:1: ( ( ( rule__Import__ImpsAssignment_0_0 ) ) )
            // InternalFortXTrans.g:2550:1: ( ( rule__Import__ImpsAssignment_0_0 ) )
            {
            // InternalFortXTrans.g:2550:1: ( ( rule__Import__ImpsAssignment_0_0 ) )
            // InternalFortXTrans.g:2551:2: ( rule__Import__ImpsAssignment_0_0 )
            {
             before(grammarAccess.getImportAccess().getImpsAssignment_0_0()); 
            // InternalFortXTrans.g:2552:2: ( rule__Import__ImpsAssignment_0_0 )
            // InternalFortXTrans.g:2552:3: rule__Import__ImpsAssignment_0_0
            {
            pushFollow(FOLLOW_2);
            rule__Import__ImpsAssignment_0_0();

            state._fsp--;


            }

             after(grammarAccess.getImportAccess().getImpsAssignment_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Import__Group_0__0__Impl"


    // $ANTLR start "rule__Import__Group_0__1"
    // InternalFortXTrans.g:2560:1: rule__Import__Group_0__1 : rule__Import__Group_0__1__Impl ;
    public final void rule__Import__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2564:1: ( rule__Import__Group_0__1__Impl )
            // InternalFortXTrans.g:2565:2: rule__Import__Group_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Import__Group_0__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Import__Group_0__1"


    // $ANTLR start "rule__Import__Group_0__1__Impl"
    // InternalFortXTrans.g:2571:1: rule__Import__Group_0__1__Impl : ( ( rule__Import__ImportedNamesAssignment_0_1 ) ) ;
    public final void rule__Import__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2575:1: ( ( ( rule__Import__ImportedNamesAssignment_0_1 ) ) )
            // InternalFortXTrans.g:2576:1: ( ( rule__Import__ImportedNamesAssignment_0_1 ) )
            {
            // InternalFortXTrans.g:2576:1: ( ( rule__Import__ImportedNamesAssignment_0_1 ) )
            // InternalFortXTrans.g:2577:2: ( rule__Import__ImportedNamesAssignment_0_1 )
            {
             before(grammarAccess.getImportAccess().getImportedNamesAssignment_0_1()); 
            // InternalFortXTrans.g:2578:2: ( rule__Import__ImportedNamesAssignment_0_1 )
            // InternalFortXTrans.g:2578:3: rule__Import__ImportedNamesAssignment_0_1
            {
            pushFollow(FOLLOW_2);
            rule__Import__ImportedNamesAssignment_0_1();

            state._fsp--;


            }

             after(grammarAccess.getImportAccess().getImportedNamesAssignment_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Import__Group_0__1__Impl"


    // $ANTLR start "rule__Import__Group_1__0"
    // InternalFortXTrans.g:2587:1: rule__Import__Group_1__0 : rule__Import__Group_1__0__Impl rule__Import__Group_1__1 ;
    public final void rule__Import__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2591:1: ( rule__Import__Group_1__0__Impl rule__Import__Group_1__1 )
            // InternalFortXTrans.g:2592:2: rule__Import__Group_1__0__Impl rule__Import__Group_1__1
            {
            pushFollow(FOLLOW_11);
            rule__Import__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Import__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Import__Group_1__0"


    // $ANTLR start "rule__Import__Group_1__0__Impl"
    // InternalFortXTrans.g:2599:1: rule__Import__Group_1__0__Impl : ( ( rule__Import__ImpsAssignment_1_0 ) ) ;
    public final void rule__Import__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2603:1: ( ( ( rule__Import__ImpsAssignment_1_0 ) ) )
            // InternalFortXTrans.g:2604:1: ( ( rule__Import__ImpsAssignment_1_0 ) )
            {
            // InternalFortXTrans.g:2604:1: ( ( rule__Import__ImpsAssignment_1_0 ) )
            // InternalFortXTrans.g:2605:2: ( rule__Import__ImpsAssignment_1_0 )
            {
             before(grammarAccess.getImportAccess().getImpsAssignment_1_0()); 
            // InternalFortXTrans.g:2606:2: ( rule__Import__ImpsAssignment_1_0 )
            // InternalFortXTrans.g:2606:3: rule__Import__ImpsAssignment_1_0
            {
            pushFollow(FOLLOW_2);
            rule__Import__ImpsAssignment_1_0();

            state._fsp--;


            }

             after(grammarAccess.getImportAccess().getImpsAssignment_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Import__Group_1__0__Impl"


    // $ANTLR start "rule__Import__Group_1__1"
    // InternalFortXTrans.g:2614:1: rule__Import__Group_1__1 : rule__Import__Group_1__1__Impl rule__Import__Group_1__2 ;
    public final void rule__Import__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2618:1: ( rule__Import__Group_1__1__Impl rule__Import__Group_1__2 )
            // InternalFortXTrans.g:2619:2: rule__Import__Group_1__1__Impl rule__Import__Group_1__2
            {
            pushFollow(FOLLOW_12);
            rule__Import__Group_1__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Import__Group_1__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Import__Group_1__1"


    // $ANTLR start "rule__Import__Group_1__1__Impl"
    // InternalFortXTrans.g:2626:1: rule__Import__Group_1__1__Impl : ( ( rule__Import__ApiAssignment_1_1 ) ) ;
    public final void rule__Import__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2630:1: ( ( ( rule__Import__ApiAssignment_1_1 ) ) )
            // InternalFortXTrans.g:2631:1: ( ( rule__Import__ApiAssignment_1_1 ) )
            {
            // InternalFortXTrans.g:2631:1: ( ( rule__Import__ApiAssignment_1_1 ) )
            // InternalFortXTrans.g:2632:2: ( rule__Import__ApiAssignment_1_1 )
            {
             before(grammarAccess.getImportAccess().getApiAssignment_1_1()); 
            // InternalFortXTrans.g:2633:2: ( rule__Import__ApiAssignment_1_1 )
            // InternalFortXTrans.g:2633:3: rule__Import__ApiAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Import__ApiAssignment_1_1();

            state._fsp--;


            }

             after(grammarAccess.getImportAccess().getApiAssignment_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Import__Group_1__1__Impl"


    // $ANTLR start "rule__Import__Group_1__2"
    // InternalFortXTrans.g:2641:1: rule__Import__Group_1__2 : rule__Import__Group_1__2__Impl ;
    public final void rule__Import__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2645:1: ( rule__Import__Group_1__2__Impl )
            // InternalFortXTrans.g:2646:2: rule__Import__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Import__Group_1__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Import__Group_1__2"


    // $ANTLR start "rule__Import__Group_1__2__Impl"
    // InternalFortXTrans.g:2652:1: rule__Import__Group_1__2__Impl : ( ( rule__Import__AliasedimportedNamesAssignment_1_2 ) ) ;
    public final void rule__Import__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2656:1: ( ( ( rule__Import__AliasedimportedNamesAssignment_1_2 ) ) )
            // InternalFortXTrans.g:2657:1: ( ( rule__Import__AliasedimportedNamesAssignment_1_2 ) )
            {
            // InternalFortXTrans.g:2657:1: ( ( rule__Import__AliasedimportedNamesAssignment_1_2 ) )
            // InternalFortXTrans.g:2658:2: ( rule__Import__AliasedimportedNamesAssignment_1_2 )
            {
             before(grammarAccess.getImportAccess().getAliasedimportedNamesAssignment_1_2()); 
            // InternalFortXTrans.g:2659:2: ( rule__Import__AliasedimportedNamesAssignment_1_2 )
            // InternalFortXTrans.g:2659:3: rule__Import__AliasedimportedNamesAssignment_1_2
            {
            pushFollow(FOLLOW_2);
            rule__Import__AliasedimportedNamesAssignment_1_2();

            state._fsp--;


            }

             after(grammarAccess.getImportAccess().getAliasedimportedNamesAssignment_1_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Import__Group_1__2__Impl"


    // $ANTLR start "rule__Export__Group_0__0"
    // InternalFortXTrans.g:2668:1: rule__Export__Group_0__0 : rule__Export__Group_0__0__Impl rule__Export__Group_0__1 ;
    public final void rule__Export__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2672:1: ( rule__Export__Group_0__0__Impl rule__Export__Group_0__1 )
            // InternalFortXTrans.g:2673:2: rule__Export__Group_0__0__Impl rule__Export__Group_0__1
            {
            pushFollow(FOLLOW_5);
            rule__Export__Group_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Export__Group_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Export__Group_0__0"


    // $ANTLR start "rule__Export__Group_0__0__Impl"
    // InternalFortXTrans.g:2680:1: rule__Export__Group_0__0__Impl : ( ( rule__Export__ExpAssignment_0_0 ) ) ;
    public final void rule__Export__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2684:1: ( ( ( rule__Export__ExpAssignment_0_0 ) ) )
            // InternalFortXTrans.g:2685:1: ( ( rule__Export__ExpAssignment_0_0 ) )
            {
            // InternalFortXTrans.g:2685:1: ( ( rule__Export__ExpAssignment_0_0 ) )
            // InternalFortXTrans.g:2686:2: ( rule__Export__ExpAssignment_0_0 )
            {
             before(grammarAccess.getExportAccess().getExpAssignment_0_0()); 
            // InternalFortXTrans.g:2687:2: ( rule__Export__ExpAssignment_0_0 )
            // InternalFortXTrans.g:2687:3: rule__Export__ExpAssignment_0_0
            {
            pushFollow(FOLLOW_2);
            rule__Export__ExpAssignment_0_0();

            state._fsp--;


            }

             after(grammarAccess.getExportAccess().getExpAssignment_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Export__Group_0__0__Impl"


    // $ANTLR start "rule__Export__Group_0__1"
    // InternalFortXTrans.g:2695:1: rule__Export__Group_0__1 : rule__Export__Group_0__1__Impl ;
    public final void rule__Export__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2699:1: ( rule__Export__Group_0__1__Impl )
            // InternalFortXTrans.g:2700:2: rule__Export__Group_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Export__Group_0__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Export__Group_0__1"


    // $ANTLR start "rule__Export__Group_0__1__Impl"
    // InternalFortXTrans.g:2706:1: rule__Export__Group_0__1__Impl : ( ( rule__Export__ExportedNameAssignment_0_1 ) ) ;
    public final void rule__Export__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2710:1: ( ( ( rule__Export__ExportedNameAssignment_0_1 ) ) )
            // InternalFortXTrans.g:2711:1: ( ( rule__Export__ExportedNameAssignment_0_1 ) )
            {
            // InternalFortXTrans.g:2711:1: ( ( rule__Export__ExportedNameAssignment_0_1 ) )
            // InternalFortXTrans.g:2712:2: ( rule__Export__ExportedNameAssignment_0_1 )
            {
             before(grammarAccess.getExportAccess().getExportedNameAssignment_0_1()); 
            // InternalFortXTrans.g:2713:2: ( rule__Export__ExportedNameAssignment_0_1 )
            // InternalFortXTrans.g:2713:3: rule__Export__ExportedNameAssignment_0_1
            {
            pushFollow(FOLLOW_2);
            rule__Export__ExportedNameAssignment_0_1();

            state._fsp--;


            }

             after(grammarAccess.getExportAccess().getExportedNameAssignment_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Export__Group_0__1__Impl"


    // $ANTLR start "rule__Export__Group_1__0"
    // InternalFortXTrans.g:2722:1: rule__Export__Group_1__0 : rule__Export__Group_1__0__Impl rule__Export__Group_1__1 ;
    public final void rule__Export__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2726:1: ( rule__Export__Group_1__0__Impl rule__Export__Group_1__1 )
            // InternalFortXTrans.g:2727:2: rule__Export__Group_1__0__Impl rule__Export__Group_1__1
            {
            pushFollow(FOLLOW_13);
            rule__Export__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Export__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Export__Group_1__0"


    // $ANTLR start "rule__Export__Group_1__0__Impl"
    // InternalFortXTrans.g:2734:1: rule__Export__Group_1__0__Impl : ( ( rule__Export__ExpAssignment_1_0 ) ) ;
    public final void rule__Export__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2738:1: ( ( ( rule__Export__ExpAssignment_1_0 ) ) )
            // InternalFortXTrans.g:2739:1: ( ( rule__Export__ExpAssignment_1_0 ) )
            {
            // InternalFortXTrans.g:2739:1: ( ( rule__Export__ExpAssignment_1_0 ) )
            // InternalFortXTrans.g:2740:2: ( rule__Export__ExpAssignment_1_0 )
            {
             before(grammarAccess.getExportAccess().getExpAssignment_1_0()); 
            // InternalFortXTrans.g:2741:2: ( rule__Export__ExpAssignment_1_0 )
            // InternalFortXTrans.g:2741:3: rule__Export__ExpAssignment_1_0
            {
            pushFollow(FOLLOW_2);
            rule__Export__ExpAssignment_1_0();

            state._fsp--;


            }

             after(grammarAccess.getExportAccess().getExpAssignment_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Export__Group_1__0__Impl"


    // $ANTLR start "rule__Export__Group_1__1"
    // InternalFortXTrans.g:2749:1: rule__Export__Group_1__1 : rule__Export__Group_1__1__Impl rule__Export__Group_1__2 ;
    public final void rule__Export__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2753:1: ( rule__Export__Group_1__1__Impl rule__Export__Group_1__2 )
            // InternalFortXTrans.g:2754:2: rule__Export__Group_1__1__Impl rule__Export__Group_1__2
            {
            pushFollow(FOLLOW_5);
            rule__Export__Group_1__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Export__Group_1__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Export__Group_1__1"


    // $ANTLR start "rule__Export__Group_1__1__Impl"
    // InternalFortXTrans.g:2761:1: rule__Export__Group_1__1__Impl : ( ( rule__Export__BrackAssignment_1_1 ) ) ;
    public final void rule__Export__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2765:1: ( ( ( rule__Export__BrackAssignment_1_1 ) ) )
            // InternalFortXTrans.g:2766:1: ( ( rule__Export__BrackAssignment_1_1 ) )
            {
            // InternalFortXTrans.g:2766:1: ( ( rule__Export__BrackAssignment_1_1 ) )
            // InternalFortXTrans.g:2767:2: ( rule__Export__BrackAssignment_1_1 )
            {
             before(grammarAccess.getExportAccess().getBrackAssignment_1_1()); 
            // InternalFortXTrans.g:2768:2: ( rule__Export__BrackAssignment_1_1 )
            // InternalFortXTrans.g:2768:3: rule__Export__BrackAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Export__BrackAssignment_1_1();

            state._fsp--;


            }

             after(grammarAccess.getExportAccess().getBrackAssignment_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Export__Group_1__1__Impl"


    // $ANTLR start "rule__Export__Group_1__2"
    // InternalFortXTrans.g:2776:1: rule__Export__Group_1__2 : rule__Export__Group_1__2__Impl rule__Export__Group_1__3 ;
    public final void rule__Export__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2780:1: ( rule__Export__Group_1__2__Impl rule__Export__Group_1__3 )
            // InternalFortXTrans.g:2781:2: rule__Export__Group_1__2__Impl rule__Export__Group_1__3
            {
            pushFollow(FOLLOW_14);
            rule__Export__Group_1__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Export__Group_1__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Export__Group_1__2"


    // $ANTLR start "rule__Export__Group_1__2__Impl"
    // InternalFortXTrans.g:2788:1: rule__Export__Group_1__2__Impl : ( ( rule__Export__ExportedNameAssignment_1_2 ) ) ;
    public final void rule__Export__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2792:1: ( ( ( rule__Export__ExportedNameAssignment_1_2 ) ) )
            // InternalFortXTrans.g:2793:1: ( ( rule__Export__ExportedNameAssignment_1_2 ) )
            {
            // InternalFortXTrans.g:2793:1: ( ( rule__Export__ExportedNameAssignment_1_2 ) )
            // InternalFortXTrans.g:2794:2: ( rule__Export__ExportedNameAssignment_1_2 )
            {
             before(grammarAccess.getExportAccess().getExportedNameAssignment_1_2()); 
            // InternalFortXTrans.g:2795:2: ( rule__Export__ExportedNameAssignment_1_2 )
            // InternalFortXTrans.g:2795:3: rule__Export__ExportedNameAssignment_1_2
            {
            pushFollow(FOLLOW_2);
            rule__Export__ExportedNameAssignment_1_2();

            state._fsp--;


            }

             after(grammarAccess.getExportAccess().getExportedNameAssignment_1_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Export__Group_1__2__Impl"


    // $ANTLR start "rule__Export__Group_1__3"
    // InternalFortXTrans.g:2803:1: rule__Export__Group_1__3 : rule__Export__Group_1__3__Impl rule__Export__Group_1__4 ;
    public final void rule__Export__Group_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2807:1: ( rule__Export__Group_1__3__Impl rule__Export__Group_1__4 )
            // InternalFortXTrans.g:2808:2: rule__Export__Group_1__3__Impl rule__Export__Group_1__4
            {
            pushFollow(FOLLOW_14);
            rule__Export__Group_1__3__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Export__Group_1__4();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Export__Group_1__3"


    // $ANTLR start "rule__Export__Group_1__3__Impl"
    // InternalFortXTrans.g:2815:1: rule__Export__Group_1__3__Impl : ( ( rule__Export__Group_1_3__0 )* ) ;
    public final void rule__Export__Group_1__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2819:1: ( ( ( rule__Export__Group_1_3__0 )* ) )
            // InternalFortXTrans.g:2820:1: ( ( rule__Export__Group_1_3__0 )* )
            {
            // InternalFortXTrans.g:2820:1: ( ( rule__Export__Group_1_3__0 )* )
            // InternalFortXTrans.g:2821:2: ( rule__Export__Group_1_3__0 )*
            {
             before(grammarAccess.getExportAccess().getGroup_1_3()); 
            // InternalFortXTrans.g:2822:2: ( rule__Export__Group_1_3__0 )*
            loop33:
            do {
                int alt33=2;
                int LA33_0 = input.LA(1);

                if ( (LA33_0==29) ) {
                    alt33=1;
                }


                switch (alt33) {
            	case 1 :
            	    // InternalFortXTrans.g:2822:3: rule__Export__Group_1_3__0
            	    {
            	    pushFollow(FOLLOW_15);
            	    rule__Export__Group_1_3__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop33;
                }
            } while (true);

             after(grammarAccess.getExportAccess().getGroup_1_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Export__Group_1__3__Impl"


    // $ANTLR start "rule__Export__Group_1__4"
    // InternalFortXTrans.g:2830:1: rule__Export__Group_1__4 : rule__Export__Group_1__4__Impl ;
    public final void rule__Export__Group_1__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2834:1: ( rule__Export__Group_1__4__Impl )
            // InternalFortXTrans.g:2835:2: rule__Export__Group_1__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Export__Group_1__4__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Export__Group_1__4"


    // $ANTLR start "rule__Export__Group_1__4__Impl"
    // InternalFortXTrans.g:2841:1: rule__Export__Group_1__4__Impl : ( '}' ) ;
    public final void rule__Export__Group_1__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2845:1: ( ( '}' ) )
            // InternalFortXTrans.g:2846:1: ( '}' )
            {
            // InternalFortXTrans.g:2846:1: ( '}' )
            // InternalFortXTrans.g:2847:2: '}'
            {
             before(grammarAccess.getExportAccess().getRightCurlyBracketKeyword_1_4()); 
            match(input,28,FOLLOW_2); 
             after(grammarAccess.getExportAccess().getRightCurlyBracketKeyword_1_4()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Export__Group_1__4__Impl"


    // $ANTLR start "rule__Export__Group_1_3__0"
    // InternalFortXTrans.g:2857:1: rule__Export__Group_1_3__0 : rule__Export__Group_1_3__0__Impl rule__Export__Group_1_3__1 ;
    public final void rule__Export__Group_1_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2861:1: ( rule__Export__Group_1_3__0__Impl rule__Export__Group_1_3__1 )
            // InternalFortXTrans.g:2862:2: rule__Export__Group_1_3__0__Impl rule__Export__Group_1_3__1
            {
            pushFollow(FOLLOW_5);
            rule__Export__Group_1_3__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Export__Group_1_3__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Export__Group_1_3__0"


    // $ANTLR start "rule__Export__Group_1_3__0__Impl"
    // InternalFortXTrans.g:2869:1: rule__Export__Group_1_3__0__Impl : ( ',' ) ;
    public final void rule__Export__Group_1_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2873:1: ( ( ',' ) )
            // InternalFortXTrans.g:2874:1: ( ',' )
            {
            // InternalFortXTrans.g:2874:1: ( ',' )
            // InternalFortXTrans.g:2875:2: ','
            {
             before(grammarAccess.getExportAccess().getCommaKeyword_1_3_0()); 
            match(input,29,FOLLOW_2); 
             after(grammarAccess.getExportAccess().getCommaKeyword_1_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Export__Group_1_3__0__Impl"


    // $ANTLR start "rule__Export__Group_1_3__1"
    // InternalFortXTrans.g:2884:1: rule__Export__Group_1_3__1 : rule__Export__Group_1_3__1__Impl ;
    public final void rule__Export__Group_1_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2888:1: ( rule__Export__Group_1_3__1__Impl )
            // InternalFortXTrans.g:2889:2: rule__Export__Group_1_3__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Export__Group_1_3__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Export__Group_1_3__1"


    // $ANTLR start "rule__Export__Group_1_3__1__Impl"
    // InternalFortXTrans.g:2895:1: rule__Export__Group_1_3__1__Impl : ( ( rule__Export__ExportedNameAssignment_1_3_1 ) ) ;
    public final void rule__Export__Group_1_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2899:1: ( ( ( rule__Export__ExportedNameAssignment_1_3_1 ) ) )
            // InternalFortXTrans.g:2900:1: ( ( rule__Export__ExportedNameAssignment_1_3_1 ) )
            {
            // InternalFortXTrans.g:2900:1: ( ( rule__Export__ExportedNameAssignment_1_3_1 ) )
            // InternalFortXTrans.g:2901:2: ( rule__Export__ExportedNameAssignment_1_3_1 )
            {
             before(grammarAccess.getExportAccess().getExportedNameAssignment_1_3_1()); 
            // InternalFortXTrans.g:2902:2: ( rule__Export__ExportedNameAssignment_1_3_1 )
            // InternalFortXTrans.g:2902:3: rule__Export__ExportedNameAssignment_1_3_1
            {
            pushFollow(FOLLOW_2);
            rule__Export__ExportedNameAssignment_1_3_1();

            state._fsp--;


            }

             after(grammarAccess.getExportAccess().getExportedNameAssignment_1_3_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Export__Group_1_3__1__Impl"


    // $ANTLR start "rule__ImportedNames__Group_0__0"
    // InternalFortXTrans.g:2911:1: rule__ImportedNames__Group_0__0 : rule__ImportedNames__Group_0__0__Impl rule__ImportedNames__Group_0__1 ;
    public final void rule__ImportedNames__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2915:1: ( rule__ImportedNames__Group_0__0__Impl rule__ImportedNames__Group_0__1 )
            // InternalFortXTrans.g:2916:2: rule__ImportedNames__Group_0__0__Impl rule__ImportedNames__Group_0__1
            {
            pushFollow(FOLLOW_16);
            rule__ImportedNames__Group_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ImportedNames__Group_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_0__0"


    // $ANTLR start "rule__ImportedNames__Group_0__0__Impl"
    // InternalFortXTrans.g:2923:1: rule__ImportedNames__Group_0__0__Impl : ( ( rule__ImportedNames__ImpnameAssignment_0_0 ) ) ;
    public final void rule__ImportedNames__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2927:1: ( ( ( rule__ImportedNames__ImpnameAssignment_0_0 ) ) )
            // InternalFortXTrans.g:2928:1: ( ( rule__ImportedNames__ImpnameAssignment_0_0 ) )
            {
            // InternalFortXTrans.g:2928:1: ( ( rule__ImportedNames__ImpnameAssignment_0_0 ) )
            // InternalFortXTrans.g:2929:2: ( rule__ImportedNames__ImpnameAssignment_0_0 )
            {
             before(grammarAccess.getImportedNamesAccess().getImpnameAssignment_0_0()); 
            // InternalFortXTrans.g:2930:2: ( rule__ImportedNames__ImpnameAssignment_0_0 )
            // InternalFortXTrans.g:2930:3: rule__ImportedNames__ImpnameAssignment_0_0
            {
            pushFollow(FOLLOW_2);
            rule__ImportedNames__ImpnameAssignment_0_0();

            state._fsp--;


            }

             after(grammarAccess.getImportedNamesAccess().getImpnameAssignment_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_0__0__Impl"


    // $ANTLR start "rule__ImportedNames__Group_0__1"
    // InternalFortXTrans.g:2938:1: rule__ImportedNames__Group_0__1 : rule__ImportedNames__Group_0__1__Impl rule__ImportedNames__Group_0__2 ;
    public final void rule__ImportedNames__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2942:1: ( rule__ImportedNames__Group_0__1__Impl rule__ImportedNames__Group_0__2 )
            // InternalFortXTrans.g:2943:2: rule__ImportedNames__Group_0__1__Impl rule__ImportedNames__Group_0__2
            {
            pushFollow(FOLLOW_13);
            rule__ImportedNames__Group_0__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ImportedNames__Group_0__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_0__1"


    // $ANTLR start "rule__ImportedNames__Group_0__1__Impl"
    // InternalFortXTrans.g:2950:1: rule__ImportedNames__Group_0__1__Impl : ( '.' ) ;
    public final void rule__ImportedNames__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2954:1: ( ( '.' ) )
            // InternalFortXTrans.g:2955:1: ( '.' )
            {
            // InternalFortXTrans.g:2955:1: ( '.' )
            // InternalFortXTrans.g:2956:2: '.'
            {
             before(grammarAccess.getImportedNamesAccess().getFullStopKeyword_0_1()); 
            match(input,30,FOLLOW_2); 
             after(grammarAccess.getImportedNamesAccess().getFullStopKeyword_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_0__1__Impl"


    // $ANTLR start "rule__ImportedNames__Group_0__2"
    // InternalFortXTrans.g:2965:1: rule__ImportedNames__Group_0__2 : rule__ImportedNames__Group_0__2__Impl rule__ImportedNames__Group_0__3 ;
    public final void rule__ImportedNames__Group_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2969:1: ( rule__ImportedNames__Group_0__2__Impl rule__ImportedNames__Group_0__3 )
            // InternalFortXTrans.g:2970:2: rule__ImportedNames__Group_0__2__Impl rule__ImportedNames__Group_0__3
            {
            pushFollow(FOLLOW_17);
            rule__ImportedNames__Group_0__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ImportedNames__Group_0__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_0__2"


    // $ANTLR start "rule__ImportedNames__Group_0__2__Impl"
    // InternalFortXTrans.g:2977:1: rule__ImportedNames__Group_0__2__Impl : ( '{' ) ;
    public final void rule__ImportedNames__Group_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2981:1: ( ( '{' ) )
            // InternalFortXTrans.g:2982:1: ( '{' )
            {
            // InternalFortXTrans.g:2982:1: ( '{' )
            // InternalFortXTrans.g:2983:2: '{'
            {
             before(grammarAccess.getImportedNamesAccess().getLeftCurlyBracketKeyword_0_2()); 
            match(input,31,FOLLOW_2); 
             after(grammarAccess.getImportedNamesAccess().getLeftCurlyBracketKeyword_0_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_0__2__Impl"


    // $ANTLR start "rule__ImportedNames__Group_0__3"
    // InternalFortXTrans.g:2992:1: rule__ImportedNames__Group_0__3 : rule__ImportedNames__Group_0__3__Impl rule__ImportedNames__Group_0__4 ;
    public final void rule__ImportedNames__Group_0__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2996:1: ( rule__ImportedNames__Group_0__3__Impl rule__ImportedNames__Group_0__4 )
            // InternalFortXTrans.g:2997:2: rule__ImportedNames__Group_0__3__Impl rule__ImportedNames__Group_0__4
            {
            pushFollow(FOLLOW_18);
            rule__ImportedNames__Group_0__3__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ImportedNames__Group_0__4();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_0__3"


    // $ANTLR start "rule__ImportedNames__Group_0__3__Impl"
    // InternalFortXTrans.g:3004:1: rule__ImportedNames__Group_0__3__Impl : ( RULE_DOTS ) ;
    public final void rule__ImportedNames__Group_0__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3008:1: ( ( RULE_DOTS ) )
            // InternalFortXTrans.g:3009:1: ( RULE_DOTS )
            {
            // InternalFortXTrans.g:3009:1: ( RULE_DOTS )
            // InternalFortXTrans.g:3010:2: RULE_DOTS
            {
             before(grammarAccess.getImportedNamesAccess().getDOTSTerminalRuleCall_0_3()); 
            match(input,RULE_DOTS,FOLLOW_2); 
             after(grammarAccess.getImportedNamesAccess().getDOTSTerminalRuleCall_0_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_0__3__Impl"


    // $ANTLR start "rule__ImportedNames__Group_0__4"
    // InternalFortXTrans.g:3019:1: rule__ImportedNames__Group_0__4 : rule__ImportedNames__Group_0__4__Impl rule__ImportedNames__Group_0__5 ;
    public final void rule__ImportedNames__Group_0__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3023:1: ( rule__ImportedNames__Group_0__4__Impl rule__ImportedNames__Group_0__5 )
            // InternalFortXTrans.g:3024:2: rule__ImportedNames__Group_0__4__Impl rule__ImportedNames__Group_0__5
            {
            pushFollow(FOLLOW_19);
            rule__ImportedNames__Group_0__4__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ImportedNames__Group_0__5();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_0__4"


    // $ANTLR start "rule__ImportedNames__Group_0__4__Impl"
    // InternalFortXTrans.g:3031:1: rule__ImportedNames__Group_0__4__Impl : ( '}' ) ;
    public final void rule__ImportedNames__Group_0__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3035:1: ( ( '}' ) )
            // InternalFortXTrans.g:3036:1: ( '}' )
            {
            // InternalFortXTrans.g:3036:1: ( '}' )
            // InternalFortXTrans.g:3037:2: '}'
            {
             before(grammarAccess.getImportedNamesAccess().getRightCurlyBracketKeyword_0_4()); 
            match(input,28,FOLLOW_2); 
             after(grammarAccess.getImportedNamesAccess().getRightCurlyBracketKeyword_0_4()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_0__4__Impl"


    // $ANTLR start "rule__ImportedNames__Group_0__5"
    // InternalFortXTrans.g:3046:1: rule__ImportedNames__Group_0__5 : rule__ImportedNames__Group_0__5__Impl ;
    public final void rule__ImportedNames__Group_0__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3050:1: ( rule__ImportedNames__Group_0__5__Impl )
            // InternalFortXTrans.g:3051:2: rule__ImportedNames__Group_0__5__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ImportedNames__Group_0__5__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_0__5"


    // $ANTLR start "rule__ImportedNames__Group_0__5__Impl"
    // InternalFortXTrans.g:3057:1: rule__ImportedNames__Group_0__5__Impl : ( ( rule__ImportedNames__Group_0_5__0 )? ) ;
    public final void rule__ImportedNames__Group_0__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3061:1: ( ( ( rule__ImportedNames__Group_0_5__0 )? ) )
            // InternalFortXTrans.g:3062:1: ( ( rule__ImportedNames__Group_0_5__0 )? )
            {
            // InternalFortXTrans.g:3062:1: ( ( rule__ImportedNames__Group_0_5__0 )? )
            // InternalFortXTrans.g:3063:2: ( rule__ImportedNames__Group_0_5__0 )?
            {
             before(grammarAccess.getImportedNamesAccess().getGroup_0_5()); 
            // InternalFortXTrans.g:3064:2: ( rule__ImportedNames__Group_0_5__0 )?
            int alt34=2;
            int LA34_0 = input.LA(1);

            if ( (LA34_0==61) ) {
                alt34=1;
            }
            switch (alt34) {
                case 1 :
                    // InternalFortXTrans.g:3064:3: rule__ImportedNames__Group_0_5__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ImportedNames__Group_0_5__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getImportedNamesAccess().getGroup_0_5()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_0__5__Impl"


    // $ANTLR start "rule__ImportedNames__Group_0_5__0"
    // InternalFortXTrans.g:3073:1: rule__ImportedNames__Group_0_5__0 : rule__ImportedNames__Group_0_5__0__Impl rule__ImportedNames__Group_0_5__1 ;
    public final void rule__ImportedNames__Group_0_5__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3077:1: ( rule__ImportedNames__Group_0_5__0__Impl rule__ImportedNames__Group_0_5__1 )
            // InternalFortXTrans.g:3078:2: rule__ImportedNames__Group_0_5__0__Impl rule__ImportedNames__Group_0_5__1
            {
            pushFollow(FOLLOW_12);
            rule__ImportedNames__Group_0_5__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ImportedNames__Group_0_5__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_0_5__0"


    // $ANTLR start "rule__ImportedNames__Group_0_5__0__Impl"
    // InternalFortXTrans.g:3085:1: rule__ImportedNames__Group_0_5__0__Impl : ( ( rule__ImportedNames__ExceptAssignment_0_5_0 ) ) ;
    public final void rule__ImportedNames__Group_0_5__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3089:1: ( ( ( rule__ImportedNames__ExceptAssignment_0_5_0 ) ) )
            // InternalFortXTrans.g:3090:1: ( ( rule__ImportedNames__ExceptAssignment_0_5_0 ) )
            {
            // InternalFortXTrans.g:3090:1: ( ( rule__ImportedNames__ExceptAssignment_0_5_0 ) )
            // InternalFortXTrans.g:3091:2: ( rule__ImportedNames__ExceptAssignment_0_5_0 )
            {
             before(grammarAccess.getImportedNamesAccess().getExceptAssignment_0_5_0()); 
            // InternalFortXTrans.g:3092:2: ( rule__ImportedNames__ExceptAssignment_0_5_0 )
            // InternalFortXTrans.g:3092:3: rule__ImportedNames__ExceptAssignment_0_5_0
            {
            pushFollow(FOLLOW_2);
            rule__ImportedNames__ExceptAssignment_0_5_0();

            state._fsp--;


            }

             after(grammarAccess.getImportedNamesAccess().getExceptAssignment_0_5_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_0_5__0__Impl"


    // $ANTLR start "rule__ImportedNames__Group_0_5__1"
    // InternalFortXTrans.g:3100:1: rule__ImportedNames__Group_0_5__1 : rule__ImportedNames__Group_0_5__1__Impl ;
    public final void rule__ImportedNames__Group_0_5__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3104:1: ( rule__ImportedNames__Group_0_5__1__Impl )
            // InternalFortXTrans.g:3105:2: rule__ImportedNames__Group_0_5__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ImportedNames__Group_0_5__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_0_5__1"


    // $ANTLR start "rule__ImportedNames__Group_0_5__1__Impl"
    // InternalFortXTrans.g:3111:1: rule__ImportedNames__Group_0_5__1__Impl : ( ( rule__ImportedNames__SimpAssignment_0_5_1 ) ) ;
    public final void rule__ImportedNames__Group_0_5__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3115:1: ( ( ( rule__ImportedNames__SimpAssignment_0_5_1 ) ) )
            // InternalFortXTrans.g:3116:1: ( ( rule__ImportedNames__SimpAssignment_0_5_1 ) )
            {
            // InternalFortXTrans.g:3116:1: ( ( rule__ImportedNames__SimpAssignment_0_5_1 ) )
            // InternalFortXTrans.g:3117:2: ( rule__ImportedNames__SimpAssignment_0_5_1 )
            {
             before(grammarAccess.getImportedNamesAccess().getSimpAssignment_0_5_1()); 
            // InternalFortXTrans.g:3118:2: ( rule__ImportedNames__SimpAssignment_0_5_1 )
            // InternalFortXTrans.g:3118:3: rule__ImportedNames__SimpAssignment_0_5_1
            {
            pushFollow(FOLLOW_2);
            rule__ImportedNames__SimpAssignment_0_5_1();

            state._fsp--;


            }

             after(grammarAccess.getImportedNamesAccess().getSimpAssignment_0_5_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_0_5__1__Impl"


    // $ANTLR start "rule__ImportedNames__Group_1__0"
    // InternalFortXTrans.g:3127:1: rule__ImportedNames__Group_1__0 : rule__ImportedNames__Group_1__0__Impl rule__ImportedNames__Group_1__1 ;
    public final void rule__ImportedNames__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3131:1: ( rule__ImportedNames__Group_1__0__Impl rule__ImportedNames__Group_1__1 )
            // InternalFortXTrans.g:3132:2: rule__ImportedNames__Group_1__0__Impl rule__ImportedNames__Group_1__1
            {
            pushFollow(FOLLOW_16);
            rule__ImportedNames__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ImportedNames__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_1__0"


    // $ANTLR start "rule__ImportedNames__Group_1__0__Impl"
    // InternalFortXTrans.g:3139:1: rule__ImportedNames__Group_1__0__Impl : ( ( rule__ImportedNames__ImpnameAssignment_1_0 ) ) ;
    public final void rule__ImportedNames__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3143:1: ( ( ( rule__ImportedNames__ImpnameAssignment_1_0 ) ) )
            // InternalFortXTrans.g:3144:1: ( ( rule__ImportedNames__ImpnameAssignment_1_0 ) )
            {
            // InternalFortXTrans.g:3144:1: ( ( rule__ImportedNames__ImpnameAssignment_1_0 ) )
            // InternalFortXTrans.g:3145:2: ( rule__ImportedNames__ImpnameAssignment_1_0 )
            {
             before(grammarAccess.getImportedNamesAccess().getImpnameAssignment_1_0()); 
            // InternalFortXTrans.g:3146:2: ( rule__ImportedNames__ImpnameAssignment_1_0 )
            // InternalFortXTrans.g:3146:3: rule__ImportedNames__ImpnameAssignment_1_0
            {
            pushFollow(FOLLOW_2);
            rule__ImportedNames__ImpnameAssignment_1_0();

            state._fsp--;


            }

             after(grammarAccess.getImportedNamesAccess().getImpnameAssignment_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_1__0__Impl"


    // $ANTLR start "rule__ImportedNames__Group_1__1"
    // InternalFortXTrans.g:3154:1: rule__ImportedNames__Group_1__1 : rule__ImportedNames__Group_1__1__Impl rule__ImportedNames__Group_1__2 ;
    public final void rule__ImportedNames__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3158:1: ( rule__ImportedNames__Group_1__1__Impl rule__ImportedNames__Group_1__2 )
            // InternalFortXTrans.g:3159:2: rule__ImportedNames__Group_1__1__Impl rule__ImportedNames__Group_1__2
            {
            pushFollow(FOLLOW_13);
            rule__ImportedNames__Group_1__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ImportedNames__Group_1__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_1__1"


    // $ANTLR start "rule__ImportedNames__Group_1__1__Impl"
    // InternalFortXTrans.g:3166:1: rule__ImportedNames__Group_1__1__Impl : ( '.' ) ;
    public final void rule__ImportedNames__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3170:1: ( ( '.' ) )
            // InternalFortXTrans.g:3171:1: ( '.' )
            {
            // InternalFortXTrans.g:3171:1: ( '.' )
            // InternalFortXTrans.g:3172:2: '.'
            {
             before(grammarAccess.getImportedNamesAccess().getFullStopKeyword_1_1()); 
            match(input,30,FOLLOW_2); 
             after(grammarAccess.getImportedNamesAccess().getFullStopKeyword_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_1__1__Impl"


    // $ANTLR start "rule__ImportedNames__Group_1__2"
    // InternalFortXTrans.g:3181:1: rule__ImportedNames__Group_1__2 : rule__ImportedNames__Group_1__2__Impl rule__ImportedNames__Group_1__3 ;
    public final void rule__ImportedNames__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3185:1: ( rule__ImportedNames__Group_1__2__Impl rule__ImportedNames__Group_1__3 )
            // InternalFortXTrans.g:3186:2: rule__ImportedNames__Group_1__2__Impl rule__ImportedNames__Group_1__3
            {
            pushFollow(FOLLOW_5);
            rule__ImportedNames__Group_1__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ImportedNames__Group_1__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_1__2"


    // $ANTLR start "rule__ImportedNames__Group_1__2__Impl"
    // InternalFortXTrans.g:3193:1: rule__ImportedNames__Group_1__2__Impl : ( '{' ) ;
    public final void rule__ImportedNames__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3197:1: ( ( '{' ) )
            // InternalFortXTrans.g:3198:1: ( '{' )
            {
            // InternalFortXTrans.g:3198:1: ( '{' )
            // InternalFortXTrans.g:3199:2: '{'
            {
             before(grammarAccess.getImportedNamesAccess().getLeftCurlyBracketKeyword_1_2()); 
            match(input,31,FOLLOW_2); 
             after(grammarAccess.getImportedNamesAccess().getLeftCurlyBracketKeyword_1_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_1__2__Impl"


    // $ANTLR start "rule__ImportedNames__Group_1__3"
    // InternalFortXTrans.g:3208:1: rule__ImportedNames__Group_1__3 : rule__ImportedNames__Group_1__3__Impl rule__ImportedNames__Group_1__4 ;
    public final void rule__ImportedNames__Group_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3212:1: ( rule__ImportedNames__Group_1__3__Impl rule__ImportedNames__Group_1__4 )
            // InternalFortXTrans.g:3213:2: rule__ImportedNames__Group_1__3__Impl rule__ImportedNames__Group_1__4
            {
            pushFollow(FOLLOW_14);
            rule__ImportedNames__Group_1__3__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ImportedNames__Group_1__4();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_1__3"


    // $ANTLR start "rule__ImportedNames__Group_1__3__Impl"
    // InternalFortXTrans.g:3220:1: rule__ImportedNames__Group_1__3__Impl : ( ( rule__ImportedNames__SimpListAssignment_1_3 ) ) ;
    public final void rule__ImportedNames__Group_1__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3224:1: ( ( ( rule__ImportedNames__SimpListAssignment_1_3 ) ) )
            // InternalFortXTrans.g:3225:1: ( ( rule__ImportedNames__SimpListAssignment_1_3 ) )
            {
            // InternalFortXTrans.g:3225:1: ( ( rule__ImportedNames__SimpListAssignment_1_3 ) )
            // InternalFortXTrans.g:3226:2: ( rule__ImportedNames__SimpListAssignment_1_3 )
            {
             before(grammarAccess.getImportedNamesAccess().getSimpListAssignment_1_3()); 
            // InternalFortXTrans.g:3227:2: ( rule__ImportedNames__SimpListAssignment_1_3 )
            // InternalFortXTrans.g:3227:3: rule__ImportedNames__SimpListAssignment_1_3
            {
            pushFollow(FOLLOW_2);
            rule__ImportedNames__SimpListAssignment_1_3();

            state._fsp--;


            }

             after(grammarAccess.getImportedNamesAccess().getSimpListAssignment_1_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_1__3__Impl"


    // $ANTLR start "rule__ImportedNames__Group_1__4"
    // InternalFortXTrans.g:3235:1: rule__ImportedNames__Group_1__4 : rule__ImportedNames__Group_1__4__Impl rule__ImportedNames__Group_1__5 ;
    public final void rule__ImportedNames__Group_1__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3239:1: ( rule__ImportedNames__Group_1__4__Impl rule__ImportedNames__Group_1__5 )
            // InternalFortXTrans.g:3240:2: rule__ImportedNames__Group_1__4__Impl rule__ImportedNames__Group_1__5
            {
            pushFollow(FOLLOW_14);
            rule__ImportedNames__Group_1__4__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ImportedNames__Group_1__5();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_1__4"


    // $ANTLR start "rule__ImportedNames__Group_1__4__Impl"
    // InternalFortXTrans.g:3247:1: rule__ImportedNames__Group_1__4__Impl : ( ( rule__ImportedNames__Group_1_4__0 )* ) ;
    public final void rule__ImportedNames__Group_1__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3251:1: ( ( ( rule__ImportedNames__Group_1_4__0 )* ) )
            // InternalFortXTrans.g:3252:1: ( ( rule__ImportedNames__Group_1_4__0 )* )
            {
            // InternalFortXTrans.g:3252:1: ( ( rule__ImportedNames__Group_1_4__0 )* )
            // InternalFortXTrans.g:3253:2: ( rule__ImportedNames__Group_1_4__0 )*
            {
             before(grammarAccess.getImportedNamesAccess().getGroup_1_4()); 
            // InternalFortXTrans.g:3254:2: ( rule__ImportedNames__Group_1_4__0 )*
            loop35:
            do {
                int alt35=2;
                int LA35_0 = input.LA(1);

                if ( (LA35_0==29) ) {
                    int LA35_1 = input.LA(2);

                    if ( (LA35_1==RULE_ID) ) {
                        alt35=1;
                    }


                }


                switch (alt35) {
            	case 1 :
            	    // InternalFortXTrans.g:3254:3: rule__ImportedNames__Group_1_4__0
            	    {
            	    pushFollow(FOLLOW_15);
            	    rule__ImportedNames__Group_1_4__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop35;
                }
            } while (true);

             after(grammarAccess.getImportedNamesAccess().getGroup_1_4()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_1__4__Impl"


    // $ANTLR start "rule__ImportedNames__Group_1__5"
    // InternalFortXTrans.g:3262:1: rule__ImportedNames__Group_1__5 : rule__ImportedNames__Group_1__5__Impl rule__ImportedNames__Group_1__6 ;
    public final void rule__ImportedNames__Group_1__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3266:1: ( rule__ImportedNames__Group_1__5__Impl rule__ImportedNames__Group_1__6 )
            // InternalFortXTrans.g:3267:2: rule__ImportedNames__Group_1__5__Impl rule__ImportedNames__Group_1__6
            {
            pushFollow(FOLLOW_14);
            rule__ImportedNames__Group_1__5__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ImportedNames__Group_1__6();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_1__5"


    // $ANTLR start "rule__ImportedNames__Group_1__5__Impl"
    // InternalFortXTrans.g:3274:1: rule__ImportedNames__Group_1__5__Impl : ( ( rule__ImportedNames__Group_1_5__0 )? ) ;
    public final void rule__ImportedNames__Group_1__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3278:1: ( ( ( rule__ImportedNames__Group_1_5__0 )? ) )
            // InternalFortXTrans.g:3279:1: ( ( rule__ImportedNames__Group_1_5__0 )? )
            {
            // InternalFortXTrans.g:3279:1: ( ( rule__ImportedNames__Group_1_5__0 )? )
            // InternalFortXTrans.g:3280:2: ( rule__ImportedNames__Group_1_5__0 )?
            {
             before(grammarAccess.getImportedNamesAccess().getGroup_1_5()); 
            // InternalFortXTrans.g:3281:2: ( rule__ImportedNames__Group_1_5__0 )?
            int alt36=2;
            int LA36_0 = input.LA(1);

            if ( (LA36_0==29) ) {
                alt36=1;
            }
            switch (alt36) {
                case 1 :
                    // InternalFortXTrans.g:3281:3: rule__ImportedNames__Group_1_5__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ImportedNames__Group_1_5__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getImportedNamesAccess().getGroup_1_5()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_1__5__Impl"


    // $ANTLR start "rule__ImportedNames__Group_1__6"
    // InternalFortXTrans.g:3289:1: rule__ImportedNames__Group_1__6 : rule__ImportedNames__Group_1__6__Impl ;
    public final void rule__ImportedNames__Group_1__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3293:1: ( rule__ImportedNames__Group_1__6__Impl )
            // InternalFortXTrans.g:3294:2: rule__ImportedNames__Group_1__6__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ImportedNames__Group_1__6__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_1__6"


    // $ANTLR start "rule__ImportedNames__Group_1__6__Impl"
    // InternalFortXTrans.g:3300:1: rule__ImportedNames__Group_1__6__Impl : ( '}' ) ;
    public final void rule__ImportedNames__Group_1__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3304:1: ( ( '}' ) )
            // InternalFortXTrans.g:3305:1: ( '}' )
            {
            // InternalFortXTrans.g:3305:1: ( '}' )
            // InternalFortXTrans.g:3306:2: '}'
            {
             before(grammarAccess.getImportedNamesAccess().getRightCurlyBracketKeyword_1_6()); 
            match(input,28,FOLLOW_2); 
             after(grammarAccess.getImportedNamesAccess().getRightCurlyBracketKeyword_1_6()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_1__6__Impl"


    // $ANTLR start "rule__ImportedNames__Group_1_4__0"
    // InternalFortXTrans.g:3316:1: rule__ImportedNames__Group_1_4__0 : rule__ImportedNames__Group_1_4__0__Impl rule__ImportedNames__Group_1_4__1 ;
    public final void rule__ImportedNames__Group_1_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3320:1: ( rule__ImportedNames__Group_1_4__0__Impl rule__ImportedNames__Group_1_4__1 )
            // InternalFortXTrans.g:3321:2: rule__ImportedNames__Group_1_4__0__Impl rule__ImportedNames__Group_1_4__1
            {
            pushFollow(FOLLOW_5);
            rule__ImportedNames__Group_1_4__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ImportedNames__Group_1_4__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_1_4__0"


    // $ANTLR start "rule__ImportedNames__Group_1_4__0__Impl"
    // InternalFortXTrans.g:3328:1: rule__ImportedNames__Group_1_4__0__Impl : ( ',' ) ;
    public final void rule__ImportedNames__Group_1_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3332:1: ( ( ',' ) )
            // InternalFortXTrans.g:3333:1: ( ',' )
            {
            // InternalFortXTrans.g:3333:1: ( ',' )
            // InternalFortXTrans.g:3334:2: ','
            {
             before(grammarAccess.getImportedNamesAccess().getCommaKeyword_1_4_0()); 
            match(input,29,FOLLOW_2); 
             after(grammarAccess.getImportedNamesAccess().getCommaKeyword_1_4_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_1_4__0__Impl"


    // $ANTLR start "rule__ImportedNames__Group_1_4__1"
    // InternalFortXTrans.g:3343:1: rule__ImportedNames__Group_1_4__1 : rule__ImportedNames__Group_1_4__1__Impl ;
    public final void rule__ImportedNames__Group_1_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3347:1: ( rule__ImportedNames__Group_1_4__1__Impl )
            // InternalFortXTrans.g:3348:2: rule__ImportedNames__Group_1_4__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ImportedNames__Group_1_4__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_1_4__1"


    // $ANTLR start "rule__ImportedNames__Group_1_4__1__Impl"
    // InternalFortXTrans.g:3354:1: rule__ImportedNames__Group_1_4__1__Impl : ( ( rule__ImportedNames__SimpListAssignment_1_4_1 ) ) ;
    public final void rule__ImportedNames__Group_1_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3358:1: ( ( ( rule__ImportedNames__SimpListAssignment_1_4_1 ) ) )
            // InternalFortXTrans.g:3359:1: ( ( rule__ImportedNames__SimpListAssignment_1_4_1 ) )
            {
            // InternalFortXTrans.g:3359:1: ( ( rule__ImportedNames__SimpListAssignment_1_4_1 ) )
            // InternalFortXTrans.g:3360:2: ( rule__ImportedNames__SimpListAssignment_1_4_1 )
            {
             before(grammarAccess.getImportedNamesAccess().getSimpListAssignment_1_4_1()); 
            // InternalFortXTrans.g:3361:2: ( rule__ImportedNames__SimpListAssignment_1_4_1 )
            // InternalFortXTrans.g:3361:3: rule__ImportedNames__SimpListAssignment_1_4_1
            {
            pushFollow(FOLLOW_2);
            rule__ImportedNames__SimpListAssignment_1_4_1();

            state._fsp--;


            }

             after(grammarAccess.getImportedNamesAccess().getSimpListAssignment_1_4_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_1_4__1__Impl"


    // $ANTLR start "rule__ImportedNames__Group_1_5__0"
    // InternalFortXTrans.g:3370:1: rule__ImportedNames__Group_1_5__0 : rule__ImportedNames__Group_1_5__0__Impl rule__ImportedNames__Group_1_5__1 ;
    public final void rule__ImportedNames__Group_1_5__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3374:1: ( rule__ImportedNames__Group_1_5__0__Impl rule__ImportedNames__Group_1_5__1 )
            // InternalFortXTrans.g:3375:2: rule__ImportedNames__Group_1_5__0__Impl rule__ImportedNames__Group_1_5__1
            {
            pushFollow(FOLLOW_17);
            rule__ImportedNames__Group_1_5__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ImportedNames__Group_1_5__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_1_5__0"


    // $ANTLR start "rule__ImportedNames__Group_1_5__0__Impl"
    // InternalFortXTrans.g:3382:1: rule__ImportedNames__Group_1_5__0__Impl : ( ( rule__ImportedNames__CommaAssignment_1_5_0 ) ) ;
    public final void rule__ImportedNames__Group_1_5__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3386:1: ( ( ( rule__ImportedNames__CommaAssignment_1_5_0 ) ) )
            // InternalFortXTrans.g:3387:1: ( ( rule__ImportedNames__CommaAssignment_1_5_0 ) )
            {
            // InternalFortXTrans.g:3387:1: ( ( rule__ImportedNames__CommaAssignment_1_5_0 ) )
            // InternalFortXTrans.g:3388:2: ( rule__ImportedNames__CommaAssignment_1_5_0 )
            {
             before(grammarAccess.getImportedNamesAccess().getCommaAssignment_1_5_0()); 
            // InternalFortXTrans.g:3389:2: ( rule__ImportedNames__CommaAssignment_1_5_0 )
            // InternalFortXTrans.g:3389:3: rule__ImportedNames__CommaAssignment_1_5_0
            {
            pushFollow(FOLLOW_2);
            rule__ImportedNames__CommaAssignment_1_5_0();

            state._fsp--;


            }

             after(grammarAccess.getImportedNamesAccess().getCommaAssignment_1_5_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_1_5__0__Impl"


    // $ANTLR start "rule__ImportedNames__Group_1_5__1"
    // InternalFortXTrans.g:3397:1: rule__ImportedNames__Group_1_5__1 : rule__ImportedNames__Group_1_5__1__Impl ;
    public final void rule__ImportedNames__Group_1_5__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3401:1: ( rule__ImportedNames__Group_1_5__1__Impl )
            // InternalFortXTrans.g:3402:2: rule__ImportedNames__Group_1_5__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ImportedNames__Group_1_5__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_1_5__1"


    // $ANTLR start "rule__ImportedNames__Group_1_5__1__Impl"
    // InternalFortXTrans.g:3408:1: rule__ImportedNames__Group_1_5__1__Impl : ( ( rule__ImportedNames__DotsAssignment_1_5_1 ) ) ;
    public final void rule__ImportedNames__Group_1_5__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3412:1: ( ( ( rule__ImportedNames__DotsAssignment_1_5_1 ) ) )
            // InternalFortXTrans.g:3413:1: ( ( rule__ImportedNames__DotsAssignment_1_5_1 ) )
            {
            // InternalFortXTrans.g:3413:1: ( ( rule__ImportedNames__DotsAssignment_1_5_1 ) )
            // InternalFortXTrans.g:3414:2: ( rule__ImportedNames__DotsAssignment_1_5_1 )
            {
             before(grammarAccess.getImportedNamesAccess().getDotsAssignment_1_5_1()); 
            // InternalFortXTrans.g:3415:2: ( rule__ImportedNames__DotsAssignment_1_5_1 )
            // InternalFortXTrans.g:3415:3: rule__ImportedNames__DotsAssignment_1_5_1
            {
            pushFollow(FOLLOW_2);
            rule__ImportedNames__DotsAssignment_1_5_1();

            state._fsp--;


            }

             after(grammarAccess.getImportedNamesAccess().getDotsAssignment_1_5_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_1_5__1__Impl"


    // $ANTLR start "rule__ImportedNames__Group_2__0"
    // InternalFortXTrans.g:3424:1: rule__ImportedNames__Group_2__0 : rule__ImportedNames__Group_2__0__Impl rule__ImportedNames__Group_2__1 ;
    public final void rule__ImportedNames__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3428:1: ( rule__ImportedNames__Group_2__0__Impl rule__ImportedNames__Group_2__1 )
            // InternalFortXTrans.g:3429:2: rule__ImportedNames__Group_2__0__Impl rule__ImportedNames__Group_2__1
            {
            pushFollow(FOLLOW_20);
            rule__ImportedNames__Group_2__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ImportedNames__Group_2__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_2__0"


    // $ANTLR start "rule__ImportedNames__Group_2__0__Impl"
    // InternalFortXTrans.g:3436:1: rule__ImportedNames__Group_2__0__Impl : ( ( rule__ImportedNames__ImpnameAssignment_2_0 ) ) ;
    public final void rule__ImportedNames__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3440:1: ( ( ( rule__ImportedNames__ImpnameAssignment_2_0 ) ) )
            // InternalFortXTrans.g:3441:1: ( ( rule__ImportedNames__ImpnameAssignment_2_0 ) )
            {
            // InternalFortXTrans.g:3441:1: ( ( rule__ImportedNames__ImpnameAssignment_2_0 ) )
            // InternalFortXTrans.g:3442:2: ( rule__ImportedNames__ImpnameAssignment_2_0 )
            {
             before(grammarAccess.getImportedNamesAccess().getImpnameAssignment_2_0()); 
            // InternalFortXTrans.g:3443:2: ( rule__ImportedNames__ImpnameAssignment_2_0 )
            // InternalFortXTrans.g:3443:3: rule__ImportedNames__ImpnameAssignment_2_0
            {
            pushFollow(FOLLOW_2);
            rule__ImportedNames__ImpnameAssignment_2_0();

            state._fsp--;


            }

             after(grammarAccess.getImportedNamesAccess().getImpnameAssignment_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_2__0__Impl"


    // $ANTLR start "rule__ImportedNames__Group_2__1"
    // InternalFortXTrans.g:3451:1: rule__ImportedNames__Group_2__1 : rule__ImportedNames__Group_2__1__Impl ;
    public final void rule__ImportedNames__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3455:1: ( rule__ImportedNames__Group_2__1__Impl )
            // InternalFortXTrans.g:3456:2: rule__ImportedNames__Group_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ImportedNames__Group_2__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_2__1"


    // $ANTLR start "rule__ImportedNames__Group_2__1__Impl"
    // InternalFortXTrans.g:3462:1: rule__ImportedNames__Group_2__1__Impl : ( ( rule__ImportedNames__Group_2_1__0 )? ) ;
    public final void rule__ImportedNames__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3466:1: ( ( ( rule__ImportedNames__Group_2_1__0 )? ) )
            // InternalFortXTrans.g:3467:1: ( ( rule__ImportedNames__Group_2_1__0 )? )
            {
            // InternalFortXTrans.g:3467:1: ( ( rule__ImportedNames__Group_2_1__0 )? )
            // InternalFortXTrans.g:3468:2: ( rule__ImportedNames__Group_2_1__0 )?
            {
             before(grammarAccess.getImportedNamesAccess().getGroup_2_1()); 
            // InternalFortXTrans.g:3469:2: ( rule__ImportedNames__Group_2_1__0 )?
            int alt37=2;
            int LA37_0 = input.LA(1);

            if ( (LA37_0==32) ) {
                alt37=1;
            }
            switch (alt37) {
                case 1 :
                    // InternalFortXTrans.g:3469:3: rule__ImportedNames__Group_2_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ImportedNames__Group_2_1__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getImportedNamesAccess().getGroup_2_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_2__1__Impl"


    // $ANTLR start "rule__ImportedNames__Group_2_1__0"
    // InternalFortXTrans.g:3478:1: rule__ImportedNames__Group_2_1__0 : rule__ImportedNames__Group_2_1__0__Impl rule__ImportedNames__Group_2_1__1 ;
    public final void rule__ImportedNames__Group_2_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3482:1: ( rule__ImportedNames__Group_2_1__0__Impl rule__ImportedNames__Group_2_1__1 )
            // InternalFortXTrans.g:3483:2: rule__ImportedNames__Group_2_1__0__Impl rule__ImportedNames__Group_2_1__1
            {
            pushFollow(FOLLOW_5);
            rule__ImportedNames__Group_2_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ImportedNames__Group_2_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_2_1__0"


    // $ANTLR start "rule__ImportedNames__Group_2_1__0__Impl"
    // InternalFortXTrans.g:3490:1: rule__ImportedNames__Group_2_1__0__Impl : ( 'as' ) ;
    public final void rule__ImportedNames__Group_2_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3494:1: ( ( 'as' ) )
            // InternalFortXTrans.g:3495:1: ( 'as' )
            {
            // InternalFortXTrans.g:3495:1: ( 'as' )
            // InternalFortXTrans.g:3496:2: 'as'
            {
             before(grammarAccess.getImportedNamesAccess().getAsKeyword_2_1_0()); 
            match(input,32,FOLLOW_2); 
             after(grammarAccess.getImportedNamesAccess().getAsKeyword_2_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_2_1__0__Impl"


    // $ANTLR start "rule__ImportedNames__Group_2_1__1"
    // InternalFortXTrans.g:3505:1: rule__ImportedNames__Group_2_1__1 : rule__ImportedNames__Group_2_1__1__Impl ;
    public final void rule__ImportedNames__Group_2_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3509:1: ( rule__ImportedNames__Group_2_1__1__Impl )
            // InternalFortXTrans.g:3510:2: rule__ImportedNames__Group_2_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ImportedNames__Group_2_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_2_1__1"


    // $ANTLR start "rule__ImportedNames__Group_2_1__1__Impl"
    // InternalFortXTrans.g:3516:1: rule__ImportedNames__Group_2_1__1__Impl : ( ( rule__ImportedNames__AsnameAssignment_2_1_1 ) ) ;
    public final void rule__ImportedNames__Group_2_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3520:1: ( ( ( rule__ImportedNames__AsnameAssignment_2_1_1 ) ) )
            // InternalFortXTrans.g:3521:1: ( ( rule__ImportedNames__AsnameAssignment_2_1_1 ) )
            {
            // InternalFortXTrans.g:3521:1: ( ( rule__ImportedNames__AsnameAssignment_2_1_1 ) )
            // InternalFortXTrans.g:3522:2: ( rule__ImportedNames__AsnameAssignment_2_1_1 )
            {
             before(grammarAccess.getImportedNamesAccess().getAsnameAssignment_2_1_1()); 
            // InternalFortXTrans.g:3523:2: ( rule__ImportedNames__AsnameAssignment_2_1_1 )
            // InternalFortXTrans.g:3523:3: rule__ImportedNames__AsnameAssignment_2_1_1
            {
            pushFollow(FOLLOW_2);
            rule__ImportedNames__AsnameAssignment_2_1_1();

            state._fsp--;


            }

             after(grammarAccess.getImportedNamesAccess().getAsnameAssignment_2_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_2_1__1__Impl"


    // $ANTLR start "rule__QualifiedName__Group__0"
    // InternalFortXTrans.g:3532:1: rule__QualifiedName__Group__0 : rule__QualifiedName__Group__0__Impl rule__QualifiedName__Group__1 ;
    public final void rule__QualifiedName__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3536:1: ( rule__QualifiedName__Group__0__Impl rule__QualifiedName__Group__1 )
            // InternalFortXTrans.g:3537:2: rule__QualifiedName__Group__0__Impl rule__QualifiedName__Group__1
            {
            pushFollow(FOLLOW_21);
            rule__QualifiedName__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__QualifiedName__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedName__Group__0"


    // $ANTLR start "rule__QualifiedName__Group__0__Impl"
    // InternalFortXTrans.g:3544:1: rule__QualifiedName__Group__0__Impl : ( ( rule__QualifiedName__SAssignment_0 ) ) ;
    public final void rule__QualifiedName__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3548:1: ( ( ( rule__QualifiedName__SAssignment_0 ) ) )
            // InternalFortXTrans.g:3549:1: ( ( rule__QualifiedName__SAssignment_0 ) )
            {
            // InternalFortXTrans.g:3549:1: ( ( rule__QualifiedName__SAssignment_0 ) )
            // InternalFortXTrans.g:3550:2: ( rule__QualifiedName__SAssignment_0 )
            {
             before(grammarAccess.getQualifiedNameAccess().getSAssignment_0()); 
            // InternalFortXTrans.g:3551:2: ( rule__QualifiedName__SAssignment_0 )
            // InternalFortXTrans.g:3551:3: rule__QualifiedName__SAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__QualifiedName__SAssignment_0();

            state._fsp--;


            }

             after(grammarAccess.getQualifiedNameAccess().getSAssignment_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedName__Group__0__Impl"


    // $ANTLR start "rule__QualifiedName__Group__1"
    // InternalFortXTrans.g:3559:1: rule__QualifiedName__Group__1 : rule__QualifiedName__Group__1__Impl rule__QualifiedName__Group__2 ;
    public final void rule__QualifiedName__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3563:1: ( rule__QualifiedName__Group__1__Impl rule__QualifiedName__Group__2 )
            // InternalFortXTrans.g:3564:2: rule__QualifiedName__Group__1__Impl rule__QualifiedName__Group__2
            {
            pushFollow(FOLLOW_21);
            rule__QualifiedName__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__QualifiedName__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedName__Group__1"


    // $ANTLR start "rule__QualifiedName__Group__1__Impl"
    // InternalFortXTrans.g:3571:1: rule__QualifiedName__Group__1__Impl : ( ( rule__QualifiedName__Group_1__0 )* ) ;
    public final void rule__QualifiedName__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3575:1: ( ( ( rule__QualifiedName__Group_1__0 )* ) )
            // InternalFortXTrans.g:3576:1: ( ( rule__QualifiedName__Group_1__0 )* )
            {
            // InternalFortXTrans.g:3576:1: ( ( rule__QualifiedName__Group_1__0 )* )
            // InternalFortXTrans.g:3577:2: ( rule__QualifiedName__Group_1__0 )*
            {
             before(grammarAccess.getQualifiedNameAccess().getGroup_1()); 
            // InternalFortXTrans.g:3578:2: ( rule__QualifiedName__Group_1__0 )*
            loop38:
            do {
                int alt38=2;
                int LA38_0 = input.LA(1);

                if ( (LA38_0==30) ) {
                    int LA38_2 = input.LA(2);

                    if ( (LA38_2==RULE_ID) ) {
                        alt38=1;
                    }


                }


                switch (alt38) {
            	case 1 :
            	    // InternalFortXTrans.g:3578:3: rule__QualifiedName__Group_1__0
            	    {
            	    pushFollow(FOLLOW_22);
            	    rule__QualifiedName__Group_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop38;
                }
            } while (true);

             after(grammarAccess.getQualifiedNameAccess().getGroup_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedName__Group__1__Impl"


    // $ANTLR start "rule__QualifiedName__Group__2"
    // InternalFortXTrans.g:3586:1: rule__QualifiedName__Group__2 : rule__QualifiedName__Group__2__Impl ;
    public final void rule__QualifiedName__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3590:1: ( rule__QualifiedName__Group__2__Impl )
            // InternalFortXTrans.g:3591:2: rule__QualifiedName__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__QualifiedName__Group__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedName__Group__2"


    // $ANTLR start "rule__QualifiedName__Group__2__Impl"
    // InternalFortXTrans.g:3597:1: rule__QualifiedName__Group__2__Impl : ( ( rule__QualifiedName__DotsAssignment_2 )? ) ;
    public final void rule__QualifiedName__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3601:1: ( ( ( rule__QualifiedName__DotsAssignment_2 )? ) )
            // InternalFortXTrans.g:3602:1: ( ( rule__QualifiedName__DotsAssignment_2 )? )
            {
            // InternalFortXTrans.g:3602:1: ( ( rule__QualifiedName__DotsAssignment_2 )? )
            // InternalFortXTrans.g:3603:2: ( rule__QualifiedName__DotsAssignment_2 )?
            {
             before(grammarAccess.getQualifiedNameAccess().getDotsAssignment_2()); 
            // InternalFortXTrans.g:3604:2: ( rule__QualifiedName__DotsAssignment_2 )?
            int alt39=2;
            int LA39_0 = input.LA(1);

            if ( (LA39_0==RULE_DOTS) ) {
                alt39=1;
            }
            switch (alt39) {
                case 1 :
                    // InternalFortXTrans.g:3604:3: rule__QualifiedName__DotsAssignment_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__QualifiedName__DotsAssignment_2();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getQualifiedNameAccess().getDotsAssignment_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedName__Group__2__Impl"


    // $ANTLR start "rule__QualifiedName__Group_1__0"
    // InternalFortXTrans.g:3613:1: rule__QualifiedName__Group_1__0 : rule__QualifiedName__Group_1__0__Impl rule__QualifiedName__Group_1__1 ;
    public final void rule__QualifiedName__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3617:1: ( rule__QualifiedName__Group_1__0__Impl rule__QualifiedName__Group_1__1 )
            // InternalFortXTrans.g:3618:2: rule__QualifiedName__Group_1__0__Impl rule__QualifiedName__Group_1__1
            {
            pushFollow(FOLLOW_5);
            rule__QualifiedName__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__QualifiedName__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedName__Group_1__0"


    // $ANTLR start "rule__QualifiedName__Group_1__0__Impl"
    // InternalFortXTrans.g:3625:1: rule__QualifiedName__Group_1__0__Impl : ( '.' ) ;
    public final void rule__QualifiedName__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3629:1: ( ( '.' ) )
            // InternalFortXTrans.g:3630:1: ( '.' )
            {
            // InternalFortXTrans.g:3630:1: ( '.' )
            // InternalFortXTrans.g:3631:2: '.'
            {
             before(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); 
            match(input,30,FOLLOW_2); 
             after(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedName__Group_1__0__Impl"


    // $ANTLR start "rule__QualifiedName__Group_1__1"
    // InternalFortXTrans.g:3640:1: rule__QualifiedName__Group_1__1 : rule__QualifiedName__Group_1__1__Impl ;
    public final void rule__QualifiedName__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3644:1: ( rule__QualifiedName__Group_1__1__Impl )
            // InternalFortXTrans.g:3645:2: rule__QualifiedName__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__QualifiedName__Group_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedName__Group_1__1"


    // $ANTLR start "rule__QualifiedName__Group_1__1__Impl"
    // InternalFortXTrans.g:3651:1: rule__QualifiedName__Group_1__1__Impl : ( ( rule__QualifiedName__SAssignment_1_1 ) ) ;
    public final void rule__QualifiedName__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3655:1: ( ( ( rule__QualifiedName__SAssignment_1_1 ) ) )
            // InternalFortXTrans.g:3656:1: ( ( rule__QualifiedName__SAssignment_1_1 ) )
            {
            // InternalFortXTrans.g:3656:1: ( ( rule__QualifiedName__SAssignment_1_1 ) )
            // InternalFortXTrans.g:3657:2: ( rule__QualifiedName__SAssignment_1_1 )
            {
             before(grammarAccess.getQualifiedNameAccess().getSAssignment_1_1()); 
            // InternalFortXTrans.g:3658:2: ( rule__QualifiedName__SAssignment_1_1 )
            // InternalFortXTrans.g:3658:3: rule__QualifiedName__SAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__QualifiedName__SAssignment_1_1();

            state._fsp--;


            }

             after(grammarAccess.getQualifiedNameAccess().getSAssignment_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedName__Group_1__1__Impl"


    // $ANTLR start "rule__Qualified__Group_1__0"
    // InternalFortXTrans.g:3667:1: rule__Qualified__Group_1__0 : rule__Qualified__Group_1__0__Impl rule__Qualified__Group_1__1 ;
    public final void rule__Qualified__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3671:1: ( rule__Qualified__Group_1__0__Impl rule__Qualified__Group_1__1 )
            // InternalFortXTrans.g:3672:2: rule__Qualified__Group_1__0__Impl rule__Qualified__Group_1__1
            {
            pushFollow(FOLLOW_5);
            rule__Qualified__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Qualified__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Qualified__Group_1__0"


    // $ANTLR start "rule__Qualified__Group_1__0__Impl"
    // InternalFortXTrans.g:3679:1: rule__Qualified__Group_1__0__Impl : ( '(' ) ;
    public final void rule__Qualified__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3683:1: ( ( '(' ) )
            // InternalFortXTrans.g:3684:1: ( '(' )
            {
            // InternalFortXTrans.g:3684:1: ( '(' )
            // InternalFortXTrans.g:3685:2: '('
            {
             before(grammarAccess.getQualifiedAccess().getLeftParenthesisKeyword_1_0()); 
            match(input,33,FOLLOW_2); 
             after(grammarAccess.getQualifiedAccess().getLeftParenthesisKeyword_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Qualified__Group_1__0__Impl"


    // $ANTLR start "rule__Qualified__Group_1__1"
    // InternalFortXTrans.g:3694:1: rule__Qualified__Group_1__1 : rule__Qualified__Group_1__1__Impl rule__Qualified__Group_1__2 ;
    public final void rule__Qualified__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3698:1: ( rule__Qualified__Group_1__1__Impl rule__Qualified__Group_1__2 )
            // InternalFortXTrans.g:3699:2: rule__Qualified__Group_1__1__Impl rule__Qualified__Group_1__2
            {
            pushFollow(FOLLOW_23);
            rule__Qualified__Group_1__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Qualified__Group_1__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Qualified__Group_1__1"


    // $ANTLR start "rule__Qualified__Group_1__1__Impl"
    // InternalFortXTrans.g:3706:1: rule__Qualified__Group_1__1__Impl : ( ruleQualifiedNameTuple ) ;
    public final void rule__Qualified__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3710:1: ( ( ruleQualifiedNameTuple ) )
            // InternalFortXTrans.g:3711:1: ( ruleQualifiedNameTuple )
            {
            // InternalFortXTrans.g:3711:1: ( ruleQualifiedNameTuple )
            // InternalFortXTrans.g:3712:2: ruleQualifiedNameTuple
            {
             before(grammarAccess.getQualifiedAccess().getQualifiedNameTupleParserRuleCall_1_1()); 
            pushFollow(FOLLOW_2);
            ruleQualifiedNameTuple();

            state._fsp--;

             after(grammarAccess.getQualifiedAccess().getQualifiedNameTupleParserRuleCall_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Qualified__Group_1__1__Impl"


    // $ANTLR start "rule__Qualified__Group_1__2"
    // InternalFortXTrans.g:3721:1: rule__Qualified__Group_1__2 : rule__Qualified__Group_1__2__Impl ;
    public final void rule__Qualified__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3725:1: ( rule__Qualified__Group_1__2__Impl )
            // InternalFortXTrans.g:3726:2: rule__Qualified__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Qualified__Group_1__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Qualified__Group_1__2"


    // $ANTLR start "rule__Qualified__Group_1__2__Impl"
    // InternalFortXTrans.g:3732:1: rule__Qualified__Group_1__2__Impl : ( ')' ) ;
    public final void rule__Qualified__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3736:1: ( ( ')' ) )
            // InternalFortXTrans.g:3737:1: ( ')' )
            {
            // InternalFortXTrans.g:3737:1: ( ')' )
            // InternalFortXTrans.g:3738:2: ')'
            {
             before(grammarAccess.getQualifiedAccess().getRightParenthesisKeyword_1_2()); 
            match(input,34,FOLLOW_2); 
             after(grammarAccess.getQualifiedAccess().getRightParenthesisKeyword_1_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Qualified__Group_1__2__Impl"


    // $ANTLR start "rule__QualifiedNameTuple__Group__0"
    // InternalFortXTrans.g:3748:1: rule__QualifiedNameTuple__Group__0 : rule__QualifiedNameTuple__Group__0__Impl rule__QualifiedNameTuple__Group__1 ;
    public final void rule__QualifiedNameTuple__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3752:1: ( rule__QualifiedNameTuple__Group__0__Impl rule__QualifiedNameTuple__Group__1 )
            // InternalFortXTrans.g:3753:2: rule__QualifiedNameTuple__Group__0__Impl rule__QualifiedNameTuple__Group__1
            {
            pushFollow(FOLLOW_24);
            rule__QualifiedNameTuple__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__QualifiedNameTuple__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedNameTuple__Group__0"


    // $ANTLR start "rule__QualifiedNameTuple__Group__0__Impl"
    // InternalFortXTrans.g:3760:1: rule__QualifiedNameTuple__Group__0__Impl : ( ( rule__QualifiedNameTuple__QlistAssignment_0 ) ) ;
    public final void rule__QualifiedNameTuple__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3764:1: ( ( ( rule__QualifiedNameTuple__QlistAssignment_0 ) ) )
            // InternalFortXTrans.g:3765:1: ( ( rule__QualifiedNameTuple__QlistAssignment_0 ) )
            {
            // InternalFortXTrans.g:3765:1: ( ( rule__QualifiedNameTuple__QlistAssignment_0 ) )
            // InternalFortXTrans.g:3766:2: ( rule__QualifiedNameTuple__QlistAssignment_0 )
            {
             before(grammarAccess.getQualifiedNameTupleAccess().getQlistAssignment_0()); 
            // InternalFortXTrans.g:3767:2: ( rule__QualifiedNameTuple__QlistAssignment_0 )
            // InternalFortXTrans.g:3767:3: rule__QualifiedNameTuple__QlistAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__QualifiedNameTuple__QlistAssignment_0();

            state._fsp--;


            }

             after(grammarAccess.getQualifiedNameTupleAccess().getQlistAssignment_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedNameTuple__Group__0__Impl"


    // $ANTLR start "rule__QualifiedNameTuple__Group__1"
    // InternalFortXTrans.g:3775:1: rule__QualifiedNameTuple__Group__1 : rule__QualifiedNameTuple__Group__1__Impl ;
    public final void rule__QualifiedNameTuple__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3779:1: ( rule__QualifiedNameTuple__Group__1__Impl )
            // InternalFortXTrans.g:3780:2: rule__QualifiedNameTuple__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__QualifiedNameTuple__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedNameTuple__Group__1"


    // $ANTLR start "rule__QualifiedNameTuple__Group__1__Impl"
    // InternalFortXTrans.g:3786:1: rule__QualifiedNameTuple__Group__1__Impl : ( ( rule__QualifiedNameTuple__Group_1__0 )* ) ;
    public final void rule__QualifiedNameTuple__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3790:1: ( ( ( rule__QualifiedNameTuple__Group_1__0 )* ) )
            // InternalFortXTrans.g:3791:1: ( ( rule__QualifiedNameTuple__Group_1__0 )* )
            {
            // InternalFortXTrans.g:3791:1: ( ( rule__QualifiedNameTuple__Group_1__0 )* )
            // InternalFortXTrans.g:3792:2: ( rule__QualifiedNameTuple__Group_1__0 )*
            {
             before(grammarAccess.getQualifiedNameTupleAccess().getGroup_1()); 
            // InternalFortXTrans.g:3793:2: ( rule__QualifiedNameTuple__Group_1__0 )*
            loop40:
            do {
                int alt40=2;
                int LA40_0 = input.LA(1);

                if ( (LA40_0==29) ) {
                    alt40=1;
                }


                switch (alt40) {
            	case 1 :
            	    // InternalFortXTrans.g:3793:3: rule__QualifiedNameTuple__Group_1__0
            	    {
            	    pushFollow(FOLLOW_15);
            	    rule__QualifiedNameTuple__Group_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop40;
                }
            } while (true);

             after(grammarAccess.getQualifiedNameTupleAccess().getGroup_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedNameTuple__Group__1__Impl"


    // $ANTLR start "rule__QualifiedNameTuple__Group_1__0"
    // InternalFortXTrans.g:3802:1: rule__QualifiedNameTuple__Group_1__0 : rule__QualifiedNameTuple__Group_1__0__Impl rule__QualifiedNameTuple__Group_1__1 ;
    public final void rule__QualifiedNameTuple__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3806:1: ( rule__QualifiedNameTuple__Group_1__0__Impl rule__QualifiedNameTuple__Group_1__1 )
            // InternalFortXTrans.g:3807:2: rule__QualifiedNameTuple__Group_1__0__Impl rule__QualifiedNameTuple__Group_1__1
            {
            pushFollow(FOLLOW_5);
            rule__QualifiedNameTuple__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__QualifiedNameTuple__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedNameTuple__Group_1__0"


    // $ANTLR start "rule__QualifiedNameTuple__Group_1__0__Impl"
    // InternalFortXTrans.g:3814:1: rule__QualifiedNameTuple__Group_1__0__Impl : ( ',' ) ;
    public final void rule__QualifiedNameTuple__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3818:1: ( ( ',' ) )
            // InternalFortXTrans.g:3819:1: ( ',' )
            {
            // InternalFortXTrans.g:3819:1: ( ',' )
            // InternalFortXTrans.g:3820:2: ','
            {
             before(grammarAccess.getQualifiedNameTupleAccess().getCommaKeyword_1_0()); 
            match(input,29,FOLLOW_2); 
             after(grammarAccess.getQualifiedNameTupleAccess().getCommaKeyword_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedNameTuple__Group_1__0__Impl"


    // $ANTLR start "rule__QualifiedNameTuple__Group_1__1"
    // InternalFortXTrans.g:3829:1: rule__QualifiedNameTuple__Group_1__1 : rule__QualifiedNameTuple__Group_1__1__Impl ;
    public final void rule__QualifiedNameTuple__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3833:1: ( rule__QualifiedNameTuple__Group_1__1__Impl )
            // InternalFortXTrans.g:3834:2: rule__QualifiedNameTuple__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__QualifiedNameTuple__Group_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedNameTuple__Group_1__1"


    // $ANTLR start "rule__QualifiedNameTuple__Group_1__1__Impl"
    // InternalFortXTrans.g:3840:1: rule__QualifiedNameTuple__Group_1__1__Impl : ( ( rule__QualifiedNameTuple__QlistAssignment_1_1 ) ) ;
    public final void rule__QualifiedNameTuple__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3844:1: ( ( ( rule__QualifiedNameTuple__QlistAssignment_1_1 ) ) )
            // InternalFortXTrans.g:3845:1: ( ( rule__QualifiedNameTuple__QlistAssignment_1_1 ) )
            {
            // InternalFortXTrans.g:3845:1: ( ( rule__QualifiedNameTuple__QlistAssignment_1_1 ) )
            // InternalFortXTrans.g:3846:2: ( rule__QualifiedNameTuple__QlistAssignment_1_1 )
            {
             before(grammarAccess.getQualifiedNameTupleAccess().getQlistAssignment_1_1()); 
            // InternalFortXTrans.g:3847:2: ( rule__QualifiedNameTuple__QlistAssignment_1_1 )
            // InternalFortXTrans.g:3847:3: rule__QualifiedNameTuple__QlistAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__QualifiedNameTuple__QlistAssignment_1_1();

            state._fsp--;


            }

             after(grammarAccess.getQualifiedNameTupleAccess().getQlistAssignment_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedNameTuple__Group_1__1__Impl"


    // $ANTLR start "rule__SimpleNames__Group_1__0"
    // InternalFortXTrans.g:3856:1: rule__SimpleNames__Group_1__0 : rule__SimpleNames__Group_1__0__Impl rule__SimpleNames__Group_1__1 ;
    public final void rule__SimpleNames__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3860:1: ( rule__SimpleNames__Group_1__0__Impl rule__SimpleNames__Group_1__1 )
            // InternalFortXTrans.g:3861:2: rule__SimpleNames__Group_1__0__Impl rule__SimpleNames__Group_1__1
            {
            pushFollow(FOLLOW_5);
            rule__SimpleNames__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__SimpleNames__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleNames__Group_1__0"


    // $ANTLR start "rule__SimpleNames__Group_1__0__Impl"
    // InternalFortXTrans.g:3868:1: rule__SimpleNames__Group_1__0__Impl : ( ( rule__SimpleNames__BrackAssignment_1_0 ) ) ;
    public final void rule__SimpleNames__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3872:1: ( ( ( rule__SimpleNames__BrackAssignment_1_0 ) ) )
            // InternalFortXTrans.g:3873:1: ( ( rule__SimpleNames__BrackAssignment_1_0 ) )
            {
            // InternalFortXTrans.g:3873:1: ( ( rule__SimpleNames__BrackAssignment_1_0 ) )
            // InternalFortXTrans.g:3874:2: ( rule__SimpleNames__BrackAssignment_1_0 )
            {
             before(grammarAccess.getSimpleNamesAccess().getBrackAssignment_1_0()); 
            // InternalFortXTrans.g:3875:2: ( rule__SimpleNames__BrackAssignment_1_0 )
            // InternalFortXTrans.g:3875:3: rule__SimpleNames__BrackAssignment_1_0
            {
            pushFollow(FOLLOW_2);
            rule__SimpleNames__BrackAssignment_1_0();

            state._fsp--;


            }

             after(grammarAccess.getSimpleNamesAccess().getBrackAssignment_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleNames__Group_1__0__Impl"


    // $ANTLR start "rule__SimpleNames__Group_1__1"
    // InternalFortXTrans.g:3883:1: rule__SimpleNames__Group_1__1 : rule__SimpleNames__Group_1__1__Impl rule__SimpleNames__Group_1__2 ;
    public final void rule__SimpleNames__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3887:1: ( rule__SimpleNames__Group_1__1__Impl rule__SimpleNames__Group_1__2 )
            // InternalFortXTrans.g:3888:2: rule__SimpleNames__Group_1__1__Impl rule__SimpleNames__Group_1__2
            {
            pushFollow(FOLLOW_14);
            rule__SimpleNames__Group_1__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__SimpleNames__Group_1__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleNames__Group_1__1"


    // $ANTLR start "rule__SimpleNames__Group_1__1__Impl"
    // InternalFortXTrans.g:3895:1: rule__SimpleNames__Group_1__1__Impl : ( ( rule__SimpleNames__NameListAssignment_1_1 ) ) ;
    public final void rule__SimpleNames__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3899:1: ( ( ( rule__SimpleNames__NameListAssignment_1_1 ) ) )
            // InternalFortXTrans.g:3900:1: ( ( rule__SimpleNames__NameListAssignment_1_1 ) )
            {
            // InternalFortXTrans.g:3900:1: ( ( rule__SimpleNames__NameListAssignment_1_1 ) )
            // InternalFortXTrans.g:3901:2: ( rule__SimpleNames__NameListAssignment_1_1 )
            {
             before(grammarAccess.getSimpleNamesAccess().getNameListAssignment_1_1()); 
            // InternalFortXTrans.g:3902:2: ( rule__SimpleNames__NameListAssignment_1_1 )
            // InternalFortXTrans.g:3902:3: rule__SimpleNames__NameListAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__SimpleNames__NameListAssignment_1_1();

            state._fsp--;


            }

             after(grammarAccess.getSimpleNamesAccess().getNameListAssignment_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleNames__Group_1__1__Impl"


    // $ANTLR start "rule__SimpleNames__Group_1__2"
    // InternalFortXTrans.g:3910:1: rule__SimpleNames__Group_1__2 : rule__SimpleNames__Group_1__2__Impl rule__SimpleNames__Group_1__3 ;
    public final void rule__SimpleNames__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3914:1: ( rule__SimpleNames__Group_1__2__Impl rule__SimpleNames__Group_1__3 )
            // InternalFortXTrans.g:3915:2: rule__SimpleNames__Group_1__2__Impl rule__SimpleNames__Group_1__3
            {
            pushFollow(FOLLOW_14);
            rule__SimpleNames__Group_1__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__SimpleNames__Group_1__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleNames__Group_1__2"


    // $ANTLR start "rule__SimpleNames__Group_1__2__Impl"
    // InternalFortXTrans.g:3922:1: rule__SimpleNames__Group_1__2__Impl : ( ( rule__SimpleNames__Group_1_2__0 )* ) ;
    public final void rule__SimpleNames__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3926:1: ( ( ( rule__SimpleNames__Group_1_2__0 )* ) )
            // InternalFortXTrans.g:3927:1: ( ( rule__SimpleNames__Group_1_2__0 )* )
            {
            // InternalFortXTrans.g:3927:1: ( ( rule__SimpleNames__Group_1_2__0 )* )
            // InternalFortXTrans.g:3928:2: ( rule__SimpleNames__Group_1_2__0 )*
            {
             before(grammarAccess.getSimpleNamesAccess().getGroup_1_2()); 
            // InternalFortXTrans.g:3929:2: ( rule__SimpleNames__Group_1_2__0 )*
            loop41:
            do {
                int alt41=2;
                int LA41_0 = input.LA(1);

                if ( (LA41_0==29) ) {
                    alt41=1;
                }


                switch (alt41) {
            	case 1 :
            	    // InternalFortXTrans.g:3929:3: rule__SimpleNames__Group_1_2__0
            	    {
            	    pushFollow(FOLLOW_15);
            	    rule__SimpleNames__Group_1_2__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop41;
                }
            } while (true);

             after(grammarAccess.getSimpleNamesAccess().getGroup_1_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleNames__Group_1__2__Impl"


    // $ANTLR start "rule__SimpleNames__Group_1__3"
    // InternalFortXTrans.g:3937:1: rule__SimpleNames__Group_1__3 : rule__SimpleNames__Group_1__3__Impl ;
    public final void rule__SimpleNames__Group_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3941:1: ( rule__SimpleNames__Group_1__3__Impl )
            // InternalFortXTrans.g:3942:2: rule__SimpleNames__Group_1__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__SimpleNames__Group_1__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleNames__Group_1__3"


    // $ANTLR start "rule__SimpleNames__Group_1__3__Impl"
    // InternalFortXTrans.g:3948:1: rule__SimpleNames__Group_1__3__Impl : ( '}' ) ;
    public final void rule__SimpleNames__Group_1__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3952:1: ( ( '}' ) )
            // InternalFortXTrans.g:3953:1: ( '}' )
            {
            // InternalFortXTrans.g:3953:1: ( '}' )
            // InternalFortXTrans.g:3954:2: '}'
            {
             before(grammarAccess.getSimpleNamesAccess().getRightCurlyBracketKeyword_1_3()); 
            match(input,28,FOLLOW_2); 
             after(grammarAccess.getSimpleNamesAccess().getRightCurlyBracketKeyword_1_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleNames__Group_1__3__Impl"


    // $ANTLR start "rule__SimpleNames__Group_1_2__0"
    // InternalFortXTrans.g:3964:1: rule__SimpleNames__Group_1_2__0 : rule__SimpleNames__Group_1_2__0__Impl rule__SimpleNames__Group_1_2__1 ;
    public final void rule__SimpleNames__Group_1_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3968:1: ( rule__SimpleNames__Group_1_2__0__Impl rule__SimpleNames__Group_1_2__1 )
            // InternalFortXTrans.g:3969:2: rule__SimpleNames__Group_1_2__0__Impl rule__SimpleNames__Group_1_2__1
            {
            pushFollow(FOLLOW_5);
            rule__SimpleNames__Group_1_2__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__SimpleNames__Group_1_2__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleNames__Group_1_2__0"


    // $ANTLR start "rule__SimpleNames__Group_1_2__0__Impl"
    // InternalFortXTrans.g:3976:1: rule__SimpleNames__Group_1_2__0__Impl : ( ',' ) ;
    public final void rule__SimpleNames__Group_1_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3980:1: ( ( ',' ) )
            // InternalFortXTrans.g:3981:1: ( ',' )
            {
            // InternalFortXTrans.g:3981:1: ( ',' )
            // InternalFortXTrans.g:3982:2: ','
            {
             before(grammarAccess.getSimpleNamesAccess().getCommaKeyword_1_2_0()); 
            match(input,29,FOLLOW_2); 
             after(grammarAccess.getSimpleNamesAccess().getCommaKeyword_1_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleNames__Group_1_2__0__Impl"


    // $ANTLR start "rule__SimpleNames__Group_1_2__1"
    // InternalFortXTrans.g:3991:1: rule__SimpleNames__Group_1_2__1 : rule__SimpleNames__Group_1_2__1__Impl ;
    public final void rule__SimpleNames__Group_1_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3995:1: ( rule__SimpleNames__Group_1_2__1__Impl )
            // InternalFortXTrans.g:3996:2: rule__SimpleNames__Group_1_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__SimpleNames__Group_1_2__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleNames__Group_1_2__1"


    // $ANTLR start "rule__SimpleNames__Group_1_2__1__Impl"
    // InternalFortXTrans.g:4002:1: rule__SimpleNames__Group_1_2__1__Impl : ( ( rule__SimpleNames__NameListAssignment_1_2_1 ) ) ;
    public final void rule__SimpleNames__Group_1_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4006:1: ( ( ( rule__SimpleNames__NameListAssignment_1_2_1 ) ) )
            // InternalFortXTrans.g:4007:1: ( ( rule__SimpleNames__NameListAssignment_1_2_1 ) )
            {
            // InternalFortXTrans.g:4007:1: ( ( rule__SimpleNames__NameListAssignment_1_2_1 ) )
            // InternalFortXTrans.g:4008:2: ( rule__SimpleNames__NameListAssignment_1_2_1 )
            {
             before(grammarAccess.getSimpleNamesAccess().getNameListAssignment_1_2_1()); 
            // InternalFortXTrans.g:4009:2: ( rule__SimpleNames__NameListAssignment_1_2_1 )
            // InternalFortXTrans.g:4009:3: rule__SimpleNames__NameListAssignment_1_2_1
            {
            pushFollow(FOLLOW_2);
            rule__SimpleNames__NameListAssignment_1_2_1();

            state._fsp--;


            }

             after(grammarAccess.getSimpleNamesAccess().getNameListAssignment_1_2_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleNames__Group_1_2__1__Impl"


    // $ANTLR start "rule__AliasedSimpleName__Group__0"
    // InternalFortXTrans.g:4018:1: rule__AliasedSimpleName__Group__0 : rule__AliasedSimpleName__Group__0__Impl rule__AliasedSimpleName__Group__1 ;
    public final void rule__AliasedSimpleName__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4022:1: ( rule__AliasedSimpleName__Group__0__Impl rule__AliasedSimpleName__Group__1 )
            // InternalFortXTrans.g:4023:2: rule__AliasedSimpleName__Group__0__Impl rule__AliasedSimpleName__Group__1
            {
            pushFollow(FOLLOW_20);
            rule__AliasedSimpleName__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__AliasedSimpleName__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedSimpleName__Group__0"


    // $ANTLR start "rule__AliasedSimpleName__Group__0__Impl"
    // InternalFortXTrans.g:4030:1: rule__AliasedSimpleName__Group__0__Impl : ( ( rule__AliasedSimpleName__OrigAssignment_0 ) ) ;
    public final void rule__AliasedSimpleName__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4034:1: ( ( ( rule__AliasedSimpleName__OrigAssignment_0 ) ) )
            // InternalFortXTrans.g:4035:1: ( ( rule__AliasedSimpleName__OrigAssignment_0 ) )
            {
            // InternalFortXTrans.g:4035:1: ( ( rule__AliasedSimpleName__OrigAssignment_0 ) )
            // InternalFortXTrans.g:4036:2: ( rule__AliasedSimpleName__OrigAssignment_0 )
            {
             before(grammarAccess.getAliasedSimpleNameAccess().getOrigAssignment_0()); 
            // InternalFortXTrans.g:4037:2: ( rule__AliasedSimpleName__OrigAssignment_0 )
            // InternalFortXTrans.g:4037:3: rule__AliasedSimpleName__OrigAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__AliasedSimpleName__OrigAssignment_0();

            state._fsp--;


            }

             after(grammarAccess.getAliasedSimpleNameAccess().getOrigAssignment_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedSimpleName__Group__0__Impl"


    // $ANTLR start "rule__AliasedSimpleName__Group__1"
    // InternalFortXTrans.g:4045:1: rule__AliasedSimpleName__Group__1 : rule__AliasedSimpleName__Group__1__Impl ;
    public final void rule__AliasedSimpleName__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4049:1: ( rule__AliasedSimpleName__Group__1__Impl )
            // InternalFortXTrans.g:4050:2: rule__AliasedSimpleName__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AliasedSimpleName__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedSimpleName__Group__1"


    // $ANTLR start "rule__AliasedSimpleName__Group__1__Impl"
    // InternalFortXTrans.g:4056:1: rule__AliasedSimpleName__Group__1__Impl : ( ( rule__AliasedSimpleName__Group_1__0 )? ) ;
    public final void rule__AliasedSimpleName__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4060:1: ( ( ( rule__AliasedSimpleName__Group_1__0 )? ) )
            // InternalFortXTrans.g:4061:1: ( ( rule__AliasedSimpleName__Group_1__0 )? )
            {
            // InternalFortXTrans.g:4061:1: ( ( rule__AliasedSimpleName__Group_1__0 )? )
            // InternalFortXTrans.g:4062:2: ( rule__AliasedSimpleName__Group_1__0 )?
            {
             before(grammarAccess.getAliasedSimpleNameAccess().getGroup_1()); 
            // InternalFortXTrans.g:4063:2: ( rule__AliasedSimpleName__Group_1__0 )?
            int alt42=2;
            int LA42_0 = input.LA(1);

            if ( (LA42_0==32) ) {
                alt42=1;
            }
            switch (alt42) {
                case 1 :
                    // InternalFortXTrans.g:4063:3: rule__AliasedSimpleName__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__AliasedSimpleName__Group_1__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getAliasedSimpleNameAccess().getGroup_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedSimpleName__Group__1__Impl"


    // $ANTLR start "rule__AliasedSimpleName__Group_1__0"
    // InternalFortXTrans.g:4072:1: rule__AliasedSimpleName__Group_1__0 : rule__AliasedSimpleName__Group_1__0__Impl rule__AliasedSimpleName__Group_1__1 ;
    public final void rule__AliasedSimpleName__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4076:1: ( rule__AliasedSimpleName__Group_1__0__Impl rule__AliasedSimpleName__Group_1__1 )
            // InternalFortXTrans.g:4077:2: rule__AliasedSimpleName__Group_1__0__Impl rule__AliasedSimpleName__Group_1__1
            {
            pushFollow(FOLLOW_5);
            rule__AliasedSimpleName__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__AliasedSimpleName__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedSimpleName__Group_1__0"


    // $ANTLR start "rule__AliasedSimpleName__Group_1__0__Impl"
    // InternalFortXTrans.g:4084:1: rule__AliasedSimpleName__Group_1__0__Impl : ( 'as' ) ;
    public final void rule__AliasedSimpleName__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4088:1: ( ( 'as' ) )
            // InternalFortXTrans.g:4089:1: ( 'as' )
            {
            // InternalFortXTrans.g:4089:1: ( 'as' )
            // InternalFortXTrans.g:4090:2: 'as'
            {
             before(grammarAccess.getAliasedSimpleNameAccess().getAsKeyword_1_0()); 
            match(input,32,FOLLOW_2); 
             after(grammarAccess.getAliasedSimpleNameAccess().getAsKeyword_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedSimpleName__Group_1__0__Impl"


    // $ANTLR start "rule__AliasedSimpleName__Group_1__1"
    // InternalFortXTrans.g:4099:1: rule__AliasedSimpleName__Group_1__1 : rule__AliasedSimpleName__Group_1__1__Impl ;
    public final void rule__AliasedSimpleName__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4103:1: ( rule__AliasedSimpleName__Group_1__1__Impl )
            // InternalFortXTrans.g:4104:2: rule__AliasedSimpleName__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AliasedSimpleName__Group_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedSimpleName__Group_1__1"


    // $ANTLR start "rule__AliasedSimpleName__Group_1__1__Impl"
    // InternalFortXTrans.g:4110:1: rule__AliasedSimpleName__Group_1__1__Impl : ( ( rule__AliasedSimpleName__AsNameAssignment_1_1 ) ) ;
    public final void rule__AliasedSimpleName__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4114:1: ( ( ( rule__AliasedSimpleName__AsNameAssignment_1_1 ) ) )
            // InternalFortXTrans.g:4115:1: ( ( rule__AliasedSimpleName__AsNameAssignment_1_1 ) )
            {
            // InternalFortXTrans.g:4115:1: ( ( rule__AliasedSimpleName__AsNameAssignment_1_1 ) )
            // InternalFortXTrans.g:4116:2: ( rule__AliasedSimpleName__AsNameAssignment_1_1 )
            {
             before(grammarAccess.getAliasedSimpleNameAccess().getAsNameAssignment_1_1()); 
            // InternalFortXTrans.g:4117:2: ( rule__AliasedSimpleName__AsNameAssignment_1_1 )
            // InternalFortXTrans.g:4117:3: rule__AliasedSimpleName__AsNameAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__AliasedSimpleName__AsNameAssignment_1_1();

            state._fsp--;


            }

             after(grammarAccess.getAliasedSimpleNameAccess().getAsNameAssignment_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedSimpleName__Group_1__1__Impl"


    // $ANTLR start "rule__AliasedAPINames__Group_1__0"
    // InternalFortXTrans.g:4126:1: rule__AliasedAPINames__Group_1__0 : rule__AliasedAPINames__Group_1__0__Impl rule__AliasedAPINames__Group_1__1 ;
    public final void rule__AliasedAPINames__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4130:1: ( rule__AliasedAPINames__Group_1__0__Impl rule__AliasedAPINames__Group_1__1 )
            // InternalFortXTrans.g:4131:2: rule__AliasedAPINames__Group_1__0__Impl rule__AliasedAPINames__Group_1__1
            {
            pushFollow(FOLLOW_5);
            rule__AliasedAPINames__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__AliasedAPINames__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedAPINames__Group_1__0"


    // $ANTLR start "rule__AliasedAPINames__Group_1__0__Impl"
    // InternalFortXTrans.g:4138:1: rule__AliasedAPINames__Group_1__0__Impl : ( ( rule__AliasedAPINames__BrackAssignment_1_0 ) ) ;
    public final void rule__AliasedAPINames__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4142:1: ( ( ( rule__AliasedAPINames__BrackAssignment_1_0 ) ) )
            // InternalFortXTrans.g:4143:1: ( ( rule__AliasedAPINames__BrackAssignment_1_0 ) )
            {
            // InternalFortXTrans.g:4143:1: ( ( rule__AliasedAPINames__BrackAssignment_1_0 ) )
            // InternalFortXTrans.g:4144:2: ( rule__AliasedAPINames__BrackAssignment_1_0 )
            {
             before(grammarAccess.getAliasedAPINamesAccess().getBrackAssignment_1_0()); 
            // InternalFortXTrans.g:4145:2: ( rule__AliasedAPINames__BrackAssignment_1_0 )
            // InternalFortXTrans.g:4145:3: rule__AliasedAPINames__BrackAssignment_1_0
            {
            pushFollow(FOLLOW_2);
            rule__AliasedAPINames__BrackAssignment_1_0();

            state._fsp--;


            }

             after(grammarAccess.getAliasedAPINamesAccess().getBrackAssignment_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedAPINames__Group_1__0__Impl"


    // $ANTLR start "rule__AliasedAPINames__Group_1__1"
    // InternalFortXTrans.g:4153:1: rule__AliasedAPINames__Group_1__1 : rule__AliasedAPINames__Group_1__1__Impl rule__AliasedAPINames__Group_1__2 ;
    public final void rule__AliasedAPINames__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4157:1: ( rule__AliasedAPINames__Group_1__1__Impl rule__AliasedAPINames__Group_1__2 )
            // InternalFortXTrans.g:4158:2: rule__AliasedAPINames__Group_1__1__Impl rule__AliasedAPINames__Group_1__2
            {
            pushFollow(FOLLOW_14);
            rule__AliasedAPINames__Group_1__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__AliasedAPINames__Group_1__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedAPINames__Group_1__1"


    // $ANTLR start "rule__AliasedAPINames__Group_1__1__Impl"
    // InternalFortXTrans.g:4165:1: rule__AliasedAPINames__Group_1__1__Impl : ( ( rule__AliasedAPINames__NameListAssignment_1_1 ) ) ;
    public final void rule__AliasedAPINames__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4169:1: ( ( ( rule__AliasedAPINames__NameListAssignment_1_1 ) ) )
            // InternalFortXTrans.g:4170:1: ( ( rule__AliasedAPINames__NameListAssignment_1_1 ) )
            {
            // InternalFortXTrans.g:4170:1: ( ( rule__AliasedAPINames__NameListAssignment_1_1 ) )
            // InternalFortXTrans.g:4171:2: ( rule__AliasedAPINames__NameListAssignment_1_1 )
            {
             before(grammarAccess.getAliasedAPINamesAccess().getNameListAssignment_1_1()); 
            // InternalFortXTrans.g:4172:2: ( rule__AliasedAPINames__NameListAssignment_1_1 )
            // InternalFortXTrans.g:4172:3: rule__AliasedAPINames__NameListAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__AliasedAPINames__NameListAssignment_1_1();

            state._fsp--;


            }

             after(grammarAccess.getAliasedAPINamesAccess().getNameListAssignment_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedAPINames__Group_1__1__Impl"


    // $ANTLR start "rule__AliasedAPINames__Group_1__2"
    // InternalFortXTrans.g:4180:1: rule__AliasedAPINames__Group_1__2 : rule__AliasedAPINames__Group_1__2__Impl rule__AliasedAPINames__Group_1__3 ;
    public final void rule__AliasedAPINames__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4184:1: ( rule__AliasedAPINames__Group_1__2__Impl rule__AliasedAPINames__Group_1__3 )
            // InternalFortXTrans.g:4185:2: rule__AliasedAPINames__Group_1__2__Impl rule__AliasedAPINames__Group_1__3
            {
            pushFollow(FOLLOW_14);
            rule__AliasedAPINames__Group_1__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__AliasedAPINames__Group_1__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedAPINames__Group_1__2"


    // $ANTLR start "rule__AliasedAPINames__Group_1__2__Impl"
    // InternalFortXTrans.g:4192:1: rule__AliasedAPINames__Group_1__2__Impl : ( ( rule__AliasedAPINames__Group_1_2__0 )* ) ;
    public final void rule__AliasedAPINames__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4196:1: ( ( ( rule__AliasedAPINames__Group_1_2__0 )* ) )
            // InternalFortXTrans.g:4197:1: ( ( rule__AliasedAPINames__Group_1_2__0 )* )
            {
            // InternalFortXTrans.g:4197:1: ( ( rule__AliasedAPINames__Group_1_2__0 )* )
            // InternalFortXTrans.g:4198:2: ( rule__AliasedAPINames__Group_1_2__0 )*
            {
             before(grammarAccess.getAliasedAPINamesAccess().getGroup_1_2()); 
            // InternalFortXTrans.g:4199:2: ( rule__AliasedAPINames__Group_1_2__0 )*
            loop43:
            do {
                int alt43=2;
                int LA43_0 = input.LA(1);

                if ( (LA43_0==29) ) {
                    alt43=1;
                }


                switch (alt43) {
            	case 1 :
            	    // InternalFortXTrans.g:4199:3: rule__AliasedAPINames__Group_1_2__0
            	    {
            	    pushFollow(FOLLOW_15);
            	    rule__AliasedAPINames__Group_1_2__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop43;
                }
            } while (true);

             after(grammarAccess.getAliasedAPINamesAccess().getGroup_1_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedAPINames__Group_1__2__Impl"


    // $ANTLR start "rule__AliasedAPINames__Group_1__3"
    // InternalFortXTrans.g:4207:1: rule__AliasedAPINames__Group_1__3 : rule__AliasedAPINames__Group_1__3__Impl ;
    public final void rule__AliasedAPINames__Group_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4211:1: ( rule__AliasedAPINames__Group_1__3__Impl )
            // InternalFortXTrans.g:4212:2: rule__AliasedAPINames__Group_1__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AliasedAPINames__Group_1__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedAPINames__Group_1__3"


    // $ANTLR start "rule__AliasedAPINames__Group_1__3__Impl"
    // InternalFortXTrans.g:4218:1: rule__AliasedAPINames__Group_1__3__Impl : ( '}' ) ;
    public final void rule__AliasedAPINames__Group_1__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4222:1: ( ( '}' ) )
            // InternalFortXTrans.g:4223:1: ( '}' )
            {
            // InternalFortXTrans.g:4223:1: ( '}' )
            // InternalFortXTrans.g:4224:2: '}'
            {
             before(grammarAccess.getAliasedAPINamesAccess().getRightCurlyBracketKeyword_1_3()); 
            match(input,28,FOLLOW_2); 
             after(grammarAccess.getAliasedAPINamesAccess().getRightCurlyBracketKeyword_1_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedAPINames__Group_1__3__Impl"


    // $ANTLR start "rule__AliasedAPINames__Group_1_2__0"
    // InternalFortXTrans.g:4234:1: rule__AliasedAPINames__Group_1_2__0 : rule__AliasedAPINames__Group_1_2__0__Impl rule__AliasedAPINames__Group_1_2__1 ;
    public final void rule__AliasedAPINames__Group_1_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4238:1: ( rule__AliasedAPINames__Group_1_2__0__Impl rule__AliasedAPINames__Group_1_2__1 )
            // InternalFortXTrans.g:4239:2: rule__AliasedAPINames__Group_1_2__0__Impl rule__AliasedAPINames__Group_1_2__1
            {
            pushFollow(FOLLOW_5);
            rule__AliasedAPINames__Group_1_2__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__AliasedAPINames__Group_1_2__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedAPINames__Group_1_2__0"


    // $ANTLR start "rule__AliasedAPINames__Group_1_2__0__Impl"
    // InternalFortXTrans.g:4246:1: rule__AliasedAPINames__Group_1_2__0__Impl : ( ',' ) ;
    public final void rule__AliasedAPINames__Group_1_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4250:1: ( ( ',' ) )
            // InternalFortXTrans.g:4251:1: ( ',' )
            {
            // InternalFortXTrans.g:4251:1: ( ',' )
            // InternalFortXTrans.g:4252:2: ','
            {
             before(grammarAccess.getAliasedAPINamesAccess().getCommaKeyword_1_2_0()); 
            match(input,29,FOLLOW_2); 
             after(grammarAccess.getAliasedAPINamesAccess().getCommaKeyword_1_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedAPINames__Group_1_2__0__Impl"


    // $ANTLR start "rule__AliasedAPINames__Group_1_2__1"
    // InternalFortXTrans.g:4261:1: rule__AliasedAPINames__Group_1_2__1 : rule__AliasedAPINames__Group_1_2__1__Impl ;
    public final void rule__AliasedAPINames__Group_1_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4265:1: ( rule__AliasedAPINames__Group_1_2__1__Impl )
            // InternalFortXTrans.g:4266:2: rule__AliasedAPINames__Group_1_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AliasedAPINames__Group_1_2__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedAPINames__Group_1_2__1"


    // $ANTLR start "rule__AliasedAPINames__Group_1_2__1__Impl"
    // InternalFortXTrans.g:4272:1: rule__AliasedAPINames__Group_1_2__1__Impl : ( ( rule__AliasedAPINames__NameListAssignment_1_2_1 ) ) ;
    public final void rule__AliasedAPINames__Group_1_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4276:1: ( ( ( rule__AliasedAPINames__NameListAssignment_1_2_1 ) ) )
            // InternalFortXTrans.g:4277:1: ( ( rule__AliasedAPINames__NameListAssignment_1_2_1 ) )
            {
            // InternalFortXTrans.g:4277:1: ( ( rule__AliasedAPINames__NameListAssignment_1_2_1 ) )
            // InternalFortXTrans.g:4278:2: ( rule__AliasedAPINames__NameListAssignment_1_2_1 )
            {
             before(grammarAccess.getAliasedAPINamesAccess().getNameListAssignment_1_2_1()); 
            // InternalFortXTrans.g:4279:2: ( rule__AliasedAPINames__NameListAssignment_1_2_1 )
            // InternalFortXTrans.g:4279:3: rule__AliasedAPINames__NameListAssignment_1_2_1
            {
            pushFollow(FOLLOW_2);
            rule__AliasedAPINames__NameListAssignment_1_2_1();

            state._fsp--;


            }

             after(grammarAccess.getAliasedAPINamesAccess().getNameListAssignment_1_2_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedAPINames__Group_1_2__1__Impl"


    // $ANTLR start "rule__AliasedAPIName__Group__0"
    // InternalFortXTrans.g:4288:1: rule__AliasedAPIName__Group__0 : rule__AliasedAPIName__Group__0__Impl rule__AliasedAPIName__Group__1 ;
    public final void rule__AliasedAPIName__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4292:1: ( rule__AliasedAPIName__Group__0__Impl rule__AliasedAPIName__Group__1 )
            // InternalFortXTrans.g:4293:2: rule__AliasedAPIName__Group__0__Impl rule__AliasedAPIName__Group__1
            {
            pushFollow(FOLLOW_20);
            rule__AliasedAPIName__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__AliasedAPIName__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedAPIName__Group__0"


    // $ANTLR start "rule__AliasedAPIName__Group__0__Impl"
    // InternalFortXTrans.g:4300:1: rule__AliasedAPIName__Group__0__Impl : ( ( rule__AliasedAPIName__OrigAssignment_0 ) ) ;
    public final void rule__AliasedAPIName__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4304:1: ( ( ( rule__AliasedAPIName__OrigAssignment_0 ) ) )
            // InternalFortXTrans.g:4305:1: ( ( rule__AliasedAPIName__OrigAssignment_0 ) )
            {
            // InternalFortXTrans.g:4305:1: ( ( rule__AliasedAPIName__OrigAssignment_0 ) )
            // InternalFortXTrans.g:4306:2: ( rule__AliasedAPIName__OrigAssignment_0 )
            {
             before(grammarAccess.getAliasedAPINameAccess().getOrigAssignment_0()); 
            // InternalFortXTrans.g:4307:2: ( rule__AliasedAPIName__OrigAssignment_0 )
            // InternalFortXTrans.g:4307:3: rule__AliasedAPIName__OrigAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__AliasedAPIName__OrigAssignment_0();

            state._fsp--;


            }

             after(grammarAccess.getAliasedAPINameAccess().getOrigAssignment_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedAPIName__Group__0__Impl"


    // $ANTLR start "rule__AliasedAPIName__Group__1"
    // InternalFortXTrans.g:4315:1: rule__AliasedAPIName__Group__1 : rule__AliasedAPIName__Group__1__Impl ;
    public final void rule__AliasedAPIName__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4319:1: ( rule__AliasedAPIName__Group__1__Impl )
            // InternalFortXTrans.g:4320:2: rule__AliasedAPIName__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AliasedAPIName__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedAPIName__Group__1"


    // $ANTLR start "rule__AliasedAPIName__Group__1__Impl"
    // InternalFortXTrans.g:4326:1: rule__AliasedAPIName__Group__1__Impl : ( ( rule__AliasedAPIName__Group_1__0 )? ) ;
    public final void rule__AliasedAPIName__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4330:1: ( ( ( rule__AliasedAPIName__Group_1__0 )? ) )
            // InternalFortXTrans.g:4331:1: ( ( rule__AliasedAPIName__Group_1__0 )? )
            {
            // InternalFortXTrans.g:4331:1: ( ( rule__AliasedAPIName__Group_1__0 )? )
            // InternalFortXTrans.g:4332:2: ( rule__AliasedAPIName__Group_1__0 )?
            {
             before(grammarAccess.getAliasedAPINameAccess().getGroup_1()); 
            // InternalFortXTrans.g:4333:2: ( rule__AliasedAPIName__Group_1__0 )?
            int alt44=2;
            int LA44_0 = input.LA(1);

            if ( (LA44_0==32) ) {
                alt44=1;
            }
            switch (alt44) {
                case 1 :
                    // InternalFortXTrans.g:4333:3: rule__AliasedAPIName__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__AliasedAPIName__Group_1__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getAliasedAPINameAccess().getGroup_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedAPIName__Group__1__Impl"


    // $ANTLR start "rule__AliasedAPIName__Group_1__0"
    // InternalFortXTrans.g:4342:1: rule__AliasedAPIName__Group_1__0 : rule__AliasedAPIName__Group_1__0__Impl rule__AliasedAPIName__Group_1__1 ;
    public final void rule__AliasedAPIName__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4346:1: ( rule__AliasedAPIName__Group_1__0__Impl rule__AliasedAPIName__Group_1__1 )
            // InternalFortXTrans.g:4347:2: rule__AliasedAPIName__Group_1__0__Impl rule__AliasedAPIName__Group_1__1
            {
            pushFollow(FOLLOW_5);
            rule__AliasedAPIName__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__AliasedAPIName__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedAPIName__Group_1__0"


    // $ANTLR start "rule__AliasedAPIName__Group_1__0__Impl"
    // InternalFortXTrans.g:4354:1: rule__AliasedAPIName__Group_1__0__Impl : ( 'as' ) ;
    public final void rule__AliasedAPIName__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4358:1: ( ( 'as' ) )
            // InternalFortXTrans.g:4359:1: ( 'as' )
            {
            // InternalFortXTrans.g:4359:1: ( 'as' )
            // InternalFortXTrans.g:4360:2: 'as'
            {
             before(grammarAccess.getAliasedAPINameAccess().getAsKeyword_1_0()); 
            match(input,32,FOLLOW_2); 
             after(grammarAccess.getAliasedAPINameAccess().getAsKeyword_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedAPIName__Group_1__0__Impl"


    // $ANTLR start "rule__AliasedAPIName__Group_1__1"
    // InternalFortXTrans.g:4369:1: rule__AliasedAPIName__Group_1__1 : rule__AliasedAPIName__Group_1__1__Impl ;
    public final void rule__AliasedAPIName__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4373:1: ( rule__AliasedAPIName__Group_1__1__Impl )
            // InternalFortXTrans.g:4374:2: rule__AliasedAPIName__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AliasedAPIName__Group_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedAPIName__Group_1__1"


    // $ANTLR start "rule__AliasedAPIName__Group_1__1__Impl"
    // InternalFortXTrans.g:4380:1: rule__AliasedAPIName__Group_1__1__Impl : ( ( rule__AliasedAPIName__AsNameAssignment_1_1 ) ) ;
    public final void rule__AliasedAPIName__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4384:1: ( ( ( rule__AliasedAPIName__AsNameAssignment_1_1 ) ) )
            // InternalFortXTrans.g:4385:1: ( ( rule__AliasedAPIName__AsNameAssignment_1_1 ) )
            {
            // InternalFortXTrans.g:4385:1: ( ( rule__AliasedAPIName__AsNameAssignment_1_1 ) )
            // InternalFortXTrans.g:4386:2: ( rule__AliasedAPIName__AsNameAssignment_1_1 )
            {
             before(grammarAccess.getAliasedAPINameAccess().getAsNameAssignment_1_1()); 
            // InternalFortXTrans.g:4387:2: ( rule__AliasedAPIName__AsNameAssignment_1_1 )
            // InternalFortXTrans.g:4387:3: rule__AliasedAPIName__AsNameAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__AliasedAPIName__AsNameAssignment_1_1();

            state._fsp--;


            }

             after(grammarAccess.getAliasedAPINameAccess().getAsNameAssignment_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedAPIName__Group_1__1__Impl"


    // $ANTLR start "rule__ValParam__Group_1__0"
    // InternalFortXTrans.g:4396:1: rule__ValParam__Group_1__0 : rule__ValParam__Group_1__0__Impl rule__ValParam__Group_1__1 ;
    public final void rule__ValParam__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4400:1: ( rule__ValParam__Group_1__0__Impl rule__ValParam__Group_1__1 )
            // InternalFortXTrans.g:4401:2: rule__ValParam__Group_1__0__Impl rule__ValParam__Group_1__1
            {
            pushFollow(FOLLOW_25);
            rule__ValParam__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ValParam__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValParam__Group_1__0"


    // $ANTLR start "rule__ValParam__Group_1__0__Impl"
    // InternalFortXTrans.g:4408:1: rule__ValParam__Group_1__0__Impl : ( ( rule__ValParam__BrackAssignment_1_0 ) ) ;
    public final void rule__ValParam__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4412:1: ( ( ( rule__ValParam__BrackAssignment_1_0 ) ) )
            // InternalFortXTrans.g:4413:1: ( ( rule__ValParam__BrackAssignment_1_0 ) )
            {
            // InternalFortXTrans.g:4413:1: ( ( rule__ValParam__BrackAssignment_1_0 ) )
            // InternalFortXTrans.g:4414:2: ( rule__ValParam__BrackAssignment_1_0 )
            {
             before(grammarAccess.getValParamAccess().getBrackAssignment_1_0()); 
            // InternalFortXTrans.g:4415:2: ( rule__ValParam__BrackAssignment_1_0 )
            // InternalFortXTrans.g:4415:3: rule__ValParam__BrackAssignment_1_0
            {
            pushFollow(FOLLOW_2);
            rule__ValParam__BrackAssignment_1_0();

            state._fsp--;


            }

             after(grammarAccess.getValParamAccess().getBrackAssignment_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValParam__Group_1__0__Impl"


    // $ANTLR start "rule__ValParam__Group_1__1"
    // InternalFortXTrans.g:4423:1: rule__ValParam__Group_1__1 : rule__ValParam__Group_1__1__Impl rule__ValParam__Group_1__2 ;
    public final void rule__ValParam__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4427:1: ( rule__ValParam__Group_1__1__Impl rule__ValParam__Group_1__2 )
            // InternalFortXTrans.g:4428:2: rule__ValParam__Group_1__1__Impl rule__ValParam__Group_1__2
            {
            pushFollow(FOLLOW_25);
            rule__ValParam__Group_1__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ValParam__Group_1__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValParam__Group_1__1"


    // $ANTLR start "rule__ValParam__Group_1__1__Impl"
    // InternalFortXTrans.g:4435:1: rule__ValParam__Group_1__1__Impl : ( ( rule__ValParam__Group_1_1__0 )? ) ;
    public final void rule__ValParam__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4439:1: ( ( ( rule__ValParam__Group_1_1__0 )? ) )
            // InternalFortXTrans.g:4440:1: ( ( rule__ValParam__Group_1_1__0 )? )
            {
            // InternalFortXTrans.g:4440:1: ( ( rule__ValParam__Group_1_1__0 )? )
            // InternalFortXTrans.g:4441:2: ( rule__ValParam__Group_1_1__0 )?
            {
             before(grammarAccess.getValParamAccess().getGroup_1_1()); 
            // InternalFortXTrans.g:4442:2: ( rule__ValParam__Group_1_1__0 )?
            int alt45=2;
            int LA45_0 = input.LA(1);

            if ( (LA45_0==RULE_ID) ) {
                alt45=1;
            }
            switch (alt45) {
                case 1 :
                    // InternalFortXTrans.g:4442:3: rule__ValParam__Group_1_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ValParam__Group_1_1__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getValParamAccess().getGroup_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValParam__Group_1__1__Impl"


    // $ANTLR start "rule__ValParam__Group_1__2"
    // InternalFortXTrans.g:4450:1: rule__ValParam__Group_1__2 : rule__ValParam__Group_1__2__Impl ;
    public final void rule__ValParam__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4454:1: ( rule__ValParam__Group_1__2__Impl )
            // InternalFortXTrans.g:4455:2: rule__ValParam__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ValParam__Group_1__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValParam__Group_1__2"


    // $ANTLR start "rule__ValParam__Group_1__2__Impl"
    // InternalFortXTrans.g:4461:1: rule__ValParam__Group_1__2__Impl : ( ')' ) ;
    public final void rule__ValParam__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4465:1: ( ( ')' ) )
            // InternalFortXTrans.g:4466:1: ( ')' )
            {
            // InternalFortXTrans.g:4466:1: ( ')' )
            // InternalFortXTrans.g:4467:2: ')'
            {
             before(grammarAccess.getValParamAccess().getRightParenthesisKeyword_1_2()); 
            match(input,34,FOLLOW_2); 
             after(grammarAccess.getValParamAccess().getRightParenthesisKeyword_1_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValParam__Group_1__2__Impl"


    // $ANTLR start "rule__ValParam__Group_1_1__0"
    // InternalFortXTrans.g:4477:1: rule__ValParam__Group_1_1__0 : rule__ValParam__Group_1_1__0__Impl rule__ValParam__Group_1_1__1 ;
    public final void rule__ValParam__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4481:1: ( rule__ValParam__Group_1_1__0__Impl rule__ValParam__Group_1_1__1 )
            // InternalFortXTrans.g:4482:2: rule__ValParam__Group_1_1__0__Impl rule__ValParam__Group_1_1__1
            {
            pushFollow(FOLLOW_24);
            rule__ValParam__Group_1_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ValParam__Group_1_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValParam__Group_1_1__0"


    // $ANTLR start "rule__ValParam__Group_1_1__0__Impl"
    // InternalFortXTrans.g:4489:1: rule__ValParam__Group_1_1__0__Impl : ( ( rule__ValParam__ParamsAssignment_1_1_0 ) ) ;
    public final void rule__ValParam__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4493:1: ( ( ( rule__ValParam__ParamsAssignment_1_1_0 ) ) )
            // InternalFortXTrans.g:4494:1: ( ( rule__ValParam__ParamsAssignment_1_1_0 ) )
            {
            // InternalFortXTrans.g:4494:1: ( ( rule__ValParam__ParamsAssignment_1_1_0 ) )
            // InternalFortXTrans.g:4495:2: ( rule__ValParam__ParamsAssignment_1_1_0 )
            {
             before(grammarAccess.getValParamAccess().getParamsAssignment_1_1_0()); 
            // InternalFortXTrans.g:4496:2: ( rule__ValParam__ParamsAssignment_1_1_0 )
            // InternalFortXTrans.g:4496:3: rule__ValParam__ParamsAssignment_1_1_0
            {
            pushFollow(FOLLOW_2);
            rule__ValParam__ParamsAssignment_1_1_0();

            state._fsp--;


            }

             after(grammarAccess.getValParamAccess().getParamsAssignment_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValParam__Group_1_1__0__Impl"


    // $ANTLR start "rule__ValParam__Group_1_1__1"
    // InternalFortXTrans.g:4504:1: rule__ValParam__Group_1_1__1 : rule__ValParam__Group_1_1__1__Impl ;
    public final void rule__ValParam__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4508:1: ( rule__ValParam__Group_1_1__1__Impl )
            // InternalFortXTrans.g:4509:2: rule__ValParam__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ValParam__Group_1_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValParam__Group_1_1__1"


    // $ANTLR start "rule__ValParam__Group_1_1__1__Impl"
    // InternalFortXTrans.g:4515:1: rule__ValParam__Group_1_1__1__Impl : ( ( rule__ValParam__Group_1_1_1__0 )* ) ;
    public final void rule__ValParam__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4519:1: ( ( ( rule__ValParam__Group_1_1_1__0 )* ) )
            // InternalFortXTrans.g:4520:1: ( ( rule__ValParam__Group_1_1_1__0 )* )
            {
            // InternalFortXTrans.g:4520:1: ( ( rule__ValParam__Group_1_1_1__0 )* )
            // InternalFortXTrans.g:4521:2: ( rule__ValParam__Group_1_1_1__0 )*
            {
             before(grammarAccess.getValParamAccess().getGroup_1_1_1()); 
            // InternalFortXTrans.g:4522:2: ( rule__ValParam__Group_1_1_1__0 )*
            loop46:
            do {
                int alt46=2;
                int LA46_0 = input.LA(1);

                if ( (LA46_0==29) ) {
                    alt46=1;
                }


                switch (alt46) {
            	case 1 :
            	    // InternalFortXTrans.g:4522:3: rule__ValParam__Group_1_1_1__0
            	    {
            	    pushFollow(FOLLOW_15);
            	    rule__ValParam__Group_1_1_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop46;
                }
            } while (true);

             after(grammarAccess.getValParamAccess().getGroup_1_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValParam__Group_1_1__1__Impl"


    // $ANTLR start "rule__ValParam__Group_1_1_1__0"
    // InternalFortXTrans.g:4531:1: rule__ValParam__Group_1_1_1__0 : rule__ValParam__Group_1_1_1__0__Impl rule__ValParam__Group_1_1_1__1 ;
    public final void rule__ValParam__Group_1_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4535:1: ( rule__ValParam__Group_1_1_1__0__Impl rule__ValParam__Group_1_1_1__1 )
            // InternalFortXTrans.g:4536:2: rule__ValParam__Group_1_1_1__0__Impl rule__ValParam__Group_1_1_1__1
            {
            pushFollow(FOLLOW_5);
            rule__ValParam__Group_1_1_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ValParam__Group_1_1_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValParam__Group_1_1_1__0"


    // $ANTLR start "rule__ValParam__Group_1_1_1__0__Impl"
    // InternalFortXTrans.g:4543:1: rule__ValParam__Group_1_1_1__0__Impl : ( ',' ) ;
    public final void rule__ValParam__Group_1_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4547:1: ( ( ',' ) )
            // InternalFortXTrans.g:4548:1: ( ',' )
            {
            // InternalFortXTrans.g:4548:1: ( ',' )
            // InternalFortXTrans.g:4549:2: ','
            {
             before(grammarAccess.getValParamAccess().getCommaKeyword_1_1_1_0()); 
            match(input,29,FOLLOW_2); 
             after(grammarAccess.getValParamAccess().getCommaKeyword_1_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValParam__Group_1_1_1__0__Impl"


    // $ANTLR start "rule__ValParam__Group_1_1_1__1"
    // InternalFortXTrans.g:4558:1: rule__ValParam__Group_1_1_1__1 : rule__ValParam__Group_1_1_1__1__Impl ;
    public final void rule__ValParam__Group_1_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4562:1: ( rule__ValParam__Group_1_1_1__1__Impl )
            // InternalFortXTrans.g:4563:2: rule__ValParam__Group_1_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ValParam__Group_1_1_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValParam__Group_1_1_1__1"


    // $ANTLR start "rule__ValParam__Group_1_1_1__1__Impl"
    // InternalFortXTrans.g:4569:1: rule__ValParam__Group_1_1_1__1__Impl : ( ( rule__ValParam__ParamsAssignment_1_1_1_1 ) ) ;
    public final void rule__ValParam__Group_1_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4573:1: ( ( ( rule__ValParam__ParamsAssignment_1_1_1_1 ) ) )
            // InternalFortXTrans.g:4574:1: ( ( rule__ValParam__ParamsAssignment_1_1_1_1 ) )
            {
            // InternalFortXTrans.g:4574:1: ( ( rule__ValParam__ParamsAssignment_1_1_1_1 ) )
            // InternalFortXTrans.g:4575:2: ( rule__ValParam__ParamsAssignment_1_1_1_1 )
            {
             before(grammarAccess.getValParamAccess().getParamsAssignment_1_1_1_1()); 
            // InternalFortXTrans.g:4576:2: ( rule__ValParam__ParamsAssignment_1_1_1_1 )
            // InternalFortXTrans.g:4576:3: rule__ValParam__ParamsAssignment_1_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__ValParam__ParamsAssignment_1_1_1_1();

            state._fsp--;


            }

             after(grammarAccess.getValParamAccess().getParamsAssignment_1_1_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValParam__Group_1_1_1__1__Impl"


    // $ANTLR start "rule__Param__Group__0"
    // InternalFortXTrans.g:4585:1: rule__Param__Group__0 : rule__Param__Group__0__Impl rule__Param__Group__1 ;
    public final void rule__Param__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4589:1: ( rule__Param__Group__0__Impl rule__Param__Group__1 )
            // InternalFortXTrans.g:4590:2: rule__Param__Group__0__Impl rule__Param__Group__1
            {
            pushFollow(FOLLOW_26);
            rule__Param__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Param__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Param__Group__0"


    // $ANTLR start "rule__Param__Group__0__Impl"
    // InternalFortXTrans.g:4597:1: rule__Param__Group__0__Impl : ( ( rule__Param__ParIdAssignment_0 ) ) ;
    public final void rule__Param__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4601:1: ( ( ( rule__Param__ParIdAssignment_0 ) ) )
            // InternalFortXTrans.g:4602:1: ( ( rule__Param__ParIdAssignment_0 ) )
            {
            // InternalFortXTrans.g:4602:1: ( ( rule__Param__ParIdAssignment_0 ) )
            // InternalFortXTrans.g:4603:2: ( rule__Param__ParIdAssignment_0 )
            {
             before(grammarAccess.getParamAccess().getParIdAssignment_0()); 
            // InternalFortXTrans.g:4604:2: ( rule__Param__ParIdAssignment_0 )
            // InternalFortXTrans.g:4604:3: rule__Param__ParIdAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__Param__ParIdAssignment_0();

            state._fsp--;


            }

             after(grammarAccess.getParamAccess().getParIdAssignment_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Param__Group__0__Impl"


    // $ANTLR start "rule__Param__Group__1"
    // InternalFortXTrans.g:4612:1: rule__Param__Group__1 : rule__Param__Group__1__Impl ;
    public final void rule__Param__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4616:1: ( rule__Param__Group__1__Impl )
            // InternalFortXTrans.g:4617:2: rule__Param__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Param__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Param__Group__1"


    // $ANTLR start "rule__Param__Group__1__Impl"
    // InternalFortXTrans.g:4623:1: rule__Param__Group__1__Impl : ( ( rule__Param__IstypeAssignment_1 ) ) ;
    public final void rule__Param__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4627:1: ( ( ( rule__Param__IstypeAssignment_1 ) ) )
            // InternalFortXTrans.g:4628:1: ( ( rule__Param__IstypeAssignment_1 ) )
            {
            // InternalFortXTrans.g:4628:1: ( ( rule__Param__IstypeAssignment_1 ) )
            // InternalFortXTrans.g:4629:2: ( rule__Param__IstypeAssignment_1 )
            {
             before(grammarAccess.getParamAccess().getIstypeAssignment_1()); 
            // InternalFortXTrans.g:4630:2: ( rule__Param__IstypeAssignment_1 )
            // InternalFortXTrans.g:4630:3: rule__Param__IstypeAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__Param__IstypeAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getParamAccess().getIstypeAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Param__Group__1__Impl"


    // $ANTLR start "rule__RetType__Group_0__0"
    // InternalFortXTrans.g:4639:1: rule__RetType__Group_0__0 : rule__RetType__Group_0__0__Impl rule__RetType__Group_0__1 ;
    public final void rule__RetType__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4643:1: ( rule__RetType__Group_0__0__Impl rule__RetType__Group_0__1 )
            // InternalFortXTrans.g:4644:2: rule__RetType__Group_0__0__Impl rule__RetType__Group_0__1
            {
            pushFollow(FOLLOW_27);
            rule__RetType__Group_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__RetType__Group_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RetType__Group_0__0"


    // $ANTLR start "rule__RetType__Group_0__0__Impl"
    // InternalFortXTrans.g:4651:1: rule__RetType__Group_0__0__Impl : ( ':' ) ;
    public final void rule__RetType__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4655:1: ( ( ':' ) )
            // InternalFortXTrans.g:4656:1: ( ':' )
            {
            // InternalFortXTrans.g:4656:1: ( ':' )
            // InternalFortXTrans.g:4657:2: ':'
            {
             before(grammarAccess.getRetTypeAccess().getColonKeyword_0_0()); 
            match(input,35,FOLLOW_2); 
             after(grammarAccess.getRetTypeAccess().getColonKeyword_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RetType__Group_0__0__Impl"


    // $ANTLR start "rule__RetType__Group_0__1"
    // InternalFortXTrans.g:4666:1: rule__RetType__Group_0__1 : rule__RetType__Group_0__1__Impl rule__RetType__Group_0__2 ;
    public final void rule__RetType__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4670:1: ( rule__RetType__Group_0__1__Impl rule__RetType__Group_0__2 )
            // InternalFortXTrans.g:4671:2: rule__RetType__Group_0__1__Impl rule__RetType__Group_0__2
            {
            pushFollow(FOLLOW_23);
            rule__RetType__Group_0__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__RetType__Group_0__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RetType__Group_0__1"


    // $ANTLR start "rule__RetType__Group_0__1__Impl"
    // InternalFortXTrans.g:4678:1: rule__RetType__Group_0__1__Impl : ( ( rule__RetType__EmptyAssignment_0_1 ) ) ;
    public final void rule__RetType__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4682:1: ( ( ( rule__RetType__EmptyAssignment_0_1 ) ) )
            // InternalFortXTrans.g:4683:1: ( ( rule__RetType__EmptyAssignment_0_1 ) )
            {
            // InternalFortXTrans.g:4683:1: ( ( rule__RetType__EmptyAssignment_0_1 ) )
            // InternalFortXTrans.g:4684:2: ( rule__RetType__EmptyAssignment_0_1 )
            {
             before(grammarAccess.getRetTypeAccess().getEmptyAssignment_0_1()); 
            // InternalFortXTrans.g:4685:2: ( rule__RetType__EmptyAssignment_0_1 )
            // InternalFortXTrans.g:4685:3: rule__RetType__EmptyAssignment_0_1
            {
            pushFollow(FOLLOW_2);
            rule__RetType__EmptyAssignment_0_1();

            state._fsp--;


            }

             after(grammarAccess.getRetTypeAccess().getEmptyAssignment_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RetType__Group_0__1__Impl"


    // $ANTLR start "rule__RetType__Group_0__2"
    // InternalFortXTrans.g:4693:1: rule__RetType__Group_0__2 : rule__RetType__Group_0__2__Impl ;
    public final void rule__RetType__Group_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4697:1: ( rule__RetType__Group_0__2__Impl )
            // InternalFortXTrans.g:4698:2: rule__RetType__Group_0__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__RetType__Group_0__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RetType__Group_0__2"


    // $ANTLR start "rule__RetType__Group_0__2__Impl"
    // InternalFortXTrans.g:4704:1: rule__RetType__Group_0__2__Impl : ( ')' ) ;
    public final void rule__RetType__Group_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4708:1: ( ( ')' ) )
            // InternalFortXTrans.g:4709:1: ( ')' )
            {
            // InternalFortXTrans.g:4709:1: ( ')' )
            // InternalFortXTrans.g:4710:2: ')'
            {
             before(grammarAccess.getRetTypeAccess().getRightParenthesisKeyword_0_2()); 
            match(input,34,FOLLOW_2); 
             after(grammarAccess.getRetTypeAccess().getRightParenthesisKeyword_0_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RetType__Group_0__2__Impl"


    // $ANTLR start "rule__RetType__Group_1__0"
    // InternalFortXTrans.g:4720:1: rule__RetType__Group_1__0 : rule__RetType__Group_1__0__Impl rule__RetType__Group_1__1 ;
    public final void rule__RetType__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4724:1: ( rule__RetType__Group_1__0__Impl rule__RetType__Group_1__1 )
            // InternalFortXTrans.g:4725:2: rule__RetType__Group_1__0__Impl rule__RetType__Group_1__1
            {
            pushFollow(FOLLOW_5);
            rule__RetType__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__RetType__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RetType__Group_1__0"


    // $ANTLR start "rule__RetType__Group_1__0__Impl"
    // InternalFortXTrans.g:4732:1: rule__RetType__Group_1__0__Impl : ( ':' ) ;
    public final void rule__RetType__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4736:1: ( ( ':' ) )
            // InternalFortXTrans.g:4737:1: ( ':' )
            {
            // InternalFortXTrans.g:4737:1: ( ':' )
            // InternalFortXTrans.g:4738:2: ':'
            {
             before(grammarAccess.getRetTypeAccess().getColonKeyword_1_0()); 
            match(input,35,FOLLOW_2); 
             after(grammarAccess.getRetTypeAccess().getColonKeyword_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RetType__Group_1__0__Impl"


    // $ANTLR start "rule__RetType__Group_1__1"
    // InternalFortXTrans.g:4747:1: rule__RetType__Group_1__1 : rule__RetType__Group_1__1__Impl ;
    public final void rule__RetType__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4751:1: ( rule__RetType__Group_1__1__Impl )
            // InternalFortXTrans.g:4752:2: rule__RetType__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__RetType__Group_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RetType__Group_1__1"


    // $ANTLR start "rule__RetType__Group_1__1__Impl"
    // InternalFortXTrans.g:4758:1: rule__RetType__Group_1__1__Impl : ( ( rule__RetType__TypeAssignment_1_1 ) ) ;
    public final void rule__RetType__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4762:1: ( ( ( rule__RetType__TypeAssignment_1_1 ) ) )
            // InternalFortXTrans.g:4763:1: ( ( rule__RetType__TypeAssignment_1_1 ) )
            {
            // InternalFortXTrans.g:4763:1: ( ( rule__RetType__TypeAssignment_1_1 ) )
            // InternalFortXTrans.g:4764:2: ( rule__RetType__TypeAssignment_1_1 )
            {
             before(grammarAccess.getRetTypeAccess().getTypeAssignment_1_1()); 
            // InternalFortXTrans.g:4765:2: ( rule__RetType__TypeAssignment_1_1 )
            // InternalFortXTrans.g:4765:3: rule__RetType__TypeAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__RetType__TypeAssignment_1_1();

            state._fsp--;


            }

             after(grammarAccess.getRetTypeAccess().getTypeAssignment_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RetType__Group_1__1__Impl"


    // $ANTLR start "rule__TupleType__Group__0"
    // InternalFortXTrans.g:4774:1: rule__TupleType__Group__0 : rule__TupleType__Group__0__Impl rule__TupleType__Group__1 ;
    public final void rule__TupleType__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4778:1: ( rule__TupleType__Group__0__Impl rule__TupleType__Group__1 )
            // InternalFortXTrans.g:4779:2: rule__TupleType__Group__0__Impl rule__TupleType__Group__1
            {
            pushFollow(FOLLOW_5);
            rule__TupleType__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__TupleType__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TupleType__Group__0"


    // $ANTLR start "rule__TupleType__Group__0__Impl"
    // InternalFortXTrans.g:4786:1: rule__TupleType__Group__0__Impl : ( '(' ) ;
    public final void rule__TupleType__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4790:1: ( ( '(' ) )
            // InternalFortXTrans.g:4791:1: ( '(' )
            {
            // InternalFortXTrans.g:4791:1: ( '(' )
            // InternalFortXTrans.g:4792:2: '('
            {
             before(grammarAccess.getTupleTypeAccess().getLeftParenthesisKeyword_0()); 
            match(input,33,FOLLOW_2); 
             after(grammarAccess.getTupleTypeAccess().getLeftParenthesisKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TupleType__Group__0__Impl"


    // $ANTLR start "rule__TupleType__Group__1"
    // InternalFortXTrans.g:4801:1: rule__TupleType__Group__1 : rule__TupleType__Group__1__Impl rule__TupleType__Group__2 ;
    public final void rule__TupleType__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4805:1: ( rule__TupleType__Group__1__Impl rule__TupleType__Group__2 )
            // InternalFortXTrans.g:4806:2: rule__TupleType__Group__1__Impl rule__TupleType__Group__2
            {
            pushFollow(FOLLOW_28);
            rule__TupleType__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__TupleType__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TupleType__Group__1"


    // $ANTLR start "rule__TupleType__Group__1__Impl"
    // InternalFortXTrans.g:4813:1: rule__TupleType__Group__1__Impl : ( ( rule__TupleType__TypesAssignment_1 ) ) ;
    public final void rule__TupleType__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4817:1: ( ( ( rule__TupleType__TypesAssignment_1 ) ) )
            // InternalFortXTrans.g:4818:1: ( ( rule__TupleType__TypesAssignment_1 ) )
            {
            // InternalFortXTrans.g:4818:1: ( ( rule__TupleType__TypesAssignment_1 ) )
            // InternalFortXTrans.g:4819:2: ( rule__TupleType__TypesAssignment_1 )
            {
             before(grammarAccess.getTupleTypeAccess().getTypesAssignment_1()); 
            // InternalFortXTrans.g:4820:2: ( rule__TupleType__TypesAssignment_1 )
            // InternalFortXTrans.g:4820:3: rule__TupleType__TypesAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__TupleType__TypesAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getTupleTypeAccess().getTypesAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TupleType__Group__1__Impl"


    // $ANTLR start "rule__TupleType__Group__2"
    // InternalFortXTrans.g:4828:1: rule__TupleType__Group__2 : rule__TupleType__Group__2__Impl rule__TupleType__Group__3 ;
    public final void rule__TupleType__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4832:1: ( rule__TupleType__Group__2__Impl rule__TupleType__Group__3 )
            // InternalFortXTrans.g:4833:2: rule__TupleType__Group__2__Impl rule__TupleType__Group__3
            {
            pushFollow(FOLLOW_28);
            rule__TupleType__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__TupleType__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TupleType__Group__2"


    // $ANTLR start "rule__TupleType__Group__2__Impl"
    // InternalFortXTrans.g:4840:1: rule__TupleType__Group__2__Impl : ( ( rule__TupleType__Group_2__0 )* ) ;
    public final void rule__TupleType__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4844:1: ( ( ( rule__TupleType__Group_2__0 )* ) )
            // InternalFortXTrans.g:4845:1: ( ( rule__TupleType__Group_2__0 )* )
            {
            // InternalFortXTrans.g:4845:1: ( ( rule__TupleType__Group_2__0 )* )
            // InternalFortXTrans.g:4846:2: ( rule__TupleType__Group_2__0 )*
            {
             before(grammarAccess.getTupleTypeAccess().getGroup_2()); 
            // InternalFortXTrans.g:4847:2: ( rule__TupleType__Group_2__0 )*
            loop47:
            do {
                int alt47=2;
                int LA47_0 = input.LA(1);

                if ( (LA47_0==29) ) {
                    alt47=1;
                }


                switch (alt47) {
            	case 1 :
            	    // InternalFortXTrans.g:4847:3: rule__TupleType__Group_2__0
            	    {
            	    pushFollow(FOLLOW_15);
            	    rule__TupleType__Group_2__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop47;
                }
            } while (true);

             after(grammarAccess.getTupleTypeAccess().getGroup_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TupleType__Group__2__Impl"


    // $ANTLR start "rule__TupleType__Group__3"
    // InternalFortXTrans.g:4855:1: rule__TupleType__Group__3 : rule__TupleType__Group__3__Impl ;
    public final void rule__TupleType__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4859:1: ( rule__TupleType__Group__3__Impl )
            // InternalFortXTrans.g:4860:2: rule__TupleType__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__TupleType__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TupleType__Group__3"


    // $ANTLR start "rule__TupleType__Group__3__Impl"
    // InternalFortXTrans.g:4866:1: rule__TupleType__Group__3__Impl : ( ')' ) ;
    public final void rule__TupleType__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4870:1: ( ( ')' ) )
            // InternalFortXTrans.g:4871:1: ( ')' )
            {
            // InternalFortXTrans.g:4871:1: ( ')' )
            // InternalFortXTrans.g:4872:2: ')'
            {
             before(grammarAccess.getTupleTypeAccess().getRightParenthesisKeyword_3()); 
            match(input,34,FOLLOW_2); 
             after(grammarAccess.getTupleTypeAccess().getRightParenthesisKeyword_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TupleType__Group__3__Impl"


    // $ANTLR start "rule__TupleType__Group_2__0"
    // InternalFortXTrans.g:4882:1: rule__TupleType__Group_2__0 : rule__TupleType__Group_2__0__Impl rule__TupleType__Group_2__1 ;
    public final void rule__TupleType__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4886:1: ( rule__TupleType__Group_2__0__Impl rule__TupleType__Group_2__1 )
            // InternalFortXTrans.g:4887:2: rule__TupleType__Group_2__0__Impl rule__TupleType__Group_2__1
            {
            pushFollow(FOLLOW_5);
            rule__TupleType__Group_2__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__TupleType__Group_2__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TupleType__Group_2__0"


    // $ANTLR start "rule__TupleType__Group_2__0__Impl"
    // InternalFortXTrans.g:4894:1: rule__TupleType__Group_2__0__Impl : ( ',' ) ;
    public final void rule__TupleType__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4898:1: ( ( ',' ) )
            // InternalFortXTrans.g:4899:1: ( ',' )
            {
            // InternalFortXTrans.g:4899:1: ( ',' )
            // InternalFortXTrans.g:4900:2: ','
            {
             before(grammarAccess.getTupleTypeAccess().getCommaKeyword_2_0()); 
            match(input,29,FOLLOW_2); 
             after(grammarAccess.getTupleTypeAccess().getCommaKeyword_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TupleType__Group_2__0__Impl"


    // $ANTLR start "rule__TupleType__Group_2__1"
    // InternalFortXTrans.g:4909:1: rule__TupleType__Group_2__1 : rule__TupleType__Group_2__1__Impl ;
    public final void rule__TupleType__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4913:1: ( rule__TupleType__Group_2__1__Impl )
            // InternalFortXTrans.g:4914:2: rule__TupleType__Group_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__TupleType__Group_2__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TupleType__Group_2__1"


    // $ANTLR start "rule__TupleType__Group_2__1__Impl"
    // InternalFortXTrans.g:4920:1: rule__TupleType__Group_2__1__Impl : ( ( rule__TupleType__TypesAssignment_2_1 ) ) ;
    public final void rule__TupleType__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4924:1: ( ( ( rule__TupleType__TypesAssignment_2_1 ) ) )
            // InternalFortXTrans.g:4925:1: ( ( rule__TupleType__TypesAssignment_2_1 ) )
            {
            // InternalFortXTrans.g:4925:1: ( ( rule__TupleType__TypesAssignment_2_1 ) )
            // InternalFortXTrans.g:4926:2: ( rule__TupleType__TypesAssignment_2_1 )
            {
             before(grammarAccess.getTupleTypeAccess().getTypesAssignment_2_1()); 
            // InternalFortXTrans.g:4927:2: ( rule__TupleType__TypesAssignment_2_1 )
            // InternalFortXTrans.g:4927:3: rule__TupleType__TypesAssignment_2_1
            {
            pushFollow(FOLLOW_2);
            rule__TupleType__TypesAssignment_2_1();

            state._fsp--;


            }

             after(grammarAccess.getTupleTypeAccess().getTypesAssignment_2_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TupleType__Group_2__1__Impl"


    // $ANTLR start "rule__FnDecl__Group__0"
    // InternalFortXTrans.g:4936:1: rule__FnDecl__Group__0 : rule__FnDecl__Group__0__Impl rule__FnDecl__Group__1 ;
    public final void rule__FnDecl__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4940:1: ( rule__FnDecl__Group__0__Impl rule__FnDecl__Group__1 )
            // InternalFortXTrans.g:4941:2: rule__FnDecl__Group__0__Impl rule__FnDecl__Group__1
            {
            pushFollow(FOLLOW_29);
            rule__FnDecl__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__FnDecl__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FnDecl__Group__0"


    // $ANTLR start "rule__FnDecl__Group__0__Impl"
    // InternalFortXTrans.g:4948:1: rule__FnDecl__Group__0__Impl : ( ( rule__FnDecl__ModsAssignment_0 )? ) ;
    public final void rule__FnDecl__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4952:1: ( ( ( rule__FnDecl__ModsAssignment_0 )? ) )
            // InternalFortXTrans.g:4953:1: ( ( rule__FnDecl__ModsAssignment_0 )? )
            {
            // InternalFortXTrans.g:4953:1: ( ( rule__FnDecl__ModsAssignment_0 )? )
            // InternalFortXTrans.g:4954:2: ( rule__FnDecl__ModsAssignment_0 )?
            {
             before(grammarAccess.getFnDeclAccess().getModsAssignment_0()); 
            // InternalFortXTrans.g:4955:2: ( rule__FnDecl__ModsAssignment_0 )?
            int alt48=2;
            int LA48_0 = input.LA(1);

            if ( ((LA48_0>=62 && LA48_0<=65)) ) {
                alt48=1;
            }
            switch (alt48) {
                case 1 :
                    // InternalFortXTrans.g:4955:3: rule__FnDecl__ModsAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__FnDecl__ModsAssignment_0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getFnDeclAccess().getModsAssignment_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FnDecl__Group__0__Impl"


    // $ANTLR start "rule__FnDecl__Group__1"
    // InternalFortXTrans.g:4963:1: rule__FnDecl__Group__1 : rule__FnDecl__Group__1__Impl rule__FnDecl__Group__2 ;
    public final void rule__FnDecl__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4967:1: ( rule__FnDecl__Group__1__Impl rule__FnDecl__Group__2 )
            // InternalFortXTrans.g:4968:2: rule__FnDecl__Group__1__Impl rule__FnDecl__Group__2
            {
            pushFollow(FOLLOW_30);
            rule__FnDecl__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__FnDecl__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FnDecl__Group__1"


    // $ANTLR start "rule__FnDecl__Group__1__Impl"
    // InternalFortXTrans.g:4975:1: rule__FnDecl__Group__1__Impl : ( ( rule__FnDecl__NameAssignment_1 ) ) ;
    public final void rule__FnDecl__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4979:1: ( ( ( rule__FnDecl__NameAssignment_1 ) ) )
            // InternalFortXTrans.g:4980:1: ( ( rule__FnDecl__NameAssignment_1 ) )
            {
            // InternalFortXTrans.g:4980:1: ( ( rule__FnDecl__NameAssignment_1 ) )
            // InternalFortXTrans.g:4981:2: ( rule__FnDecl__NameAssignment_1 )
            {
             before(grammarAccess.getFnDeclAccess().getNameAssignment_1()); 
            // InternalFortXTrans.g:4982:2: ( rule__FnDecl__NameAssignment_1 )
            // InternalFortXTrans.g:4982:3: rule__FnDecl__NameAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__FnDecl__NameAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getFnDeclAccess().getNameAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FnDecl__Group__1__Impl"


    // $ANTLR start "rule__FnDecl__Group__2"
    // InternalFortXTrans.g:4990:1: rule__FnDecl__Group__2 : rule__FnDecl__Group__2__Impl rule__FnDecl__Group__3 ;
    public final void rule__FnDecl__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4994:1: ( rule__FnDecl__Group__2__Impl rule__FnDecl__Group__3 )
            // InternalFortXTrans.g:4995:2: rule__FnDecl__Group__2__Impl rule__FnDecl__Group__3
            {
            pushFollow(FOLLOW_31);
            rule__FnDecl__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__FnDecl__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FnDecl__Group__2"


    // $ANTLR start "rule__FnDecl__Group__2__Impl"
    // InternalFortXTrans.g:5002:1: rule__FnDecl__Group__2__Impl : ( ( rule__FnDecl__ParamsAssignment_2 ) ) ;
    public final void rule__FnDecl__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5006:1: ( ( ( rule__FnDecl__ParamsAssignment_2 ) ) )
            // InternalFortXTrans.g:5007:1: ( ( rule__FnDecl__ParamsAssignment_2 ) )
            {
            // InternalFortXTrans.g:5007:1: ( ( rule__FnDecl__ParamsAssignment_2 ) )
            // InternalFortXTrans.g:5008:2: ( rule__FnDecl__ParamsAssignment_2 )
            {
             before(grammarAccess.getFnDeclAccess().getParamsAssignment_2()); 
            // InternalFortXTrans.g:5009:2: ( rule__FnDecl__ParamsAssignment_2 )
            // InternalFortXTrans.g:5009:3: rule__FnDecl__ParamsAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__FnDecl__ParamsAssignment_2();

            state._fsp--;


            }

             after(grammarAccess.getFnDeclAccess().getParamsAssignment_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FnDecl__Group__2__Impl"


    // $ANTLR start "rule__FnDecl__Group__3"
    // InternalFortXTrans.g:5017:1: rule__FnDecl__Group__3 : rule__FnDecl__Group__3__Impl rule__FnDecl__Group__4 ;
    public final void rule__FnDecl__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5021:1: ( rule__FnDecl__Group__3__Impl rule__FnDecl__Group__4 )
            // InternalFortXTrans.g:5022:2: rule__FnDecl__Group__3__Impl rule__FnDecl__Group__4
            {
            pushFollow(FOLLOW_31);
            rule__FnDecl__Group__3__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__FnDecl__Group__4();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FnDecl__Group__3"


    // $ANTLR start "rule__FnDecl__Group__3__Impl"
    // InternalFortXTrans.g:5029:1: rule__FnDecl__Group__3__Impl : ( ( rule__FnDecl__RetValAssignment_3 )? ) ;
    public final void rule__FnDecl__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5033:1: ( ( ( rule__FnDecl__RetValAssignment_3 )? ) )
            // InternalFortXTrans.g:5034:1: ( ( rule__FnDecl__RetValAssignment_3 )? )
            {
            // InternalFortXTrans.g:5034:1: ( ( rule__FnDecl__RetValAssignment_3 )? )
            // InternalFortXTrans.g:5035:2: ( rule__FnDecl__RetValAssignment_3 )?
            {
             before(grammarAccess.getFnDeclAccess().getRetValAssignment_3()); 
            // InternalFortXTrans.g:5036:2: ( rule__FnDecl__RetValAssignment_3 )?
            int alt49=2;
            int LA49_0 = input.LA(1);

            if ( (LA49_0==35) ) {
                alt49=1;
            }
            switch (alt49) {
                case 1 :
                    // InternalFortXTrans.g:5036:3: rule__FnDecl__RetValAssignment_3
                    {
                    pushFollow(FOLLOW_2);
                    rule__FnDecl__RetValAssignment_3();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getFnDeclAccess().getRetValAssignment_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FnDecl__Group__3__Impl"


    // $ANTLR start "rule__FnDecl__Group__4"
    // InternalFortXTrans.g:5044:1: rule__FnDecl__Group__4 : rule__FnDecl__Group__4__Impl ;
    public final void rule__FnDecl__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5048:1: ( rule__FnDecl__Group__4__Impl )
            // InternalFortXTrans.g:5049:2: rule__FnDecl__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FnDecl__Group__4__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FnDecl__Group__4"


    // $ANTLR start "rule__FnDecl__Group__4__Impl"
    // InternalFortXTrans.g:5055:1: rule__FnDecl__Group__4__Impl : ( ( rule__FnDecl__Group_4__0 )? ) ;
    public final void rule__FnDecl__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5059:1: ( ( ( rule__FnDecl__Group_4__0 )? ) )
            // InternalFortXTrans.g:5060:1: ( ( rule__FnDecl__Group_4__0 )? )
            {
            // InternalFortXTrans.g:5060:1: ( ( rule__FnDecl__Group_4__0 )? )
            // InternalFortXTrans.g:5061:2: ( rule__FnDecl__Group_4__0 )?
            {
             before(grammarAccess.getFnDeclAccess().getGroup_4()); 
            // InternalFortXTrans.g:5062:2: ( rule__FnDecl__Group_4__0 )?
            int alt50=2;
            int LA50_0 = input.LA(1);

            if ( (LA50_0==58) ) {
                alt50=1;
            }
            switch (alt50) {
                case 1 :
                    // InternalFortXTrans.g:5062:3: rule__FnDecl__Group_4__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__FnDecl__Group_4__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getFnDeclAccess().getGroup_4()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FnDecl__Group__4__Impl"


    // $ANTLR start "rule__FnDecl__Group_4__0"
    // InternalFortXTrans.g:5071:1: rule__FnDecl__Group_4__0 : rule__FnDecl__Group_4__0__Impl rule__FnDecl__Group_4__1 ;
    public final void rule__FnDecl__Group_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5075:1: ( rule__FnDecl__Group_4__0__Impl rule__FnDecl__Group_4__1 )
            // InternalFortXTrans.g:5076:2: rule__FnDecl__Group_4__0__Impl rule__FnDecl__Group_4__1
            {
            pushFollow(FOLLOW_32);
            rule__FnDecl__Group_4__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__FnDecl__Group_4__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FnDecl__Group_4__0"


    // $ANTLR start "rule__FnDecl__Group_4__0__Impl"
    // InternalFortXTrans.g:5083:1: rule__FnDecl__Group_4__0__Impl : ( ( rule__FnDecl__BodyAssignment_4_0 ) ) ;
    public final void rule__FnDecl__Group_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5087:1: ( ( ( rule__FnDecl__BodyAssignment_4_0 ) ) )
            // InternalFortXTrans.g:5088:1: ( ( rule__FnDecl__BodyAssignment_4_0 ) )
            {
            // InternalFortXTrans.g:5088:1: ( ( rule__FnDecl__BodyAssignment_4_0 ) )
            // InternalFortXTrans.g:5089:2: ( rule__FnDecl__BodyAssignment_4_0 )
            {
             before(grammarAccess.getFnDeclAccess().getBodyAssignment_4_0()); 
            // InternalFortXTrans.g:5090:2: ( rule__FnDecl__BodyAssignment_4_0 )
            // InternalFortXTrans.g:5090:3: rule__FnDecl__BodyAssignment_4_0
            {
            pushFollow(FOLLOW_2);
            rule__FnDecl__BodyAssignment_4_0();

            state._fsp--;


            }

             after(grammarAccess.getFnDeclAccess().getBodyAssignment_4_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FnDecl__Group_4__0__Impl"


    // $ANTLR start "rule__FnDecl__Group_4__1"
    // InternalFortXTrans.g:5098:1: rule__FnDecl__Group_4__1 : rule__FnDecl__Group_4__1__Impl ;
    public final void rule__FnDecl__Group_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5102:1: ( rule__FnDecl__Group_4__1__Impl )
            // InternalFortXTrans.g:5103:2: rule__FnDecl__Group_4__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FnDecl__Group_4__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FnDecl__Group_4__1"


    // $ANTLR start "rule__FnDecl__Group_4__1__Impl"
    // InternalFortXTrans.g:5109:1: rule__FnDecl__Group_4__1__Impl : ( ( rule__FnDecl__FnItselfAssignment_4_1 ) ) ;
    public final void rule__FnDecl__Group_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5113:1: ( ( ( rule__FnDecl__FnItselfAssignment_4_1 ) ) )
            // InternalFortXTrans.g:5114:1: ( ( rule__FnDecl__FnItselfAssignment_4_1 ) )
            {
            // InternalFortXTrans.g:5114:1: ( ( rule__FnDecl__FnItselfAssignment_4_1 ) )
            // InternalFortXTrans.g:5115:2: ( rule__FnDecl__FnItselfAssignment_4_1 )
            {
             before(grammarAccess.getFnDeclAccess().getFnItselfAssignment_4_1()); 
            // InternalFortXTrans.g:5116:2: ( rule__FnDecl__FnItselfAssignment_4_1 )
            // InternalFortXTrans.g:5116:3: rule__FnDecl__FnItselfAssignment_4_1
            {
            pushFollow(FOLLOW_2);
            rule__FnDecl__FnItselfAssignment_4_1();

            state._fsp--;


            }

             after(grammarAccess.getFnDeclAccess().getFnItselfAssignment_4_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FnDecl__Group_4__1__Impl"


    // $ANTLR start "rule__Stmnts__Group_1__0"
    // InternalFortXTrans.g:5125:1: rule__Stmnts__Group_1__0 : rule__Stmnts__Group_1__0__Impl rule__Stmnts__Group_1__1 ;
    public final void rule__Stmnts__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5129:1: ( rule__Stmnts__Group_1__0__Impl rule__Stmnts__Group_1__1 )
            // InternalFortXTrans.g:5130:2: rule__Stmnts__Group_1__0__Impl rule__Stmnts__Group_1__1
            {
            pushFollow(FOLLOW_33);
            rule__Stmnts__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Stmnts__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Stmnts__Group_1__0"


    // $ANTLR start "rule__Stmnts__Group_1__0__Impl"
    // InternalFortXTrans.g:5137:1: rule__Stmnts__Group_1__0__Impl : ( '(' ) ;
    public final void rule__Stmnts__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5141:1: ( ( '(' ) )
            // InternalFortXTrans.g:5142:1: ( '(' )
            {
            // InternalFortXTrans.g:5142:1: ( '(' )
            // InternalFortXTrans.g:5143:2: '('
            {
             before(grammarAccess.getStmntsAccess().getLeftParenthesisKeyword_1_0()); 
            match(input,33,FOLLOW_2); 
             after(grammarAccess.getStmntsAccess().getLeftParenthesisKeyword_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Stmnts__Group_1__0__Impl"


    // $ANTLR start "rule__Stmnts__Group_1__1"
    // InternalFortXTrans.g:5152:1: rule__Stmnts__Group_1__1 : rule__Stmnts__Group_1__1__Impl rule__Stmnts__Group_1__2 ;
    public final void rule__Stmnts__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5156:1: ( rule__Stmnts__Group_1__1__Impl rule__Stmnts__Group_1__2 )
            // InternalFortXTrans.g:5157:2: rule__Stmnts__Group_1__1__Impl rule__Stmnts__Group_1__2
            {
            pushFollow(FOLLOW_34);
            rule__Stmnts__Group_1__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Stmnts__Group_1__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Stmnts__Group_1__1"


    // $ANTLR start "rule__Stmnts__Group_1__1__Impl"
    // InternalFortXTrans.g:5164:1: rule__Stmnts__Group_1__1__Impl : ( '|' ) ;
    public final void rule__Stmnts__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5168:1: ( ( '|' ) )
            // InternalFortXTrans.g:5169:1: ( '|' )
            {
            // InternalFortXTrans.g:5169:1: ( '|' )
            // InternalFortXTrans.g:5170:2: '|'
            {
             before(grammarAccess.getStmntsAccess().getVerticalLineKeyword_1_1()); 
            match(input,36,FOLLOW_2); 
             after(grammarAccess.getStmntsAccess().getVerticalLineKeyword_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Stmnts__Group_1__1__Impl"


    // $ANTLR start "rule__Stmnts__Group_1__2"
    // InternalFortXTrans.g:5179:1: rule__Stmnts__Group_1__2 : rule__Stmnts__Group_1__2__Impl rule__Stmnts__Group_1__3 ;
    public final void rule__Stmnts__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5183:1: ( rule__Stmnts__Group_1__2__Impl rule__Stmnts__Group_1__3 )
            // InternalFortXTrans.g:5184:2: rule__Stmnts__Group_1__2__Impl rule__Stmnts__Group_1__3
            {
            pushFollow(FOLLOW_33);
            rule__Stmnts__Group_1__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Stmnts__Group_1__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Stmnts__Group_1__2"


    // $ANTLR start "rule__Stmnts__Group_1__2__Impl"
    // InternalFortXTrans.g:5191:1: rule__Stmnts__Group_1__2__Impl : ( ( rule__Stmnts__DelimsAssignment_1_2 ) ) ;
    public final void rule__Stmnts__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5195:1: ( ( ( rule__Stmnts__DelimsAssignment_1_2 ) ) )
            // InternalFortXTrans.g:5196:1: ( ( rule__Stmnts__DelimsAssignment_1_2 ) )
            {
            // InternalFortXTrans.g:5196:1: ( ( rule__Stmnts__DelimsAssignment_1_2 ) )
            // InternalFortXTrans.g:5197:2: ( rule__Stmnts__DelimsAssignment_1_2 )
            {
             before(grammarAccess.getStmntsAccess().getDelimsAssignment_1_2()); 
            // InternalFortXTrans.g:5198:2: ( rule__Stmnts__DelimsAssignment_1_2 )
            // InternalFortXTrans.g:5198:3: rule__Stmnts__DelimsAssignment_1_2
            {
            pushFollow(FOLLOW_2);
            rule__Stmnts__DelimsAssignment_1_2();

            state._fsp--;


            }

             after(grammarAccess.getStmntsAccess().getDelimsAssignment_1_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Stmnts__Group_1__2__Impl"


    // $ANTLR start "rule__Stmnts__Group_1__3"
    // InternalFortXTrans.g:5206:1: rule__Stmnts__Group_1__3 : rule__Stmnts__Group_1__3__Impl rule__Stmnts__Group_1__4 ;
    public final void rule__Stmnts__Group_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5210:1: ( rule__Stmnts__Group_1__3__Impl rule__Stmnts__Group_1__4 )
            // InternalFortXTrans.g:5211:2: rule__Stmnts__Group_1__3__Impl rule__Stmnts__Group_1__4
            {
            pushFollow(FOLLOW_23);
            rule__Stmnts__Group_1__3__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Stmnts__Group_1__4();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Stmnts__Group_1__3"


    // $ANTLR start "rule__Stmnts__Group_1__3__Impl"
    // InternalFortXTrans.g:5218:1: rule__Stmnts__Group_1__3__Impl : ( '|' ) ;
    public final void rule__Stmnts__Group_1__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5222:1: ( ( '|' ) )
            // InternalFortXTrans.g:5223:1: ( '|' )
            {
            // InternalFortXTrans.g:5223:1: ( '|' )
            // InternalFortXTrans.g:5224:2: '|'
            {
             before(grammarAccess.getStmntsAccess().getVerticalLineKeyword_1_3()); 
            match(input,36,FOLLOW_2); 
             after(grammarAccess.getStmntsAccess().getVerticalLineKeyword_1_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Stmnts__Group_1__3__Impl"


    // $ANTLR start "rule__Stmnts__Group_1__4"
    // InternalFortXTrans.g:5233:1: rule__Stmnts__Group_1__4 : rule__Stmnts__Group_1__4__Impl ;
    public final void rule__Stmnts__Group_1__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5237:1: ( rule__Stmnts__Group_1__4__Impl )
            // InternalFortXTrans.g:5238:2: rule__Stmnts__Group_1__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Stmnts__Group_1__4__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Stmnts__Group_1__4"


    // $ANTLR start "rule__Stmnts__Group_1__4__Impl"
    // InternalFortXTrans.g:5244:1: rule__Stmnts__Group_1__4__Impl : ( ')' ) ;
    public final void rule__Stmnts__Group_1__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5248:1: ( ( ')' ) )
            // InternalFortXTrans.g:5249:1: ( ')' )
            {
            // InternalFortXTrans.g:5249:1: ( ')' )
            // InternalFortXTrans.g:5250:2: ')'
            {
             before(grammarAccess.getStmntsAccess().getRightParenthesisKeyword_1_4()); 
            match(input,34,FOLLOW_2); 
             after(grammarAccess.getStmntsAccess().getRightParenthesisKeyword_1_4()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Stmnts__Group_1__4__Impl"


    // $ANTLR start "rule__StmntList__Group__0"
    // InternalFortXTrans.g:5260:1: rule__StmntList__Group__0 : rule__StmntList__Group__0__Impl rule__StmntList__Group__1 ;
    public final void rule__StmntList__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5264:1: ( rule__StmntList__Group__0__Impl rule__StmntList__Group__1 )
            // InternalFortXTrans.g:5265:2: rule__StmntList__Group__0__Impl rule__StmntList__Group__1
            {
            pushFollow(FOLLOW_24);
            rule__StmntList__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__StmntList__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StmntList__Group__0"


    // $ANTLR start "rule__StmntList__Group__0__Impl"
    // InternalFortXTrans.g:5272:1: rule__StmntList__Group__0__Impl : ( ( rule__StmntList__DelimAssignment_0 ) ) ;
    public final void rule__StmntList__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5276:1: ( ( ( rule__StmntList__DelimAssignment_0 ) ) )
            // InternalFortXTrans.g:5277:1: ( ( rule__StmntList__DelimAssignment_0 ) )
            {
            // InternalFortXTrans.g:5277:1: ( ( rule__StmntList__DelimAssignment_0 ) )
            // InternalFortXTrans.g:5278:2: ( rule__StmntList__DelimAssignment_0 )
            {
             before(grammarAccess.getStmntListAccess().getDelimAssignment_0()); 
            // InternalFortXTrans.g:5279:2: ( rule__StmntList__DelimAssignment_0 )
            // InternalFortXTrans.g:5279:3: rule__StmntList__DelimAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__StmntList__DelimAssignment_0();

            state._fsp--;


            }

             after(grammarAccess.getStmntListAccess().getDelimAssignment_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StmntList__Group__0__Impl"


    // $ANTLR start "rule__StmntList__Group__1"
    // InternalFortXTrans.g:5287:1: rule__StmntList__Group__1 : rule__StmntList__Group__1__Impl ;
    public final void rule__StmntList__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5291:1: ( rule__StmntList__Group__1__Impl )
            // InternalFortXTrans.g:5292:2: rule__StmntList__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__StmntList__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StmntList__Group__1"


    // $ANTLR start "rule__StmntList__Group__1__Impl"
    // InternalFortXTrans.g:5298:1: rule__StmntList__Group__1__Impl : ( ( rule__StmntList__Group_1__0 )* ) ;
    public final void rule__StmntList__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5302:1: ( ( ( rule__StmntList__Group_1__0 )* ) )
            // InternalFortXTrans.g:5303:1: ( ( rule__StmntList__Group_1__0 )* )
            {
            // InternalFortXTrans.g:5303:1: ( ( rule__StmntList__Group_1__0 )* )
            // InternalFortXTrans.g:5304:2: ( rule__StmntList__Group_1__0 )*
            {
             before(grammarAccess.getStmntListAccess().getGroup_1()); 
            // InternalFortXTrans.g:5305:2: ( rule__StmntList__Group_1__0 )*
            loop51:
            do {
                int alt51=2;
                int LA51_0 = input.LA(1);

                if ( (LA51_0==29) ) {
                    alt51=1;
                }


                switch (alt51) {
            	case 1 :
            	    // InternalFortXTrans.g:5305:3: rule__StmntList__Group_1__0
            	    {
            	    pushFollow(FOLLOW_15);
            	    rule__StmntList__Group_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop51;
                }
            } while (true);

             after(grammarAccess.getStmntListAccess().getGroup_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StmntList__Group__1__Impl"


    // $ANTLR start "rule__StmntList__Group_1__0"
    // InternalFortXTrans.g:5314:1: rule__StmntList__Group_1__0 : rule__StmntList__Group_1__0__Impl rule__StmntList__Group_1__1 ;
    public final void rule__StmntList__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5318:1: ( rule__StmntList__Group_1__0__Impl rule__StmntList__Group_1__1 )
            // InternalFortXTrans.g:5319:2: rule__StmntList__Group_1__0__Impl rule__StmntList__Group_1__1
            {
            pushFollow(FOLLOW_34);
            rule__StmntList__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__StmntList__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StmntList__Group_1__0"


    // $ANTLR start "rule__StmntList__Group_1__0__Impl"
    // InternalFortXTrans.g:5326:1: rule__StmntList__Group_1__0__Impl : ( ',' ) ;
    public final void rule__StmntList__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5330:1: ( ( ',' ) )
            // InternalFortXTrans.g:5331:1: ( ',' )
            {
            // InternalFortXTrans.g:5331:1: ( ',' )
            // InternalFortXTrans.g:5332:2: ','
            {
             before(grammarAccess.getStmntListAccess().getCommaKeyword_1_0()); 
            match(input,29,FOLLOW_2); 
             after(grammarAccess.getStmntListAccess().getCommaKeyword_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StmntList__Group_1__0__Impl"


    // $ANTLR start "rule__StmntList__Group_1__1"
    // InternalFortXTrans.g:5341:1: rule__StmntList__Group_1__1 : rule__StmntList__Group_1__1__Impl ;
    public final void rule__StmntList__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5345:1: ( rule__StmntList__Group_1__1__Impl )
            // InternalFortXTrans.g:5346:2: rule__StmntList__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__StmntList__Group_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StmntList__Group_1__1"


    // $ANTLR start "rule__StmntList__Group_1__1__Impl"
    // InternalFortXTrans.g:5352:1: rule__StmntList__Group_1__1__Impl : ( ( rule__StmntList__DelimAssignment_1_1 ) ) ;
    public final void rule__StmntList__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5356:1: ( ( ( rule__StmntList__DelimAssignment_1_1 ) ) )
            // InternalFortXTrans.g:5357:1: ( ( rule__StmntList__DelimAssignment_1_1 ) )
            {
            // InternalFortXTrans.g:5357:1: ( ( rule__StmntList__DelimAssignment_1_1 ) )
            // InternalFortXTrans.g:5358:2: ( rule__StmntList__DelimAssignment_1_1 )
            {
             before(grammarAccess.getStmntListAccess().getDelimAssignment_1_1()); 
            // InternalFortXTrans.g:5359:2: ( rule__StmntList__DelimAssignment_1_1 )
            // InternalFortXTrans.g:5359:3: rule__StmntList__DelimAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__StmntList__DelimAssignment_1_1();

            state._fsp--;


            }

             after(grammarAccess.getStmntListAccess().getDelimAssignment_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StmntList__Group_1__1__Impl"


    // $ANTLR start "rule__Expr__Group__0"
    // InternalFortXTrans.g:5368:1: rule__Expr__Group__0 : rule__Expr__Group__0__Impl rule__Expr__Group__1 ;
    public final void rule__Expr__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5372:1: ( rule__Expr__Group__0__Impl rule__Expr__Group__1 )
            // InternalFortXTrans.g:5373:2: rule__Expr__Group__0__Impl rule__Expr__Group__1
            {
            pushFollow(FOLLOW_20);
            rule__Expr__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Expr__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Expr__Group__0"


    // $ANTLR start "rule__Expr__Group__0__Impl"
    // InternalFortXTrans.g:5380:1: rule__Expr__Group__0__Impl : ( ruleOr ) ;
    public final void rule__Expr__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5384:1: ( ( ruleOr ) )
            // InternalFortXTrans.g:5385:1: ( ruleOr )
            {
            // InternalFortXTrans.g:5385:1: ( ruleOr )
            // InternalFortXTrans.g:5386:2: ruleOr
            {
             before(grammarAccess.getExprAccess().getOrParserRuleCall_0()); 
            pushFollow(FOLLOW_2);
            ruleOr();

            state._fsp--;

             after(grammarAccess.getExprAccess().getOrParserRuleCall_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Expr__Group__0__Impl"


    // $ANTLR start "rule__Expr__Group__1"
    // InternalFortXTrans.g:5395:1: rule__Expr__Group__1 : rule__Expr__Group__1__Impl ;
    public final void rule__Expr__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5399:1: ( rule__Expr__Group__1__Impl )
            // InternalFortXTrans.g:5400:2: rule__Expr__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Expr__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Expr__Group__1"


    // $ANTLR start "rule__Expr__Group__1__Impl"
    // InternalFortXTrans.g:5406:1: rule__Expr__Group__1__Impl : ( ( rule__Expr__TailAssignment_1 )* ) ;
    public final void rule__Expr__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5410:1: ( ( ( rule__Expr__TailAssignment_1 )* ) )
            // InternalFortXTrans.g:5411:1: ( ( rule__Expr__TailAssignment_1 )* )
            {
            // InternalFortXTrans.g:5411:1: ( ( rule__Expr__TailAssignment_1 )* )
            // InternalFortXTrans.g:5412:2: ( rule__Expr__TailAssignment_1 )*
            {
             before(grammarAccess.getExprAccess().getTailAssignment_1()); 
            // InternalFortXTrans.g:5413:2: ( rule__Expr__TailAssignment_1 )*
            loop52:
            do {
                int alt52=2;
                int LA52_0 = input.LA(1);

                if ( (LA52_0==32) ) {
                    alt52=1;
                }


                switch (alt52) {
            	case 1 :
            	    // InternalFortXTrans.g:5413:3: rule__Expr__TailAssignment_1
            	    {
            	    pushFollow(FOLLOW_35);
            	    rule__Expr__TailAssignment_1();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop52;
                }
            } while (true);

             after(grammarAccess.getExprAccess().getTailAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Expr__Group__1__Impl"


    // $ANTLR start "rule__Or__Group__0"
    // InternalFortXTrans.g:5422:1: rule__Or__Group__0 : rule__Or__Group__0__Impl rule__Or__Group__1 ;
    public final void rule__Or__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5426:1: ( rule__Or__Group__0__Impl rule__Or__Group__1 )
            // InternalFortXTrans.g:5427:2: rule__Or__Group__0__Impl rule__Or__Group__1
            {
            pushFollow(FOLLOW_36);
            rule__Or__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Or__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Or__Group__0"


    // $ANTLR start "rule__Or__Group__0__Impl"
    // InternalFortXTrans.g:5434:1: rule__Or__Group__0__Impl : ( ruleAnd ) ;
    public final void rule__Or__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5438:1: ( ( ruleAnd ) )
            // InternalFortXTrans.g:5439:1: ( ruleAnd )
            {
            // InternalFortXTrans.g:5439:1: ( ruleAnd )
            // InternalFortXTrans.g:5440:2: ruleAnd
            {
             before(grammarAccess.getOrAccess().getAndParserRuleCall_0()); 
            pushFollow(FOLLOW_2);
            ruleAnd();

            state._fsp--;

             after(grammarAccess.getOrAccess().getAndParserRuleCall_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Or__Group__0__Impl"


    // $ANTLR start "rule__Or__Group__1"
    // InternalFortXTrans.g:5449:1: rule__Or__Group__1 : rule__Or__Group__1__Impl ;
    public final void rule__Or__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5453:1: ( rule__Or__Group__1__Impl )
            // InternalFortXTrans.g:5454:2: rule__Or__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Or__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Or__Group__1"


    // $ANTLR start "rule__Or__Group__1__Impl"
    // InternalFortXTrans.g:5460:1: rule__Or__Group__1__Impl : ( ( rule__Or__Group_1__0 )* ) ;
    public final void rule__Or__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5464:1: ( ( ( rule__Or__Group_1__0 )* ) )
            // InternalFortXTrans.g:5465:1: ( ( rule__Or__Group_1__0 )* )
            {
            // InternalFortXTrans.g:5465:1: ( ( rule__Or__Group_1__0 )* )
            // InternalFortXTrans.g:5466:2: ( rule__Or__Group_1__0 )*
            {
             before(grammarAccess.getOrAccess().getGroup_1()); 
            // InternalFortXTrans.g:5467:2: ( rule__Or__Group_1__0 )*
            loop53:
            do {
                int alt53=2;
                int LA53_0 = input.LA(1);

                if ( (LA53_0==37) ) {
                    alt53=1;
                }


                switch (alt53) {
            	case 1 :
            	    // InternalFortXTrans.g:5467:3: rule__Or__Group_1__0
            	    {
            	    pushFollow(FOLLOW_37);
            	    rule__Or__Group_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop53;
                }
            } while (true);

             after(grammarAccess.getOrAccess().getGroup_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Or__Group__1__Impl"


    // $ANTLR start "rule__Or__Group_1__0"
    // InternalFortXTrans.g:5476:1: rule__Or__Group_1__0 : rule__Or__Group_1__0__Impl rule__Or__Group_1__1 ;
    public final void rule__Or__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5480:1: ( rule__Or__Group_1__0__Impl rule__Or__Group_1__1 )
            // InternalFortXTrans.g:5481:2: rule__Or__Group_1__0__Impl rule__Or__Group_1__1
            {
            pushFollow(FOLLOW_36);
            rule__Or__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Or__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Or__Group_1__0"


    // $ANTLR start "rule__Or__Group_1__0__Impl"
    // InternalFortXTrans.g:5488:1: rule__Or__Group_1__0__Impl : ( () ) ;
    public final void rule__Or__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5492:1: ( ( () ) )
            // InternalFortXTrans.g:5493:1: ( () )
            {
            // InternalFortXTrans.g:5493:1: ( () )
            // InternalFortXTrans.g:5494:2: ()
            {
             before(grammarAccess.getOrAccess().getOrLeftAction_1_0()); 
            // InternalFortXTrans.g:5495:2: ()
            // InternalFortXTrans.g:5495:3: 
            {
            }

             after(grammarAccess.getOrAccess().getOrLeftAction_1_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Or__Group_1__0__Impl"


    // $ANTLR start "rule__Or__Group_1__1"
    // InternalFortXTrans.g:5503:1: rule__Or__Group_1__1 : rule__Or__Group_1__1__Impl rule__Or__Group_1__2 ;
    public final void rule__Or__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5507:1: ( rule__Or__Group_1__1__Impl rule__Or__Group_1__2 )
            // InternalFortXTrans.g:5508:2: rule__Or__Group_1__1__Impl rule__Or__Group_1__2
            {
            pushFollow(FOLLOW_32);
            rule__Or__Group_1__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Or__Group_1__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Or__Group_1__1"


    // $ANTLR start "rule__Or__Group_1__1__Impl"
    // InternalFortXTrans.g:5515:1: rule__Or__Group_1__1__Impl : ( 'OR' ) ;
    public final void rule__Or__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5519:1: ( ( 'OR' ) )
            // InternalFortXTrans.g:5520:1: ( 'OR' )
            {
            // InternalFortXTrans.g:5520:1: ( 'OR' )
            // InternalFortXTrans.g:5521:2: 'OR'
            {
             before(grammarAccess.getOrAccess().getORKeyword_1_1()); 
            match(input,37,FOLLOW_2); 
             after(grammarAccess.getOrAccess().getORKeyword_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Or__Group_1__1__Impl"


    // $ANTLR start "rule__Or__Group_1__2"
    // InternalFortXTrans.g:5530:1: rule__Or__Group_1__2 : rule__Or__Group_1__2__Impl ;
    public final void rule__Or__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5534:1: ( rule__Or__Group_1__2__Impl )
            // InternalFortXTrans.g:5535:2: rule__Or__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Or__Group_1__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Or__Group_1__2"


    // $ANTLR start "rule__Or__Group_1__2__Impl"
    // InternalFortXTrans.g:5541:1: rule__Or__Group_1__2__Impl : ( ( rule__Or__RightAssignment_1_2 ) ) ;
    public final void rule__Or__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5545:1: ( ( ( rule__Or__RightAssignment_1_2 ) ) )
            // InternalFortXTrans.g:5546:1: ( ( rule__Or__RightAssignment_1_2 ) )
            {
            // InternalFortXTrans.g:5546:1: ( ( rule__Or__RightAssignment_1_2 ) )
            // InternalFortXTrans.g:5547:2: ( rule__Or__RightAssignment_1_2 )
            {
             before(grammarAccess.getOrAccess().getRightAssignment_1_2()); 
            // InternalFortXTrans.g:5548:2: ( rule__Or__RightAssignment_1_2 )
            // InternalFortXTrans.g:5548:3: rule__Or__RightAssignment_1_2
            {
            pushFollow(FOLLOW_2);
            rule__Or__RightAssignment_1_2();

            state._fsp--;


            }

             after(grammarAccess.getOrAccess().getRightAssignment_1_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Or__Group_1__2__Impl"


    // $ANTLR start "rule__And__Group__0"
    // InternalFortXTrans.g:5557:1: rule__And__Group__0 : rule__And__Group__0__Impl rule__And__Group__1 ;
    public final void rule__And__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5561:1: ( rule__And__Group__0__Impl rule__And__Group__1 )
            // InternalFortXTrans.g:5562:2: rule__And__Group__0__Impl rule__And__Group__1
            {
            pushFollow(FOLLOW_38);
            rule__And__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__And__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__And__Group__0"


    // $ANTLR start "rule__And__Group__0__Impl"
    // InternalFortXTrans.g:5569:1: rule__And__Group__0__Impl : ( ruleEquality ) ;
    public final void rule__And__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5573:1: ( ( ruleEquality ) )
            // InternalFortXTrans.g:5574:1: ( ruleEquality )
            {
            // InternalFortXTrans.g:5574:1: ( ruleEquality )
            // InternalFortXTrans.g:5575:2: ruleEquality
            {
             before(grammarAccess.getAndAccess().getEqualityParserRuleCall_0()); 
            pushFollow(FOLLOW_2);
            ruleEquality();

            state._fsp--;

             after(grammarAccess.getAndAccess().getEqualityParserRuleCall_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__And__Group__0__Impl"


    // $ANTLR start "rule__And__Group__1"
    // InternalFortXTrans.g:5584:1: rule__And__Group__1 : rule__And__Group__1__Impl ;
    public final void rule__And__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5588:1: ( rule__And__Group__1__Impl )
            // InternalFortXTrans.g:5589:2: rule__And__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__And__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__And__Group__1"


    // $ANTLR start "rule__And__Group__1__Impl"
    // InternalFortXTrans.g:5595:1: rule__And__Group__1__Impl : ( ( rule__And__Group_1__0 )* ) ;
    public final void rule__And__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5599:1: ( ( ( rule__And__Group_1__0 )* ) )
            // InternalFortXTrans.g:5600:1: ( ( rule__And__Group_1__0 )* )
            {
            // InternalFortXTrans.g:5600:1: ( ( rule__And__Group_1__0 )* )
            // InternalFortXTrans.g:5601:2: ( rule__And__Group_1__0 )*
            {
             before(grammarAccess.getAndAccess().getGroup_1()); 
            // InternalFortXTrans.g:5602:2: ( rule__And__Group_1__0 )*
            loop54:
            do {
                int alt54=2;
                int LA54_0 = input.LA(1);

                if ( (LA54_0==38) ) {
                    alt54=1;
                }


                switch (alt54) {
            	case 1 :
            	    // InternalFortXTrans.g:5602:3: rule__And__Group_1__0
            	    {
            	    pushFollow(FOLLOW_39);
            	    rule__And__Group_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop54;
                }
            } while (true);

             after(grammarAccess.getAndAccess().getGroup_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__And__Group__1__Impl"


    // $ANTLR start "rule__And__Group_1__0"
    // InternalFortXTrans.g:5611:1: rule__And__Group_1__0 : rule__And__Group_1__0__Impl rule__And__Group_1__1 ;
    public final void rule__And__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5615:1: ( rule__And__Group_1__0__Impl rule__And__Group_1__1 )
            // InternalFortXTrans.g:5616:2: rule__And__Group_1__0__Impl rule__And__Group_1__1
            {
            pushFollow(FOLLOW_38);
            rule__And__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__And__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__And__Group_1__0"


    // $ANTLR start "rule__And__Group_1__0__Impl"
    // InternalFortXTrans.g:5623:1: rule__And__Group_1__0__Impl : ( () ) ;
    public final void rule__And__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5627:1: ( ( () ) )
            // InternalFortXTrans.g:5628:1: ( () )
            {
            // InternalFortXTrans.g:5628:1: ( () )
            // InternalFortXTrans.g:5629:2: ()
            {
             before(grammarAccess.getAndAccess().getAndLeftAction_1_0()); 
            // InternalFortXTrans.g:5630:2: ()
            // InternalFortXTrans.g:5630:3: 
            {
            }

             after(grammarAccess.getAndAccess().getAndLeftAction_1_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__And__Group_1__0__Impl"


    // $ANTLR start "rule__And__Group_1__1"
    // InternalFortXTrans.g:5638:1: rule__And__Group_1__1 : rule__And__Group_1__1__Impl rule__And__Group_1__2 ;
    public final void rule__And__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5642:1: ( rule__And__Group_1__1__Impl rule__And__Group_1__2 )
            // InternalFortXTrans.g:5643:2: rule__And__Group_1__1__Impl rule__And__Group_1__2
            {
            pushFollow(FOLLOW_32);
            rule__And__Group_1__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__And__Group_1__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__And__Group_1__1"


    // $ANTLR start "rule__And__Group_1__1__Impl"
    // InternalFortXTrans.g:5650:1: rule__And__Group_1__1__Impl : ( 'AND' ) ;
    public final void rule__And__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5654:1: ( ( 'AND' ) )
            // InternalFortXTrans.g:5655:1: ( 'AND' )
            {
            // InternalFortXTrans.g:5655:1: ( 'AND' )
            // InternalFortXTrans.g:5656:2: 'AND'
            {
             before(grammarAccess.getAndAccess().getANDKeyword_1_1()); 
            match(input,38,FOLLOW_2); 
             after(grammarAccess.getAndAccess().getANDKeyword_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__And__Group_1__1__Impl"


    // $ANTLR start "rule__And__Group_1__2"
    // InternalFortXTrans.g:5665:1: rule__And__Group_1__2 : rule__And__Group_1__2__Impl ;
    public final void rule__And__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5669:1: ( rule__And__Group_1__2__Impl )
            // InternalFortXTrans.g:5670:2: rule__And__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__And__Group_1__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__And__Group_1__2"


    // $ANTLR start "rule__And__Group_1__2__Impl"
    // InternalFortXTrans.g:5676:1: rule__And__Group_1__2__Impl : ( ( rule__And__RightAssignment_1_2 ) ) ;
    public final void rule__And__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5680:1: ( ( ( rule__And__RightAssignment_1_2 ) ) )
            // InternalFortXTrans.g:5681:1: ( ( rule__And__RightAssignment_1_2 ) )
            {
            // InternalFortXTrans.g:5681:1: ( ( rule__And__RightAssignment_1_2 ) )
            // InternalFortXTrans.g:5682:2: ( rule__And__RightAssignment_1_2 )
            {
             before(grammarAccess.getAndAccess().getRightAssignment_1_2()); 
            // InternalFortXTrans.g:5683:2: ( rule__And__RightAssignment_1_2 )
            // InternalFortXTrans.g:5683:3: rule__And__RightAssignment_1_2
            {
            pushFollow(FOLLOW_2);
            rule__And__RightAssignment_1_2();

            state._fsp--;


            }

             after(grammarAccess.getAndAccess().getRightAssignment_1_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__And__Group_1__2__Impl"


    // $ANTLR start "rule__Equality__Group__0"
    // InternalFortXTrans.g:5692:1: rule__Equality__Group__0 : rule__Equality__Group__0__Impl rule__Equality__Group__1 ;
    public final void rule__Equality__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5696:1: ( rule__Equality__Group__0__Impl rule__Equality__Group__1 )
            // InternalFortXTrans.g:5697:2: rule__Equality__Group__0__Impl rule__Equality__Group__1
            {
            pushFollow(FOLLOW_40);
            rule__Equality__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Equality__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equality__Group__0"


    // $ANTLR start "rule__Equality__Group__0__Impl"
    // InternalFortXTrans.g:5704:1: rule__Equality__Group__0__Impl : ( ruleComparison ) ;
    public final void rule__Equality__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5708:1: ( ( ruleComparison ) )
            // InternalFortXTrans.g:5709:1: ( ruleComparison )
            {
            // InternalFortXTrans.g:5709:1: ( ruleComparison )
            // InternalFortXTrans.g:5710:2: ruleComparison
            {
             before(grammarAccess.getEqualityAccess().getComparisonParserRuleCall_0()); 
            pushFollow(FOLLOW_2);
            ruleComparison();

            state._fsp--;

             after(grammarAccess.getEqualityAccess().getComparisonParserRuleCall_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equality__Group__0__Impl"


    // $ANTLR start "rule__Equality__Group__1"
    // InternalFortXTrans.g:5719:1: rule__Equality__Group__1 : rule__Equality__Group__1__Impl ;
    public final void rule__Equality__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5723:1: ( rule__Equality__Group__1__Impl )
            // InternalFortXTrans.g:5724:2: rule__Equality__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Equality__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equality__Group__1"


    // $ANTLR start "rule__Equality__Group__1__Impl"
    // InternalFortXTrans.g:5730:1: rule__Equality__Group__1__Impl : ( ( rule__Equality__Group_1__0 )* ) ;
    public final void rule__Equality__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5734:1: ( ( ( rule__Equality__Group_1__0 )* ) )
            // InternalFortXTrans.g:5735:1: ( ( rule__Equality__Group_1__0 )* )
            {
            // InternalFortXTrans.g:5735:1: ( ( rule__Equality__Group_1__0 )* )
            // InternalFortXTrans.g:5736:2: ( rule__Equality__Group_1__0 )*
            {
             before(grammarAccess.getEqualityAccess().getGroup_1()); 
            // InternalFortXTrans.g:5737:2: ( rule__Equality__Group_1__0 )*
            loop55:
            do {
                int alt55=2;
                switch ( input.LA(1) ) {
                case 13:
                    {
                    alt55=1;
                    }
                    break;
                case 14:
                    {
                    alt55=1;
                    }
                    break;
                case 15:
                    {
                    alt55=1;
                    }
                    break;
                case 16:
                    {
                    alt55=1;
                    }
                    break;

                }

                switch (alt55) {
            	case 1 :
            	    // InternalFortXTrans.g:5737:3: rule__Equality__Group_1__0
            	    {
            	    pushFollow(FOLLOW_41);
            	    rule__Equality__Group_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop55;
                }
            } while (true);

             after(grammarAccess.getEqualityAccess().getGroup_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equality__Group__1__Impl"


    // $ANTLR start "rule__Equality__Group_1__0"
    // InternalFortXTrans.g:5746:1: rule__Equality__Group_1__0 : rule__Equality__Group_1__0__Impl rule__Equality__Group_1__1 ;
    public final void rule__Equality__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5750:1: ( rule__Equality__Group_1__0__Impl rule__Equality__Group_1__1 )
            // InternalFortXTrans.g:5751:2: rule__Equality__Group_1__0__Impl rule__Equality__Group_1__1
            {
            pushFollow(FOLLOW_40);
            rule__Equality__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Equality__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equality__Group_1__0"


    // $ANTLR start "rule__Equality__Group_1__0__Impl"
    // InternalFortXTrans.g:5758:1: rule__Equality__Group_1__0__Impl : ( () ) ;
    public final void rule__Equality__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5762:1: ( ( () ) )
            // InternalFortXTrans.g:5763:1: ( () )
            {
            // InternalFortXTrans.g:5763:1: ( () )
            // InternalFortXTrans.g:5764:2: ()
            {
             before(grammarAccess.getEqualityAccess().getEqualityLeftAction_1_0()); 
            // InternalFortXTrans.g:5765:2: ()
            // InternalFortXTrans.g:5765:3: 
            {
            }

             after(grammarAccess.getEqualityAccess().getEqualityLeftAction_1_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equality__Group_1__0__Impl"


    // $ANTLR start "rule__Equality__Group_1__1"
    // InternalFortXTrans.g:5773:1: rule__Equality__Group_1__1 : rule__Equality__Group_1__1__Impl rule__Equality__Group_1__2 ;
    public final void rule__Equality__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5777:1: ( rule__Equality__Group_1__1__Impl rule__Equality__Group_1__2 )
            // InternalFortXTrans.g:5778:2: rule__Equality__Group_1__1__Impl rule__Equality__Group_1__2
            {
            pushFollow(FOLLOW_32);
            rule__Equality__Group_1__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Equality__Group_1__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equality__Group_1__1"


    // $ANTLR start "rule__Equality__Group_1__1__Impl"
    // InternalFortXTrans.g:5785:1: rule__Equality__Group_1__1__Impl : ( ( rule__Equality__OpAssignment_1_1 ) ) ;
    public final void rule__Equality__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5789:1: ( ( ( rule__Equality__OpAssignment_1_1 ) ) )
            // InternalFortXTrans.g:5790:1: ( ( rule__Equality__OpAssignment_1_1 ) )
            {
            // InternalFortXTrans.g:5790:1: ( ( rule__Equality__OpAssignment_1_1 ) )
            // InternalFortXTrans.g:5791:2: ( rule__Equality__OpAssignment_1_1 )
            {
             before(grammarAccess.getEqualityAccess().getOpAssignment_1_1()); 
            // InternalFortXTrans.g:5792:2: ( rule__Equality__OpAssignment_1_1 )
            // InternalFortXTrans.g:5792:3: rule__Equality__OpAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Equality__OpAssignment_1_1();

            state._fsp--;


            }

             after(grammarAccess.getEqualityAccess().getOpAssignment_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equality__Group_1__1__Impl"


    // $ANTLR start "rule__Equality__Group_1__2"
    // InternalFortXTrans.g:5800:1: rule__Equality__Group_1__2 : rule__Equality__Group_1__2__Impl ;
    public final void rule__Equality__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5804:1: ( rule__Equality__Group_1__2__Impl )
            // InternalFortXTrans.g:5805:2: rule__Equality__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Equality__Group_1__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equality__Group_1__2"


    // $ANTLR start "rule__Equality__Group_1__2__Impl"
    // InternalFortXTrans.g:5811:1: rule__Equality__Group_1__2__Impl : ( ( rule__Equality__RightAssignment_1_2 ) ) ;
    public final void rule__Equality__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5815:1: ( ( ( rule__Equality__RightAssignment_1_2 ) ) )
            // InternalFortXTrans.g:5816:1: ( ( rule__Equality__RightAssignment_1_2 ) )
            {
            // InternalFortXTrans.g:5816:1: ( ( rule__Equality__RightAssignment_1_2 ) )
            // InternalFortXTrans.g:5817:2: ( rule__Equality__RightAssignment_1_2 )
            {
             before(grammarAccess.getEqualityAccess().getRightAssignment_1_2()); 
            // InternalFortXTrans.g:5818:2: ( rule__Equality__RightAssignment_1_2 )
            // InternalFortXTrans.g:5818:3: rule__Equality__RightAssignment_1_2
            {
            pushFollow(FOLLOW_2);
            rule__Equality__RightAssignment_1_2();

            state._fsp--;


            }

             after(grammarAccess.getEqualityAccess().getRightAssignment_1_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equality__Group_1__2__Impl"


    // $ANTLR start "rule__Comparison__Group__0"
    // InternalFortXTrans.g:5827:1: rule__Comparison__Group__0 : rule__Comparison__Group__0__Impl rule__Comparison__Group__1 ;
    public final void rule__Comparison__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5831:1: ( rule__Comparison__Group__0__Impl rule__Comparison__Group__1 )
            // InternalFortXTrans.g:5832:2: rule__Comparison__Group__0__Impl rule__Comparison__Group__1
            {
            pushFollow(FOLLOW_42);
            rule__Comparison__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Comparison__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Group__0"


    // $ANTLR start "rule__Comparison__Group__0__Impl"
    // InternalFortXTrans.g:5839:1: rule__Comparison__Group__0__Impl : ( ruleAddExpr ) ;
    public final void rule__Comparison__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5843:1: ( ( ruleAddExpr ) )
            // InternalFortXTrans.g:5844:1: ( ruleAddExpr )
            {
            // InternalFortXTrans.g:5844:1: ( ruleAddExpr )
            // InternalFortXTrans.g:5845:2: ruleAddExpr
            {
             before(grammarAccess.getComparisonAccess().getAddExprParserRuleCall_0()); 
            pushFollow(FOLLOW_2);
            ruleAddExpr();

            state._fsp--;

             after(grammarAccess.getComparisonAccess().getAddExprParserRuleCall_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Group__0__Impl"


    // $ANTLR start "rule__Comparison__Group__1"
    // InternalFortXTrans.g:5854:1: rule__Comparison__Group__1 : rule__Comparison__Group__1__Impl ;
    public final void rule__Comparison__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5858:1: ( rule__Comparison__Group__1__Impl )
            // InternalFortXTrans.g:5859:2: rule__Comparison__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Comparison__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Group__1"


    // $ANTLR start "rule__Comparison__Group__1__Impl"
    // InternalFortXTrans.g:5865:1: rule__Comparison__Group__1__Impl : ( ( rule__Comparison__Group_1__0 )* ) ;
    public final void rule__Comparison__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5869:1: ( ( ( rule__Comparison__Group_1__0 )* ) )
            // InternalFortXTrans.g:5870:1: ( ( rule__Comparison__Group_1__0 )* )
            {
            // InternalFortXTrans.g:5870:1: ( ( rule__Comparison__Group_1__0 )* )
            // InternalFortXTrans.g:5871:2: ( rule__Comparison__Group_1__0 )*
            {
             before(grammarAccess.getComparisonAccess().getGroup_1()); 
            // InternalFortXTrans.g:5872:2: ( rule__Comparison__Group_1__0 )*
            loop56:
            do {
                int alt56=2;
                alt56 = dfa56.predict(input);
                switch (alt56) {
            	case 1 :
            	    // InternalFortXTrans.g:5872:3: rule__Comparison__Group_1__0
            	    {
            	    pushFollow(FOLLOW_43);
            	    rule__Comparison__Group_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop56;
                }
            } while (true);

             after(grammarAccess.getComparisonAccess().getGroup_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Group__1__Impl"


    // $ANTLR start "rule__Comparison__Group_1__0"
    // InternalFortXTrans.g:5881:1: rule__Comparison__Group_1__0 : rule__Comparison__Group_1__0__Impl rule__Comparison__Group_1__1 ;
    public final void rule__Comparison__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5885:1: ( rule__Comparison__Group_1__0__Impl rule__Comparison__Group_1__1 )
            // InternalFortXTrans.g:5886:2: rule__Comparison__Group_1__0__Impl rule__Comparison__Group_1__1
            {
            pushFollow(FOLLOW_42);
            rule__Comparison__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Comparison__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Group_1__0"


    // $ANTLR start "rule__Comparison__Group_1__0__Impl"
    // InternalFortXTrans.g:5893:1: rule__Comparison__Group_1__0__Impl : ( () ) ;
    public final void rule__Comparison__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5897:1: ( ( () ) )
            // InternalFortXTrans.g:5898:1: ( () )
            {
            // InternalFortXTrans.g:5898:1: ( () )
            // InternalFortXTrans.g:5899:2: ()
            {
             before(grammarAccess.getComparisonAccess().getComparisonLeftAction_1_0()); 
            // InternalFortXTrans.g:5900:2: ()
            // InternalFortXTrans.g:5900:3: 
            {
            }

             after(grammarAccess.getComparisonAccess().getComparisonLeftAction_1_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Group_1__0__Impl"


    // $ANTLR start "rule__Comparison__Group_1__1"
    // InternalFortXTrans.g:5908:1: rule__Comparison__Group_1__1 : rule__Comparison__Group_1__1__Impl rule__Comparison__Group_1__2 ;
    public final void rule__Comparison__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5912:1: ( rule__Comparison__Group_1__1__Impl rule__Comparison__Group_1__2 )
            // InternalFortXTrans.g:5913:2: rule__Comparison__Group_1__1__Impl rule__Comparison__Group_1__2
            {
            pushFollow(FOLLOW_32);
            rule__Comparison__Group_1__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Comparison__Group_1__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Group_1__1"


    // $ANTLR start "rule__Comparison__Group_1__1__Impl"
    // InternalFortXTrans.g:5920:1: rule__Comparison__Group_1__1__Impl : ( ( rule__Comparison__OpAssignment_1_1 ) ) ;
    public final void rule__Comparison__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5924:1: ( ( ( rule__Comparison__OpAssignment_1_1 ) ) )
            // InternalFortXTrans.g:5925:1: ( ( rule__Comparison__OpAssignment_1_1 ) )
            {
            // InternalFortXTrans.g:5925:1: ( ( rule__Comparison__OpAssignment_1_1 ) )
            // InternalFortXTrans.g:5926:2: ( rule__Comparison__OpAssignment_1_1 )
            {
             before(grammarAccess.getComparisonAccess().getOpAssignment_1_1()); 
            // InternalFortXTrans.g:5927:2: ( rule__Comparison__OpAssignment_1_1 )
            // InternalFortXTrans.g:5927:3: rule__Comparison__OpAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Comparison__OpAssignment_1_1();

            state._fsp--;


            }

             after(grammarAccess.getComparisonAccess().getOpAssignment_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Group_1__1__Impl"


    // $ANTLR start "rule__Comparison__Group_1__2"
    // InternalFortXTrans.g:5935:1: rule__Comparison__Group_1__2 : rule__Comparison__Group_1__2__Impl ;
    public final void rule__Comparison__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5939:1: ( rule__Comparison__Group_1__2__Impl )
            // InternalFortXTrans.g:5940:2: rule__Comparison__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Comparison__Group_1__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Group_1__2"


    // $ANTLR start "rule__Comparison__Group_1__2__Impl"
    // InternalFortXTrans.g:5946:1: rule__Comparison__Group_1__2__Impl : ( ( rule__Comparison__RightAssignment_1_2 ) ) ;
    public final void rule__Comparison__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5950:1: ( ( ( rule__Comparison__RightAssignment_1_2 ) ) )
            // InternalFortXTrans.g:5951:1: ( ( rule__Comparison__RightAssignment_1_2 ) )
            {
            // InternalFortXTrans.g:5951:1: ( ( rule__Comparison__RightAssignment_1_2 ) )
            // InternalFortXTrans.g:5952:2: ( rule__Comparison__RightAssignment_1_2 )
            {
             before(grammarAccess.getComparisonAccess().getRightAssignment_1_2()); 
            // InternalFortXTrans.g:5953:2: ( rule__Comparison__RightAssignment_1_2 )
            // InternalFortXTrans.g:5953:3: rule__Comparison__RightAssignment_1_2
            {
            pushFollow(FOLLOW_2);
            rule__Comparison__RightAssignment_1_2();

            state._fsp--;


            }

             after(grammarAccess.getComparisonAccess().getRightAssignment_1_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Group_1__2__Impl"


    // $ANTLR start "rule__AddExpr__Group__0"
    // InternalFortXTrans.g:5962:1: rule__AddExpr__Group__0 : rule__AddExpr__Group__0__Impl rule__AddExpr__Group__1 ;
    public final void rule__AddExpr__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5966:1: ( rule__AddExpr__Group__0__Impl rule__AddExpr__Group__1 )
            // InternalFortXTrans.g:5967:2: rule__AddExpr__Group__0__Impl rule__AddExpr__Group__1
            {
            pushFollow(FOLLOW_44);
            rule__AddExpr__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__AddExpr__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AddExpr__Group__0"


    // $ANTLR start "rule__AddExpr__Group__0__Impl"
    // InternalFortXTrans.g:5974:1: rule__AddExpr__Group__0__Impl : ( ruleSubExpr ) ;
    public final void rule__AddExpr__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5978:1: ( ( ruleSubExpr ) )
            // InternalFortXTrans.g:5979:1: ( ruleSubExpr )
            {
            // InternalFortXTrans.g:5979:1: ( ruleSubExpr )
            // InternalFortXTrans.g:5980:2: ruleSubExpr
            {
             before(grammarAccess.getAddExprAccess().getSubExprParserRuleCall_0()); 
            pushFollow(FOLLOW_2);
            ruleSubExpr();

            state._fsp--;

             after(grammarAccess.getAddExprAccess().getSubExprParserRuleCall_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AddExpr__Group__0__Impl"


    // $ANTLR start "rule__AddExpr__Group__1"
    // InternalFortXTrans.g:5989:1: rule__AddExpr__Group__1 : rule__AddExpr__Group__1__Impl ;
    public final void rule__AddExpr__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5993:1: ( rule__AddExpr__Group__1__Impl )
            // InternalFortXTrans.g:5994:2: rule__AddExpr__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AddExpr__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AddExpr__Group__1"


    // $ANTLR start "rule__AddExpr__Group__1__Impl"
    // InternalFortXTrans.g:6000:1: rule__AddExpr__Group__1__Impl : ( ( rule__AddExpr__Group_1__0 )* ) ;
    public final void rule__AddExpr__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6004:1: ( ( ( rule__AddExpr__Group_1__0 )* ) )
            // InternalFortXTrans.g:6005:1: ( ( rule__AddExpr__Group_1__0 )* )
            {
            // InternalFortXTrans.g:6005:1: ( ( rule__AddExpr__Group_1__0 )* )
            // InternalFortXTrans.g:6006:2: ( rule__AddExpr__Group_1__0 )*
            {
             before(grammarAccess.getAddExprAccess().getGroup_1()); 
            // InternalFortXTrans.g:6007:2: ( rule__AddExpr__Group_1__0 )*
            loop57:
            do {
                int alt57=2;
                int LA57_0 = input.LA(1);

                if ( (LA57_0==39) ) {
                    alt57=1;
                }


                switch (alt57) {
            	case 1 :
            	    // InternalFortXTrans.g:6007:3: rule__AddExpr__Group_1__0
            	    {
            	    pushFollow(FOLLOW_45);
            	    rule__AddExpr__Group_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop57;
                }
            } while (true);

             after(grammarAccess.getAddExprAccess().getGroup_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AddExpr__Group__1__Impl"


    // $ANTLR start "rule__AddExpr__Group_1__0"
    // InternalFortXTrans.g:6016:1: rule__AddExpr__Group_1__0 : rule__AddExpr__Group_1__0__Impl rule__AddExpr__Group_1__1 ;
    public final void rule__AddExpr__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6020:1: ( rule__AddExpr__Group_1__0__Impl rule__AddExpr__Group_1__1 )
            // InternalFortXTrans.g:6021:2: rule__AddExpr__Group_1__0__Impl rule__AddExpr__Group_1__1
            {
            pushFollow(FOLLOW_44);
            rule__AddExpr__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__AddExpr__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AddExpr__Group_1__0"


    // $ANTLR start "rule__AddExpr__Group_1__0__Impl"
    // InternalFortXTrans.g:6028:1: rule__AddExpr__Group_1__0__Impl : ( () ) ;
    public final void rule__AddExpr__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6032:1: ( ( () ) )
            // InternalFortXTrans.g:6033:1: ( () )
            {
            // InternalFortXTrans.g:6033:1: ( () )
            // InternalFortXTrans.g:6034:2: ()
            {
             before(grammarAccess.getAddExprAccess().getAddExprLeftAction_1_0()); 
            // InternalFortXTrans.g:6035:2: ()
            // InternalFortXTrans.g:6035:3: 
            {
            }

             after(grammarAccess.getAddExprAccess().getAddExprLeftAction_1_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AddExpr__Group_1__0__Impl"


    // $ANTLR start "rule__AddExpr__Group_1__1"
    // InternalFortXTrans.g:6043:1: rule__AddExpr__Group_1__1 : rule__AddExpr__Group_1__1__Impl rule__AddExpr__Group_1__2 ;
    public final void rule__AddExpr__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6047:1: ( rule__AddExpr__Group_1__1__Impl rule__AddExpr__Group_1__2 )
            // InternalFortXTrans.g:6048:2: rule__AddExpr__Group_1__1__Impl rule__AddExpr__Group_1__2
            {
            pushFollow(FOLLOW_32);
            rule__AddExpr__Group_1__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__AddExpr__Group_1__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AddExpr__Group_1__1"


    // $ANTLR start "rule__AddExpr__Group_1__1__Impl"
    // InternalFortXTrans.g:6055:1: rule__AddExpr__Group_1__1__Impl : ( '+' ) ;
    public final void rule__AddExpr__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6059:1: ( ( '+' ) )
            // InternalFortXTrans.g:6060:1: ( '+' )
            {
            // InternalFortXTrans.g:6060:1: ( '+' )
            // InternalFortXTrans.g:6061:2: '+'
            {
             before(grammarAccess.getAddExprAccess().getPlusSignKeyword_1_1()); 
            match(input,39,FOLLOW_2); 
             after(grammarAccess.getAddExprAccess().getPlusSignKeyword_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AddExpr__Group_1__1__Impl"


    // $ANTLR start "rule__AddExpr__Group_1__2"
    // InternalFortXTrans.g:6070:1: rule__AddExpr__Group_1__2 : rule__AddExpr__Group_1__2__Impl ;
    public final void rule__AddExpr__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6074:1: ( rule__AddExpr__Group_1__2__Impl )
            // InternalFortXTrans.g:6075:2: rule__AddExpr__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AddExpr__Group_1__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AddExpr__Group_1__2"


    // $ANTLR start "rule__AddExpr__Group_1__2__Impl"
    // InternalFortXTrans.g:6081:1: rule__AddExpr__Group_1__2__Impl : ( ( rule__AddExpr__RightAssignment_1_2 ) ) ;
    public final void rule__AddExpr__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6085:1: ( ( ( rule__AddExpr__RightAssignment_1_2 ) ) )
            // InternalFortXTrans.g:6086:1: ( ( rule__AddExpr__RightAssignment_1_2 ) )
            {
            // InternalFortXTrans.g:6086:1: ( ( rule__AddExpr__RightAssignment_1_2 ) )
            // InternalFortXTrans.g:6087:2: ( rule__AddExpr__RightAssignment_1_2 )
            {
             before(grammarAccess.getAddExprAccess().getRightAssignment_1_2()); 
            // InternalFortXTrans.g:6088:2: ( rule__AddExpr__RightAssignment_1_2 )
            // InternalFortXTrans.g:6088:3: rule__AddExpr__RightAssignment_1_2
            {
            pushFollow(FOLLOW_2);
            rule__AddExpr__RightAssignment_1_2();

            state._fsp--;


            }

             after(grammarAccess.getAddExprAccess().getRightAssignment_1_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AddExpr__Group_1__2__Impl"


    // $ANTLR start "rule__SubExpr__Group__0"
    // InternalFortXTrans.g:6097:1: rule__SubExpr__Group__0 : rule__SubExpr__Group__0__Impl rule__SubExpr__Group__1 ;
    public final void rule__SubExpr__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6101:1: ( rule__SubExpr__Group__0__Impl rule__SubExpr__Group__1 )
            // InternalFortXTrans.g:6102:2: rule__SubExpr__Group__0__Impl rule__SubExpr__Group__1
            {
            pushFollow(FOLLOW_46);
            rule__SubExpr__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__SubExpr__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubExpr__Group__0"


    // $ANTLR start "rule__SubExpr__Group__0__Impl"
    // InternalFortXTrans.g:6109:1: rule__SubExpr__Group__0__Impl : ( ruleDivExpr ) ;
    public final void rule__SubExpr__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6113:1: ( ( ruleDivExpr ) )
            // InternalFortXTrans.g:6114:1: ( ruleDivExpr )
            {
            // InternalFortXTrans.g:6114:1: ( ruleDivExpr )
            // InternalFortXTrans.g:6115:2: ruleDivExpr
            {
             before(grammarAccess.getSubExprAccess().getDivExprParserRuleCall_0()); 
            pushFollow(FOLLOW_2);
            ruleDivExpr();

            state._fsp--;

             after(grammarAccess.getSubExprAccess().getDivExprParserRuleCall_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubExpr__Group__0__Impl"


    // $ANTLR start "rule__SubExpr__Group__1"
    // InternalFortXTrans.g:6124:1: rule__SubExpr__Group__1 : rule__SubExpr__Group__1__Impl ;
    public final void rule__SubExpr__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6128:1: ( rule__SubExpr__Group__1__Impl )
            // InternalFortXTrans.g:6129:2: rule__SubExpr__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__SubExpr__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubExpr__Group__1"


    // $ANTLR start "rule__SubExpr__Group__1__Impl"
    // InternalFortXTrans.g:6135:1: rule__SubExpr__Group__1__Impl : ( ( rule__SubExpr__Group_1__0 )* ) ;
    public final void rule__SubExpr__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6139:1: ( ( ( rule__SubExpr__Group_1__0 )* ) )
            // InternalFortXTrans.g:6140:1: ( ( rule__SubExpr__Group_1__0 )* )
            {
            // InternalFortXTrans.g:6140:1: ( ( rule__SubExpr__Group_1__0 )* )
            // InternalFortXTrans.g:6141:2: ( rule__SubExpr__Group_1__0 )*
            {
             before(grammarAccess.getSubExprAccess().getGroup_1()); 
            // InternalFortXTrans.g:6142:2: ( rule__SubExpr__Group_1__0 )*
            loop58:
            do {
                int alt58=2;
                int LA58_0 = input.LA(1);

                if ( (LA58_0==40) ) {
                    alt58=1;
                }


                switch (alt58) {
            	case 1 :
            	    // InternalFortXTrans.g:6142:3: rule__SubExpr__Group_1__0
            	    {
            	    pushFollow(FOLLOW_47);
            	    rule__SubExpr__Group_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop58;
                }
            } while (true);

             after(grammarAccess.getSubExprAccess().getGroup_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubExpr__Group__1__Impl"


    // $ANTLR start "rule__SubExpr__Group_1__0"
    // InternalFortXTrans.g:6151:1: rule__SubExpr__Group_1__0 : rule__SubExpr__Group_1__0__Impl rule__SubExpr__Group_1__1 ;
    public final void rule__SubExpr__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6155:1: ( rule__SubExpr__Group_1__0__Impl rule__SubExpr__Group_1__1 )
            // InternalFortXTrans.g:6156:2: rule__SubExpr__Group_1__0__Impl rule__SubExpr__Group_1__1
            {
            pushFollow(FOLLOW_46);
            rule__SubExpr__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__SubExpr__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubExpr__Group_1__0"


    // $ANTLR start "rule__SubExpr__Group_1__0__Impl"
    // InternalFortXTrans.g:6163:1: rule__SubExpr__Group_1__0__Impl : ( () ) ;
    public final void rule__SubExpr__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6167:1: ( ( () ) )
            // InternalFortXTrans.g:6168:1: ( () )
            {
            // InternalFortXTrans.g:6168:1: ( () )
            // InternalFortXTrans.g:6169:2: ()
            {
             before(grammarAccess.getSubExprAccess().getSubExprLeftAction_1_0()); 
            // InternalFortXTrans.g:6170:2: ()
            // InternalFortXTrans.g:6170:3: 
            {
            }

             after(grammarAccess.getSubExprAccess().getSubExprLeftAction_1_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubExpr__Group_1__0__Impl"


    // $ANTLR start "rule__SubExpr__Group_1__1"
    // InternalFortXTrans.g:6178:1: rule__SubExpr__Group_1__1 : rule__SubExpr__Group_1__1__Impl rule__SubExpr__Group_1__2 ;
    public final void rule__SubExpr__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6182:1: ( rule__SubExpr__Group_1__1__Impl rule__SubExpr__Group_1__2 )
            // InternalFortXTrans.g:6183:2: rule__SubExpr__Group_1__1__Impl rule__SubExpr__Group_1__2
            {
            pushFollow(FOLLOW_32);
            rule__SubExpr__Group_1__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__SubExpr__Group_1__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubExpr__Group_1__1"


    // $ANTLR start "rule__SubExpr__Group_1__1__Impl"
    // InternalFortXTrans.g:6190:1: rule__SubExpr__Group_1__1__Impl : ( '-' ) ;
    public final void rule__SubExpr__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6194:1: ( ( '-' ) )
            // InternalFortXTrans.g:6195:1: ( '-' )
            {
            // InternalFortXTrans.g:6195:1: ( '-' )
            // InternalFortXTrans.g:6196:2: '-'
            {
             before(grammarAccess.getSubExprAccess().getHyphenMinusKeyword_1_1()); 
            match(input,40,FOLLOW_2); 
             after(grammarAccess.getSubExprAccess().getHyphenMinusKeyword_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubExpr__Group_1__1__Impl"


    // $ANTLR start "rule__SubExpr__Group_1__2"
    // InternalFortXTrans.g:6205:1: rule__SubExpr__Group_1__2 : rule__SubExpr__Group_1__2__Impl ;
    public final void rule__SubExpr__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6209:1: ( rule__SubExpr__Group_1__2__Impl )
            // InternalFortXTrans.g:6210:2: rule__SubExpr__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__SubExpr__Group_1__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubExpr__Group_1__2"


    // $ANTLR start "rule__SubExpr__Group_1__2__Impl"
    // InternalFortXTrans.g:6216:1: rule__SubExpr__Group_1__2__Impl : ( ( rule__SubExpr__RightAssignment_1_2 ) ) ;
    public final void rule__SubExpr__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6220:1: ( ( ( rule__SubExpr__RightAssignment_1_2 ) ) )
            // InternalFortXTrans.g:6221:1: ( ( rule__SubExpr__RightAssignment_1_2 ) )
            {
            // InternalFortXTrans.g:6221:1: ( ( rule__SubExpr__RightAssignment_1_2 ) )
            // InternalFortXTrans.g:6222:2: ( rule__SubExpr__RightAssignment_1_2 )
            {
             before(grammarAccess.getSubExprAccess().getRightAssignment_1_2()); 
            // InternalFortXTrans.g:6223:2: ( rule__SubExpr__RightAssignment_1_2 )
            // InternalFortXTrans.g:6223:3: rule__SubExpr__RightAssignment_1_2
            {
            pushFollow(FOLLOW_2);
            rule__SubExpr__RightAssignment_1_2();

            state._fsp--;


            }

             after(grammarAccess.getSubExprAccess().getRightAssignment_1_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubExpr__Group_1__2__Impl"


    // $ANTLR start "rule__DivExpr__Group__0"
    // InternalFortXTrans.g:6232:1: rule__DivExpr__Group__0 : rule__DivExpr__Group__0__Impl rule__DivExpr__Group__1 ;
    public final void rule__DivExpr__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6236:1: ( rule__DivExpr__Group__0__Impl rule__DivExpr__Group__1 )
            // InternalFortXTrans.g:6237:2: rule__DivExpr__Group__0__Impl rule__DivExpr__Group__1
            {
            pushFollow(FOLLOW_48);
            rule__DivExpr__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DivExpr__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DivExpr__Group__0"


    // $ANTLR start "rule__DivExpr__Group__0__Impl"
    // InternalFortXTrans.g:6244:1: rule__DivExpr__Group__0__Impl : ( ruleMultExpr ) ;
    public final void rule__DivExpr__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6248:1: ( ( ruleMultExpr ) )
            // InternalFortXTrans.g:6249:1: ( ruleMultExpr )
            {
            // InternalFortXTrans.g:6249:1: ( ruleMultExpr )
            // InternalFortXTrans.g:6250:2: ruleMultExpr
            {
             before(grammarAccess.getDivExprAccess().getMultExprParserRuleCall_0()); 
            pushFollow(FOLLOW_2);
            ruleMultExpr();

            state._fsp--;

             after(grammarAccess.getDivExprAccess().getMultExprParserRuleCall_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DivExpr__Group__0__Impl"


    // $ANTLR start "rule__DivExpr__Group__1"
    // InternalFortXTrans.g:6259:1: rule__DivExpr__Group__1 : rule__DivExpr__Group__1__Impl ;
    public final void rule__DivExpr__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6263:1: ( rule__DivExpr__Group__1__Impl )
            // InternalFortXTrans.g:6264:2: rule__DivExpr__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__DivExpr__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DivExpr__Group__1"


    // $ANTLR start "rule__DivExpr__Group__1__Impl"
    // InternalFortXTrans.g:6270:1: rule__DivExpr__Group__1__Impl : ( ( rule__DivExpr__Group_1__0 )* ) ;
    public final void rule__DivExpr__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6274:1: ( ( ( rule__DivExpr__Group_1__0 )* ) )
            // InternalFortXTrans.g:6275:1: ( ( rule__DivExpr__Group_1__0 )* )
            {
            // InternalFortXTrans.g:6275:1: ( ( rule__DivExpr__Group_1__0 )* )
            // InternalFortXTrans.g:6276:2: ( rule__DivExpr__Group_1__0 )*
            {
             before(grammarAccess.getDivExprAccess().getGroup_1()); 
            // InternalFortXTrans.g:6277:2: ( rule__DivExpr__Group_1__0 )*
            loop59:
            do {
                int alt59=2;
                int LA59_0 = input.LA(1);

                if ( (LA59_0==41) ) {
                    alt59=1;
                }


                switch (alt59) {
            	case 1 :
            	    // InternalFortXTrans.g:6277:3: rule__DivExpr__Group_1__0
            	    {
            	    pushFollow(FOLLOW_49);
            	    rule__DivExpr__Group_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop59;
                }
            } while (true);

             after(grammarAccess.getDivExprAccess().getGroup_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DivExpr__Group__1__Impl"


    // $ANTLR start "rule__DivExpr__Group_1__0"
    // InternalFortXTrans.g:6286:1: rule__DivExpr__Group_1__0 : rule__DivExpr__Group_1__0__Impl rule__DivExpr__Group_1__1 ;
    public final void rule__DivExpr__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6290:1: ( rule__DivExpr__Group_1__0__Impl rule__DivExpr__Group_1__1 )
            // InternalFortXTrans.g:6291:2: rule__DivExpr__Group_1__0__Impl rule__DivExpr__Group_1__1
            {
            pushFollow(FOLLOW_48);
            rule__DivExpr__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DivExpr__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DivExpr__Group_1__0"


    // $ANTLR start "rule__DivExpr__Group_1__0__Impl"
    // InternalFortXTrans.g:6298:1: rule__DivExpr__Group_1__0__Impl : ( () ) ;
    public final void rule__DivExpr__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6302:1: ( ( () ) )
            // InternalFortXTrans.g:6303:1: ( () )
            {
            // InternalFortXTrans.g:6303:1: ( () )
            // InternalFortXTrans.g:6304:2: ()
            {
             before(grammarAccess.getDivExprAccess().getDivExprLeftAction_1_0()); 
            // InternalFortXTrans.g:6305:2: ()
            // InternalFortXTrans.g:6305:3: 
            {
            }

             after(grammarAccess.getDivExprAccess().getDivExprLeftAction_1_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DivExpr__Group_1__0__Impl"


    // $ANTLR start "rule__DivExpr__Group_1__1"
    // InternalFortXTrans.g:6313:1: rule__DivExpr__Group_1__1 : rule__DivExpr__Group_1__1__Impl rule__DivExpr__Group_1__2 ;
    public final void rule__DivExpr__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6317:1: ( rule__DivExpr__Group_1__1__Impl rule__DivExpr__Group_1__2 )
            // InternalFortXTrans.g:6318:2: rule__DivExpr__Group_1__1__Impl rule__DivExpr__Group_1__2
            {
            pushFollow(FOLLOW_32);
            rule__DivExpr__Group_1__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DivExpr__Group_1__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DivExpr__Group_1__1"


    // $ANTLR start "rule__DivExpr__Group_1__1__Impl"
    // InternalFortXTrans.g:6325:1: rule__DivExpr__Group_1__1__Impl : ( '/' ) ;
    public final void rule__DivExpr__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6329:1: ( ( '/' ) )
            // InternalFortXTrans.g:6330:1: ( '/' )
            {
            // InternalFortXTrans.g:6330:1: ( '/' )
            // InternalFortXTrans.g:6331:2: '/'
            {
             before(grammarAccess.getDivExprAccess().getSolidusKeyword_1_1()); 
            match(input,41,FOLLOW_2); 
             after(grammarAccess.getDivExprAccess().getSolidusKeyword_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DivExpr__Group_1__1__Impl"


    // $ANTLR start "rule__DivExpr__Group_1__2"
    // InternalFortXTrans.g:6340:1: rule__DivExpr__Group_1__2 : rule__DivExpr__Group_1__2__Impl ;
    public final void rule__DivExpr__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6344:1: ( rule__DivExpr__Group_1__2__Impl )
            // InternalFortXTrans.g:6345:2: rule__DivExpr__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__DivExpr__Group_1__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DivExpr__Group_1__2"


    // $ANTLR start "rule__DivExpr__Group_1__2__Impl"
    // InternalFortXTrans.g:6351:1: rule__DivExpr__Group_1__2__Impl : ( ( rule__DivExpr__RightAssignment_1_2 ) ) ;
    public final void rule__DivExpr__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6355:1: ( ( ( rule__DivExpr__RightAssignment_1_2 ) ) )
            // InternalFortXTrans.g:6356:1: ( ( rule__DivExpr__RightAssignment_1_2 ) )
            {
            // InternalFortXTrans.g:6356:1: ( ( rule__DivExpr__RightAssignment_1_2 ) )
            // InternalFortXTrans.g:6357:2: ( rule__DivExpr__RightAssignment_1_2 )
            {
             before(grammarAccess.getDivExprAccess().getRightAssignment_1_2()); 
            // InternalFortXTrans.g:6358:2: ( rule__DivExpr__RightAssignment_1_2 )
            // InternalFortXTrans.g:6358:3: rule__DivExpr__RightAssignment_1_2
            {
            pushFollow(FOLLOW_2);
            rule__DivExpr__RightAssignment_1_2();

            state._fsp--;


            }

             after(grammarAccess.getDivExprAccess().getRightAssignment_1_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DivExpr__Group_1__2__Impl"


    // $ANTLR start "rule__MultExpr__Group__0"
    // InternalFortXTrans.g:6367:1: rule__MultExpr__Group__0 : rule__MultExpr__Group__0__Impl rule__MultExpr__Group__1 ;
    public final void rule__MultExpr__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6371:1: ( rule__MultExpr__Group__0__Impl rule__MultExpr__Group__1 )
            // InternalFortXTrans.g:6372:2: rule__MultExpr__Group__0__Impl rule__MultExpr__Group__1
            {
            pushFollow(FOLLOW_50);
            rule__MultExpr__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__MultExpr__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultExpr__Group__0"


    // $ANTLR start "rule__MultExpr__Group__0__Impl"
    // InternalFortXTrans.g:6379:1: rule__MultExpr__Group__0__Impl : ( ruleExponentExpr ) ;
    public final void rule__MultExpr__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6383:1: ( ( ruleExponentExpr ) )
            // InternalFortXTrans.g:6384:1: ( ruleExponentExpr )
            {
            // InternalFortXTrans.g:6384:1: ( ruleExponentExpr )
            // InternalFortXTrans.g:6385:2: ruleExponentExpr
            {
             before(grammarAccess.getMultExprAccess().getExponentExprParserRuleCall_0()); 
            pushFollow(FOLLOW_2);
            ruleExponentExpr();

            state._fsp--;

             after(grammarAccess.getMultExprAccess().getExponentExprParserRuleCall_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultExpr__Group__0__Impl"


    // $ANTLR start "rule__MultExpr__Group__1"
    // InternalFortXTrans.g:6394:1: rule__MultExpr__Group__1 : rule__MultExpr__Group__1__Impl ;
    public final void rule__MultExpr__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6398:1: ( rule__MultExpr__Group__1__Impl )
            // InternalFortXTrans.g:6399:2: rule__MultExpr__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__MultExpr__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultExpr__Group__1"


    // $ANTLR start "rule__MultExpr__Group__1__Impl"
    // InternalFortXTrans.g:6405:1: rule__MultExpr__Group__1__Impl : ( ( rule__MultExpr__Group_1__0 )* ) ;
    public final void rule__MultExpr__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6409:1: ( ( ( rule__MultExpr__Group_1__0 )* ) )
            // InternalFortXTrans.g:6410:1: ( ( rule__MultExpr__Group_1__0 )* )
            {
            // InternalFortXTrans.g:6410:1: ( ( rule__MultExpr__Group_1__0 )* )
            // InternalFortXTrans.g:6411:2: ( rule__MultExpr__Group_1__0 )*
            {
             before(grammarAccess.getMultExprAccess().getGroup_1()); 
            // InternalFortXTrans.g:6412:2: ( rule__MultExpr__Group_1__0 )*
            loop60:
            do {
                int alt60=2;
                int LA60_0 = input.LA(1);

                if ( (LA60_0==42) ) {
                    alt60=1;
                }


                switch (alt60) {
            	case 1 :
            	    // InternalFortXTrans.g:6412:3: rule__MultExpr__Group_1__0
            	    {
            	    pushFollow(FOLLOW_51);
            	    rule__MultExpr__Group_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop60;
                }
            } while (true);

             after(grammarAccess.getMultExprAccess().getGroup_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultExpr__Group__1__Impl"


    // $ANTLR start "rule__MultExpr__Group_1__0"
    // InternalFortXTrans.g:6421:1: rule__MultExpr__Group_1__0 : rule__MultExpr__Group_1__0__Impl rule__MultExpr__Group_1__1 ;
    public final void rule__MultExpr__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6425:1: ( rule__MultExpr__Group_1__0__Impl rule__MultExpr__Group_1__1 )
            // InternalFortXTrans.g:6426:2: rule__MultExpr__Group_1__0__Impl rule__MultExpr__Group_1__1
            {
            pushFollow(FOLLOW_50);
            rule__MultExpr__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__MultExpr__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultExpr__Group_1__0"


    // $ANTLR start "rule__MultExpr__Group_1__0__Impl"
    // InternalFortXTrans.g:6433:1: rule__MultExpr__Group_1__0__Impl : ( () ) ;
    public final void rule__MultExpr__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6437:1: ( ( () ) )
            // InternalFortXTrans.g:6438:1: ( () )
            {
            // InternalFortXTrans.g:6438:1: ( () )
            // InternalFortXTrans.g:6439:2: ()
            {
             before(grammarAccess.getMultExprAccess().getMultExprLeftAction_1_0()); 
            // InternalFortXTrans.g:6440:2: ()
            // InternalFortXTrans.g:6440:3: 
            {
            }

             after(grammarAccess.getMultExprAccess().getMultExprLeftAction_1_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultExpr__Group_1__0__Impl"


    // $ANTLR start "rule__MultExpr__Group_1__1"
    // InternalFortXTrans.g:6448:1: rule__MultExpr__Group_1__1 : rule__MultExpr__Group_1__1__Impl rule__MultExpr__Group_1__2 ;
    public final void rule__MultExpr__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6452:1: ( rule__MultExpr__Group_1__1__Impl rule__MultExpr__Group_1__2 )
            // InternalFortXTrans.g:6453:2: rule__MultExpr__Group_1__1__Impl rule__MultExpr__Group_1__2
            {
            pushFollow(FOLLOW_32);
            rule__MultExpr__Group_1__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__MultExpr__Group_1__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultExpr__Group_1__1"


    // $ANTLR start "rule__MultExpr__Group_1__1__Impl"
    // InternalFortXTrans.g:6460:1: rule__MultExpr__Group_1__1__Impl : ( '*' ) ;
    public final void rule__MultExpr__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6464:1: ( ( '*' ) )
            // InternalFortXTrans.g:6465:1: ( '*' )
            {
            // InternalFortXTrans.g:6465:1: ( '*' )
            // InternalFortXTrans.g:6466:2: '*'
            {
             before(grammarAccess.getMultExprAccess().getAsteriskKeyword_1_1()); 
            match(input,42,FOLLOW_2); 
             after(grammarAccess.getMultExprAccess().getAsteriskKeyword_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultExpr__Group_1__1__Impl"


    // $ANTLR start "rule__MultExpr__Group_1__2"
    // InternalFortXTrans.g:6475:1: rule__MultExpr__Group_1__2 : rule__MultExpr__Group_1__2__Impl ;
    public final void rule__MultExpr__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6479:1: ( rule__MultExpr__Group_1__2__Impl )
            // InternalFortXTrans.g:6480:2: rule__MultExpr__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__MultExpr__Group_1__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultExpr__Group_1__2"


    // $ANTLR start "rule__MultExpr__Group_1__2__Impl"
    // InternalFortXTrans.g:6486:1: rule__MultExpr__Group_1__2__Impl : ( ( rule__MultExpr__RightAssignment_1_2 ) ) ;
    public final void rule__MultExpr__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6490:1: ( ( ( rule__MultExpr__RightAssignment_1_2 ) ) )
            // InternalFortXTrans.g:6491:1: ( ( rule__MultExpr__RightAssignment_1_2 ) )
            {
            // InternalFortXTrans.g:6491:1: ( ( rule__MultExpr__RightAssignment_1_2 ) )
            // InternalFortXTrans.g:6492:2: ( rule__MultExpr__RightAssignment_1_2 )
            {
             before(grammarAccess.getMultExprAccess().getRightAssignment_1_2()); 
            // InternalFortXTrans.g:6493:2: ( rule__MultExpr__RightAssignment_1_2 )
            // InternalFortXTrans.g:6493:3: rule__MultExpr__RightAssignment_1_2
            {
            pushFollow(FOLLOW_2);
            rule__MultExpr__RightAssignment_1_2();

            state._fsp--;


            }

             after(grammarAccess.getMultExprAccess().getRightAssignment_1_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultExpr__Group_1__2__Impl"


    // $ANTLR start "rule__ExponentExpr__Group__0"
    // InternalFortXTrans.g:6502:1: rule__ExponentExpr__Group__0 : rule__ExponentExpr__Group__0__Impl rule__ExponentExpr__Group__1 ;
    public final void rule__ExponentExpr__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6506:1: ( rule__ExponentExpr__Group__0__Impl rule__ExponentExpr__Group__1 )
            // InternalFortXTrans.g:6507:2: rule__ExponentExpr__Group__0__Impl rule__ExponentExpr__Group__1
            {
            pushFollow(FOLLOW_52);
            rule__ExponentExpr__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ExponentExpr__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExponentExpr__Group__0"


    // $ANTLR start "rule__ExponentExpr__Group__0__Impl"
    // InternalFortXTrans.g:6514:1: rule__ExponentExpr__Group__0__Impl : ( rulePrimary ) ;
    public final void rule__ExponentExpr__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6518:1: ( ( rulePrimary ) )
            // InternalFortXTrans.g:6519:1: ( rulePrimary )
            {
            // InternalFortXTrans.g:6519:1: ( rulePrimary )
            // InternalFortXTrans.g:6520:2: rulePrimary
            {
             before(grammarAccess.getExponentExprAccess().getPrimaryParserRuleCall_0()); 
            pushFollow(FOLLOW_2);
            rulePrimary();

            state._fsp--;

             after(grammarAccess.getExponentExprAccess().getPrimaryParserRuleCall_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExponentExpr__Group__0__Impl"


    // $ANTLR start "rule__ExponentExpr__Group__1"
    // InternalFortXTrans.g:6529:1: rule__ExponentExpr__Group__1 : rule__ExponentExpr__Group__1__Impl ;
    public final void rule__ExponentExpr__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6533:1: ( rule__ExponentExpr__Group__1__Impl )
            // InternalFortXTrans.g:6534:2: rule__ExponentExpr__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ExponentExpr__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExponentExpr__Group__1"


    // $ANTLR start "rule__ExponentExpr__Group__1__Impl"
    // InternalFortXTrans.g:6540:1: rule__ExponentExpr__Group__1__Impl : ( ( rule__ExponentExpr__Group_1__0 )* ) ;
    public final void rule__ExponentExpr__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6544:1: ( ( ( rule__ExponentExpr__Group_1__0 )* ) )
            // InternalFortXTrans.g:6545:1: ( ( rule__ExponentExpr__Group_1__0 )* )
            {
            // InternalFortXTrans.g:6545:1: ( ( rule__ExponentExpr__Group_1__0 )* )
            // InternalFortXTrans.g:6546:2: ( rule__ExponentExpr__Group_1__0 )*
            {
             before(grammarAccess.getExponentExprAccess().getGroup_1()); 
            // InternalFortXTrans.g:6547:2: ( rule__ExponentExpr__Group_1__0 )*
            loop61:
            do {
                int alt61=2;
                int LA61_0 = input.LA(1);

                if ( (LA61_0==66) ) {
                    alt61=1;
                }


                switch (alt61) {
            	case 1 :
            	    // InternalFortXTrans.g:6547:3: rule__ExponentExpr__Group_1__0
            	    {
            	    pushFollow(FOLLOW_53);
            	    rule__ExponentExpr__Group_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop61;
                }
            } while (true);

             after(grammarAccess.getExponentExprAccess().getGroup_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExponentExpr__Group__1__Impl"


    // $ANTLR start "rule__ExponentExpr__Group_1__0"
    // InternalFortXTrans.g:6556:1: rule__ExponentExpr__Group_1__0 : rule__ExponentExpr__Group_1__0__Impl rule__ExponentExpr__Group_1__1 ;
    public final void rule__ExponentExpr__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6560:1: ( rule__ExponentExpr__Group_1__0__Impl rule__ExponentExpr__Group_1__1 )
            // InternalFortXTrans.g:6561:2: rule__ExponentExpr__Group_1__0__Impl rule__ExponentExpr__Group_1__1
            {
            pushFollow(FOLLOW_52);
            rule__ExponentExpr__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ExponentExpr__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExponentExpr__Group_1__0"


    // $ANTLR start "rule__ExponentExpr__Group_1__0__Impl"
    // InternalFortXTrans.g:6568:1: rule__ExponentExpr__Group_1__0__Impl : ( () ) ;
    public final void rule__ExponentExpr__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6572:1: ( ( () ) )
            // InternalFortXTrans.g:6573:1: ( () )
            {
            // InternalFortXTrans.g:6573:1: ( () )
            // InternalFortXTrans.g:6574:2: ()
            {
             before(grammarAccess.getExponentExprAccess().getExponentExprLeftAction_1_0()); 
            // InternalFortXTrans.g:6575:2: ()
            // InternalFortXTrans.g:6575:3: 
            {
            }

             after(grammarAccess.getExponentExprAccess().getExponentExprLeftAction_1_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExponentExpr__Group_1__0__Impl"


    // $ANTLR start "rule__ExponentExpr__Group_1__1"
    // InternalFortXTrans.g:6583:1: rule__ExponentExpr__Group_1__1 : rule__ExponentExpr__Group_1__1__Impl rule__ExponentExpr__Group_1__2 ;
    public final void rule__ExponentExpr__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6587:1: ( rule__ExponentExpr__Group_1__1__Impl rule__ExponentExpr__Group_1__2 )
            // InternalFortXTrans.g:6588:2: rule__ExponentExpr__Group_1__1__Impl rule__ExponentExpr__Group_1__2
            {
            pushFollow(FOLLOW_32);
            rule__ExponentExpr__Group_1__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ExponentExpr__Group_1__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExponentExpr__Group_1__1"


    // $ANTLR start "rule__ExponentExpr__Group_1__1__Impl"
    // InternalFortXTrans.g:6595:1: rule__ExponentExpr__Group_1__1__Impl : ( ( rule__ExponentExpr__OpAssignment_1_1 ) ) ;
    public final void rule__ExponentExpr__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6599:1: ( ( ( rule__ExponentExpr__OpAssignment_1_1 ) ) )
            // InternalFortXTrans.g:6600:1: ( ( rule__ExponentExpr__OpAssignment_1_1 ) )
            {
            // InternalFortXTrans.g:6600:1: ( ( rule__ExponentExpr__OpAssignment_1_1 ) )
            // InternalFortXTrans.g:6601:2: ( rule__ExponentExpr__OpAssignment_1_1 )
            {
             before(grammarAccess.getExponentExprAccess().getOpAssignment_1_1()); 
            // InternalFortXTrans.g:6602:2: ( rule__ExponentExpr__OpAssignment_1_1 )
            // InternalFortXTrans.g:6602:3: rule__ExponentExpr__OpAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__ExponentExpr__OpAssignment_1_1();

            state._fsp--;


            }

             after(grammarAccess.getExponentExprAccess().getOpAssignment_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExponentExpr__Group_1__1__Impl"


    // $ANTLR start "rule__ExponentExpr__Group_1__2"
    // InternalFortXTrans.g:6610:1: rule__ExponentExpr__Group_1__2 : rule__ExponentExpr__Group_1__2__Impl ;
    public final void rule__ExponentExpr__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6614:1: ( rule__ExponentExpr__Group_1__2__Impl )
            // InternalFortXTrans.g:6615:2: rule__ExponentExpr__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ExponentExpr__Group_1__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExponentExpr__Group_1__2"


    // $ANTLR start "rule__ExponentExpr__Group_1__2__Impl"
    // InternalFortXTrans.g:6621:1: rule__ExponentExpr__Group_1__2__Impl : ( ( rule__ExponentExpr__RightAssignment_1_2 ) ) ;
    public final void rule__ExponentExpr__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6625:1: ( ( ( rule__ExponentExpr__RightAssignment_1_2 ) ) )
            // InternalFortXTrans.g:6626:1: ( ( rule__ExponentExpr__RightAssignment_1_2 ) )
            {
            // InternalFortXTrans.g:6626:1: ( ( rule__ExponentExpr__RightAssignment_1_2 ) )
            // InternalFortXTrans.g:6627:2: ( rule__ExponentExpr__RightAssignment_1_2 )
            {
             before(grammarAccess.getExponentExprAccess().getRightAssignment_1_2()); 
            // InternalFortXTrans.g:6628:2: ( rule__ExponentExpr__RightAssignment_1_2 )
            // InternalFortXTrans.g:6628:3: rule__ExponentExpr__RightAssignment_1_2
            {
            pushFollow(FOLLOW_2);
            rule__ExponentExpr__RightAssignment_1_2();

            state._fsp--;


            }

             after(grammarAccess.getExponentExprAccess().getRightAssignment_1_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExponentExpr__Group_1__2__Impl"


    // $ANTLR start "rule__Primary__Group_0__0"
    // InternalFortXTrans.g:6637:1: rule__Primary__Group_0__0 : rule__Primary__Group_0__0__Impl rule__Primary__Group_0__1 ;
    public final void rule__Primary__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6641:1: ( rule__Primary__Group_0__0__Impl rule__Primary__Group_0__1 )
            // InternalFortXTrans.g:6642:2: rule__Primary__Group_0__0__Impl rule__Primary__Group_0__1
            {
            pushFollow(FOLLOW_54);
            rule__Primary__Group_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Primary__Group_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0__0"


    // $ANTLR start "rule__Primary__Group_0__0__Impl"
    // InternalFortXTrans.g:6649:1: rule__Primary__Group_0__0__Impl : ( ruleLiteralTuple ) ;
    public final void rule__Primary__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6653:1: ( ( ruleLiteralTuple ) )
            // InternalFortXTrans.g:6654:1: ( ruleLiteralTuple )
            {
            // InternalFortXTrans.g:6654:1: ( ruleLiteralTuple )
            // InternalFortXTrans.g:6655:2: ruleLiteralTuple
            {
             before(grammarAccess.getPrimaryAccess().getLiteralTupleParserRuleCall_0_0()); 
            pushFollow(FOLLOW_2);
            ruleLiteralTuple();

            state._fsp--;

             after(grammarAccess.getPrimaryAccess().getLiteralTupleParserRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0__0__Impl"


    // $ANTLR start "rule__Primary__Group_0__1"
    // InternalFortXTrans.g:6664:1: rule__Primary__Group_0__1 : rule__Primary__Group_0__1__Impl rule__Primary__Group_0__2 ;
    public final void rule__Primary__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6668:1: ( rule__Primary__Group_0__1__Impl rule__Primary__Group_0__2 )
            // InternalFortXTrans.g:6669:2: rule__Primary__Group_0__1__Impl rule__Primary__Group_0__2
            {
            pushFollow(FOLLOW_54);
            rule__Primary__Group_0__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Primary__Group_0__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0__1"


    // $ANTLR start "rule__Primary__Group_0__1__Impl"
    // InternalFortXTrans.g:6676:1: rule__Primary__Group_0__1__Impl : ( ( rule__Primary__Group_0_1__0 )? ) ;
    public final void rule__Primary__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6680:1: ( ( ( rule__Primary__Group_0_1__0 )? ) )
            // InternalFortXTrans.g:6681:1: ( ( rule__Primary__Group_0_1__0 )? )
            {
            // InternalFortXTrans.g:6681:1: ( ( rule__Primary__Group_0_1__0 )? )
            // InternalFortXTrans.g:6682:2: ( rule__Primary__Group_0_1__0 )?
            {
             before(grammarAccess.getPrimaryAccess().getGroup_0_1()); 
            // InternalFortXTrans.g:6683:2: ( rule__Primary__Group_0_1__0 )?
            int alt62=2;
            int LA62_0 = input.LA(1);

            if ( (LA62_0==49) ) {
                alt62=1;
            }
            switch (alt62) {
                case 1 :
                    // InternalFortXTrans.g:6683:3: rule__Primary__Group_0_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Primary__Group_0_1__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getPrimaryAccess().getGroup_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0__1__Impl"


    // $ANTLR start "rule__Primary__Group_0__2"
    // InternalFortXTrans.g:6691:1: rule__Primary__Group_0__2 : rule__Primary__Group_0__2__Impl rule__Primary__Group_0__3 ;
    public final void rule__Primary__Group_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6695:1: ( rule__Primary__Group_0__2__Impl rule__Primary__Group_0__3 )
            // InternalFortXTrans.g:6696:2: rule__Primary__Group_0__2__Impl rule__Primary__Group_0__3
            {
            pushFollow(FOLLOW_54);
            rule__Primary__Group_0__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Primary__Group_0__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0__2"


    // $ANTLR start "rule__Primary__Group_0__2__Impl"
    // InternalFortXTrans.g:6703:1: rule__Primary__Group_0__2__Impl : ( ( rule__Primary__Group_0_2__0 )? ) ;
    public final void rule__Primary__Group_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6707:1: ( ( ( rule__Primary__Group_0_2__0 )? ) )
            // InternalFortXTrans.g:6708:1: ( ( rule__Primary__Group_0_2__0 )? )
            {
            // InternalFortXTrans.g:6708:1: ( ( rule__Primary__Group_0_2__0 )? )
            // InternalFortXTrans.g:6709:2: ( rule__Primary__Group_0_2__0 )?
            {
             before(grammarAccess.getPrimaryAccess().getGroup_0_2()); 
            // InternalFortXTrans.g:6710:2: ( rule__Primary__Group_0_2__0 )?
            int alt63=2;
            int LA63_0 = input.LA(1);

            if ( (LA63_0==33) ) {
                alt63=1;
            }
            switch (alt63) {
                case 1 :
                    // InternalFortXTrans.g:6710:3: rule__Primary__Group_0_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Primary__Group_0_2__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getPrimaryAccess().getGroup_0_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0__2__Impl"


    // $ANTLR start "rule__Primary__Group_0__3"
    // InternalFortXTrans.g:6718:1: rule__Primary__Group_0__3 : rule__Primary__Group_0__3__Impl rule__Primary__Group_0__4 ;
    public final void rule__Primary__Group_0__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6722:1: ( rule__Primary__Group_0__3__Impl rule__Primary__Group_0__4 )
            // InternalFortXTrans.g:6723:2: rule__Primary__Group_0__3__Impl rule__Primary__Group_0__4
            {
            pushFollow(FOLLOW_54);
            rule__Primary__Group_0__3__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Primary__Group_0__4();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0__3"


    // $ANTLR start "rule__Primary__Group_0__3__Impl"
    // InternalFortXTrans.g:6730:1: rule__Primary__Group_0__3__Impl : ( ( rule__Primary__Group_0_3__0 )? ) ;
    public final void rule__Primary__Group_0__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6734:1: ( ( ( rule__Primary__Group_0_3__0 )? ) )
            // InternalFortXTrans.g:6735:1: ( ( rule__Primary__Group_0_3__0 )? )
            {
            // InternalFortXTrans.g:6735:1: ( ( rule__Primary__Group_0_3__0 )? )
            // InternalFortXTrans.g:6736:2: ( rule__Primary__Group_0_3__0 )?
            {
             before(grammarAccess.getPrimaryAccess().getGroup_0_3()); 
            // InternalFortXTrans.g:6737:2: ( rule__Primary__Group_0_3__0 )?
            int alt64=2;
            int LA64_0 = input.LA(1);

            if ( (LA64_0==43) ) {
                alt64=1;
            }
            switch (alt64) {
                case 1 :
                    // InternalFortXTrans.g:6737:3: rule__Primary__Group_0_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Primary__Group_0_3__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getPrimaryAccess().getGroup_0_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0__3__Impl"


    // $ANTLR start "rule__Primary__Group_0__4"
    // InternalFortXTrans.g:6745:1: rule__Primary__Group_0__4 : rule__Primary__Group_0__4__Impl ;
    public final void rule__Primary__Group_0__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6749:1: ( rule__Primary__Group_0__4__Impl )
            // InternalFortXTrans.g:6750:2: rule__Primary__Group_0__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Primary__Group_0__4__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0__4"


    // $ANTLR start "rule__Primary__Group_0__4__Impl"
    // InternalFortXTrans.g:6756:1: rule__Primary__Group_0__4__Impl : ( ( rule__Primary__Group_0_4__0 )? ) ;
    public final void rule__Primary__Group_0__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6760:1: ( ( ( rule__Primary__Group_0_4__0 )? ) )
            // InternalFortXTrans.g:6761:1: ( ( rule__Primary__Group_0_4__0 )? )
            {
            // InternalFortXTrans.g:6761:1: ( ( rule__Primary__Group_0_4__0 )? )
            // InternalFortXTrans.g:6762:2: ( rule__Primary__Group_0_4__0 )?
            {
             before(grammarAccess.getPrimaryAccess().getGroup_0_4()); 
            // InternalFortXTrans.g:6763:2: ( rule__Primary__Group_0_4__0 )?
            int alt65=2;
            int LA65_0 = input.LA(1);

            if ( (LA65_0==47) ) {
                alt65=1;
            }
            switch (alt65) {
                case 1 :
                    // InternalFortXTrans.g:6763:3: rule__Primary__Group_0_4__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Primary__Group_0_4__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getPrimaryAccess().getGroup_0_4()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0__4__Impl"


    // $ANTLR start "rule__Primary__Group_0_1__0"
    // InternalFortXTrans.g:6772:1: rule__Primary__Group_0_1__0 : rule__Primary__Group_0_1__0__Impl rule__Primary__Group_0_1__1 ;
    public final void rule__Primary__Group_0_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6776:1: ( rule__Primary__Group_0_1__0__Impl rule__Primary__Group_0_1__1 )
            // InternalFortXTrans.g:6777:2: rule__Primary__Group_0_1__0__Impl rule__Primary__Group_0_1__1
            {
            pushFollow(FOLLOW_55);
            rule__Primary__Group_0_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Primary__Group_0_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0_1__0"


    // $ANTLR start "rule__Primary__Group_0_1__0__Impl"
    // InternalFortXTrans.g:6784:1: rule__Primary__Group_0_1__0__Impl : ( () ) ;
    public final void rule__Primary__Group_0_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6788:1: ( ( () ) )
            // InternalFortXTrans.g:6789:1: ( () )
            {
            // InternalFortXTrans.g:6789:1: ( () )
            // InternalFortXTrans.g:6790:2: ()
            {
             before(grammarAccess.getPrimaryAccess().getAssopLeftAction_0_1_0()); 
            // InternalFortXTrans.g:6791:2: ()
            // InternalFortXTrans.g:6791:3: 
            {
            }

             after(grammarAccess.getPrimaryAccess().getAssopLeftAction_0_1_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0_1__0__Impl"


    // $ANTLR start "rule__Primary__Group_0_1__1"
    // InternalFortXTrans.g:6799:1: rule__Primary__Group_0_1__1 : rule__Primary__Group_0_1__1__Impl ;
    public final void rule__Primary__Group_0_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6803:1: ( rule__Primary__Group_0_1__1__Impl )
            // InternalFortXTrans.g:6804:2: rule__Primary__Group_0_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Primary__Group_0_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0_1__1"


    // $ANTLR start "rule__Primary__Group_0_1__1__Impl"
    // InternalFortXTrans.g:6810:1: rule__Primary__Group_0_1__1__Impl : ( ( rule__Primary__Group_0_1_1__0 ) ) ;
    public final void rule__Primary__Group_0_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6814:1: ( ( ( rule__Primary__Group_0_1_1__0 ) ) )
            // InternalFortXTrans.g:6815:1: ( ( rule__Primary__Group_0_1_1__0 ) )
            {
            // InternalFortXTrans.g:6815:1: ( ( rule__Primary__Group_0_1_1__0 ) )
            // InternalFortXTrans.g:6816:2: ( rule__Primary__Group_0_1_1__0 )
            {
             before(grammarAccess.getPrimaryAccess().getGroup_0_1_1()); 
            // InternalFortXTrans.g:6817:2: ( rule__Primary__Group_0_1_1__0 )
            // InternalFortXTrans.g:6817:3: rule__Primary__Group_0_1_1__0
            {
            pushFollow(FOLLOW_2);
            rule__Primary__Group_0_1_1__0();

            state._fsp--;


            }

             after(grammarAccess.getPrimaryAccess().getGroup_0_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0_1__1__Impl"


    // $ANTLR start "rule__Primary__Group_0_1_1__0"
    // InternalFortXTrans.g:6826:1: rule__Primary__Group_0_1_1__0 : rule__Primary__Group_0_1_1__0__Impl rule__Primary__Group_0_1_1__1 ;
    public final void rule__Primary__Group_0_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6830:1: ( rule__Primary__Group_0_1_1__0__Impl rule__Primary__Group_0_1_1__1 )
            // InternalFortXTrans.g:6831:2: rule__Primary__Group_0_1_1__0__Impl rule__Primary__Group_0_1_1__1
            {
            pushFollow(FOLLOW_32);
            rule__Primary__Group_0_1_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Primary__Group_0_1_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0_1_1__0"


    // $ANTLR start "rule__Primary__Group_0_1_1__0__Impl"
    // InternalFortXTrans.g:6838:1: rule__Primary__Group_0_1_1__0__Impl : ( ( rule__Primary__OpAssignment_0_1_1_0 ) ) ;
    public final void rule__Primary__Group_0_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6842:1: ( ( ( rule__Primary__OpAssignment_0_1_1_0 ) ) )
            // InternalFortXTrans.g:6843:1: ( ( rule__Primary__OpAssignment_0_1_1_0 ) )
            {
            // InternalFortXTrans.g:6843:1: ( ( rule__Primary__OpAssignment_0_1_1_0 ) )
            // InternalFortXTrans.g:6844:2: ( rule__Primary__OpAssignment_0_1_1_0 )
            {
             before(grammarAccess.getPrimaryAccess().getOpAssignment_0_1_1_0()); 
            // InternalFortXTrans.g:6845:2: ( rule__Primary__OpAssignment_0_1_1_0 )
            // InternalFortXTrans.g:6845:3: rule__Primary__OpAssignment_0_1_1_0
            {
            pushFollow(FOLLOW_2);
            rule__Primary__OpAssignment_0_1_1_0();

            state._fsp--;


            }

             after(grammarAccess.getPrimaryAccess().getOpAssignment_0_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0_1_1__0__Impl"


    // $ANTLR start "rule__Primary__Group_0_1_1__1"
    // InternalFortXTrans.g:6853:1: rule__Primary__Group_0_1_1__1 : rule__Primary__Group_0_1_1__1__Impl ;
    public final void rule__Primary__Group_0_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6857:1: ( rule__Primary__Group_0_1_1__1__Impl )
            // InternalFortXTrans.g:6858:2: rule__Primary__Group_0_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Primary__Group_0_1_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0_1_1__1"


    // $ANTLR start "rule__Primary__Group_0_1_1__1__Impl"
    // InternalFortXTrans.g:6864:1: rule__Primary__Group_0_1_1__1__Impl : ( ( rule__Primary__RightAssignment_0_1_1_1 ) ) ;
    public final void rule__Primary__Group_0_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6868:1: ( ( ( rule__Primary__RightAssignment_0_1_1_1 ) ) )
            // InternalFortXTrans.g:6869:1: ( ( rule__Primary__RightAssignment_0_1_1_1 ) )
            {
            // InternalFortXTrans.g:6869:1: ( ( rule__Primary__RightAssignment_0_1_1_1 ) )
            // InternalFortXTrans.g:6870:2: ( rule__Primary__RightAssignment_0_1_1_1 )
            {
             before(grammarAccess.getPrimaryAccess().getRightAssignment_0_1_1_1()); 
            // InternalFortXTrans.g:6871:2: ( rule__Primary__RightAssignment_0_1_1_1 )
            // InternalFortXTrans.g:6871:3: rule__Primary__RightAssignment_0_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Primary__RightAssignment_0_1_1_1();

            state._fsp--;


            }

             after(grammarAccess.getPrimaryAccess().getRightAssignment_0_1_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0_1_1__1__Impl"


    // $ANTLR start "rule__Primary__Group_0_2__0"
    // InternalFortXTrans.g:6880:1: rule__Primary__Group_0_2__0 : rule__Primary__Group_0_2__0__Impl rule__Primary__Group_0_2__1 ;
    public final void rule__Primary__Group_0_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6884:1: ( rule__Primary__Group_0_2__0__Impl rule__Primary__Group_0_2__1 )
            // InternalFortXTrans.g:6885:2: rule__Primary__Group_0_2__0__Impl rule__Primary__Group_0_2__1
            {
            pushFollow(FOLLOW_27);
            rule__Primary__Group_0_2__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Primary__Group_0_2__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0_2__0"


    // $ANTLR start "rule__Primary__Group_0_2__0__Impl"
    // InternalFortXTrans.g:6892:1: rule__Primary__Group_0_2__0__Impl : ( () ) ;
    public final void rule__Primary__Group_0_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6896:1: ( ( () ) )
            // InternalFortXTrans.g:6897:1: ( () )
            {
            // InternalFortXTrans.g:6897:1: ( () )
            // InternalFortXTrans.g:6898:2: ()
            {
             before(grammarAccess.getPrimaryAccess().getFCallLeftAction_0_2_0()); 
            // InternalFortXTrans.g:6899:2: ()
            // InternalFortXTrans.g:6899:3: 
            {
            }

             after(grammarAccess.getPrimaryAccess().getFCallLeftAction_0_2_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0_2__0__Impl"


    // $ANTLR start "rule__Primary__Group_0_2__1"
    // InternalFortXTrans.g:6907:1: rule__Primary__Group_0_2__1 : rule__Primary__Group_0_2__1__Impl rule__Primary__Group_0_2__2 ;
    public final void rule__Primary__Group_0_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6911:1: ( rule__Primary__Group_0_2__1__Impl rule__Primary__Group_0_2__2 )
            // InternalFortXTrans.g:6912:2: rule__Primary__Group_0_2__1__Impl rule__Primary__Group_0_2__2
            {
            pushFollow(FOLLOW_56);
            rule__Primary__Group_0_2__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Primary__Group_0_2__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0_2__1"


    // $ANTLR start "rule__Primary__Group_0_2__1__Impl"
    // InternalFortXTrans.g:6919:1: rule__Primary__Group_0_2__1__Impl : ( '(' ) ;
    public final void rule__Primary__Group_0_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6923:1: ( ( '(' ) )
            // InternalFortXTrans.g:6924:1: ( '(' )
            {
            // InternalFortXTrans.g:6924:1: ( '(' )
            // InternalFortXTrans.g:6925:2: '('
            {
             before(grammarAccess.getPrimaryAccess().getLeftParenthesisKeyword_0_2_1()); 
            match(input,33,FOLLOW_2); 
             after(grammarAccess.getPrimaryAccess().getLeftParenthesisKeyword_0_2_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0_2__1__Impl"


    // $ANTLR start "rule__Primary__Group_0_2__2"
    // InternalFortXTrans.g:6934:1: rule__Primary__Group_0_2__2 : rule__Primary__Group_0_2__2__Impl rule__Primary__Group_0_2__3 ;
    public final void rule__Primary__Group_0_2__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6938:1: ( rule__Primary__Group_0_2__2__Impl rule__Primary__Group_0_2__3 )
            // InternalFortXTrans.g:6939:2: rule__Primary__Group_0_2__2__Impl rule__Primary__Group_0_2__3
            {
            pushFollow(FOLLOW_56);
            rule__Primary__Group_0_2__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Primary__Group_0_2__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0_2__2"


    // $ANTLR start "rule__Primary__Group_0_2__2__Impl"
    // InternalFortXTrans.g:6946:1: rule__Primary__Group_0_2__2__Impl : ( ( rule__Primary__RightAssignment_0_2_2 )? ) ;
    public final void rule__Primary__Group_0_2__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6950:1: ( ( ( rule__Primary__RightAssignment_0_2_2 )? ) )
            // InternalFortXTrans.g:6951:1: ( ( rule__Primary__RightAssignment_0_2_2 )? )
            {
            // InternalFortXTrans.g:6951:1: ( ( rule__Primary__RightAssignment_0_2_2 )? )
            // InternalFortXTrans.g:6952:2: ( rule__Primary__RightAssignment_0_2_2 )?
            {
             before(grammarAccess.getPrimaryAccess().getRightAssignment_0_2_2()); 
            // InternalFortXTrans.g:6953:2: ( rule__Primary__RightAssignment_0_2_2 )?
            int alt66=2;
            int LA66_0 = input.LA(1);

            if ( ((LA66_0>=RULE_ID && LA66_0<=RULE_STRING)||LA66_0==33||LA66_0==40||LA66_0==50||(LA66_0>=74 && LA66_0<=75)) ) {
                alt66=1;
            }
            switch (alt66) {
                case 1 :
                    // InternalFortXTrans.g:6953:3: rule__Primary__RightAssignment_0_2_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__Primary__RightAssignment_0_2_2();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getPrimaryAccess().getRightAssignment_0_2_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0_2__2__Impl"


    // $ANTLR start "rule__Primary__Group_0_2__3"
    // InternalFortXTrans.g:6961:1: rule__Primary__Group_0_2__3 : rule__Primary__Group_0_2__3__Impl ;
    public final void rule__Primary__Group_0_2__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6965:1: ( rule__Primary__Group_0_2__3__Impl )
            // InternalFortXTrans.g:6966:2: rule__Primary__Group_0_2__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Primary__Group_0_2__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0_2__3"


    // $ANTLR start "rule__Primary__Group_0_2__3__Impl"
    // InternalFortXTrans.g:6972:1: rule__Primary__Group_0_2__3__Impl : ( ')' ) ;
    public final void rule__Primary__Group_0_2__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6976:1: ( ( ')' ) )
            // InternalFortXTrans.g:6977:1: ( ')' )
            {
            // InternalFortXTrans.g:6977:1: ( ')' )
            // InternalFortXTrans.g:6978:2: ')'
            {
             before(grammarAccess.getPrimaryAccess().getRightParenthesisKeyword_0_2_3()); 
            match(input,34,FOLLOW_2); 
             after(grammarAccess.getPrimaryAccess().getRightParenthesisKeyword_0_2_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0_2__3__Impl"


    // $ANTLR start "rule__Primary__Group_0_3__0"
    // InternalFortXTrans.g:6988:1: rule__Primary__Group_0_3__0 : rule__Primary__Group_0_3__0__Impl rule__Primary__Group_0_3__1 ;
    public final void rule__Primary__Group_0_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6992:1: ( rule__Primary__Group_0_3__0__Impl rule__Primary__Group_0_3__1 )
            // InternalFortXTrans.g:6993:2: rule__Primary__Group_0_3__0__Impl rule__Primary__Group_0_3__1
            {
            pushFollow(FOLLOW_57);
            rule__Primary__Group_0_3__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Primary__Group_0_3__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0_3__0"


    // $ANTLR start "rule__Primary__Group_0_3__0__Impl"
    // InternalFortXTrans.g:7000:1: rule__Primary__Group_0_3__0__Impl : ( () ) ;
    public final void rule__Primary__Group_0_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7004:1: ( ( () ) )
            // InternalFortXTrans.g:7005:1: ( () )
            {
            // InternalFortXTrans.g:7005:1: ( () )
            // InternalFortXTrans.g:7006:2: ()
            {
             before(grammarAccess.getPrimaryAccess().getArrayInitLeftAction_0_3_0()); 
            // InternalFortXTrans.g:7007:2: ()
            // InternalFortXTrans.g:7007:3: 
            {
            }

             after(grammarAccess.getPrimaryAccess().getArrayInitLeftAction_0_3_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0_3__0__Impl"


    // $ANTLR start "rule__Primary__Group_0_3__1"
    // InternalFortXTrans.g:7015:1: rule__Primary__Group_0_3__1 : rule__Primary__Group_0_3__1__Impl rule__Primary__Group_0_3__2 ;
    public final void rule__Primary__Group_0_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7019:1: ( rule__Primary__Group_0_3__1__Impl rule__Primary__Group_0_3__2 )
            // InternalFortXTrans.g:7020:2: rule__Primary__Group_0_3__1__Impl rule__Primary__Group_0_3__2
            {
            pushFollow(FOLLOW_5);
            rule__Primary__Group_0_3__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Primary__Group_0_3__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0_3__1"


    // $ANTLR start "rule__Primary__Group_0_3__1__Impl"
    // InternalFortXTrans.g:7027:1: rule__Primary__Group_0_3__1__Impl : ( '[\\\\' ) ;
    public final void rule__Primary__Group_0_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7031:1: ( ( '[\\\\' ) )
            // InternalFortXTrans.g:7032:1: ( '[\\\\' )
            {
            // InternalFortXTrans.g:7032:1: ( '[\\\\' )
            // InternalFortXTrans.g:7033:2: '[\\\\'
            {
             before(grammarAccess.getPrimaryAccess().getLeftSquareBracketReverseSolidusKeyword_0_3_1()); 
            match(input,43,FOLLOW_2); 
             after(grammarAccess.getPrimaryAccess().getLeftSquareBracketReverseSolidusKeyword_0_3_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0_3__1__Impl"


    // $ANTLR start "rule__Primary__Group_0_3__2"
    // InternalFortXTrans.g:7042:1: rule__Primary__Group_0_3__2 : rule__Primary__Group_0_3__2__Impl rule__Primary__Group_0_3__3 ;
    public final void rule__Primary__Group_0_3__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7046:1: ( rule__Primary__Group_0_3__2__Impl rule__Primary__Group_0_3__3 )
            // InternalFortXTrans.g:7047:2: rule__Primary__Group_0_3__2__Impl rule__Primary__Group_0_3__3
            {
            pushFollow(FOLLOW_24);
            rule__Primary__Group_0_3__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Primary__Group_0_3__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0_3__2"


    // $ANTLR start "rule__Primary__Group_0_3__2__Impl"
    // InternalFortXTrans.g:7054:1: rule__Primary__Group_0_3__2__Impl : ( ( rule__Primary__TypeAssignment_0_3_2 ) ) ;
    public final void rule__Primary__Group_0_3__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7058:1: ( ( ( rule__Primary__TypeAssignment_0_3_2 ) ) )
            // InternalFortXTrans.g:7059:1: ( ( rule__Primary__TypeAssignment_0_3_2 ) )
            {
            // InternalFortXTrans.g:7059:1: ( ( rule__Primary__TypeAssignment_0_3_2 ) )
            // InternalFortXTrans.g:7060:2: ( rule__Primary__TypeAssignment_0_3_2 )
            {
             before(grammarAccess.getPrimaryAccess().getTypeAssignment_0_3_2()); 
            // InternalFortXTrans.g:7061:2: ( rule__Primary__TypeAssignment_0_3_2 )
            // InternalFortXTrans.g:7061:3: rule__Primary__TypeAssignment_0_3_2
            {
            pushFollow(FOLLOW_2);
            rule__Primary__TypeAssignment_0_3_2();

            state._fsp--;


            }

             after(grammarAccess.getPrimaryAccess().getTypeAssignment_0_3_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0_3__2__Impl"


    // $ANTLR start "rule__Primary__Group_0_3__3"
    // InternalFortXTrans.g:7069:1: rule__Primary__Group_0_3__3 : rule__Primary__Group_0_3__3__Impl rule__Primary__Group_0_3__4 ;
    public final void rule__Primary__Group_0_3__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7073:1: ( rule__Primary__Group_0_3__3__Impl rule__Primary__Group_0_3__4 )
            // InternalFortXTrans.g:7074:2: rule__Primary__Group_0_3__3__Impl rule__Primary__Group_0_3__4
            {
            pushFollow(FOLLOW_58);
            rule__Primary__Group_0_3__3__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Primary__Group_0_3__4();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0_3__3"


    // $ANTLR start "rule__Primary__Group_0_3__3__Impl"
    // InternalFortXTrans.g:7081:1: rule__Primary__Group_0_3__3__Impl : ( ',' ) ;
    public final void rule__Primary__Group_0_3__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7085:1: ( ( ',' ) )
            // InternalFortXTrans.g:7086:1: ( ',' )
            {
            // InternalFortXTrans.g:7086:1: ( ',' )
            // InternalFortXTrans.g:7087:2: ','
            {
             before(grammarAccess.getPrimaryAccess().getCommaKeyword_0_3_3()); 
            match(input,29,FOLLOW_2); 
             after(grammarAccess.getPrimaryAccess().getCommaKeyword_0_3_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0_3__3__Impl"


    // $ANTLR start "rule__Primary__Group_0_3__4"
    // InternalFortXTrans.g:7096:1: rule__Primary__Group_0_3__4 : rule__Primary__Group_0_3__4__Impl rule__Primary__Group_0_3__5 ;
    public final void rule__Primary__Group_0_3__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7100:1: ( rule__Primary__Group_0_3__4__Impl rule__Primary__Group_0_3__5 )
            // InternalFortXTrans.g:7101:2: rule__Primary__Group_0_3__4__Impl rule__Primary__Group_0_3__5
            {
            pushFollow(FOLLOW_58);
            rule__Primary__Group_0_3__4__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Primary__Group_0_3__5();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0_3__4"


    // $ANTLR start "rule__Primary__Group_0_3__4__Impl"
    // InternalFortXTrans.g:7108:1: rule__Primary__Group_0_3__4__Impl : ( ( rule__Primary__SizesAssignment_0_3_4 )? ) ;
    public final void rule__Primary__Group_0_3__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7112:1: ( ( ( rule__Primary__SizesAssignment_0_3_4 )? ) )
            // InternalFortXTrans.g:7113:1: ( ( rule__Primary__SizesAssignment_0_3_4 )? )
            {
            // InternalFortXTrans.g:7113:1: ( ( rule__Primary__SizesAssignment_0_3_4 )? )
            // InternalFortXTrans.g:7114:2: ( rule__Primary__SizesAssignment_0_3_4 )?
            {
             before(grammarAccess.getPrimaryAccess().getSizesAssignment_0_3_4()); 
            // InternalFortXTrans.g:7115:2: ( rule__Primary__SizesAssignment_0_3_4 )?
            int alt67=2;
            int LA67_0 = input.LA(1);

            if ( ((LA67_0>=RULE_ID && LA67_0<=RULE_STRING)||LA67_0==33||LA67_0==40||LA67_0==50||(LA67_0>=74 && LA67_0<=75)) ) {
                alt67=1;
            }
            switch (alt67) {
                case 1 :
                    // InternalFortXTrans.g:7115:3: rule__Primary__SizesAssignment_0_3_4
                    {
                    pushFollow(FOLLOW_2);
                    rule__Primary__SizesAssignment_0_3_4();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getPrimaryAccess().getSizesAssignment_0_3_4()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0_3__4__Impl"


    // $ANTLR start "rule__Primary__Group_0_3__5"
    // InternalFortXTrans.g:7123:1: rule__Primary__Group_0_3__5 : rule__Primary__Group_0_3__5__Impl rule__Primary__Group_0_3__6 ;
    public final void rule__Primary__Group_0_3__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7127:1: ( rule__Primary__Group_0_3__5__Impl rule__Primary__Group_0_3__6 )
            // InternalFortXTrans.g:7128:2: rule__Primary__Group_0_3__5__Impl rule__Primary__Group_0_3__6
            {
            pushFollow(FOLLOW_27);
            rule__Primary__Group_0_3__5__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Primary__Group_0_3__6();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0_3__5"


    // $ANTLR start "rule__Primary__Group_0_3__5__Impl"
    // InternalFortXTrans.g:7135:1: rule__Primary__Group_0_3__5__Impl : ( '\\\\]' ) ;
    public final void rule__Primary__Group_0_3__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7139:1: ( ( '\\\\]' ) )
            // InternalFortXTrans.g:7140:1: ( '\\\\]' )
            {
            // InternalFortXTrans.g:7140:1: ( '\\\\]' )
            // InternalFortXTrans.g:7141:2: '\\\\]'
            {
             before(grammarAccess.getPrimaryAccess().getReverseSolidusRightSquareBracketKeyword_0_3_5()); 
            match(input,44,FOLLOW_2); 
             after(grammarAccess.getPrimaryAccess().getReverseSolidusRightSquareBracketKeyword_0_3_5()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0_3__5__Impl"


    // $ANTLR start "rule__Primary__Group_0_3__6"
    // InternalFortXTrans.g:7150:1: rule__Primary__Group_0_3__6 : rule__Primary__Group_0_3__6__Impl rule__Primary__Group_0_3__7 ;
    public final void rule__Primary__Group_0_3__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7154:1: ( rule__Primary__Group_0_3__6__Impl rule__Primary__Group_0_3__7 )
            // InternalFortXTrans.g:7155:2: rule__Primary__Group_0_3__6__Impl rule__Primary__Group_0_3__7
            {
            pushFollow(FOLLOW_59);
            rule__Primary__Group_0_3__6__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Primary__Group_0_3__7();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0_3__6"


    // $ANTLR start "rule__Primary__Group_0_3__6__Impl"
    // InternalFortXTrans.g:7162:1: rule__Primary__Group_0_3__6__Impl : ( '(' ) ;
    public final void rule__Primary__Group_0_3__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7166:1: ( ( '(' ) )
            // InternalFortXTrans.g:7167:1: ( '(' )
            {
            // InternalFortXTrans.g:7167:1: ( '(' )
            // InternalFortXTrans.g:7168:2: '('
            {
             before(grammarAccess.getPrimaryAccess().getLeftParenthesisKeyword_0_3_6()); 
            match(input,33,FOLLOW_2); 
             after(grammarAccess.getPrimaryAccess().getLeftParenthesisKeyword_0_3_6()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0_3__6__Impl"


    // $ANTLR start "rule__Primary__Group_0_3__7"
    // InternalFortXTrans.g:7177:1: rule__Primary__Group_0_3__7 : rule__Primary__Group_0_3__7__Impl rule__Primary__Group_0_3__8 ;
    public final void rule__Primary__Group_0_3__7() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7181:1: ( rule__Primary__Group_0_3__7__Impl rule__Primary__Group_0_3__8 )
            // InternalFortXTrans.g:7182:2: rule__Primary__Group_0_3__7__Impl rule__Primary__Group_0_3__8
            {
            pushFollow(FOLLOW_59);
            rule__Primary__Group_0_3__7__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Primary__Group_0_3__8();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0_3__7"


    // $ANTLR start "rule__Primary__Group_0_3__7__Impl"
    // InternalFortXTrans.g:7189:1: rule__Primary__Group_0_3__7__Impl : ( ( rule__Primary__Alternatives_0_3_7 )? ) ;
    public final void rule__Primary__Group_0_3__7__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7193:1: ( ( ( rule__Primary__Alternatives_0_3_7 )? ) )
            // InternalFortXTrans.g:7194:1: ( ( rule__Primary__Alternatives_0_3_7 )? )
            {
            // InternalFortXTrans.g:7194:1: ( ( rule__Primary__Alternatives_0_3_7 )? )
            // InternalFortXTrans.g:7195:2: ( rule__Primary__Alternatives_0_3_7 )?
            {
             before(grammarAccess.getPrimaryAccess().getAlternatives_0_3_7()); 
            // InternalFortXTrans.g:7196:2: ( rule__Primary__Alternatives_0_3_7 )?
            int alt68=2;
            int LA68_0 = input.LA(1);

            if ( ((LA68_0>=RULE_ID && LA68_0<=RULE_STRING)||LA68_0==33||LA68_0==45||(LA68_0>=74 && LA68_0<=75)) ) {
                alt68=1;
            }
            switch (alt68) {
                case 1 :
                    // InternalFortXTrans.g:7196:3: rule__Primary__Alternatives_0_3_7
                    {
                    pushFollow(FOLLOW_2);
                    rule__Primary__Alternatives_0_3_7();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getPrimaryAccess().getAlternatives_0_3_7()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0_3__7__Impl"


    // $ANTLR start "rule__Primary__Group_0_3__8"
    // InternalFortXTrans.g:7204:1: rule__Primary__Group_0_3__8 : rule__Primary__Group_0_3__8__Impl ;
    public final void rule__Primary__Group_0_3__8() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7208:1: ( rule__Primary__Group_0_3__8__Impl )
            // InternalFortXTrans.g:7209:2: rule__Primary__Group_0_3__8__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Primary__Group_0_3__8__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0_3__8"


    // $ANTLR start "rule__Primary__Group_0_3__8__Impl"
    // InternalFortXTrans.g:7215:1: rule__Primary__Group_0_3__8__Impl : ( ')' ) ;
    public final void rule__Primary__Group_0_3__8__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7219:1: ( ( ')' ) )
            // InternalFortXTrans.g:7220:1: ( ')' )
            {
            // InternalFortXTrans.g:7220:1: ( ')' )
            // InternalFortXTrans.g:7221:2: ')'
            {
             before(grammarAccess.getPrimaryAccess().getRightParenthesisKeyword_0_3_8()); 
            match(input,34,FOLLOW_2); 
             after(grammarAccess.getPrimaryAccess().getRightParenthesisKeyword_0_3_8()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0_3__8__Impl"


    // $ANTLR start "rule__Primary__Group_0_3_7_0__0"
    // InternalFortXTrans.g:7231:1: rule__Primary__Group_0_3_7_0__0 : rule__Primary__Group_0_3_7_0__0__Impl rule__Primary__Group_0_3_7_0__1 ;
    public final void rule__Primary__Group_0_3_7_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7235:1: ( rule__Primary__Group_0_3_7_0__0__Impl rule__Primary__Group_0_3_7_0__1 )
            // InternalFortXTrans.g:7236:2: rule__Primary__Group_0_3_7_0__0__Impl rule__Primary__Group_0_3_7_0__1
            {
            pushFollow(FOLLOW_60);
            rule__Primary__Group_0_3_7_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Primary__Group_0_3_7_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0_3_7_0__0"


    // $ANTLR start "rule__Primary__Group_0_3_7_0__0__Impl"
    // InternalFortXTrans.g:7243:1: rule__Primary__Group_0_3_7_0__0__Impl : ( 'fn' ) ;
    public final void rule__Primary__Group_0_3_7_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7247:1: ( ( 'fn' ) )
            // InternalFortXTrans.g:7248:1: ( 'fn' )
            {
            // InternalFortXTrans.g:7248:1: ( 'fn' )
            // InternalFortXTrans.g:7249:2: 'fn'
            {
             before(grammarAccess.getPrimaryAccess().getFnKeyword_0_3_7_0_0()); 
            match(input,45,FOLLOW_2); 
             after(grammarAccess.getPrimaryAccess().getFnKeyword_0_3_7_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0_3_7_0__0__Impl"


    // $ANTLR start "rule__Primary__Group_0_3_7_0__1"
    // InternalFortXTrans.g:7258:1: rule__Primary__Group_0_3_7_0__1 : rule__Primary__Group_0_3_7_0__1__Impl rule__Primary__Group_0_3_7_0__2 ;
    public final void rule__Primary__Group_0_3_7_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7262:1: ( rule__Primary__Group_0_3_7_0__1__Impl rule__Primary__Group_0_3_7_0__2 )
            // InternalFortXTrans.g:7263:2: rule__Primary__Group_0_3_7_0__1__Impl rule__Primary__Group_0_3_7_0__2
            {
            pushFollow(FOLLOW_61);
            rule__Primary__Group_0_3_7_0__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Primary__Group_0_3_7_0__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0_3_7_0__1"


    // $ANTLR start "rule__Primary__Group_0_3_7_0__1__Impl"
    // InternalFortXTrans.g:7270:1: rule__Primary__Group_0_3_7_0__1__Impl : ( ( rule__Primary__IndAssignment_0_3_7_0_1 ) ) ;
    public final void rule__Primary__Group_0_3_7_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7274:1: ( ( ( rule__Primary__IndAssignment_0_3_7_0_1 ) ) )
            // InternalFortXTrans.g:7275:1: ( ( rule__Primary__IndAssignment_0_3_7_0_1 ) )
            {
            // InternalFortXTrans.g:7275:1: ( ( rule__Primary__IndAssignment_0_3_7_0_1 ) )
            // InternalFortXTrans.g:7276:2: ( rule__Primary__IndAssignment_0_3_7_0_1 )
            {
             before(grammarAccess.getPrimaryAccess().getIndAssignment_0_3_7_0_1()); 
            // InternalFortXTrans.g:7277:2: ( rule__Primary__IndAssignment_0_3_7_0_1 )
            // InternalFortXTrans.g:7277:3: rule__Primary__IndAssignment_0_3_7_0_1
            {
            pushFollow(FOLLOW_2);
            rule__Primary__IndAssignment_0_3_7_0_1();

            state._fsp--;


            }

             after(grammarAccess.getPrimaryAccess().getIndAssignment_0_3_7_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0_3_7_0__1__Impl"


    // $ANTLR start "rule__Primary__Group_0_3_7_0__2"
    // InternalFortXTrans.g:7285:1: rule__Primary__Group_0_3_7_0__2 : rule__Primary__Group_0_3_7_0__2__Impl rule__Primary__Group_0_3_7_0__3 ;
    public final void rule__Primary__Group_0_3_7_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7289:1: ( rule__Primary__Group_0_3_7_0__2__Impl rule__Primary__Group_0_3_7_0__3 )
            // InternalFortXTrans.g:7290:2: rule__Primary__Group_0_3_7_0__2__Impl rule__Primary__Group_0_3_7_0__3
            {
            pushFollow(FOLLOW_32);
            rule__Primary__Group_0_3_7_0__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Primary__Group_0_3_7_0__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0_3_7_0__2"


    // $ANTLR start "rule__Primary__Group_0_3_7_0__2__Impl"
    // InternalFortXTrans.g:7297:1: rule__Primary__Group_0_3_7_0__2__Impl : ( '=>' ) ;
    public final void rule__Primary__Group_0_3_7_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7301:1: ( ( '=>' ) )
            // InternalFortXTrans.g:7302:1: ( '=>' )
            {
            // InternalFortXTrans.g:7302:1: ( '=>' )
            // InternalFortXTrans.g:7303:2: '=>'
            {
             before(grammarAccess.getPrimaryAccess().getEqualsSignGreaterThanSignKeyword_0_3_7_0_2()); 
            match(input,46,FOLLOW_2); 
             after(grammarAccess.getPrimaryAccess().getEqualsSignGreaterThanSignKeyword_0_3_7_0_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0_3_7_0__2__Impl"


    // $ANTLR start "rule__Primary__Group_0_3_7_0__3"
    // InternalFortXTrans.g:7312:1: rule__Primary__Group_0_3_7_0__3 : rule__Primary__Group_0_3_7_0__3__Impl ;
    public final void rule__Primary__Group_0_3_7_0__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7316:1: ( rule__Primary__Group_0_3_7_0__3__Impl )
            // InternalFortXTrans.g:7317:2: rule__Primary__Group_0_3_7_0__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Primary__Group_0_3_7_0__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0_3_7_0__3"


    // $ANTLR start "rule__Primary__Group_0_3_7_0__3__Impl"
    // InternalFortXTrans.g:7323:1: rule__Primary__Group_0_3_7_0__3__Impl : ( ( rule__Primary__FillerAssignment_0_3_7_0_3 )? ) ;
    public final void rule__Primary__Group_0_3_7_0__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7327:1: ( ( ( rule__Primary__FillerAssignment_0_3_7_0_3 )? ) )
            // InternalFortXTrans.g:7328:1: ( ( rule__Primary__FillerAssignment_0_3_7_0_3 )? )
            {
            // InternalFortXTrans.g:7328:1: ( ( rule__Primary__FillerAssignment_0_3_7_0_3 )? )
            // InternalFortXTrans.g:7329:2: ( rule__Primary__FillerAssignment_0_3_7_0_3 )?
            {
             before(grammarAccess.getPrimaryAccess().getFillerAssignment_0_3_7_0_3()); 
            // InternalFortXTrans.g:7330:2: ( rule__Primary__FillerAssignment_0_3_7_0_3 )?
            int alt69=2;
            int LA69_0 = input.LA(1);

            if ( ((LA69_0>=RULE_ID && LA69_0<=RULE_STRING)||LA69_0==33||LA69_0==40||LA69_0==50||LA69_0==57||LA69_0==64||(LA69_0>=67 && LA69_0<=70)||(LA69_0>=72 && LA69_0<=75)) ) {
                alt69=1;
            }
            switch (alt69) {
                case 1 :
                    // InternalFortXTrans.g:7330:3: rule__Primary__FillerAssignment_0_3_7_0_3
                    {
                    pushFollow(FOLLOW_2);
                    rule__Primary__FillerAssignment_0_3_7_0_3();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getPrimaryAccess().getFillerAssignment_0_3_7_0_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0_3_7_0__3__Impl"


    // $ANTLR start "rule__Primary__Group_0_4__0"
    // InternalFortXTrans.g:7339:1: rule__Primary__Group_0_4__0 : rule__Primary__Group_0_4__0__Impl rule__Primary__Group_0_4__1 ;
    public final void rule__Primary__Group_0_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7343:1: ( rule__Primary__Group_0_4__0__Impl rule__Primary__Group_0_4__1 )
            // InternalFortXTrans.g:7344:2: rule__Primary__Group_0_4__0__Impl rule__Primary__Group_0_4__1
            {
            pushFollow(FOLLOW_62);
            rule__Primary__Group_0_4__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Primary__Group_0_4__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0_4__0"


    // $ANTLR start "rule__Primary__Group_0_4__0__Impl"
    // InternalFortXTrans.g:7351:1: rule__Primary__Group_0_4__0__Impl : ( () ) ;
    public final void rule__Primary__Group_0_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7355:1: ( ( () ) )
            // InternalFortXTrans.g:7356:1: ( () )
            {
            // InternalFortXTrans.g:7356:1: ( () )
            // InternalFortXTrans.g:7357:2: ()
            {
             before(grammarAccess.getPrimaryAccess().getArrayCallLeftAction_0_4_0()); 
            // InternalFortXTrans.g:7358:2: ()
            // InternalFortXTrans.g:7358:3: 
            {
            }

             after(grammarAccess.getPrimaryAccess().getArrayCallLeftAction_0_4_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0_4__0__Impl"


    // $ANTLR start "rule__Primary__Group_0_4__1"
    // InternalFortXTrans.g:7366:1: rule__Primary__Group_0_4__1 : rule__Primary__Group_0_4__1__Impl rule__Primary__Group_0_4__2 ;
    public final void rule__Primary__Group_0_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7370:1: ( rule__Primary__Group_0_4__1__Impl rule__Primary__Group_0_4__2 )
            // InternalFortXTrans.g:7371:2: rule__Primary__Group_0_4__1__Impl rule__Primary__Group_0_4__2
            {
            pushFollow(FOLLOW_63);
            rule__Primary__Group_0_4__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Primary__Group_0_4__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0_4__1"


    // $ANTLR start "rule__Primary__Group_0_4__1__Impl"
    // InternalFortXTrans.g:7378:1: rule__Primary__Group_0_4__1__Impl : ( '[' ) ;
    public final void rule__Primary__Group_0_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7382:1: ( ( '[' ) )
            // InternalFortXTrans.g:7383:1: ( '[' )
            {
            // InternalFortXTrans.g:7383:1: ( '[' )
            // InternalFortXTrans.g:7384:2: '['
            {
             before(grammarAccess.getPrimaryAccess().getLeftSquareBracketKeyword_0_4_1()); 
            match(input,47,FOLLOW_2); 
             after(grammarAccess.getPrimaryAccess().getLeftSquareBracketKeyword_0_4_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0_4__1__Impl"


    // $ANTLR start "rule__Primary__Group_0_4__2"
    // InternalFortXTrans.g:7393:1: rule__Primary__Group_0_4__2 : rule__Primary__Group_0_4__2__Impl rule__Primary__Group_0_4__3 ;
    public final void rule__Primary__Group_0_4__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7397:1: ( rule__Primary__Group_0_4__2__Impl rule__Primary__Group_0_4__3 )
            // InternalFortXTrans.g:7398:2: rule__Primary__Group_0_4__2__Impl rule__Primary__Group_0_4__3
            {
            pushFollow(FOLLOW_63);
            rule__Primary__Group_0_4__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Primary__Group_0_4__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0_4__2"


    // $ANTLR start "rule__Primary__Group_0_4__2__Impl"
    // InternalFortXTrans.g:7405:1: rule__Primary__Group_0_4__2__Impl : ( ( rule__Primary__RightAssignment_0_4_2 )? ) ;
    public final void rule__Primary__Group_0_4__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7409:1: ( ( ( rule__Primary__RightAssignment_0_4_2 )? ) )
            // InternalFortXTrans.g:7410:1: ( ( rule__Primary__RightAssignment_0_4_2 )? )
            {
            // InternalFortXTrans.g:7410:1: ( ( rule__Primary__RightAssignment_0_4_2 )? )
            // InternalFortXTrans.g:7411:2: ( rule__Primary__RightAssignment_0_4_2 )?
            {
             before(grammarAccess.getPrimaryAccess().getRightAssignment_0_4_2()); 
            // InternalFortXTrans.g:7412:2: ( rule__Primary__RightAssignment_0_4_2 )?
            int alt70=2;
            int LA70_0 = input.LA(1);

            if ( ((LA70_0>=RULE_ID && LA70_0<=RULE_STRING)||LA70_0==33||LA70_0==40||LA70_0==50||(LA70_0>=74 && LA70_0<=75)) ) {
                alt70=1;
            }
            switch (alt70) {
                case 1 :
                    // InternalFortXTrans.g:7412:3: rule__Primary__RightAssignment_0_4_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__Primary__RightAssignment_0_4_2();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getPrimaryAccess().getRightAssignment_0_4_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0_4__2__Impl"


    // $ANTLR start "rule__Primary__Group_0_4__3"
    // InternalFortXTrans.g:7420:1: rule__Primary__Group_0_4__3 : rule__Primary__Group_0_4__3__Impl rule__Primary__Group_0_4__4 ;
    public final void rule__Primary__Group_0_4__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7424:1: ( rule__Primary__Group_0_4__3__Impl rule__Primary__Group_0_4__4 )
            // InternalFortXTrans.g:7425:2: rule__Primary__Group_0_4__3__Impl rule__Primary__Group_0_4__4
            {
            pushFollow(FOLLOW_55);
            rule__Primary__Group_0_4__3__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Primary__Group_0_4__4();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0_4__3"


    // $ANTLR start "rule__Primary__Group_0_4__3__Impl"
    // InternalFortXTrans.g:7432:1: rule__Primary__Group_0_4__3__Impl : ( ']' ) ;
    public final void rule__Primary__Group_0_4__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7436:1: ( ( ']' ) )
            // InternalFortXTrans.g:7437:1: ( ']' )
            {
            // InternalFortXTrans.g:7437:1: ( ']' )
            // InternalFortXTrans.g:7438:2: ']'
            {
             before(grammarAccess.getPrimaryAccess().getRightSquareBracketKeyword_0_4_3()); 
            match(input,48,FOLLOW_2); 
             after(grammarAccess.getPrimaryAccess().getRightSquareBracketKeyword_0_4_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0_4__3__Impl"


    // $ANTLR start "rule__Primary__Group_0_4__4"
    // InternalFortXTrans.g:7447:1: rule__Primary__Group_0_4__4 : rule__Primary__Group_0_4__4__Impl ;
    public final void rule__Primary__Group_0_4__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7451:1: ( rule__Primary__Group_0_4__4__Impl )
            // InternalFortXTrans.g:7452:2: rule__Primary__Group_0_4__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Primary__Group_0_4__4__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0_4__4"


    // $ANTLR start "rule__Primary__Group_0_4__4__Impl"
    // InternalFortXTrans.g:7458:1: rule__Primary__Group_0_4__4__Impl : ( ( rule__Primary__Group_0_4_4__0 )? ) ;
    public final void rule__Primary__Group_0_4__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7462:1: ( ( ( rule__Primary__Group_0_4_4__0 )? ) )
            // InternalFortXTrans.g:7463:1: ( ( rule__Primary__Group_0_4_4__0 )? )
            {
            // InternalFortXTrans.g:7463:1: ( ( rule__Primary__Group_0_4_4__0 )? )
            // InternalFortXTrans.g:7464:2: ( rule__Primary__Group_0_4_4__0 )?
            {
             before(grammarAccess.getPrimaryAccess().getGroup_0_4_4()); 
            // InternalFortXTrans.g:7465:2: ( rule__Primary__Group_0_4_4__0 )?
            int alt71=2;
            int LA71_0 = input.LA(1);

            if ( (LA71_0==49) ) {
                alt71=1;
            }
            switch (alt71) {
                case 1 :
                    // InternalFortXTrans.g:7465:3: rule__Primary__Group_0_4_4__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Primary__Group_0_4_4__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getPrimaryAccess().getGroup_0_4_4()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0_4__4__Impl"


    // $ANTLR start "rule__Primary__Group_0_4_4__0"
    // InternalFortXTrans.g:7474:1: rule__Primary__Group_0_4_4__0 : rule__Primary__Group_0_4_4__0__Impl rule__Primary__Group_0_4_4__1 ;
    public final void rule__Primary__Group_0_4_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7478:1: ( rule__Primary__Group_0_4_4__0__Impl rule__Primary__Group_0_4_4__1 )
            // InternalFortXTrans.g:7479:2: rule__Primary__Group_0_4_4__0__Impl rule__Primary__Group_0_4_4__1
            {
            pushFollow(FOLLOW_32);
            rule__Primary__Group_0_4_4__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Primary__Group_0_4_4__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0_4_4__0"


    // $ANTLR start "rule__Primary__Group_0_4_4__0__Impl"
    // InternalFortXTrans.g:7486:1: rule__Primary__Group_0_4_4__0__Impl : ( ':=' ) ;
    public final void rule__Primary__Group_0_4_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7490:1: ( ( ':=' ) )
            // InternalFortXTrans.g:7491:1: ( ':=' )
            {
            // InternalFortXTrans.g:7491:1: ( ':=' )
            // InternalFortXTrans.g:7492:2: ':='
            {
             before(grammarAccess.getPrimaryAccess().getColonEqualsSignKeyword_0_4_4_0()); 
            match(input,49,FOLLOW_2); 
             after(grammarAccess.getPrimaryAccess().getColonEqualsSignKeyword_0_4_4_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0_4_4__0__Impl"


    // $ANTLR start "rule__Primary__Group_0_4_4__1"
    // InternalFortXTrans.g:7501:1: rule__Primary__Group_0_4_4__1 : rule__Primary__Group_0_4_4__1__Impl ;
    public final void rule__Primary__Group_0_4_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7505:1: ( rule__Primary__Group_0_4_4__1__Impl )
            // InternalFortXTrans.g:7506:2: rule__Primary__Group_0_4_4__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Primary__Group_0_4_4__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0_4_4__1"


    // $ANTLR start "rule__Primary__Group_0_4_4__1__Impl"
    // InternalFortXTrans.g:7512:1: rule__Primary__Group_0_4_4__1__Impl : ( ( rule__Primary__ExtRightAssignment_0_4_4_1 ) ) ;
    public final void rule__Primary__Group_0_4_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7516:1: ( ( ( rule__Primary__ExtRightAssignment_0_4_4_1 ) ) )
            // InternalFortXTrans.g:7517:1: ( ( rule__Primary__ExtRightAssignment_0_4_4_1 ) )
            {
            // InternalFortXTrans.g:7517:1: ( ( rule__Primary__ExtRightAssignment_0_4_4_1 ) )
            // InternalFortXTrans.g:7518:2: ( rule__Primary__ExtRightAssignment_0_4_4_1 )
            {
             before(grammarAccess.getPrimaryAccess().getExtRightAssignment_0_4_4_1()); 
            // InternalFortXTrans.g:7519:2: ( rule__Primary__ExtRightAssignment_0_4_4_1 )
            // InternalFortXTrans.g:7519:3: rule__Primary__ExtRightAssignment_0_4_4_1
            {
            pushFollow(FOLLOW_2);
            rule__Primary__ExtRightAssignment_0_4_4_1();

            state._fsp--;


            }

             after(grammarAccess.getPrimaryAccess().getExtRightAssignment_0_4_4_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0_4_4__1__Impl"


    // $ANTLR start "rule__Primary__Group_1__0"
    // InternalFortXTrans.g:7528:1: rule__Primary__Group_1__0 : rule__Primary__Group_1__0__Impl rule__Primary__Group_1__1 ;
    public final void rule__Primary__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7532:1: ( rule__Primary__Group_1__0__Impl rule__Primary__Group_1__1 )
            // InternalFortXTrans.g:7533:2: rule__Primary__Group_1__0__Impl rule__Primary__Group_1__1
            {
            pushFollow(FOLLOW_64);
            rule__Primary__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Primary__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_1__0"


    // $ANTLR start "rule__Primary__Group_1__0__Impl"
    // InternalFortXTrans.g:7540:1: rule__Primary__Group_1__0__Impl : ( () ) ;
    public final void rule__Primary__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7544:1: ( ( () ) )
            // InternalFortXTrans.g:7545:1: ( () )
            {
            // InternalFortXTrans.g:7545:1: ( () )
            // InternalFortXTrans.g:7546:2: ()
            {
             before(grammarAccess.getPrimaryAccess().getNotAction_1_0()); 
            // InternalFortXTrans.g:7547:2: ()
            // InternalFortXTrans.g:7547:3: 
            {
            }

             after(grammarAccess.getPrimaryAccess().getNotAction_1_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_1__0__Impl"


    // $ANTLR start "rule__Primary__Group_1__1"
    // InternalFortXTrans.g:7555:1: rule__Primary__Group_1__1 : rule__Primary__Group_1__1__Impl rule__Primary__Group_1__2 ;
    public final void rule__Primary__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7559:1: ( rule__Primary__Group_1__1__Impl rule__Primary__Group_1__2 )
            // InternalFortXTrans.g:7560:2: rule__Primary__Group_1__1__Impl rule__Primary__Group_1__2
            {
            pushFollow(FOLLOW_32);
            rule__Primary__Group_1__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Primary__Group_1__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_1__1"


    // $ANTLR start "rule__Primary__Group_1__1__Impl"
    // InternalFortXTrans.g:7567:1: rule__Primary__Group_1__1__Impl : ( '!' ) ;
    public final void rule__Primary__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7571:1: ( ( '!' ) )
            // InternalFortXTrans.g:7572:1: ( '!' )
            {
            // InternalFortXTrans.g:7572:1: ( '!' )
            // InternalFortXTrans.g:7573:2: '!'
            {
             before(grammarAccess.getPrimaryAccess().getExclamationMarkKeyword_1_1()); 
            match(input,50,FOLLOW_2); 
             after(grammarAccess.getPrimaryAccess().getExclamationMarkKeyword_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_1__1__Impl"


    // $ANTLR start "rule__Primary__Group_1__2"
    // InternalFortXTrans.g:7582:1: rule__Primary__Group_1__2 : rule__Primary__Group_1__2__Impl ;
    public final void rule__Primary__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7586:1: ( rule__Primary__Group_1__2__Impl )
            // InternalFortXTrans.g:7587:2: rule__Primary__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Primary__Group_1__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_1__2"


    // $ANTLR start "rule__Primary__Group_1__2__Impl"
    // InternalFortXTrans.g:7593:1: rule__Primary__Group_1__2__Impl : ( ( rule__Primary__ExpressionAssignment_1_2 ) ) ;
    public final void rule__Primary__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7597:1: ( ( ( rule__Primary__ExpressionAssignment_1_2 ) ) )
            // InternalFortXTrans.g:7598:1: ( ( rule__Primary__ExpressionAssignment_1_2 ) )
            {
            // InternalFortXTrans.g:7598:1: ( ( rule__Primary__ExpressionAssignment_1_2 ) )
            // InternalFortXTrans.g:7599:2: ( rule__Primary__ExpressionAssignment_1_2 )
            {
             before(grammarAccess.getPrimaryAccess().getExpressionAssignment_1_2()); 
            // InternalFortXTrans.g:7600:2: ( rule__Primary__ExpressionAssignment_1_2 )
            // InternalFortXTrans.g:7600:3: rule__Primary__ExpressionAssignment_1_2
            {
            pushFollow(FOLLOW_2);
            rule__Primary__ExpressionAssignment_1_2();

            state._fsp--;


            }

             after(grammarAccess.getPrimaryAccess().getExpressionAssignment_1_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_1__2__Impl"


    // $ANTLR start "rule__Primary__Group_2__0"
    // InternalFortXTrans.g:7609:1: rule__Primary__Group_2__0 : rule__Primary__Group_2__0__Impl rule__Primary__Group_2__1 ;
    public final void rule__Primary__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7613:1: ( rule__Primary__Group_2__0__Impl rule__Primary__Group_2__1 )
            // InternalFortXTrans.g:7614:2: rule__Primary__Group_2__0__Impl rule__Primary__Group_2__1
            {
            pushFollow(FOLLOW_46);
            rule__Primary__Group_2__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Primary__Group_2__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_2__0"


    // $ANTLR start "rule__Primary__Group_2__0__Impl"
    // InternalFortXTrans.g:7621:1: rule__Primary__Group_2__0__Impl : ( () ) ;
    public final void rule__Primary__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7625:1: ( ( () ) )
            // InternalFortXTrans.g:7626:1: ( () )
            {
            // InternalFortXTrans.g:7626:1: ( () )
            // InternalFortXTrans.g:7627:2: ()
            {
             before(grammarAccess.getPrimaryAccess().getNegAction_2_0()); 
            // InternalFortXTrans.g:7628:2: ()
            // InternalFortXTrans.g:7628:3: 
            {
            }

             after(grammarAccess.getPrimaryAccess().getNegAction_2_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_2__0__Impl"


    // $ANTLR start "rule__Primary__Group_2__1"
    // InternalFortXTrans.g:7636:1: rule__Primary__Group_2__1 : rule__Primary__Group_2__1__Impl rule__Primary__Group_2__2 ;
    public final void rule__Primary__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7640:1: ( rule__Primary__Group_2__1__Impl rule__Primary__Group_2__2 )
            // InternalFortXTrans.g:7641:2: rule__Primary__Group_2__1__Impl rule__Primary__Group_2__2
            {
            pushFollow(FOLLOW_32);
            rule__Primary__Group_2__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Primary__Group_2__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_2__1"


    // $ANTLR start "rule__Primary__Group_2__1__Impl"
    // InternalFortXTrans.g:7648:1: rule__Primary__Group_2__1__Impl : ( '-' ) ;
    public final void rule__Primary__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7652:1: ( ( '-' ) )
            // InternalFortXTrans.g:7653:1: ( '-' )
            {
            // InternalFortXTrans.g:7653:1: ( '-' )
            // InternalFortXTrans.g:7654:2: '-'
            {
             before(grammarAccess.getPrimaryAccess().getHyphenMinusKeyword_2_1()); 
            match(input,40,FOLLOW_2); 
             after(grammarAccess.getPrimaryAccess().getHyphenMinusKeyword_2_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_2__1__Impl"


    // $ANTLR start "rule__Primary__Group_2__2"
    // InternalFortXTrans.g:7663:1: rule__Primary__Group_2__2 : rule__Primary__Group_2__2__Impl ;
    public final void rule__Primary__Group_2__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7667:1: ( rule__Primary__Group_2__2__Impl )
            // InternalFortXTrans.g:7668:2: rule__Primary__Group_2__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Primary__Group_2__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_2__2"


    // $ANTLR start "rule__Primary__Group_2__2__Impl"
    // InternalFortXTrans.g:7674:1: rule__Primary__Group_2__2__Impl : ( ( rule__Primary__ExpressionAssignment_2_2 ) ) ;
    public final void rule__Primary__Group_2__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7678:1: ( ( ( rule__Primary__ExpressionAssignment_2_2 ) ) )
            // InternalFortXTrans.g:7679:1: ( ( rule__Primary__ExpressionAssignment_2_2 ) )
            {
            // InternalFortXTrans.g:7679:1: ( ( rule__Primary__ExpressionAssignment_2_2 ) )
            // InternalFortXTrans.g:7680:2: ( rule__Primary__ExpressionAssignment_2_2 )
            {
             before(grammarAccess.getPrimaryAccess().getExpressionAssignment_2_2()); 
            // InternalFortXTrans.g:7681:2: ( rule__Primary__ExpressionAssignment_2_2 )
            // InternalFortXTrans.g:7681:3: rule__Primary__ExpressionAssignment_2_2
            {
            pushFollow(FOLLOW_2);
            rule__Primary__ExpressionAssignment_2_2();

            state._fsp--;


            }

             after(grammarAccess.getPrimaryAccess().getExpressionAssignment_2_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_2__2__Impl"


    // $ANTLR start "rule__Primary__Group_3__0"
    // InternalFortXTrans.g:7690:1: rule__Primary__Group_3__0 : rule__Primary__Group_3__0__Impl rule__Primary__Group_3__1 ;
    public final void rule__Primary__Group_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7694:1: ( rule__Primary__Group_3__0__Impl rule__Primary__Group_3__1 )
            // InternalFortXTrans.g:7695:2: rule__Primary__Group_3__0__Impl rule__Primary__Group_3__1
            {
            pushFollow(FOLLOW_32);
            rule__Primary__Group_3__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Primary__Group_3__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_3__0"


    // $ANTLR start "rule__Primary__Group_3__0__Impl"
    // InternalFortXTrans.g:7702:1: rule__Primary__Group_3__0__Impl : ( () ) ;
    public final void rule__Primary__Group_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7706:1: ( ( () ) )
            // InternalFortXTrans.g:7707:1: ( () )
            {
            // InternalFortXTrans.g:7707:1: ( () )
            // InternalFortXTrans.g:7708:2: ()
            {
             before(grammarAccess.getPrimaryAccess().getParanAction_3_0()); 
            // InternalFortXTrans.g:7709:2: ()
            // InternalFortXTrans.g:7709:3: 
            {
            }

             after(grammarAccess.getPrimaryAccess().getParanAction_3_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_3__0__Impl"


    // $ANTLR start "rule__Primary__Group_3__1"
    // InternalFortXTrans.g:7717:1: rule__Primary__Group_3__1 : rule__Primary__Group_3__1__Impl rule__Primary__Group_3__2 ;
    public final void rule__Primary__Group_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7721:1: ( rule__Primary__Group_3__1__Impl rule__Primary__Group_3__2 )
            // InternalFortXTrans.g:7722:2: rule__Primary__Group_3__1__Impl rule__Primary__Group_3__2
            {
            pushFollow(FOLLOW_32);
            rule__Primary__Group_3__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Primary__Group_3__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_3__1"


    // $ANTLR start "rule__Primary__Group_3__1__Impl"
    // InternalFortXTrans.g:7729:1: rule__Primary__Group_3__1__Impl : ( '(' ) ;
    public final void rule__Primary__Group_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7733:1: ( ( '(' ) )
            // InternalFortXTrans.g:7734:1: ( '(' )
            {
            // InternalFortXTrans.g:7734:1: ( '(' )
            // InternalFortXTrans.g:7735:2: '('
            {
             before(grammarAccess.getPrimaryAccess().getLeftParenthesisKeyword_3_1()); 
            match(input,33,FOLLOW_2); 
             after(grammarAccess.getPrimaryAccess().getLeftParenthesisKeyword_3_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_3__1__Impl"


    // $ANTLR start "rule__Primary__Group_3__2"
    // InternalFortXTrans.g:7744:1: rule__Primary__Group_3__2 : rule__Primary__Group_3__2__Impl rule__Primary__Group_3__3 ;
    public final void rule__Primary__Group_3__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7748:1: ( rule__Primary__Group_3__2__Impl rule__Primary__Group_3__3 )
            // InternalFortXTrans.g:7749:2: rule__Primary__Group_3__2__Impl rule__Primary__Group_3__3
            {
            pushFollow(FOLLOW_23);
            rule__Primary__Group_3__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Primary__Group_3__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_3__2"


    // $ANTLR start "rule__Primary__Group_3__2__Impl"
    // InternalFortXTrans.g:7756:1: rule__Primary__Group_3__2__Impl : ( ( rule__Primary__ExpAssignment_3_2 ) ) ;
    public final void rule__Primary__Group_3__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7760:1: ( ( ( rule__Primary__ExpAssignment_3_2 ) ) )
            // InternalFortXTrans.g:7761:1: ( ( rule__Primary__ExpAssignment_3_2 ) )
            {
            // InternalFortXTrans.g:7761:1: ( ( rule__Primary__ExpAssignment_3_2 ) )
            // InternalFortXTrans.g:7762:2: ( rule__Primary__ExpAssignment_3_2 )
            {
             before(grammarAccess.getPrimaryAccess().getExpAssignment_3_2()); 
            // InternalFortXTrans.g:7763:2: ( rule__Primary__ExpAssignment_3_2 )
            // InternalFortXTrans.g:7763:3: rule__Primary__ExpAssignment_3_2
            {
            pushFollow(FOLLOW_2);
            rule__Primary__ExpAssignment_3_2();

            state._fsp--;


            }

             after(grammarAccess.getPrimaryAccess().getExpAssignment_3_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_3__2__Impl"


    // $ANTLR start "rule__Primary__Group_3__3"
    // InternalFortXTrans.g:7771:1: rule__Primary__Group_3__3 : rule__Primary__Group_3__3__Impl ;
    public final void rule__Primary__Group_3__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7775:1: ( rule__Primary__Group_3__3__Impl )
            // InternalFortXTrans.g:7776:2: rule__Primary__Group_3__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Primary__Group_3__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_3__3"


    // $ANTLR start "rule__Primary__Group_3__3__Impl"
    // InternalFortXTrans.g:7782:1: rule__Primary__Group_3__3__Impl : ( ')' ) ;
    public final void rule__Primary__Group_3__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7786:1: ( ( ')' ) )
            // InternalFortXTrans.g:7787:1: ( ')' )
            {
            // InternalFortXTrans.g:7787:1: ( ')' )
            // InternalFortXTrans.g:7788:2: ')'
            {
             before(grammarAccess.getPrimaryAccess().getRightParenthesisKeyword_3_3()); 
            match(input,34,FOLLOW_2); 
             after(grammarAccess.getPrimaryAccess().getRightParenthesisKeyword_3_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_3__3__Impl"


    // $ANTLR start "rule__ExprList__Group__0"
    // InternalFortXTrans.g:7798:1: rule__ExprList__Group__0 : rule__ExprList__Group__0__Impl rule__ExprList__Group__1 ;
    public final void rule__ExprList__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7802:1: ( rule__ExprList__Group__0__Impl rule__ExprList__Group__1 )
            // InternalFortXTrans.g:7803:2: rule__ExprList__Group__0__Impl rule__ExprList__Group__1
            {
            pushFollow(FOLLOW_24);
            rule__ExprList__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ExprList__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExprList__Group__0"


    // $ANTLR start "rule__ExprList__Group__0__Impl"
    // InternalFortXTrans.g:7810:1: rule__ExprList__Group__0__Impl : ( ( rule__ExprList__ExpsAssignment_0 ) ) ;
    public final void rule__ExprList__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7814:1: ( ( ( rule__ExprList__ExpsAssignment_0 ) ) )
            // InternalFortXTrans.g:7815:1: ( ( rule__ExprList__ExpsAssignment_0 ) )
            {
            // InternalFortXTrans.g:7815:1: ( ( rule__ExprList__ExpsAssignment_0 ) )
            // InternalFortXTrans.g:7816:2: ( rule__ExprList__ExpsAssignment_0 )
            {
             before(grammarAccess.getExprListAccess().getExpsAssignment_0()); 
            // InternalFortXTrans.g:7817:2: ( rule__ExprList__ExpsAssignment_0 )
            // InternalFortXTrans.g:7817:3: rule__ExprList__ExpsAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__ExprList__ExpsAssignment_0();

            state._fsp--;


            }

             after(grammarAccess.getExprListAccess().getExpsAssignment_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExprList__Group__0__Impl"


    // $ANTLR start "rule__ExprList__Group__1"
    // InternalFortXTrans.g:7825:1: rule__ExprList__Group__1 : rule__ExprList__Group__1__Impl ;
    public final void rule__ExprList__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7829:1: ( rule__ExprList__Group__1__Impl )
            // InternalFortXTrans.g:7830:2: rule__ExprList__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ExprList__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExprList__Group__1"


    // $ANTLR start "rule__ExprList__Group__1__Impl"
    // InternalFortXTrans.g:7836:1: rule__ExprList__Group__1__Impl : ( ( rule__ExprList__Group_1__0 )* ) ;
    public final void rule__ExprList__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7840:1: ( ( ( rule__ExprList__Group_1__0 )* ) )
            // InternalFortXTrans.g:7841:1: ( ( rule__ExprList__Group_1__0 )* )
            {
            // InternalFortXTrans.g:7841:1: ( ( rule__ExprList__Group_1__0 )* )
            // InternalFortXTrans.g:7842:2: ( rule__ExprList__Group_1__0 )*
            {
             before(grammarAccess.getExprListAccess().getGroup_1()); 
            // InternalFortXTrans.g:7843:2: ( rule__ExprList__Group_1__0 )*
            loop72:
            do {
                int alt72=2;
                int LA72_0 = input.LA(1);

                if ( (LA72_0==29) ) {
                    alt72=1;
                }


                switch (alt72) {
            	case 1 :
            	    // InternalFortXTrans.g:7843:3: rule__ExprList__Group_1__0
            	    {
            	    pushFollow(FOLLOW_15);
            	    rule__ExprList__Group_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop72;
                }
            } while (true);

             after(grammarAccess.getExprListAccess().getGroup_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExprList__Group__1__Impl"


    // $ANTLR start "rule__ExprList__Group_1__0"
    // InternalFortXTrans.g:7852:1: rule__ExprList__Group_1__0 : rule__ExprList__Group_1__0__Impl rule__ExprList__Group_1__1 ;
    public final void rule__ExprList__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7856:1: ( rule__ExprList__Group_1__0__Impl rule__ExprList__Group_1__1 )
            // InternalFortXTrans.g:7857:2: rule__ExprList__Group_1__0__Impl rule__ExprList__Group_1__1
            {
            pushFollow(FOLLOW_32);
            rule__ExprList__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ExprList__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExprList__Group_1__0"


    // $ANTLR start "rule__ExprList__Group_1__0__Impl"
    // InternalFortXTrans.g:7864:1: rule__ExprList__Group_1__0__Impl : ( ',' ) ;
    public final void rule__ExprList__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7868:1: ( ( ',' ) )
            // InternalFortXTrans.g:7869:1: ( ',' )
            {
            // InternalFortXTrans.g:7869:1: ( ',' )
            // InternalFortXTrans.g:7870:2: ','
            {
             before(grammarAccess.getExprListAccess().getCommaKeyword_1_0()); 
            match(input,29,FOLLOW_2); 
             after(grammarAccess.getExprListAccess().getCommaKeyword_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExprList__Group_1__0__Impl"


    // $ANTLR start "rule__ExprList__Group_1__1"
    // InternalFortXTrans.g:7879:1: rule__ExprList__Group_1__1 : rule__ExprList__Group_1__1__Impl ;
    public final void rule__ExprList__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7883:1: ( rule__ExprList__Group_1__1__Impl )
            // InternalFortXTrans.g:7884:2: rule__ExprList__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ExprList__Group_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExprList__Group_1__1"


    // $ANTLR start "rule__ExprList__Group_1__1__Impl"
    // InternalFortXTrans.g:7890:1: rule__ExprList__Group_1__1__Impl : ( ( rule__ExprList__ExpAssignment_1_1 ) ) ;
    public final void rule__ExprList__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7894:1: ( ( ( rule__ExprList__ExpAssignment_1_1 ) ) )
            // InternalFortXTrans.g:7895:1: ( ( rule__ExprList__ExpAssignment_1_1 ) )
            {
            // InternalFortXTrans.g:7895:1: ( ( rule__ExprList__ExpAssignment_1_1 ) )
            // InternalFortXTrans.g:7896:2: ( rule__ExprList__ExpAssignment_1_1 )
            {
             before(grammarAccess.getExprListAccess().getExpAssignment_1_1()); 
            // InternalFortXTrans.g:7897:2: ( rule__ExprList__ExpAssignment_1_1 )
            // InternalFortXTrans.g:7897:3: rule__ExprList__ExpAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__ExprList__ExpAssignment_1_1();

            state._fsp--;


            }

             after(grammarAccess.getExprListAccess().getExpAssignment_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExprList__Group_1__1__Impl"


    // $ANTLR start "rule__ExprTail__Group__0"
    // InternalFortXTrans.g:7906:1: rule__ExprTail__Group__0 : rule__ExprTail__Group__0__Impl rule__ExprTail__Group__1 ;
    public final void rule__ExprTail__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7910:1: ( rule__ExprTail__Group__0__Impl rule__ExprTail__Group__1 )
            // InternalFortXTrans.g:7911:2: rule__ExprTail__Group__0__Impl rule__ExprTail__Group__1
            {
            pushFollow(FOLLOW_5);
            rule__ExprTail__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ExprTail__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExprTail__Group__0"


    // $ANTLR start "rule__ExprTail__Group__0__Impl"
    // InternalFortXTrans.g:7918:1: rule__ExprTail__Group__0__Impl : ( 'as' ) ;
    public final void rule__ExprTail__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7922:1: ( ( 'as' ) )
            // InternalFortXTrans.g:7923:1: ( 'as' )
            {
            // InternalFortXTrans.g:7923:1: ( 'as' )
            // InternalFortXTrans.g:7924:2: 'as'
            {
             before(grammarAccess.getExprTailAccess().getAsKeyword_0()); 
            match(input,32,FOLLOW_2); 
             after(grammarAccess.getExprTailAccess().getAsKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExprTail__Group__0__Impl"


    // $ANTLR start "rule__ExprTail__Group__1"
    // InternalFortXTrans.g:7933:1: rule__ExprTail__Group__1 : rule__ExprTail__Group__1__Impl ;
    public final void rule__ExprTail__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7937:1: ( rule__ExprTail__Group__1__Impl )
            // InternalFortXTrans.g:7938:2: rule__ExprTail__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ExprTail__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExprTail__Group__1"


    // $ANTLR start "rule__ExprTail__Group__1__Impl"
    // InternalFortXTrans.g:7944:1: rule__ExprTail__Group__1__Impl : ( ( rule__ExprTail__TypeAssignment_1 ) ) ;
    public final void rule__ExprTail__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7948:1: ( ( ( rule__ExprTail__TypeAssignment_1 ) ) )
            // InternalFortXTrans.g:7949:1: ( ( rule__ExprTail__TypeAssignment_1 ) )
            {
            // InternalFortXTrans.g:7949:1: ( ( rule__ExprTail__TypeAssignment_1 ) )
            // InternalFortXTrans.g:7950:2: ( rule__ExprTail__TypeAssignment_1 )
            {
             before(grammarAccess.getExprTailAccess().getTypeAssignment_1()); 
            // InternalFortXTrans.g:7951:2: ( rule__ExprTail__TypeAssignment_1 )
            // InternalFortXTrans.g:7951:3: rule__ExprTail__TypeAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__ExprTail__TypeAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getExprTailAccess().getTypeAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExprTail__Group__1__Impl"


    // $ANTLR start "rule__DelimitedExpr__Group_1__0"
    // InternalFortXTrans.g:7960:1: rule__DelimitedExpr__Group_1__0 : rule__DelimitedExpr__Group_1__0__Impl rule__DelimitedExpr__Group_1__1 ;
    public final void rule__DelimitedExpr__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7964:1: ( rule__DelimitedExpr__Group_1__0__Impl rule__DelimitedExpr__Group_1__1 )
            // InternalFortXTrans.g:7965:2: rule__DelimitedExpr__Group_1__0__Impl rule__DelimitedExpr__Group_1__1
            {
            pushFollow(FOLLOW_32);
            rule__DelimitedExpr__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DelimitedExpr__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Group_1__0"


    // $ANTLR start "rule__DelimitedExpr__Group_1__0__Impl"
    // InternalFortXTrans.g:7972:1: rule__DelimitedExpr__Group_1__0__Impl : ( ( rule__DelimitedExpr__RetAssignment_1_0 ) ) ;
    public final void rule__DelimitedExpr__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7976:1: ( ( ( rule__DelimitedExpr__RetAssignment_1_0 ) ) )
            // InternalFortXTrans.g:7977:1: ( ( rule__DelimitedExpr__RetAssignment_1_0 ) )
            {
            // InternalFortXTrans.g:7977:1: ( ( rule__DelimitedExpr__RetAssignment_1_0 ) )
            // InternalFortXTrans.g:7978:2: ( rule__DelimitedExpr__RetAssignment_1_0 )
            {
             before(grammarAccess.getDelimitedExprAccess().getRetAssignment_1_0()); 
            // InternalFortXTrans.g:7979:2: ( rule__DelimitedExpr__RetAssignment_1_0 )
            // InternalFortXTrans.g:7979:3: rule__DelimitedExpr__RetAssignment_1_0
            {
            pushFollow(FOLLOW_2);
            rule__DelimitedExpr__RetAssignment_1_0();

            state._fsp--;


            }

             after(grammarAccess.getDelimitedExprAccess().getRetAssignment_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Group_1__0__Impl"


    // $ANTLR start "rule__DelimitedExpr__Group_1__1"
    // InternalFortXTrans.g:7987:1: rule__DelimitedExpr__Group_1__1 : rule__DelimitedExpr__Group_1__1__Impl ;
    public final void rule__DelimitedExpr__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7991:1: ( rule__DelimitedExpr__Group_1__1__Impl )
            // InternalFortXTrans.g:7992:2: rule__DelimitedExpr__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__DelimitedExpr__Group_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Group_1__1"


    // $ANTLR start "rule__DelimitedExpr__Group_1__1__Impl"
    // InternalFortXTrans.g:7998:1: rule__DelimitedExpr__Group_1__1__Impl : ( ( rule__DelimitedExpr__BlockAssignment_1_1 ) ) ;
    public final void rule__DelimitedExpr__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8002:1: ( ( ( rule__DelimitedExpr__BlockAssignment_1_1 ) ) )
            // InternalFortXTrans.g:8003:1: ( ( rule__DelimitedExpr__BlockAssignment_1_1 ) )
            {
            // InternalFortXTrans.g:8003:1: ( ( rule__DelimitedExpr__BlockAssignment_1_1 ) )
            // InternalFortXTrans.g:8004:2: ( rule__DelimitedExpr__BlockAssignment_1_1 )
            {
             before(grammarAccess.getDelimitedExprAccess().getBlockAssignment_1_1()); 
            // InternalFortXTrans.g:8005:2: ( rule__DelimitedExpr__BlockAssignment_1_1 )
            // InternalFortXTrans.g:8005:3: rule__DelimitedExpr__BlockAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__DelimitedExpr__BlockAssignment_1_1();

            state._fsp--;


            }

             after(grammarAccess.getDelimitedExprAccess().getBlockAssignment_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Group_1__1__Impl"


    // $ANTLR start "rule__DelimitedExpr__Group_2__0"
    // InternalFortXTrans.g:8014:1: rule__DelimitedExpr__Group_2__0 : rule__DelimitedExpr__Group_2__0__Impl rule__DelimitedExpr__Group_2__1 ;
    public final void rule__DelimitedExpr__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8018:1: ( rule__DelimitedExpr__Group_2__0__Impl rule__DelimitedExpr__Group_2__1 )
            // InternalFortXTrans.g:8019:2: rule__DelimitedExpr__Group_2__0__Impl rule__DelimitedExpr__Group_2__1
            {
            pushFollow(FOLLOW_32);
            rule__DelimitedExpr__Group_2__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DelimitedExpr__Group_2__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Group_2__0"


    // $ANTLR start "rule__DelimitedExpr__Group_2__0__Impl"
    // InternalFortXTrans.g:8026:1: rule__DelimitedExpr__Group_2__0__Impl : ( ( rule__DelimitedExpr__AwhileAssignment_2_0 ) ) ;
    public final void rule__DelimitedExpr__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8030:1: ( ( ( rule__DelimitedExpr__AwhileAssignment_2_0 ) ) )
            // InternalFortXTrans.g:8031:1: ( ( rule__DelimitedExpr__AwhileAssignment_2_0 ) )
            {
            // InternalFortXTrans.g:8031:1: ( ( rule__DelimitedExpr__AwhileAssignment_2_0 ) )
            // InternalFortXTrans.g:8032:2: ( rule__DelimitedExpr__AwhileAssignment_2_0 )
            {
             before(grammarAccess.getDelimitedExprAccess().getAwhileAssignment_2_0()); 
            // InternalFortXTrans.g:8033:2: ( rule__DelimitedExpr__AwhileAssignment_2_0 )
            // InternalFortXTrans.g:8033:3: rule__DelimitedExpr__AwhileAssignment_2_0
            {
            pushFollow(FOLLOW_2);
            rule__DelimitedExpr__AwhileAssignment_2_0();

            state._fsp--;


            }

             after(grammarAccess.getDelimitedExprAccess().getAwhileAssignment_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Group_2__0__Impl"


    // $ANTLR start "rule__DelimitedExpr__Group_2__1"
    // InternalFortXTrans.g:8041:1: rule__DelimitedExpr__Group_2__1 : rule__DelimitedExpr__Group_2__1__Impl rule__DelimitedExpr__Group_2__2 ;
    public final void rule__DelimitedExpr__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8045:1: ( rule__DelimitedExpr__Group_2__1__Impl rule__DelimitedExpr__Group_2__2 )
            // InternalFortXTrans.g:8046:2: rule__DelimitedExpr__Group_2__1__Impl rule__DelimitedExpr__Group_2__2
            {
            pushFollow(FOLLOW_65);
            rule__DelimitedExpr__Group_2__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DelimitedExpr__Group_2__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Group_2__1"


    // $ANTLR start "rule__DelimitedExpr__Group_2__1__Impl"
    // InternalFortXTrans.g:8053:1: rule__DelimitedExpr__Group_2__1__Impl : ( ( rule__DelimitedExpr__ExprAssignment_2_1 ) ) ;
    public final void rule__DelimitedExpr__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8057:1: ( ( ( rule__DelimitedExpr__ExprAssignment_2_1 ) ) )
            // InternalFortXTrans.g:8058:1: ( ( rule__DelimitedExpr__ExprAssignment_2_1 ) )
            {
            // InternalFortXTrans.g:8058:1: ( ( rule__DelimitedExpr__ExprAssignment_2_1 ) )
            // InternalFortXTrans.g:8059:2: ( rule__DelimitedExpr__ExprAssignment_2_1 )
            {
             before(grammarAccess.getDelimitedExprAccess().getExprAssignment_2_1()); 
            // InternalFortXTrans.g:8060:2: ( rule__DelimitedExpr__ExprAssignment_2_1 )
            // InternalFortXTrans.g:8060:3: rule__DelimitedExpr__ExprAssignment_2_1
            {
            pushFollow(FOLLOW_2);
            rule__DelimitedExpr__ExprAssignment_2_1();

            state._fsp--;


            }

             after(grammarAccess.getDelimitedExprAccess().getExprAssignment_2_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Group_2__1__Impl"


    // $ANTLR start "rule__DelimitedExpr__Group_2__2"
    // InternalFortXTrans.g:8068:1: rule__DelimitedExpr__Group_2__2 : rule__DelimitedExpr__Group_2__2__Impl ;
    public final void rule__DelimitedExpr__Group_2__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8072:1: ( rule__DelimitedExpr__Group_2__2__Impl )
            // InternalFortXTrans.g:8073:2: rule__DelimitedExpr__Group_2__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__DelimitedExpr__Group_2__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Group_2__2"


    // $ANTLR start "rule__DelimitedExpr__Group_2__2__Impl"
    // InternalFortXTrans.g:8079:1: rule__DelimitedExpr__Group_2__2__Impl : ( ( rule__DelimitedExpr__WhiledodAssignment_2_2 ) ) ;
    public final void rule__DelimitedExpr__Group_2__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8083:1: ( ( ( rule__DelimitedExpr__WhiledodAssignment_2_2 ) ) )
            // InternalFortXTrans.g:8084:1: ( ( rule__DelimitedExpr__WhiledodAssignment_2_2 ) )
            {
            // InternalFortXTrans.g:8084:1: ( ( rule__DelimitedExpr__WhiledodAssignment_2_2 ) )
            // InternalFortXTrans.g:8085:2: ( rule__DelimitedExpr__WhiledodAssignment_2_2 )
            {
             before(grammarAccess.getDelimitedExprAccess().getWhiledodAssignment_2_2()); 
            // InternalFortXTrans.g:8086:2: ( rule__DelimitedExpr__WhiledodAssignment_2_2 )
            // InternalFortXTrans.g:8086:3: rule__DelimitedExpr__WhiledodAssignment_2_2
            {
            pushFollow(FOLLOW_2);
            rule__DelimitedExpr__WhiledodAssignment_2_2();

            state._fsp--;


            }

             after(grammarAccess.getDelimitedExprAccess().getWhiledodAssignment_2_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Group_2__2__Impl"


    // $ANTLR start "rule__DelimitedExpr__Group_3__0"
    // InternalFortXTrans.g:8095:1: rule__DelimitedExpr__Group_3__0 : rule__DelimitedExpr__Group_3__0__Impl rule__DelimitedExpr__Group_3__1 ;
    public final void rule__DelimitedExpr__Group_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8099:1: ( rule__DelimitedExpr__Group_3__0__Impl rule__DelimitedExpr__Group_3__1 )
            // InternalFortXTrans.g:8100:2: rule__DelimitedExpr__Group_3__0__Impl rule__DelimitedExpr__Group_3__1
            {
            pushFollow(FOLLOW_60);
            rule__DelimitedExpr__Group_3__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DelimitedExpr__Group_3__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Group_3__0"


    // $ANTLR start "rule__DelimitedExpr__Group_3__0__Impl"
    // InternalFortXTrans.g:8107:1: rule__DelimitedExpr__Group_3__0__Impl : ( ( rule__DelimitedExpr__AforAssignment_3_0 ) ) ;
    public final void rule__DelimitedExpr__Group_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8111:1: ( ( ( rule__DelimitedExpr__AforAssignment_3_0 ) ) )
            // InternalFortXTrans.g:8112:1: ( ( rule__DelimitedExpr__AforAssignment_3_0 ) )
            {
            // InternalFortXTrans.g:8112:1: ( ( rule__DelimitedExpr__AforAssignment_3_0 ) )
            // InternalFortXTrans.g:8113:2: ( rule__DelimitedExpr__AforAssignment_3_0 )
            {
             before(grammarAccess.getDelimitedExprAccess().getAforAssignment_3_0()); 
            // InternalFortXTrans.g:8114:2: ( rule__DelimitedExpr__AforAssignment_3_0 )
            // InternalFortXTrans.g:8114:3: rule__DelimitedExpr__AforAssignment_3_0
            {
            pushFollow(FOLLOW_2);
            rule__DelimitedExpr__AforAssignment_3_0();

            state._fsp--;


            }

             after(grammarAccess.getDelimitedExprAccess().getAforAssignment_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Group_3__0__Impl"


    // $ANTLR start "rule__DelimitedExpr__Group_3__1"
    // InternalFortXTrans.g:8122:1: rule__DelimitedExpr__Group_3__1 : rule__DelimitedExpr__Group_3__1__Impl rule__DelimitedExpr__Group_3__2 ;
    public final void rule__DelimitedExpr__Group_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8126:1: ( rule__DelimitedExpr__Group_3__1__Impl rule__DelimitedExpr__Group_3__2 )
            // InternalFortXTrans.g:8127:2: rule__DelimitedExpr__Group_3__1__Impl rule__DelimitedExpr__Group_3__2
            {
            pushFollow(FOLLOW_65);
            rule__DelimitedExpr__Group_3__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DelimitedExpr__Group_3__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Group_3__1"


    // $ANTLR start "rule__DelimitedExpr__Group_3__1__Impl"
    // InternalFortXTrans.g:8134:1: rule__DelimitedExpr__Group_3__1__Impl : ( ( rule__DelimitedExpr__GenAssignment_3_1 ) ) ;
    public final void rule__DelimitedExpr__Group_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8138:1: ( ( ( rule__DelimitedExpr__GenAssignment_3_1 ) ) )
            // InternalFortXTrans.g:8139:1: ( ( rule__DelimitedExpr__GenAssignment_3_1 ) )
            {
            // InternalFortXTrans.g:8139:1: ( ( rule__DelimitedExpr__GenAssignment_3_1 ) )
            // InternalFortXTrans.g:8140:2: ( rule__DelimitedExpr__GenAssignment_3_1 )
            {
             before(grammarAccess.getDelimitedExprAccess().getGenAssignment_3_1()); 
            // InternalFortXTrans.g:8141:2: ( rule__DelimitedExpr__GenAssignment_3_1 )
            // InternalFortXTrans.g:8141:3: rule__DelimitedExpr__GenAssignment_3_1
            {
            pushFollow(FOLLOW_2);
            rule__DelimitedExpr__GenAssignment_3_1();

            state._fsp--;


            }

             after(grammarAccess.getDelimitedExprAccess().getGenAssignment_3_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Group_3__1__Impl"


    // $ANTLR start "rule__DelimitedExpr__Group_3__2"
    // InternalFortXTrans.g:8149:1: rule__DelimitedExpr__Group_3__2 : rule__DelimitedExpr__Group_3__2__Impl rule__DelimitedExpr__Group_3__3 ;
    public final void rule__DelimitedExpr__Group_3__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8153:1: ( rule__DelimitedExpr__Group_3__2__Impl rule__DelimitedExpr__Group_3__3 )
            // InternalFortXTrans.g:8154:2: rule__DelimitedExpr__Group_3__2__Impl rule__DelimitedExpr__Group_3__3
            {
            pushFollow(FOLLOW_66);
            rule__DelimitedExpr__Group_3__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DelimitedExpr__Group_3__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Group_3__2"


    // $ANTLR start "rule__DelimitedExpr__Group_3__2__Impl"
    // InternalFortXTrans.g:8161:1: rule__DelimitedExpr__Group_3__2__Impl : ( ( rule__DelimitedExpr__DofrontAssignment_3_2 ) ) ;
    public final void rule__DelimitedExpr__Group_3__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8165:1: ( ( ( rule__DelimitedExpr__DofrontAssignment_3_2 ) ) )
            // InternalFortXTrans.g:8166:1: ( ( rule__DelimitedExpr__DofrontAssignment_3_2 ) )
            {
            // InternalFortXTrans.g:8166:1: ( ( rule__DelimitedExpr__DofrontAssignment_3_2 ) )
            // InternalFortXTrans.g:8167:2: ( rule__DelimitedExpr__DofrontAssignment_3_2 )
            {
             before(grammarAccess.getDelimitedExprAccess().getDofrontAssignment_3_2()); 
            // InternalFortXTrans.g:8168:2: ( rule__DelimitedExpr__DofrontAssignment_3_2 )
            // InternalFortXTrans.g:8168:3: rule__DelimitedExpr__DofrontAssignment_3_2
            {
            pushFollow(FOLLOW_2);
            rule__DelimitedExpr__DofrontAssignment_3_2();

            state._fsp--;


            }

             after(grammarAccess.getDelimitedExprAccess().getDofrontAssignment_3_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Group_3__2__Impl"


    // $ANTLR start "rule__DelimitedExpr__Group_3__3"
    // InternalFortXTrans.g:8176:1: rule__DelimitedExpr__Group_3__3 : rule__DelimitedExpr__Group_3__3__Impl ;
    public final void rule__DelimitedExpr__Group_3__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8180:1: ( rule__DelimitedExpr__Group_3__3__Impl )
            // InternalFortXTrans.g:8181:2: rule__DelimitedExpr__Group_3__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__DelimitedExpr__Group_3__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Group_3__3"


    // $ANTLR start "rule__DelimitedExpr__Group_3__3__Impl"
    // InternalFortXTrans.g:8187:1: rule__DelimitedExpr__Group_3__3__Impl : ( 'end' ) ;
    public final void rule__DelimitedExpr__Group_3__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8191:1: ( ( 'end' ) )
            // InternalFortXTrans.g:8192:1: ( 'end' )
            {
            // InternalFortXTrans.g:8192:1: ( 'end' )
            // InternalFortXTrans.g:8193:2: 'end'
            {
             before(grammarAccess.getDelimitedExprAccess().getEndKeyword_3_3()); 
            match(input,26,FOLLOW_2); 
             after(grammarAccess.getDelimitedExprAccess().getEndKeyword_3_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Group_3__3__Impl"


    // $ANTLR start "rule__DelimitedExpr__Group_4__0"
    // InternalFortXTrans.g:8203:1: rule__DelimitedExpr__Group_4__0 : rule__DelimitedExpr__Group_4__0__Impl rule__DelimitedExpr__Group_4__1 ;
    public final void rule__DelimitedExpr__Group_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8207:1: ( rule__DelimitedExpr__Group_4__0__Impl rule__DelimitedExpr__Group_4__1 )
            // InternalFortXTrans.g:8208:2: rule__DelimitedExpr__Group_4__0__Impl rule__DelimitedExpr__Group_4__1
            {
            pushFollow(FOLLOW_32);
            rule__DelimitedExpr__Group_4__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DelimitedExpr__Group_4__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Group_4__0"


    // $ANTLR start "rule__DelimitedExpr__Group_4__0__Impl"
    // InternalFortXTrans.g:8215:1: rule__DelimitedExpr__Group_4__0__Impl : ( ( rule__DelimitedExpr__AnifAssignment_4_0 ) ) ;
    public final void rule__DelimitedExpr__Group_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8219:1: ( ( ( rule__DelimitedExpr__AnifAssignment_4_0 ) ) )
            // InternalFortXTrans.g:8220:1: ( ( rule__DelimitedExpr__AnifAssignment_4_0 ) )
            {
            // InternalFortXTrans.g:8220:1: ( ( rule__DelimitedExpr__AnifAssignment_4_0 ) )
            // InternalFortXTrans.g:8221:2: ( rule__DelimitedExpr__AnifAssignment_4_0 )
            {
             before(grammarAccess.getDelimitedExprAccess().getAnifAssignment_4_0()); 
            // InternalFortXTrans.g:8222:2: ( rule__DelimitedExpr__AnifAssignment_4_0 )
            // InternalFortXTrans.g:8222:3: rule__DelimitedExpr__AnifAssignment_4_0
            {
            pushFollow(FOLLOW_2);
            rule__DelimitedExpr__AnifAssignment_4_0();

            state._fsp--;


            }

             after(grammarAccess.getDelimitedExprAccess().getAnifAssignment_4_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Group_4__0__Impl"


    // $ANTLR start "rule__DelimitedExpr__Group_4__1"
    // InternalFortXTrans.g:8230:1: rule__DelimitedExpr__Group_4__1 : rule__DelimitedExpr__Group_4__1__Impl rule__DelimitedExpr__Group_4__2 ;
    public final void rule__DelimitedExpr__Group_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8234:1: ( rule__DelimitedExpr__Group_4__1__Impl rule__DelimitedExpr__Group_4__2 )
            // InternalFortXTrans.g:8235:2: rule__DelimitedExpr__Group_4__1__Impl rule__DelimitedExpr__Group_4__2
            {
            pushFollow(FOLLOW_67);
            rule__DelimitedExpr__Group_4__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DelimitedExpr__Group_4__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Group_4__1"


    // $ANTLR start "rule__DelimitedExpr__Group_4__1__Impl"
    // InternalFortXTrans.g:8242:1: rule__DelimitedExpr__Group_4__1__Impl : ( ( rule__DelimitedExpr__CondAssignment_4_1 ) ) ;
    public final void rule__DelimitedExpr__Group_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8246:1: ( ( ( rule__DelimitedExpr__CondAssignment_4_1 ) ) )
            // InternalFortXTrans.g:8247:1: ( ( rule__DelimitedExpr__CondAssignment_4_1 ) )
            {
            // InternalFortXTrans.g:8247:1: ( ( rule__DelimitedExpr__CondAssignment_4_1 ) )
            // InternalFortXTrans.g:8248:2: ( rule__DelimitedExpr__CondAssignment_4_1 )
            {
             before(grammarAccess.getDelimitedExprAccess().getCondAssignment_4_1()); 
            // InternalFortXTrans.g:8249:2: ( rule__DelimitedExpr__CondAssignment_4_1 )
            // InternalFortXTrans.g:8249:3: rule__DelimitedExpr__CondAssignment_4_1
            {
            pushFollow(FOLLOW_2);
            rule__DelimitedExpr__CondAssignment_4_1();

            state._fsp--;


            }

             after(grammarAccess.getDelimitedExprAccess().getCondAssignment_4_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Group_4__1__Impl"


    // $ANTLR start "rule__DelimitedExpr__Group_4__2"
    // InternalFortXTrans.g:8257:1: rule__DelimitedExpr__Group_4__2 : rule__DelimitedExpr__Group_4__2__Impl rule__DelimitedExpr__Group_4__3 ;
    public final void rule__DelimitedExpr__Group_4__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8261:1: ( rule__DelimitedExpr__Group_4__2__Impl rule__DelimitedExpr__Group_4__3 )
            // InternalFortXTrans.g:8262:2: rule__DelimitedExpr__Group_4__2__Impl rule__DelimitedExpr__Group_4__3
            {
            pushFollow(FOLLOW_32);
            rule__DelimitedExpr__Group_4__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DelimitedExpr__Group_4__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Group_4__2"


    // $ANTLR start "rule__DelimitedExpr__Group_4__2__Impl"
    // InternalFortXTrans.g:8269:1: rule__DelimitedExpr__Group_4__2__Impl : ( 'then' ) ;
    public final void rule__DelimitedExpr__Group_4__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8273:1: ( ( 'then' ) )
            // InternalFortXTrans.g:8274:1: ( 'then' )
            {
            // InternalFortXTrans.g:8274:1: ( 'then' )
            // InternalFortXTrans.g:8275:2: 'then'
            {
             before(grammarAccess.getDelimitedExprAccess().getThenKeyword_4_2()); 
            match(input,51,FOLLOW_2); 
             after(grammarAccess.getDelimitedExprAccess().getThenKeyword_4_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Group_4__2__Impl"


    // $ANTLR start "rule__DelimitedExpr__Group_4__3"
    // InternalFortXTrans.g:8284:1: rule__DelimitedExpr__Group_4__3 : rule__DelimitedExpr__Group_4__3__Impl rule__DelimitedExpr__Group_4__4 ;
    public final void rule__DelimitedExpr__Group_4__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8288:1: ( rule__DelimitedExpr__Group_4__3__Impl rule__DelimitedExpr__Group_4__4 )
            // InternalFortXTrans.g:8289:2: rule__DelimitedExpr__Group_4__3__Impl rule__DelimitedExpr__Group_4__4
            {
            pushFollow(FOLLOW_68);
            rule__DelimitedExpr__Group_4__3__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DelimitedExpr__Group_4__4();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Group_4__3"


    // $ANTLR start "rule__DelimitedExpr__Group_4__3__Impl"
    // InternalFortXTrans.g:8296:1: rule__DelimitedExpr__Group_4__3__Impl : ( ( rule__DelimitedExpr__BlocksAssignment_4_3 ) ) ;
    public final void rule__DelimitedExpr__Group_4__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8300:1: ( ( ( rule__DelimitedExpr__BlocksAssignment_4_3 ) ) )
            // InternalFortXTrans.g:8301:1: ( ( rule__DelimitedExpr__BlocksAssignment_4_3 ) )
            {
            // InternalFortXTrans.g:8301:1: ( ( rule__DelimitedExpr__BlocksAssignment_4_3 ) )
            // InternalFortXTrans.g:8302:2: ( rule__DelimitedExpr__BlocksAssignment_4_3 )
            {
             before(grammarAccess.getDelimitedExprAccess().getBlocksAssignment_4_3()); 
            // InternalFortXTrans.g:8303:2: ( rule__DelimitedExpr__BlocksAssignment_4_3 )
            // InternalFortXTrans.g:8303:3: rule__DelimitedExpr__BlocksAssignment_4_3
            {
            pushFollow(FOLLOW_2);
            rule__DelimitedExpr__BlocksAssignment_4_3();

            state._fsp--;


            }

             after(grammarAccess.getDelimitedExprAccess().getBlocksAssignment_4_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Group_4__3__Impl"


    // $ANTLR start "rule__DelimitedExpr__Group_4__4"
    // InternalFortXTrans.g:8311:1: rule__DelimitedExpr__Group_4__4 : rule__DelimitedExpr__Group_4__4__Impl rule__DelimitedExpr__Group_4__5 ;
    public final void rule__DelimitedExpr__Group_4__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8315:1: ( rule__DelimitedExpr__Group_4__4__Impl rule__DelimitedExpr__Group_4__5 )
            // InternalFortXTrans.g:8316:2: rule__DelimitedExpr__Group_4__4__Impl rule__DelimitedExpr__Group_4__5
            {
            pushFollow(FOLLOW_68);
            rule__DelimitedExpr__Group_4__4__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DelimitedExpr__Group_4__5();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Group_4__4"


    // $ANTLR start "rule__DelimitedExpr__Group_4__4__Impl"
    // InternalFortXTrans.g:8323:1: rule__DelimitedExpr__Group_4__4__Impl : ( ( rule__DelimitedExpr__ElifsAssignment_4_4 )? ) ;
    public final void rule__DelimitedExpr__Group_4__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8327:1: ( ( ( rule__DelimitedExpr__ElifsAssignment_4_4 )? ) )
            // InternalFortXTrans.g:8328:1: ( ( rule__DelimitedExpr__ElifsAssignment_4_4 )? )
            {
            // InternalFortXTrans.g:8328:1: ( ( rule__DelimitedExpr__ElifsAssignment_4_4 )? )
            // InternalFortXTrans.g:8329:2: ( rule__DelimitedExpr__ElifsAssignment_4_4 )?
            {
             before(grammarAccess.getDelimitedExprAccess().getElifsAssignment_4_4()); 
            // InternalFortXTrans.g:8330:2: ( rule__DelimitedExpr__ElifsAssignment_4_4 )?
            int alt73=2;
            int LA73_0 = input.LA(1);

            if ( (LA73_0==52) ) {
                alt73=1;
            }
            switch (alt73) {
                case 1 :
                    // InternalFortXTrans.g:8330:3: rule__DelimitedExpr__ElifsAssignment_4_4
                    {
                    pushFollow(FOLLOW_2);
                    rule__DelimitedExpr__ElifsAssignment_4_4();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getDelimitedExprAccess().getElifsAssignment_4_4()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Group_4__4__Impl"


    // $ANTLR start "rule__DelimitedExpr__Group_4__5"
    // InternalFortXTrans.g:8338:1: rule__DelimitedExpr__Group_4__5 : rule__DelimitedExpr__Group_4__5__Impl rule__DelimitedExpr__Group_4__6 ;
    public final void rule__DelimitedExpr__Group_4__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8342:1: ( rule__DelimitedExpr__Group_4__5__Impl rule__DelimitedExpr__Group_4__6 )
            // InternalFortXTrans.g:8343:2: rule__DelimitedExpr__Group_4__5__Impl rule__DelimitedExpr__Group_4__6
            {
            pushFollow(FOLLOW_68);
            rule__DelimitedExpr__Group_4__5__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DelimitedExpr__Group_4__6();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Group_4__5"


    // $ANTLR start "rule__DelimitedExpr__Group_4__5__Impl"
    // InternalFortXTrans.g:8350:1: rule__DelimitedExpr__Group_4__5__Impl : ( ( rule__DelimitedExpr__ElsAssignment_4_5 )? ) ;
    public final void rule__DelimitedExpr__Group_4__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8354:1: ( ( ( rule__DelimitedExpr__ElsAssignment_4_5 )? ) )
            // InternalFortXTrans.g:8355:1: ( ( rule__DelimitedExpr__ElsAssignment_4_5 )? )
            {
            // InternalFortXTrans.g:8355:1: ( ( rule__DelimitedExpr__ElsAssignment_4_5 )? )
            // InternalFortXTrans.g:8356:2: ( rule__DelimitedExpr__ElsAssignment_4_5 )?
            {
             before(grammarAccess.getDelimitedExprAccess().getElsAssignment_4_5()); 
            // InternalFortXTrans.g:8357:2: ( rule__DelimitedExpr__ElsAssignment_4_5 )?
            int alt74=2;
            int LA74_0 = input.LA(1);

            if ( (LA74_0==53) ) {
                alt74=1;
            }
            switch (alt74) {
                case 1 :
                    // InternalFortXTrans.g:8357:3: rule__DelimitedExpr__ElsAssignment_4_5
                    {
                    pushFollow(FOLLOW_2);
                    rule__DelimitedExpr__ElsAssignment_4_5();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getDelimitedExprAccess().getElsAssignment_4_5()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Group_4__5__Impl"


    // $ANTLR start "rule__DelimitedExpr__Group_4__6"
    // InternalFortXTrans.g:8365:1: rule__DelimitedExpr__Group_4__6 : rule__DelimitedExpr__Group_4__6__Impl ;
    public final void rule__DelimitedExpr__Group_4__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8369:1: ( rule__DelimitedExpr__Group_4__6__Impl )
            // InternalFortXTrans.g:8370:2: rule__DelimitedExpr__Group_4__6__Impl
            {
            pushFollow(FOLLOW_2);
            rule__DelimitedExpr__Group_4__6__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Group_4__6"


    // $ANTLR start "rule__DelimitedExpr__Group_4__6__Impl"
    // InternalFortXTrans.g:8376:1: rule__DelimitedExpr__Group_4__6__Impl : ( 'end' ) ;
    public final void rule__DelimitedExpr__Group_4__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8380:1: ( ( 'end' ) )
            // InternalFortXTrans.g:8381:1: ( 'end' )
            {
            // InternalFortXTrans.g:8381:1: ( 'end' )
            // InternalFortXTrans.g:8382:2: 'end'
            {
             before(grammarAccess.getDelimitedExprAccess().getEndKeyword_4_6()); 
            match(input,26,FOLLOW_2); 
             after(grammarAccess.getDelimitedExprAccess().getEndKeyword_4_6()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Group_4__6__Impl"


    // $ANTLR start "rule__Elifs__Group__0"
    // InternalFortXTrans.g:8392:1: rule__Elifs__Group__0 : rule__Elifs__Group__0__Impl rule__Elifs__Group__1 ;
    public final void rule__Elifs__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8396:1: ( rule__Elifs__Group__0__Impl rule__Elifs__Group__1 )
            // InternalFortXTrans.g:8397:2: rule__Elifs__Group__0__Impl rule__Elifs__Group__1
            {
            pushFollow(FOLLOW_69);
            rule__Elifs__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Elifs__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Elifs__Group__0"


    // $ANTLR start "rule__Elifs__Group__0__Impl"
    // InternalFortXTrans.g:8404:1: rule__Elifs__Group__0__Impl : ( ( rule__Elifs__EAssignment_0 ) ) ;
    public final void rule__Elifs__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8408:1: ( ( ( rule__Elifs__EAssignment_0 ) ) )
            // InternalFortXTrans.g:8409:1: ( ( rule__Elifs__EAssignment_0 ) )
            {
            // InternalFortXTrans.g:8409:1: ( ( rule__Elifs__EAssignment_0 ) )
            // InternalFortXTrans.g:8410:2: ( rule__Elifs__EAssignment_0 )
            {
             before(grammarAccess.getElifsAccess().getEAssignment_0()); 
            // InternalFortXTrans.g:8411:2: ( rule__Elifs__EAssignment_0 )
            // InternalFortXTrans.g:8411:3: rule__Elifs__EAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__Elifs__EAssignment_0();

            state._fsp--;


            }

             after(grammarAccess.getElifsAccess().getEAssignment_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Elifs__Group__0__Impl"


    // $ANTLR start "rule__Elifs__Group__1"
    // InternalFortXTrans.g:8419:1: rule__Elifs__Group__1 : rule__Elifs__Group__1__Impl ;
    public final void rule__Elifs__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8423:1: ( rule__Elifs__Group__1__Impl )
            // InternalFortXTrans.g:8424:2: rule__Elifs__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Elifs__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Elifs__Group__1"


    // $ANTLR start "rule__Elifs__Group__1__Impl"
    // InternalFortXTrans.g:8430:1: rule__Elifs__Group__1__Impl : ( ( rule__Elifs__EAssignment_1 )* ) ;
    public final void rule__Elifs__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8434:1: ( ( ( rule__Elifs__EAssignment_1 )* ) )
            // InternalFortXTrans.g:8435:1: ( ( rule__Elifs__EAssignment_1 )* )
            {
            // InternalFortXTrans.g:8435:1: ( ( rule__Elifs__EAssignment_1 )* )
            // InternalFortXTrans.g:8436:2: ( rule__Elifs__EAssignment_1 )*
            {
             before(grammarAccess.getElifsAccess().getEAssignment_1()); 
            // InternalFortXTrans.g:8437:2: ( rule__Elifs__EAssignment_1 )*
            loop75:
            do {
                int alt75=2;
                int LA75_0 = input.LA(1);

                if ( (LA75_0==52) ) {
                    alt75=1;
                }


                switch (alt75) {
            	case 1 :
            	    // InternalFortXTrans.g:8437:3: rule__Elifs__EAssignment_1
            	    {
            	    pushFollow(FOLLOW_70);
            	    rule__Elifs__EAssignment_1();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop75;
                }
            } while (true);

             after(grammarAccess.getElifsAccess().getEAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Elifs__Group__1__Impl"


    // $ANTLR start "rule__Elif__Group__0"
    // InternalFortXTrans.g:8446:1: rule__Elif__Group__0 : rule__Elif__Group__0__Impl rule__Elif__Group__1 ;
    public final void rule__Elif__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8450:1: ( rule__Elif__Group__0__Impl rule__Elif__Group__1 )
            // InternalFortXTrans.g:8451:2: rule__Elif__Group__0__Impl rule__Elif__Group__1
            {
            pushFollow(FOLLOW_32);
            rule__Elif__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Elif__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Elif__Group__0"


    // $ANTLR start "rule__Elif__Group__0__Impl"
    // InternalFortXTrans.g:8458:1: rule__Elif__Group__0__Impl : ( 'elif' ) ;
    public final void rule__Elif__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8462:1: ( ( 'elif' ) )
            // InternalFortXTrans.g:8463:1: ( 'elif' )
            {
            // InternalFortXTrans.g:8463:1: ( 'elif' )
            // InternalFortXTrans.g:8464:2: 'elif'
            {
             before(grammarAccess.getElifAccess().getElifKeyword_0()); 
            match(input,52,FOLLOW_2); 
             after(grammarAccess.getElifAccess().getElifKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Elif__Group__0__Impl"


    // $ANTLR start "rule__Elif__Group__1"
    // InternalFortXTrans.g:8473:1: rule__Elif__Group__1 : rule__Elif__Group__1__Impl rule__Elif__Group__2 ;
    public final void rule__Elif__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8477:1: ( rule__Elif__Group__1__Impl rule__Elif__Group__2 )
            // InternalFortXTrans.g:8478:2: rule__Elif__Group__1__Impl rule__Elif__Group__2
            {
            pushFollow(FOLLOW_67);
            rule__Elif__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Elif__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Elif__Group__1"


    // $ANTLR start "rule__Elif__Group__1__Impl"
    // InternalFortXTrans.g:8485:1: rule__Elif__Group__1__Impl : ( ( rule__Elif__ExprAssignment_1 ) ) ;
    public final void rule__Elif__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8489:1: ( ( ( rule__Elif__ExprAssignment_1 ) ) )
            // InternalFortXTrans.g:8490:1: ( ( rule__Elif__ExprAssignment_1 ) )
            {
            // InternalFortXTrans.g:8490:1: ( ( rule__Elif__ExprAssignment_1 ) )
            // InternalFortXTrans.g:8491:2: ( rule__Elif__ExprAssignment_1 )
            {
             before(grammarAccess.getElifAccess().getExprAssignment_1()); 
            // InternalFortXTrans.g:8492:2: ( rule__Elif__ExprAssignment_1 )
            // InternalFortXTrans.g:8492:3: rule__Elif__ExprAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__Elif__ExprAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getElifAccess().getExprAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Elif__Group__1__Impl"


    // $ANTLR start "rule__Elif__Group__2"
    // InternalFortXTrans.g:8500:1: rule__Elif__Group__2 : rule__Elif__Group__2__Impl rule__Elif__Group__3 ;
    public final void rule__Elif__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8504:1: ( rule__Elif__Group__2__Impl rule__Elif__Group__3 )
            // InternalFortXTrans.g:8505:2: rule__Elif__Group__2__Impl rule__Elif__Group__3
            {
            pushFollow(FOLLOW_32);
            rule__Elif__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Elif__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Elif__Group__2"


    // $ANTLR start "rule__Elif__Group__2__Impl"
    // InternalFortXTrans.g:8512:1: rule__Elif__Group__2__Impl : ( 'then' ) ;
    public final void rule__Elif__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8516:1: ( ( 'then' ) )
            // InternalFortXTrans.g:8517:1: ( 'then' )
            {
            // InternalFortXTrans.g:8517:1: ( 'then' )
            // InternalFortXTrans.g:8518:2: 'then'
            {
             before(grammarAccess.getElifAccess().getThenKeyword_2()); 
            match(input,51,FOLLOW_2); 
             after(grammarAccess.getElifAccess().getThenKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Elif__Group__2__Impl"


    // $ANTLR start "rule__Elif__Group__3"
    // InternalFortXTrans.g:8527:1: rule__Elif__Group__3 : rule__Elif__Group__3__Impl ;
    public final void rule__Elif__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8531:1: ( rule__Elif__Group__3__Impl )
            // InternalFortXTrans.g:8532:2: rule__Elif__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Elif__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Elif__Group__3"


    // $ANTLR start "rule__Elif__Group__3__Impl"
    // InternalFortXTrans.g:8538:1: rule__Elif__Group__3__Impl : ( ( rule__Elif__BlockAssignment_3 ) ) ;
    public final void rule__Elif__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8542:1: ( ( ( rule__Elif__BlockAssignment_3 ) ) )
            // InternalFortXTrans.g:8543:1: ( ( rule__Elif__BlockAssignment_3 ) )
            {
            // InternalFortXTrans.g:8543:1: ( ( rule__Elif__BlockAssignment_3 ) )
            // InternalFortXTrans.g:8544:2: ( rule__Elif__BlockAssignment_3 )
            {
             before(grammarAccess.getElifAccess().getBlockAssignment_3()); 
            // InternalFortXTrans.g:8545:2: ( rule__Elif__BlockAssignment_3 )
            // InternalFortXTrans.g:8545:3: rule__Elif__BlockAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__Elif__BlockAssignment_3();

            state._fsp--;


            }

             after(grammarAccess.getElifAccess().getBlockAssignment_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Elif__Group__3__Impl"


    // $ANTLR start "rule__Else__Group__0"
    // InternalFortXTrans.g:8554:1: rule__Else__Group__0 : rule__Else__Group__0__Impl rule__Else__Group__1 ;
    public final void rule__Else__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8558:1: ( rule__Else__Group__0__Impl rule__Else__Group__1 )
            // InternalFortXTrans.g:8559:2: rule__Else__Group__0__Impl rule__Else__Group__1
            {
            pushFollow(FOLLOW_32);
            rule__Else__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Else__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Else__Group__0"


    // $ANTLR start "rule__Else__Group__0__Impl"
    // InternalFortXTrans.g:8566:1: rule__Else__Group__0__Impl : ( 'else' ) ;
    public final void rule__Else__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8570:1: ( ( 'else' ) )
            // InternalFortXTrans.g:8571:1: ( 'else' )
            {
            // InternalFortXTrans.g:8571:1: ( 'else' )
            // InternalFortXTrans.g:8572:2: 'else'
            {
             before(grammarAccess.getElseAccess().getElseKeyword_0()); 
            match(input,53,FOLLOW_2); 
             after(grammarAccess.getElseAccess().getElseKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Else__Group__0__Impl"


    // $ANTLR start "rule__Else__Group__1"
    // InternalFortXTrans.g:8581:1: rule__Else__Group__1 : rule__Else__Group__1__Impl ;
    public final void rule__Else__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8585:1: ( rule__Else__Group__1__Impl )
            // InternalFortXTrans.g:8586:2: rule__Else__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Else__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Else__Group__1"


    // $ANTLR start "rule__Else__Group__1__Impl"
    // InternalFortXTrans.g:8592:1: rule__Else__Group__1__Impl : ( ( rule__Else__BlockAssignment_1 ) ) ;
    public final void rule__Else__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8596:1: ( ( ( rule__Else__BlockAssignment_1 ) ) )
            // InternalFortXTrans.g:8597:1: ( ( rule__Else__BlockAssignment_1 ) )
            {
            // InternalFortXTrans.g:8597:1: ( ( rule__Else__BlockAssignment_1 ) )
            // InternalFortXTrans.g:8598:2: ( rule__Else__BlockAssignment_1 )
            {
             before(grammarAccess.getElseAccess().getBlockAssignment_1()); 
            // InternalFortXTrans.g:8599:2: ( rule__Else__BlockAssignment_1 )
            // InternalFortXTrans.g:8599:3: rule__Else__BlockAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__Else__BlockAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getElseAccess().getBlockAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Else__Group__1__Impl"


    // $ANTLR start "rule__Generators__Group__0"
    // InternalFortXTrans.g:8608:1: rule__Generators__Group__0 : rule__Generators__Group__0__Impl rule__Generators__Group__1 ;
    public final void rule__Generators__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8612:1: ( rule__Generators__Group__0__Impl rule__Generators__Group__1 )
            // InternalFortXTrans.g:8613:2: rule__Generators__Group__0__Impl rule__Generators__Group__1
            {
            pushFollow(FOLLOW_24);
            rule__Generators__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Generators__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Generators__Group__0"


    // $ANTLR start "rule__Generators__Group__0__Impl"
    // InternalFortXTrans.g:8620:1: rule__Generators__Group__0__Impl : ( ( rule__Generators__BindingAssignment_0 ) ) ;
    public final void rule__Generators__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8624:1: ( ( ( rule__Generators__BindingAssignment_0 ) ) )
            // InternalFortXTrans.g:8625:1: ( ( rule__Generators__BindingAssignment_0 ) )
            {
            // InternalFortXTrans.g:8625:1: ( ( rule__Generators__BindingAssignment_0 ) )
            // InternalFortXTrans.g:8626:2: ( rule__Generators__BindingAssignment_0 )
            {
             before(grammarAccess.getGeneratorsAccess().getBindingAssignment_0()); 
            // InternalFortXTrans.g:8627:2: ( rule__Generators__BindingAssignment_0 )
            // InternalFortXTrans.g:8627:3: rule__Generators__BindingAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__Generators__BindingAssignment_0();

            state._fsp--;


            }

             after(grammarAccess.getGeneratorsAccess().getBindingAssignment_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Generators__Group__0__Impl"


    // $ANTLR start "rule__Generators__Group__1"
    // InternalFortXTrans.g:8635:1: rule__Generators__Group__1 : rule__Generators__Group__1__Impl ;
    public final void rule__Generators__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8639:1: ( rule__Generators__Group__1__Impl )
            // InternalFortXTrans.g:8640:2: rule__Generators__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Generators__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Generators__Group__1"


    // $ANTLR start "rule__Generators__Group__1__Impl"
    // InternalFortXTrans.g:8646:1: rule__Generators__Group__1__Impl : ( ( rule__Generators__Group_1__0 )* ) ;
    public final void rule__Generators__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8650:1: ( ( ( rule__Generators__Group_1__0 )* ) )
            // InternalFortXTrans.g:8651:1: ( ( rule__Generators__Group_1__0 )* )
            {
            // InternalFortXTrans.g:8651:1: ( ( rule__Generators__Group_1__0 )* )
            // InternalFortXTrans.g:8652:2: ( rule__Generators__Group_1__0 )*
            {
             before(grammarAccess.getGeneratorsAccess().getGroup_1()); 
            // InternalFortXTrans.g:8653:2: ( rule__Generators__Group_1__0 )*
            loop76:
            do {
                int alt76=2;
                int LA76_0 = input.LA(1);

                if ( (LA76_0==29) ) {
                    alt76=1;
                }


                switch (alt76) {
            	case 1 :
            	    // InternalFortXTrans.g:8653:3: rule__Generators__Group_1__0
            	    {
            	    pushFollow(FOLLOW_15);
            	    rule__Generators__Group_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop76;
                }
            } while (true);

             after(grammarAccess.getGeneratorsAccess().getGroup_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Generators__Group__1__Impl"


    // $ANTLR start "rule__Generators__Group_1__0"
    // InternalFortXTrans.g:8662:1: rule__Generators__Group_1__0 : rule__Generators__Group_1__0__Impl rule__Generators__Group_1__1 ;
    public final void rule__Generators__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8666:1: ( rule__Generators__Group_1__0__Impl rule__Generators__Group_1__1 )
            // InternalFortXTrans.g:8667:2: rule__Generators__Group_1__0__Impl rule__Generators__Group_1__1
            {
            pushFollow(FOLLOW_32);
            rule__Generators__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Generators__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Generators__Group_1__0"


    // $ANTLR start "rule__Generators__Group_1__0__Impl"
    // InternalFortXTrans.g:8674:1: rule__Generators__Group_1__0__Impl : ( ',' ) ;
    public final void rule__Generators__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8678:1: ( ( ',' ) )
            // InternalFortXTrans.g:8679:1: ( ',' )
            {
            // InternalFortXTrans.g:8679:1: ( ',' )
            // InternalFortXTrans.g:8680:2: ','
            {
             before(grammarAccess.getGeneratorsAccess().getCommaKeyword_1_0()); 
            match(input,29,FOLLOW_2); 
             after(grammarAccess.getGeneratorsAccess().getCommaKeyword_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Generators__Group_1__0__Impl"


    // $ANTLR start "rule__Generators__Group_1__1"
    // InternalFortXTrans.g:8689:1: rule__Generators__Group_1__1 : rule__Generators__Group_1__1__Impl ;
    public final void rule__Generators__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8693:1: ( rule__Generators__Group_1__1__Impl )
            // InternalFortXTrans.g:8694:2: rule__Generators__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Generators__Group_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Generators__Group_1__1"


    // $ANTLR start "rule__Generators__Group_1__1__Impl"
    // InternalFortXTrans.g:8700:1: rule__Generators__Group_1__1__Impl : ( ( rule__Generators__ClauseAssignment_1_1 ) ) ;
    public final void rule__Generators__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8704:1: ( ( ( rule__Generators__ClauseAssignment_1_1 ) ) )
            // InternalFortXTrans.g:8705:1: ( ( rule__Generators__ClauseAssignment_1_1 ) )
            {
            // InternalFortXTrans.g:8705:1: ( ( rule__Generators__ClauseAssignment_1_1 ) )
            // InternalFortXTrans.g:8706:2: ( rule__Generators__ClauseAssignment_1_1 )
            {
             before(grammarAccess.getGeneratorsAccess().getClauseAssignment_1_1()); 
            // InternalFortXTrans.g:8707:2: ( rule__Generators__ClauseAssignment_1_1 )
            // InternalFortXTrans.g:8707:3: rule__Generators__ClauseAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Generators__ClauseAssignment_1_1();

            state._fsp--;


            }

             after(grammarAccess.getGeneratorsAccess().getClauseAssignment_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Generators__Group_1__1__Impl"


    // $ANTLR start "rule__Binding__Group_0__0"
    // InternalFortXTrans.g:8716:1: rule__Binding__Group_0__0 : rule__Binding__Group_0__0__Impl rule__Binding__Group_0__1 ;
    public final void rule__Binding__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8720:1: ( rule__Binding__Group_0__0__Impl rule__Binding__Group_0__1 )
            // InternalFortXTrans.g:8721:2: rule__Binding__Group_0__0__Impl rule__Binding__Group_0__1
            {
            pushFollow(FOLLOW_71);
            rule__Binding__Group_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Binding__Group_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Binding__Group_0__0"


    // $ANTLR start "rule__Binding__Group_0__0__Impl"
    // InternalFortXTrans.g:8728:1: rule__Binding__Group_0__0__Impl : ( ( rule__Binding__IdtupAssignment_0_0 ) ) ;
    public final void rule__Binding__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8732:1: ( ( ( rule__Binding__IdtupAssignment_0_0 ) ) )
            // InternalFortXTrans.g:8733:1: ( ( rule__Binding__IdtupAssignment_0_0 ) )
            {
            // InternalFortXTrans.g:8733:1: ( ( rule__Binding__IdtupAssignment_0_0 ) )
            // InternalFortXTrans.g:8734:2: ( rule__Binding__IdtupAssignment_0_0 )
            {
             before(grammarAccess.getBindingAccess().getIdtupAssignment_0_0()); 
            // InternalFortXTrans.g:8735:2: ( rule__Binding__IdtupAssignment_0_0 )
            // InternalFortXTrans.g:8735:3: rule__Binding__IdtupAssignment_0_0
            {
            pushFollow(FOLLOW_2);
            rule__Binding__IdtupAssignment_0_0();

            state._fsp--;


            }

             after(grammarAccess.getBindingAccess().getIdtupAssignment_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Binding__Group_0__0__Impl"


    // $ANTLR start "rule__Binding__Group_0__1"
    // InternalFortXTrans.g:8743:1: rule__Binding__Group_0__1 : rule__Binding__Group_0__1__Impl rule__Binding__Group_0__2 ;
    public final void rule__Binding__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8747:1: ( rule__Binding__Group_0__1__Impl rule__Binding__Group_0__2 )
            // InternalFortXTrans.g:8748:2: rule__Binding__Group_0__1__Impl rule__Binding__Group_0__2
            {
            pushFollow(FOLLOW_32);
            rule__Binding__Group_0__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Binding__Group_0__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Binding__Group_0__1"


    // $ANTLR start "rule__Binding__Group_0__1__Impl"
    // InternalFortXTrans.g:8755:1: rule__Binding__Group_0__1__Impl : ( '<-' ) ;
    public final void rule__Binding__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8759:1: ( ( '<-' ) )
            // InternalFortXTrans.g:8760:1: ( '<-' )
            {
            // InternalFortXTrans.g:8760:1: ( '<-' )
            // InternalFortXTrans.g:8761:2: '<-'
            {
             before(grammarAccess.getBindingAccess().getLessThanSignHyphenMinusKeyword_0_1()); 
            match(input,54,FOLLOW_2); 
             after(grammarAccess.getBindingAccess().getLessThanSignHyphenMinusKeyword_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Binding__Group_0__1__Impl"


    // $ANTLR start "rule__Binding__Group_0__2"
    // InternalFortXTrans.g:8770:1: rule__Binding__Group_0__2 : rule__Binding__Group_0__2__Impl ;
    public final void rule__Binding__Group_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8774:1: ( rule__Binding__Group_0__2__Impl )
            // InternalFortXTrans.g:8775:2: rule__Binding__Group_0__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Binding__Group_0__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Binding__Group_0__2"


    // $ANTLR start "rule__Binding__Group_0__2__Impl"
    // InternalFortXTrans.g:8781:1: rule__Binding__Group_0__2__Impl : ( ( rule__Binding__GAssignment_0_2 ) ) ;
    public final void rule__Binding__Group_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8785:1: ( ( ( rule__Binding__GAssignment_0_2 ) ) )
            // InternalFortXTrans.g:8786:1: ( ( rule__Binding__GAssignment_0_2 ) )
            {
            // InternalFortXTrans.g:8786:1: ( ( rule__Binding__GAssignment_0_2 ) )
            // InternalFortXTrans.g:8787:2: ( rule__Binding__GAssignment_0_2 )
            {
             before(grammarAccess.getBindingAccess().getGAssignment_0_2()); 
            // InternalFortXTrans.g:8788:2: ( rule__Binding__GAssignment_0_2 )
            // InternalFortXTrans.g:8788:3: rule__Binding__GAssignment_0_2
            {
            pushFollow(FOLLOW_2);
            rule__Binding__GAssignment_0_2();

            state._fsp--;


            }

             after(grammarAccess.getBindingAccess().getGAssignment_0_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Binding__Group_0__2__Impl"


    // $ANTLR start "rule__Binding__Group_1__0"
    // InternalFortXTrans.g:8797:1: rule__Binding__Group_1__0 : rule__Binding__Group_1__0__Impl rule__Binding__Group_1__1 ;
    public final void rule__Binding__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8801:1: ( rule__Binding__Group_1__0__Impl rule__Binding__Group_1__1 )
            // InternalFortXTrans.g:8802:2: rule__Binding__Group_1__0__Impl rule__Binding__Group_1__1
            {
            pushFollow(FOLLOW_71);
            rule__Binding__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Binding__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Binding__Group_1__0"


    // $ANTLR start "rule__Binding__Group_1__0__Impl"
    // InternalFortXTrans.g:8809:1: rule__Binding__Group_1__0__Impl : ( ( rule__Binding__IdtupAssignment_1_0 ) ) ;
    public final void rule__Binding__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8813:1: ( ( ( rule__Binding__IdtupAssignment_1_0 ) ) )
            // InternalFortXTrans.g:8814:1: ( ( rule__Binding__IdtupAssignment_1_0 ) )
            {
            // InternalFortXTrans.g:8814:1: ( ( rule__Binding__IdtupAssignment_1_0 ) )
            // InternalFortXTrans.g:8815:2: ( rule__Binding__IdtupAssignment_1_0 )
            {
             before(grammarAccess.getBindingAccess().getIdtupAssignment_1_0()); 
            // InternalFortXTrans.g:8816:2: ( rule__Binding__IdtupAssignment_1_0 )
            // InternalFortXTrans.g:8816:3: rule__Binding__IdtupAssignment_1_0
            {
            pushFollow(FOLLOW_2);
            rule__Binding__IdtupAssignment_1_0();

            state._fsp--;


            }

             after(grammarAccess.getBindingAccess().getIdtupAssignment_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Binding__Group_1__0__Impl"


    // $ANTLR start "rule__Binding__Group_1__1"
    // InternalFortXTrans.g:8824:1: rule__Binding__Group_1__1 : rule__Binding__Group_1__1__Impl rule__Binding__Group_1__2 ;
    public final void rule__Binding__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8828:1: ( rule__Binding__Group_1__1__Impl rule__Binding__Group_1__2 )
            // InternalFortXTrans.g:8829:2: rule__Binding__Group_1__1__Impl rule__Binding__Group_1__2
            {
            pushFollow(FOLLOW_72);
            rule__Binding__Group_1__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Binding__Group_1__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Binding__Group_1__1"


    // $ANTLR start "rule__Binding__Group_1__1__Impl"
    // InternalFortXTrans.g:8836:1: rule__Binding__Group_1__1__Impl : ( '<-' ) ;
    public final void rule__Binding__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8840:1: ( ( '<-' ) )
            // InternalFortXTrans.g:8841:1: ( '<-' )
            {
            // InternalFortXTrans.g:8841:1: ( '<-' )
            // InternalFortXTrans.g:8842:2: '<-'
            {
             before(grammarAccess.getBindingAccess().getLessThanSignHyphenMinusKeyword_1_1()); 
            match(input,54,FOLLOW_2); 
             after(grammarAccess.getBindingAccess().getLessThanSignHyphenMinusKeyword_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Binding__Group_1__1__Impl"


    // $ANTLR start "rule__Binding__Group_1__2"
    // InternalFortXTrans.g:8851:1: rule__Binding__Group_1__2 : rule__Binding__Group_1__2__Impl rule__Binding__Group_1__3 ;
    public final void rule__Binding__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8855:1: ( rule__Binding__Group_1__2__Impl rule__Binding__Group_1__3 )
            // InternalFortXTrans.g:8856:2: rule__Binding__Group_1__2__Impl rule__Binding__Group_1__3
            {
            pushFollow(FOLLOW_27);
            rule__Binding__Group_1__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Binding__Group_1__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Binding__Group_1__2"


    // $ANTLR start "rule__Binding__Group_1__2__Impl"
    // InternalFortXTrans.g:8863:1: rule__Binding__Group_1__2__Impl : ( ( rule__Binding__SeqAssignment_1_2 ) ) ;
    public final void rule__Binding__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8867:1: ( ( ( rule__Binding__SeqAssignment_1_2 ) ) )
            // InternalFortXTrans.g:8868:1: ( ( rule__Binding__SeqAssignment_1_2 ) )
            {
            // InternalFortXTrans.g:8868:1: ( ( rule__Binding__SeqAssignment_1_2 ) )
            // InternalFortXTrans.g:8869:2: ( rule__Binding__SeqAssignment_1_2 )
            {
             before(grammarAccess.getBindingAccess().getSeqAssignment_1_2()); 
            // InternalFortXTrans.g:8870:2: ( rule__Binding__SeqAssignment_1_2 )
            // InternalFortXTrans.g:8870:3: rule__Binding__SeqAssignment_1_2
            {
            pushFollow(FOLLOW_2);
            rule__Binding__SeqAssignment_1_2();

            state._fsp--;


            }

             after(grammarAccess.getBindingAccess().getSeqAssignment_1_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Binding__Group_1__2__Impl"


    // $ANTLR start "rule__Binding__Group_1__3"
    // InternalFortXTrans.g:8878:1: rule__Binding__Group_1__3 : rule__Binding__Group_1__3__Impl rule__Binding__Group_1__4 ;
    public final void rule__Binding__Group_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8882:1: ( rule__Binding__Group_1__3__Impl rule__Binding__Group_1__4 )
            // InternalFortXTrans.g:8883:2: rule__Binding__Group_1__3__Impl rule__Binding__Group_1__4
            {
            pushFollow(FOLLOW_32);
            rule__Binding__Group_1__3__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Binding__Group_1__4();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Binding__Group_1__3"


    // $ANTLR start "rule__Binding__Group_1__3__Impl"
    // InternalFortXTrans.g:8890:1: rule__Binding__Group_1__3__Impl : ( '(' ) ;
    public final void rule__Binding__Group_1__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8894:1: ( ( '(' ) )
            // InternalFortXTrans.g:8895:1: ( '(' )
            {
            // InternalFortXTrans.g:8895:1: ( '(' )
            // InternalFortXTrans.g:8896:2: '('
            {
             before(grammarAccess.getBindingAccess().getLeftParenthesisKeyword_1_3()); 
            match(input,33,FOLLOW_2); 
             after(grammarAccess.getBindingAccess().getLeftParenthesisKeyword_1_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Binding__Group_1__3__Impl"


    // $ANTLR start "rule__Binding__Group_1__4"
    // InternalFortXTrans.g:8905:1: rule__Binding__Group_1__4 : rule__Binding__Group_1__4__Impl rule__Binding__Group_1__5 ;
    public final void rule__Binding__Group_1__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8909:1: ( rule__Binding__Group_1__4__Impl rule__Binding__Group_1__5 )
            // InternalFortXTrans.g:8910:2: rule__Binding__Group_1__4__Impl rule__Binding__Group_1__5
            {
            pushFollow(FOLLOW_23);
            rule__Binding__Group_1__4__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Binding__Group_1__5();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Binding__Group_1__4"


    // $ANTLR start "rule__Binding__Group_1__4__Impl"
    // InternalFortXTrans.g:8917:1: rule__Binding__Group_1__4__Impl : ( ( rule__Binding__GAssignment_1_4 ) ) ;
    public final void rule__Binding__Group_1__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8921:1: ( ( ( rule__Binding__GAssignment_1_4 ) ) )
            // InternalFortXTrans.g:8922:1: ( ( rule__Binding__GAssignment_1_4 ) )
            {
            // InternalFortXTrans.g:8922:1: ( ( rule__Binding__GAssignment_1_4 ) )
            // InternalFortXTrans.g:8923:2: ( rule__Binding__GAssignment_1_4 )
            {
             before(grammarAccess.getBindingAccess().getGAssignment_1_4()); 
            // InternalFortXTrans.g:8924:2: ( rule__Binding__GAssignment_1_4 )
            // InternalFortXTrans.g:8924:3: rule__Binding__GAssignment_1_4
            {
            pushFollow(FOLLOW_2);
            rule__Binding__GAssignment_1_4();

            state._fsp--;


            }

             after(grammarAccess.getBindingAccess().getGAssignment_1_4()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Binding__Group_1__4__Impl"


    // $ANTLR start "rule__Binding__Group_1__5"
    // InternalFortXTrans.g:8932:1: rule__Binding__Group_1__5 : rule__Binding__Group_1__5__Impl ;
    public final void rule__Binding__Group_1__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8936:1: ( rule__Binding__Group_1__5__Impl )
            // InternalFortXTrans.g:8937:2: rule__Binding__Group_1__5__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Binding__Group_1__5__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Binding__Group_1__5"


    // $ANTLR start "rule__Binding__Group_1__5__Impl"
    // InternalFortXTrans.g:8943:1: rule__Binding__Group_1__5__Impl : ( ')' ) ;
    public final void rule__Binding__Group_1__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8947:1: ( ( ')' ) )
            // InternalFortXTrans.g:8948:1: ( ')' )
            {
            // InternalFortXTrans.g:8948:1: ( ')' )
            // InternalFortXTrans.g:8949:2: ')'
            {
             before(grammarAccess.getBindingAccess().getRightParenthesisKeyword_1_5()); 
            match(input,34,FOLLOW_2); 
             after(grammarAccess.getBindingAccess().getRightParenthesisKeyword_1_5()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Binding__Group_1__5__Impl"


    // $ANTLR start "rule__GenSource__Group__0"
    // InternalFortXTrans.g:8959:1: rule__GenSource__Group__0 : rule__GenSource__Group__0__Impl rule__GenSource__Group__1 ;
    public final void rule__GenSource__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8963:1: ( rule__GenSource__Group__0__Impl rule__GenSource__Group__1 )
            // InternalFortXTrans.g:8964:2: rule__GenSource__Group__0__Impl rule__GenSource__Group__1
            {
            pushFollow(FOLLOW_73);
            rule__GenSource__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__GenSource__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GenSource__Group__0"


    // $ANTLR start "rule__GenSource__Group__0__Impl"
    // InternalFortXTrans.g:8971:1: rule__GenSource__Group__0__Impl : ( ruleExpr ) ;
    public final void rule__GenSource__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8975:1: ( ( ruleExpr ) )
            // InternalFortXTrans.g:8976:1: ( ruleExpr )
            {
            // InternalFortXTrans.g:8976:1: ( ruleExpr )
            // InternalFortXTrans.g:8977:2: ruleExpr
            {
             before(grammarAccess.getGenSourceAccess().getExprParserRuleCall_0()); 
            pushFollow(FOLLOW_2);
            ruleExpr();

            state._fsp--;

             after(grammarAccess.getGenSourceAccess().getExprParserRuleCall_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GenSource__Group__0__Impl"


    // $ANTLR start "rule__GenSource__Group__1"
    // InternalFortXTrans.g:8986:1: rule__GenSource__Group__1 : rule__GenSource__Group__1__Impl ;
    public final void rule__GenSource__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8990:1: ( rule__GenSource__Group__1__Impl )
            // InternalFortXTrans.g:8991:2: rule__GenSource__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__GenSource__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GenSource__Group__1"


    // $ANTLR start "rule__GenSource__Group__1__Impl"
    // InternalFortXTrans.g:8997:1: rule__GenSource__Group__1__Impl : ( ( rule__GenSource__Group_1__0 )? ) ;
    public final void rule__GenSource__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9001:1: ( ( ( rule__GenSource__Group_1__0 )? ) )
            // InternalFortXTrans.g:9002:1: ( ( rule__GenSource__Group_1__0 )? )
            {
            // InternalFortXTrans.g:9002:1: ( ( rule__GenSource__Group_1__0 )? )
            // InternalFortXTrans.g:9003:2: ( rule__GenSource__Group_1__0 )?
            {
             before(grammarAccess.getGenSourceAccess().getGroup_1()); 
            // InternalFortXTrans.g:9004:2: ( rule__GenSource__Group_1__0 )?
            int alt77=2;
            int LA77_0 = input.LA(1);

            if ( (LA77_0==55) ) {
                alt77=1;
            }
            switch (alt77) {
                case 1 :
                    // InternalFortXTrans.g:9004:3: rule__GenSource__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__GenSource__Group_1__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getGenSourceAccess().getGroup_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GenSource__Group__1__Impl"


    // $ANTLR start "rule__GenSource__Group_1__0"
    // InternalFortXTrans.g:9013:1: rule__GenSource__Group_1__0 : rule__GenSource__Group_1__0__Impl rule__GenSource__Group_1__1 ;
    public final void rule__GenSource__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9017:1: ( rule__GenSource__Group_1__0__Impl rule__GenSource__Group_1__1 )
            // InternalFortXTrans.g:9018:2: rule__GenSource__Group_1__0__Impl rule__GenSource__Group_1__1
            {
            pushFollow(FOLLOW_73);
            rule__GenSource__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__GenSource__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GenSource__Group_1__0"


    // $ANTLR start "rule__GenSource__Group_1__0__Impl"
    // InternalFortXTrans.g:9025:1: rule__GenSource__Group_1__0__Impl : ( () ) ;
    public final void rule__GenSource__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9029:1: ( ( () ) )
            // InternalFortXTrans.g:9030:1: ( () )
            {
            // InternalFortXTrans.g:9030:1: ( () )
            // InternalFortXTrans.g:9031:2: ()
            {
             before(grammarAccess.getGenSourceAccess().getGenSourceStartAction_1_0()); 
            // InternalFortXTrans.g:9032:2: ()
            // InternalFortXTrans.g:9032:3: 
            {
            }

             after(grammarAccess.getGenSourceAccess().getGenSourceStartAction_1_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GenSource__Group_1__0__Impl"


    // $ANTLR start "rule__GenSource__Group_1__1"
    // InternalFortXTrans.g:9040:1: rule__GenSource__Group_1__1 : rule__GenSource__Group_1__1__Impl rule__GenSource__Group_1__2 ;
    public final void rule__GenSource__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9044:1: ( rule__GenSource__Group_1__1__Impl rule__GenSource__Group_1__2 )
            // InternalFortXTrans.g:9045:2: rule__GenSource__Group_1__1__Impl rule__GenSource__Group_1__2
            {
            pushFollow(FOLLOW_32);
            rule__GenSource__Group_1__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__GenSource__Group_1__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GenSource__Group_1__1"


    // $ANTLR start "rule__GenSource__Group_1__1__Impl"
    // InternalFortXTrans.g:9052:1: rule__GenSource__Group_1__1__Impl : ( '#' ) ;
    public final void rule__GenSource__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9056:1: ( ( '#' ) )
            // InternalFortXTrans.g:9057:1: ( '#' )
            {
            // InternalFortXTrans.g:9057:1: ( '#' )
            // InternalFortXTrans.g:9058:2: '#'
            {
             before(grammarAccess.getGenSourceAccess().getNumberSignKeyword_1_1()); 
            match(input,55,FOLLOW_2); 
             after(grammarAccess.getGenSourceAccess().getNumberSignKeyword_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GenSource__Group_1__1__Impl"


    // $ANTLR start "rule__GenSource__Group_1__2"
    // InternalFortXTrans.g:9067:1: rule__GenSource__Group_1__2 : rule__GenSource__Group_1__2__Impl ;
    public final void rule__GenSource__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9071:1: ( rule__GenSource__Group_1__2__Impl )
            // InternalFortXTrans.g:9072:2: rule__GenSource__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__GenSource__Group_1__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GenSource__Group_1__2"


    // $ANTLR start "rule__GenSource__Group_1__2__Impl"
    // InternalFortXTrans.g:9078:1: rule__GenSource__Group_1__2__Impl : ( ( rule__GenSource__EndAssignment_1_2 ) ) ;
    public final void rule__GenSource__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9082:1: ( ( ( rule__GenSource__EndAssignment_1_2 ) ) )
            // InternalFortXTrans.g:9083:1: ( ( rule__GenSource__EndAssignment_1_2 ) )
            {
            // InternalFortXTrans.g:9083:1: ( ( rule__GenSource__EndAssignment_1_2 ) )
            // InternalFortXTrans.g:9084:2: ( rule__GenSource__EndAssignment_1_2 )
            {
             before(grammarAccess.getGenSourceAccess().getEndAssignment_1_2()); 
            // InternalFortXTrans.g:9085:2: ( rule__GenSource__EndAssignment_1_2 )
            // InternalFortXTrans.g:9085:3: rule__GenSource__EndAssignment_1_2
            {
            pushFollow(FOLLOW_2);
            rule__GenSource__EndAssignment_1_2();

            state._fsp--;


            }

             after(grammarAccess.getGenSourceAccess().getEndAssignment_1_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GenSource__Group_1__2__Impl"


    // $ANTLR start "rule__BlockElems__Group__0"
    // InternalFortXTrans.g:9094:1: rule__BlockElems__Group__0 : rule__BlockElems__Group__0__Impl rule__BlockElems__Group__1 ;
    public final void rule__BlockElems__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9098:1: ( rule__BlockElems__Group__0__Impl rule__BlockElems__Group__1 )
            // InternalFortXTrans.g:9099:2: rule__BlockElems__Group__0__Impl rule__BlockElems__Group__1
            {
            pushFollow(FOLLOW_32);
            rule__BlockElems__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__BlockElems__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BlockElems__Group__0"


    // $ANTLR start "rule__BlockElems__Group__0__Impl"
    // InternalFortXTrans.g:9106:1: rule__BlockElems__Group__0__Impl : ( ( rule__BlockElems__BlockAssignment_0 ) ) ;
    public final void rule__BlockElems__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9110:1: ( ( ( rule__BlockElems__BlockAssignment_0 ) ) )
            // InternalFortXTrans.g:9111:1: ( ( rule__BlockElems__BlockAssignment_0 ) )
            {
            // InternalFortXTrans.g:9111:1: ( ( rule__BlockElems__BlockAssignment_0 ) )
            // InternalFortXTrans.g:9112:2: ( rule__BlockElems__BlockAssignment_0 )
            {
             before(grammarAccess.getBlockElemsAccess().getBlockAssignment_0()); 
            // InternalFortXTrans.g:9113:2: ( rule__BlockElems__BlockAssignment_0 )
            // InternalFortXTrans.g:9113:3: rule__BlockElems__BlockAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__BlockElems__BlockAssignment_0();

            state._fsp--;


            }

             after(grammarAccess.getBlockElemsAccess().getBlockAssignment_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BlockElems__Group__0__Impl"


    // $ANTLR start "rule__BlockElems__Group__1"
    // InternalFortXTrans.g:9121:1: rule__BlockElems__Group__1 : rule__BlockElems__Group__1__Impl ;
    public final void rule__BlockElems__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9125:1: ( rule__BlockElems__Group__1__Impl )
            // InternalFortXTrans.g:9126:2: rule__BlockElems__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__BlockElems__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BlockElems__Group__1"


    // $ANTLR start "rule__BlockElems__Group__1__Impl"
    // InternalFortXTrans.g:9132:1: rule__BlockElems__Group__1__Impl : ( ( rule__BlockElems__BlockAssignment_1 )* ) ;
    public final void rule__BlockElems__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9136:1: ( ( ( rule__BlockElems__BlockAssignment_1 )* ) )
            // InternalFortXTrans.g:9137:1: ( ( rule__BlockElems__BlockAssignment_1 )* )
            {
            // InternalFortXTrans.g:9137:1: ( ( rule__BlockElems__BlockAssignment_1 )* )
            // InternalFortXTrans.g:9138:2: ( rule__BlockElems__BlockAssignment_1 )*
            {
             before(grammarAccess.getBlockElemsAccess().getBlockAssignment_1()); 
            // InternalFortXTrans.g:9139:2: ( rule__BlockElems__BlockAssignment_1 )*
            loop78:
            do {
                int alt78=2;
                int LA78_0 = input.LA(1);

                if ( ((LA78_0>=RULE_ID && LA78_0<=RULE_STRING)||LA78_0==33||LA78_0==40||LA78_0==50||LA78_0==57||LA78_0==64||(LA78_0>=67 && LA78_0<=70)||(LA78_0>=72 && LA78_0<=75)) ) {
                    alt78=1;
                }


                switch (alt78) {
            	case 1 :
            	    // InternalFortXTrans.g:9139:3: rule__BlockElems__BlockAssignment_1
            	    {
            	    pushFollow(FOLLOW_74);
            	    rule__BlockElems__BlockAssignment_1();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop78;
                }
            } while (true);

             after(grammarAccess.getBlockElemsAccess().getBlockAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BlockElems__Group__1__Impl"


    // $ANTLR start "rule__Do__Group__0"
    // InternalFortXTrans.g:9148:1: rule__Do__Group__0 : rule__Do__Group__0__Impl rule__Do__Group__1 ;
    public final void rule__Do__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9152:1: ( rule__Do__Group__0__Impl rule__Do__Group__1 )
            // InternalFortXTrans.g:9153:2: rule__Do__Group__0__Impl rule__Do__Group__1
            {
            pushFollow(FOLLOW_75);
            rule__Do__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Do__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Do__Group__0"


    // $ANTLR start "rule__Do__Group__0__Impl"
    // InternalFortXTrans.g:9160:1: rule__Do__Group__0__Impl : ( ( rule__Do__DofsAssignment_0 ) ) ;
    public final void rule__Do__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9164:1: ( ( ( rule__Do__DofsAssignment_0 ) ) )
            // InternalFortXTrans.g:9165:1: ( ( rule__Do__DofsAssignment_0 ) )
            {
            // InternalFortXTrans.g:9165:1: ( ( rule__Do__DofsAssignment_0 ) )
            // InternalFortXTrans.g:9166:2: ( rule__Do__DofsAssignment_0 )
            {
             before(grammarAccess.getDoAccess().getDofsAssignment_0()); 
            // InternalFortXTrans.g:9167:2: ( rule__Do__DofsAssignment_0 )
            // InternalFortXTrans.g:9167:3: rule__Do__DofsAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__Do__DofsAssignment_0();

            state._fsp--;


            }

             after(grammarAccess.getDoAccess().getDofsAssignment_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Do__Group__0__Impl"


    // $ANTLR start "rule__Do__Group__1"
    // InternalFortXTrans.g:9175:1: rule__Do__Group__1 : rule__Do__Group__1__Impl rule__Do__Group__2 ;
    public final void rule__Do__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9179:1: ( rule__Do__Group__1__Impl rule__Do__Group__2 )
            // InternalFortXTrans.g:9180:2: rule__Do__Group__1__Impl rule__Do__Group__2
            {
            pushFollow(FOLLOW_75);
            rule__Do__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Do__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Do__Group__1"


    // $ANTLR start "rule__Do__Group__1__Impl"
    // InternalFortXTrans.g:9187:1: rule__Do__Group__1__Impl : ( ( rule__Do__Group_1__0 )* ) ;
    public final void rule__Do__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9191:1: ( ( ( rule__Do__Group_1__0 )* ) )
            // InternalFortXTrans.g:9192:1: ( ( rule__Do__Group_1__0 )* )
            {
            // InternalFortXTrans.g:9192:1: ( ( rule__Do__Group_1__0 )* )
            // InternalFortXTrans.g:9193:2: ( rule__Do__Group_1__0 )*
            {
             before(grammarAccess.getDoAccess().getGroup_1()); 
            // InternalFortXTrans.g:9194:2: ( rule__Do__Group_1__0 )*
            loop79:
            do {
                int alt79=2;
                int LA79_0 = input.LA(1);

                if ( (LA79_0==56) ) {
                    alt79=1;
                }


                switch (alt79) {
            	case 1 :
            	    // InternalFortXTrans.g:9194:3: rule__Do__Group_1__0
            	    {
            	    pushFollow(FOLLOW_76);
            	    rule__Do__Group_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop79;
                }
            } while (true);

             after(grammarAccess.getDoAccess().getGroup_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Do__Group__1__Impl"


    // $ANTLR start "rule__Do__Group__2"
    // InternalFortXTrans.g:9202:1: rule__Do__Group__2 : rule__Do__Group__2__Impl ;
    public final void rule__Do__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9206:1: ( rule__Do__Group__2__Impl )
            // InternalFortXTrans.g:9207:2: rule__Do__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Do__Group__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Do__Group__2"


    // $ANTLR start "rule__Do__Group__2__Impl"
    // InternalFortXTrans.g:9213:1: rule__Do__Group__2__Impl : ( 'end' ) ;
    public final void rule__Do__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9217:1: ( ( 'end' ) )
            // InternalFortXTrans.g:9218:1: ( 'end' )
            {
            // InternalFortXTrans.g:9218:1: ( 'end' )
            // InternalFortXTrans.g:9219:2: 'end'
            {
             before(grammarAccess.getDoAccess().getEndKeyword_2()); 
            match(input,26,FOLLOW_2); 
             after(grammarAccess.getDoAccess().getEndKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Do__Group__2__Impl"


    // $ANTLR start "rule__Do__Group_1__0"
    // InternalFortXTrans.g:9229:1: rule__Do__Group_1__0 : rule__Do__Group_1__0__Impl rule__Do__Group_1__1 ;
    public final void rule__Do__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9233:1: ( rule__Do__Group_1__0__Impl rule__Do__Group_1__1 )
            // InternalFortXTrans.g:9234:2: rule__Do__Group_1__0__Impl rule__Do__Group_1__1
            {
            pushFollow(FOLLOW_65);
            rule__Do__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Do__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Do__Group_1__0"


    // $ANTLR start "rule__Do__Group_1__0__Impl"
    // InternalFortXTrans.g:9241:1: rule__Do__Group_1__0__Impl : ( 'also' ) ;
    public final void rule__Do__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9245:1: ( ( 'also' ) )
            // InternalFortXTrans.g:9246:1: ( 'also' )
            {
            // InternalFortXTrans.g:9246:1: ( 'also' )
            // InternalFortXTrans.g:9247:2: 'also'
            {
             before(grammarAccess.getDoAccess().getAlsoKeyword_1_0()); 
            match(input,56,FOLLOW_2); 
             after(grammarAccess.getDoAccess().getAlsoKeyword_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Do__Group_1__0__Impl"


    // $ANTLR start "rule__Do__Group_1__1"
    // InternalFortXTrans.g:9256:1: rule__Do__Group_1__1 : rule__Do__Group_1__1__Impl ;
    public final void rule__Do__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9260:1: ( rule__Do__Group_1__1__Impl )
            // InternalFortXTrans.g:9261:2: rule__Do__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Do__Group_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Do__Group_1__1"


    // $ANTLR start "rule__Do__Group_1__1__Impl"
    // InternalFortXTrans.g:9267:1: rule__Do__Group_1__1__Impl : ( ( rule__Do__DofsAssignment_1_1 ) ) ;
    public final void rule__Do__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9271:1: ( ( ( rule__Do__DofsAssignment_1_1 ) ) )
            // InternalFortXTrans.g:9272:1: ( ( rule__Do__DofsAssignment_1_1 ) )
            {
            // InternalFortXTrans.g:9272:1: ( ( rule__Do__DofsAssignment_1_1 ) )
            // InternalFortXTrans.g:9273:2: ( rule__Do__DofsAssignment_1_1 )
            {
             before(grammarAccess.getDoAccess().getDofsAssignment_1_1()); 
            // InternalFortXTrans.g:9274:2: ( rule__Do__DofsAssignment_1_1 )
            // InternalFortXTrans.g:9274:3: rule__Do__DofsAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Do__DofsAssignment_1_1();

            state._fsp--;


            }

             after(grammarAccess.getDoAccess().getDofsAssignment_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Do__Group_1__1__Impl"


    // $ANTLR start "rule__DoFront__Group__0"
    // InternalFortXTrans.g:9283:1: rule__DoFront__Group__0 : rule__DoFront__Group__0__Impl rule__DoFront__Group__1 ;
    public final void rule__DoFront__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9287:1: ( rule__DoFront__Group__0__Impl rule__DoFront__Group__1 )
            // InternalFortXTrans.g:9288:2: rule__DoFront__Group__0__Impl rule__DoFront__Group__1
            {
            pushFollow(FOLLOW_65);
            rule__DoFront__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DoFront__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DoFront__Group__0"


    // $ANTLR start "rule__DoFront__Group__0__Impl"
    // InternalFortXTrans.g:9295:1: rule__DoFront__Group__0__Impl : ( ( rule__DoFront__Group_0__0 )? ) ;
    public final void rule__DoFront__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9299:1: ( ( ( rule__DoFront__Group_0__0 )? ) )
            // InternalFortXTrans.g:9300:1: ( ( rule__DoFront__Group_0__0 )? )
            {
            // InternalFortXTrans.g:9300:1: ( ( rule__DoFront__Group_0__0 )? )
            // InternalFortXTrans.g:9301:2: ( rule__DoFront__Group_0__0 )?
            {
             before(grammarAccess.getDoFrontAccess().getGroup_0()); 
            // InternalFortXTrans.g:9302:2: ( rule__DoFront__Group_0__0 )?
            int alt80=2;
            int LA80_0 = input.LA(1);

            if ( (LA80_0==72) ) {
                alt80=1;
            }
            switch (alt80) {
                case 1 :
                    // InternalFortXTrans.g:9302:3: rule__DoFront__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__DoFront__Group_0__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getDoFrontAccess().getGroup_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DoFront__Group__0__Impl"


    // $ANTLR start "rule__DoFront__Group__1"
    // InternalFortXTrans.g:9310:1: rule__DoFront__Group__1 : rule__DoFront__Group__1__Impl rule__DoFront__Group__2 ;
    public final void rule__DoFront__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9314:1: ( rule__DoFront__Group__1__Impl rule__DoFront__Group__2 )
            // InternalFortXTrans.g:9315:2: rule__DoFront__Group__1__Impl rule__DoFront__Group__2
            {
            pushFollow(FOLLOW_65);
            rule__DoFront__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DoFront__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DoFront__Group__1"


    // $ANTLR start "rule__DoFront__Group__1__Impl"
    // InternalFortXTrans.g:9322:1: rule__DoFront__Group__1__Impl : ( ( rule__DoFront__AtomAssignment_1 )? ) ;
    public final void rule__DoFront__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9326:1: ( ( ( rule__DoFront__AtomAssignment_1 )? ) )
            // InternalFortXTrans.g:9327:1: ( ( rule__DoFront__AtomAssignment_1 )? )
            {
            // InternalFortXTrans.g:9327:1: ( ( rule__DoFront__AtomAssignment_1 )? )
            // InternalFortXTrans.g:9328:2: ( rule__DoFront__AtomAssignment_1 )?
            {
             before(grammarAccess.getDoFrontAccess().getAtomAssignment_1()); 
            // InternalFortXTrans.g:9329:2: ( rule__DoFront__AtomAssignment_1 )?
            int alt81=2;
            int LA81_0 = input.LA(1);

            if ( (LA81_0==64) ) {
                alt81=1;
            }
            switch (alt81) {
                case 1 :
                    // InternalFortXTrans.g:9329:3: rule__DoFront__AtomAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__DoFront__AtomAssignment_1();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getDoFrontAccess().getAtomAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DoFront__Group__1__Impl"


    // $ANTLR start "rule__DoFront__Group__2"
    // InternalFortXTrans.g:9337:1: rule__DoFront__Group__2 : rule__DoFront__Group__2__Impl rule__DoFront__Group__3 ;
    public final void rule__DoFront__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9341:1: ( rule__DoFront__Group__2__Impl rule__DoFront__Group__3 )
            // InternalFortXTrans.g:9342:2: rule__DoFront__Group__2__Impl rule__DoFront__Group__3
            {
            pushFollow(FOLLOW_32);
            rule__DoFront__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DoFront__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DoFront__Group__2"


    // $ANTLR start "rule__DoFront__Group__2__Impl"
    // InternalFortXTrans.g:9349:1: rule__DoFront__Group__2__Impl : ( 'do' ) ;
    public final void rule__DoFront__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9353:1: ( ( 'do' ) )
            // InternalFortXTrans.g:9354:1: ( 'do' )
            {
            // InternalFortXTrans.g:9354:1: ( 'do' )
            // InternalFortXTrans.g:9355:2: 'do'
            {
             before(grammarAccess.getDoFrontAccess().getDoKeyword_2()); 
            match(input,57,FOLLOW_2); 
             after(grammarAccess.getDoFrontAccess().getDoKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DoFront__Group__2__Impl"


    // $ANTLR start "rule__DoFront__Group__3"
    // InternalFortXTrans.g:9364:1: rule__DoFront__Group__3 : rule__DoFront__Group__3__Impl ;
    public final void rule__DoFront__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9368:1: ( rule__DoFront__Group__3__Impl )
            // InternalFortXTrans.g:9369:2: rule__DoFront__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__DoFront__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DoFront__Group__3"


    // $ANTLR start "rule__DoFront__Group__3__Impl"
    // InternalFortXTrans.g:9375:1: rule__DoFront__Group__3__Impl : ( ( rule__DoFront__BlockAssignment_3 ) ) ;
    public final void rule__DoFront__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9379:1: ( ( ( rule__DoFront__BlockAssignment_3 ) ) )
            // InternalFortXTrans.g:9380:1: ( ( rule__DoFront__BlockAssignment_3 ) )
            {
            // InternalFortXTrans.g:9380:1: ( ( rule__DoFront__BlockAssignment_3 ) )
            // InternalFortXTrans.g:9381:2: ( rule__DoFront__BlockAssignment_3 )
            {
             before(grammarAccess.getDoFrontAccess().getBlockAssignment_3()); 
            // InternalFortXTrans.g:9382:2: ( rule__DoFront__BlockAssignment_3 )
            // InternalFortXTrans.g:9382:3: rule__DoFront__BlockAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__DoFront__BlockAssignment_3();

            state._fsp--;


            }

             after(grammarAccess.getDoFrontAccess().getBlockAssignment_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DoFront__Group__3__Impl"


    // $ANTLR start "rule__DoFront__Group_0__0"
    // InternalFortXTrans.g:9391:1: rule__DoFront__Group_0__0 : rule__DoFront__Group_0__0__Impl rule__DoFront__Group_0__1 ;
    public final void rule__DoFront__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9395:1: ( rule__DoFront__Group_0__0__Impl rule__DoFront__Group_0__1 )
            // InternalFortXTrans.g:9396:2: rule__DoFront__Group_0__0__Impl rule__DoFront__Group_0__1
            {
            pushFollow(FOLLOW_32);
            rule__DoFront__Group_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DoFront__Group_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DoFront__Group_0__0"


    // $ANTLR start "rule__DoFront__Group_0__0__Impl"
    // InternalFortXTrans.g:9403:1: rule__DoFront__Group_0__0__Impl : ( ( rule__DoFront__AtAssignment_0_0 ) ) ;
    public final void rule__DoFront__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9407:1: ( ( ( rule__DoFront__AtAssignment_0_0 ) ) )
            // InternalFortXTrans.g:9408:1: ( ( rule__DoFront__AtAssignment_0_0 ) )
            {
            // InternalFortXTrans.g:9408:1: ( ( rule__DoFront__AtAssignment_0_0 ) )
            // InternalFortXTrans.g:9409:2: ( rule__DoFront__AtAssignment_0_0 )
            {
             before(grammarAccess.getDoFrontAccess().getAtAssignment_0_0()); 
            // InternalFortXTrans.g:9410:2: ( rule__DoFront__AtAssignment_0_0 )
            // InternalFortXTrans.g:9410:3: rule__DoFront__AtAssignment_0_0
            {
            pushFollow(FOLLOW_2);
            rule__DoFront__AtAssignment_0_0();

            state._fsp--;


            }

             after(grammarAccess.getDoFrontAccess().getAtAssignment_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DoFront__Group_0__0__Impl"


    // $ANTLR start "rule__DoFront__Group_0__1"
    // InternalFortXTrans.g:9418:1: rule__DoFront__Group_0__1 : rule__DoFront__Group_0__1__Impl ;
    public final void rule__DoFront__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9422:1: ( rule__DoFront__Group_0__1__Impl )
            // InternalFortXTrans.g:9423:2: rule__DoFront__Group_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__DoFront__Group_0__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DoFront__Group_0__1"


    // $ANTLR start "rule__DoFront__Group_0__1__Impl"
    // InternalFortXTrans.g:9429:1: rule__DoFront__Group_0__1__Impl : ( ( rule__DoFront__ExpAssignment_0_1 ) ) ;
    public final void rule__DoFront__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9433:1: ( ( ( rule__DoFront__ExpAssignment_0_1 ) ) )
            // InternalFortXTrans.g:9434:1: ( ( rule__DoFront__ExpAssignment_0_1 ) )
            {
            // InternalFortXTrans.g:9434:1: ( ( rule__DoFront__ExpAssignment_0_1 ) )
            // InternalFortXTrans.g:9435:2: ( rule__DoFront__ExpAssignment_0_1 )
            {
             before(grammarAccess.getDoFrontAccess().getExpAssignment_0_1()); 
            // InternalFortXTrans.g:9436:2: ( rule__DoFront__ExpAssignment_0_1 )
            // InternalFortXTrans.g:9436:3: rule__DoFront__ExpAssignment_0_1
            {
            pushFollow(FOLLOW_2);
            rule__DoFront__ExpAssignment_0_1();

            state._fsp--;


            }

             after(grammarAccess.getDoFrontAccess().getExpAssignment_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DoFront__Group_0__1__Impl"


    // $ANTLR start "rule__IsType__Group__0"
    // InternalFortXTrans.g:9445:1: rule__IsType__Group__0 : rule__IsType__Group__0__Impl rule__IsType__Group__1 ;
    public final void rule__IsType__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9449:1: ( rule__IsType__Group__0__Impl rule__IsType__Group__1 )
            // InternalFortXTrans.g:9450:2: rule__IsType__Group__0__Impl rule__IsType__Group__1
            {
            pushFollow(FOLLOW_5);
            rule__IsType__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__IsType__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IsType__Group__0"


    // $ANTLR start "rule__IsType__Group__0__Impl"
    // InternalFortXTrans.g:9457:1: rule__IsType__Group__0__Impl : ( ':' ) ;
    public final void rule__IsType__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9461:1: ( ( ':' ) )
            // InternalFortXTrans.g:9462:1: ( ':' )
            {
            // InternalFortXTrans.g:9462:1: ( ':' )
            // InternalFortXTrans.g:9463:2: ':'
            {
             before(grammarAccess.getIsTypeAccess().getColonKeyword_0()); 
            match(input,35,FOLLOW_2); 
             after(grammarAccess.getIsTypeAccess().getColonKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IsType__Group__0__Impl"


    // $ANTLR start "rule__IsType__Group__1"
    // InternalFortXTrans.g:9472:1: rule__IsType__Group__1 : rule__IsType__Group__1__Impl ;
    public final void rule__IsType__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9476:1: ( rule__IsType__Group__1__Impl )
            // InternalFortXTrans.g:9477:2: rule__IsType__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__IsType__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IsType__Group__1"


    // $ANTLR start "rule__IsType__Group__1__Impl"
    // InternalFortXTrans.g:9483:1: rule__IsType__Group__1__Impl : ( ( rule__IsType__TypeAssignment_1 ) ) ;
    public final void rule__IsType__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9487:1: ( ( ( rule__IsType__TypeAssignment_1 ) ) )
            // InternalFortXTrans.g:9488:1: ( ( rule__IsType__TypeAssignment_1 ) )
            {
            // InternalFortXTrans.g:9488:1: ( ( rule__IsType__TypeAssignment_1 ) )
            // InternalFortXTrans.g:9489:2: ( rule__IsType__TypeAssignment_1 )
            {
             before(grammarAccess.getIsTypeAccess().getTypeAssignment_1()); 
            // InternalFortXTrans.g:9490:2: ( rule__IsType__TypeAssignment_1 )
            // InternalFortXTrans.g:9490:3: rule__IsType__TypeAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__IsType__TypeAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getIsTypeAccess().getTypeAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IsType__Group__1__Impl"


    // $ANTLR start "rule__FieldDecl__Group_0__0"
    // InternalFortXTrans.g:9499:1: rule__FieldDecl__Group_0__0 : rule__FieldDecl__Group_0__0__Impl rule__FieldDecl__Group_0__1 ;
    public final void rule__FieldDecl__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9503:1: ( rule__FieldDecl__Group_0__0__Impl rule__FieldDecl__Group_0__1 )
            // InternalFortXTrans.g:9504:2: rule__FieldDecl__Group_0__0__Impl rule__FieldDecl__Group_0__1
            {
            pushFollow(FOLLOW_77);
            rule__FieldDecl__Group_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__FieldDecl__Group_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_0__0"


    // $ANTLR start "rule__FieldDecl__Group_0__0__Impl"
    // InternalFortXTrans.g:9511:1: rule__FieldDecl__Group_0__0__Impl : ( ( rule__FieldDecl__PriAssignment_0_0 )? ) ;
    public final void rule__FieldDecl__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9515:1: ( ( ( rule__FieldDecl__PriAssignment_0_0 )? ) )
            // InternalFortXTrans.g:9516:1: ( ( rule__FieldDecl__PriAssignment_0_0 )? )
            {
            // InternalFortXTrans.g:9516:1: ( ( rule__FieldDecl__PriAssignment_0_0 )? )
            // InternalFortXTrans.g:9517:2: ( rule__FieldDecl__PriAssignment_0_0 )?
            {
             before(grammarAccess.getFieldDeclAccess().getPriAssignment_0_0()); 
            // InternalFortXTrans.g:9518:2: ( rule__FieldDecl__PriAssignment_0_0 )?
            int alt82=2;
            int LA82_0 = input.LA(1);

            if ( (LA82_0==62) ) {
                alt82=1;
            }
            switch (alt82) {
                case 1 :
                    // InternalFortXTrans.g:9518:3: rule__FieldDecl__PriAssignment_0_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__FieldDecl__PriAssignment_0_0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getFieldDeclAccess().getPriAssignment_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_0__0__Impl"


    // $ANTLR start "rule__FieldDecl__Group_0__1"
    // InternalFortXTrans.g:9526:1: rule__FieldDecl__Group_0__1 : rule__FieldDecl__Group_0__1__Impl rule__FieldDecl__Group_0__2 ;
    public final void rule__FieldDecl__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9530:1: ( rule__FieldDecl__Group_0__1__Impl rule__FieldDecl__Group_0__2 )
            // InternalFortXTrans.g:9531:2: rule__FieldDecl__Group_0__1__Impl rule__FieldDecl__Group_0__2
            {
            pushFollow(FOLLOW_77);
            rule__FieldDecl__Group_0__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__FieldDecl__Group_0__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_0__1"


    // $ANTLR start "rule__FieldDecl__Group_0__1__Impl"
    // InternalFortXTrans.g:9538:1: rule__FieldDecl__Group_0__1__Impl : ( ( rule__FieldDecl__MutAssignment_0_1 )? ) ;
    public final void rule__FieldDecl__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9542:1: ( ( ( rule__FieldDecl__MutAssignment_0_1 )? ) )
            // InternalFortXTrans.g:9543:1: ( ( rule__FieldDecl__MutAssignment_0_1 )? )
            {
            // InternalFortXTrans.g:9543:1: ( ( rule__FieldDecl__MutAssignment_0_1 )? )
            // InternalFortXTrans.g:9544:2: ( rule__FieldDecl__MutAssignment_0_1 )?
            {
             before(grammarAccess.getFieldDeclAccess().getMutAssignment_0_1()); 
            // InternalFortXTrans.g:9545:2: ( rule__FieldDecl__MutAssignment_0_1 )?
            int alt83=2;
            int LA83_0 = input.LA(1);

            if ( (LA83_0==73) ) {
                alt83=1;
            }
            switch (alt83) {
                case 1 :
                    // InternalFortXTrans.g:9545:3: rule__FieldDecl__MutAssignment_0_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__FieldDecl__MutAssignment_0_1();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getFieldDeclAccess().getMutAssignment_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_0__1__Impl"


    // $ANTLR start "rule__FieldDecl__Group_0__2"
    // InternalFortXTrans.g:9553:1: rule__FieldDecl__Group_0__2 : rule__FieldDecl__Group_0__2__Impl rule__FieldDecl__Group_0__3 ;
    public final void rule__FieldDecl__Group_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9557:1: ( rule__FieldDecl__Group_0__2__Impl rule__FieldDecl__Group_0__3 )
            // InternalFortXTrans.g:9558:2: rule__FieldDecl__Group_0__2__Impl rule__FieldDecl__Group_0__3
            {
            pushFollow(FOLLOW_78);
            rule__FieldDecl__Group_0__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__FieldDecl__Group_0__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_0__2"


    // $ANTLR start "rule__FieldDecl__Group_0__2__Impl"
    // InternalFortXTrans.g:9565:1: rule__FieldDecl__Group_0__2__Impl : ( ( rule__FieldDecl__VarsAssignment_0_2 ) ) ;
    public final void rule__FieldDecl__Group_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9569:1: ( ( ( rule__FieldDecl__VarsAssignment_0_2 ) ) )
            // InternalFortXTrans.g:9570:1: ( ( rule__FieldDecl__VarsAssignment_0_2 ) )
            {
            // InternalFortXTrans.g:9570:1: ( ( rule__FieldDecl__VarsAssignment_0_2 ) )
            // InternalFortXTrans.g:9571:2: ( rule__FieldDecl__VarsAssignment_0_2 )
            {
             before(grammarAccess.getFieldDeclAccess().getVarsAssignment_0_2()); 
            // InternalFortXTrans.g:9572:2: ( rule__FieldDecl__VarsAssignment_0_2 )
            // InternalFortXTrans.g:9572:3: rule__FieldDecl__VarsAssignment_0_2
            {
            pushFollow(FOLLOW_2);
            rule__FieldDecl__VarsAssignment_0_2();

            state._fsp--;


            }

             after(grammarAccess.getFieldDeclAccess().getVarsAssignment_0_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_0__2__Impl"


    // $ANTLR start "rule__FieldDecl__Group_0__3"
    // InternalFortXTrans.g:9580:1: rule__FieldDecl__Group_0__3 : rule__FieldDecl__Group_0__3__Impl ;
    public final void rule__FieldDecl__Group_0__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9584:1: ( rule__FieldDecl__Group_0__3__Impl )
            // InternalFortXTrans.g:9585:2: rule__FieldDecl__Group_0__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FieldDecl__Group_0__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_0__3"


    // $ANTLR start "rule__FieldDecl__Group_0__3__Impl"
    // InternalFortXTrans.g:9591:1: rule__FieldDecl__Group_0__3__Impl : ( ( rule__FieldDecl__Group_0_3__0 )? ) ;
    public final void rule__FieldDecl__Group_0__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9595:1: ( ( ( rule__FieldDecl__Group_0_3__0 )? ) )
            // InternalFortXTrans.g:9596:1: ( ( rule__FieldDecl__Group_0_3__0 )? )
            {
            // InternalFortXTrans.g:9596:1: ( ( rule__FieldDecl__Group_0_3__0 )? )
            // InternalFortXTrans.g:9597:2: ( rule__FieldDecl__Group_0_3__0 )?
            {
             before(grammarAccess.getFieldDeclAccess().getGroup_0_3()); 
            // InternalFortXTrans.g:9598:2: ( rule__FieldDecl__Group_0_3__0 )?
            int alt84=2;
            int LA84_0 = input.LA(1);

            if ( (LA84_0==58) ) {
                alt84=1;
            }
            switch (alt84) {
                case 1 :
                    // InternalFortXTrans.g:9598:3: rule__FieldDecl__Group_0_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__FieldDecl__Group_0_3__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getFieldDeclAccess().getGroup_0_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_0__3__Impl"


    // $ANTLR start "rule__FieldDecl__Group_0_3__0"
    // InternalFortXTrans.g:9607:1: rule__FieldDecl__Group_0_3__0 : rule__FieldDecl__Group_0_3__0__Impl rule__FieldDecl__Group_0_3__1 ;
    public final void rule__FieldDecl__Group_0_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9611:1: ( rule__FieldDecl__Group_0_3__0__Impl rule__FieldDecl__Group_0_3__1 )
            // InternalFortXTrans.g:9612:2: rule__FieldDecl__Group_0_3__0__Impl rule__FieldDecl__Group_0_3__1
            {
            pushFollow(FOLLOW_32);
            rule__FieldDecl__Group_0_3__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__FieldDecl__Group_0_3__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_0_3__0"


    // $ANTLR start "rule__FieldDecl__Group_0_3__0__Impl"
    // InternalFortXTrans.g:9619:1: rule__FieldDecl__Group_0_3__0__Impl : ( '=' ) ;
    public final void rule__FieldDecl__Group_0_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9623:1: ( ( '=' ) )
            // InternalFortXTrans.g:9624:1: ( '=' )
            {
            // InternalFortXTrans.g:9624:1: ( '=' )
            // InternalFortXTrans.g:9625:2: '='
            {
             before(grammarAccess.getFieldDeclAccess().getEqualsSignKeyword_0_3_0()); 
            match(input,58,FOLLOW_2); 
             after(grammarAccess.getFieldDeclAccess().getEqualsSignKeyword_0_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_0_3__0__Impl"


    // $ANTLR start "rule__FieldDecl__Group_0_3__1"
    // InternalFortXTrans.g:9634:1: rule__FieldDecl__Group_0_3__1 : rule__FieldDecl__Group_0_3__1__Impl ;
    public final void rule__FieldDecl__Group_0_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9638:1: ( rule__FieldDecl__Group_0_3__1__Impl )
            // InternalFortXTrans.g:9639:2: rule__FieldDecl__Group_0_3__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FieldDecl__Group_0_3__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_0_3__1"


    // $ANTLR start "rule__FieldDecl__Group_0_3__1__Impl"
    // InternalFortXTrans.g:9645:1: rule__FieldDecl__Group_0_3__1__Impl : ( ( rule__FieldDecl__InitAssignment_0_3_1 ) ) ;
    public final void rule__FieldDecl__Group_0_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9649:1: ( ( ( rule__FieldDecl__InitAssignment_0_3_1 ) ) )
            // InternalFortXTrans.g:9650:1: ( ( rule__FieldDecl__InitAssignment_0_3_1 ) )
            {
            // InternalFortXTrans.g:9650:1: ( ( rule__FieldDecl__InitAssignment_0_3_1 ) )
            // InternalFortXTrans.g:9651:2: ( rule__FieldDecl__InitAssignment_0_3_1 )
            {
             before(grammarAccess.getFieldDeclAccess().getInitAssignment_0_3_1()); 
            // InternalFortXTrans.g:9652:2: ( rule__FieldDecl__InitAssignment_0_3_1 )
            // InternalFortXTrans.g:9652:3: rule__FieldDecl__InitAssignment_0_3_1
            {
            pushFollow(FOLLOW_2);
            rule__FieldDecl__InitAssignment_0_3_1();

            state._fsp--;


            }

             after(grammarAccess.getFieldDeclAccess().getInitAssignment_0_3_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_0_3__1__Impl"


    // $ANTLR start "rule__FieldDecl__Group_1__0"
    // InternalFortXTrans.g:9661:1: rule__FieldDecl__Group_1__0 : rule__FieldDecl__Group_1__0__Impl rule__FieldDecl__Group_1__1 ;
    public final void rule__FieldDecl__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9665:1: ( rule__FieldDecl__Group_1__0__Impl rule__FieldDecl__Group_1__1 )
            // InternalFortXTrans.g:9666:2: rule__FieldDecl__Group_1__0__Impl rule__FieldDecl__Group_1__1
            {
            pushFollow(FOLLOW_60);
            rule__FieldDecl__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__FieldDecl__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_1__0"


    // $ANTLR start "rule__FieldDecl__Group_1__0__Impl"
    // InternalFortXTrans.g:9673:1: rule__FieldDecl__Group_1__0__Impl : ( ( rule__FieldDecl__PriAssignment_1_0 )? ) ;
    public final void rule__FieldDecl__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9677:1: ( ( ( rule__FieldDecl__PriAssignment_1_0 )? ) )
            // InternalFortXTrans.g:9678:1: ( ( rule__FieldDecl__PriAssignment_1_0 )? )
            {
            // InternalFortXTrans.g:9678:1: ( ( rule__FieldDecl__PriAssignment_1_0 )? )
            // InternalFortXTrans.g:9679:2: ( rule__FieldDecl__PriAssignment_1_0 )?
            {
             before(grammarAccess.getFieldDeclAccess().getPriAssignment_1_0()); 
            // InternalFortXTrans.g:9680:2: ( rule__FieldDecl__PriAssignment_1_0 )?
            int alt85=2;
            int LA85_0 = input.LA(1);

            if ( (LA85_0==62) ) {
                alt85=1;
            }
            switch (alt85) {
                case 1 :
                    // InternalFortXTrans.g:9680:3: rule__FieldDecl__PriAssignment_1_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__FieldDecl__PriAssignment_1_0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getFieldDeclAccess().getPriAssignment_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_1__0__Impl"


    // $ANTLR start "rule__FieldDecl__Group_1__1"
    // InternalFortXTrans.g:9688:1: rule__FieldDecl__Group_1__1 : rule__FieldDecl__Group_1__1__Impl rule__FieldDecl__Group_1__2 ;
    public final void rule__FieldDecl__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9692:1: ( rule__FieldDecl__Group_1__1__Impl rule__FieldDecl__Group_1__2 )
            // InternalFortXTrans.g:9693:2: rule__FieldDecl__Group_1__1__Impl rule__FieldDecl__Group_1__2
            {
            pushFollow(FOLLOW_78);
            rule__FieldDecl__Group_1__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__FieldDecl__Group_1__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_1__1"


    // $ANTLR start "rule__FieldDecl__Group_1__1__Impl"
    // InternalFortXTrans.g:9700:1: rule__FieldDecl__Group_1__1__Impl : ( ( rule__FieldDecl__IdtupAssignment_1_1 ) ) ;
    public final void rule__FieldDecl__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9704:1: ( ( ( rule__FieldDecl__IdtupAssignment_1_1 ) ) )
            // InternalFortXTrans.g:9705:1: ( ( rule__FieldDecl__IdtupAssignment_1_1 ) )
            {
            // InternalFortXTrans.g:9705:1: ( ( rule__FieldDecl__IdtupAssignment_1_1 ) )
            // InternalFortXTrans.g:9706:2: ( rule__FieldDecl__IdtupAssignment_1_1 )
            {
             before(grammarAccess.getFieldDeclAccess().getIdtupAssignment_1_1()); 
            // InternalFortXTrans.g:9707:2: ( rule__FieldDecl__IdtupAssignment_1_1 )
            // InternalFortXTrans.g:9707:3: rule__FieldDecl__IdtupAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__FieldDecl__IdtupAssignment_1_1();

            state._fsp--;


            }

             after(grammarAccess.getFieldDeclAccess().getIdtupAssignment_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_1__1__Impl"


    // $ANTLR start "rule__FieldDecl__Group_1__2"
    // InternalFortXTrans.g:9715:1: rule__FieldDecl__Group_1__2 : rule__FieldDecl__Group_1__2__Impl rule__FieldDecl__Group_1__3 ;
    public final void rule__FieldDecl__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9719:1: ( rule__FieldDecl__Group_1__2__Impl rule__FieldDecl__Group_1__3 )
            // InternalFortXTrans.g:9720:2: rule__FieldDecl__Group_1__2__Impl rule__FieldDecl__Group_1__3
            {
            pushFollow(FOLLOW_32);
            rule__FieldDecl__Group_1__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__FieldDecl__Group_1__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_1__2"


    // $ANTLR start "rule__FieldDecl__Group_1__2__Impl"
    // InternalFortXTrans.g:9727:1: rule__FieldDecl__Group_1__2__Impl : ( '=' ) ;
    public final void rule__FieldDecl__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9731:1: ( ( '=' ) )
            // InternalFortXTrans.g:9732:1: ( '=' )
            {
            // InternalFortXTrans.g:9732:1: ( '=' )
            // InternalFortXTrans.g:9733:2: '='
            {
             before(grammarAccess.getFieldDeclAccess().getEqualsSignKeyword_1_2()); 
            match(input,58,FOLLOW_2); 
             after(grammarAccess.getFieldDeclAccess().getEqualsSignKeyword_1_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_1__2__Impl"


    // $ANTLR start "rule__FieldDecl__Group_1__3"
    // InternalFortXTrans.g:9742:1: rule__FieldDecl__Group_1__3 : rule__FieldDecl__Group_1__3__Impl ;
    public final void rule__FieldDecl__Group_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9746:1: ( rule__FieldDecl__Group_1__3__Impl )
            // InternalFortXTrans.g:9747:2: rule__FieldDecl__Group_1__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FieldDecl__Group_1__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_1__3"


    // $ANTLR start "rule__FieldDecl__Group_1__3__Impl"
    // InternalFortXTrans.g:9753:1: rule__FieldDecl__Group_1__3__Impl : ( ( rule__FieldDecl__InitAssignment_1_3 )? ) ;
    public final void rule__FieldDecl__Group_1__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9757:1: ( ( ( rule__FieldDecl__InitAssignment_1_3 )? ) )
            // InternalFortXTrans.g:9758:1: ( ( rule__FieldDecl__InitAssignment_1_3 )? )
            {
            // InternalFortXTrans.g:9758:1: ( ( rule__FieldDecl__InitAssignment_1_3 )? )
            // InternalFortXTrans.g:9759:2: ( rule__FieldDecl__InitAssignment_1_3 )?
            {
             before(grammarAccess.getFieldDeclAccess().getInitAssignment_1_3()); 
            // InternalFortXTrans.g:9760:2: ( rule__FieldDecl__InitAssignment_1_3 )?
            int alt86=2;
            alt86 = dfa86.predict(input);
            switch (alt86) {
                case 1 :
                    // InternalFortXTrans.g:9760:3: rule__FieldDecl__InitAssignment_1_3
                    {
                    pushFollow(FOLLOW_2);
                    rule__FieldDecl__InitAssignment_1_3();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getFieldDeclAccess().getInitAssignment_1_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_1__3__Impl"


    // $ANTLR start "rule__FieldDecl__Group_2__0"
    // InternalFortXTrans.g:9769:1: rule__FieldDecl__Group_2__0 : rule__FieldDecl__Group_2__0__Impl rule__FieldDecl__Group_2__1 ;
    public final void rule__FieldDecl__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9773:1: ( rule__FieldDecl__Group_2__0__Impl rule__FieldDecl__Group_2__1 )
            // InternalFortXTrans.g:9774:2: rule__FieldDecl__Group_2__0__Impl rule__FieldDecl__Group_2__1
            {
            pushFollow(FOLLOW_77);
            rule__FieldDecl__Group_2__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__FieldDecl__Group_2__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_2__0"


    // $ANTLR start "rule__FieldDecl__Group_2__0__Impl"
    // InternalFortXTrans.g:9781:1: rule__FieldDecl__Group_2__0__Impl : ( ( rule__FieldDecl__PriAssignment_2_0 )? ) ;
    public final void rule__FieldDecl__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9785:1: ( ( ( rule__FieldDecl__PriAssignment_2_0 )? ) )
            // InternalFortXTrans.g:9786:1: ( ( rule__FieldDecl__PriAssignment_2_0 )? )
            {
            // InternalFortXTrans.g:9786:1: ( ( rule__FieldDecl__PriAssignment_2_0 )? )
            // InternalFortXTrans.g:9787:2: ( rule__FieldDecl__PriAssignment_2_0 )?
            {
             before(grammarAccess.getFieldDeclAccess().getPriAssignment_2_0()); 
            // InternalFortXTrans.g:9788:2: ( rule__FieldDecl__PriAssignment_2_0 )?
            int alt87=2;
            int LA87_0 = input.LA(1);

            if ( (LA87_0==62) ) {
                alt87=1;
            }
            switch (alt87) {
                case 1 :
                    // InternalFortXTrans.g:9788:3: rule__FieldDecl__PriAssignment_2_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__FieldDecl__PriAssignment_2_0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getFieldDeclAccess().getPriAssignment_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_2__0__Impl"


    // $ANTLR start "rule__FieldDecl__Group_2__1"
    // InternalFortXTrans.g:9796:1: rule__FieldDecl__Group_2__1 : rule__FieldDecl__Group_2__1__Impl rule__FieldDecl__Group_2__2 ;
    public final void rule__FieldDecl__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9800:1: ( rule__FieldDecl__Group_2__1__Impl rule__FieldDecl__Group_2__2 )
            // InternalFortXTrans.g:9801:2: rule__FieldDecl__Group_2__1__Impl rule__FieldDecl__Group_2__2
            {
            pushFollow(FOLLOW_77);
            rule__FieldDecl__Group_2__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__FieldDecl__Group_2__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_2__1"


    // $ANTLR start "rule__FieldDecl__Group_2__1__Impl"
    // InternalFortXTrans.g:9808:1: rule__FieldDecl__Group_2__1__Impl : ( ( rule__FieldDecl__MutAssignment_2_1 )? ) ;
    public final void rule__FieldDecl__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9812:1: ( ( ( rule__FieldDecl__MutAssignment_2_1 )? ) )
            // InternalFortXTrans.g:9813:1: ( ( rule__FieldDecl__MutAssignment_2_1 )? )
            {
            // InternalFortXTrans.g:9813:1: ( ( rule__FieldDecl__MutAssignment_2_1 )? )
            // InternalFortXTrans.g:9814:2: ( rule__FieldDecl__MutAssignment_2_1 )?
            {
             before(grammarAccess.getFieldDeclAccess().getMutAssignment_2_1()); 
            // InternalFortXTrans.g:9815:2: ( rule__FieldDecl__MutAssignment_2_1 )?
            int alt88=2;
            int LA88_0 = input.LA(1);

            if ( (LA88_0==73) ) {
                alt88=1;
            }
            switch (alt88) {
                case 1 :
                    // InternalFortXTrans.g:9815:3: rule__FieldDecl__MutAssignment_2_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__FieldDecl__MutAssignment_2_1();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getFieldDeclAccess().getMutAssignment_2_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_2__1__Impl"


    // $ANTLR start "rule__FieldDecl__Group_2__2"
    // InternalFortXTrans.g:9823:1: rule__FieldDecl__Group_2__2 : rule__FieldDecl__Group_2__2__Impl rule__FieldDecl__Group_2__3 ;
    public final void rule__FieldDecl__Group_2__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9827:1: ( rule__FieldDecl__Group_2__2__Impl rule__FieldDecl__Group_2__3 )
            // InternalFortXTrans.g:9828:2: rule__FieldDecl__Group_2__2__Impl rule__FieldDecl__Group_2__3
            {
            pushFollow(FOLLOW_26);
            rule__FieldDecl__Group_2__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__FieldDecl__Group_2__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_2__2"


    // $ANTLR start "rule__FieldDecl__Group_2__2__Impl"
    // InternalFortXTrans.g:9835:1: rule__FieldDecl__Group_2__2__Impl : ( ( rule__FieldDecl__IdtupAssignment_2_2 ) ) ;
    public final void rule__FieldDecl__Group_2__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9839:1: ( ( ( rule__FieldDecl__IdtupAssignment_2_2 ) ) )
            // InternalFortXTrans.g:9840:1: ( ( rule__FieldDecl__IdtupAssignment_2_2 ) )
            {
            // InternalFortXTrans.g:9840:1: ( ( rule__FieldDecl__IdtupAssignment_2_2 ) )
            // InternalFortXTrans.g:9841:2: ( rule__FieldDecl__IdtupAssignment_2_2 )
            {
             before(grammarAccess.getFieldDeclAccess().getIdtupAssignment_2_2()); 
            // InternalFortXTrans.g:9842:2: ( rule__FieldDecl__IdtupAssignment_2_2 )
            // InternalFortXTrans.g:9842:3: rule__FieldDecl__IdtupAssignment_2_2
            {
            pushFollow(FOLLOW_2);
            rule__FieldDecl__IdtupAssignment_2_2();

            state._fsp--;


            }

             after(grammarAccess.getFieldDeclAccess().getIdtupAssignment_2_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_2__2__Impl"


    // $ANTLR start "rule__FieldDecl__Group_2__3"
    // InternalFortXTrans.g:9850:1: rule__FieldDecl__Group_2__3 : rule__FieldDecl__Group_2__3__Impl rule__FieldDecl__Group_2__4 ;
    public final void rule__FieldDecl__Group_2__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9854:1: ( rule__FieldDecl__Group_2__3__Impl rule__FieldDecl__Group_2__4 )
            // InternalFortXTrans.g:9855:2: rule__FieldDecl__Group_2__3__Impl rule__FieldDecl__Group_2__4
            {
            pushFollow(FOLLOW_5);
            rule__FieldDecl__Group_2__3__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__FieldDecl__Group_2__4();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_2__3"


    // $ANTLR start "rule__FieldDecl__Group_2__3__Impl"
    // InternalFortXTrans.g:9862:1: rule__FieldDecl__Group_2__3__Impl : ( ':' ) ;
    public final void rule__FieldDecl__Group_2__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9866:1: ( ( ':' ) )
            // InternalFortXTrans.g:9867:1: ( ':' )
            {
            // InternalFortXTrans.g:9867:1: ( ':' )
            // InternalFortXTrans.g:9868:2: ':'
            {
             before(grammarAccess.getFieldDeclAccess().getColonKeyword_2_3()); 
            match(input,35,FOLLOW_2); 
             after(grammarAccess.getFieldDeclAccess().getColonKeyword_2_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_2__3__Impl"


    // $ANTLR start "rule__FieldDecl__Group_2__4"
    // InternalFortXTrans.g:9877:1: rule__FieldDecl__Group_2__4 : rule__FieldDecl__Group_2__4__Impl rule__FieldDecl__Group_2__5 ;
    public final void rule__FieldDecl__Group_2__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9881:1: ( rule__FieldDecl__Group_2__4__Impl rule__FieldDecl__Group_2__5 )
            // InternalFortXTrans.g:9882:2: rule__FieldDecl__Group_2__4__Impl rule__FieldDecl__Group_2__5
            {
            pushFollow(FOLLOW_17);
            rule__FieldDecl__Group_2__4__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__FieldDecl__Group_2__5();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_2__4"


    // $ANTLR start "rule__FieldDecl__Group_2__4__Impl"
    // InternalFortXTrans.g:9889:1: rule__FieldDecl__Group_2__4__Impl : ( ( rule__FieldDecl__TypeAssignment_2_4 ) ) ;
    public final void rule__FieldDecl__Group_2__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9893:1: ( ( ( rule__FieldDecl__TypeAssignment_2_4 ) ) )
            // InternalFortXTrans.g:9894:1: ( ( rule__FieldDecl__TypeAssignment_2_4 ) )
            {
            // InternalFortXTrans.g:9894:1: ( ( rule__FieldDecl__TypeAssignment_2_4 ) )
            // InternalFortXTrans.g:9895:2: ( rule__FieldDecl__TypeAssignment_2_4 )
            {
             before(grammarAccess.getFieldDeclAccess().getTypeAssignment_2_4()); 
            // InternalFortXTrans.g:9896:2: ( rule__FieldDecl__TypeAssignment_2_4 )
            // InternalFortXTrans.g:9896:3: rule__FieldDecl__TypeAssignment_2_4
            {
            pushFollow(FOLLOW_2);
            rule__FieldDecl__TypeAssignment_2_4();

            state._fsp--;


            }

             after(grammarAccess.getFieldDeclAccess().getTypeAssignment_2_4()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_2__4__Impl"


    // $ANTLR start "rule__FieldDecl__Group_2__5"
    // InternalFortXTrans.g:9904:1: rule__FieldDecl__Group_2__5 : rule__FieldDecl__Group_2__5__Impl rule__FieldDecl__Group_2__6 ;
    public final void rule__FieldDecl__Group_2__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9908:1: ( rule__FieldDecl__Group_2__5__Impl rule__FieldDecl__Group_2__6 )
            // InternalFortXTrans.g:9909:2: rule__FieldDecl__Group_2__5__Impl rule__FieldDecl__Group_2__6
            {
            pushFollow(FOLLOW_78);
            rule__FieldDecl__Group_2__5__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__FieldDecl__Group_2__6();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_2__5"


    // $ANTLR start "rule__FieldDecl__Group_2__5__Impl"
    // InternalFortXTrans.g:9916:1: rule__FieldDecl__Group_2__5__Impl : ( RULE_DOTS ) ;
    public final void rule__FieldDecl__Group_2__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9920:1: ( ( RULE_DOTS ) )
            // InternalFortXTrans.g:9921:1: ( RULE_DOTS )
            {
            // InternalFortXTrans.g:9921:1: ( RULE_DOTS )
            // InternalFortXTrans.g:9922:2: RULE_DOTS
            {
             before(grammarAccess.getFieldDeclAccess().getDOTSTerminalRuleCall_2_5()); 
            match(input,RULE_DOTS,FOLLOW_2); 
             after(grammarAccess.getFieldDeclAccess().getDOTSTerminalRuleCall_2_5()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_2__5__Impl"


    // $ANTLR start "rule__FieldDecl__Group_2__6"
    // InternalFortXTrans.g:9931:1: rule__FieldDecl__Group_2__6 : rule__FieldDecl__Group_2__6__Impl ;
    public final void rule__FieldDecl__Group_2__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9935:1: ( rule__FieldDecl__Group_2__6__Impl )
            // InternalFortXTrans.g:9936:2: rule__FieldDecl__Group_2__6__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FieldDecl__Group_2__6__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_2__6"


    // $ANTLR start "rule__FieldDecl__Group_2__6__Impl"
    // InternalFortXTrans.g:9942:1: rule__FieldDecl__Group_2__6__Impl : ( ( rule__FieldDecl__Group_2_6__0 )? ) ;
    public final void rule__FieldDecl__Group_2__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9946:1: ( ( ( rule__FieldDecl__Group_2_6__0 )? ) )
            // InternalFortXTrans.g:9947:1: ( ( rule__FieldDecl__Group_2_6__0 )? )
            {
            // InternalFortXTrans.g:9947:1: ( ( rule__FieldDecl__Group_2_6__0 )? )
            // InternalFortXTrans.g:9948:2: ( rule__FieldDecl__Group_2_6__0 )?
            {
             before(grammarAccess.getFieldDeclAccess().getGroup_2_6()); 
            // InternalFortXTrans.g:9949:2: ( rule__FieldDecl__Group_2_6__0 )?
            int alt89=2;
            int LA89_0 = input.LA(1);

            if ( (LA89_0==58) ) {
                alt89=1;
            }
            switch (alt89) {
                case 1 :
                    // InternalFortXTrans.g:9949:3: rule__FieldDecl__Group_2_6__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__FieldDecl__Group_2_6__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getFieldDeclAccess().getGroup_2_6()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_2__6__Impl"


    // $ANTLR start "rule__FieldDecl__Group_2_6__0"
    // InternalFortXTrans.g:9958:1: rule__FieldDecl__Group_2_6__0 : rule__FieldDecl__Group_2_6__0__Impl rule__FieldDecl__Group_2_6__1 ;
    public final void rule__FieldDecl__Group_2_6__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9962:1: ( rule__FieldDecl__Group_2_6__0__Impl rule__FieldDecl__Group_2_6__1 )
            // InternalFortXTrans.g:9963:2: rule__FieldDecl__Group_2_6__0__Impl rule__FieldDecl__Group_2_6__1
            {
            pushFollow(FOLLOW_32);
            rule__FieldDecl__Group_2_6__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__FieldDecl__Group_2_6__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_2_6__0"


    // $ANTLR start "rule__FieldDecl__Group_2_6__0__Impl"
    // InternalFortXTrans.g:9970:1: rule__FieldDecl__Group_2_6__0__Impl : ( '=' ) ;
    public final void rule__FieldDecl__Group_2_6__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9974:1: ( ( '=' ) )
            // InternalFortXTrans.g:9975:1: ( '=' )
            {
            // InternalFortXTrans.g:9975:1: ( '=' )
            // InternalFortXTrans.g:9976:2: '='
            {
             before(grammarAccess.getFieldDeclAccess().getEqualsSignKeyword_2_6_0()); 
            match(input,58,FOLLOW_2); 
             after(grammarAccess.getFieldDeclAccess().getEqualsSignKeyword_2_6_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_2_6__0__Impl"


    // $ANTLR start "rule__FieldDecl__Group_2_6__1"
    // InternalFortXTrans.g:9985:1: rule__FieldDecl__Group_2_6__1 : rule__FieldDecl__Group_2_6__1__Impl ;
    public final void rule__FieldDecl__Group_2_6__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9989:1: ( rule__FieldDecl__Group_2_6__1__Impl )
            // InternalFortXTrans.g:9990:2: rule__FieldDecl__Group_2_6__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FieldDecl__Group_2_6__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_2_6__1"


    // $ANTLR start "rule__FieldDecl__Group_2_6__1__Impl"
    // InternalFortXTrans.g:9996:1: rule__FieldDecl__Group_2_6__1__Impl : ( ( rule__FieldDecl__InitAssignment_2_6_1 ) ) ;
    public final void rule__FieldDecl__Group_2_6__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10000:1: ( ( ( rule__FieldDecl__InitAssignment_2_6_1 ) ) )
            // InternalFortXTrans.g:10001:1: ( ( rule__FieldDecl__InitAssignment_2_6_1 ) )
            {
            // InternalFortXTrans.g:10001:1: ( ( rule__FieldDecl__InitAssignment_2_6_1 ) )
            // InternalFortXTrans.g:10002:2: ( rule__FieldDecl__InitAssignment_2_6_1 )
            {
             before(grammarAccess.getFieldDeclAccess().getInitAssignment_2_6_1()); 
            // InternalFortXTrans.g:10003:2: ( rule__FieldDecl__InitAssignment_2_6_1 )
            // InternalFortXTrans.g:10003:3: rule__FieldDecl__InitAssignment_2_6_1
            {
            pushFollow(FOLLOW_2);
            rule__FieldDecl__InitAssignment_2_6_1();

            state._fsp--;


            }

             after(grammarAccess.getFieldDeclAccess().getInitAssignment_2_6_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_2_6__1__Impl"


    // $ANTLR start "rule__FieldDecl__Group_3__0"
    // InternalFortXTrans.g:10012:1: rule__FieldDecl__Group_3__0 : rule__FieldDecl__Group_3__0__Impl rule__FieldDecl__Group_3__1 ;
    public final void rule__FieldDecl__Group_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10016:1: ( rule__FieldDecl__Group_3__0__Impl rule__FieldDecl__Group_3__1 )
            // InternalFortXTrans.g:10017:2: rule__FieldDecl__Group_3__0__Impl rule__FieldDecl__Group_3__1
            {
            pushFollow(FOLLOW_79);
            rule__FieldDecl__Group_3__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__FieldDecl__Group_3__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_3__0"


    // $ANTLR start "rule__FieldDecl__Group_3__0__Impl"
    // InternalFortXTrans.g:10024:1: rule__FieldDecl__Group_3__0__Impl : ( ( rule__FieldDecl__PriAssignment_3_0 )? ) ;
    public final void rule__FieldDecl__Group_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10028:1: ( ( ( rule__FieldDecl__PriAssignment_3_0 )? ) )
            // InternalFortXTrans.g:10029:1: ( ( rule__FieldDecl__PriAssignment_3_0 )? )
            {
            // InternalFortXTrans.g:10029:1: ( ( rule__FieldDecl__PriAssignment_3_0 )? )
            // InternalFortXTrans.g:10030:2: ( rule__FieldDecl__PriAssignment_3_0 )?
            {
             before(grammarAccess.getFieldDeclAccess().getPriAssignment_3_0()); 
            // InternalFortXTrans.g:10031:2: ( rule__FieldDecl__PriAssignment_3_0 )?
            int alt90=2;
            int LA90_0 = input.LA(1);

            if ( (LA90_0==62) ) {
                alt90=1;
            }
            switch (alt90) {
                case 1 :
                    // InternalFortXTrans.g:10031:3: rule__FieldDecl__PriAssignment_3_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__FieldDecl__PriAssignment_3_0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getFieldDeclAccess().getPriAssignment_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_3__0__Impl"


    // $ANTLR start "rule__FieldDecl__Group_3__1"
    // InternalFortXTrans.g:10039:1: rule__FieldDecl__Group_3__1 : rule__FieldDecl__Group_3__1__Impl rule__FieldDecl__Group_3__2 ;
    public final void rule__FieldDecl__Group_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10043:1: ( rule__FieldDecl__Group_3__1__Impl rule__FieldDecl__Group_3__2 )
            // InternalFortXTrans.g:10044:2: rule__FieldDecl__Group_3__1__Impl rule__FieldDecl__Group_3__2
            {
            pushFollow(FOLLOW_79);
            rule__FieldDecl__Group_3__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__FieldDecl__Group_3__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_3__1"


    // $ANTLR start "rule__FieldDecl__Group_3__1__Impl"
    // InternalFortXTrans.g:10051:1: rule__FieldDecl__Group_3__1__Impl : ( ( rule__FieldDecl__MutAssignment_3_1 )? ) ;
    public final void rule__FieldDecl__Group_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10055:1: ( ( ( rule__FieldDecl__MutAssignment_3_1 )? ) )
            // InternalFortXTrans.g:10056:1: ( ( rule__FieldDecl__MutAssignment_3_1 )? )
            {
            // InternalFortXTrans.g:10056:1: ( ( rule__FieldDecl__MutAssignment_3_1 )? )
            // InternalFortXTrans.g:10057:2: ( rule__FieldDecl__MutAssignment_3_1 )?
            {
             before(grammarAccess.getFieldDeclAccess().getMutAssignment_3_1()); 
            // InternalFortXTrans.g:10058:2: ( rule__FieldDecl__MutAssignment_3_1 )?
            int alt91=2;
            int LA91_0 = input.LA(1);

            if ( (LA91_0==73) ) {
                alt91=1;
            }
            switch (alt91) {
                case 1 :
                    // InternalFortXTrans.g:10058:3: rule__FieldDecl__MutAssignment_3_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__FieldDecl__MutAssignment_3_1();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getFieldDeclAccess().getMutAssignment_3_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_3__1__Impl"


    // $ANTLR start "rule__FieldDecl__Group_3__2"
    // InternalFortXTrans.g:10066:1: rule__FieldDecl__Group_3__2 : rule__FieldDecl__Group_3__2__Impl rule__FieldDecl__Group_3__3 ;
    public final void rule__FieldDecl__Group_3__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10070:1: ( rule__FieldDecl__Group_3__2__Impl rule__FieldDecl__Group_3__3 )
            // InternalFortXTrans.g:10071:2: rule__FieldDecl__Group_3__2__Impl rule__FieldDecl__Group_3__3
            {
            pushFollow(FOLLOW_26);
            rule__FieldDecl__Group_3__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__FieldDecl__Group_3__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_3__2"


    // $ANTLR start "rule__FieldDecl__Group_3__2__Impl"
    // InternalFortXTrans.g:10078:1: rule__FieldDecl__Group_3__2__Impl : ( ( rule__FieldDecl__IdtupAssignment_3_2 ) ) ;
    public final void rule__FieldDecl__Group_3__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10082:1: ( ( ( rule__FieldDecl__IdtupAssignment_3_2 ) ) )
            // InternalFortXTrans.g:10083:1: ( ( rule__FieldDecl__IdtupAssignment_3_2 ) )
            {
            // InternalFortXTrans.g:10083:1: ( ( rule__FieldDecl__IdtupAssignment_3_2 ) )
            // InternalFortXTrans.g:10084:2: ( rule__FieldDecl__IdtupAssignment_3_2 )
            {
             before(grammarAccess.getFieldDeclAccess().getIdtupAssignment_3_2()); 
            // InternalFortXTrans.g:10085:2: ( rule__FieldDecl__IdtupAssignment_3_2 )
            // InternalFortXTrans.g:10085:3: rule__FieldDecl__IdtupAssignment_3_2
            {
            pushFollow(FOLLOW_2);
            rule__FieldDecl__IdtupAssignment_3_2();

            state._fsp--;


            }

             after(grammarAccess.getFieldDeclAccess().getIdtupAssignment_3_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_3__2__Impl"


    // $ANTLR start "rule__FieldDecl__Group_3__3"
    // InternalFortXTrans.g:10093:1: rule__FieldDecl__Group_3__3 : rule__FieldDecl__Group_3__3__Impl rule__FieldDecl__Group_3__4 ;
    public final void rule__FieldDecl__Group_3__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10097:1: ( rule__FieldDecl__Group_3__3__Impl rule__FieldDecl__Group_3__4 )
            // InternalFortXTrans.g:10098:2: rule__FieldDecl__Group_3__3__Impl rule__FieldDecl__Group_3__4
            {
            pushFollow(FOLLOW_27);
            rule__FieldDecl__Group_3__3__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__FieldDecl__Group_3__4();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_3__3"


    // $ANTLR start "rule__FieldDecl__Group_3__3__Impl"
    // InternalFortXTrans.g:10105:1: rule__FieldDecl__Group_3__3__Impl : ( ':' ) ;
    public final void rule__FieldDecl__Group_3__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10109:1: ( ( ':' ) )
            // InternalFortXTrans.g:10110:1: ( ':' )
            {
            // InternalFortXTrans.g:10110:1: ( ':' )
            // InternalFortXTrans.g:10111:2: ':'
            {
             before(grammarAccess.getFieldDeclAccess().getColonKeyword_3_3()); 
            match(input,35,FOLLOW_2); 
             after(grammarAccess.getFieldDeclAccess().getColonKeyword_3_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_3__3__Impl"


    // $ANTLR start "rule__FieldDecl__Group_3__4"
    // InternalFortXTrans.g:10120:1: rule__FieldDecl__Group_3__4 : rule__FieldDecl__Group_3__4__Impl rule__FieldDecl__Group_3__5 ;
    public final void rule__FieldDecl__Group_3__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10124:1: ( rule__FieldDecl__Group_3__4__Impl rule__FieldDecl__Group_3__5 )
            // InternalFortXTrans.g:10125:2: rule__FieldDecl__Group_3__4__Impl rule__FieldDecl__Group_3__5
            {
            pushFollow(FOLLOW_78);
            rule__FieldDecl__Group_3__4__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__FieldDecl__Group_3__5();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_3__4"


    // $ANTLR start "rule__FieldDecl__Group_3__4__Impl"
    // InternalFortXTrans.g:10132:1: rule__FieldDecl__Group_3__4__Impl : ( ( rule__FieldDecl__TuptypeAssignment_3_4 ) ) ;
    public final void rule__FieldDecl__Group_3__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10136:1: ( ( ( rule__FieldDecl__TuptypeAssignment_3_4 ) ) )
            // InternalFortXTrans.g:10137:1: ( ( rule__FieldDecl__TuptypeAssignment_3_4 ) )
            {
            // InternalFortXTrans.g:10137:1: ( ( rule__FieldDecl__TuptypeAssignment_3_4 ) )
            // InternalFortXTrans.g:10138:2: ( rule__FieldDecl__TuptypeAssignment_3_4 )
            {
             before(grammarAccess.getFieldDeclAccess().getTuptypeAssignment_3_4()); 
            // InternalFortXTrans.g:10139:2: ( rule__FieldDecl__TuptypeAssignment_3_4 )
            // InternalFortXTrans.g:10139:3: rule__FieldDecl__TuptypeAssignment_3_4
            {
            pushFollow(FOLLOW_2);
            rule__FieldDecl__TuptypeAssignment_3_4();

            state._fsp--;


            }

             after(grammarAccess.getFieldDeclAccess().getTuptypeAssignment_3_4()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_3__4__Impl"


    // $ANTLR start "rule__FieldDecl__Group_3__5"
    // InternalFortXTrans.g:10147:1: rule__FieldDecl__Group_3__5 : rule__FieldDecl__Group_3__5__Impl ;
    public final void rule__FieldDecl__Group_3__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10151:1: ( rule__FieldDecl__Group_3__5__Impl )
            // InternalFortXTrans.g:10152:2: rule__FieldDecl__Group_3__5__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FieldDecl__Group_3__5__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_3__5"


    // $ANTLR start "rule__FieldDecl__Group_3__5__Impl"
    // InternalFortXTrans.g:10158:1: rule__FieldDecl__Group_3__5__Impl : ( ( rule__FieldDecl__Group_3_5__0 )? ) ;
    public final void rule__FieldDecl__Group_3__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10162:1: ( ( ( rule__FieldDecl__Group_3_5__0 )? ) )
            // InternalFortXTrans.g:10163:1: ( ( rule__FieldDecl__Group_3_5__0 )? )
            {
            // InternalFortXTrans.g:10163:1: ( ( rule__FieldDecl__Group_3_5__0 )? )
            // InternalFortXTrans.g:10164:2: ( rule__FieldDecl__Group_3_5__0 )?
            {
             before(grammarAccess.getFieldDeclAccess().getGroup_3_5()); 
            // InternalFortXTrans.g:10165:2: ( rule__FieldDecl__Group_3_5__0 )?
            int alt92=2;
            int LA92_0 = input.LA(1);

            if ( (LA92_0==58) ) {
                alt92=1;
            }
            switch (alt92) {
                case 1 :
                    // InternalFortXTrans.g:10165:3: rule__FieldDecl__Group_3_5__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__FieldDecl__Group_3_5__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getFieldDeclAccess().getGroup_3_5()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_3__5__Impl"


    // $ANTLR start "rule__FieldDecl__Group_3_5__0"
    // InternalFortXTrans.g:10174:1: rule__FieldDecl__Group_3_5__0 : rule__FieldDecl__Group_3_5__0__Impl rule__FieldDecl__Group_3_5__1 ;
    public final void rule__FieldDecl__Group_3_5__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10178:1: ( rule__FieldDecl__Group_3_5__0__Impl rule__FieldDecl__Group_3_5__1 )
            // InternalFortXTrans.g:10179:2: rule__FieldDecl__Group_3_5__0__Impl rule__FieldDecl__Group_3_5__1
            {
            pushFollow(FOLLOW_32);
            rule__FieldDecl__Group_3_5__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__FieldDecl__Group_3_5__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_3_5__0"


    // $ANTLR start "rule__FieldDecl__Group_3_5__0__Impl"
    // InternalFortXTrans.g:10186:1: rule__FieldDecl__Group_3_5__0__Impl : ( '=' ) ;
    public final void rule__FieldDecl__Group_3_5__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10190:1: ( ( '=' ) )
            // InternalFortXTrans.g:10191:1: ( '=' )
            {
            // InternalFortXTrans.g:10191:1: ( '=' )
            // InternalFortXTrans.g:10192:2: '='
            {
             before(grammarAccess.getFieldDeclAccess().getEqualsSignKeyword_3_5_0()); 
            match(input,58,FOLLOW_2); 
             after(grammarAccess.getFieldDeclAccess().getEqualsSignKeyword_3_5_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_3_5__0__Impl"


    // $ANTLR start "rule__FieldDecl__Group_3_5__1"
    // InternalFortXTrans.g:10201:1: rule__FieldDecl__Group_3_5__1 : rule__FieldDecl__Group_3_5__1__Impl ;
    public final void rule__FieldDecl__Group_3_5__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10205:1: ( rule__FieldDecl__Group_3_5__1__Impl )
            // InternalFortXTrans.g:10206:2: rule__FieldDecl__Group_3_5__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FieldDecl__Group_3_5__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_3_5__1"


    // $ANTLR start "rule__FieldDecl__Group_3_5__1__Impl"
    // InternalFortXTrans.g:10212:1: rule__FieldDecl__Group_3_5__1__Impl : ( ( rule__FieldDecl__InitAssignment_3_5_1 ) ) ;
    public final void rule__FieldDecl__Group_3_5__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10216:1: ( ( ( rule__FieldDecl__InitAssignment_3_5_1 ) ) )
            // InternalFortXTrans.g:10217:1: ( ( rule__FieldDecl__InitAssignment_3_5_1 ) )
            {
            // InternalFortXTrans.g:10217:1: ( ( rule__FieldDecl__InitAssignment_3_5_1 ) )
            // InternalFortXTrans.g:10218:2: ( rule__FieldDecl__InitAssignment_3_5_1 )
            {
             before(grammarAccess.getFieldDeclAccess().getInitAssignment_3_5_1()); 
            // InternalFortXTrans.g:10219:2: ( rule__FieldDecl__InitAssignment_3_5_1 )
            // InternalFortXTrans.g:10219:3: rule__FieldDecl__InitAssignment_3_5_1
            {
            pushFollow(FOLLOW_2);
            rule__FieldDecl__InitAssignment_3_5_1();

            state._fsp--;


            }

             after(grammarAccess.getFieldDeclAccess().getInitAssignment_3_5_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_3_5__1__Impl"


    // $ANTLR start "rule__NoNewlineVarWTypes__Group_0__0"
    // InternalFortXTrans.g:10228:1: rule__NoNewlineVarWTypes__Group_0__0 : rule__NoNewlineVarWTypes__Group_0__0__Impl rule__NoNewlineVarWTypes__Group_0__1 ;
    public final void rule__NoNewlineVarWTypes__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10232:1: ( rule__NoNewlineVarWTypes__Group_0__0__Impl rule__NoNewlineVarWTypes__Group_0__1 )
            // InternalFortXTrans.g:10233:2: rule__NoNewlineVarWTypes__Group_0__0__Impl rule__NoNewlineVarWTypes__Group_0__1
            {
            pushFollow(FOLLOW_62);
            rule__NoNewlineVarWTypes__Group_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__NoNewlineVarWTypes__Group_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NoNewlineVarWTypes__Group_0__0"


    // $ANTLR start "rule__NoNewlineVarWTypes__Group_0__0__Impl"
    // InternalFortXTrans.g:10240:1: rule__NoNewlineVarWTypes__Group_0__0__Impl : ( ( rule__NoNewlineVarWTypes__SingleAssignment_0_0 ) ) ;
    public final void rule__NoNewlineVarWTypes__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10244:1: ( ( ( rule__NoNewlineVarWTypes__SingleAssignment_0_0 ) ) )
            // InternalFortXTrans.g:10245:1: ( ( rule__NoNewlineVarWTypes__SingleAssignment_0_0 ) )
            {
            // InternalFortXTrans.g:10245:1: ( ( rule__NoNewlineVarWTypes__SingleAssignment_0_0 ) )
            // InternalFortXTrans.g:10246:2: ( rule__NoNewlineVarWTypes__SingleAssignment_0_0 )
            {
             before(grammarAccess.getNoNewlineVarWTypesAccess().getSingleAssignment_0_0()); 
            // InternalFortXTrans.g:10247:2: ( rule__NoNewlineVarWTypes__SingleAssignment_0_0 )
            // InternalFortXTrans.g:10247:3: rule__NoNewlineVarWTypes__SingleAssignment_0_0
            {
            pushFollow(FOLLOW_2);
            rule__NoNewlineVarWTypes__SingleAssignment_0_0();

            state._fsp--;


            }

             after(grammarAccess.getNoNewlineVarWTypesAccess().getSingleAssignment_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NoNewlineVarWTypes__Group_0__0__Impl"


    // $ANTLR start "rule__NoNewlineVarWTypes__Group_0__1"
    // InternalFortXTrans.g:10255:1: rule__NoNewlineVarWTypes__Group_0__1 : rule__NoNewlineVarWTypes__Group_0__1__Impl ;
    public final void rule__NoNewlineVarWTypes__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10259:1: ( rule__NoNewlineVarWTypes__Group_0__1__Impl )
            // InternalFortXTrans.g:10260:2: rule__NoNewlineVarWTypes__Group_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__NoNewlineVarWTypes__Group_0__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NoNewlineVarWTypes__Group_0__1"


    // $ANTLR start "rule__NoNewlineVarWTypes__Group_0__1__Impl"
    // InternalFortXTrans.g:10266:1: rule__NoNewlineVarWTypes__Group_0__1__Impl : ( ( rule__NoNewlineVarWTypes__Group_0_1__0 )? ) ;
    public final void rule__NoNewlineVarWTypes__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10270:1: ( ( ( rule__NoNewlineVarWTypes__Group_0_1__0 )? ) )
            // InternalFortXTrans.g:10271:1: ( ( rule__NoNewlineVarWTypes__Group_0_1__0 )? )
            {
            // InternalFortXTrans.g:10271:1: ( ( rule__NoNewlineVarWTypes__Group_0_1__0 )? )
            // InternalFortXTrans.g:10272:2: ( rule__NoNewlineVarWTypes__Group_0_1__0 )?
            {
             before(grammarAccess.getNoNewlineVarWTypesAccess().getGroup_0_1()); 
            // InternalFortXTrans.g:10273:2: ( rule__NoNewlineVarWTypes__Group_0_1__0 )?
            int alt93=2;
            int LA93_0 = input.LA(1);

            if ( (LA93_0==47) ) {
                alt93=1;
            }
            switch (alt93) {
                case 1 :
                    // InternalFortXTrans.g:10273:3: rule__NoNewlineVarWTypes__Group_0_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__NoNewlineVarWTypes__Group_0_1__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getNoNewlineVarWTypesAccess().getGroup_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NoNewlineVarWTypes__Group_0__1__Impl"


    // $ANTLR start "rule__NoNewlineVarWTypes__Group_0_1__0"
    // InternalFortXTrans.g:10282:1: rule__NoNewlineVarWTypes__Group_0_1__0 : rule__NoNewlineVarWTypes__Group_0_1__0__Impl rule__NoNewlineVarWTypes__Group_0_1__1 ;
    public final void rule__NoNewlineVarWTypes__Group_0_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10286:1: ( rule__NoNewlineVarWTypes__Group_0_1__0__Impl rule__NoNewlineVarWTypes__Group_0_1__1 )
            // InternalFortXTrans.g:10287:2: rule__NoNewlineVarWTypes__Group_0_1__0__Impl rule__NoNewlineVarWTypes__Group_0_1__1
            {
            pushFollow(FOLLOW_32);
            rule__NoNewlineVarWTypes__Group_0_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__NoNewlineVarWTypes__Group_0_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NoNewlineVarWTypes__Group_0_1__0"


    // $ANTLR start "rule__NoNewlineVarWTypes__Group_0_1__0__Impl"
    // InternalFortXTrans.g:10294:1: rule__NoNewlineVarWTypes__Group_0_1__0__Impl : ( '[' ) ;
    public final void rule__NoNewlineVarWTypes__Group_0_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10298:1: ( ( '[' ) )
            // InternalFortXTrans.g:10299:1: ( '[' )
            {
            // InternalFortXTrans.g:10299:1: ( '[' )
            // InternalFortXTrans.g:10300:2: '['
            {
             before(grammarAccess.getNoNewlineVarWTypesAccess().getLeftSquareBracketKeyword_0_1_0()); 
            match(input,47,FOLLOW_2); 
             after(grammarAccess.getNoNewlineVarWTypesAccess().getLeftSquareBracketKeyword_0_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NoNewlineVarWTypes__Group_0_1__0__Impl"


    // $ANTLR start "rule__NoNewlineVarWTypes__Group_0_1__1"
    // InternalFortXTrans.g:10309:1: rule__NoNewlineVarWTypes__Group_0_1__1 : rule__NoNewlineVarWTypes__Group_0_1__1__Impl rule__NoNewlineVarWTypes__Group_0_1__2 ;
    public final void rule__NoNewlineVarWTypes__Group_0_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10313:1: ( rule__NoNewlineVarWTypes__Group_0_1__1__Impl rule__NoNewlineVarWTypes__Group_0_1__2 )
            // InternalFortXTrans.g:10314:2: rule__NoNewlineVarWTypes__Group_0_1__1__Impl rule__NoNewlineVarWTypes__Group_0_1__2
            {
            pushFollow(FOLLOW_80);
            rule__NoNewlineVarWTypes__Group_0_1__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__NoNewlineVarWTypes__Group_0_1__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NoNewlineVarWTypes__Group_0_1__1"


    // $ANTLR start "rule__NoNewlineVarWTypes__Group_0_1__1__Impl"
    // InternalFortXTrans.g:10321:1: rule__NoNewlineVarWTypes__Group_0_1__1__Impl : ( ( rule__NoNewlineVarWTypes__ArrsizeAssignment_0_1_1 ) ) ;
    public final void rule__NoNewlineVarWTypes__Group_0_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10325:1: ( ( ( rule__NoNewlineVarWTypes__ArrsizeAssignment_0_1_1 ) ) )
            // InternalFortXTrans.g:10326:1: ( ( rule__NoNewlineVarWTypes__ArrsizeAssignment_0_1_1 ) )
            {
            // InternalFortXTrans.g:10326:1: ( ( rule__NoNewlineVarWTypes__ArrsizeAssignment_0_1_1 ) )
            // InternalFortXTrans.g:10327:2: ( rule__NoNewlineVarWTypes__ArrsizeAssignment_0_1_1 )
            {
             before(grammarAccess.getNoNewlineVarWTypesAccess().getArrsizeAssignment_0_1_1()); 
            // InternalFortXTrans.g:10328:2: ( rule__NoNewlineVarWTypes__ArrsizeAssignment_0_1_1 )
            // InternalFortXTrans.g:10328:3: rule__NoNewlineVarWTypes__ArrsizeAssignment_0_1_1
            {
            pushFollow(FOLLOW_2);
            rule__NoNewlineVarWTypes__ArrsizeAssignment_0_1_1();

            state._fsp--;


            }

             after(grammarAccess.getNoNewlineVarWTypesAccess().getArrsizeAssignment_0_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NoNewlineVarWTypes__Group_0_1__1__Impl"


    // $ANTLR start "rule__NoNewlineVarWTypes__Group_0_1__2"
    // InternalFortXTrans.g:10336:1: rule__NoNewlineVarWTypes__Group_0_1__2 : rule__NoNewlineVarWTypes__Group_0_1__2__Impl ;
    public final void rule__NoNewlineVarWTypes__Group_0_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10340:1: ( rule__NoNewlineVarWTypes__Group_0_1__2__Impl )
            // InternalFortXTrans.g:10341:2: rule__NoNewlineVarWTypes__Group_0_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__NoNewlineVarWTypes__Group_0_1__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NoNewlineVarWTypes__Group_0_1__2"


    // $ANTLR start "rule__NoNewlineVarWTypes__Group_0_1__2__Impl"
    // InternalFortXTrans.g:10347:1: rule__NoNewlineVarWTypes__Group_0_1__2__Impl : ( ']' ) ;
    public final void rule__NoNewlineVarWTypes__Group_0_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10351:1: ( ( ']' ) )
            // InternalFortXTrans.g:10352:1: ( ']' )
            {
            // InternalFortXTrans.g:10352:1: ( ']' )
            // InternalFortXTrans.g:10353:2: ']'
            {
             before(grammarAccess.getNoNewlineVarWTypesAccess().getRightSquareBracketKeyword_0_1_2()); 
            match(input,48,FOLLOW_2); 
             after(grammarAccess.getNoNewlineVarWTypesAccess().getRightSquareBracketKeyword_0_1_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NoNewlineVarWTypes__Group_0_1__2__Impl"


    // $ANTLR start "rule__NoNewlineVarWTypes__Group_1__0"
    // InternalFortXTrans.g:10363:1: rule__NoNewlineVarWTypes__Group_1__0 : rule__NoNewlineVarWTypes__Group_1__0__Impl rule__NoNewlineVarWTypes__Group_1__1 ;
    public final void rule__NoNewlineVarWTypes__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10367:1: ( rule__NoNewlineVarWTypes__Group_1__0__Impl rule__NoNewlineVarWTypes__Group_1__1 )
            // InternalFortXTrans.g:10368:2: rule__NoNewlineVarWTypes__Group_1__0__Impl rule__NoNewlineVarWTypes__Group_1__1
            {
            pushFollow(FOLLOW_5);
            rule__NoNewlineVarWTypes__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__NoNewlineVarWTypes__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NoNewlineVarWTypes__Group_1__0"


    // $ANTLR start "rule__NoNewlineVarWTypes__Group_1__0__Impl"
    // InternalFortXTrans.g:10375:1: rule__NoNewlineVarWTypes__Group_1__0__Impl : ( '(' ) ;
    public final void rule__NoNewlineVarWTypes__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10379:1: ( ( '(' ) )
            // InternalFortXTrans.g:10380:1: ( '(' )
            {
            // InternalFortXTrans.g:10380:1: ( '(' )
            // InternalFortXTrans.g:10381:2: '('
            {
             before(grammarAccess.getNoNewlineVarWTypesAccess().getLeftParenthesisKeyword_1_0()); 
            match(input,33,FOLLOW_2); 
             after(grammarAccess.getNoNewlineVarWTypesAccess().getLeftParenthesisKeyword_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NoNewlineVarWTypes__Group_1__0__Impl"


    // $ANTLR start "rule__NoNewlineVarWTypes__Group_1__1"
    // InternalFortXTrans.g:10390:1: rule__NoNewlineVarWTypes__Group_1__1 : rule__NoNewlineVarWTypes__Group_1__1__Impl rule__NoNewlineVarWTypes__Group_1__2 ;
    public final void rule__NoNewlineVarWTypes__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10394:1: ( rule__NoNewlineVarWTypes__Group_1__1__Impl rule__NoNewlineVarWTypes__Group_1__2 )
            // InternalFortXTrans.g:10395:2: rule__NoNewlineVarWTypes__Group_1__1__Impl rule__NoNewlineVarWTypes__Group_1__2
            {
            pushFollow(FOLLOW_24);
            rule__NoNewlineVarWTypes__Group_1__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__NoNewlineVarWTypes__Group_1__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NoNewlineVarWTypes__Group_1__1"


    // $ANTLR start "rule__NoNewlineVarWTypes__Group_1__1__Impl"
    // InternalFortXTrans.g:10402:1: rule__NoNewlineVarWTypes__Group_1__1__Impl : ( ( rule__NoNewlineVarWTypes__MultipleAssignment_1_1 ) ) ;
    public final void rule__NoNewlineVarWTypes__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10406:1: ( ( ( rule__NoNewlineVarWTypes__MultipleAssignment_1_1 ) ) )
            // InternalFortXTrans.g:10407:1: ( ( rule__NoNewlineVarWTypes__MultipleAssignment_1_1 ) )
            {
            // InternalFortXTrans.g:10407:1: ( ( rule__NoNewlineVarWTypes__MultipleAssignment_1_1 ) )
            // InternalFortXTrans.g:10408:2: ( rule__NoNewlineVarWTypes__MultipleAssignment_1_1 )
            {
             before(grammarAccess.getNoNewlineVarWTypesAccess().getMultipleAssignment_1_1()); 
            // InternalFortXTrans.g:10409:2: ( rule__NoNewlineVarWTypes__MultipleAssignment_1_1 )
            // InternalFortXTrans.g:10409:3: rule__NoNewlineVarWTypes__MultipleAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__NoNewlineVarWTypes__MultipleAssignment_1_1();

            state._fsp--;


            }

             after(grammarAccess.getNoNewlineVarWTypesAccess().getMultipleAssignment_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NoNewlineVarWTypes__Group_1__1__Impl"


    // $ANTLR start "rule__NoNewlineVarWTypes__Group_1__2"
    // InternalFortXTrans.g:10417:1: rule__NoNewlineVarWTypes__Group_1__2 : rule__NoNewlineVarWTypes__Group_1__2__Impl rule__NoNewlineVarWTypes__Group_1__3 ;
    public final void rule__NoNewlineVarWTypes__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10421:1: ( rule__NoNewlineVarWTypes__Group_1__2__Impl rule__NoNewlineVarWTypes__Group_1__3 )
            // InternalFortXTrans.g:10422:2: rule__NoNewlineVarWTypes__Group_1__2__Impl rule__NoNewlineVarWTypes__Group_1__3
            {
            pushFollow(FOLLOW_23);
            rule__NoNewlineVarWTypes__Group_1__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__NoNewlineVarWTypes__Group_1__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NoNewlineVarWTypes__Group_1__2"


    // $ANTLR start "rule__NoNewlineVarWTypes__Group_1__2__Impl"
    // InternalFortXTrans.g:10429:1: rule__NoNewlineVarWTypes__Group_1__2__Impl : ( ( ( rule__NoNewlineVarWTypes__Group_1_2__0 ) ) ( ( rule__NoNewlineVarWTypes__Group_1_2__0 )* ) ) ;
    public final void rule__NoNewlineVarWTypes__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10433:1: ( ( ( ( rule__NoNewlineVarWTypes__Group_1_2__0 ) ) ( ( rule__NoNewlineVarWTypes__Group_1_2__0 )* ) ) )
            // InternalFortXTrans.g:10434:1: ( ( ( rule__NoNewlineVarWTypes__Group_1_2__0 ) ) ( ( rule__NoNewlineVarWTypes__Group_1_2__0 )* ) )
            {
            // InternalFortXTrans.g:10434:1: ( ( ( rule__NoNewlineVarWTypes__Group_1_2__0 ) ) ( ( rule__NoNewlineVarWTypes__Group_1_2__0 )* ) )
            // InternalFortXTrans.g:10435:2: ( ( rule__NoNewlineVarWTypes__Group_1_2__0 ) ) ( ( rule__NoNewlineVarWTypes__Group_1_2__0 )* )
            {
            // InternalFortXTrans.g:10435:2: ( ( rule__NoNewlineVarWTypes__Group_1_2__0 ) )
            // InternalFortXTrans.g:10436:3: ( rule__NoNewlineVarWTypes__Group_1_2__0 )
            {
             before(grammarAccess.getNoNewlineVarWTypesAccess().getGroup_1_2()); 
            // InternalFortXTrans.g:10437:3: ( rule__NoNewlineVarWTypes__Group_1_2__0 )
            // InternalFortXTrans.g:10437:4: rule__NoNewlineVarWTypes__Group_1_2__0
            {
            pushFollow(FOLLOW_15);
            rule__NoNewlineVarWTypes__Group_1_2__0();

            state._fsp--;


            }

             after(grammarAccess.getNoNewlineVarWTypesAccess().getGroup_1_2()); 

            }

            // InternalFortXTrans.g:10440:2: ( ( rule__NoNewlineVarWTypes__Group_1_2__0 )* )
            // InternalFortXTrans.g:10441:3: ( rule__NoNewlineVarWTypes__Group_1_2__0 )*
            {
             before(grammarAccess.getNoNewlineVarWTypesAccess().getGroup_1_2()); 
            // InternalFortXTrans.g:10442:3: ( rule__NoNewlineVarWTypes__Group_1_2__0 )*
            loop94:
            do {
                int alt94=2;
                int LA94_0 = input.LA(1);

                if ( (LA94_0==29) ) {
                    alt94=1;
                }


                switch (alt94) {
            	case 1 :
            	    // InternalFortXTrans.g:10442:4: rule__NoNewlineVarWTypes__Group_1_2__0
            	    {
            	    pushFollow(FOLLOW_15);
            	    rule__NoNewlineVarWTypes__Group_1_2__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop94;
                }
            } while (true);

             after(grammarAccess.getNoNewlineVarWTypesAccess().getGroup_1_2()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NoNewlineVarWTypes__Group_1__2__Impl"


    // $ANTLR start "rule__NoNewlineVarWTypes__Group_1__3"
    // InternalFortXTrans.g:10451:1: rule__NoNewlineVarWTypes__Group_1__3 : rule__NoNewlineVarWTypes__Group_1__3__Impl ;
    public final void rule__NoNewlineVarWTypes__Group_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10455:1: ( rule__NoNewlineVarWTypes__Group_1__3__Impl )
            // InternalFortXTrans.g:10456:2: rule__NoNewlineVarWTypes__Group_1__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__NoNewlineVarWTypes__Group_1__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NoNewlineVarWTypes__Group_1__3"


    // $ANTLR start "rule__NoNewlineVarWTypes__Group_1__3__Impl"
    // InternalFortXTrans.g:10462:1: rule__NoNewlineVarWTypes__Group_1__3__Impl : ( ')' ) ;
    public final void rule__NoNewlineVarWTypes__Group_1__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10466:1: ( ( ')' ) )
            // InternalFortXTrans.g:10467:1: ( ')' )
            {
            // InternalFortXTrans.g:10467:1: ( ')' )
            // InternalFortXTrans.g:10468:2: ')'
            {
             before(grammarAccess.getNoNewlineVarWTypesAccess().getRightParenthesisKeyword_1_3()); 
            match(input,34,FOLLOW_2); 
             after(grammarAccess.getNoNewlineVarWTypesAccess().getRightParenthesisKeyword_1_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NoNewlineVarWTypes__Group_1__3__Impl"


    // $ANTLR start "rule__NoNewlineVarWTypes__Group_1_2__0"
    // InternalFortXTrans.g:10478:1: rule__NoNewlineVarWTypes__Group_1_2__0 : rule__NoNewlineVarWTypes__Group_1_2__0__Impl rule__NoNewlineVarWTypes__Group_1_2__1 ;
    public final void rule__NoNewlineVarWTypes__Group_1_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10482:1: ( rule__NoNewlineVarWTypes__Group_1_2__0__Impl rule__NoNewlineVarWTypes__Group_1_2__1 )
            // InternalFortXTrans.g:10483:2: rule__NoNewlineVarWTypes__Group_1_2__0__Impl rule__NoNewlineVarWTypes__Group_1_2__1
            {
            pushFollow(FOLLOW_5);
            rule__NoNewlineVarWTypes__Group_1_2__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__NoNewlineVarWTypes__Group_1_2__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NoNewlineVarWTypes__Group_1_2__0"


    // $ANTLR start "rule__NoNewlineVarWTypes__Group_1_2__0__Impl"
    // InternalFortXTrans.g:10490:1: rule__NoNewlineVarWTypes__Group_1_2__0__Impl : ( ',' ) ;
    public final void rule__NoNewlineVarWTypes__Group_1_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10494:1: ( ( ',' ) )
            // InternalFortXTrans.g:10495:1: ( ',' )
            {
            // InternalFortXTrans.g:10495:1: ( ',' )
            // InternalFortXTrans.g:10496:2: ','
            {
             before(grammarAccess.getNoNewlineVarWTypesAccess().getCommaKeyword_1_2_0()); 
            match(input,29,FOLLOW_2); 
             after(grammarAccess.getNoNewlineVarWTypesAccess().getCommaKeyword_1_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NoNewlineVarWTypes__Group_1_2__0__Impl"


    // $ANTLR start "rule__NoNewlineVarWTypes__Group_1_2__1"
    // InternalFortXTrans.g:10505:1: rule__NoNewlineVarWTypes__Group_1_2__1 : rule__NoNewlineVarWTypes__Group_1_2__1__Impl ;
    public final void rule__NoNewlineVarWTypes__Group_1_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10509:1: ( rule__NoNewlineVarWTypes__Group_1_2__1__Impl )
            // InternalFortXTrans.g:10510:2: rule__NoNewlineVarWTypes__Group_1_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__NoNewlineVarWTypes__Group_1_2__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NoNewlineVarWTypes__Group_1_2__1"


    // $ANTLR start "rule__NoNewlineVarWTypes__Group_1_2__1__Impl"
    // InternalFortXTrans.g:10516:1: rule__NoNewlineVarWTypes__Group_1_2__1__Impl : ( ( rule__NoNewlineVarWTypes__MultipleAssignment_1_2_1 ) ) ;
    public final void rule__NoNewlineVarWTypes__Group_1_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10520:1: ( ( ( rule__NoNewlineVarWTypes__MultipleAssignment_1_2_1 ) ) )
            // InternalFortXTrans.g:10521:1: ( ( rule__NoNewlineVarWTypes__MultipleAssignment_1_2_1 ) )
            {
            // InternalFortXTrans.g:10521:1: ( ( rule__NoNewlineVarWTypes__MultipleAssignment_1_2_1 ) )
            // InternalFortXTrans.g:10522:2: ( rule__NoNewlineVarWTypes__MultipleAssignment_1_2_1 )
            {
             before(grammarAccess.getNoNewlineVarWTypesAccess().getMultipleAssignment_1_2_1()); 
            // InternalFortXTrans.g:10523:2: ( rule__NoNewlineVarWTypes__MultipleAssignment_1_2_1 )
            // InternalFortXTrans.g:10523:3: rule__NoNewlineVarWTypes__MultipleAssignment_1_2_1
            {
            pushFollow(FOLLOW_2);
            rule__NoNewlineVarWTypes__MultipleAssignment_1_2_1();

            state._fsp--;


            }

             after(grammarAccess.getNoNewlineVarWTypesAccess().getMultipleAssignment_1_2_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NoNewlineVarWTypes__Group_1_2__1__Impl"


    // $ANTLR start "rule__NoNewlineVarWType__Group__0"
    // InternalFortXTrans.g:10532:1: rule__NoNewlineVarWType__Group__0 : rule__NoNewlineVarWType__Group__0__Impl rule__NoNewlineVarWType__Group__1 ;
    public final void rule__NoNewlineVarWType__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10536:1: ( rule__NoNewlineVarWType__Group__0__Impl rule__NoNewlineVarWType__Group__1 )
            // InternalFortXTrans.g:10537:2: rule__NoNewlineVarWType__Group__0__Impl rule__NoNewlineVarWType__Group__1
            {
            pushFollow(FOLLOW_26);
            rule__NoNewlineVarWType__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__NoNewlineVarWType__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NoNewlineVarWType__Group__0"


    // $ANTLR start "rule__NoNewlineVarWType__Group__0__Impl"
    // InternalFortXTrans.g:10544:1: rule__NoNewlineVarWType__Group__0__Impl : ( ( rule__NoNewlineVarWType__BidAssignment_0 ) ) ;
    public final void rule__NoNewlineVarWType__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10548:1: ( ( ( rule__NoNewlineVarWType__BidAssignment_0 ) ) )
            // InternalFortXTrans.g:10549:1: ( ( rule__NoNewlineVarWType__BidAssignment_0 ) )
            {
            // InternalFortXTrans.g:10549:1: ( ( rule__NoNewlineVarWType__BidAssignment_0 ) )
            // InternalFortXTrans.g:10550:2: ( rule__NoNewlineVarWType__BidAssignment_0 )
            {
             before(grammarAccess.getNoNewlineVarWTypeAccess().getBidAssignment_0()); 
            // InternalFortXTrans.g:10551:2: ( rule__NoNewlineVarWType__BidAssignment_0 )
            // InternalFortXTrans.g:10551:3: rule__NoNewlineVarWType__BidAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__NoNewlineVarWType__BidAssignment_0();

            state._fsp--;


            }

             after(grammarAccess.getNoNewlineVarWTypeAccess().getBidAssignment_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NoNewlineVarWType__Group__0__Impl"


    // $ANTLR start "rule__NoNewlineVarWType__Group__1"
    // InternalFortXTrans.g:10559:1: rule__NoNewlineVarWType__Group__1 : rule__NoNewlineVarWType__Group__1__Impl ;
    public final void rule__NoNewlineVarWType__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10563:1: ( rule__NoNewlineVarWType__Group__1__Impl )
            // InternalFortXTrans.g:10564:2: rule__NoNewlineVarWType__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__NoNewlineVarWType__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NoNewlineVarWType__Group__1"


    // $ANTLR start "rule__NoNewlineVarWType__Group__1__Impl"
    // InternalFortXTrans.g:10570:1: rule__NoNewlineVarWType__Group__1__Impl : ( ( rule__NoNewlineVarWType__IstypeAssignment_1 ) ) ;
    public final void rule__NoNewlineVarWType__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10574:1: ( ( ( rule__NoNewlineVarWType__IstypeAssignment_1 ) ) )
            // InternalFortXTrans.g:10575:1: ( ( rule__NoNewlineVarWType__IstypeAssignment_1 ) )
            {
            // InternalFortXTrans.g:10575:1: ( ( rule__NoNewlineVarWType__IstypeAssignment_1 ) )
            // InternalFortXTrans.g:10576:2: ( rule__NoNewlineVarWType__IstypeAssignment_1 )
            {
             before(grammarAccess.getNoNewlineVarWTypeAccess().getIstypeAssignment_1()); 
            // InternalFortXTrans.g:10577:2: ( rule__NoNewlineVarWType__IstypeAssignment_1 )
            // InternalFortXTrans.g:10577:3: rule__NoNewlineVarWType__IstypeAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__NoNewlineVarWType__IstypeAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getNoNewlineVarWTypeAccess().getIstypeAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NoNewlineVarWType__Group__1__Impl"


    // $ANTLR start "rule__LiteralTup__Group_1__0"
    // InternalFortXTrans.g:10586:1: rule__LiteralTup__Group_1__0 : rule__LiteralTup__Group_1__0__Impl rule__LiteralTup__Group_1__1 ;
    public final void rule__LiteralTup__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10590:1: ( rule__LiteralTup__Group_1__0__Impl rule__LiteralTup__Group_1__1 )
            // InternalFortXTrans.g:10591:2: rule__LiteralTup__Group_1__0__Impl rule__LiteralTup__Group_1__1
            {
            pushFollow(FOLLOW_81);
            rule__LiteralTup__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__LiteralTup__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralTup__Group_1__0"


    // $ANTLR start "rule__LiteralTup__Group_1__0__Impl"
    // InternalFortXTrans.g:10598:1: rule__LiteralTup__Group_1__0__Impl : ( '(' ) ;
    public final void rule__LiteralTup__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10602:1: ( ( '(' ) )
            // InternalFortXTrans.g:10603:1: ( '(' )
            {
            // InternalFortXTrans.g:10603:1: ( '(' )
            // InternalFortXTrans.g:10604:2: '('
            {
             before(grammarAccess.getLiteralTupAccess().getLeftParenthesisKeyword_1_0()); 
            match(input,33,FOLLOW_2); 
             after(grammarAccess.getLiteralTupAccess().getLeftParenthesisKeyword_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralTup__Group_1__0__Impl"


    // $ANTLR start "rule__LiteralTup__Group_1__1"
    // InternalFortXTrans.g:10613:1: rule__LiteralTup__Group_1__1 : rule__LiteralTup__Group_1__1__Impl rule__LiteralTup__Group_1__2 ;
    public final void rule__LiteralTup__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10617:1: ( rule__LiteralTup__Group_1__1__Impl rule__LiteralTup__Group_1__2 )
            // InternalFortXTrans.g:10618:2: rule__LiteralTup__Group_1__1__Impl rule__LiteralTup__Group_1__2
            {
            pushFollow(FOLLOW_23);
            rule__LiteralTup__Group_1__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__LiteralTup__Group_1__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralTup__Group_1__1"


    // $ANTLR start "rule__LiteralTup__Group_1__1__Impl"
    // InternalFortXTrans.g:10625:1: rule__LiteralTup__Group_1__1__Impl : ( ruleLiteralList ) ;
    public final void rule__LiteralTup__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10629:1: ( ( ruleLiteralList ) )
            // InternalFortXTrans.g:10630:1: ( ruleLiteralList )
            {
            // InternalFortXTrans.g:10630:1: ( ruleLiteralList )
            // InternalFortXTrans.g:10631:2: ruleLiteralList
            {
             before(grammarAccess.getLiteralTupAccess().getLiteralListParserRuleCall_1_1()); 
            pushFollow(FOLLOW_2);
            ruleLiteralList();

            state._fsp--;

             after(grammarAccess.getLiteralTupAccess().getLiteralListParserRuleCall_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralTup__Group_1__1__Impl"


    // $ANTLR start "rule__LiteralTup__Group_1__2"
    // InternalFortXTrans.g:10640:1: rule__LiteralTup__Group_1__2 : rule__LiteralTup__Group_1__2__Impl ;
    public final void rule__LiteralTup__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10644:1: ( rule__LiteralTup__Group_1__2__Impl )
            // InternalFortXTrans.g:10645:2: rule__LiteralTup__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__LiteralTup__Group_1__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralTup__Group_1__2"


    // $ANTLR start "rule__LiteralTup__Group_1__2__Impl"
    // InternalFortXTrans.g:10651:1: rule__LiteralTup__Group_1__2__Impl : ( ')' ) ;
    public final void rule__LiteralTup__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10655:1: ( ( ')' ) )
            // InternalFortXTrans.g:10656:1: ( ')' )
            {
            // InternalFortXTrans.g:10656:1: ( ')' )
            // InternalFortXTrans.g:10657:2: ')'
            {
             before(grammarAccess.getLiteralTupAccess().getRightParenthesisKeyword_1_2()); 
            match(input,34,FOLLOW_2); 
             after(grammarAccess.getLiteralTupAccess().getRightParenthesisKeyword_1_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralTup__Group_1__2__Impl"


    // $ANTLR start "rule__LiteralList__Group__0"
    // InternalFortXTrans.g:10667:1: rule__LiteralList__Group__0 : rule__LiteralList__Group__0__Impl rule__LiteralList__Group__1 ;
    public final void rule__LiteralList__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10671:1: ( rule__LiteralList__Group__0__Impl rule__LiteralList__Group__1 )
            // InternalFortXTrans.g:10672:2: rule__LiteralList__Group__0__Impl rule__LiteralList__Group__1
            {
            pushFollow(FOLLOW_24);
            rule__LiteralList__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__LiteralList__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralList__Group__0"


    // $ANTLR start "rule__LiteralList__Group__0__Impl"
    // InternalFortXTrans.g:10679:1: rule__LiteralList__Group__0__Impl : ( ( rule__LiteralList__LitAssignment_0 ) ) ;
    public final void rule__LiteralList__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10683:1: ( ( ( rule__LiteralList__LitAssignment_0 ) ) )
            // InternalFortXTrans.g:10684:1: ( ( rule__LiteralList__LitAssignment_0 ) )
            {
            // InternalFortXTrans.g:10684:1: ( ( rule__LiteralList__LitAssignment_0 ) )
            // InternalFortXTrans.g:10685:2: ( rule__LiteralList__LitAssignment_0 )
            {
             before(grammarAccess.getLiteralListAccess().getLitAssignment_0()); 
            // InternalFortXTrans.g:10686:2: ( rule__LiteralList__LitAssignment_0 )
            // InternalFortXTrans.g:10686:3: rule__LiteralList__LitAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__LiteralList__LitAssignment_0();

            state._fsp--;


            }

             after(grammarAccess.getLiteralListAccess().getLitAssignment_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralList__Group__0__Impl"


    // $ANTLR start "rule__LiteralList__Group__1"
    // InternalFortXTrans.g:10694:1: rule__LiteralList__Group__1 : rule__LiteralList__Group__1__Impl ;
    public final void rule__LiteralList__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10698:1: ( rule__LiteralList__Group__1__Impl )
            // InternalFortXTrans.g:10699:2: rule__LiteralList__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__LiteralList__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralList__Group__1"


    // $ANTLR start "rule__LiteralList__Group__1__Impl"
    // InternalFortXTrans.g:10705:1: rule__LiteralList__Group__1__Impl : ( ( rule__LiteralList__Group_1__0 )* ) ;
    public final void rule__LiteralList__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10709:1: ( ( ( rule__LiteralList__Group_1__0 )* ) )
            // InternalFortXTrans.g:10710:1: ( ( rule__LiteralList__Group_1__0 )* )
            {
            // InternalFortXTrans.g:10710:1: ( ( rule__LiteralList__Group_1__0 )* )
            // InternalFortXTrans.g:10711:2: ( rule__LiteralList__Group_1__0 )*
            {
             before(grammarAccess.getLiteralListAccess().getGroup_1()); 
            // InternalFortXTrans.g:10712:2: ( rule__LiteralList__Group_1__0 )*
            loop95:
            do {
                int alt95=2;
                int LA95_0 = input.LA(1);

                if ( (LA95_0==29) ) {
                    alt95=1;
                }


                switch (alt95) {
            	case 1 :
            	    // InternalFortXTrans.g:10712:3: rule__LiteralList__Group_1__0
            	    {
            	    pushFollow(FOLLOW_15);
            	    rule__LiteralList__Group_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop95;
                }
            } while (true);

             after(grammarAccess.getLiteralListAccess().getGroup_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralList__Group__1__Impl"


    // $ANTLR start "rule__LiteralList__Group_1__0"
    // InternalFortXTrans.g:10721:1: rule__LiteralList__Group_1__0 : rule__LiteralList__Group_1__0__Impl rule__LiteralList__Group_1__1 ;
    public final void rule__LiteralList__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10725:1: ( rule__LiteralList__Group_1__0__Impl rule__LiteralList__Group_1__1 )
            // InternalFortXTrans.g:10726:2: rule__LiteralList__Group_1__0__Impl rule__LiteralList__Group_1__1
            {
            pushFollow(FOLLOW_81);
            rule__LiteralList__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__LiteralList__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralList__Group_1__0"


    // $ANTLR start "rule__LiteralList__Group_1__0__Impl"
    // InternalFortXTrans.g:10733:1: rule__LiteralList__Group_1__0__Impl : ( ',' ) ;
    public final void rule__LiteralList__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10737:1: ( ( ',' ) )
            // InternalFortXTrans.g:10738:1: ( ',' )
            {
            // InternalFortXTrans.g:10738:1: ( ',' )
            // InternalFortXTrans.g:10739:2: ','
            {
             before(grammarAccess.getLiteralListAccess().getCommaKeyword_1_0()); 
            match(input,29,FOLLOW_2); 
             after(grammarAccess.getLiteralListAccess().getCommaKeyword_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralList__Group_1__0__Impl"


    // $ANTLR start "rule__LiteralList__Group_1__1"
    // InternalFortXTrans.g:10748:1: rule__LiteralList__Group_1__1 : rule__LiteralList__Group_1__1__Impl ;
    public final void rule__LiteralList__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10752:1: ( rule__LiteralList__Group_1__1__Impl )
            // InternalFortXTrans.g:10753:2: rule__LiteralList__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__LiteralList__Group_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralList__Group_1__1"


    // $ANTLR start "rule__LiteralList__Group_1__1__Impl"
    // InternalFortXTrans.g:10759:1: rule__LiteralList__Group_1__1__Impl : ( ( rule__LiteralList__LitAssignment_1_1 ) ) ;
    public final void rule__LiteralList__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10763:1: ( ( ( rule__LiteralList__LitAssignment_1_1 ) ) )
            // InternalFortXTrans.g:10764:1: ( ( rule__LiteralList__LitAssignment_1_1 ) )
            {
            // InternalFortXTrans.g:10764:1: ( ( rule__LiteralList__LitAssignment_1_1 ) )
            // InternalFortXTrans.g:10765:2: ( rule__LiteralList__LitAssignment_1_1 )
            {
             before(grammarAccess.getLiteralListAccess().getLitAssignment_1_1()); 
            // InternalFortXTrans.g:10766:2: ( rule__LiteralList__LitAssignment_1_1 )
            // InternalFortXTrans.g:10766:3: rule__LiteralList__LitAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__LiteralList__LitAssignment_1_1();

            state._fsp--;


            }

             after(grammarAccess.getLiteralListAccess().getLitAssignment_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralList__Group_1__1__Impl"


    // $ANTLR start "rule__Literal__Group_0__0"
    // InternalFortXTrans.g:10775:1: rule__Literal__Group_0__0 : rule__Literal__Group_0__0__Impl rule__Literal__Group_0__1 ;
    public final void rule__Literal__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10779:1: ( rule__Literal__Group_0__0__Impl rule__Literal__Group_0__1 )
            // InternalFortXTrans.g:10780:2: rule__Literal__Group_0__0__Impl rule__Literal__Group_0__1
            {
            pushFollow(FOLLOW_82);
            rule__Literal__Group_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Literal__Group_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Literal__Group_0__0"


    // $ANTLR start "rule__Literal__Group_0__0__Impl"
    // InternalFortXTrans.g:10787:1: rule__Literal__Group_0__0__Impl : ( () ) ;
    public final void rule__Literal__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10791:1: ( ( () ) )
            // InternalFortXTrans.g:10792:1: ( () )
            {
            // InternalFortXTrans.g:10792:1: ( () )
            // InternalFortXTrans.g:10793:2: ()
            {
             before(grammarAccess.getLiteralAccess().getIntConstAction_0_0()); 
            // InternalFortXTrans.g:10794:2: ()
            // InternalFortXTrans.g:10794:3: 
            {
            }

             after(grammarAccess.getLiteralAccess().getIntConstAction_0_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Literal__Group_0__0__Impl"


    // $ANTLR start "rule__Literal__Group_0__1"
    // InternalFortXTrans.g:10802:1: rule__Literal__Group_0__1 : rule__Literal__Group_0__1__Impl ;
    public final void rule__Literal__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10806:1: ( rule__Literal__Group_0__1__Impl )
            // InternalFortXTrans.g:10807:2: rule__Literal__Group_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Literal__Group_0__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Literal__Group_0__1"


    // $ANTLR start "rule__Literal__Group_0__1__Impl"
    // InternalFortXTrans.g:10813:1: rule__Literal__Group_0__1__Impl : ( ( rule__Literal__ValueAssignment_0_1 ) ) ;
    public final void rule__Literal__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10817:1: ( ( ( rule__Literal__ValueAssignment_0_1 ) ) )
            // InternalFortXTrans.g:10818:1: ( ( rule__Literal__ValueAssignment_0_1 ) )
            {
            // InternalFortXTrans.g:10818:1: ( ( rule__Literal__ValueAssignment_0_1 ) )
            // InternalFortXTrans.g:10819:2: ( rule__Literal__ValueAssignment_0_1 )
            {
             before(grammarAccess.getLiteralAccess().getValueAssignment_0_1()); 
            // InternalFortXTrans.g:10820:2: ( rule__Literal__ValueAssignment_0_1 )
            // InternalFortXTrans.g:10820:3: rule__Literal__ValueAssignment_0_1
            {
            pushFollow(FOLLOW_2);
            rule__Literal__ValueAssignment_0_1();

            state._fsp--;


            }

             after(grammarAccess.getLiteralAccess().getValueAssignment_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Literal__Group_0__1__Impl"


    // $ANTLR start "rule__Literal__Group_1__0"
    // InternalFortXTrans.g:10829:1: rule__Literal__Group_1__0 : rule__Literal__Group_1__0__Impl rule__Literal__Group_1__1 ;
    public final void rule__Literal__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10833:1: ( rule__Literal__Group_1__0__Impl rule__Literal__Group_1__1 )
            // InternalFortXTrans.g:10834:2: rule__Literal__Group_1__0__Impl rule__Literal__Group_1__1
            {
            pushFollow(FOLLOW_83);
            rule__Literal__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Literal__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Literal__Group_1__0"


    // $ANTLR start "rule__Literal__Group_1__0__Impl"
    // InternalFortXTrans.g:10841:1: rule__Literal__Group_1__0__Impl : ( () ) ;
    public final void rule__Literal__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10845:1: ( ( () ) )
            // InternalFortXTrans.g:10846:1: ( () )
            {
            // InternalFortXTrans.g:10846:1: ( () )
            // InternalFortXTrans.g:10847:2: ()
            {
             before(grammarAccess.getLiteralAccess().getFloatConstAction_1_0()); 
            // InternalFortXTrans.g:10848:2: ()
            // InternalFortXTrans.g:10848:3: 
            {
            }

             after(grammarAccess.getLiteralAccess().getFloatConstAction_1_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Literal__Group_1__0__Impl"


    // $ANTLR start "rule__Literal__Group_1__1"
    // InternalFortXTrans.g:10856:1: rule__Literal__Group_1__1 : rule__Literal__Group_1__1__Impl ;
    public final void rule__Literal__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10860:1: ( rule__Literal__Group_1__1__Impl )
            // InternalFortXTrans.g:10861:2: rule__Literal__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Literal__Group_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Literal__Group_1__1"


    // $ANTLR start "rule__Literal__Group_1__1__Impl"
    // InternalFortXTrans.g:10867:1: rule__Literal__Group_1__1__Impl : ( ( rule__Literal__ValueAssignment_1_1 ) ) ;
    public final void rule__Literal__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10871:1: ( ( ( rule__Literal__ValueAssignment_1_1 ) ) )
            // InternalFortXTrans.g:10872:1: ( ( rule__Literal__ValueAssignment_1_1 ) )
            {
            // InternalFortXTrans.g:10872:1: ( ( rule__Literal__ValueAssignment_1_1 ) )
            // InternalFortXTrans.g:10873:2: ( rule__Literal__ValueAssignment_1_1 )
            {
             before(grammarAccess.getLiteralAccess().getValueAssignment_1_1()); 
            // InternalFortXTrans.g:10874:2: ( rule__Literal__ValueAssignment_1_1 )
            // InternalFortXTrans.g:10874:3: rule__Literal__ValueAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Literal__ValueAssignment_1_1();

            state._fsp--;


            }

             after(grammarAccess.getLiteralAccess().getValueAssignment_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Literal__Group_1__1__Impl"


    // $ANTLR start "rule__Literal__Group_2__0"
    // InternalFortXTrans.g:10883:1: rule__Literal__Group_2__0 : rule__Literal__Group_2__0__Impl rule__Literal__Group_2__1 ;
    public final void rule__Literal__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10887:1: ( rule__Literal__Group_2__0__Impl rule__Literal__Group_2__1 )
            // InternalFortXTrans.g:10888:2: rule__Literal__Group_2__0__Impl rule__Literal__Group_2__1
            {
            pushFollow(FOLLOW_84);
            rule__Literal__Group_2__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Literal__Group_2__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Literal__Group_2__0"


    // $ANTLR start "rule__Literal__Group_2__0__Impl"
    // InternalFortXTrans.g:10895:1: rule__Literal__Group_2__0__Impl : ( () ) ;
    public final void rule__Literal__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10899:1: ( ( () ) )
            // InternalFortXTrans.g:10900:1: ( () )
            {
            // InternalFortXTrans.g:10900:1: ( () )
            // InternalFortXTrans.g:10901:2: ()
            {
             before(grammarAccess.getLiteralAccess().getStrConstAction_2_0()); 
            // InternalFortXTrans.g:10902:2: ()
            // InternalFortXTrans.g:10902:3: 
            {
            }

             after(grammarAccess.getLiteralAccess().getStrConstAction_2_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Literal__Group_2__0__Impl"


    // $ANTLR start "rule__Literal__Group_2__1"
    // InternalFortXTrans.g:10910:1: rule__Literal__Group_2__1 : rule__Literal__Group_2__1__Impl ;
    public final void rule__Literal__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10914:1: ( rule__Literal__Group_2__1__Impl )
            // InternalFortXTrans.g:10915:2: rule__Literal__Group_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Literal__Group_2__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Literal__Group_2__1"


    // $ANTLR start "rule__Literal__Group_2__1__Impl"
    // InternalFortXTrans.g:10921:1: rule__Literal__Group_2__1__Impl : ( ( rule__Literal__ValueAssignment_2_1 ) ) ;
    public final void rule__Literal__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10925:1: ( ( ( rule__Literal__ValueAssignment_2_1 ) ) )
            // InternalFortXTrans.g:10926:1: ( ( rule__Literal__ValueAssignment_2_1 ) )
            {
            // InternalFortXTrans.g:10926:1: ( ( rule__Literal__ValueAssignment_2_1 ) )
            // InternalFortXTrans.g:10927:2: ( rule__Literal__ValueAssignment_2_1 )
            {
             before(grammarAccess.getLiteralAccess().getValueAssignment_2_1()); 
            // InternalFortXTrans.g:10928:2: ( rule__Literal__ValueAssignment_2_1 )
            // InternalFortXTrans.g:10928:3: rule__Literal__ValueAssignment_2_1
            {
            pushFollow(FOLLOW_2);
            rule__Literal__ValueAssignment_2_1();

            state._fsp--;


            }

             after(grammarAccess.getLiteralAccess().getValueAssignment_2_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Literal__Group_2__1__Impl"


    // $ANTLR start "rule__Literal__Group_3__0"
    // InternalFortXTrans.g:10937:1: rule__Literal__Group_3__0 : rule__Literal__Group_3__0__Impl rule__Literal__Group_3__1 ;
    public final void rule__Literal__Group_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10941:1: ( rule__Literal__Group_3__0__Impl rule__Literal__Group_3__1 )
            // InternalFortXTrans.g:10942:2: rule__Literal__Group_3__0__Impl rule__Literal__Group_3__1
            {
            pushFollow(FOLLOW_81);
            rule__Literal__Group_3__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Literal__Group_3__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Literal__Group_3__0"


    // $ANTLR start "rule__Literal__Group_3__0__Impl"
    // InternalFortXTrans.g:10949:1: rule__Literal__Group_3__0__Impl : ( () ) ;
    public final void rule__Literal__Group_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10953:1: ( ( () ) )
            // InternalFortXTrans.g:10954:1: ( () )
            {
            // InternalFortXTrans.g:10954:1: ( () )
            // InternalFortXTrans.g:10955:2: ()
            {
             before(grammarAccess.getLiteralAccess().getBoolConstAction_3_0()); 
            // InternalFortXTrans.g:10956:2: ()
            // InternalFortXTrans.g:10956:3: 
            {
            }

             after(grammarAccess.getLiteralAccess().getBoolConstAction_3_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Literal__Group_3__0__Impl"


    // $ANTLR start "rule__Literal__Group_3__1"
    // InternalFortXTrans.g:10964:1: rule__Literal__Group_3__1 : rule__Literal__Group_3__1__Impl ;
    public final void rule__Literal__Group_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10968:1: ( rule__Literal__Group_3__1__Impl )
            // InternalFortXTrans.g:10969:2: rule__Literal__Group_3__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Literal__Group_3__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Literal__Group_3__1"


    // $ANTLR start "rule__Literal__Group_3__1__Impl"
    // InternalFortXTrans.g:10975:1: rule__Literal__Group_3__1__Impl : ( ( rule__Literal__Alternatives_3_1 ) ) ;
    public final void rule__Literal__Group_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10979:1: ( ( ( rule__Literal__Alternatives_3_1 ) ) )
            // InternalFortXTrans.g:10980:1: ( ( rule__Literal__Alternatives_3_1 ) )
            {
            // InternalFortXTrans.g:10980:1: ( ( rule__Literal__Alternatives_3_1 ) )
            // InternalFortXTrans.g:10981:2: ( rule__Literal__Alternatives_3_1 )
            {
             before(grammarAccess.getLiteralAccess().getAlternatives_3_1()); 
            // InternalFortXTrans.g:10982:2: ( rule__Literal__Alternatives_3_1 )
            // InternalFortXTrans.g:10982:3: rule__Literal__Alternatives_3_1
            {
            pushFollow(FOLLOW_2);
            rule__Literal__Alternatives_3_1();

            state._fsp--;


            }

             after(grammarAccess.getLiteralAccess().getAlternatives_3_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Literal__Group_3__1__Impl"


    // $ANTLR start "rule__LocalVarDecl__Group_0__0"
    // InternalFortXTrans.g:10991:1: rule__LocalVarDecl__Group_0__0 : rule__LocalVarDecl__Group_0__0__Impl rule__LocalVarDecl__Group_0__1 ;
    public final void rule__LocalVarDecl__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10995:1: ( rule__LocalVarDecl__Group_0__0__Impl rule__LocalVarDecl__Group_0__1 )
            // InternalFortXTrans.g:10996:2: rule__LocalVarDecl__Group_0__0__Impl rule__LocalVarDecl__Group_0__1
            {
            pushFollow(FOLLOW_77);
            rule__LocalVarDecl__Group_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__LocalVarDecl__Group_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_0__0"


    // $ANTLR start "rule__LocalVarDecl__Group_0__0__Impl"
    // InternalFortXTrans.g:11003:1: rule__LocalVarDecl__Group_0__0__Impl : ( ( rule__LocalVarDecl__MutAssignment_0_0 )? ) ;
    public final void rule__LocalVarDecl__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11007:1: ( ( ( rule__LocalVarDecl__MutAssignment_0_0 )? ) )
            // InternalFortXTrans.g:11008:1: ( ( rule__LocalVarDecl__MutAssignment_0_0 )? )
            {
            // InternalFortXTrans.g:11008:1: ( ( rule__LocalVarDecl__MutAssignment_0_0 )? )
            // InternalFortXTrans.g:11009:2: ( rule__LocalVarDecl__MutAssignment_0_0 )?
            {
             before(grammarAccess.getLocalVarDeclAccess().getMutAssignment_0_0()); 
            // InternalFortXTrans.g:11010:2: ( rule__LocalVarDecl__MutAssignment_0_0 )?
            int alt96=2;
            int LA96_0 = input.LA(1);

            if ( (LA96_0==73) ) {
                alt96=1;
            }
            switch (alt96) {
                case 1 :
                    // InternalFortXTrans.g:11010:3: rule__LocalVarDecl__MutAssignment_0_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__LocalVarDecl__MutAssignment_0_0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getLocalVarDeclAccess().getMutAssignment_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_0__0__Impl"


    // $ANTLR start "rule__LocalVarDecl__Group_0__1"
    // InternalFortXTrans.g:11018:1: rule__LocalVarDecl__Group_0__1 : rule__LocalVarDecl__Group_0__1__Impl rule__LocalVarDecl__Group_0__2 ;
    public final void rule__LocalVarDecl__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11022:1: ( rule__LocalVarDecl__Group_0__1__Impl rule__LocalVarDecl__Group_0__2 )
            // InternalFortXTrans.g:11023:2: rule__LocalVarDecl__Group_0__1__Impl rule__LocalVarDecl__Group_0__2
            {
            pushFollow(FOLLOW_78);
            rule__LocalVarDecl__Group_0__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__LocalVarDecl__Group_0__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_0__1"


    // $ANTLR start "rule__LocalVarDecl__Group_0__1__Impl"
    // InternalFortXTrans.g:11030:1: rule__LocalVarDecl__Group_0__1__Impl : ( ( rule__LocalVarDecl__VarsAssignment_0_1 ) ) ;
    public final void rule__LocalVarDecl__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11034:1: ( ( ( rule__LocalVarDecl__VarsAssignment_0_1 ) ) )
            // InternalFortXTrans.g:11035:1: ( ( rule__LocalVarDecl__VarsAssignment_0_1 ) )
            {
            // InternalFortXTrans.g:11035:1: ( ( rule__LocalVarDecl__VarsAssignment_0_1 ) )
            // InternalFortXTrans.g:11036:2: ( rule__LocalVarDecl__VarsAssignment_0_1 )
            {
             before(grammarAccess.getLocalVarDeclAccess().getVarsAssignment_0_1()); 
            // InternalFortXTrans.g:11037:2: ( rule__LocalVarDecl__VarsAssignment_0_1 )
            // InternalFortXTrans.g:11037:3: rule__LocalVarDecl__VarsAssignment_0_1
            {
            pushFollow(FOLLOW_2);
            rule__LocalVarDecl__VarsAssignment_0_1();

            state._fsp--;


            }

             after(grammarAccess.getLocalVarDeclAccess().getVarsAssignment_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_0__1__Impl"


    // $ANTLR start "rule__LocalVarDecl__Group_0__2"
    // InternalFortXTrans.g:11045:1: rule__LocalVarDecl__Group_0__2 : rule__LocalVarDecl__Group_0__2__Impl rule__LocalVarDecl__Group_0__3 ;
    public final void rule__LocalVarDecl__Group_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11049:1: ( rule__LocalVarDecl__Group_0__2__Impl rule__LocalVarDecl__Group_0__3 )
            // InternalFortXTrans.g:11050:2: rule__LocalVarDecl__Group_0__2__Impl rule__LocalVarDecl__Group_0__3
            {
            pushFollow(FOLLOW_32);
            rule__LocalVarDecl__Group_0__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__LocalVarDecl__Group_0__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_0__2"


    // $ANTLR start "rule__LocalVarDecl__Group_0__2__Impl"
    // InternalFortXTrans.g:11057:1: rule__LocalVarDecl__Group_0__2__Impl : ( '=' ) ;
    public final void rule__LocalVarDecl__Group_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11061:1: ( ( '=' ) )
            // InternalFortXTrans.g:11062:1: ( '=' )
            {
            // InternalFortXTrans.g:11062:1: ( '=' )
            // InternalFortXTrans.g:11063:2: '='
            {
             before(grammarAccess.getLocalVarDeclAccess().getEqualsSignKeyword_0_2()); 
            match(input,58,FOLLOW_2); 
             after(grammarAccess.getLocalVarDeclAccess().getEqualsSignKeyword_0_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_0__2__Impl"


    // $ANTLR start "rule__LocalVarDecl__Group_0__3"
    // InternalFortXTrans.g:11072:1: rule__LocalVarDecl__Group_0__3 : rule__LocalVarDecl__Group_0__3__Impl ;
    public final void rule__LocalVarDecl__Group_0__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11076:1: ( rule__LocalVarDecl__Group_0__3__Impl )
            // InternalFortXTrans.g:11077:2: rule__LocalVarDecl__Group_0__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__LocalVarDecl__Group_0__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_0__3"


    // $ANTLR start "rule__LocalVarDecl__Group_0__3__Impl"
    // InternalFortXTrans.g:11083:1: rule__LocalVarDecl__Group_0__3__Impl : ( ( rule__LocalVarDecl__InitAssignment_0_3 ) ) ;
    public final void rule__LocalVarDecl__Group_0__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11087:1: ( ( ( rule__LocalVarDecl__InitAssignment_0_3 ) ) )
            // InternalFortXTrans.g:11088:1: ( ( rule__LocalVarDecl__InitAssignment_0_3 ) )
            {
            // InternalFortXTrans.g:11088:1: ( ( rule__LocalVarDecl__InitAssignment_0_3 ) )
            // InternalFortXTrans.g:11089:2: ( rule__LocalVarDecl__InitAssignment_0_3 )
            {
             before(grammarAccess.getLocalVarDeclAccess().getInitAssignment_0_3()); 
            // InternalFortXTrans.g:11090:2: ( rule__LocalVarDecl__InitAssignment_0_3 )
            // InternalFortXTrans.g:11090:3: rule__LocalVarDecl__InitAssignment_0_3
            {
            pushFollow(FOLLOW_2);
            rule__LocalVarDecl__InitAssignment_0_3();

            state._fsp--;


            }

             after(grammarAccess.getLocalVarDeclAccess().getInitAssignment_0_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_0__3__Impl"


    // $ANTLR start "rule__LocalVarDecl__Group_1__0"
    // InternalFortXTrans.g:11099:1: rule__LocalVarDecl__Group_1__0 : rule__LocalVarDecl__Group_1__0__Impl rule__LocalVarDecl__Group_1__1 ;
    public final void rule__LocalVarDecl__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11103:1: ( rule__LocalVarDecl__Group_1__0__Impl rule__LocalVarDecl__Group_1__1 )
            // InternalFortXTrans.g:11104:2: rule__LocalVarDecl__Group_1__0__Impl rule__LocalVarDecl__Group_1__1
            {
            pushFollow(FOLLOW_78);
            rule__LocalVarDecl__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__LocalVarDecl__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_1__0"


    // $ANTLR start "rule__LocalVarDecl__Group_1__0__Impl"
    // InternalFortXTrans.g:11111:1: rule__LocalVarDecl__Group_1__0__Impl : ( ( rule__LocalVarDecl__IdtupAssignment_1_0 ) ) ;
    public final void rule__LocalVarDecl__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11115:1: ( ( ( rule__LocalVarDecl__IdtupAssignment_1_0 ) ) )
            // InternalFortXTrans.g:11116:1: ( ( rule__LocalVarDecl__IdtupAssignment_1_0 ) )
            {
            // InternalFortXTrans.g:11116:1: ( ( rule__LocalVarDecl__IdtupAssignment_1_0 ) )
            // InternalFortXTrans.g:11117:2: ( rule__LocalVarDecl__IdtupAssignment_1_0 )
            {
             before(grammarAccess.getLocalVarDeclAccess().getIdtupAssignment_1_0()); 
            // InternalFortXTrans.g:11118:2: ( rule__LocalVarDecl__IdtupAssignment_1_0 )
            // InternalFortXTrans.g:11118:3: rule__LocalVarDecl__IdtupAssignment_1_0
            {
            pushFollow(FOLLOW_2);
            rule__LocalVarDecl__IdtupAssignment_1_0();

            state._fsp--;


            }

             after(grammarAccess.getLocalVarDeclAccess().getIdtupAssignment_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_1__0__Impl"


    // $ANTLR start "rule__LocalVarDecl__Group_1__1"
    // InternalFortXTrans.g:11126:1: rule__LocalVarDecl__Group_1__1 : rule__LocalVarDecl__Group_1__1__Impl rule__LocalVarDecl__Group_1__2 ;
    public final void rule__LocalVarDecl__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11130:1: ( rule__LocalVarDecl__Group_1__1__Impl rule__LocalVarDecl__Group_1__2 )
            // InternalFortXTrans.g:11131:2: rule__LocalVarDecl__Group_1__1__Impl rule__LocalVarDecl__Group_1__2
            {
            pushFollow(FOLLOW_32);
            rule__LocalVarDecl__Group_1__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__LocalVarDecl__Group_1__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_1__1"


    // $ANTLR start "rule__LocalVarDecl__Group_1__1__Impl"
    // InternalFortXTrans.g:11138:1: rule__LocalVarDecl__Group_1__1__Impl : ( '=' ) ;
    public final void rule__LocalVarDecl__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11142:1: ( ( '=' ) )
            // InternalFortXTrans.g:11143:1: ( '=' )
            {
            // InternalFortXTrans.g:11143:1: ( '=' )
            // InternalFortXTrans.g:11144:2: '='
            {
             before(grammarAccess.getLocalVarDeclAccess().getEqualsSignKeyword_1_1()); 
            match(input,58,FOLLOW_2); 
             after(grammarAccess.getLocalVarDeclAccess().getEqualsSignKeyword_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_1__1__Impl"


    // $ANTLR start "rule__LocalVarDecl__Group_1__2"
    // InternalFortXTrans.g:11153:1: rule__LocalVarDecl__Group_1__2 : rule__LocalVarDecl__Group_1__2__Impl ;
    public final void rule__LocalVarDecl__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11157:1: ( rule__LocalVarDecl__Group_1__2__Impl )
            // InternalFortXTrans.g:11158:2: rule__LocalVarDecl__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__LocalVarDecl__Group_1__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_1__2"


    // $ANTLR start "rule__LocalVarDecl__Group_1__2__Impl"
    // InternalFortXTrans.g:11164:1: rule__LocalVarDecl__Group_1__2__Impl : ( ( rule__LocalVarDecl__InitAssignment_1_2 ) ) ;
    public final void rule__LocalVarDecl__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11168:1: ( ( ( rule__LocalVarDecl__InitAssignment_1_2 ) ) )
            // InternalFortXTrans.g:11169:1: ( ( rule__LocalVarDecl__InitAssignment_1_2 ) )
            {
            // InternalFortXTrans.g:11169:1: ( ( rule__LocalVarDecl__InitAssignment_1_2 ) )
            // InternalFortXTrans.g:11170:2: ( rule__LocalVarDecl__InitAssignment_1_2 )
            {
             before(grammarAccess.getLocalVarDeclAccess().getInitAssignment_1_2()); 
            // InternalFortXTrans.g:11171:2: ( rule__LocalVarDecl__InitAssignment_1_2 )
            // InternalFortXTrans.g:11171:3: rule__LocalVarDecl__InitAssignment_1_2
            {
            pushFollow(FOLLOW_2);
            rule__LocalVarDecl__InitAssignment_1_2();

            state._fsp--;


            }

             after(grammarAccess.getLocalVarDeclAccess().getInitAssignment_1_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_1__2__Impl"


    // $ANTLR start "rule__LocalVarDecl__Group_2__0"
    // InternalFortXTrans.g:11180:1: rule__LocalVarDecl__Group_2__0 : rule__LocalVarDecl__Group_2__0__Impl rule__LocalVarDecl__Group_2__1 ;
    public final void rule__LocalVarDecl__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11184:1: ( rule__LocalVarDecl__Group_2__0__Impl rule__LocalVarDecl__Group_2__1 )
            // InternalFortXTrans.g:11185:2: rule__LocalVarDecl__Group_2__0__Impl rule__LocalVarDecl__Group_2__1
            {
            pushFollow(FOLLOW_77);
            rule__LocalVarDecl__Group_2__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__LocalVarDecl__Group_2__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_2__0"


    // $ANTLR start "rule__LocalVarDecl__Group_2__0__Impl"
    // InternalFortXTrans.g:11192:1: rule__LocalVarDecl__Group_2__0__Impl : ( ( rule__LocalVarDecl__MutAssignment_2_0 )? ) ;
    public final void rule__LocalVarDecl__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11196:1: ( ( ( rule__LocalVarDecl__MutAssignment_2_0 )? ) )
            // InternalFortXTrans.g:11197:1: ( ( rule__LocalVarDecl__MutAssignment_2_0 )? )
            {
            // InternalFortXTrans.g:11197:1: ( ( rule__LocalVarDecl__MutAssignment_2_0 )? )
            // InternalFortXTrans.g:11198:2: ( rule__LocalVarDecl__MutAssignment_2_0 )?
            {
             before(grammarAccess.getLocalVarDeclAccess().getMutAssignment_2_0()); 
            // InternalFortXTrans.g:11199:2: ( rule__LocalVarDecl__MutAssignment_2_0 )?
            int alt97=2;
            int LA97_0 = input.LA(1);

            if ( (LA97_0==73) ) {
                alt97=1;
            }
            switch (alt97) {
                case 1 :
                    // InternalFortXTrans.g:11199:3: rule__LocalVarDecl__MutAssignment_2_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__LocalVarDecl__MutAssignment_2_0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getLocalVarDeclAccess().getMutAssignment_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_2__0__Impl"


    // $ANTLR start "rule__LocalVarDecl__Group_2__1"
    // InternalFortXTrans.g:11207:1: rule__LocalVarDecl__Group_2__1 : rule__LocalVarDecl__Group_2__1__Impl rule__LocalVarDecl__Group_2__2 ;
    public final void rule__LocalVarDecl__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11211:1: ( rule__LocalVarDecl__Group_2__1__Impl rule__LocalVarDecl__Group_2__2 )
            // InternalFortXTrans.g:11212:2: rule__LocalVarDecl__Group_2__1__Impl rule__LocalVarDecl__Group_2__2
            {
            pushFollow(FOLLOW_26);
            rule__LocalVarDecl__Group_2__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__LocalVarDecl__Group_2__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_2__1"


    // $ANTLR start "rule__LocalVarDecl__Group_2__1__Impl"
    // InternalFortXTrans.g:11219:1: rule__LocalVarDecl__Group_2__1__Impl : ( ( rule__LocalVarDecl__IdtupAssignment_2_1 ) ) ;
    public final void rule__LocalVarDecl__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11223:1: ( ( ( rule__LocalVarDecl__IdtupAssignment_2_1 ) ) )
            // InternalFortXTrans.g:11224:1: ( ( rule__LocalVarDecl__IdtupAssignment_2_1 ) )
            {
            // InternalFortXTrans.g:11224:1: ( ( rule__LocalVarDecl__IdtupAssignment_2_1 ) )
            // InternalFortXTrans.g:11225:2: ( rule__LocalVarDecl__IdtupAssignment_2_1 )
            {
             before(grammarAccess.getLocalVarDeclAccess().getIdtupAssignment_2_1()); 
            // InternalFortXTrans.g:11226:2: ( rule__LocalVarDecl__IdtupAssignment_2_1 )
            // InternalFortXTrans.g:11226:3: rule__LocalVarDecl__IdtupAssignment_2_1
            {
            pushFollow(FOLLOW_2);
            rule__LocalVarDecl__IdtupAssignment_2_1();

            state._fsp--;


            }

             after(grammarAccess.getLocalVarDeclAccess().getIdtupAssignment_2_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_2__1__Impl"


    // $ANTLR start "rule__LocalVarDecl__Group_2__2"
    // InternalFortXTrans.g:11234:1: rule__LocalVarDecl__Group_2__2 : rule__LocalVarDecl__Group_2__2__Impl rule__LocalVarDecl__Group_2__3 ;
    public final void rule__LocalVarDecl__Group_2__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11238:1: ( rule__LocalVarDecl__Group_2__2__Impl rule__LocalVarDecl__Group_2__3 )
            // InternalFortXTrans.g:11239:2: rule__LocalVarDecl__Group_2__2__Impl rule__LocalVarDecl__Group_2__3
            {
            pushFollow(FOLLOW_5);
            rule__LocalVarDecl__Group_2__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__LocalVarDecl__Group_2__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_2__2"


    // $ANTLR start "rule__LocalVarDecl__Group_2__2__Impl"
    // InternalFortXTrans.g:11246:1: rule__LocalVarDecl__Group_2__2__Impl : ( ':' ) ;
    public final void rule__LocalVarDecl__Group_2__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11250:1: ( ( ':' ) )
            // InternalFortXTrans.g:11251:1: ( ':' )
            {
            // InternalFortXTrans.g:11251:1: ( ':' )
            // InternalFortXTrans.g:11252:2: ':'
            {
             before(grammarAccess.getLocalVarDeclAccess().getColonKeyword_2_2()); 
            match(input,35,FOLLOW_2); 
             after(grammarAccess.getLocalVarDeclAccess().getColonKeyword_2_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_2__2__Impl"


    // $ANTLR start "rule__LocalVarDecl__Group_2__3"
    // InternalFortXTrans.g:11261:1: rule__LocalVarDecl__Group_2__3 : rule__LocalVarDecl__Group_2__3__Impl rule__LocalVarDecl__Group_2__4 ;
    public final void rule__LocalVarDecl__Group_2__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11265:1: ( rule__LocalVarDecl__Group_2__3__Impl rule__LocalVarDecl__Group_2__4 )
            // InternalFortXTrans.g:11266:2: rule__LocalVarDecl__Group_2__3__Impl rule__LocalVarDecl__Group_2__4
            {
            pushFollow(FOLLOW_17);
            rule__LocalVarDecl__Group_2__3__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__LocalVarDecl__Group_2__4();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_2__3"


    // $ANTLR start "rule__LocalVarDecl__Group_2__3__Impl"
    // InternalFortXTrans.g:11273:1: rule__LocalVarDecl__Group_2__3__Impl : ( ( rule__LocalVarDecl__TypeAssignment_2_3 ) ) ;
    public final void rule__LocalVarDecl__Group_2__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11277:1: ( ( ( rule__LocalVarDecl__TypeAssignment_2_3 ) ) )
            // InternalFortXTrans.g:11278:1: ( ( rule__LocalVarDecl__TypeAssignment_2_3 ) )
            {
            // InternalFortXTrans.g:11278:1: ( ( rule__LocalVarDecl__TypeAssignment_2_3 ) )
            // InternalFortXTrans.g:11279:2: ( rule__LocalVarDecl__TypeAssignment_2_3 )
            {
             before(grammarAccess.getLocalVarDeclAccess().getTypeAssignment_2_3()); 
            // InternalFortXTrans.g:11280:2: ( rule__LocalVarDecl__TypeAssignment_2_3 )
            // InternalFortXTrans.g:11280:3: rule__LocalVarDecl__TypeAssignment_2_3
            {
            pushFollow(FOLLOW_2);
            rule__LocalVarDecl__TypeAssignment_2_3();

            state._fsp--;


            }

             after(grammarAccess.getLocalVarDeclAccess().getTypeAssignment_2_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_2__3__Impl"


    // $ANTLR start "rule__LocalVarDecl__Group_2__4"
    // InternalFortXTrans.g:11288:1: rule__LocalVarDecl__Group_2__4 : rule__LocalVarDecl__Group_2__4__Impl rule__LocalVarDecl__Group_2__5 ;
    public final void rule__LocalVarDecl__Group_2__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11292:1: ( rule__LocalVarDecl__Group_2__4__Impl rule__LocalVarDecl__Group_2__5 )
            // InternalFortXTrans.g:11293:2: rule__LocalVarDecl__Group_2__4__Impl rule__LocalVarDecl__Group_2__5
            {
            pushFollow(FOLLOW_78);
            rule__LocalVarDecl__Group_2__4__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__LocalVarDecl__Group_2__5();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_2__4"


    // $ANTLR start "rule__LocalVarDecl__Group_2__4__Impl"
    // InternalFortXTrans.g:11300:1: rule__LocalVarDecl__Group_2__4__Impl : ( RULE_DOTS ) ;
    public final void rule__LocalVarDecl__Group_2__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11304:1: ( ( RULE_DOTS ) )
            // InternalFortXTrans.g:11305:1: ( RULE_DOTS )
            {
            // InternalFortXTrans.g:11305:1: ( RULE_DOTS )
            // InternalFortXTrans.g:11306:2: RULE_DOTS
            {
             before(grammarAccess.getLocalVarDeclAccess().getDOTSTerminalRuleCall_2_4()); 
            match(input,RULE_DOTS,FOLLOW_2); 
             after(grammarAccess.getLocalVarDeclAccess().getDOTSTerminalRuleCall_2_4()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_2__4__Impl"


    // $ANTLR start "rule__LocalVarDecl__Group_2__5"
    // InternalFortXTrans.g:11315:1: rule__LocalVarDecl__Group_2__5 : rule__LocalVarDecl__Group_2__5__Impl rule__LocalVarDecl__Group_2__6 ;
    public final void rule__LocalVarDecl__Group_2__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11319:1: ( rule__LocalVarDecl__Group_2__5__Impl rule__LocalVarDecl__Group_2__6 )
            // InternalFortXTrans.g:11320:2: rule__LocalVarDecl__Group_2__5__Impl rule__LocalVarDecl__Group_2__6
            {
            pushFollow(FOLLOW_32);
            rule__LocalVarDecl__Group_2__5__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__LocalVarDecl__Group_2__6();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_2__5"


    // $ANTLR start "rule__LocalVarDecl__Group_2__5__Impl"
    // InternalFortXTrans.g:11327:1: rule__LocalVarDecl__Group_2__5__Impl : ( '=' ) ;
    public final void rule__LocalVarDecl__Group_2__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11331:1: ( ( '=' ) )
            // InternalFortXTrans.g:11332:1: ( '=' )
            {
            // InternalFortXTrans.g:11332:1: ( '=' )
            // InternalFortXTrans.g:11333:2: '='
            {
             before(grammarAccess.getLocalVarDeclAccess().getEqualsSignKeyword_2_5()); 
            match(input,58,FOLLOW_2); 
             after(grammarAccess.getLocalVarDeclAccess().getEqualsSignKeyword_2_5()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_2__5__Impl"


    // $ANTLR start "rule__LocalVarDecl__Group_2__6"
    // InternalFortXTrans.g:11342:1: rule__LocalVarDecl__Group_2__6 : rule__LocalVarDecl__Group_2__6__Impl ;
    public final void rule__LocalVarDecl__Group_2__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11346:1: ( rule__LocalVarDecl__Group_2__6__Impl )
            // InternalFortXTrans.g:11347:2: rule__LocalVarDecl__Group_2__6__Impl
            {
            pushFollow(FOLLOW_2);
            rule__LocalVarDecl__Group_2__6__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_2__6"


    // $ANTLR start "rule__LocalVarDecl__Group_2__6__Impl"
    // InternalFortXTrans.g:11353:1: rule__LocalVarDecl__Group_2__6__Impl : ( ( rule__LocalVarDecl__InitAssignment_2_6 ) ) ;
    public final void rule__LocalVarDecl__Group_2__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11357:1: ( ( ( rule__LocalVarDecl__InitAssignment_2_6 ) ) )
            // InternalFortXTrans.g:11358:1: ( ( rule__LocalVarDecl__InitAssignment_2_6 ) )
            {
            // InternalFortXTrans.g:11358:1: ( ( rule__LocalVarDecl__InitAssignment_2_6 ) )
            // InternalFortXTrans.g:11359:2: ( rule__LocalVarDecl__InitAssignment_2_6 )
            {
             before(grammarAccess.getLocalVarDeclAccess().getInitAssignment_2_6()); 
            // InternalFortXTrans.g:11360:2: ( rule__LocalVarDecl__InitAssignment_2_6 )
            // InternalFortXTrans.g:11360:3: rule__LocalVarDecl__InitAssignment_2_6
            {
            pushFollow(FOLLOW_2);
            rule__LocalVarDecl__InitAssignment_2_6();

            state._fsp--;


            }

             after(grammarAccess.getLocalVarDeclAccess().getInitAssignment_2_6()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_2__6__Impl"


    // $ANTLR start "rule__LocalVarDecl__Group_3__0"
    // InternalFortXTrans.g:11369:1: rule__LocalVarDecl__Group_3__0 : rule__LocalVarDecl__Group_3__0__Impl rule__LocalVarDecl__Group_3__1 ;
    public final void rule__LocalVarDecl__Group_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11373:1: ( rule__LocalVarDecl__Group_3__0__Impl rule__LocalVarDecl__Group_3__1 )
            // InternalFortXTrans.g:11374:2: rule__LocalVarDecl__Group_3__0__Impl rule__LocalVarDecl__Group_3__1
            {
            pushFollow(FOLLOW_77);
            rule__LocalVarDecl__Group_3__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__LocalVarDecl__Group_3__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_3__0"


    // $ANTLR start "rule__LocalVarDecl__Group_3__0__Impl"
    // InternalFortXTrans.g:11381:1: rule__LocalVarDecl__Group_3__0__Impl : ( ( rule__LocalVarDecl__MutAssignment_3_0 )? ) ;
    public final void rule__LocalVarDecl__Group_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11385:1: ( ( ( rule__LocalVarDecl__MutAssignment_3_0 )? ) )
            // InternalFortXTrans.g:11386:1: ( ( rule__LocalVarDecl__MutAssignment_3_0 )? )
            {
            // InternalFortXTrans.g:11386:1: ( ( rule__LocalVarDecl__MutAssignment_3_0 )? )
            // InternalFortXTrans.g:11387:2: ( rule__LocalVarDecl__MutAssignment_3_0 )?
            {
             before(grammarAccess.getLocalVarDeclAccess().getMutAssignment_3_0()); 
            // InternalFortXTrans.g:11388:2: ( rule__LocalVarDecl__MutAssignment_3_0 )?
            int alt98=2;
            int LA98_0 = input.LA(1);

            if ( (LA98_0==73) ) {
                alt98=1;
            }
            switch (alt98) {
                case 1 :
                    // InternalFortXTrans.g:11388:3: rule__LocalVarDecl__MutAssignment_3_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__LocalVarDecl__MutAssignment_3_0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getLocalVarDeclAccess().getMutAssignment_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_3__0__Impl"


    // $ANTLR start "rule__LocalVarDecl__Group_3__1"
    // InternalFortXTrans.g:11396:1: rule__LocalVarDecl__Group_3__1 : rule__LocalVarDecl__Group_3__1__Impl rule__LocalVarDecl__Group_3__2 ;
    public final void rule__LocalVarDecl__Group_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11400:1: ( rule__LocalVarDecl__Group_3__1__Impl rule__LocalVarDecl__Group_3__2 )
            // InternalFortXTrans.g:11401:2: rule__LocalVarDecl__Group_3__1__Impl rule__LocalVarDecl__Group_3__2
            {
            pushFollow(FOLLOW_26);
            rule__LocalVarDecl__Group_3__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__LocalVarDecl__Group_3__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_3__1"


    // $ANTLR start "rule__LocalVarDecl__Group_3__1__Impl"
    // InternalFortXTrans.g:11408:1: rule__LocalVarDecl__Group_3__1__Impl : ( ( rule__LocalVarDecl__IdtupAssignment_3_1 ) ) ;
    public final void rule__LocalVarDecl__Group_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11412:1: ( ( ( rule__LocalVarDecl__IdtupAssignment_3_1 ) ) )
            // InternalFortXTrans.g:11413:1: ( ( rule__LocalVarDecl__IdtupAssignment_3_1 ) )
            {
            // InternalFortXTrans.g:11413:1: ( ( rule__LocalVarDecl__IdtupAssignment_3_1 ) )
            // InternalFortXTrans.g:11414:2: ( rule__LocalVarDecl__IdtupAssignment_3_1 )
            {
             before(grammarAccess.getLocalVarDeclAccess().getIdtupAssignment_3_1()); 
            // InternalFortXTrans.g:11415:2: ( rule__LocalVarDecl__IdtupAssignment_3_1 )
            // InternalFortXTrans.g:11415:3: rule__LocalVarDecl__IdtupAssignment_3_1
            {
            pushFollow(FOLLOW_2);
            rule__LocalVarDecl__IdtupAssignment_3_1();

            state._fsp--;


            }

             after(grammarAccess.getLocalVarDeclAccess().getIdtupAssignment_3_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_3__1__Impl"


    // $ANTLR start "rule__LocalVarDecl__Group_3__2"
    // InternalFortXTrans.g:11423:1: rule__LocalVarDecl__Group_3__2 : rule__LocalVarDecl__Group_3__2__Impl rule__LocalVarDecl__Group_3__3 ;
    public final void rule__LocalVarDecl__Group_3__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11427:1: ( rule__LocalVarDecl__Group_3__2__Impl rule__LocalVarDecl__Group_3__3 )
            // InternalFortXTrans.g:11428:2: rule__LocalVarDecl__Group_3__2__Impl rule__LocalVarDecl__Group_3__3
            {
            pushFollow(FOLLOW_27);
            rule__LocalVarDecl__Group_3__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__LocalVarDecl__Group_3__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_3__2"


    // $ANTLR start "rule__LocalVarDecl__Group_3__2__Impl"
    // InternalFortXTrans.g:11435:1: rule__LocalVarDecl__Group_3__2__Impl : ( ':' ) ;
    public final void rule__LocalVarDecl__Group_3__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11439:1: ( ( ':' ) )
            // InternalFortXTrans.g:11440:1: ( ':' )
            {
            // InternalFortXTrans.g:11440:1: ( ':' )
            // InternalFortXTrans.g:11441:2: ':'
            {
             before(grammarAccess.getLocalVarDeclAccess().getColonKeyword_3_2()); 
            match(input,35,FOLLOW_2); 
             after(grammarAccess.getLocalVarDeclAccess().getColonKeyword_3_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_3__2__Impl"


    // $ANTLR start "rule__LocalVarDecl__Group_3__3"
    // InternalFortXTrans.g:11450:1: rule__LocalVarDecl__Group_3__3 : rule__LocalVarDecl__Group_3__3__Impl rule__LocalVarDecl__Group_3__4 ;
    public final void rule__LocalVarDecl__Group_3__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11454:1: ( rule__LocalVarDecl__Group_3__3__Impl rule__LocalVarDecl__Group_3__4 )
            // InternalFortXTrans.g:11455:2: rule__LocalVarDecl__Group_3__3__Impl rule__LocalVarDecl__Group_3__4
            {
            pushFollow(FOLLOW_78);
            rule__LocalVarDecl__Group_3__3__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__LocalVarDecl__Group_3__4();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_3__3"


    // $ANTLR start "rule__LocalVarDecl__Group_3__3__Impl"
    // InternalFortXTrans.g:11462:1: rule__LocalVarDecl__Group_3__3__Impl : ( ( rule__LocalVarDecl__TuptypeAssignment_3_3 ) ) ;
    public final void rule__LocalVarDecl__Group_3__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11466:1: ( ( ( rule__LocalVarDecl__TuptypeAssignment_3_3 ) ) )
            // InternalFortXTrans.g:11467:1: ( ( rule__LocalVarDecl__TuptypeAssignment_3_3 ) )
            {
            // InternalFortXTrans.g:11467:1: ( ( rule__LocalVarDecl__TuptypeAssignment_3_3 ) )
            // InternalFortXTrans.g:11468:2: ( rule__LocalVarDecl__TuptypeAssignment_3_3 )
            {
             before(grammarAccess.getLocalVarDeclAccess().getTuptypeAssignment_3_3()); 
            // InternalFortXTrans.g:11469:2: ( rule__LocalVarDecl__TuptypeAssignment_3_3 )
            // InternalFortXTrans.g:11469:3: rule__LocalVarDecl__TuptypeAssignment_3_3
            {
            pushFollow(FOLLOW_2);
            rule__LocalVarDecl__TuptypeAssignment_3_3();

            state._fsp--;


            }

             after(grammarAccess.getLocalVarDeclAccess().getTuptypeAssignment_3_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_3__3__Impl"


    // $ANTLR start "rule__LocalVarDecl__Group_3__4"
    // InternalFortXTrans.g:11477:1: rule__LocalVarDecl__Group_3__4 : rule__LocalVarDecl__Group_3__4__Impl rule__LocalVarDecl__Group_3__5 ;
    public final void rule__LocalVarDecl__Group_3__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11481:1: ( rule__LocalVarDecl__Group_3__4__Impl rule__LocalVarDecl__Group_3__5 )
            // InternalFortXTrans.g:11482:2: rule__LocalVarDecl__Group_3__4__Impl rule__LocalVarDecl__Group_3__5
            {
            pushFollow(FOLLOW_32);
            rule__LocalVarDecl__Group_3__4__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__LocalVarDecl__Group_3__5();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_3__4"


    // $ANTLR start "rule__LocalVarDecl__Group_3__4__Impl"
    // InternalFortXTrans.g:11489:1: rule__LocalVarDecl__Group_3__4__Impl : ( '=' ) ;
    public final void rule__LocalVarDecl__Group_3__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11493:1: ( ( '=' ) )
            // InternalFortXTrans.g:11494:1: ( '=' )
            {
            // InternalFortXTrans.g:11494:1: ( '=' )
            // InternalFortXTrans.g:11495:2: '='
            {
             before(grammarAccess.getLocalVarDeclAccess().getEqualsSignKeyword_3_4()); 
            match(input,58,FOLLOW_2); 
             after(grammarAccess.getLocalVarDeclAccess().getEqualsSignKeyword_3_4()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_3__4__Impl"


    // $ANTLR start "rule__LocalVarDecl__Group_3__5"
    // InternalFortXTrans.g:11504:1: rule__LocalVarDecl__Group_3__5 : rule__LocalVarDecl__Group_3__5__Impl ;
    public final void rule__LocalVarDecl__Group_3__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11508:1: ( rule__LocalVarDecl__Group_3__5__Impl )
            // InternalFortXTrans.g:11509:2: rule__LocalVarDecl__Group_3__5__Impl
            {
            pushFollow(FOLLOW_2);
            rule__LocalVarDecl__Group_3__5__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_3__5"


    // $ANTLR start "rule__LocalVarDecl__Group_3__5__Impl"
    // InternalFortXTrans.g:11515:1: rule__LocalVarDecl__Group_3__5__Impl : ( ( rule__LocalVarDecl__InitAssignment_3_5 ) ) ;
    public final void rule__LocalVarDecl__Group_3__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11519:1: ( ( ( rule__LocalVarDecl__InitAssignment_3_5 ) ) )
            // InternalFortXTrans.g:11520:1: ( ( rule__LocalVarDecl__InitAssignment_3_5 ) )
            {
            // InternalFortXTrans.g:11520:1: ( ( rule__LocalVarDecl__InitAssignment_3_5 ) )
            // InternalFortXTrans.g:11521:2: ( rule__LocalVarDecl__InitAssignment_3_5 )
            {
             before(grammarAccess.getLocalVarDeclAccess().getInitAssignment_3_5()); 
            // InternalFortXTrans.g:11522:2: ( rule__LocalVarDecl__InitAssignment_3_5 )
            // InternalFortXTrans.g:11522:3: rule__LocalVarDecl__InitAssignment_3_5
            {
            pushFollow(FOLLOW_2);
            rule__LocalVarDecl__InitAssignment_3_5();

            state._fsp--;


            }

             after(grammarAccess.getLocalVarDeclAccess().getInitAssignment_3_5()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_3__5__Impl"


    // $ANTLR start "rule__Component__NameAssignment_1"
    // InternalFortXTrans.g:11531:1: rule__Component__NameAssignment_1 : ( RULE_ID ) ;
    public final void rule__Component__NameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11535:1: ( ( RULE_ID ) )
            // InternalFortXTrans.g:11536:2: ( RULE_ID )
            {
            // InternalFortXTrans.g:11536:2: ( RULE_ID )
            // InternalFortXTrans.g:11537:3: RULE_ID
            {
             before(grammarAccess.getComponentAccess().getNameIDTerminalRuleCall_1_0()); 
            match(input,RULE_ID,FOLLOW_2); 
             after(grammarAccess.getComponentAccess().getNameIDTerminalRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Component__NameAssignment_1"


    // $ANTLR start "rule__Component__ImportsAssignment_2"
    // InternalFortXTrans.g:11546:1: rule__Component__ImportsAssignment_2 : ( ruleImport ) ;
    public final void rule__Component__ImportsAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11550:1: ( ( ruleImport ) )
            // InternalFortXTrans.g:11551:2: ( ruleImport )
            {
            // InternalFortXTrans.g:11551:2: ( ruleImport )
            // InternalFortXTrans.g:11552:3: ruleImport
            {
             before(grammarAccess.getComponentAccess().getImportsImportParserRuleCall_2_0()); 
            pushFollow(FOLLOW_2);
            ruleImport();

            state._fsp--;

             after(grammarAccess.getComponentAccess().getImportsImportParserRuleCall_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Component__ImportsAssignment_2"


    // $ANTLR start "rule__Component__ExportsAssignment_3"
    // InternalFortXTrans.g:11561:1: rule__Component__ExportsAssignment_3 : ( ruleExport ) ;
    public final void rule__Component__ExportsAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11565:1: ( ( ruleExport ) )
            // InternalFortXTrans.g:11566:2: ( ruleExport )
            {
            // InternalFortXTrans.g:11566:2: ( ruleExport )
            // InternalFortXTrans.g:11567:3: ruleExport
            {
             before(grammarAccess.getComponentAccess().getExportsExportParserRuleCall_3_0()); 
            pushFollow(FOLLOW_2);
            ruleExport();

            state._fsp--;

             after(grammarAccess.getComponentAccess().getExportsExportParserRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Component__ExportsAssignment_3"


    // $ANTLR start "rule__Component__DeclsAssignment_4"
    // InternalFortXTrans.g:11576:1: rule__Component__DeclsAssignment_4 : ( ruleDecls ) ;
    public final void rule__Component__DeclsAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11580:1: ( ( ruleDecls ) )
            // InternalFortXTrans.g:11581:2: ( ruleDecls )
            {
            // InternalFortXTrans.g:11581:2: ( ruleDecls )
            // InternalFortXTrans.g:11582:3: ruleDecls
            {
             before(grammarAccess.getComponentAccess().getDeclsDeclsParserRuleCall_4_0()); 
            pushFollow(FOLLOW_2);
            ruleDecls();

            state._fsp--;

             after(grammarAccess.getComponentAccess().getDeclsDeclsParserRuleCall_4_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Component__DeclsAssignment_4"


    // $ANTLR start "rule__API__NameAssignment_1"
    // InternalFortXTrans.g:11591:1: rule__API__NameAssignment_1 : ( RULE_ID ) ;
    public final void rule__API__NameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11595:1: ( ( RULE_ID ) )
            // InternalFortXTrans.g:11596:2: ( RULE_ID )
            {
            // InternalFortXTrans.g:11596:2: ( RULE_ID )
            // InternalFortXTrans.g:11597:3: RULE_ID
            {
             before(grammarAccess.getAPIAccess().getNameIDTerminalRuleCall_1_0()); 
            match(input,RULE_ID,FOLLOW_2); 
             after(grammarAccess.getAPIAccess().getNameIDTerminalRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__API__NameAssignment_1"


    // $ANTLR start "rule__API__ImportsAssignment_2"
    // InternalFortXTrans.g:11606:1: rule__API__ImportsAssignment_2 : ( ruleImport ) ;
    public final void rule__API__ImportsAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11610:1: ( ( ruleImport ) )
            // InternalFortXTrans.g:11611:2: ( ruleImport )
            {
            // InternalFortXTrans.g:11611:2: ( ruleImport )
            // InternalFortXTrans.g:11612:3: ruleImport
            {
             before(grammarAccess.getAPIAccess().getImportsImportParserRuleCall_2_0()); 
            pushFollow(FOLLOW_2);
            ruleImport();

            state._fsp--;

             after(grammarAccess.getAPIAccess().getImportsImportParserRuleCall_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__API__ImportsAssignment_2"


    // $ANTLR start "rule__Import__ImpsAssignment_0_0"
    // InternalFortXTrans.g:11621:1: rule__Import__ImpsAssignment_0_0 : ( ( 'import' ) ) ;
    public final void rule__Import__ImpsAssignment_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11625:1: ( ( ( 'import' ) ) )
            // InternalFortXTrans.g:11626:2: ( ( 'import' ) )
            {
            // InternalFortXTrans.g:11626:2: ( ( 'import' ) )
            // InternalFortXTrans.g:11627:3: ( 'import' )
            {
             before(grammarAccess.getImportAccess().getImpsImportKeyword_0_0_0()); 
            // InternalFortXTrans.g:11628:3: ( 'import' )
            // InternalFortXTrans.g:11629:4: 'import'
            {
             before(grammarAccess.getImportAccess().getImpsImportKeyword_0_0_0()); 
            match(input,59,FOLLOW_2); 
             after(grammarAccess.getImportAccess().getImpsImportKeyword_0_0_0()); 

            }

             after(grammarAccess.getImportAccess().getImpsImportKeyword_0_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Import__ImpsAssignment_0_0"


    // $ANTLR start "rule__Import__ImportedNamesAssignment_0_1"
    // InternalFortXTrans.g:11640:1: rule__Import__ImportedNamesAssignment_0_1 : ( ruleImportedNames ) ;
    public final void rule__Import__ImportedNamesAssignment_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11644:1: ( ( ruleImportedNames ) )
            // InternalFortXTrans.g:11645:2: ( ruleImportedNames )
            {
            // InternalFortXTrans.g:11645:2: ( ruleImportedNames )
            // InternalFortXTrans.g:11646:3: ruleImportedNames
            {
             before(grammarAccess.getImportAccess().getImportedNamesImportedNamesParserRuleCall_0_1_0()); 
            pushFollow(FOLLOW_2);
            ruleImportedNames();

            state._fsp--;

             after(grammarAccess.getImportAccess().getImportedNamesImportedNamesParserRuleCall_0_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Import__ImportedNamesAssignment_0_1"


    // $ANTLR start "rule__Import__ImpsAssignment_1_0"
    // InternalFortXTrans.g:11655:1: rule__Import__ImpsAssignment_1_0 : ( ( 'import' ) ) ;
    public final void rule__Import__ImpsAssignment_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11659:1: ( ( ( 'import' ) ) )
            // InternalFortXTrans.g:11660:2: ( ( 'import' ) )
            {
            // InternalFortXTrans.g:11660:2: ( ( 'import' ) )
            // InternalFortXTrans.g:11661:3: ( 'import' )
            {
             before(grammarAccess.getImportAccess().getImpsImportKeyword_1_0_0()); 
            // InternalFortXTrans.g:11662:3: ( 'import' )
            // InternalFortXTrans.g:11663:4: 'import'
            {
             before(grammarAccess.getImportAccess().getImpsImportKeyword_1_0_0()); 
            match(input,59,FOLLOW_2); 
             after(grammarAccess.getImportAccess().getImpsImportKeyword_1_0_0()); 

            }

             after(grammarAccess.getImportAccess().getImpsImportKeyword_1_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Import__ImpsAssignment_1_0"


    // $ANTLR start "rule__Import__ApiAssignment_1_1"
    // InternalFortXTrans.g:11674:1: rule__Import__ApiAssignment_1_1 : ( ( 'api' ) ) ;
    public final void rule__Import__ApiAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11678:1: ( ( ( 'api' ) ) )
            // InternalFortXTrans.g:11679:2: ( ( 'api' ) )
            {
            // InternalFortXTrans.g:11679:2: ( ( 'api' ) )
            // InternalFortXTrans.g:11680:3: ( 'api' )
            {
             before(grammarAccess.getImportAccess().getApiApiKeyword_1_1_0()); 
            // InternalFortXTrans.g:11681:3: ( 'api' )
            // InternalFortXTrans.g:11682:4: 'api'
            {
             before(grammarAccess.getImportAccess().getApiApiKeyword_1_1_0()); 
            match(input,27,FOLLOW_2); 
             after(grammarAccess.getImportAccess().getApiApiKeyword_1_1_0()); 

            }

             after(grammarAccess.getImportAccess().getApiApiKeyword_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Import__ApiAssignment_1_1"


    // $ANTLR start "rule__Import__AliasedimportedNamesAssignment_1_2"
    // InternalFortXTrans.g:11693:1: rule__Import__AliasedimportedNamesAssignment_1_2 : ( ruleAliasedAPINames ) ;
    public final void rule__Import__AliasedimportedNamesAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11697:1: ( ( ruleAliasedAPINames ) )
            // InternalFortXTrans.g:11698:2: ( ruleAliasedAPINames )
            {
            // InternalFortXTrans.g:11698:2: ( ruleAliasedAPINames )
            // InternalFortXTrans.g:11699:3: ruleAliasedAPINames
            {
             before(grammarAccess.getImportAccess().getAliasedimportedNamesAliasedAPINamesParserRuleCall_1_2_0()); 
            pushFollow(FOLLOW_2);
            ruleAliasedAPINames();

            state._fsp--;

             after(grammarAccess.getImportAccess().getAliasedimportedNamesAliasedAPINamesParserRuleCall_1_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Import__AliasedimportedNamesAssignment_1_2"


    // $ANTLR start "rule__Export__ExpAssignment_0_0"
    // InternalFortXTrans.g:11708:1: rule__Export__ExpAssignment_0_0 : ( ( 'export' ) ) ;
    public final void rule__Export__ExpAssignment_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11712:1: ( ( ( 'export' ) ) )
            // InternalFortXTrans.g:11713:2: ( ( 'export' ) )
            {
            // InternalFortXTrans.g:11713:2: ( ( 'export' ) )
            // InternalFortXTrans.g:11714:3: ( 'export' )
            {
             before(grammarAccess.getExportAccess().getExpExportKeyword_0_0_0()); 
            // InternalFortXTrans.g:11715:3: ( 'export' )
            // InternalFortXTrans.g:11716:4: 'export'
            {
             before(grammarAccess.getExportAccess().getExpExportKeyword_0_0_0()); 
            match(input,60,FOLLOW_2); 
             after(grammarAccess.getExportAccess().getExpExportKeyword_0_0_0()); 

            }

             after(grammarAccess.getExportAccess().getExpExportKeyword_0_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Export__ExpAssignment_0_0"


    // $ANTLR start "rule__Export__ExportedNameAssignment_0_1"
    // InternalFortXTrans.g:11727:1: rule__Export__ExportedNameAssignment_0_1 : ( ruleQualifiedName ) ;
    public final void rule__Export__ExportedNameAssignment_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11731:1: ( ( ruleQualifiedName ) )
            // InternalFortXTrans.g:11732:2: ( ruleQualifiedName )
            {
            // InternalFortXTrans.g:11732:2: ( ruleQualifiedName )
            // InternalFortXTrans.g:11733:3: ruleQualifiedName
            {
             before(grammarAccess.getExportAccess().getExportedNameQualifiedNameParserRuleCall_0_1_0()); 
            pushFollow(FOLLOW_2);
            ruleQualifiedName();

            state._fsp--;

             after(grammarAccess.getExportAccess().getExportedNameQualifiedNameParserRuleCall_0_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Export__ExportedNameAssignment_0_1"


    // $ANTLR start "rule__Export__ExpAssignment_1_0"
    // InternalFortXTrans.g:11742:1: rule__Export__ExpAssignment_1_0 : ( ( 'export' ) ) ;
    public final void rule__Export__ExpAssignment_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11746:1: ( ( ( 'export' ) ) )
            // InternalFortXTrans.g:11747:2: ( ( 'export' ) )
            {
            // InternalFortXTrans.g:11747:2: ( ( 'export' ) )
            // InternalFortXTrans.g:11748:3: ( 'export' )
            {
             before(grammarAccess.getExportAccess().getExpExportKeyword_1_0_0()); 
            // InternalFortXTrans.g:11749:3: ( 'export' )
            // InternalFortXTrans.g:11750:4: 'export'
            {
             before(grammarAccess.getExportAccess().getExpExportKeyword_1_0_0()); 
            match(input,60,FOLLOW_2); 
             after(grammarAccess.getExportAccess().getExpExportKeyword_1_0_0()); 

            }

             after(grammarAccess.getExportAccess().getExpExportKeyword_1_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Export__ExpAssignment_1_0"


    // $ANTLR start "rule__Export__BrackAssignment_1_1"
    // InternalFortXTrans.g:11761:1: rule__Export__BrackAssignment_1_1 : ( ( '{' ) ) ;
    public final void rule__Export__BrackAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11765:1: ( ( ( '{' ) ) )
            // InternalFortXTrans.g:11766:2: ( ( '{' ) )
            {
            // InternalFortXTrans.g:11766:2: ( ( '{' ) )
            // InternalFortXTrans.g:11767:3: ( '{' )
            {
             before(grammarAccess.getExportAccess().getBrackLeftCurlyBracketKeyword_1_1_0()); 
            // InternalFortXTrans.g:11768:3: ( '{' )
            // InternalFortXTrans.g:11769:4: '{'
            {
             before(grammarAccess.getExportAccess().getBrackLeftCurlyBracketKeyword_1_1_0()); 
            match(input,31,FOLLOW_2); 
             after(grammarAccess.getExportAccess().getBrackLeftCurlyBracketKeyword_1_1_0()); 

            }

             after(grammarAccess.getExportAccess().getBrackLeftCurlyBracketKeyword_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Export__BrackAssignment_1_1"


    // $ANTLR start "rule__Export__ExportedNameAssignment_1_2"
    // InternalFortXTrans.g:11780:1: rule__Export__ExportedNameAssignment_1_2 : ( ruleQualifiedName ) ;
    public final void rule__Export__ExportedNameAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11784:1: ( ( ruleQualifiedName ) )
            // InternalFortXTrans.g:11785:2: ( ruleQualifiedName )
            {
            // InternalFortXTrans.g:11785:2: ( ruleQualifiedName )
            // InternalFortXTrans.g:11786:3: ruleQualifiedName
            {
             before(grammarAccess.getExportAccess().getExportedNameQualifiedNameParserRuleCall_1_2_0()); 
            pushFollow(FOLLOW_2);
            ruleQualifiedName();

            state._fsp--;

             after(grammarAccess.getExportAccess().getExportedNameQualifiedNameParserRuleCall_1_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Export__ExportedNameAssignment_1_2"


    // $ANTLR start "rule__Export__ExportedNameAssignment_1_3_1"
    // InternalFortXTrans.g:11795:1: rule__Export__ExportedNameAssignment_1_3_1 : ( ruleQualifiedName ) ;
    public final void rule__Export__ExportedNameAssignment_1_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11799:1: ( ( ruleQualifiedName ) )
            // InternalFortXTrans.g:11800:2: ( ruleQualifiedName )
            {
            // InternalFortXTrans.g:11800:2: ( ruleQualifiedName )
            // InternalFortXTrans.g:11801:3: ruleQualifiedName
            {
             before(grammarAccess.getExportAccess().getExportedNameQualifiedNameParserRuleCall_1_3_1_0()); 
            pushFollow(FOLLOW_2);
            ruleQualifiedName();

            state._fsp--;

             after(grammarAccess.getExportAccess().getExportedNameQualifiedNameParserRuleCall_1_3_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Export__ExportedNameAssignment_1_3_1"


    // $ANTLR start "rule__ImportedNames__ImpnameAssignment_0_0"
    // InternalFortXTrans.g:11810:1: rule__ImportedNames__ImpnameAssignment_0_0 : ( ruleQualifiedName ) ;
    public final void rule__ImportedNames__ImpnameAssignment_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11814:1: ( ( ruleQualifiedName ) )
            // InternalFortXTrans.g:11815:2: ( ruleQualifiedName )
            {
            // InternalFortXTrans.g:11815:2: ( ruleQualifiedName )
            // InternalFortXTrans.g:11816:3: ruleQualifiedName
            {
             before(grammarAccess.getImportedNamesAccess().getImpnameQualifiedNameParserRuleCall_0_0_0()); 
            pushFollow(FOLLOW_2);
            ruleQualifiedName();

            state._fsp--;

             after(grammarAccess.getImportedNamesAccess().getImpnameQualifiedNameParserRuleCall_0_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__ImpnameAssignment_0_0"


    // $ANTLR start "rule__ImportedNames__ExceptAssignment_0_5_0"
    // InternalFortXTrans.g:11825:1: rule__ImportedNames__ExceptAssignment_0_5_0 : ( ( 'except' ) ) ;
    public final void rule__ImportedNames__ExceptAssignment_0_5_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11829:1: ( ( ( 'except' ) ) )
            // InternalFortXTrans.g:11830:2: ( ( 'except' ) )
            {
            // InternalFortXTrans.g:11830:2: ( ( 'except' ) )
            // InternalFortXTrans.g:11831:3: ( 'except' )
            {
             before(grammarAccess.getImportedNamesAccess().getExceptExceptKeyword_0_5_0_0()); 
            // InternalFortXTrans.g:11832:3: ( 'except' )
            // InternalFortXTrans.g:11833:4: 'except'
            {
             before(grammarAccess.getImportedNamesAccess().getExceptExceptKeyword_0_5_0_0()); 
            match(input,61,FOLLOW_2); 
             after(grammarAccess.getImportedNamesAccess().getExceptExceptKeyword_0_5_0_0()); 

            }

             after(grammarAccess.getImportedNamesAccess().getExceptExceptKeyword_0_5_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__ExceptAssignment_0_5_0"


    // $ANTLR start "rule__ImportedNames__SimpAssignment_0_5_1"
    // InternalFortXTrans.g:11844:1: rule__ImportedNames__SimpAssignment_0_5_1 : ( ruleSimpleNames ) ;
    public final void rule__ImportedNames__SimpAssignment_0_5_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11848:1: ( ( ruleSimpleNames ) )
            // InternalFortXTrans.g:11849:2: ( ruleSimpleNames )
            {
            // InternalFortXTrans.g:11849:2: ( ruleSimpleNames )
            // InternalFortXTrans.g:11850:3: ruleSimpleNames
            {
             before(grammarAccess.getImportedNamesAccess().getSimpSimpleNamesParserRuleCall_0_5_1_0()); 
            pushFollow(FOLLOW_2);
            ruleSimpleNames();

            state._fsp--;

             after(grammarAccess.getImportedNamesAccess().getSimpSimpleNamesParserRuleCall_0_5_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__SimpAssignment_0_5_1"


    // $ANTLR start "rule__ImportedNames__ImpnameAssignment_1_0"
    // InternalFortXTrans.g:11859:1: rule__ImportedNames__ImpnameAssignment_1_0 : ( ruleQualifiedName ) ;
    public final void rule__ImportedNames__ImpnameAssignment_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11863:1: ( ( ruleQualifiedName ) )
            // InternalFortXTrans.g:11864:2: ( ruleQualifiedName )
            {
            // InternalFortXTrans.g:11864:2: ( ruleQualifiedName )
            // InternalFortXTrans.g:11865:3: ruleQualifiedName
            {
             before(grammarAccess.getImportedNamesAccess().getImpnameQualifiedNameParserRuleCall_1_0_0()); 
            pushFollow(FOLLOW_2);
            ruleQualifiedName();

            state._fsp--;

             after(grammarAccess.getImportedNamesAccess().getImpnameQualifiedNameParserRuleCall_1_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__ImpnameAssignment_1_0"


    // $ANTLR start "rule__ImportedNames__SimpListAssignment_1_3"
    // InternalFortXTrans.g:11874:1: rule__ImportedNames__SimpListAssignment_1_3 : ( ruleAliasedSimpleName ) ;
    public final void rule__ImportedNames__SimpListAssignment_1_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11878:1: ( ( ruleAliasedSimpleName ) )
            // InternalFortXTrans.g:11879:2: ( ruleAliasedSimpleName )
            {
            // InternalFortXTrans.g:11879:2: ( ruleAliasedSimpleName )
            // InternalFortXTrans.g:11880:3: ruleAliasedSimpleName
            {
             before(grammarAccess.getImportedNamesAccess().getSimpListAliasedSimpleNameParserRuleCall_1_3_0()); 
            pushFollow(FOLLOW_2);
            ruleAliasedSimpleName();

            state._fsp--;

             after(grammarAccess.getImportedNamesAccess().getSimpListAliasedSimpleNameParserRuleCall_1_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__SimpListAssignment_1_3"


    // $ANTLR start "rule__ImportedNames__SimpListAssignment_1_4_1"
    // InternalFortXTrans.g:11889:1: rule__ImportedNames__SimpListAssignment_1_4_1 : ( ruleAliasedSimpleName ) ;
    public final void rule__ImportedNames__SimpListAssignment_1_4_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11893:1: ( ( ruleAliasedSimpleName ) )
            // InternalFortXTrans.g:11894:2: ( ruleAliasedSimpleName )
            {
            // InternalFortXTrans.g:11894:2: ( ruleAliasedSimpleName )
            // InternalFortXTrans.g:11895:3: ruleAliasedSimpleName
            {
             before(grammarAccess.getImportedNamesAccess().getSimpListAliasedSimpleNameParserRuleCall_1_4_1_0()); 
            pushFollow(FOLLOW_2);
            ruleAliasedSimpleName();

            state._fsp--;

             after(grammarAccess.getImportedNamesAccess().getSimpListAliasedSimpleNameParserRuleCall_1_4_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__SimpListAssignment_1_4_1"


    // $ANTLR start "rule__ImportedNames__CommaAssignment_1_5_0"
    // InternalFortXTrans.g:11904:1: rule__ImportedNames__CommaAssignment_1_5_0 : ( ( ',' ) ) ;
    public final void rule__ImportedNames__CommaAssignment_1_5_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11908:1: ( ( ( ',' ) ) )
            // InternalFortXTrans.g:11909:2: ( ( ',' ) )
            {
            // InternalFortXTrans.g:11909:2: ( ( ',' ) )
            // InternalFortXTrans.g:11910:3: ( ',' )
            {
             before(grammarAccess.getImportedNamesAccess().getCommaCommaKeyword_1_5_0_0()); 
            // InternalFortXTrans.g:11911:3: ( ',' )
            // InternalFortXTrans.g:11912:4: ','
            {
             before(grammarAccess.getImportedNamesAccess().getCommaCommaKeyword_1_5_0_0()); 
            match(input,29,FOLLOW_2); 
             after(grammarAccess.getImportedNamesAccess().getCommaCommaKeyword_1_5_0_0()); 

            }

             after(grammarAccess.getImportedNamesAccess().getCommaCommaKeyword_1_5_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__CommaAssignment_1_5_0"


    // $ANTLR start "rule__ImportedNames__DotsAssignment_1_5_1"
    // InternalFortXTrans.g:11923:1: rule__ImportedNames__DotsAssignment_1_5_1 : ( RULE_DOTS ) ;
    public final void rule__ImportedNames__DotsAssignment_1_5_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11927:1: ( ( RULE_DOTS ) )
            // InternalFortXTrans.g:11928:2: ( RULE_DOTS )
            {
            // InternalFortXTrans.g:11928:2: ( RULE_DOTS )
            // InternalFortXTrans.g:11929:3: RULE_DOTS
            {
             before(grammarAccess.getImportedNamesAccess().getDotsDOTSTerminalRuleCall_1_5_1_0()); 
            match(input,RULE_DOTS,FOLLOW_2); 
             after(grammarAccess.getImportedNamesAccess().getDotsDOTSTerminalRuleCall_1_5_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__DotsAssignment_1_5_1"


    // $ANTLR start "rule__ImportedNames__ImpnameAssignment_2_0"
    // InternalFortXTrans.g:11938:1: rule__ImportedNames__ImpnameAssignment_2_0 : ( ruleQualifiedName ) ;
    public final void rule__ImportedNames__ImpnameAssignment_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11942:1: ( ( ruleQualifiedName ) )
            // InternalFortXTrans.g:11943:2: ( ruleQualifiedName )
            {
            // InternalFortXTrans.g:11943:2: ( ruleQualifiedName )
            // InternalFortXTrans.g:11944:3: ruleQualifiedName
            {
             before(grammarAccess.getImportedNamesAccess().getImpnameQualifiedNameParserRuleCall_2_0_0()); 
            pushFollow(FOLLOW_2);
            ruleQualifiedName();

            state._fsp--;

             after(grammarAccess.getImportedNamesAccess().getImpnameQualifiedNameParserRuleCall_2_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__ImpnameAssignment_2_0"


    // $ANTLR start "rule__ImportedNames__AsnameAssignment_2_1_1"
    // InternalFortXTrans.g:11953:1: rule__ImportedNames__AsnameAssignment_2_1_1 : ( RULE_ID ) ;
    public final void rule__ImportedNames__AsnameAssignment_2_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11957:1: ( ( RULE_ID ) )
            // InternalFortXTrans.g:11958:2: ( RULE_ID )
            {
            // InternalFortXTrans.g:11958:2: ( RULE_ID )
            // InternalFortXTrans.g:11959:3: RULE_ID
            {
             before(grammarAccess.getImportedNamesAccess().getAsnameIDTerminalRuleCall_2_1_1_0()); 
            match(input,RULE_ID,FOLLOW_2); 
             after(grammarAccess.getImportedNamesAccess().getAsnameIDTerminalRuleCall_2_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__AsnameAssignment_2_1_1"


    // $ANTLR start "rule__QualifiedName__SAssignment_0"
    // InternalFortXTrans.g:11968:1: rule__QualifiedName__SAssignment_0 : ( ruleSimpleName ) ;
    public final void rule__QualifiedName__SAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11972:1: ( ( ruleSimpleName ) )
            // InternalFortXTrans.g:11973:2: ( ruleSimpleName )
            {
            // InternalFortXTrans.g:11973:2: ( ruleSimpleName )
            // InternalFortXTrans.g:11974:3: ruleSimpleName
            {
             before(grammarAccess.getQualifiedNameAccess().getSSimpleNameParserRuleCall_0_0()); 
            pushFollow(FOLLOW_2);
            ruleSimpleName();

            state._fsp--;

             after(grammarAccess.getQualifiedNameAccess().getSSimpleNameParserRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedName__SAssignment_0"


    // $ANTLR start "rule__QualifiedName__SAssignment_1_1"
    // InternalFortXTrans.g:11983:1: rule__QualifiedName__SAssignment_1_1 : ( ruleSimpleName ) ;
    public final void rule__QualifiedName__SAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11987:1: ( ( ruleSimpleName ) )
            // InternalFortXTrans.g:11988:2: ( ruleSimpleName )
            {
            // InternalFortXTrans.g:11988:2: ( ruleSimpleName )
            // InternalFortXTrans.g:11989:3: ruleSimpleName
            {
             before(grammarAccess.getQualifiedNameAccess().getSSimpleNameParserRuleCall_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleSimpleName();

            state._fsp--;

             after(grammarAccess.getQualifiedNameAccess().getSSimpleNameParserRuleCall_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedName__SAssignment_1_1"


    // $ANTLR start "rule__QualifiedName__DotsAssignment_2"
    // InternalFortXTrans.g:11998:1: rule__QualifiedName__DotsAssignment_2 : ( RULE_DOTS ) ;
    public final void rule__QualifiedName__DotsAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12002:1: ( ( RULE_DOTS ) )
            // InternalFortXTrans.g:12003:2: ( RULE_DOTS )
            {
            // InternalFortXTrans.g:12003:2: ( RULE_DOTS )
            // InternalFortXTrans.g:12004:3: RULE_DOTS
            {
             before(grammarAccess.getQualifiedNameAccess().getDotsDOTSTerminalRuleCall_2_0()); 
            match(input,RULE_DOTS,FOLLOW_2); 
             after(grammarAccess.getQualifiedNameAccess().getDotsDOTSTerminalRuleCall_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedName__DotsAssignment_2"


    // $ANTLR start "rule__QualifiedNameTuple__QlistAssignment_0"
    // InternalFortXTrans.g:12013:1: rule__QualifiedNameTuple__QlistAssignment_0 : ( ruleQualifiedName ) ;
    public final void rule__QualifiedNameTuple__QlistAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12017:1: ( ( ruleQualifiedName ) )
            // InternalFortXTrans.g:12018:2: ( ruleQualifiedName )
            {
            // InternalFortXTrans.g:12018:2: ( ruleQualifiedName )
            // InternalFortXTrans.g:12019:3: ruleQualifiedName
            {
             before(grammarAccess.getQualifiedNameTupleAccess().getQlistQualifiedNameParserRuleCall_0_0()); 
            pushFollow(FOLLOW_2);
            ruleQualifiedName();

            state._fsp--;

             after(grammarAccess.getQualifiedNameTupleAccess().getQlistQualifiedNameParserRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedNameTuple__QlistAssignment_0"


    // $ANTLR start "rule__QualifiedNameTuple__QlistAssignment_1_1"
    // InternalFortXTrans.g:12028:1: rule__QualifiedNameTuple__QlistAssignment_1_1 : ( ruleQualifiedName ) ;
    public final void rule__QualifiedNameTuple__QlistAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12032:1: ( ( ruleQualifiedName ) )
            // InternalFortXTrans.g:12033:2: ( ruleQualifiedName )
            {
            // InternalFortXTrans.g:12033:2: ( ruleQualifiedName )
            // InternalFortXTrans.g:12034:3: ruleQualifiedName
            {
             before(grammarAccess.getQualifiedNameTupleAccess().getQlistQualifiedNameParserRuleCall_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleQualifiedName();

            state._fsp--;

             after(grammarAccess.getQualifiedNameTupleAccess().getQlistQualifiedNameParserRuleCall_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedNameTuple__QlistAssignment_1_1"


    // $ANTLR start "rule__SimpleNames__NameListAssignment_0"
    // InternalFortXTrans.g:12043:1: rule__SimpleNames__NameListAssignment_0 : ( ruleSimpleName ) ;
    public final void rule__SimpleNames__NameListAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12047:1: ( ( ruleSimpleName ) )
            // InternalFortXTrans.g:12048:2: ( ruleSimpleName )
            {
            // InternalFortXTrans.g:12048:2: ( ruleSimpleName )
            // InternalFortXTrans.g:12049:3: ruleSimpleName
            {
             before(grammarAccess.getSimpleNamesAccess().getNameListSimpleNameParserRuleCall_0_0()); 
            pushFollow(FOLLOW_2);
            ruleSimpleName();

            state._fsp--;

             after(grammarAccess.getSimpleNamesAccess().getNameListSimpleNameParserRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleNames__NameListAssignment_0"


    // $ANTLR start "rule__SimpleNames__BrackAssignment_1_0"
    // InternalFortXTrans.g:12058:1: rule__SimpleNames__BrackAssignment_1_0 : ( ( '{' ) ) ;
    public final void rule__SimpleNames__BrackAssignment_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12062:1: ( ( ( '{' ) ) )
            // InternalFortXTrans.g:12063:2: ( ( '{' ) )
            {
            // InternalFortXTrans.g:12063:2: ( ( '{' ) )
            // InternalFortXTrans.g:12064:3: ( '{' )
            {
             before(grammarAccess.getSimpleNamesAccess().getBrackLeftCurlyBracketKeyword_1_0_0()); 
            // InternalFortXTrans.g:12065:3: ( '{' )
            // InternalFortXTrans.g:12066:4: '{'
            {
             before(grammarAccess.getSimpleNamesAccess().getBrackLeftCurlyBracketKeyword_1_0_0()); 
            match(input,31,FOLLOW_2); 
             after(grammarAccess.getSimpleNamesAccess().getBrackLeftCurlyBracketKeyword_1_0_0()); 

            }

             after(grammarAccess.getSimpleNamesAccess().getBrackLeftCurlyBracketKeyword_1_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleNames__BrackAssignment_1_0"


    // $ANTLR start "rule__SimpleNames__NameListAssignment_1_1"
    // InternalFortXTrans.g:12077:1: rule__SimpleNames__NameListAssignment_1_1 : ( ruleSimpleName ) ;
    public final void rule__SimpleNames__NameListAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12081:1: ( ( ruleSimpleName ) )
            // InternalFortXTrans.g:12082:2: ( ruleSimpleName )
            {
            // InternalFortXTrans.g:12082:2: ( ruleSimpleName )
            // InternalFortXTrans.g:12083:3: ruleSimpleName
            {
             before(grammarAccess.getSimpleNamesAccess().getNameListSimpleNameParserRuleCall_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleSimpleName();

            state._fsp--;

             after(grammarAccess.getSimpleNamesAccess().getNameListSimpleNameParserRuleCall_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleNames__NameListAssignment_1_1"


    // $ANTLR start "rule__SimpleNames__NameListAssignment_1_2_1"
    // InternalFortXTrans.g:12092:1: rule__SimpleNames__NameListAssignment_1_2_1 : ( ruleSimpleName ) ;
    public final void rule__SimpleNames__NameListAssignment_1_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12096:1: ( ( ruleSimpleName ) )
            // InternalFortXTrans.g:12097:2: ( ruleSimpleName )
            {
            // InternalFortXTrans.g:12097:2: ( ruleSimpleName )
            // InternalFortXTrans.g:12098:3: ruleSimpleName
            {
             before(grammarAccess.getSimpleNamesAccess().getNameListSimpleNameParserRuleCall_1_2_1_0()); 
            pushFollow(FOLLOW_2);
            ruleSimpleName();

            state._fsp--;

             after(grammarAccess.getSimpleNamesAccess().getNameListSimpleNameParserRuleCall_1_2_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleNames__NameListAssignment_1_2_1"


    // $ANTLR start "rule__SimpleName__NameAssignment"
    // InternalFortXTrans.g:12107:1: rule__SimpleName__NameAssignment : ( RULE_ID ) ;
    public final void rule__SimpleName__NameAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12111:1: ( ( RULE_ID ) )
            // InternalFortXTrans.g:12112:2: ( RULE_ID )
            {
            // InternalFortXTrans.g:12112:2: ( RULE_ID )
            // InternalFortXTrans.g:12113:3: RULE_ID
            {
             before(grammarAccess.getSimpleNameAccess().getNameIDTerminalRuleCall_0()); 
            match(input,RULE_ID,FOLLOW_2); 
             after(grammarAccess.getSimpleNameAccess().getNameIDTerminalRuleCall_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleName__NameAssignment"


    // $ANTLR start "rule__AliasedSimpleName__OrigAssignment_0"
    // InternalFortXTrans.g:12122:1: rule__AliasedSimpleName__OrigAssignment_0 : ( RULE_ID ) ;
    public final void rule__AliasedSimpleName__OrigAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12126:1: ( ( RULE_ID ) )
            // InternalFortXTrans.g:12127:2: ( RULE_ID )
            {
            // InternalFortXTrans.g:12127:2: ( RULE_ID )
            // InternalFortXTrans.g:12128:3: RULE_ID
            {
             before(grammarAccess.getAliasedSimpleNameAccess().getOrigIDTerminalRuleCall_0_0()); 
            match(input,RULE_ID,FOLLOW_2); 
             after(grammarAccess.getAliasedSimpleNameAccess().getOrigIDTerminalRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedSimpleName__OrigAssignment_0"


    // $ANTLR start "rule__AliasedSimpleName__AsNameAssignment_1_1"
    // InternalFortXTrans.g:12137:1: rule__AliasedSimpleName__AsNameAssignment_1_1 : ( RULE_ID ) ;
    public final void rule__AliasedSimpleName__AsNameAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12141:1: ( ( RULE_ID ) )
            // InternalFortXTrans.g:12142:2: ( RULE_ID )
            {
            // InternalFortXTrans.g:12142:2: ( RULE_ID )
            // InternalFortXTrans.g:12143:3: RULE_ID
            {
             before(grammarAccess.getAliasedSimpleNameAccess().getAsNameIDTerminalRuleCall_1_1_0()); 
            match(input,RULE_ID,FOLLOW_2); 
             after(grammarAccess.getAliasedSimpleNameAccess().getAsNameIDTerminalRuleCall_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedSimpleName__AsNameAssignment_1_1"


    // $ANTLR start "rule__AliasedAPINames__NameListAssignment_0"
    // InternalFortXTrans.g:12152:1: rule__AliasedAPINames__NameListAssignment_0 : ( ruleAliasedAPIName ) ;
    public final void rule__AliasedAPINames__NameListAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12156:1: ( ( ruleAliasedAPIName ) )
            // InternalFortXTrans.g:12157:2: ( ruleAliasedAPIName )
            {
            // InternalFortXTrans.g:12157:2: ( ruleAliasedAPIName )
            // InternalFortXTrans.g:12158:3: ruleAliasedAPIName
            {
             before(grammarAccess.getAliasedAPINamesAccess().getNameListAliasedAPINameParserRuleCall_0_0()); 
            pushFollow(FOLLOW_2);
            ruleAliasedAPIName();

            state._fsp--;

             after(grammarAccess.getAliasedAPINamesAccess().getNameListAliasedAPINameParserRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedAPINames__NameListAssignment_0"


    // $ANTLR start "rule__AliasedAPINames__BrackAssignment_1_0"
    // InternalFortXTrans.g:12167:1: rule__AliasedAPINames__BrackAssignment_1_0 : ( ( '{' ) ) ;
    public final void rule__AliasedAPINames__BrackAssignment_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12171:1: ( ( ( '{' ) ) )
            // InternalFortXTrans.g:12172:2: ( ( '{' ) )
            {
            // InternalFortXTrans.g:12172:2: ( ( '{' ) )
            // InternalFortXTrans.g:12173:3: ( '{' )
            {
             before(grammarAccess.getAliasedAPINamesAccess().getBrackLeftCurlyBracketKeyword_1_0_0()); 
            // InternalFortXTrans.g:12174:3: ( '{' )
            // InternalFortXTrans.g:12175:4: '{'
            {
             before(grammarAccess.getAliasedAPINamesAccess().getBrackLeftCurlyBracketKeyword_1_0_0()); 
            match(input,31,FOLLOW_2); 
             after(grammarAccess.getAliasedAPINamesAccess().getBrackLeftCurlyBracketKeyword_1_0_0()); 

            }

             after(grammarAccess.getAliasedAPINamesAccess().getBrackLeftCurlyBracketKeyword_1_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedAPINames__BrackAssignment_1_0"


    // $ANTLR start "rule__AliasedAPINames__NameListAssignment_1_1"
    // InternalFortXTrans.g:12186:1: rule__AliasedAPINames__NameListAssignment_1_1 : ( ruleAliasedAPIName ) ;
    public final void rule__AliasedAPINames__NameListAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12190:1: ( ( ruleAliasedAPIName ) )
            // InternalFortXTrans.g:12191:2: ( ruleAliasedAPIName )
            {
            // InternalFortXTrans.g:12191:2: ( ruleAliasedAPIName )
            // InternalFortXTrans.g:12192:3: ruleAliasedAPIName
            {
             before(grammarAccess.getAliasedAPINamesAccess().getNameListAliasedAPINameParserRuleCall_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleAliasedAPIName();

            state._fsp--;

             after(grammarAccess.getAliasedAPINamesAccess().getNameListAliasedAPINameParserRuleCall_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedAPINames__NameListAssignment_1_1"


    // $ANTLR start "rule__AliasedAPINames__NameListAssignment_1_2_1"
    // InternalFortXTrans.g:12201:1: rule__AliasedAPINames__NameListAssignment_1_2_1 : ( ruleAliasedAPIName ) ;
    public final void rule__AliasedAPINames__NameListAssignment_1_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12205:1: ( ( ruleAliasedAPIName ) )
            // InternalFortXTrans.g:12206:2: ( ruleAliasedAPIName )
            {
            // InternalFortXTrans.g:12206:2: ( ruleAliasedAPIName )
            // InternalFortXTrans.g:12207:3: ruleAliasedAPIName
            {
             before(grammarAccess.getAliasedAPINamesAccess().getNameListAliasedAPINameParserRuleCall_1_2_1_0()); 
            pushFollow(FOLLOW_2);
            ruleAliasedAPIName();

            state._fsp--;

             after(grammarAccess.getAliasedAPINamesAccess().getNameListAliasedAPINameParserRuleCall_1_2_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedAPINames__NameListAssignment_1_2_1"


    // $ANTLR start "rule__AliasedAPIName__OrigAssignment_0"
    // InternalFortXTrans.g:12216:1: rule__AliasedAPIName__OrigAssignment_0 : ( ruleQualifiedName ) ;
    public final void rule__AliasedAPIName__OrigAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12220:1: ( ( ruleQualifiedName ) )
            // InternalFortXTrans.g:12221:2: ( ruleQualifiedName )
            {
            // InternalFortXTrans.g:12221:2: ( ruleQualifiedName )
            // InternalFortXTrans.g:12222:3: ruleQualifiedName
            {
             before(grammarAccess.getAliasedAPINameAccess().getOrigQualifiedNameParserRuleCall_0_0()); 
            pushFollow(FOLLOW_2);
            ruleQualifiedName();

            state._fsp--;

             after(grammarAccess.getAliasedAPINameAccess().getOrigQualifiedNameParserRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedAPIName__OrigAssignment_0"


    // $ANTLR start "rule__AliasedAPIName__AsNameAssignment_1_1"
    // InternalFortXTrans.g:12231:1: rule__AliasedAPIName__AsNameAssignment_1_1 : ( RULE_ID ) ;
    public final void rule__AliasedAPIName__AsNameAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12235:1: ( ( RULE_ID ) )
            // InternalFortXTrans.g:12236:2: ( RULE_ID )
            {
            // InternalFortXTrans.g:12236:2: ( RULE_ID )
            // InternalFortXTrans.g:12237:3: RULE_ID
            {
             before(grammarAccess.getAliasedAPINameAccess().getAsNameIDTerminalRuleCall_1_1_0()); 
            match(input,RULE_ID,FOLLOW_2); 
             after(grammarAccess.getAliasedAPINameAccess().getAsNameIDTerminalRuleCall_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedAPIName__AsNameAssignment_1_1"


    // $ANTLR start "rule__Decls__DeclsAssignment"
    // InternalFortXTrans.g:12246:1: rule__Decls__DeclsAssignment : ( ruleDecl ) ;
    public final void rule__Decls__DeclsAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12250:1: ( ( ruleDecl ) )
            // InternalFortXTrans.g:12251:2: ( ruleDecl )
            {
            // InternalFortXTrans.g:12251:2: ( ruleDecl )
            // InternalFortXTrans.g:12252:3: ruleDecl
            {
             before(grammarAccess.getDeclsAccess().getDeclsDeclParserRuleCall_0()); 
            pushFollow(FOLLOW_2);
            ruleDecl();

            state._fsp--;

             after(grammarAccess.getDeclsAccess().getDeclsDeclParserRuleCall_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Decls__DeclsAssignment"


    // $ANTLR start "rule__Decl__FunctionAssignment_0"
    // InternalFortXTrans.g:12261:1: rule__Decl__FunctionAssignment_0 : ( ruleFnDecl ) ;
    public final void rule__Decl__FunctionAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12265:1: ( ( ruleFnDecl ) )
            // InternalFortXTrans.g:12266:2: ( ruleFnDecl )
            {
            // InternalFortXTrans.g:12266:2: ( ruleFnDecl )
            // InternalFortXTrans.g:12267:3: ruleFnDecl
            {
             before(grammarAccess.getDeclAccess().getFunctionFnDeclParserRuleCall_0_0()); 
            pushFollow(FOLLOW_2);
            ruleFnDecl();

            state._fsp--;

             after(grammarAccess.getDeclAccess().getFunctionFnDeclParserRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Decl__FunctionAssignment_0"


    // $ANTLR start "rule__Decl__FieldAssignment_1"
    // InternalFortXTrans.g:12276:1: rule__Decl__FieldAssignment_1 : ( ruleFieldDecl ) ;
    public final void rule__Decl__FieldAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12280:1: ( ( ruleFieldDecl ) )
            // InternalFortXTrans.g:12281:2: ( ruleFieldDecl )
            {
            // InternalFortXTrans.g:12281:2: ( ruleFieldDecl )
            // InternalFortXTrans.g:12282:3: ruleFieldDecl
            {
             before(grammarAccess.getDeclAccess().getFieldFieldDeclParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleFieldDecl();

            state._fsp--;

             after(grammarAccess.getDeclAccess().getFieldFieldDeclParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Decl__FieldAssignment_1"


    // $ANTLR start "rule__ValParam__ParamsAssignment_0"
    // InternalFortXTrans.g:12291:1: rule__ValParam__ParamsAssignment_0 : ( ruleParam ) ;
    public final void rule__ValParam__ParamsAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12295:1: ( ( ruleParam ) )
            // InternalFortXTrans.g:12296:2: ( ruleParam )
            {
            // InternalFortXTrans.g:12296:2: ( ruleParam )
            // InternalFortXTrans.g:12297:3: ruleParam
            {
             before(grammarAccess.getValParamAccess().getParamsParamParserRuleCall_0_0()); 
            pushFollow(FOLLOW_2);
            ruleParam();

            state._fsp--;

             after(grammarAccess.getValParamAccess().getParamsParamParserRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValParam__ParamsAssignment_0"


    // $ANTLR start "rule__ValParam__BrackAssignment_1_0"
    // InternalFortXTrans.g:12306:1: rule__ValParam__BrackAssignment_1_0 : ( ( '(' ) ) ;
    public final void rule__ValParam__BrackAssignment_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12310:1: ( ( ( '(' ) ) )
            // InternalFortXTrans.g:12311:2: ( ( '(' ) )
            {
            // InternalFortXTrans.g:12311:2: ( ( '(' ) )
            // InternalFortXTrans.g:12312:3: ( '(' )
            {
             before(grammarAccess.getValParamAccess().getBrackLeftParenthesisKeyword_1_0_0()); 
            // InternalFortXTrans.g:12313:3: ( '(' )
            // InternalFortXTrans.g:12314:4: '('
            {
             before(grammarAccess.getValParamAccess().getBrackLeftParenthesisKeyword_1_0_0()); 
            match(input,33,FOLLOW_2); 
             after(grammarAccess.getValParamAccess().getBrackLeftParenthesisKeyword_1_0_0()); 

            }

             after(grammarAccess.getValParamAccess().getBrackLeftParenthesisKeyword_1_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValParam__BrackAssignment_1_0"


    // $ANTLR start "rule__ValParam__ParamsAssignment_1_1_0"
    // InternalFortXTrans.g:12325:1: rule__ValParam__ParamsAssignment_1_1_0 : ( ruleParam ) ;
    public final void rule__ValParam__ParamsAssignment_1_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12329:1: ( ( ruleParam ) )
            // InternalFortXTrans.g:12330:2: ( ruleParam )
            {
            // InternalFortXTrans.g:12330:2: ( ruleParam )
            // InternalFortXTrans.g:12331:3: ruleParam
            {
             before(grammarAccess.getValParamAccess().getParamsParamParserRuleCall_1_1_0_0()); 
            pushFollow(FOLLOW_2);
            ruleParam();

            state._fsp--;

             after(grammarAccess.getValParamAccess().getParamsParamParserRuleCall_1_1_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValParam__ParamsAssignment_1_1_0"


    // $ANTLR start "rule__ValParam__ParamsAssignment_1_1_1_1"
    // InternalFortXTrans.g:12340:1: rule__ValParam__ParamsAssignment_1_1_1_1 : ( ruleParam ) ;
    public final void rule__ValParam__ParamsAssignment_1_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12344:1: ( ( ruleParam ) )
            // InternalFortXTrans.g:12345:2: ( ruleParam )
            {
            // InternalFortXTrans.g:12345:2: ( ruleParam )
            // InternalFortXTrans.g:12346:3: ruleParam
            {
             before(grammarAccess.getValParamAccess().getParamsParamParserRuleCall_1_1_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleParam();

            state._fsp--;

             after(grammarAccess.getValParamAccess().getParamsParamParserRuleCall_1_1_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValParam__ParamsAssignment_1_1_1_1"


    // $ANTLR start "rule__Param__ParIdAssignment_0"
    // InternalFortXTrans.g:12355:1: rule__Param__ParIdAssignment_0 : ( ruleQualifiedName ) ;
    public final void rule__Param__ParIdAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12359:1: ( ( ruleQualifiedName ) )
            // InternalFortXTrans.g:12360:2: ( ruleQualifiedName )
            {
            // InternalFortXTrans.g:12360:2: ( ruleQualifiedName )
            // InternalFortXTrans.g:12361:3: ruleQualifiedName
            {
             before(grammarAccess.getParamAccess().getParIdQualifiedNameParserRuleCall_0_0()); 
            pushFollow(FOLLOW_2);
            ruleQualifiedName();

            state._fsp--;

             after(grammarAccess.getParamAccess().getParIdQualifiedNameParserRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Param__ParIdAssignment_0"


    // $ANTLR start "rule__Param__IstypeAssignment_1"
    // InternalFortXTrans.g:12370:1: rule__Param__IstypeAssignment_1 : ( ruleIsType ) ;
    public final void rule__Param__IstypeAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12374:1: ( ( ruleIsType ) )
            // InternalFortXTrans.g:12375:2: ( ruleIsType )
            {
            // InternalFortXTrans.g:12375:2: ( ruleIsType )
            // InternalFortXTrans.g:12376:3: ruleIsType
            {
             before(grammarAccess.getParamAccess().getIstypeIsTypeParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleIsType();

            state._fsp--;

             after(grammarAccess.getParamAccess().getIstypeIsTypeParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Param__IstypeAssignment_1"


    // $ANTLR start "rule__RetType__EmptyAssignment_0_1"
    // InternalFortXTrans.g:12385:1: rule__RetType__EmptyAssignment_0_1 : ( ( '(' ) ) ;
    public final void rule__RetType__EmptyAssignment_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12389:1: ( ( ( '(' ) ) )
            // InternalFortXTrans.g:12390:2: ( ( '(' ) )
            {
            // InternalFortXTrans.g:12390:2: ( ( '(' ) )
            // InternalFortXTrans.g:12391:3: ( '(' )
            {
             before(grammarAccess.getRetTypeAccess().getEmptyLeftParenthesisKeyword_0_1_0()); 
            // InternalFortXTrans.g:12392:3: ( '(' )
            // InternalFortXTrans.g:12393:4: '('
            {
             before(grammarAccess.getRetTypeAccess().getEmptyLeftParenthesisKeyword_0_1_0()); 
            match(input,33,FOLLOW_2); 
             after(grammarAccess.getRetTypeAccess().getEmptyLeftParenthesisKeyword_0_1_0()); 

            }

             after(grammarAccess.getRetTypeAccess().getEmptyLeftParenthesisKeyword_0_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RetType__EmptyAssignment_0_1"


    // $ANTLR start "rule__RetType__TypeAssignment_1_1"
    // InternalFortXTrans.g:12404:1: rule__RetType__TypeAssignment_1_1 : ( ruleSimpleName ) ;
    public final void rule__RetType__TypeAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12408:1: ( ( ruleSimpleName ) )
            // InternalFortXTrans.g:12409:2: ( ruleSimpleName )
            {
            // InternalFortXTrans.g:12409:2: ( ruleSimpleName )
            // InternalFortXTrans.g:12410:3: ruleSimpleName
            {
             before(grammarAccess.getRetTypeAccess().getTypeSimpleNameParserRuleCall_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleSimpleName();

            state._fsp--;

             after(grammarAccess.getRetTypeAccess().getTypeSimpleNameParserRuleCall_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RetType__TypeAssignment_1_1"


    // $ANTLR start "rule__TupleType__TypesAssignment_1"
    // InternalFortXTrans.g:12419:1: rule__TupleType__TypesAssignment_1 : ( ruleSimpleName ) ;
    public final void rule__TupleType__TypesAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12423:1: ( ( ruleSimpleName ) )
            // InternalFortXTrans.g:12424:2: ( ruleSimpleName )
            {
            // InternalFortXTrans.g:12424:2: ( ruleSimpleName )
            // InternalFortXTrans.g:12425:3: ruleSimpleName
            {
             before(grammarAccess.getTupleTypeAccess().getTypesSimpleNameParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleSimpleName();

            state._fsp--;

             after(grammarAccess.getTupleTypeAccess().getTypesSimpleNameParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TupleType__TypesAssignment_1"


    // $ANTLR start "rule__TupleType__TypesAssignment_2_1"
    // InternalFortXTrans.g:12434:1: rule__TupleType__TypesAssignment_2_1 : ( ruleSimpleName ) ;
    public final void rule__TupleType__TypesAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12438:1: ( ( ruleSimpleName ) )
            // InternalFortXTrans.g:12439:2: ( ruleSimpleName )
            {
            // InternalFortXTrans.g:12439:2: ( ruleSimpleName )
            // InternalFortXTrans.g:12440:3: ruleSimpleName
            {
             before(grammarAccess.getTupleTypeAccess().getTypesSimpleNameParserRuleCall_2_1_0()); 
            pushFollow(FOLLOW_2);
            ruleSimpleName();

            state._fsp--;

             after(grammarAccess.getTupleTypeAccess().getTypesSimpleNameParserRuleCall_2_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TupleType__TypesAssignment_2_1"


    // $ANTLR start "rule__FnMods__ModsAssignment"
    // InternalFortXTrans.g:12449:1: rule__FnMods__ModsAssignment : ( ruleFnMod ) ;
    public final void rule__FnMods__ModsAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12453:1: ( ( ruleFnMod ) )
            // InternalFortXTrans.g:12454:2: ( ruleFnMod )
            {
            // InternalFortXTrans.g:12454:2: ( ruleFnMod )
            // InternalFortXTrans.g:12455:3: ruleFnMod
            {
             before(grammarAccess.getFnModsAccess().getModsFnModParserRuleCall_0()); 
            pushFollow(FOLLOW_2);
            ruleFnMod();

            state._fsp--;

             after(grammarAccess.getFnModsAccess().getModsFnModParserRuleCall_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FnMods__ModsAssignment"


    // $ANTLR start "rule__FnMod__ModtypeAssignment_0"
    // InternalFortXTrans.g:12464:1: rule__FnMod__ModtypeAssignment_0 : ( ( 'private' ) ) ;
    public final void rule__FnMod__ModtypeAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12468:1: ( ( ( 'private' ) ) )
            // InternalFortXTrans.g:12469:2: ( ( 'private' ) )
            {
            // InternalFortXTrans.g:12469:2: ( ( 'private' ) )
            // InternalFortXTrans.g:12470:3: ( 'private' )
            {
             before(grammarAccess.getFnModAccess().getModtypePrivateKeyword_0_0()); 
            // InternalFortXTrans.g:12471:3: ( 'private' )
            // InternalFortXTrans.g:12472:4: 'private'
            {
             before(grammarAccess.getFnModAccess().getModtypePrivateKeyword_0_0()); 
            match(input,62,FOLLOW_2); 
             after(grammarAccess.getFnModAccess().getModtypePrivateKeyword_0_0()); 

            }

             after(grammarAccess.getFnModAccess().getModtypePrivateKeyword_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FnMod__ModtypeAssignment_0"


    // $ANTLR start "rule__FnMod__ModtypeAssignment_1"
    // InternalFortXTrans.g:12483:1: rule__FnMod__ModtypeAssignment_1 : ( ( 'test' ) ) ;
    public final void rule__FnMod__ModtypeAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12487:1: ( ( ( 'test' ) ) )
            // InternalFortXTrans.g:12488:2: ( ( 'test' ) )
            {
            // InternalFortXTrans.g:12488:2: ( ( 'test' ) )
            // InternalFortXTrans.g:12489:3: ( 'test' )
            {
             before(grammarAccess.getFnModAccess().getModtypeTestKeyword_1_0()); 
            // InternalFortXTrans.g:12490:3: ( 'test' )
            // InternalFortXTrans.g:12491:4: 'test'
            {
             before(grammarAccess.getFnModAccess().getModtypeTestKeyword_1_0()); 
            match(input,63,FOLLOW_2); 
             after(grammarAccess.getFnModAccess().getModtypeTestKeyword_1_0()); 

            }

             after(grammarAccess.getFnModAccess().getModtypeTestKeyword_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FnMod__ModtypeAssignment_1"


    // $ANTLR start "rule__FnMod__ModtypeAssignment_2"
    // InternalFortXTrans.g:12502:1: rule__FnMod__ModtypeAssignment_2 : ( ( 'atomic' ) ) ;
    public final void rule__FnMod__ModtypeAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12506:1: ( ( ( 'atomic' ) ) )
            // InternalFortXTrans.g:12507:2: ( ( 'atomic' ) )
            {
            // InternalFortXTrans.g:12507:2: ( ( 'atomic' ) )
            // InternalFortXTrans.g:12508:3: ( 'atomic' )
            {
             before(grammarAccess.getFnModAccess().getModtypeAtomicKeyword_2_0()); 
            // InternalFortXTrans.g:12509:3: ( 'atomic' )
            // InternalFortXTrans.g:12510:4: 'atomic'
            {
             before(grammarAccess.getFnModAccess().getModtypeAtomicKeyword_2_0()); 
            match(input,64,FOLLOW_2); 
             after(grammarAccess.getFnModAccess().getModtypeAtomicKeyword_2_0()); 

            }

             after(grammarAccess.getFnModAccess().getModtypeAtomicKeyword_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FnMod__ModtypeAssignment_2"


    // $ANTLR start "rule__FnMod__ModtypeAssignment_3"
    // InternalFortXTrans.g:12521:1: rule__FnMod__ModtypeAssignment_3 : ( ( 'io' ) ) ;
    public final void rule__FnMod__ModtypeAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12525:1: ( ( ( 'io' ) ) )
            // InternalFortXTrans.g:12526:2: ( ( 'io' ) )
            {
            // InternalFortXTrans.g:12526:2: ( ( 'io' ) )
            // InternalFortXTrans.g:12527:3: ( 'io' )
            {
             before(grammarAccess.getFnModAccess().getModtypeIoKeyword_3_0()); 
            // InternalFortXTrans.g:12528:3: ( 'io' )
            // InternalFortXTrans.g:12529:4: 'io'
            {
             before(grammarAccess.getFnModAccess().getModtypeIoKeyword_3_0()); 
            match(input,65,FOLLOW_2); 
             after(grammarAccess.getFnModAccess().getModtypeIoKeyword_3_0()); 

            }

             after(grammarAccess.getFnModAccess().getModtypeIoKeyword_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FnMod__ModtypeAssignment_3"


    // $ANTLR start "rule__FnDecl__ModsAssignment_0"
    // InternalFortXTrans.g:12540:1: rule__FnDecl__ModsAssignment_0 : ( ruleFnMods ) ;
    public final void rule__FnDecl__ModsAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12544:1: ( ( ruleFnMods ) )
            // InternalFortXTrans.g:12545:2: ( ruleFnMods )
            {
            // InternalFortXTrans.g:12545:2: ( ruleFnMods )
            // InternalFortXTrans.g:12546:3: ruleFnMods
            {
             before(grammarAccess.getFnDeclAccess().getModsFnModsParserRuleCall_0_0()); 
            pushFollow(FOLLOW_2);
            ruleFnMods();

            state._fsp--;

             after(grammarAccess.getFnDeclAccess().getModsFnModsParserRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FnDecl__ModsAssignment_0"


    // $ANTLR start "rule__FnDecl__NameAssignment_1"
    // InternalFortXTrans.g:12555:1: rule__FnDecl__NameAssignment_1 : ( RULE_ID ) ;
    public final void rule__FnDecl__NameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12559:1: ( ( RULE_ID ) )
            // InternalFortXTrans.g:12560:2: ( RULE_ID )
            {
            // InternalFortXTrans.g:12560:2: ( RULE_ID )
            // InternalFortXTrans.g:12561:3: RULE_ID
            {
             before(grammarAccess.getFnDeclAccess().getNameIDTerminalRuleCall_1_0()); 
            match(input,RULE_ID,FOLLOW_2); 
             after(grammarAccess.getFnDeclAccess().getNameIDTerminalRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FnDecl__NameAssignment_1"


    // $ANTLR start "rule__FnDecl__ParamsAssignment_2"
    // InternalFortXTrans.g:12570:1: rule__FnDecl__ParamsAssignment_2 : ( ruleValParam ) ;
    public final void rule__FnDecl__ParamsAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12574:1: ( ( ruleValParam ) )
            // InternalFortXTrans.g:12575:2: ( ruleValParam )
            {
            // InternalFortXTrans.g:12575:2: ( ruleValParam )
            // InternalFortXTrans.g:12576:3: ruleValParam
            {
             before(grammarAccess.getFnDeclAccess().getParamsValParamParserRuleCall_2_0()); 
            pushFollow(FOLLOW_2);
            ruleValParam();

            state._fsp--;

             after(grammarAccess.getFnDeclAccess().getParamsValParamParserRuleCall_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FnDecl__ParamsAssignment_2"


    // $ANTLR start "rule__FnDecl__RetValAssignment_3"
    // InternalFortXTrans.g:12585:1: rule__FnDecl__RetValAssignment_3 : ( ruleRetType ) ;
    public final void rule__FnDecl__RetValAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12589:1: ( ( ruleRetType ) )
            // InternalFortXTrans.g:12590:2: ( ruleRetType )
            {
            // InternalFortXTrans.g:12590:2: ( ruleRetType )
            // InternalFortXTrans.g:12591:3: ruleRetType
            {
             before(grammarAccess.getFnDeclAccess().getRetValRetTypeParserRuleCall_3_0()); 
            pushFollow(FOLLOW_2);
            ruleRetType();

            state._fsp--;

             after(grammarAccess.getFnDeclAccess().getRetValRetTypeParserRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FnDecl__RetValAssignment_3"


    // $ANTLR start "rule__FnDecl__BodyAssignment_4_0"
    // InternalFortXTrans.g:12600:1: rule__FnDecl__BodyAssignment_4_0 : ( ( '=' ) ) ;
    public final void rule__FnDecl__BodyAssignment_4_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12604:1: ( ( ( '=' ) ) )
            // InternalFortXTrans.g:12605:2: ( ( '=' ) )
            {
            // InternalFortXTrans.g:12605:2: ( ( '=' ) )
            // InternalFortXTrans.g:12606:3: ( '=' )
            {
             before(grammarAccess.getFnDeclAccess().getBodyEqualsSignKeyword_4_0_0()); 
            // InternalFortXTrans.g:12607:3: ( '=' )
            // InternalFortXTrans.g:12608:4: '='
            {
             before(grammarAccess.getFnDeclAccess().getBodyEqualsSignKeyword_4_0_0()); 
            match(input,58,FOLLOW_2); 
             after(grammarAccess.getFnDeclAccess().getBodyEqualsSignKeyword_4_0_0()); 

            }

             after(grammarAccess.getFnDeclAccess().getBodyEqualsSignKeyword_4_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FnDecl__BodyAssignment_4_0"


    // $ANTLR start "rule__FnDecl__FnItselfAssignment_4_1"
    // InternalFortXTrans.g:12619:1: rule__FnDecl__FnItselfAssignment_4_1 : ( ruleStmnts ) ;
    public final void rule__FnDecl__FnItselfAssignment_4_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12623:1: ( ( ruleStmnts ) )
            // InternalFortXTrans.g:12624:2: ( ruleStmnts )
            {
            // InternalFortXTrans.g:12624:2: ( ruleStmnts )
            // InternalFortXTrans.g:12625:3: ruleStmnts
            {
             before(grammarAccess.getFnDeclAccess().getFnItselfStmntsParserRuleCall_4_1_0()); 
            pushFollow(FOLLOW_2);
            ruleStmnts();

            state._fsp--;

             after(grammarAccess.getFnDeclAccess().getFnItselfStmntsParserRuleCall_4_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FnDecl__FnItselfAssignment_4_1"


    // $ANTLR start "rule__Stmnts__FrontAssignment_0"
    // InternalFortXTrans.g:12634:1: rule__Stmnts__FrontAssignment_0 : ( ruleStmnt ) ;
    public final void rule__Stmnts__FrontAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12638:1: ( ( ruleStmnt ) )
            // InternalFortXTrans.g:12639:2: ( ruleStmnt )
            {
            // InternalFortXTrans.g:12639:2: ( ruleStmnt )
            // InternalFortXTrans.g:12640:3: ruleStmnt
            {
             before(grammarAccess.getStmntsAccess().getFrontStmntParserRuleCall_0_0()); 
            pushFollow(FOLLOW_2);
            ruleStmnt();

            state._fsp--;

             after(grammarAccess.getStmntsAccess().getFrontStmntParserRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Stmnts__FrontAssignment_0"


    // $ANTLR start "rule__Stmnts__DelimsAssignment_1_2"
    // InternalFortXTrans.g:12649:1: rule__Stmnts__DelimsAssignment_1_2 : ( ruleStmntList ) ;
    public final void rule__Stmnts__DelimsAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12653:1: ( ( ruleStmntList ) )
            // InternalFortXTrans.g:12654:2: ( ruleStmntList )
            {
            // InternalFortXTrans.g:12654:2: ( ruleStmntList )
            // InternalFortXTrans.g:12655:3: ruleStmntList
            {
             before(grammarAccess.getStmntsAccess().getDelimsStmntListParserRuleCall_1_2_0()); 
            pushFollow(FOLLOW_2);
            ruleStmntList();

            state._fsp--;

             after(grammarAccess.getStmntsAccess().getDelimsStmntListParserRuleCall_1_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Stmnts__DelimsAssignment_1_2"


    // $ANTLR start "rule__Stmnts__LocVarAssignment_2"
    // InternalFortXTrans.g:12664:1: rule__Stmnts__LocVarAssignment_2 : ( ruleLocalVarDecl ) ;
    public final void rule__Stmnts__LocVarAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12668:1: ( ( ruleLocalVarDecl ) )
            // InternalFortXTrans.g:12669:2: ( ruleLocalVarDecl )
            {
            // InternalFortXTrans.g:12669:2: ( ruleLocalVarDecl )
            // InternalFortXTrans.g:12670:3: ruleLocalVarDecl
            {
             before(grammarAccess.getStmntsAccess().getLocVarLocalVarDeclParserRuleCall_2_0()); 
            pushFollow(FOLLOW_2);
            ruleLocalVarDecl();

            state._fsp--;

             after(grammarAccess.getStmntsAccess().getLocVarLocalVarDeclParserRuleCall_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Stmnts__LocVarAssignment_2"


    // $ANTLR start "rule__Stmnts__ExpAssignment_3"
    // InternalFortXTrans.g:12679:1: rule__Stmnts__ExpAssignment_3 : ( ruleExpr ) ;
    public final void rule__Stmnts__ExpAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12683:1: ( ( ruleExpr ) )
            // InternalFortXTrans.g:12684:2: ( ruleExpr )
            {
            // InternalFortXTrans.g:12684:2: ( ruleExpr )
            // InternalFortXTrans.g:12685:3: ruleExpr
            {
             before(grammarAccess.getStmntsAccess().getExpExprParserRuleCall_3_0()); 
            pushFollow(FOLLOW_2);
            ruleExpr();

            state._fsp--;

             after(grammarAccess.getStmntsAccess().getExpExprParserRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Stmnts__ExpAssignment_3"


    // $ANTLR start "rule__Stmnt__DelimAssignment"
    // InternalFortXTrans.g:12694:1: rule__Stmnt__DelimAssignment : ( ruleDelimitedExpr ) ;
    public final void rule__Stmnt__DelimAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12698:1: ( ( ruleDelimitedExpr ) )
            // InternalFortXTrans.g:12699:2: ( ruleDelimitedExpr )
            {
            // InternalFortXTrans.g:12699:2: ( ruleDelimitedExpr )
            // InternalFortXTrans.g:12700:3: ruleDelimitedExpr
            {
             before(grammarAccess.getStmntAccess().getDelimDelimitedExprParserRuleCall_0()); 
            pushFollow(FOLLOW_2);
            ruleDelimitedExpr();

            state._fsp--;

             after(grammarAccess.getStmntAccess().getDelimDelimitedExprParserRuleCall_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Stmnt__DelimAssignment"


    // $ANTLR start "rule__StmntList__DelimAssignment_0"
    // InternalFortXTrans.g:12709:1: rule__StmntList__DelimAssignment_0 : ( ruleStmnt ) ;
    public final void rule__StmntList__DelimAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12713:1: ( ( ruleStmnt ) )
            // InternalFortXTrans.g:12714:2: ( ruleStmnt )
            {
            // InternalFortXTrans.g:12714:2: ( ruleStmnt )
            // InternalFortXTrans.g:12715:3: ruleStmnt
            {
             before(grammarAccess.getStmntListAccess().getDelimStmntParserRuleCall_0_0()); 
            pushFollow(FOLLOW_2);
            ruleStmnt();

            state._fsp--;

             after(grammarAccess.getStmntListAccess().getDelimStmntParserRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StmntList__DelimAssignment_0"


    // $ANTLR start "rule__StmntList__DelimAssignment_1_1"
    // InternalFortXTrans.g:12724:1: rule__StmntList__DelimAssignment_1_1 : ( ruleStmnt ) ;
    public final void rule__StmntList__DelimAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12728:1: ( ( ruleStmnt ) )
            // InternalFortXTrans.g:12729:2: ( ruleStmnt )
            {
            // InternalFortXTrans.g:12729:2: ( ruleStmnt )
            // InternalFortXTrans.g:12730:3: ruleStmnt
            {
             before(grammarAccess.getStmntListAccess().getDelimStmntParserRuleCall_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleStmnt();

            state._fsp--;

             after(grammarAccess.getStmntListAccess().getDelimStmntParserRuleCall_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StmntList__DelimAssignment_1_1"


    // $ANTLR start "rule__Expr__TailAssignment_1"
    // InternalFortXTrans.g:12739:1: rule__Expr__TailAssignment_1 : ( ruleExprTail ) ;
    public final void rule__Expr__TailAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12743:1: ( ( ruleExprTail ) )
            // InternalFortXTrans.g:12744:2: ( ruleExprTail )
            {
            // InternalFortXTrans.g:12744:2: ( ruleExprTail )
            // InternalFortXTrans.g:12745:3: ruleExprTail
            {
             before(grammarAccess.getExprAccess().getTailExprTailParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleExprTail();

            state._fsp--;

             after(grammarAccess.getExprAccess().getTailExprTailParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Expr__TailAssignment_1"


    // $ANTLR start "rule__Or__RightAssignment_1_2"
    // InternalFortXTrans.g:12754:1: rule__Or__RightAssignment_1_2 : ( ruleAnd ) ;
    public final void rule__Or__RightAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12758:1: ( ( ruleAnd ) )
            // InternalFortXTrans.g:12759:2: ( ruleAnd )
            {
            // InternalFortXTrans.g:12759:2: ( ruleAnd )
            // InternalFortXTrans.g:12760:3: ruleAnd
            {
             before(grammarAccess.getOrAccess().getRightAndParserRuleCall_1_2_0()); 
            pushFollow(FOLLOW_2);
            ruleAnd();

            state._fsp--;

             after(grammarAccess.getOrAccess().getRightAndParserRuleCall_1_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Or__RightAssignment_1_2"


    // $ANTLR start "rule__And__RightAssignment_1_2"
    // InternalFortXTrans.g:12769:1: rule__And__RightAssignment_1_2 : ( ruleEquality ) ;
    public final void rule__And__RightAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12773:1: ( ( ruleEquality ) )
            // InternalFortXTrans.g:12774:2: ( ruleEquality )
            {
            // InternalFortXTrans.g:12774:2: ( ruleEquality )
            // InternalFortXTrans.g:12775:3: ruleEquality
            {
             before(grammarAccess.getAndAccess().getRightEqualityParserRuleCall_1_2_0()); 
            pushFollow(FOLLOW_2);
            ruleEquality();

            state._fsp--;

             after(grammarAccess.getAndAccess().getRightEqualityParserRuleCall_1_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__And__RightAssignment_1_2"


    // $ANTLR start "rule__Equality__OpAssignment_1_1"
    // InternalFortXTrans.g:12784:1: rule__Equality__OpAssignment_1_1 : ( ( rule__Equality__OpAlternatives_1_1_0 ) ) ;
    public final void rule__Equality__OpAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12788:1: ( ( ( rule__Equality__OpAlternatives_1_1_0 ) ) )
            // InternalFortXTrans.g:12789:2: ( ( rule__Equality__OpAlternatives_1_1_0 ) )
            {
            // InternalFortXTrans.g:12789:2: ( ( rule__Equality__OpAlternatives_1_1_0 ) )
            // InternalFortXTrans.g:12790:3: ( rule__Equality__OpAlternatives_1_1_0 )
            {
             before(grammarAccess.getEqualityAccess().getOpAlternatives_1_1_0()); 
            // InternalFortXTrans.g:12791:3: ( rule__Equality__OpAlternatives_1_1_0 )
            // InternalFortXTrans.g:12791:4: rule__Equality__OpAlternatives_1_1_0
            {
            pushFollow(FOLLOW_2);
            rule__Equality__OpAlternatives_1_1_0();

            state._fsp--;


            }

             after(grammarAccess.getEqualityAccess().getOpAlternatives_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equality__OpAssignment_1_1"


    // $ANTLR start "rule__Equality__RightAssignment_1_2"
    // InternalFortXTrans.g:12799:1: rule__Equality__RightAssignment_1_2 : ( ruleComparison ) ;
    public final void rule__Equality__RightAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12803:1: ( ( ruleComparison ) )
            // InternalFortXTrans.g:12804:2: ( ruleComparison )
            {
            // InternalFortXTrans.g:12804:2: ( ruleComparison )
            // InternalFortXTrans.g:12805:3: ruleComparison
            {
             before(grammarAccess.getEqualityAccess().getRightComparisonParserRuleCall_1_2_0()); 
            pushFollow(FOLLOW_2);
            ruleComparison();

            state._fsp--;

             after(grammarAccess.getEqualityAccess().getRightComparisonParserRuleCall_1_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equality__RightAssignment_1_2"


    // $ANTLR start "rule__Comparison__OpAssignment_1_1"
    // InternalFortXTrans.g:12814:1: rule__Comparison__OpAssignment_1_1 : ( ( rule__Comparison__OpAlternatives_1_1_0 ) ) ;
    public final void rule__Comparison__OpAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12818:1: ( ( ( rule__Comparison__OpAlternatives_1_1_0 ) ) )
            // InternalFortXTrans.g:12819:2: ( ( rule__Comparison__OpAlternatives_1_1_0 ) )
            {
            // InternalFortXTrans.g:12819:2: ( ( rule__Comparison__OpAlternatives_1_1_0 ) )
            // InternalFortXTrans.g:12820:3: ( rule__Comparison__OpAlternatives_1_1_0 )
            {
             before(grammarAccess.getComparisonAccess().getOpAlternatives_1_1_0()); 
            // InternalFortXTrans.g:12821:3: ( rule__Comparison__OpAlternatives_1_1_0 )
            // InternalFortXTrans.g:12821:4: rule__Comparison__OpAlternatives_1_1_0
            {
            pushFollow(FOLLOW_2);
            rule__Comparison__OpAlternatives_1_1_0();

            state._fsp--;


            }

             after(grammarAccess.getComparisonAccess().getOpAlternatives_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__OpAssignment_1_1"


    // $ANTLR start "rule__Comparison__RightAssignment_1_2"
    // InternalFortXTrans.g:12829:1: rule__Comparison__RightAssignment_1_2 : ( ruleAddExpr ) ;
    public final void rule__Comparison__RightAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12833:1: ( ( ruleAddExpr ) )
            // InternalFortXTrans.g:12834:2: ( ruleAddExpr )
            {
            // InternalFortXTrans.g:12834:2: ( ruleAddExpr )
            // InternalFortXTrans.g:12835:3: ruleAddExpr
            {
             before(grammarAccess.getComparisonAccess().getRightAddExprParserRuleCall_1_2_0()); 
            pushFollow(FOLLOW_2);
            ruleAddExpr();

            state._fsp--;

             after(grammarAccess.getComparisonAccess().getRightAddExprParserRuleCall_1_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__RightAssignment_1_2"


    // $ANTLR start "rule__AddExpr__RightAssignment_1_2"
    // InternalFortXTrans.g:12844:1: rule__AddExpr__RightAssignment_1_2 : ( ruleSubExpr ) ;
    public final void rule__AddExpr__RightAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12848:1: ( ( ruleSubExpr ) )
            // InternalFortXTrans.g:12849:2: ( ruleSubExpr )
            {
            // InternalFortXTrans.g:12849:2: ( ruleSubExpr )
            // InternalFortXTrans.g:12850:3: ruleSubExpr
            {
             before(grammarAccess.getAddExprAccess().getRightSubExprParserRuleCall_1_2_0()); 
            pushFollow(FOLLOW_2);
            ruleSubExpr();

            state._fsp--;

             after(grammarAccess.getAddExprAccess().getRightSubExprParserRuleCall_1_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AddExpr__RightAssignment_1_2"


    // $ANTLR start "rule__SubExpr__RightAssignment_1_2"
    // InternalFortXTrans.g:12859:1: rule__SubExpr__RightAssignment_1_2 : ( ruleDivExpr ) ;
    public final void rule__SubExpr__RightAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12863:1: ( ( ruleDivExpr ) )
            // InternalFortXTrans.g:12864:2: ( ruleDivExpr )
            {
            // InternalFortXTrans.g:12864:2: ( ruleDivExpr )
            // InternalFortXTrans.g:12865:3: ruleDivExpr
            {
             before(grammarAccess.getSubExprAccess().getRightDivExprParserRuleCall_1_2_0()); 
            pushFollow(FOLLOW_2);
            ruleDivExpr();

            state._fsp--;

             after(grammarAccess.getSubExprAccess().getRightDivExprParserRuleCall_1_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubExpr__RightAssignment_1_2"


    // $ANTLR start "rule__DivExpr__RightAssignment_1_2"
    // InternalFortXTrans.g:12874:1: rule__DivExpr__RightAssignment_1_2 : ( ruleMultExpr ) ;
    public final void rule__DivExpr__RightAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12878:1: ( ( ruleMultExpr ) )
            // InternalFortXTrans.g:12879:2: ( ruleMultExpr )
            {
            // InternalFortXTrans.g:12879:2: ( ruleMultExpr )
            // InternalFortXTrans.g:12880:3: ruleMultExpr
            {
             before(grammarAccess.getDivExprAccess().getRightMultExprParserRuleCall_1_2_0()); 
            pushFollow(FOLLOW_2);
            ruleMultExpr();

            state._fsp--;

             after(grammarAccess.getDivExprAccess().getRightMultExprParserRuleCall_1_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DivExpr__RightAssignment_1_2"


    // $ANTLR start "rule__MultExpr__RightAssignment_1_2"
    // InternalFortXTrans.g:12889:1: rule__MultExpr__RightAssignment_1_2 : ( ruleExponentExpr ) ;
    public final void rule__MultExpr__RightAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12893:1: ( ( ruleExponentExpr ) )
            // InternalFortXTrans.g:12894:2: ( ruleExponentExpr )
            {
            // InternalFortXTrans.g:12894:2: ( ruleExponentExpr )
            // InternalFortXTrans.g:12895:3: ruleExponentExpr
            {
             before(grammarAccess.getMultExprAccess().getRightExponentExprParserRuleCall_1_2_0()); 
            pushFollow(FOLLOW_2);
            ruleExponentExpr();

            state._fsp--;

             after(grammarAccess.getMultExprAccess().getRightExponentExprParserRuleCall_1_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultExpr__RightAssignment_1_2"


    // $ANTLR start "rule__ExponentExpr__OpAssignment_1_1"
    // InternalFortXTrans.g:12904:1: rule__ExponentExpr__OpAssignment_1_1 : ( ( '^' ) ) ;
    public final void rule__ExponentExpr__OpAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12908:1: ( ( ( '^' ) ) )
            // InternalFortXTrans.g:12909:2: ( ( '^' ) )
            {
            // InternalFortXTrans.g:12909:2: ( ( '^' ) )
            // InternalFortXTrans.g:12910:3: ( '^' )
            {
             before(grammarAccess.getExponentExprAccess().getOpCircumflexAccentKeyword_1_1_0()); 
            // InternalFortXTrans.g:12911:3: ( '^' )
            // InternalFortXTrans.g:12912:4: '^'
            {
             before(grammarAccess.getExponentExprAccess().getOpCircumflexAccentKeyword_1_1_0()); 
            match(input,66,FOLLOW_2); 
             after(grammarAccess.getExponentExprAccess().getOpCircumflexAccentKeyword_1_1_0()); 

            }

             after(grammarAccess.getExponentExprAccess().getOpCircumflexAccentKeyword_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExponentExpr__OpAssignment_1_1"


    // $ANTLR start "rule__ExponentExpr__RightAssignment_1_2"
    // InternalFortXTrans.g:12923:1: rule__ExponentExpr__RightAssignment_1_2 : ( rulePrimary ) ;
    public final void rule__ExponentExpr__RightAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12927:1: ( ( rulePrimary ) )
            // InternalFortXTrans.g:12928:2: ( rulePrimary )
            {
            // InternalFortXTrans.g:12928:2: ( rulePrimary )
            // InternalFortXTrans.g:12929:3: rulePrimary
            {
             before(grammarAccess.getExponentExprAccess().getRightPrimaryParserRuleCall_1_2_0()); 
            pushFollow(FOLLOW_2);
            rulePrimary();

            state._fsp--;

             after(grammarAccess.getExponentExprAccess().getRightPrimaryParserRuleCall_1_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExponentExpr__RightAssignment_1_2"


    // $ANTLR start "rule__Primary__OpAssignment_0_1_1_0"
    // InternalFortXTrans.g:12938:1: rule__Primary__OpAssignment_0_1_1_0 : ( ( ':=' ) ) ;
    public final void rule__Primary__OpAssignment_0_1_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12942:1: ( ( ( ':=' ) ) )
            // InternalFortXTrans.g:12943:2: ( ( ':=' ) )
            {
            // InternalFortXTrans.g:12943:2: ( ( ':=' ) )
            // InternalFortXTrans.g:12944:3: ( ':=' )
            {
             before(grammarAccess.getPrimaryAccess().getOpColonEqualsSignKeyword_0_1_1_0_0()); 
            // InternalFortXTrans.g:12945:3: ( ':=' )
            // InternalFortXTrans.g:12946:4: ':='
            {
             before(grammarAccess.getPrimaryAccess().getOpColonEqualsSignKeyword_0_1_1_0_0()); 
            match(input,49,FOLLOW_2); 
             after(grammarAccess.getPrimaryAccess().getOpColonEqualsSignKeyword_0_1_1_0_0()); 

            }

             after(grammarAccess.getPrimaryAccess().getOpColonEqualsSignKeyword_0_1_1_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__OpAssignment_0_1_1_0"


    // $ANTLR start "rule__Primary__RightAssignment_0_1_1_1"
    // InternalFortXTrans.g:12957:1: rule__Primary__RightAssignment_0_1_1_1 : ( ruleExpr ) ;
    public final void rule__Primary__RightAssignment_0_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12961:1: ( ( ruleExpr ) )
            // InternalFortXTrans.g:12962:2: ( ruleExpr )
            {
            // InternalFortXTrans.g:12962:2: ( ruleExpr )
            // InternalFortXTrans.g:12963:3: ruleExpr
            {
             before(grammarAccess.getPrimaryAccess().getRightExprParserRuleCall_0_1_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleExpr();

            state._fsp--;

             after(grammarAccess.getPrimaryAccess().getRightExprParserRuleCall_0_1_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__RightAssignment_0_1_1_1"


    // $ANTLR start "rule__Primary__RightAssignment_0_2_2"
    // InternalFortXTrans.g:12972:1: rule__Primary__RightAssignment_0_2_2 : ( ruleExprList ) ;
    public final void rule__Primary__RightAssignment_0_2_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12976:1: ( ( ruleExprList ) )
            // InternalFortXTrans.g:12977:2: ( ruleExprList )
            {
            // InternalFortXTrans.g:12977:2: ( ruleExprList )
            // InternalFortXTrans.g:12978:3: ruleExprList
            {
             before(grammarAccess.getPrimaryAccess().getRightExprListParserRuleCall_0_2_2_0()); 
            pushFollow(FOLLOW_2);
            ruleExprList();

            state._fsp--;

             after(grammarAccess.getPrimaryAccess().getRightExprListParserRuleCall_0_2_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__RightAssignment_0_2_2"


    // $ANTLR start "rule__Primary__TypeAssignment_0_3_2"
    // InternalFortXTrans.g:12987:1: rule__Primary__TypeAssignment_0_3_2 : ( ruleSimpleName ) ;
    public final void rule__Primary__TypeAssignment_0_3_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12991:1: ( ( ruleSimpleName ) )
            // InternalFortXTrans.g:12992:2: ( ruleSimpleName )
            {
            // InternalFortXTrans.g:12992:2: ( ruleSimpleName )
            // InternalFortXTrans.g:12993:3: ruleSimpleName
            {
             before(grammarAccess.getPrimaryAccess().getTypeSimpleNameParserRuleCall_0_3_2_0()); 
            pushFollow(FOLLOW_2);
            ruleSimpleName();

            state._fsp--;

             after(grammarAccess.getPrimaryAccess().getTypeSimpleNameParserRuleCall_0_3_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__TypeAssignment_0_3_2"


    // $ANTLR start "rule__Primary__SizesAssignment_0_3_4"
    // InternalFortXTrans.g:13002:1: rule__Primary__SizesAssignment_0_3_4 : ( ruleExprList ) ;
    public final void rule__Primary__SizesAssignment_0_3_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13006:1: ( ( ruleExprList ) )
            // InternalFortXTrans.g:13007:2: ( ruleExprList )
            {
            // InternalFortXTrans.g:13007:2: ( ruleExprList )
            // InternalFortXTrans.g:13008:3: ruleExprList
            {
             before(grammarAccess.getPrimaryAccess().getSizesExprListParserRuleCall_0_3_4_0()); 
            pushFollow(FOLLOW_2);
            ruleExprList();

            state._fsp--;

             after(grammarAccess.getPrimaryAccess().getSizesExprListParserRuleCall_0_3_4_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__SizesAssignment_0_3_4"


    // $ANTLR start "rule__Primary__IndAssignment_0_3_7_0_1"
    // InternalFortXTrans.g:13017:1: rule__Primary__IndAssignment_0_3_7_0_1 : ( ruleQualified ) ;
    public final void rule__Primary__IndAssignment_0_3_7_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13021:1: ( ( ruleQualified ) )
            // InternalFortXTrans.g:13022:2: ( ruleQualified )
            {
            // InternalFortXTrans.g:13022:2: ( ruleQualified )
            // InternalFortXTrans.g:13023:3: ruleQualified
            {
             before(grammarAccess.getPrimaryAccess().getIndQualifiedParserRuleCall_0_3_7_0_1_0()); 
            pushFollow(FOLLOW_2);
            ruleQualified();

            state._fsp--;

             after(grammarAccess.getPrimaryAccess().getIndQualifiedParserRuleCall_0_3_7_0_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__IndAssignment_0_3_7_0_1"


    // $ANTLR start "rule__Primary__FillerAssignment_0_3_7_0_3"
    // InternalFortXTrans.g:13032:1: rule__Primary__FillerAssignment_0_3_7_0_3 : ( ruleStmnts ) ;
    public final void rule__Primary__FillerAssignment_0_3_7_0_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13036:1: ( ( ruleStmnts ) )
            // InternalFortXTrans.g:13037:2: ( ruleStmnts )
            {
            // InternalFortXTrans.g:13037:2: ( ruleStmnts )
            // InternalFortXTrans.g:13038:3: ruleStmnts
            {
             before(grammarAccess.getPrimaryAccess().getFillerStmntsParserRuleCall_0_3_7_0_3_0()); 
            pushFollow(FOLLOW_2);
            ruleStmnts();

            state._fsp--;

             after(grammarAccess.getPrimaryAccess().getFillerStmntsParserRuleCall_0_3_7_0_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__FillerAssignment_0_3_7_0_3"


    // $ANTLR start "rule__Primary__LitAssignment_0_3_7_1"
    // InternalFortXTrans.g:13047:1: rule__Primary__LitAssignment_0_3_7_1 : ( ruleLiteralTuple ) ;
    public final void rule__Primary__LitAssignment_0_3_7_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13051:1: ( ( ruleLiteralTuple ) )
            // InternalFortXTrans.g:13052:2: ( ruleLiteralTuple )
            {
            // InternalFortXTrans.g:13052:2: ( ruleLiteralTuple )
            // InternalFortXTrans.g:13053:3: ruleLiteralTuple
            {
             before(grammarAccess.getPrimaryAccess().getLitLiteralTupleParserRuleCall_0_3_7_1_0()); 
            pushFollow(FOLLOW_2);
            ruleLiteralTuple();

            state._fsp--;

             after(grammarAccess.getPrimaryAccess().getLitLiteralTupleParserRuleCall_0_3_7_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__LitAssignment_0_3_7_1"


    // $ANTLR start "rule__Primary__RightAssignment_0_4_2"
    // InternalFortXTrans.g:13062:1: rule__Primary__RightAssignment_0_4_2 : ( ruleExprList ) ;
    public final void rule__Primary__RightAssignment_0_4_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13066:1: ( ( ruleExprList ) )
            // InternalFortXTrans.g:13067:2: ( ruleExprList )
            {
            // InternalFortXTrans.g:13067:2: ( ruleExprList )
            // InternalFortXTrans.g:13068:3: ruleExprList
            {
             before(grammarAccess.getPrimaryAccess().getRightExprListParserRuleCall_0_4_2_0()); 
            pushFollow(FOLLOW_2);
            ruleExprList();

            state._fsp--;

             after(grammarAccess.getPrimaryAccess().getRightExprListParserRuleCall_0_4_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__RightAssignment_0_4_2"


    // $ANTLR start "rule__Primary__ExtRightAssignment_0_4_4_1"
    // InternalFortXTrans.g:13077:1: rule__Primary__ExtRightAssignment_0_4_4_1 : ( ruleExpr ) ;
    public final void rule__Primary__ExtRightAssignment_0_4_4_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13081:1: ( ( ruleExpr ) )
            // InternalFortXTrans.g:13082:2: ( ruleExpr )
            {
            // InternalFortXTrans.g:13082:2: ( ruleExpr )
            // InternalFortXTrans.g:13083:3: ruleExpr
            {
             before(grammarAccess.getPrimaryAccess().getExtRightExprParserRuleCall_0_4_4_1_0()); 
            pushFollow(FOLLOW_2);
            ruleExpr();

            state._fsp--;

             after(grammarAccess.getPrimaryAccess().getExtRightExprParserRuleCall_0_4_4_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__ExtRightAssignment_0_4_4_1"


    // $ANTLR start "rule__Primary__ExpressionAssignment_1_2"
    // InternalFortXTrans.g:13092:1: rule__Primary__ExpressionAssignment_1_2 : ( rulePrimary ) ;
    public final void rule__Primary__ExpressionAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13096:1: ( ( rulePrimary ) )
            // InternalFortXTrans.g:13097:2: ( rulePrimary )
            {
            // InternalFortXTrans.g:13097:2: ( rulePrimary )
            // InternalFortXTrans.g:13098:3: rulePrimary
            {
             before(grammarAccess.getPrimaryAccess().getExpressionPrimaryParserRuleCall_1_2_0()); 
            pushFollow(FOLLOW_2);
            rulePrimary();

            state._fsp--;

             after(grammarAccess.getPrimaryAccess().getExpressionPrimaryParserRuleCall_1_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__ExpressionAssignment_1_2"


    // $ANTLR start "rule__Primary__ExpressionAssignment_2_2"
    // InternalFortXTrans.g:13107:1: rule__Primary__ExpressionAssignment_2_2 : ( rulePrimary ) ;
    public final void rule__Primary__ExpressionAssignment_2_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13111:1: ( ( rulePrimary ) )
            // InternalFortXTrans.g:13112:2: ( rulePrimary )
            {
            // InternalFortXTrans.g:13112:2: ( rulePrimary )
            // InternalFortXTrans.g:13113:3: rulePrimary
            {
             before(grammarAccess.getPrimaryAccess().getExpressionPrimaryParserRuleCall_2_2_0()); 
            pushFollow(FOLLOW_2);
            rulePrimary();

            state._fsp--;

             after(grammarAccess.getPrimaryAccess().getExpressionPrimaryParserRuleCall_2_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__ExpressionAssignment_2_2"


    // $ANTLR start "rule__Primary__ExpAssignment_3_2"
    // InternalFortXTrans.g:13122:1: rule__Primary__ExpAssignment_3_2 : ( ruleExprList ) ;
    public final void rule__Primary__ExpAssignment_3_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13126:1: ( ( ruleExprList ) )
            // InternalFortXTrans.g:13127:2: ( ruleExprList )
            {
            // InternalFortXTrans.g:13127:2: ( ruleExprList )
            // InternalFortXTrans.g:13128:3: ruleExprList
            {
             before(grammarAccess.getPrimaryAccess().getExpExprListParserRuleCall_3_2_0()); 
            pushFollow(FOLLOW_2);
            ruleExprList();

            state._fsp--;

             after(grammarAccess.getPrimaryAccess().getExpExprListParserRuleCall_3_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__ExpAssignment_3_2"


    // $ANTLR start "rule__ExprList__ExpsAssignment_0"
    // InternalFortXTrans.g:13137:1: rule__ExprList__ExpsAssignment_0 : ( ruleExpr ) ;
    public final void rule__ExprList__ExpsAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13141:1: ( ( ruleExpr ) )
            // InternalFortXTrans.g:13142:2: ( ruleExpr )
            {
            // InternalFortXTrans.g:13142:2: ( ruleExpr )
            // InternalFortXTrans.g:13143:3: ruleExpr
            {
             before(grammarAccess.getExprListAccess().getExpsExprParserRuleCall_0_0()); 
            pushFollow(FOLLOW_2);
            ruleExpr();

            state._fsp--;

             after(grammarAccess.getExprListAccess().getExpsExprParserRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExprList__ExpsAssignment_0"


    // $ANTLR start "rule__ExprList__ExpAssignment_1_1"
    // InternalFortXTrans.g:13152:1: rule__ExprList__ExpAssignment_1_1 : ( ruleExpr ) ;
    public final void rule__ExprList__ExpAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13156:1: ( ( ruleExpr ) )
            // InternalFortXTrans.g:13157:2: ( ruleExpr )
            {
            // InternalFortXTrans.g:13157:2: ( ruleExpr )
            // InternalFortXTrans.g:13158:3: ruleExpr
            {
             before(grammarAccess.getExprListAccess().getExpExprParserRuleCall_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleExpr();

            state._fsp--;

             after(grammarAccess.getExprListAccess().getExpExprParserRuleCall_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExprList__ExpAssignment_1_1"


    // $ANTLR start "rule__ExprTail__TypeAssignment_1"
    // InternalFortXTrans.g:13167:1: rule__ExprTail__TypeAssignment_1 : ( ruleSimpleName ) ;
    public final void rule__ExprTail__TypeAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13171:1: ( ( ruleSimpleName ) )
            // InternalFortXTrans.g:13172:2: ( ruleSimpleName )
            {
            // InternalFortXTrans.g:13172:2: ( ruleSimpleName )
            // InternalFortXTrans.g:13173:3: ruleSimpleName
            {
             before(grammarAccess.getExprTailAccess().getTypeSimpleNameParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleSimpleName();

            state._fsp--;

             after(grammarAccess.getExprTailAccess().getTypeSimpleNameParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExprTail__TypeAssignment_1"


    // $ANTLR start "rule__DelimitedExpr__DodAssignment_0"
    // InternalFortXTrans.g:13182:1: rule__DelimitedExpr__DodAssignment_0 : ( ruleDo ) ;
    public final void rule__DelimitedExpr__DodAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13186:1: ( ( ruleDo ) )
            // InternalFortXTrans.g:13187:2: ( ruleDo )
            {
            // InternalFortXTrans.g:13187:2: ( ruleDo )
            // InternalFortXTrans.g:13188:3: ruleDo
            {
             before(grammarAccess.getDelimitedExprAccess().getDodDoParserRuleCall_0_0()); 
            pushFollow(FOLLOW_2);
            ruleDo();

            state._fsp--;

             after(grammarAccess.getDelimitedExprAccess().getDodDoParserRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__DodAssignment_0"


    // $ANTLR start "rule__DelimitedExpr__RetAssignment_1_0"
    // InternalFortXTrans.g:13197:1: rule__DelimitedExpr__RetAssignment_1_0 : ( ( 'return' ) ) ;
    public final void rule__DelimitedExpr__RetAssignment_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13201:1: ( ( ( 'return' ) ) )
            // InternalFortXTrans.g:13202:2: ( ( 'return' ) )
            {
            // InternalFortXTrans.g:13202:2: ( ( 'return' ) )
            // InternalFortXTrans.g:13203:3: ( 'return' )
            {
             before(grammarAccess.getDelimitedExprAccess().getRetReturnKeyword_1_0_0()); 
            // InternalFortXTrans.g:13204:3: ( 'return' )
            // InternalFortXTrans.g:13205:4: 'return'
            {
             before(grammarAccess.getDelimitedExprAccess().getRetReturnKeyword_1_0_0()); 
            match(input,67,FOLLOW_2); 
             after(grammarAccess.getDelimitedExprAccess().getRetReturnKeyword_1_0_0()); 

            }

             after(grammarAccess.getDelimitedExprAccess().getRetReturnKeyword_1_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__RetAssignment_1_0"


    // $ANTLR start "rule__DelimitedExpr__BlockAssignment_1_1"
    // InternalFortXTrans.g:13216:1: rule__DelimitedExpr__BlockAssignment_1_1 : ( ruleExpr ) ;
    public final void rule__DelimitedExpr__BlockAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13220:1: ( ( ruleExpr ) )
            // InternalFortXTrans.g:13221:2: ( ruleExpr )
            {
            // InternalFortXTrans.g:13221:2: ( ruleExpr )
            // InternalFortXTrans.g:13222:3: ruleExpr
            {
             before(grammarAccess.getDelimitedExprAccess().getBlockExprParserRuleCall_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleExpr();

            state._fsp--;

             after(grammarAccess.getDelimitedExprAccess().getBlockExprParserRuleCall_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__BlockAssignment_1_1"


    // $ANTLR start "rule__DelimitedExpr__AwhileAssignment_2_0"
    // InternalFortXTrans.g:13231:1: rule__DelimitedExpr__AwhileAssignment_2_0 : ( ( 'while' ) ) ;
    public final void rule__DelimitedExpr__AwhileAssignment_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13235:1: ( ( ( 'while' ) ) )
            // InternalFortXTrans.g:13236:2: ( ( 'while' ) )
            {
            // InternalFortXTrans.g:13236:2: ( ( 'while' ) )
            // InternalFortXTrans.g:13237:3: ( 'while' )
            {
             before(grammarAccess.getDelimitedExprAccess().getAwhileWhileKeyword_2_0_0()); 
            // InternalFortXTrans.g:13238:3: ( 'while' )
            // InternalFortXTrans.g:13239:4: 'while'
            {
             before(grammarAccess.getDelimitedExprAccess().getAwhileWhileKeyword_2_0_0()); 
            match(input,68,FOLLOW_2); 
             after(grammarAccess.getDelimitedExprAccess().getAwhileWhileKeyword_2_0_0()); 

            }

             after(grammarAccess.getDelimitedExprAccess().getAwhileWhileKeyword_2_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__AwhileAssignment_2_0"


    // $ANTLR start "rule__DelimitedExpr__ExprAssignment_2_1"
    // InternalFortXTrans.g:13250:1: rule__DelimitedExpr__ExprAssignment_2_1 : ( ruleExpr ) ;
    public final void rule__DelimitedExpr__ExprAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13254:1: ( ( ruleExpr ) )
            // InternalFortXTrans.g:13255:2: ( ruleExpr )
            {
            // InternalFortXTrans.g:13255:2: ( ruleExpr )
            // InternalFortXTrans.g:13256:3: ruleExpr
            {
             before(grammarAccess.getDelimitedExprAccess().getExprExprParserRuleCall_2_1_0()); 
            pushFollow(FOLLOW_2);
            ruleExpr();

            state._fsp--;

             after(grammarAccess.getDelimitedExprAccess().getExprExprParserRuleCall_2_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__ExprAssignment_2_1"


    // $ANTLR start "rule__DelimitedExpr__WhiledodAssignment_2_2"
    // InternalFortXTrans.g:13265:1: rule__DelimitedExpr__WhiledodAssignment_2_2 : ( ruleDo ) ;
    public final void rule__DelimitedExpr__WhiledodAssignment_2_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13269:1: ( ( ruleDo ) )
            // InternalFortXTrans.g:13270:2: ( ruleDo )
            {
            // InternalFortXTrans.g:13270:2: ( ruleDo )
            // InternalFortXTrans.g:13271:3: ruleDo
            {
             before(grammarAccess.getDelimitedExprAccess().getWhiledodDoParserRuleCall_2_2_0()); 
            pushFollow(FOLLOW_2);
            ruleDo();

            state._fsp--;

             after(grammarAccess.getDelimitedExprAccess().getWhiledodDoParserRuleCall_2_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__WhiledodAssignment_2_2"


    // $ANTLR start "rule__DelimitedExpr__AforAssignment_3_0"
    // InternalFortXTrans.g:13280:1: rule__DelimitedExpr__AforAssignment_3_0 : ( ( 'for' ) ) ;
    public final void rule__DelimitedExpr__AforAssignment_3_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13284:1: ( ( ( 'for' ) ) )
            // InternalFortXTrans.g:13285:2: ( ( 'for' ) )
            {
            // InternalFortXTrans.g:13285:2: ( ( 'for' ) )
            // InternalFortXTrans.g:13286:3: ( 'for' )
            {
             before(grammarAccess.getDelimitedExprAccess().getAforForKeyword_3_0_0()); 
            // InternalFortXTrans.g:13287:3: ( 'for' )
            // InternalFortXTrans.g:13288:4: 'for'
            {
             before(grammarAccess.getDelimitedExprAccess().getAforForKeyword_3_0_0()); 
            match(input,69,FOLLOW_2); 
             after(grammarAccess.getDelimitedExprAccess().getAforForKeyword_3_0_0()); 

            }

             after(grammarAccess.getDelimitedExprAccess().getAforForKeyword_3_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__AforAssignment_3_0"


    // $ANTLR start "rule__DelimitedExpr__GenAssignment_3_1"
    // InternalFortXTrans.g:13299:1: rule__DelimitedExpr__GenAssignment_3_1 : ( ruleGenerators ) ;
    public final void rule__DelimitedExpr__GenAssignment_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13303:1: ( ( ruleGenerators ) )
            // InternalFortXTrans.g:13304:2: ( ruleGenerators )
            {
            // InternalFortXTrans.g:13304:2: ( ruleGenerators )
            // InternalFortXTrans.g:13305:3: ruleGenerators
            {
             before(grammarAccess.getDelimitedExprAccess().getGenGeneratorsParserRuleCall_3_1_0()); 
            pushFollow(FOLLOW_2);
            ruleGenerators();

            state._fsp--;

             after(grammarAccess.getDelimitedExprAccess().getGenGeneratorsParserRuleCall_3_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__GenAssignment_3_1"


    // $ANTLR start "rule__DelimitedExpr__DofrontAssignment_3_2"
    // InternalFortXTrans.g:13314:1: rule__DelimitedExpr__DofrontAssignment_3_2 : ( ruleDoFront ) ;
    public final void rule__DelimitedExpr__DofrontAssignment_3_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13318:1: ( ( ruleDoFront ) )
            // InternalFortXTrans.g:13319:2: ( ruleDoFront )
            {
            // InternalFortXTrans.g:13319:2: ( ruleDoFront )
            // InternalFortXTrans.g:13320:3: ruleDoFront
            {
             before(grammarAccess.getDelimitedExprAccess().getDofrontDoFrontParserRuleCall_3_2_0()); 
            pushFollow(FOLLOW_2);
            ruleDoFront();

            state._fsp--;

             after(grammarAccess.getDelimitedExprAccess().getDofrontDoFrontParserRuleCall_3_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__DofrontAssignment_3_2"


    // $ANTLR start "rule__DelimitedExpr__AnifAssignment_4_0"
    // InternalFortXTrans.g:13329:1: rule__DelimitedExpr__AnifAssignment_4_0 : ( ( 'if' ) ) ;
    public final void rule__DelimitedExpr__AnifAssignment_4_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13333:1: ( ( ( 'if' ) ) )
            // InternalFortXTrans.g:13334:2: ( ( 'if' ) )
            {
            // InternalFortXTrans.g:13334:2: ( ( 'if' ) )
            // InternalFortXTrans.g:13335:3: ( 'if' )
            {
             before(grammarAccess.getDelimitedExprAccess().getAnifIfKeyword_4_0_0()); 
            // InternalFortXTrans.g:13336:3: ( 'if' )
            // InternalFortXTrans.g:13337:4: 'if'
            {
             before(grammarAccess.getDelimitedExprAccess().getAnifIfKeyword_4_0_0()); 
            match(input,70,FOLLOW_2); 
             after(grammarAccess.getDelimitedExprAccess().getAnifIfKeyword_4_0_0()); 

            }

             after(grammarAccess.getDelimitedExprAccess().getAnifIfKeyword_4_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__AnifAssignment_4_0"


    // $ANTLR start "rule__DelimitedExpr__CondAssignment_4_1"
    // InternalFortXTrans.g:13348:1: rule__DelimitedExpr__CondAssignment_4_1 : ( ruleExpr ) ;
    public final void rule__DelimitedExpr__CondAssignment_4_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13352:1: ( ( ruleExpr ) )
            // InternalFortXTrans.g:13353:2: ( ruleExpr )
            {
            // InternalFortXTrans.g:13353:2: ( ruleExpr )
            // InternalFortXTrans.g:13354:3: ruleExpr
            {
             before(grammarAccess.getDelimitedExprAccess().getCondExprParserRuleCall_4_1_0()); 
            pushFollow(FOLLOW_2);
            ruleExpr();

            state._fsp--;

             after(grammarAccess.getDelimitedExprAccess().getCondExprParserRuleCall_4_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__CondAssignment_4_1"


    // $ANTLR start "rule__DelimitedExpr__BlocksAssignment_4_3"
    // InternalFortXTrans.g:13363:1: rule__DelimitedExpr__BlocksAssignment_4_3 : ( ruleBlockElems ) ;
    public final void rule__DelimitedExpr__BlocksAssignment_4_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13367:1: ( ( ruleBlockElems ) )
            // InternalFortXTrans.g:13368:2: ( ruleBlockElems )
            {
            // InternalFortXTrans.g:13368:2: ( ruleBlockElems )
            // InternalFortXTrans.g:13369:3: ruleBlockElems
            {
             before(grammarAccess.getDelimitedExprAccess().getBlocksBlockElemsParserRuleCall_4_3_0()); 
            pushFollow(FOLLOW_2);
            ruleBlockElems();

            state._fsp--;

             after(grammarAccess.getDelimitedExprAccess().getBlocksBlockElemsParserRuleCall_4_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__BlocksAssignment_4_3"


    // $ANTLR start "rule__DelimitedExpr__ElifsAssignment_4_4"
    // InternalFortXTrans.g:13378:1: rule__DelimitedExpr__ElifsAssignment_4_4 : ( ruleElifs ) ;
    public final void rule__DelimitedExpr__ElifsAssignment_4_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13382:1: ( ( ruleElifs ) )
            // InternalFortXTrans.g:13383:2: ( ruleElifs )
            {
            // InternalFortXTrans.g:13383:2: ( ruleElifs )
            // InternalFortXTrans.g:13384:3: ruleElifs
            {
             before(grammarAccess.getDelimitedExprAccess().getElifsElifsParserRuleCall_4_4_0()); 
            pushFollow(FOLLOW_2);
            ruleElifs();

            state._fsp--;

             after(grammarAccess.getDelimitedExprAccess().getElifsElifsParserRuleCall_4_4_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__ElifsAssignment_4_4"


    // $ANTLR start "rule__DelimitedExpr__ElsAssignment_4_5"
    // InternalFortXTrans.g:13393:1: rule__DelimitedExpr__ElsAssignment_4_5 : ( ruleElse ) ;
    public final void rule__DelimitedExpr__ElsAssignment_4_5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13397:1: ( ( ruleElse ) )
            // InternalFortXTrans.g:13398:2: ( ruleElse )
            {
            // InternalFortXTrans.g:13398:2: ( ruleElse )
            // InternalFortXTrans.g:13399:3: ruleElse
            {
             before(grammarAccess.getDelimitedExprAccess().getElsElseParserRuleCall_4_5_0()); 
            pushFollow(FOLLOW_2);
            ruleElse();

            state._fsp--;

             after(grammarAccess.getDelimitedExprAccess().getElsElseParserRuleCall_4_5_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__ElsAssignment_4_5"


    // $ANTLR start "rule__Elifs__EAssignment_0"
    // InternalFortXTrans.g:13408:1: rule__Elifs__EAssignment_0 : ( ruleElif ) ;
    public final void rule__Elifs__EAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13412:1: ( ( ruleElif ) )
            // InternalFortXTrans.g:13413:2: ( ruleElif )
            {
            // InternalFortXTrans.g:13413:2: ( ruleElif )
            // InternalFortXTrans.g:13414:3: ruleElif
            {
             before(grammarAccess.getElifsAccess().getEElifParserRuleCall_0_0()); 
            pushFollow(FOLLOW_2);
            ruleElif();

            state._fsp--;

             after(grammarAccess.getElifsAccess().getEElifParserRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Elifs__EAssignment_0"


    // $ANTLR start "rule__Elifs__EAssignment_1"
    // InternalFortXTrans.g:13423:1: rule__Elifs__EAssignment_1 : ( ruleElif ) ;
    public final void rule__Elifs__EAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13427:1: ( ( ruleElif ) )
            // InternalFortXTrans.g:13428:2: ( ruleElif )
            {
            // InternalFortXTrans.g:13428:2: ( ruleElif )
            // InternalFortXTrans.g:13429:3: ruleElif
            {
             before(grammarAccess.getElifsAccess().getEElifParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleElif();

            state._fsp--;

             after(grammarAccess.getElifsAccess().getEElifParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Elifs__EAssignment_1"


    // $ANTLR start "rule__Elif__ExprAssignment_1"
    // InternalFortXTrans.g:13438:1: rule__Elif__ExprAssignment_1 : ( ruleExpr ) ;
    public final void rule__Elif__ExprAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13442:1: ( ( ruleExpr ) )
            // InternalFortXTrans.g:13443:2: ( ruleExpr )
            {
            // InternalFortXTrans.g:13443:2: ( ruleExpr )
            // InternalFortXTrans.g:13444:3: ruleExpr
            {
             before(grammarAccess.getElifAccess().getExprExprParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleExpr();

            state._fsp--;

             after(grammarAccess.getElifAccess().getExprExprParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Elif__ExprAssignment_1"


    // $ANTLR start "rule__Elif__BlockAssignment_3"
    // InternalFortXTrans.g:13453:1: rule__Elif__BlockAssignment_3 : ( ruleBlockElems ) ;
    public final void rule__Elif__BlockAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13457:1: ( ( ruleBlockElems ) )
            // InternalFortXTrans.g:13458:2: ( ruleBlockElems )
            {
            // InternalFortXTrans.g:13458:2: ( ruleBlockElems )
            // InternalFortXTrans.g:13459:3: ruleBlockElems
            {
             before(grammarAccess.getElifAccess().getBlockBlockElemsParserRuleCall_3_0()); 
            pushFollow(FOLLOW_2);
            ruleBlockElems();

            state._fsp--;

             after(grammarAccess.getElifAccess().getBlockBlockElemsParserRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Elif__BlockAssignment_3"


    // $ANTLR start "rule__Else__BlockAssignment_1"
    // InternalFortXTrans.g:13468:1: rule__Else__BlockAssignment_1 : ( ruleBlockElems ) ;
    public final void rule__Else__BlockAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13472:1: ( ( ruleBlockElems ) )
            // InternalFortXTrans.g:13473:2: ( ruleBlockElems )
            {
            // InternalFortXTrans.g:13473:2: ( ruleBlockElems )
            // InternalFortXTrans.g:13474:3: ruleBlockElems
            {
             before(grammarAccess.getElseAccess().getBlockBlockElemsParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleBlockElems();

            state._fsp--;

             after(grammarAccess.getElseAccess().getBlockBlockElemsParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Else__BlockAssignment_1"


    // $ANTLR start "rule__Generators__BindingAssignment_0"
    // InternalFortXTrans.g:13483:1: rule__Generators__BindingAssignment_0 : ( ruleBinding ) ;
    public final void rule__Generators__BindingAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13487:1: ( ( ruleBinding ) )
            // InternalFortXTrans.g:13488:2: ( ruleBinding )
            {
            // InternalFortXTrans.g:13488:2: ( ruleBinding )
            // InternalFortXTrans.g:13489:3: ruleBinding
            {
             before(grammarAccess.getGeneratorsAccess().getBindingBindingParserRuleCall_0_0()); 
            pushFollow(FOLLOW_2);
            ruleBinding();

            state._fsp--;

             after(grammarAccess.getGeneratorsAccess().getBindingBindingParserRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Generators__BindingAssignment_0"


    // $ANTLR start "rule__Generators__ClauseAssignment_1_1"
    // InternalFortXTrans.g:13498:1: rule__Generators__ClauseAssignment_1_1 : ( ruleGenClause ) ;
    public final void rule__Generators__ClauseAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13502:1: ( ( ruleGenClause ) )
            // InternalFortXTrans.g:13503:2: ( ruleGenClause )
            {
            // InternalFortXTrans.g:13503:2: ( ruleGenClause )
            // InternalFortXTrans.g:13504:3: ruleGenClause
            {
             before(grammarAccess.getGeneratorsAccess().getClauseGenClauseParserRuleCall_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleGenClause();

            state._fsp--;

             after(grammarAccess.getGeneratorsAccess().getClauseGenClauseParserRuleCall_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Generators__ClauseAssignment_1_1"


    // $ANTLR start "rule__Binding__IdtupAssignment_0_0"
    // InternalFortXTrans.g:13513:1: rule__Binding__IdtupAssignment_0_0 : ( ruleQualified ) ;
    public final void rule__Binding__IdtupAssignment_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13517:1: ( ( ruleQualified ) )
            // InternalFortXTrans.g:13518:2: ( ruleQualified )
            {
            // InternalFortXTrans.g:13518:2: ( ruleQualified )
            // InternalFortXTrans.g:13519:3: ruleQualified
            {
             before(grammarAccess.getBindingAccess().getIdtupQualifiedParserRuleCall_0_0_0()); 
            pushFollow(FOLLOW_2);
            ruleQualified();

            state._fsp--;

             after(grammarAccess.getBindingAccess().getIdtupQualifiedParserRuleCall_0_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Binding__IdtupAssignment_0_0"


    // $ANTLR start "rule__Binding__GAssignment_0_2"
    // InternalFortXTrans.g:13528:1: rule__Binding__GAssignment_0_2 : ( ruleGenSource ) ;
    public final void rule__Binding__GAssignment_0_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13532:1: ( ( ruleGenSource ) )
            // InternalFortXTrans.g:13533:2: ( ruleGenSource )
            {
            // InternalFortXTrans.g:13533:2: ( ruleGenSource )
            // InternalFortXTrans.g:13534:3: ruleGenSource
            {
             before(grammarAccess.getBindingAccess().getGGenSourceParserRuleCall_0_2_0()); 
            pushFollow(FOLLOW_2);
            ruleGenSource();

            state._fsp--;

             after(grammarAccess.getBindingAccess().getGGenSourceParserRuleCall_0_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Binding__GAssignment_0_2"


    // $ANTLR start "rule__Binding__IdtupAssignment_1_0"
    // InternalFortXTrans.g:13543:1: rule__Binding__IdtupAssignment_1_0 : ( ruleQualified ) ;
    public final void rule__Binding__IdtupAssignment_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13547:1: ( ( ruleQualified ) )
            // InternalFortXTrans.g:13548:2: ( ruleQualified )
            {
            // InternalFortXTrans.g:13548:2: ( ruleQualified )
            // InternalFortXTrans.g:13549:3: ruleQualified
            {
             before(grammarAccess.getBindingAccess().getIdtupQualifiedParserRuleCall_1_0_0()); 
            pushFollow(FOLLOW_2);
            ruleQualified();

            state._fsp--;

             after(grammarAccess.getBindingAccess().getIdtupQualifiedParserRuleCall_1_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Binding__IdtupAssignment_1_0"


    // $ANTLR start "rule__Binding__SeqAssignment_1_2"
    // InternalFortXTrans.g:13558:1: rule__Binding__SeqAssignment_1_2 : ( ( 'seq' ) ) ;
    public final void rule__Binding__SeqAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13562:1: ( ( ( 'seq' ) ) )
            // InternalFortXTrans.g:13563:2: ( ( 'seq' ) )
            {
            // InternalFortXTrans.g:13563:2: ( ( 'seq' ) )
            // InternalFortXTrans.g:13564:3: ( 'seq' )
            {
             before(grammarAccess.getBindingAccess().getSeqSeqKeyword_1_2_0()); 
            // InternalFortXTrans.g:13565:3: ( 'seq' )
            // InternalFortXTrans.g:13566:4: 'seq'
            {
             before(grammarAccess.getBindingAccess().getSeqSeqKeyword_1_2_0()); 
            match(input,71,FOLLOW_2); 
             after(grammarAccess.getBindingAccess().getSeqSeqKeyword_1_2_0()); 

            }

             after(grammarAccess.getBindingAccess().getSeqSeqKeyword_1_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Binding__SeqAssignment_1_2"


    // $ANTLR start "rule__Binding__GAssignment_1_4"
    // InternalFortXTrans.g:13577:1: rule__Binding__GAssignment_1_4 : ( ruleGenSource ) ;
    public final void rule__Binding__GAssignment_1_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13581:1: ( ( ruleGenSource ) )
            // InternalFortXTrans.g:13582:2: ( ruleGenSource )
            {
            // InternalFortXTrans.g:13582:2: ( ruleGenSource )
            // InternalFortXTrans.g:13583:3: ruleGenSource
            {
             before(grammarAccess.getBindingAccess().getGGenSourceParserRuleCall_1_4_0()); 
            pushFollow(FOLLOW_2);
            ruleGenSource();

            state._fsp--;

             after(grammarAccess.getBindingAccess().getGGenSourceParserRuleCall_1_4_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Binding__GAssignment_1_4"


    // $ANTLR start "rule__GenSource__EndAssignment_1_2"
    // InternalFortXTrans.g:13592:1: rule__GenSource__EndAssignment_1_2 : ( ruleExpr ) ;
    public final void rule__GenSource__EndAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13596:1: ( ( ruleExpr ) )
            // InternalFortXTrans.g:13597:2: ( ruleExpr )
            {
            // InternalFortXTrans.g:13597:2: ( ruleExpr )
            // InternalFortXTrans.g:13598:3: ruleExpr
            {
             before(grammarAccess.getGenSourceAccess().getEndExprParserRuleCall_1_2_0()); 
            pushFollow(FOLLOW_2);
            ruleExpr();

            state._fsp--;

             after(grammarAccess.getGenSourceAccess().getEndExprParserRuleCall_1_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GenSource__EndAssignment_1_2"


    // $ANTLR start "rule__GenClause__BindingAssignment_0"
    // InternalFortXTrans.g:13607:1: rule__GenClause__BindingAssignment_0 : ( ruleBinding ) ;
    public final void rule__GenClause__BindingAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13611:1: ( ( ruleBinding ) )
            // InternalFortXTrans.g:13612:2: ( ruleBinding )
            {
            // InternalFortXTrans.g:13612:2: ( ruleBinding )
            // InternalFortXTrans.g:13613:3: ruleBinding
            {
             before(grammarAccess.getGenClauseAccess().getBindingBindingParserRuleCall_0_0()); 
            pushFollow(FOLLOW_2);
            ruleBinding();

            state._fsp--;

             after(grammarAccess.getGenClauseAccess().getBindingBindingParserRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GenClause__BindingAssignment_0"


    // $ANTLR start "rule__GenClause__ExprAssignment_1"
    // InternalFortXTrans.g:13622:1: rule__GenClause__ExprAssignment_1 : ( ruleExpr ) ;
    public final void rule__GenClause__ExprAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13626:1: ( ( ruleExpr ) )
            // InternalFortXTrans.g:13627:2: ( ruleExpr )
            {
            // InternalFortXTrans.g:13627:2: ( ruleExpr )
            // InternalFortXTrans.g:13628:3: ruleExpr
            {
             before(grammarAccess.getGenClauseAccess().getExprExprParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleExpr();

            state._fsp--;

             after(grammarAccess.getGenClauseAccess().getExprExprParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GenClause__ExprAssignment_1"


    // $ANTLR start "rule__BlockElems__BlockAssignment_0"
    // InternalFortXTrans.g:13637:1: rule__BlockElems__BlockAssignment_0 : ( ruleBlockElem ) ;
    public final void rule__BlockElems__BlockAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13641:1: ( ( ruleBlockElem ) )
            // InternalFortXTrans.g:13642:2: ( ruleBlockElem )
            {
            // InternalFortXTrans.g:13642:2: ( ruleBlockElem )
            // InternalFortXTrans.g:13643:3: ruleBlockElem
            {
             before(grammarAccess.getBlockElemsAccess().getBlockBlockElemParserRuleCall_0_0()); 
            pushFollow(FOLLOW_2);
            ruleBlockElem();

            state._fsp--;

             after(grammarAccess.getBlockElemsAccess().getBlockBlockElemParserRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BlockElems__BlockAssignment_0"


    // $ANTLR start "rule__BlockElems__BlockAssignment_1"
    // InternalFortXTrans.g:13652:1: rule__BlockElems__BlockAssignment_1 : ( ruleBlockElem ) ;
    public final void rule__BlockElems__BlockAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13656:1: ( ( ruleBlockElem ) )
            // InternalFortXTrans.g:13657:2: ( ruleBlockElem )
            {
            // InternalFortXTrans.g:13657:2: ( ruleBlockElem )
            // InternalFortXTrans.g:13658:3: ruleBlockElem
            {
             before(grammarAccess.getBlockElemsAccess().getBlockBlockElemParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleBlockElem();

            state._fsp--;

             after(grammarAccess.getBlockElemsAccess().getBlockBlockElemParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BlockElems__BlockAssignment_1"


    // $ANTLR start "rule__BlockElem__StAssignment"
    // InternalFortXTrans.g:13667:1: rule__BlockElem__StAssignment : ( ruleStmnts ) ;
    public final void rule__BlockElem__StAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13671:1: ( ( ruleStmnts ) )
            // InternalFortXTrans.g:13672:2: ( ruleStmnts )
            {
            // InternalFortXTrans.g:13672:2: ( ruleStmnts )
            // InternalFortXTrans.g:13673:3: ruleStmnts
            {
             before(grammarAccess.getBlockElemAccess().getStStmntsParserRuleCall_0()); 
            pushFollow(FOLLOW_2);
            ruleStmnts();

            state._fsp--;

             after(grammarAccess.getBlockElemAccess().getStStmntsParserRuleCall_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BlockElem__StAssignment"


    // $ANTLR start "rule__Do__DofsAssignment_0"
    // InternalFortXTrans.g:13682:1: rule__Do__DofsAssignment_0 : ( ruleDoFront ) ;
    public final void rule__Do__DofsAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13686:1: ( ( ruleDoFront ) )
            // InternalFortXTrans.g:13687:2: ( ruleDoFront )
            {
            // InternalFortXTrans.g:13687:2: ( ruleDoFront )
            // InternalFortXTrans.g:13688:3: ruleDoFront
            {
             before(grammarAccess.getDoAccess().getDofsDoFrontParserRuleCall_0_0()); 
            pushFollow(FOLLOW_2);
            ruleDoFront();

            state._fsp--;

             after(grammarAccess.getDoAccess().getDofsDoFrontParserRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Do__DofsAssignment_0"


    // $ANTLR start "rule__Do__DofsAssignment_1_1"
    // InternalFortXTrans.g:13697:1: rule__Do__DofsAssignment_1_1 : ( ruleDoFront ) ;
    public final void rule__Do__DofsAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13701:1: ( ( ruleDoFront ) )
            // InternalFortXTrans.g:13702:2: ( ruleDoFront )
            {
            // InternalFortXTrans.g:13702:2: ( ruleDoFront )
            // InternalFortXTrans.g:13703:3: ruleDoFront
            {
             before(grammarAccess.getDoAccess().getDofsDoFrontParserRuleCall_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleDoFront();

            state._fsp--;

             after(grammarAccess.getDoAccess().getDofsDoFrontParserRuleCall_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Do__DofsAssignment_1_1"


    // $ANTLR start "rule__DoFront__AtAssignment_0_0"
    // InternalFortXTrans.g:13712:1: rule__DoFront__AtAssignment_0_0 : ( ( 'at' ) ) ;
    public final void rule__DoFront__AtAssignment_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13716:1: ( ( ( 'at' ) ) )
            // InternalFortXTrans.g:13717:2: ( ( 'at' ) )
            {
            // InternalFortXTrans.g:13717:2: ( ( 'at' ) )
            // InternalFortXTrans.g:13718:3: ( 'at' )
            {
             before(grammarAccess.getDoFrontAccess().getAtAtKeyword_0_0_0()); 
            // InternalFortXTrans.g:13719:3: ( 'at' )
            // InternalFortXTrans.g:13720:4: 'at'
            {
             before(grammarAccess.getDoFrontAccess().getAtAtKeyword_0_0_0()); 
            match(input,72,FOLLOW_2); 
             after(grammarAccess.getDoFrontAccess().getAtAtKeyword_0_0_0()); 

            }

             after(grammarAccess.getDoFrontAccess().getAtAtKeyword_0_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DoFront__AtAssignment_0_0"


    // $ANTLR start "rule__DoFront__ExpAssignment_0_1"
    // InternalFortXTrans.g:13731:1: rule__DoFront__ExpAssignment_0_1 : ( ruleExpr ) ;
    public final void rule__DoFront__ExpAssignment_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13735:1: ( ( ruleExpr ) )
            // InternalFortXTrans.g:13736:2: ( ruleExpr )
            {
            // InternalFortXTrans.g:13736:2: ( ruleExpr )
            // InternalFortXTrans.g:13737:3: ruleExpr
            {
             before(grammarAccess.getDoFrontAccess().getExpExprParserRuleCall_0_1_0()); 
            pushFollow(FOLLOW_2);
            ruleExpr();

            state._fsp--;

             after(grammarAccess.getDoFrontAccess().getExpExprParserRuleCall_0_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DoFront__ExpAssignment_0_1"


    // $ANTLR start "rule__DoFront__AtomAssignment_1"
    // InternalFortXTrans.g:13746:1: rule__DoFront__AtomAssignment_1 : ( ( 'atomic' ) ) ;
    public final void rule__DoFront__AtomAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13750:1: ( ( ( 'atomic' ) ) )
            // InternalFortXTrans.g:13751:2: ( ( 'atomic' ) )
            {
            // InternalFortXTrans.g:13751:2: ( ( 'atomic' ) )
            // InternalFortXTrans.g:13752:3: ( 'atomic' )
            {
             before(grammarAccess.getDoFrontAccess().getAtomAtomicKeyword_1_0()); 
            // InternalFortXTrans.g:13753:3: ( 'atomic' )
            // InternalFortXTrans.g:13754:4: 'atomic'
            {
             before(grammarAccess.getDoFrontAccess().getAtomAtomicKeyword_1_0()); 
            match(input,64,FOLLOW_2); 
             after(grammarAccess.getDoFrontAccess().getAtomAtomicKeyword_1_0()); 

            }

             after(grammarAccess.getDoFrontAccess().getAtomAtomicKeyword_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DoFront__AtomAssignment_1"


    // $ANTLR start "rule__DoFront__BlockAssignment_3"
    // InternalFortXTrans.g:13765:1: rule__DoFront__BlockAssignment_3 : ( ruleBlockElems ) ;
    public final void rule__DoFront__BlockAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13769:1: ( ( ruleBlockElems ) )
            // InternalFortXTrans.g:13770:2: ( ruleBlockElems )
            {
            // InternalFortXTrans.g:13770:2: ( ruleBlockElems )
            // InternalFortXTrans.g:13771:3: ruleBlockElems
            {
             before(grammarAccess.getDoFrontAccess().getBlockBlockElemsParserRuleCall_3_0()); 
            pushFollow(FOLLOW_2);
            ruleBlockElems();

            state._fsp--;

             after(grammarAccess.getDoFrontAccess().getBlockBlockElemsParserRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DoFront__BlockAssignment_3"


    // $ANTLR start "rule__IsType__TypeAssignment_1"
    // InternalFortXTrans.g:13780:1: rule__IsType__TypeAssignment_1 : ( ruleSimpleName ) ;
    public final void rule__IsType__TypeAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13784:1: ( ( ruleSimpleName ) )
            // InternalFortXTrans.g:13785:2: ( ruleSimpleName )
            {
            // InternalFortXTrans.g:13785:2: ( ruleSimpleName )
            // InternalFortXTrans.g:13786:3: ruleSimpleName
            {
             before(grammarAccess.getIsTypeAccess().getTypeSimpleNameParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleSimpleName();

            state._fsp--;

             after(grammarAccess.getIsTypeAccess().getTypeSimpleNameParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IsType__TypeAssignment_1"


    // $ANTLR start "rule__FieldDecl__PriAssignment_0_0"
    // InternalFortXTrans.g:13795:1: rule__FieldDecl__PriAssignment_0_0 : ( ( 'private' ) ) ;
    public final void rule__FieldDecl__PriAssignment_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13799:1: ( ( ( 'private' ) ) )
            // InternalFortXTrans.g:13800:2: ( ( 'private' ) )
            {
            // InternalFortXTrans.g:13800:2: ( ( 'private' ) )
            // InternalFortXTrans.g:13801:3: ( 'private' )
            {
             before(grammarAccess.getFieldDeclAccess().getPriPrivateKeyword_0_0_0()); 
            // InternalFortXTrans.g:13802:3: ( 'private' )
            // InternalFortXTrans.g:13803:4: 'private'
            {
             before(grammarAccess.getFieldDeclAccess().getPriPrivateKeyword_0_0_0()); 
            match(input,62,FOLLOW_2); 
             after(grammarAccess.getFieldDeclAccess().getPriPrivateKeyword_0_0_0()); 

            }

             after(grammarAccess.getFieldDeclAccess().getPriPrivateKeyword_0_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__PriAssignment_0_0"


    // $ANTLR start "rule__FieldDecl__MutAssignment_0_1"
    // InternalFortXTrans.g:13814:1: rule__FieldDecl__MutAssignment_0_1 : ( ( 'var' ) ) ;
    public final void rule__FieldDecl__MutAssignment_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13818:1: ( ( ( 'var' ) ) )
            // InternalFortXTrans.g:13819:2: ( ( 'var' ) )
            {
            // InternalFortXTrans.g:13819:2: ( ( 'var' ) )
            // InternalFortXTrans.g:13820:3: ( 'var' )
            {
             before(grammarAccess.getFieldDeclAccess().getMutVarKeyword_0_1_0()); 
            // InternalFortXTrans.g:13821:3: ( 'var' )
            // InternalFortXTrans.g:13822:4: 'var'
            {
             before(grammarAccess.getFieldDeclAccess().getMutVarKeyword_0_1_0()); 
            match(input,73,FOLLOW_2); 
             after(grammarAccess.getFieldDeclAccess().getMutVarKeyword_0_1_0()); 

            }

             after(grammarAccess.getFieldDeclAccess().getMutVarKeyword_0_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__MutAssignment_0_1"


    // $ANTLR start "rule__FieldDecl__VarsAssignment_0_2"
    // InternalFortXTrans.g:13833:1: rule__FieldDecl__VarsAssignment_0_2 : ( ruleNoNewlineVarWTypes ) ;
    public final void rule__FieldDecl__VarsAssignment_0_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13837:1: ( ( ruleNoNewlineVarWTypes ) )
            // InternalFortXTrans.g:13838:2: ( ruleNoNewlineVarWTypes )
            {
            // InternalFortXTrans.g:13838:2: ( ruleNoNewlineVarWTypes )
            // InternalFortXTrans.g:13839:3: ruleNoNewlineVarWTypes
            {
             before(grammarAccess.getFieldDeclAccess().getVarsNoNewlineVarWTypesParserRuleCall_0_2_0()); 
            pushFollow(FOLLOW_2);
            ruleNoNewlineVarWTypes();

            state._fsp--;

             after(grammarAccess.getFieldDeclAccess().getVarsNoNewlineVarWTypesParserRuleCall_0_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__VarsAssignment_0_2"


    // $ANTLR start "rule__FieldDecl__InitAssignment_0_3_1"
    // InternalFortXTrans.g:13848:1: rule__FieldDecl__InitAssignment_0_3_1 : ( ruleExpr ) ;
    public final void rule__FieldDecl__InitAssignment_0_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13852:1: ( ( ruleExpr ) )
            // InternalFortXTrans.g:13853:2: ( ruleExpr )
            {
            // InternalFortXTrans.g:13853:2: ( ruleExpr )
            // InternalFortXTrans.g:13854:3: ruleExpr
            {
             before(grammarAccess.getFieldDeclAccess().getInitExprParserRuleCall_0_3_1_0()); 
            pushFollow(FOLLOW_2);
            ruleExpr();

            state._fsp--;

             after(grammarAccess.getFieldDeclAccess().getInitExprParserRuleCall_0_3_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__InitAssignment_0_3_1"


    // $ANTLR start "rule__FieldDecl__PriAssignment_1_0"
    // InternalFortXTrans.g:13863:1: rule__FieldDecl__PriAssignment_1_0 : ( ( 'private' ) ) ;
    public final void rule__FieldDecl__PriAssignment_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13867:1: ( ( ( 'private' ) ) )
            // InternalFortXTrans.g:13868:2: ( ( 'private' ) )
            {
            // InternalFortXTrans.g:13868:2: ( ( 'private' ) )
            // InternalFortXTrans.g:13869:3: ( 'private' )
            {
             before(grammarAccess.getFieldDeclAccess().getPriPrivateKeyword_1_0_0()); 
            // InternalFortXTrans.g:13870:3: ( 'private' )
            // InternalFortXTrans.g:13871:4: 'private'
            {
             before(grammarAccess.getFieldDeclAccess().getPriPrivateKeyword_1_0_0()); 
            match(input,62,FOLLOW_2); 
             after(grammarAccess.getFieldDeclAccess().getPriPrivateKeyword_1_0_0()); 

            }

             after(grammarAccess.getFieldDeclAccess().getPriPrivateKeyword_1_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__PriAssignment_1_0"


    // $ANTLR start "rule__FieldDecl__IdtupAssignment_1_1"
    // InternalFortXTrans.g:13882:1: rule__FieldDecl__IdtupAssignment_1_1 : ( ruleQualified ) ;
    public final void rule__FieldDecl__IdtupAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13886:1: ( ( ruleQualified ) )
            // InternalFortXTrans.g:13887:2: ( ruleQualified )
            {
            // InternalFortXTrans.g:13887:2: ( ruleQualified )
            // InternalFortXTrans.g:13888:3: ruleQualified
            {
             before(grammarAccess.getFieldDeclAccess().getIdtupQualifiedParserRuleCall_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleQualified();

            state._fsp--;

             after(grammarAccess.getFieldDeclAccess().getIdtupQualifiedParserRuleCall_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__IdtupAssignment_1_1"


    // $ANTLR start "rule__FieldDecl__InitAssignment_1_3"
    // InternalFortXTrans.g:13897:1: rule__FieldDecl__InitAssignment_1_3 : ( ruleExpr ) ;
    public final void rule__FieldDecl__InitAssignment_1_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13901:1: ( ( ruleExpr ) )
            // InternalFortXTrans.g:13902:2: ( ruleExpr )
            {
            // InternalFortXTrans.g:13902:2: ( ruleExpr )
            // InternalFortXTrans.g:13903:3: ruleExpr
            {
             before(grammarAccess.getFieldDeclAccess().getInitExprParserRuleCall_1_3_0()); 
            pushFollow(FOLLOW_2);
            ruleExpr();

            state._fsp--;

             after(grammarAccess.getFieldDeclAccess().getInitExprParserRuleCall_1_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__InitAssignment_1_3"


    // $ANTLR start "rule__FieldDecl__PriAssignment_2_0"
    // InternalFortXTrans.g:13912:1: rule__FieldDecl__PriAssignment_2_0 : ( ( 'private' ) ) ;
    public final void rule__FieldDecl__PriAssignment_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13916:1: ( ( ( 'private' ) ) )
            // InternalFortXTrans.g:13917:2: ( ( 'private' ) )
            {
            // InternalFortXTrans.g:13917:2: ( ( 'private' ) )
            // InternalFortXTrans.g:13918:3: ( 'private' )
            {
             before(grammarAccess.getFieldDeclAccess().getPriPrivateKeyword_2_0_0()); 
            // InternalFortXTrans.g:13919:3: ( 'private' )
            // InternalFortXTrans.g:13920:4: 'private'
            {
             before(grammarAccess.getFieldDeclAccess().getPriPrivateKeyword_2_0_0()); 
            match(input,62,FOLLOW_2); 
             after(grammarAccess.getFieldDeclAccess().getPriPrivateKeyword_2_0_0()); 

            }

             after(grammarAccess.getFieldDeclAccess().getPriPrivateKeyword_2_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__PriAssignment_2_0"


    // $ANTLR start "rule__FieldDecl__MutAssignment_2_1"
    // InternalFortXTrans.g:13931:1: rule__FieldDecl__MutAssignment_2_1 : ( ( 'var' ) ) ;
    public final void rule__FieldDecl__MutAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13935:1: ( ( ( 'var' ) ) )
            // InternalFortXTrans.g:13936:2: ( ( 'var' ) )
            {
            // InternalFortXTrans.g:13936:2: ( ( 'var' ) )
            // InternalFortXTrans.g:13937:3: ( 'var' )
            {
             before(grammarAccess.getFieldDeclAccess().getMutVarKeyword_2_1_0()); 
            // InternalFortXTrans.g:13938:3: ( 'var' )
            // InternalFortXTrans.g:13939:4: 'var'
            {
             before(grammarAccess.getFieldDeclAccess().getMutVarKeyword_2_1_0()); 
            match(input,73,FOLLOW_2); 
             after(grammarAccess.getFieldDeclAccess().getMutVarKeyword_2_1_0()); 

            }

             after(grammarAccess.getFieldDeclAccess().getMutVarKeyword_2_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__MutAssignment_2_1"


    // $ANTLR start "rule__FieldDecl__IdtupAssignment_2_2"
    // InternalFortXTrans.g:13950:1: rule__FieldDecl__IdtupAssignment_2_2 : ( ruleQualified ) ;
    public final void rule__FieldDecl__IdtupAssignment_2_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13954:1: ( ( ruleQualified ) )
            // InternalFortXTrans.g:13955:2: ( ruleQualified )
            {
            // InternalFortXTrans.g:13955:2: ( ruleQualified )
            // InternalFortXTrans.g:13956:3: ruleQualified
            {
             before(grammarAccess.getFieldDeclAccess().getIdtupQualifiedParserRuleCall_2_2_0()); 
            pushFollow(FOLLOW_2);
            ruleQualified();

            state._fsp--;

             after(grammarAccess.getFieldDeclAccess().getIdtupQualifiedParserRuleCall_2_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__IdtupAssignment_2_2"


    // $ANTLR start "rule__FieldDecl__TypeAssignment_2_4"
    // InternalFortXTrans.g:13965:1: rule__FieldDecl__TypeAssignment_2_4 : ( ruleSimpleName ) ;
    public final void rule__FieldDecl__TypeAssignment_2_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13969:1: ( ( ruleSimpleName ) )
            // InternalFortXTrans.g:13970:2: ( ruleSimpleName )
            {
            // InternalFortXTrans.g:13970:2: ( ruleSimpleName )
            // InternalFortXTrans.g:13971:3: ruleSimpleName
            {
             before(grammarAccess.getFieldDeclAccess().getTypeSimpleNameParserRuleCall_2_4_0()); 
            pushFollow(FOLLOW_2);
            ruleSimpleName();

            state._fsp--;

             after(grammarAccess.getFieldDeclAccess().getTypeSimpleNameParserRuleCall_2_4_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__TypeAssignment_2_4"


    // $ANTLR start "rule__FieldDecl__InitAssignment_2_6_1"
    // InternalFortXTrans.g:13980:1: rule__FieldDecl__InitAssignment_2_6_1 : ( ruleExpr ) ;
    public final void rule__FieldDecl__InitAssignment_2_6_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13984:1: ( ( ruleExpr ) )
            // InternalFortXTrans.g:13985:2: ( ruleExpr )
            {
            // InternalFortXTrans.g:13985:2: ( ruleExpr )
            // InternalFortXTrans.g:13986:3: ruleExpr
            {
             before(grammarAccess.getFieldDeclAccess().getInitExprParserRuleCall_2_6_1_0()); 
            pushFollow(FOLLOW_2);
            ruleExpr();

            state._fsp--;

             after(grammarAccess.getFieldDeclAccess().getInitExprParserRuleCall_2_6_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__InitAssignment_2_6_1"


    // $ANTLR start "rule__FieldDecl__PriAssignment_3_0"
    // InternalFortXTrans.g:13995:1: rule__FieldDecl__PriAssignment_3_0 : ( ( 'private' ) ) ;
    public final void rule__FieldDecl__PriAssignment_3_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13999:1: ( ( ( 'private' ) ) )
            // InternalFortXTrans.g:14000:2: ( ( 'private' ) )
            {
            // InternalFortXTrans.g:14000:2: ( ( 'private' ) )
            // InternalFortXTrans.g:14001:3: ( 'private' )
            {
             before(grammarAccess.getFieldDeclAccess().getPriPrivateKeyword_3_0_0()); 
            // InternalFortXTrans.g:14002:3: ( 'private' )
            // InternalFortXTrans.g:14003:4: 'private'
            {
             before(grammarAccess.getFieldDeclAccess().getPriPrivateKeyword_3_0_0()); 
            match(input,62,FOLLOW_2); 
             after(grammarAccess.getFieldDeclAccess().getPriPrivateKeyword_3_0_0()); 

            }

             after(grammarAccess.getFieldDeclAccess().getPriPrivateKeyword_3_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__PriAssignment_3_0"


    // $ANTLR start "rule__FieldDecl__MutAssignment_3_1"
    // InternalFortXTrans.g:14014:1: rule__FieldDecl__MutAssignment_3_1 : ( ( 'var' ) ) ;
    public final void rule__FieldDecl__MutAssignment_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:14018:1: ( ( ( 'var' ) ) )
            // InternalFortXTrans.g:14019:2: ( ( 'var' ) )
            {
            // InternalFortXTrans.g:14019:2: ( ( 'var' ) )
            // InternalFortXTrans.g:14020:3: ( 'var' )
            {
             before(grammarAccess.getFieldDeclAccess().getMutVarKeyword_3_1_0()); 
            // InternalFortXTrans.g:14021:3: ( 'var' )
            // InternalFortXTrans.g:14022:4: 'var'
            {
             before(grammarAccess.getFieldDeclAccess().getMutVarKeyword_3_1_0()); 
            match(input,73,FOLLOW_2); 
             after(grammarAccess.getFieldDeclAccess().getMutVarKeyword_3_1_0()); 

            }

             after(grammarAccess.getFieldDeclAccess().getMutVarKeyword_3_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__MutAssignment_3_1"


    // $ANTLR start "rule__FieldDecl__IdtupAssignment_3_2"
    // InternalFortXTrans.g:14033:1: rule__FieldDecl__IdtupAssignment_3_2 : ( ruleQualified ) ;
    public final void rule__FieldDecl__IdtupAssignment_3_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:14037:1: ( ( ruleQualified ) )
            // InternalFortXTrans.g:14038:2: ( ruleQualified )
            {
            // InternalFortXTrans.g:14038:2: ( ruleQualified )
            // InternalFortXTrans.g:14039:3: ruleQualified
            {
             before(grammarAccess.getFieldDeclAccess().getIdtupQualifiedParserRuleCall_3_2_0()); 
            pushFollow(FOLLOW_2);
            ruleQualified();

            state._fsp--;

             after(grammarAccess.getFieldDeclAccess().getIdtupQualifiedParserRuleCall_3_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__IdtupAssignment_3_2"


    // $ANTLR start "rule__FieldDecl__TuptypeAssignment_3_4"
    // InternalFortXTrans.g:14048:1: rule__FieldDecl__TuptypeAssignment_3_4 : ( ruleTupleType ) ;
    public final void rule__FieldDecl__TuptypeAssignment_3_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:14052:1: ( ( ruleTupleType ) )
            // InternalFortXTrans.g:14053:2: ( ruleTupleType )
            {
            // InternalFortXTrans.g:14053:2: ( ruleTupleType )
            // InternalFortXTrans.g:14054:3: ruleTupleType
            {
             before(grammarAccess.getFieldDeclAccess().getTuptypeTupleTypeParserRuleCall_3_4_0()); 
            pushFollow(FOLLOW_2);
            ruleTupleType();

            state._fsp--;

             after(grammarAccess.getFieldDeclAccess().getTuptypeTupleTypeParserRuleCall_3_4_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__TuptypeAssignment_3_4"


    // $ANTLR start "rule__FieldDecl__InitAssignment_3_5_1"
    // InternalFortXTrans.g:14063:1: rule__FieldDecl__InitAssignment_3_5_1 : ( ruleExpr ) ;
    public final void rule__FieldDecl__InitAssignment_3_5_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:14067:1: ( ( ruleExpr ) )
            // InternalFortXTrans.g:14068:2: ( ruleExpr )
            {
            // InternalFortXTrans.g:14068:2: ( ruleExpr )
            // InternalFortXTrans.g:14069:3: ruleExpr
            {
             before(grammarAccess.getFieldDeclAccess().getInitExprParserRuleCall_3_5_1_0()); 
            pushFollow(FOLLOW_2);
            ruleExpr();

            state._fsp--;

             after(grammarAccess.getFieldDeclAccess().getInitExprParserRuleCall_3_5_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__InitAssignment_3_5_1"


    // $ANTLR start "rule__NoNewlineVarWTypes__SingleAssignment_0_0"
    // InternalFortXTrans.g:14078:1: rule__NoNewlineVarWTypes__SingleAssignment_0_0 : ( ruleNoNewlineVarWType ) ;
    public final void rule__NoNewlineVarWTypes__SingleAssignment_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:14082:1: ( ( ruleNoNewlineVarWType ) )
            // InternalFortXTrans.g:14083:2: ( ruleNoNewlineVarWType )
            {
            // InternalFortXTrans.g:14083:2: ( ruleNoNewlineVarWType )
            // InternalFortXTrans.g:14084:3: ruleNoNewlineVarWType
            {
             before(grammarAccess.getNoNewlineVarWTypesAccess().getSingleNoNewlineVarWTypeParserRuleCall_0_0_0()); 
            pushFollow(FOLLOW_2);
            ruleNoNewlineVarWType();

            state._fsp--;

             after(grammarAccess.getNoNewlineVarWTypesAccess().getSingleNoNewlineVarWTypeParserRuleCall_0_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NoNewlineVarWTypes__SingleAssignment_0_0"


    // $ANTLR start "rule__NoNewlineVarWTypes__ArrsizeAssignment_0_1_1"
    // InternalFortXTrans.g:14093:1: rule__NoNewlineVarWTypes__ArrsizeAssignment_0_1_1 : ( ruleExprList ) ;
    public final void rule__NoNewlineVarWTypes__ArrsizeAssignment_0_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:14097:1: ( ( ruleExprList ) )
            // InternalFortXTrans.g:14098:2: ( ruleExprList )
            {
            // InternalFortXTrans.g:14098:2: ( ruleExprList )
            // InternalFortXTrans.g:14099:3: ruleExprList
            {
             before(grammarAccess.getNoNewlineVarWTypesAccess().getArrsizeExprListParserRuleCall_0_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleExprList();

            state._fsp--;

             after(grammarAccess.getNoNewlineVarWTypesAccess().getArrsizeExprListParserRuleCall_0_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NoNewlineVarWTypes__ArrsizeAssignment_0_1_1"


    // $ANTLR start "rule__NoNewlineVarWTypes__MultipleAssignment_1_1"
    // InternalFortXTrans.g:14108:1: rule__NoNewlineVarWTypes__MultipleAssignment_1_1 : ( ruleNoNewlineVarWType ) ;
    public final void rule__NoNewlineVarWTypes__MultipleAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:14112:1: ( ( ruleNoNewlineVarWType ) )
            // InternalFortXTrans.g:14113:2: ( ruleNoNewlineVarWType )
            {
            // InternalFortXTrans.g:14113:2: ( ruleNoNewlineVarWType )
            // InternalFortXTrans.g:14114:3: ruleNoNewlineVarWType
            {
             before(grammarAccess.getNoNewlineVarWTypesAccess().getMultipleNoNewlineVarWTypeParserRuleCall_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleNoNewlineVarWType();

            state._fsp--;

             after(grammarAccess.getNoNewlineVarWTypesAccess().getMultipleNoNewlineVarWTypeParserRuleCall_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NoNewlineVarWTypes__MultipleAssignment_1_1"


    // $ANTLR start "rule__NoNewlineVarWTypes__MultipleAssignment_1_2_1"
    // InternalFortXTrans.g:14123:1: rule__NoNewlineVarWTypes__MultipleAssignment_1_2_1 : ( ruleNoNewlineVarWType ) ;
    public final void rule__NoNewlineVarWTypes__MultipleAssignment_1_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:14127:1: ( ( ruleNoNewlineVarWType ) )
            // InternalFortXTrans.g:14128:2: ( ruleNoNewlineVarWType )
            {
            // InternalFortXTrans.g:14128:2: ( ruleNoNewlineVarWType )
            // InternalFortXTrans.g:14129:3: ruleNoNewlineVarWType
            {
             before(grammarAccess.getNoNewlineVarWTypesAccess().getMultipleNoNewlineVarWTypeParserRuleCall_1_2_1_0()); 
            pushFollow(FOLLOW_2);
            ruleNoNewlineVarWType();

            state._fsp--;

             after(grammarAccess.getNoNewlineVarWTypesAccess().getMultipleNoNewlineVarWTypeParserRuleCall_1_2_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NoNewlineVarWTypes__MultipleAssignment_1_2_1"


    // $ANTLR start "rule__NoNewlineVarWType__BidAssignment_0"
    // InternalFortXTrans.g:14138:1: rule__NoNewlineVarWType__BidAssignment_0 : ( ruleQualifiedName ) ;
    public final void rule__NoNewlineVarWType__BidAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:14142:1: ( ( ruleQualifiedName ) )
            // InternalFortXTrans.g:14143:2: ( ruleQualifiedName )
            {
            // InternalFortXTrans.g:14143:2: ( ruleQualifiedName )
            // InternalFortXTrans.g:14144:3: ruleQualifiedName
            {
             before(grammarAccess.getNoNewlineVarWTypeAccess().getBidQualifiedNameParserRuleCall_0_0()); 
            pushFollow(FOLLOW_2);
            ruleQualifiedName();

            state._fsp--;

             after(grammarAccess.getNoNewlineVarWTypeAccess().getBidQualifiedNameParserRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NoNewlineVarWType__BidAssignment_0"


    // $ANTLR start "rule__NoNewlineVarWType__IstypeAssignment_1"
    // InternalFortXTrans.g:14153:1: rule__NoNewlineVarWType__IstypeAssignment_1 : ( ruleIsType ) ;
    public final void rule__NoNewlineVarWType__IstypeAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:14157:1: ( ( ruleIsType ) )
            // InternalFortXTrans.g:14158:2: ( ruleIsType )
            {
            // InternalFortXTrans.g:14158:2: ( ruleIsType )
            // InternalFortXTrans.g:14159:3: ruleIsType
            {
             before(grammarAccess.getNoNewlineVarWTypeAccess().getIstypeIsTypeParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleIsType();

            state._fsp--;

             after(grammarAccess.getNoNewlineVarWTypeAccess().getIstypeIsTypeParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NoNewlineVarWType__IstypeAssignment_1"


    // $ANTLR start "rule__LiteralList__LitAssignment_0"
    // InternalFortXTrans.g:14168:1: rule__LiteralList__LitAssignment_0 : ( ruleLiteral ) ;
    public final void rule__LiteralList__LitAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:14172:1: ( ( ruleLiteral ) )
            // InternalFortXTrans.g:14173:2: ( ruleLiteral )
            {
            // InternalFortXTrans.g:14173:2: ( ruleLiteral )
            // InternalFortXTrans.g:14174:3: ruleLiteral
            {
             before(grammarAccess.getLiteralListAccess().getLitLiteralParserRuleCall_0_0()); 
            pushFollow(FOLLOW_2);
            ruleLiteral();

            state._fsp--;

             after(grammarAccess.getLiteralListAccess().getLitLiteralParserRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralList__LitAssignment_0"


    // $ANTLR start "rule__LiteralList__LitAssignment_1_1"
    // InternalFortXTrans.g:14183:1: rule__LiteralList__LitAssignment_1_1 : ( ruleLiteral ) ;
    public final void rule__LiteralList__LitAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:14187:1: ( ( ruleLiteral ) )
            // InternalFortXTrans.g:14188:2: ( ruleLiteral )
            {
            // InternalFortXTrans.g:14188:2: ( ruleLiteral )
            // InternalFortXTrans.g:14189:3: ruleLiteral
            {
             before(grammarAccess.getLiteralListAccess().getLitLiteralParserRuleCall_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleLiteral();

            state._fsp--;

             after(grammarAccess.getLiteralListAccess().getLitLiteralParserRuleCall_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralList__LitAssignment_1_1"


    // $ANTLR start "rule__Literal__ValueAssignment_0_1"
    // InternalFortXTrans.g:14198:1: rule__Literal__ValueAssignment_0_1 : ( RULE_INT ) ;
    public final void rule__Literal__ValueAssignment_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:14202:1: ( ( RULE_INT ) )
            // InternalFortXTrans.g:14203:2: ( RULE_INT )
            {
            // InternalFortXTrans.g:14203:2: ( RULE_INT )
            // InternalFortXTrans.g:14204:3: RULE_INT
            {
             before(grammarAccess.getLiteralAccess().getValueINTTerminalRuleCall_0_1_0()); 
            match(input,RULE_INT,FOLLOW_2); 
             after(grammarAccess.getLiteralAccess().getValueINTTerminalRuleCall_0_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Literal__ValueAssignment_0_1"


    // $ANTLR start "rule__Literal__ValueAssignment_1_1"
    // InternalFortXTrans.g:14213:1: rule__Literal__ValueAssignment_1_1 : ( RULE_FLOAT ) ;
    public final void rule__Literal__ValueAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:14217:1: ( ( RULE_FLOAT ) )
            // InternalFortXTrans.g:14218:2: ( RULE_FLOAT )
            {
            // InternalFortXTrans.g:14218:2: ( RULE_FLOAT )
            // InternalFortXTrans.g:14219:3: RULE_FLOAT
            {
             before(grammarAccess.getLiteralAccess().getValueFLOATTerminalRuleCall_1_1_0()); 
            match(input,RULE_FLOAT,FOLLOW_2); 
             after(grammarAccess.getLiteralAccess().getValueFLOATTerminalRuleCall_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Literal__ValueAssignment_1_1"


    // $ANTLR start "rule__Literal__ValueAssignment_2_1"
    // InternalFortXTrans.g:14228:1: rule__Literal__ValueAssignment_2_1 : ( RULE_STRING ) ;
    public final void rule__Literal__ValueAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:14232:1: ( ( RULE_STRING ) )
            // InternalFortXTrans.g:14233:2: ( RULE_STRING )
            {
            // InternalFortXTrans.g:14233:2: ( RULE_STRING )
            // InternalFortXTrans.g:14234:3: RULE_STRING
            {
             before(grammarAccess.getLiteralAccess().getValueSTRINGTerminalRuleCall_2_1_0()); 
            match(input,RULE_STRING,FOLLOW_2); 
             after(grammarAccess.getLiteralAccess().getValueSTRINGTerminalRuleCall_2_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Literal__ValueAssignment_2_1"


    // $ANTLR start "rule__Literal__ValueAssignment_3_1_0"
    // InternalFortXTrans.g:14243:1: rule__Literal__ValueAssignment_3_1_0 : ( ( 'true' ) ) ;
    public final void rule__Literal__ValueAssignment_3_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:14247:1: ( ( ( 'true' ) ) )
            // InternalFortXTrans.g:14248:2: ( ( 'true' ) )
            {
            // InternalFortXTrans.g:14248:2: ( ( 'true' ) )
            // InternalFortXTrans.g:14249:3: ( 'true' )
            {
             before(grammarAccess.getLiteralAccess().getValueTrueKeyword_3_1_0_0()); 
            // InternalFortXTrans.g:14250:3: ( 'true' )
            // InternalFortXTrans.g:14251:4: 'true'
            {
             before(grammarAccess.getLiteralAccess().getValueTrueKeyword_3_1_0_0()); 
            match(input,74,FOLLOW_2); 
             after(grammarAccess.getLiteralAccess().getValueTrueKeyword_3_1_0_0()); 

            }

             after(grammarAccess.getLiteralAccess().getValueTrueKeyword_3_1_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Literal__ValueAssignment_3_1_0"


    // $ANTLR start "rule__Literal__ValueAssignment_3_1_1"
    // InternalFortXTrans.g:14262:1: rule__Literal__ValueAssignment_3_1_1 : ( ( 'false' ) ) ;
    public final void rule__Literal__ValueAssignment_3_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:14266:1: ( ( ( 'false' ) ) )
            // InternalFortXTrans.g:14267:2: ( ( 'false' ) )
            {
            // InternalFortXTrans.g:14267:2: ( ( 'false' ) )
            // InternalFortXTrans.g:14268:3: ( 'false' )
            {
             before(grammarAccess.getLiteralAccess().getValueFalseKeyword_3_1_1_0()); 
            // InternalFortXTrans.g:14269:3: ( 'false' )
            // InternalFortXTrans.g:14270:4: 'false'
            {
             before(grammarAccess.getLiteralAccess().getValueFalseKeyword_3_1_1_0()); 
            match(input,75,FOLLOW_2); 
             after(grammarAccess.getLiteralAccess().getValueFalseKeyword_3_1_1_0()); 

            }

             after(grammarAccess.getLiteralAccess().getValueFalseKeyword_3_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Literal__ValueAssignment_3_1_1"


    // $ANTLR start "rule__LocalVarDecl__MutAssignment_0_0"
    // InternalFortXTrans.g:14281:1: rule__LocalVarDecl__MutAssignment_0_0 : ( ( 'var' ) ) ;
    public final void rule__LocalVarDecl__MutAssignment_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:14285:1: ( ( ( 'var' ) ) )
            // InternalFortXTrans.g:14286:2: ( ( 'var' ) )
            {
            // InternalFortXTrans.g:14286:2: ( ( 'var' ) )
            // InternalFortXTrans.g:14287:3: ( 'var' )
            {
             before(grammarAccess.getLocalVarDeclAccess().getMutVarKeyword_0_0_0()); 
            // InternalFortXTrans.g:14288:3: ( 'var' )
            // InternalFortXTrans.g:14289:4: 'var'
            {
             before(grammarAccess.getLocalVarDeclAccess().getMutVarKeyword_0_0_0()); 
            match(input,73,FOLLOW_2); 
             after(grammarAccess.getLocalVarDeclAccess().getMutVarKeyword_0_0_0()); 

            }

             after(grammarAccess.getLocalVarDeclAccess().getMutVarKeyword_0_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__MutAssignment_0_0"


    // $ANTLR start "rule__LocalVarDecl__VarsAssignment_0_1"
    // InternalFortXTrans.g:14300:1: rule__LocalVarDecl__VarsAssignment_0_1 : ( ruleNoNewlineVarWTypes ) ;
    public final void rule__LocalVarDecl__VarsAssignment_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:14304:1: ( ( ruleNoNewlineVarWTypes ) )
            // InternalFortXTrans.g:14305:2: ( ruleNoNewlineVarWTypes )
            {
            // InternalFortXTrans.g:14305:2: ( ruleNoNewlineVarWTypes )
            // InternalFortXTrans.g:14306:3: ruleNoNewlineVarWTypes
            {
             before(grammarAccess.getLocalVarDeclAccess().getVarsNoNewlineVarWTypesParserRuleCall_0_1_0()); 
            pushFollow(FOLLOW_2);
            ruleNoNewlineVarWTypes();

            state._fsp--;

             after(grammarAccess.getLocalVarDeclAccess().getVarsNoNewlineVarWTypesParserRuleCall_0_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__VarsAssignment_0_1"


    // $ANTLR start "rule__LocalVarDecl__InitAssignment_0_3"
    // InternalFortXTrans.g:14315:1: rule__LocalVarDecl__InitAssignment_0_3 : ( ruleExpr ) ;
    public final void rule__LocalVarDecl__InitAssignment_0_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:14319:1: ( ( ruleExpr ) )
            // InternalFortXTrans.g:14320:2: ( ruleExpr )
            {
            // InternalFortXTrans.g:14320:2: ( ruleExpr )
            // InternalFortXTrans.g:14321:3: ruleExpr
            {
             before(grammarAccess.getLocalVarDeclAccess().getInitExprParserRuleCall_0_3_0()); 
            pushFollow(FOLLOW_2);
            ruleExpr();

            state._fsp--;

             after(grammarAccess.getLocalVarDeclAccess().getInitExprParserRuleCall_0_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__InitAssignment_0_3"


    // $ANTLR start "rule__LocalVarDecl__IdtupAssignment_1_0"
    // InternalFortXTrans.g:14330:1: rule__LocalVarDecl__IdtupAssignment_1_0 : ( ruleQualified ) ;
    public final void rule__LocalVarDecl__IdtupAssignment_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:14334:1: ( ( ruleQualified ) )
            // InternalFortXTrans.g:14335:2: ( ruleQualified )
            {
            // InternalFortXTrans.g:14335:2: ( ruleQualified )
            // InternalFortXTrans.g:14336:3: ruleQualified
            {
             before(grammarAccess.getLocalVarDeclAccess().getIdtupQualifiedParserRuleCall_1_0_0()); 
            pushFollow(FOLLOW_2);
            ruleQualified();

            state._fsp--;

             after(grammarAccess.getLocalVarDeclAccess().getIdtupQualifiedParserRuleCall_1_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__IdtupAssignment_1_0"


    // $ANTLR start "rule__LocalVarDecl__InitAssignment_1_2"
    // InternalFortXTrans.g:14345:1: rule__LocalVarDecl__InitAssignment_1_2 : ( ruleExpr ) ;
    public final void rule__LocalVarDecl__InitAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:14349:1: ( ( ruleExpr ) )
            // InternalFortXTrans.g:14350:2: ( ruleExpr )
            {
            // InternalFortXTrans.g:14350:2: ( ruleExpr )
            // InternalFortXTrans.g:14351:3: ruleExpr
            {
             before(grammarAccess.getLocalVarDeclAccess().getInitExprParserRuleCall_1_2_0()); 
            pushFollow(FOLLOW_2);
            ruleExpr();

            state._fsp--;

             after(grammarAccess.getLocalVarDeclAccess().getInitExprParserRuleCall_1_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__InitAssignment_1_2"


    // $ANTLR start "rule__LocalVarDecl__MutAssignment_2_0"
    // InternalFortXTrans.g:14360:1: rule__LocalVarDecl__MutAssignment_2_0 : ( ( 'var' ) ) ;
    public final void rule__LocalVarDecl__MutAssignment_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:14364:1: ( ( ( 'var' ) ) )
            // InternalFortXTrans.g:14365:2: ( ( 'var' ) )
            {
            // InternalFortXTrans.g:14365:2: ( ( 'var' ) )
            // InternalFortXTrans.g:14366:3: ( 'var' )
            {
             before(grammarAccess.getLocalVarDeclAccess().getMutVarKeyword_2_0_0()); 
            // InternalFortXTrans.g:14367:3: ( 'var' )
            // InternalFortXTrans.g:14368:4: 'var'
            {
             before(grammarAccess.getLocalVarDeclAccess().getMutVarKeyword_2_0_0()); 
            match(input,73,FOLLOW_2); 
             after(grammarAccess.getLocalVarDeclAccess().getMutVarKeyword_2_0_0()); 

            }

             after(grammarAccess.getLocalVarDeclAccess().getMutVarKeyword_2_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__MutAssignment_2_0"


    // $ANTLR start "rule__LocalVarDecl__IdtupAssignment_2_1"
    // InternalFortXTrans.g:14379:1: rule__LocalVarDecl__IdtupAssignment_2_1 : ( ruleQualified ) ;
    public final void rule__LocalVarDecl__IdtupAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:14383:1: ( ( ruleQualified ) )
            // InternalFortXTrans.g:14384:2: ( ruleQualified )
            {
            // InternalFortXTrans.g:14384:2: ( ruleQualified )
            // InternalFortXTrans.g:14385:3: ruleQualified
            {
             before(grammarAccess.getLocalVarDeclAccess().getIdtupQualifiedParserRuleCall_2_1_0()); 
            pushFollow(FOLLOW_2);
            ruleQualified();

            state._fsp--;

             after(grammarAccess.getLocalVarDeclAccess().getIdtupQualifiedParserRuleCall_2_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__IdtupAssignment_2_1"


    // $ANTLR start "rule__LocalVarDecl__TypeAssignment_2_3"
    // InternalFortXTrans.g:14394:1: rule__LocalVarDecl__TypeAssignment_2_3 : ( ruleSimpleName ) ;
    public final void rule__LocalVarDecl__TypeAssignment_2_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:14398:1: ( ( ruleSimpleName ) )
            // InternalFortXTrans.g:14399:2: ( ruleSimpleName )
            {
            // InternalFortXTrans.g:14399:2: ( ruleSimpleName )
            // InternalFortXTrans.g:14400:3: ruleSimpleName
            {
             before(grammarAccess.getLocalVarDeclAccess().getTypeSimpleNameParserRuleCall_2_3_0()); 
            pushFollow(FOLLOW_2);
            ruleSimpleName();

            state._fsp--;

             after(grammarAccess.getLocalVarDeclAccess().getTypeSimpleNameParserRuleCall_2_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__TypeAssignment_2_3"


    // $ANTLR start "rule__LocalVarDecl__InitAssignment_2_6"
    // InternalFortXTrans.g:14409:1: rule__LocalVarDecl__InitAssignment_2_6 : ( ruleExpr ) ;
    public final void rule__LocalVarDecl__InitAssignment_2_6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:14413:1: ( ( ruleExpr ) )
            // InternalFortXTrans.g:14414:2: ( ruleExpr )
            {
            // InternalFortXTrans.g:14414:2: ( ruleExpr )
            // InternalFortXTrans.g:14415:3: ruleExpr
            {
             before(grammarAccess.getLocalVarDeclAccess().getInitExprParserRuleCall_2_6_0()); 
            pushFollow(FOLLOW_2);
            ruleExpr();

            state._fsp--;

             after(grammarAccess.getLocalVarDeclAccess().getInitExprParserRuleCall_2_6_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__InitAssignment_2_6"


    // $ANTLR start "rule__LocalVarDecl__MutAssignment_3_0"
    // InternalFortXTrans.g:14424:1: rule__LocalVarDecl__MutAssignment_3_0 : ( ( 'var' ) ) ;
    public final void rule__LocalVarDecl__MutAssignment_3_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:14428:1: ( ( ( 'var' ) ) )
            // InternalFortXTrans.g:14429:2: ( ( 'var' ) )
            {
            // InternalFortXTrans.g:14429:2: ( ( 'var' ) )
            // InternalFortXTrans.g:14430:3: ( 'var' )
            {
             before(grammarAccess.getLocalVarDeclAccess().getMutVarKeyword_3_0_0()); 
            // InternalFortXTrans.g:14431:3: ( 'var' )
            // InternalFortXTrans.g:14432:4: 'var'
            {
             before(grammarAccess.getLocalVarDeclAccess().getMutVarKeyword_3_0_0()); 
            match(input,73,FOLLOW_2); 
             after(grammarAccess.getLocalVarDeclAccess().getMutVarKeyword_3_0_0()); 

            }

             after(grammarAccess.getLocalVarDeclAccess().getMutVarKeyword_3_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__MutAssignment_3_0"


    // $ANTLR start "rule__LocalVarDecl__IdtupAssignment_3_1"
    // InternalFortXTrans.g:14443:1: rule__LocalVarDecl__IdtupAssignment_3_1 : ( ruleQualified ) ;
    public final void rule__LocalVarDecl__IdtupAssignment_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:14447:1: ( ( ruleQualified ) )
            // InternalFortXTrans.g:14448:2: ( ruleQualified )
            {
            // InternalFortXTrans.g:14448:2: ( ruleQualified )
            // InternalFortXTrans.g:14449:3: ruleQualified
            {
             before(grammarAccess.getLocalVarDeclAccess().getIdtupQualifiedParserRuleCall_3_1_0()); 
            pushFollow(FOLLOW_2);
            ruleQualified();

            state._fsp--;

             after(grammarAccess.getLocalVarDeclAccess().getIdtupQualifiedParserRuleCall_3_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__IdtupAssignment_3_1"


    // $ANTLR start "rule__LocalVarDecl__TuptypeAssignment_3_3"
    // InternalFortXTrans.g:14458:1: rule__LocalVarDecl__TuptypeAssignment_3_3 : ( ruleTupleType ) ;
    public final void rule__LocalVarDecl__TuptypeAssignment_3_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:14462:1: ( ( ruleTupleType ) )
            // InternalFortXTrans.g:14463:2: ( ruleTupleType )
            {
            // InternalFortXTrans.g:14463:2: ( ruleTupleType )
            // InternalFortXTrans.g:14464:3: ruleTupleType
            {
             before(grammarAccess.getLocalVarDeclAccess().getTuptypeTupleTypeParserRuleCall_3_3_0()); 
            pushFollow(FOLLOW_2);
            ruleTupleType();

            state._fsp--;

             after(grammarAccess.getLocalVarDeclAccess().getTuptypeTupleTypeParserRuleCall_3_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__TuptypeAssignment_3_3"


    // $ANTLR start "rule__LocalVarDecl__InitAssignment_3_5"
    // InternalFortXTrans.g:14473:1: rule__LocalVarDecl__InitAssignment_3_5 : ( ruleExpr ) ;
    public final void rule__LocalVarDecl__InitAssignment_3_5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:14477:1: ( ( ruleExpr ) )
            // InternalFortXTrans.g:14478:2: ( ruleExpr )
            {
            // InternalFortXTrans.g:14478:2: ( ruleExpr )
            // InternalFortXTrans.g:14479:3: ruleExpr
            {
             before(grammarAccess.getLocalVarDeclAccess().getInitExprParserRuleCall_3_5_0()); 
            pushFollow(FOLLOW_2);
            ruleExpr();

            state._fsp--;

             after(grammarAccess.getLocalVarDeclAccess().getInitExprParserRuleCall_3_5_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__InitAssignment_3_5"

    // Delegated rules


    protected DFA1 dfa1 = new DFA1(this);
    protected DFA6 dfa6 = new DFA6(this);
    protected DFA14 dfa14 = new DFA14(this);
    protected DFA17 dfa17 = new DFA17(this);
    protected DFA20 dfa20 = new DFA20(this);
    protected DFA21 dfa21 = new DFA21(this);
    protected DFA22 dfa22 = new DFA22(this);
    protected DFA28 dfa28 = new DFA28(this);
    protected DFA56 dfa56 = new DFA56(this);
    protected DFA86 dfa86 = new DFA86(this);
    static final String dfa_1s = "\133\uffff";
    static final String dfa_2s = "\1\1\132\uffff";
    static final String dfa_3s = "\1\5\1\uffff\4\5\1\4\10\5\1\43\1\5\1\4\1\5\1\uffff\1\4\1\5\2\4\1\5\1\uffff\1\5\1\43\1\5\1\4\1\uffff\1\5\1\43\1\4\1\5\1\35\1\5\1\43\1\5\1\35\1\4\1\uffff\1\5\1\43\1\5\1\4\1\5\1\35\1\5\1\43\2\4\1\5\1\35\1\5\1\uffff\1\4\1\35\2\4\1\5\1\35\1\4\1\5\1\35\2\5\1\35\1\4\1\uffff\3\4\1\5\1\43\2\5\1\43\1\5\1\4\1\35\1\4\1\35\1\5\1\uffff\1\4\1\5\1\43\1\5\1\4\1\35";
    static final String dfa_4s = "\1\111\1\uffff\1\111\3\101\1\72\1\41\1\5\4\101\1\41\1\5\1\72\1\41\1\43\1\42\1\uffff\1\43\1\5\1\43\1\72\1\5\1\uffff\1\5\1\43\1\5\1\43\1\uffff\1\5\2\43\1\5\1\43\1\5\1\72\1\5\1\42\1\43\1\uffff\1\5\1\43\1\5\1\43\1\5\1\43\1\5\2\43\1\42\1\41\1\35\1\5\1\uffff\1\43\1\42\1\43\1\42\1\5\1\42\1\4\1\5\1\42\2\5\2\42\1\uffff\2\43\1\42\1\5\1\43\2\5\1\43\1\5\1\43\1\42\1\43\1\42\1\5\1\uffff\1\43\1\5\1\43\1\5\1\43\1\42";
    static final String dfa_5s = "\1\uffff\1\2\21\uffff\1\1\5\uffff\1\1\4\uffff\1\1\12\uffff\1\1\15\uffff\1\1\15\uffff\1\1\16\uffff\1\1\6\uffff";
    static final String dfa_6s = "\133\uffff}>";
    static final String[] dfa_7s = {
            "\1\6\24\uffff\1\1\6\uffff\1\10\34\uffff\1\2\1\3\1\4\1\5\7\uffff\1\7",
            "",
            "\1\6\33\uffff\1\10\34\uffff\1\11\1\12\1\13\1\14\7\uffff\1\7",
            "\1\15\70\uffff\1\11\1\12\1\13\1\14",
            "\1\15\70\uffff\1\11\1\12\1\13\1\14",
            "\1\15\70\uffff\1\11\1\12\1\13\1\14",
            "\1\17\1\21\30\uffff\1\16\2\uffff\1\22\1\uffff\1\20\26\uffff\1\23",
            "\1\24\33\uffff\1\25",
            "\1\26",
            "\1\15\70\uffff\1\11\1\12\1\13\1\14",
            "\1\15\70\uffff\1\11\1\12\1\13\1\14",
            "\1\15\70\uffff\1\11\1\12\1\13\1\14",
            "\1\15\70\uffff\1\11\1\12\1\13\1\14",
            "\1\21\33\uffff\1\22",
            "\1\27",
            "\1\20\26\uffff\1\23",
            "\1\31\33\uffff\1\30",
            "\1\33\31\uffff\1\32\4\uffff\1\34",
            "\1\35\34\uffff\1\36",
            "",
            "\1\40\31\uffff\1\37\4\uffff\1\20",
            "\1\41",
            "\1\43\30\uffff\1\44\1\42\3\uffff\1\45\1\46",
            "\1\17\31\uffff\1\16\4\uffff\1\20\26\uffff\1\23",
            "\1\47",
            "",
            "\1\50",
            "\1\34",
            "\1\51",
            "\1\53\31\uffff\1\52\4\uffff\1\54",
            "",
            "\1\55",
            "\1\20",
            "\1\57\30\uffff\1\60\1\56\3\uffff\1\61\1\46",
            "\1\62",
            "\1\44\4\uffff\1\45\1\46",
            "\1\63",
            "\1\64\26\uffff\1\23",
            "\1\65",
            "\1\66\4\uffff\1\67",
            "\1\33\31\uffff\1\32\4\uffff\1\34",
            "",
            "\1\70",
            "\1\54",
            "\1\71",
            "\1\40\31\uffff\1\37\4\uffff\1\20",
            "\1\72",
            "\1\60\4\uffff\1\61\1\46",
            "\1\73",
            "\1\64",
            "\1\43\30\uffff\1\44\1\42\3\uffff\1\45\1\46",
            "\1\75\30\uffff\1\44\1\74\3\uffff\1\45",
            "\1\76\33\uffff\1\30",
            "\1\77",
            "\1\100",
            "",
            "\1\53\31\uffff\1\52\4\uffff\1\54",
            "\1\101\4\uffff\1\36",
            "\1\57\30\uffff\1\60\1\56\3\uffff\1\61\1\46",
            "\1\103\30\uffff\1\60\1\102\3\uffff\1\61",
            "\1\104",
            "\1\44\4\uffff\1\45",
            "\1\105",
            "\1\106",
            "\1\66\4\uffff\1\67",
            "\1\107",
            "\1\110",
            "\1\60\4\uffff\1\61",
            "\1\75\30\uffff\1\44\1\74\3\uffff\1\45",
            "",
            "\1\112\31\uffff\1\111\4\uffff\1\113",
            "\1\115\31\uffff\1\114\4\uffff\1\116",
            "\1\103\30\uffff\1\60\1\102\3\uffff\1\61",
            "\1\117",
            "\1\113",
            "\1\120",
            "\1\121",
            "\1\116",
            "\1\122",
            "\1\112\31\uffff\1\111\4\uffff\1\113",
            "\1\123\4\uffff\1\124",
            "\1\115\31\uffff\1\114\4\uffff\1\116",
            "\1\101\4\uffff\1\36",
            "\1\125",
            "",
            "\1\127\31\uffff\1\126\4\uffff\1\130",
            "\1\131",
            "\1\130",
            "\1\132",
            "\1\127\31\uffff\1\126\4\uffff\1\130",
            "\1\123\4\uffff\1\124"
    };

    static final short[] dfa_1 = DFA.unpackEncodedString(dfa_1s);
    static final short[] dfa_2 = DFA.unpackEncodedString(dfa_2s);
    static final char[] dfa_3 = DFA.unpackEncodedStringToUnsignedChars(dfa_3s);
    static final char[] dfa_4 = DFA.unpackEncodedStringToUnsignedChars(dfa_4s);
    static final short[] dfa_5 = DFA.unpackEncodedString(dfa_5s);
    static final short[] dfa_6 = DFA.unpackEncodedString(dfa_6s);
    static final short[][] dfa_7 = unpackEncodedStringArray(dfa_7s);

    class DFA1 extends DFA {

        public DFA1(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 1;
            this.eot = dfa_1;
            this.eof = dfa_2;
            this.min = dfa_3;
            this.max = dfa_4;
            this.accept = dfa_5;
            this.special = dfa_6;
            this.transition = dfa_7;
        }
        public String getDescription() {
            return "()* loopback of 425:4: ( rule__Decls__DeclsAssignment )*";
        }
    }
    static final String dfa_8s = "\12\uffff";
    static final String dfa_9s = "\1\uffff\1\4\1\uffff\1\4\1\uffff\1\4\4\uffff";
    static final String dfa_10s = "\1\5\1\4\1\5\1\32\1\uffff\2\4\1\37\2\uffff";
    static final String dfa_11s = "\1\5\1\74\1\37\1\74\1\uffff\1\74\1\5\1\37\2\uffff";
    static final String dfa_12s = "\4\uffff\1\3\3\uffff\1\1\1\2";
    static final String dfa_13s = "\12\uffff}>";
    static final String[] dfa_14s = {
            "\1\1",
            "\1\3\25\uffff\1\4\3\uffff\1\2\1\uffff\1\4\32\uffff\2\4",
            "\1\5\31\uffff\1\6",
            "\1\4\3\uffff\1\7\1\uffff\1\4\32\uffff\2\4",
            "",
            "\1\3\25\uffff\1\4\3\uffff\1\2\1\uffff\1\4\32\uffff\2\4",
            "\1\10\1\11",
            "\1\6",
            "",
            ""
    };

    static final short[] dfa_8 = DFA.unpackEncodedString(dfa_8s);
    static final short[] dfa_9 = DFA.unpackEncodedString(dfa_9s);
    static final char[] dfa_10 = DFA.unpackEncodedStringToUnsignedChars(dfa_10s);
    static final char[] dfa_11 = DFA.unpackEncodedStringToUnsignedChars(dfa_11s);
    static final short[] dfa_12 = DFA.unpackEncodedString(dfa_12s);
    static final short[] dfa_13 = DFA.unpackEncodedString(dfa_13s);
    static final short[][] dfa_14 = unpackEncodedStringArray(dfa_14s);

    class DFA6 extends DFA {

        public DFA6(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 6;
            this.eot = dfa_8;
            this.eof = dfa_9;
            this.min = dfa_10;
            this.max = dfa_11;
            this.accept = dfa_12;
            this.special = dfa_13;
            this.transition = dfa_14;
        }
        public String getDescription() {
            return "1629:1: rule__ImportedNames__Alternatives : ( ( ( rule__ImportedNames__Group_0__0 ) ) | ( ( rule__ImportedNames__Group_1__0 ) ) | ( ( rule__ImportedNames__Group_2__0 ) ) );";
        }
    }
    static final String dfa_15s = "\24\uffff";
    static final String dfa_16s = "\4\uffff\1\5\4\uffff\1\5\3\uffff\2\5\5\uffff";
    static final String dfa_17s = "\1\5\1\uffff\1\5\1\uffff\1\4\2\uffff\1\4\3\5\1\15\2\5\3\4\1\5\1\15\1\4";
    static final String dfa_18s = "\1\113\1\uffff\1\113\1\uffff\1\113\2\uffff\1\102\1\5\1\113\1\5\1\102\3\113\2\102\1\5\2\102";
    static final String dfa_19s = "\1\uffff\1\1\1\uffff\1\3\1\uffff\1\4\1\2\15\uffff";
    static final String dfa_20s = "\24\uffff}>";
    static final String[] dfa_21s = {
            "\1\4\3\5\30\uffff\1\2\6\uffff\1\5\11\uffff\1\5\6\uffff\1\1\6\uffff\1\1\2\uffff\4\1\1\uffff\1\1\1\3\2\5",
            "",
            "\1\7\3\5\30\uffff\1\5\2\uffff\1\6\3\uffff\1\5\11\uffff\1\5\27\uffff\2\5",
            "",
            "\1\11\4\5\4\uffff\14\5\1\uffff\1\5\3\uffff\1\10\1\uffff\3\5\1\3\1\uffff\7\5\3\uffff\1\5\1\uffff\2\5\1\uffff\2\5\2\uffff\2\5\1\3\3\uffff\11\5\1\uffff\4\5",
            "",
            "",
            "\1\13\10\uffff\14\5\4\uffff\1\14\1\12\1\uffff\2\5\1\15\1\3\1\uffff\7\5\3\uffff\1\5\1\uffff\1\5\20\uffff\1\5",
            "\1\16",
            "\4\5\4\uffff\14\5\1\uffff\1\5\5\uffff\3\5\1\3\1\uffff\7\5\3\uffff\1\5\1\uffff\2\5\1\uffff\2\5\2\uffff\2\5\1\3\3\uffff\11\5\1\uffff\4\5",
            "\1\17",
            "\14\5\4\uffff\1\14\2\uffff\2\5\1\15\1\3\1\uffff\7\5\3\uffff\1\5\1\uffff\1\5\20\uffff\1\5",
            "\1\20\3\5\30\uffff\1\5\6\uffff\1\5\11\uffff\1\5\27\uffff\2\5",
            "\4\5\4\uffff\14\5\1\uffff\1\5\5\uffff\3\5\1\3\1\uffff\7\5\3\uffff\1\5\1\uffff\2\5\1\uffff\2\5\2\uffff\2\5\1\3\3\uffff\11\5\1\uffff\4\5",
            "\1\11\4\5\4\uffff\14\5\1\uffff\1\5\3\uffff\1\10\1\uffff\3\5\1\3\1\uffff\7\5\3\uffff\1\5\1\uffff\2\5\1\uffff\2\5\2\uffff\2\5\1\3\3\uffff\11\5\1\uffff\4\5",
            "\1\13\10\uffff\14\5\4\uffff\1\14\1\12\1\uffff\2\5\1\15\1\3\1\uffff\7\5\3\uffff\1\5\1\uffff\1\5\20\uffff\1\5",
            "\1\22\10\uffff\14\5\4\uffff\1\14\1\21\1\uffff\2\5\1\15\2\uffff\7\5\3\uffff\1\5\1\uffff\1\5\20\uffff\1\5",
            "\1\23",
            "\14\5\4\uffff\1\14\2\uffff\2\5\1\15\2\uffff\7\5\3\uffff\1\5\1\uffff\1\5\20\uffff\1\5",
            "\1\22\10\uffff\14\5\4\uffff\1\14\1\21\1\uffff\2\5\1\15\2\uffff\7\5\3\uffff\1\5\1\uffff\1\5\20\uffff\1\5"
    };

    static final short[] dfa_15 = DFA.unpackEncodedString(dfa_15s);
    static final short[] dfa_16 = DFA.unpackEncodedString(dfa_16s);
    static final char[] dfa_17 = DFA.unpackEncodedStringToUnsignedChars(dfa_17s);
    static final char[] dfa_18 = DFA.unpackEncodedStringToUnsignedChars(dfa_18s);
    static final short[] dfa_19 = DFA.unpackEncodedString(dfa_19s);
    static final short[] dfa_20 = DFA.unpackEncodedString(dfa_20s);
    static final short[][] dfa_21 = unpackEncodedStringArray(dfa_21s);

    class DFA14 extends DFA {

        public DFA14(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 14;
            this.eot = dfa_15;
            this.eof = dfa_16;
            this.min = dfa_17;
            this.max = dfa_18;
            this.accept = dfa_19;
            this.special = dfa_20;
            this.transition = dfa_21;
        }
        public String getDescription() {
            return "1815:1: rule__Stmnts__Alternatives : ( ( ( rule__Stmnts__FrontAssignment_0 ) ) | ( ( rule__Stmnts__Group_1__0 ) ) | ( ( rule__Stmnts__LocVarAssignment_2 ) ) | ( ( rule__Stmnts__ExpAssignment_3 ) ) );";
        }
    }
    static final String dfa_22s = "\34\uffff";
    static final String dfa_23s = "\1\5\1\uffff\1\5\2\uffff\5\15\1\uffff\1\4\1\5\1\uffff\1\5\1\15\1\5\1\uffff\5\15\2\4\1\5\1\15\1\4";
    static final String dfa_24s = "\1\113\1\uffff\1\113\2\uffff\5\102\1\uffff\1\102\1\113\1\uffff\1\5\1\102\1\113\1\uffff\7\102\1\5\2\102";
    static final String dfa_25s = "\1\uffff\1\1\1\uffff\1\2\1\3\5\uffff\1\4\2\uffff\1\1\3\uffff\1\1\12\uffff";
    static final String dfa_26s = "\34\uffff}>";
    static final String[] dfa_27s = {
            "\4\1\30\uffff\1\2\6\uffff\1\4\11\uffff\1\3\27\uffff\2\1",
            "",
            "\1\13\1\5\1\6\1\7\30\uffff\1\12\6\uffff\1\12\11\uffff\1\12\27\uffff\1\10\1\11",
            "",
            "",
            "\14\12\4\uffff\1\14\2\uffff\2\12\1\15\2\uffff\7\12\3\uffff\1\12\1\uffff\1\12\20\uffff\1\12",
            "\14\12\4\uffff\1\14\2\uffff\2\12\1\15\2\uffff\7\12\3\uffff\1\12\1\uffff\1\12\20\uffff\1\12",
            "\14\12\4\uffff\1\14\2\uffff\2\12\1\15\2\uffff\7\12\3\uffff\1\12\1\uffff\1\12\20\uffff\1\12",
            "\14\12\4\uffff\1\14\2\uffff\2\12\1\15\2\uffff\7\12\3\uffff\1\12\1\uffff\1\12\20\uffff\1\12",
            "\14\12\4\uffff\1\14\2\uffff\2\12\1\15\2\uffff\7\12\3\uffff\1\12\1\uffff\1\12\20\uffff\1\12",
            "",
            "\1\17\10\uffff\14\12\4\uffff\1\20\1\16\1\uffff\2\12\1\21\2\uffff\7\12\3\uffff\1\12\1\uffff\1\12\20\uffff\1\12",
            "\1\12\1\22\1\23\1\24\30\uffff\1\12\6\uffff\1\12\11\uffff\1\12\27\uffff\1\25\1\26",
            "",
            "\1\27",
            "\14\12\4\uffff\1\20\2\uffff\2\12\1\21\2\uffff\7\12\3\uffff\1\12\1\uffff\1\12\20\uffff\1\12",
            "\1\30\3\12\30\uffff\1\12\6\uffff\1\12\11\uffff\1\12\27\uffff\2\12",
            "",
            "\14\12\4\uffff\1\14\2\uffff\2\12\1\15\2\uffff\7\12\3\uffff\1\12\1\uffff\1\12\20\uffff\1\12",
            "\14\12\4\uffff\1\14\2\uffff\2\12\1\15\2\uffff\7\12\3\uffff\1\12\1\uffff\1\12\20\uffff\1\12",
            "\14\12\4\uffff\1\14\2\uffff\2\12\1\15\2\uffff\7\12\3\uffff\1\12\1\uffff\1\12\20\uffff\1\12",
            "\14\12\4\uffff\1\14\2\uffff\2\12\1\15\2\uffff\7\12\3\uffff\1\12\1\uffff\1\12\20\uffff\1\12",
            "\14\12\4\uffff\1\14\2\uffff\2\12\1\15\2\uffff\7\12\3\uffff\1\12\1\uffff\1\12\20\uffff\1\12",
            "\1\17\10\uffff\14\12\4\uffff\1\20\1\16\1\uffff\2\12\1\21\2\uffff\7\12\3\uffff\1\12\1\uffff\1\12\20\uffff\1\12",
            "\1\32\10\uffff\14\12\4\uffff\1\20\1\31\1\uffff\2\12\1\21\2\uffff\7\12\3\uffff\1\12\1\uffff\1\12\20\uffff\1\12",
            "\1\33",
            "\14\12\4\uffff\1\20\2\uffff\2\12\1\21\2\uffff\7\12\3\uffff\1\12\1\uffff\1\12\20\uffff\1\12",
            "\1\32\10\uffff\14\12\4\uffff\1\20\1\31\1\uffff\2\12\1\21\2\uffff\7\12\3\uffff\1\12\1\uffff\1\12\20\uffff\1\12"
    };

    static final short[] dfa_22 = DFA.unpackEncodedString(dfa_22s);
    static final char[] dfa_23 = DFA.unpackEncodedStringToUnsignedChars(dfa_23s);
    static final char[] dfa_24 = DFA.unpackEncodedStringToUnsignedChars(dfa_24s);
    static final short[] dfa_25 = DFA.unpackEncodedString(dfa_25s);
    static final short[] dfa_26 = DFA.unpackEncodedString(dfa_26s);
    static final short[][] dfa_27 = unpackEncodedStringArray(dfa_27s);

    class DFA17 extends DFA {

        public DFA17(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 17;
            this.eot = dfa_22;
            this.eof = dfa_22;
            this.min = dfa_23;
            this.max = dfa_24;
            this.accept = dfa_25;
            this.special = dfa_26;
            this.transition = dfa_27;
        }
        public String getDescription() {
            return "1938:1: rule__Primary__Alternatives : ( ( ( rule__Primary__Group_0__0 ) ) | ( ( rule__Primary__Group_1__0 ) ) | ( ( rule__Primary__Group_2__0 ) ) | ( ( rule__Primary__Group_3__0 ) ) );";
        }
    }
    static final String dfa_28s = "\23\uffff";
    static final String dfa_29s = "\1\5\1\4\2\5\1\66\1\5\2\4\2\uffff\1\5\1\35\1\5\1\66\2\4\1\5\1\35\1\4";
    static final String dfa_30s = "\1\41\1\66\2\5\1\66\1\113\1\42\1\66\2\uffff\1\5\1\42\1\5\1\66\2\42\1\5\2\42";
    static final String dfa_31s = "\10\uffff\1\2\1\1\11\uffff";
    static final String dfa_32s = "\23\uffff}>";
    static final String[] dfa_33s = {
            "\1\1\33\uffff\1\2",
            "\1\4\31\uffff\1\3\27\uffff\1\5",
            "\1\6",
            "\1\7",
            "\1\5",
            "\4\11\30\uffff\1\11\6\uffff\1\11\11\uffff\1\11\24\uffff\1\10\2\uffff\2\11",
            "\1\13\30\uffff\1\14\1\12\3\uffff\1\15",
            "\1\4\31\uffff\1\3\27\uffff\1\5",
            "",
            "",
            "\1\16",
            "\1\14\4\uffff\1\15",
            "\1\17",
            "\1\5",
            "\1\13\30\uffff\1\14\1\12\3\uffff\1\15",
            "\1\21\30\uffff\1\14\1\20\3\uffff\1\15",
            "\1\22",
            "\1\14\4\uffff\1\15",
            "\1\21\30\uffff\1\14\1\20\3\uffff\1\15"
    };

    static final short[] dfa_28 = DFA.unpackEncodedString(dfa_28s);
    static final char[] dfa_29 = DFA.unpackEncodedStringToUnsignedChars(dfa_29s);
    static final char[] dfa_30 = DFA.unpackEncodedStringToUnsignedChars(dfa_30s);
    static final short[] dfa_31 = DFA.unpackEncodedString(dfa_31s);
    static final short[] dfa_32 = DFA.unpackEncodedString(dfa_32s);
    static final short[][] dfa_33 = unpackEncodedStringArray(dfa_33s);

    class DFA20 extends DFA {

        public DFA20(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 20;
            this.eot = dfa_28;
            this.eof = dfa_28;
            this.min = dfa_29;
            this.max = dfa_30;
            this.accept = dfa_31;
            this.special = dfa_32;
            this.transition = dfa_33;
        }
        public String getDescription() {
            return "2031:1: rule__Binding__Alternatives : ( ( ( rule__Binding__Group_0__0 ) ) | ( ( rule__Binding__Group_1__0 ) ) );";
        }
    }
    static final String dfa_34s = "\22\uffff";
    static final String dfa_35s = "\1\uffff\1\3\3\uffff\1\3\2\uffff\1\3\3\uffff\1\3\5\uffff";
    static final String dfa_36s = "\1\5\1\4\1\5\1\uffff\1\5\1\15\1\uffff\2\4\1\5\1\15\1\5\1\15\2\4\1\5\1\15\1\4";
    static final String dfa_37s = "\1\113\1\110\1\113\1\uffff\1\5\1\110\1\uffff\1\102\1\110\1\5\1\102\1\113\1\110\2\102\1\5\2\102";
    static final String dfa_38s = "\3\uffff\1\2\2\uffff\1\1\13\uffff";
    static final String dfa_39s = "\22\uffff}>";
    static final String[] dfa_40s = {
            "\1\1\3\3\30\uffff\1\2\6\uffff\1\3\11\uffff\1\3\27\uffff\2\3",
            "\1\5\10\uffff\14\3\4\uffff\1\3\1\4\1\uffff\2\3\3\uffff\7\3\3\uffff\1\3\1\uffff\1\3\4\uffff\1\6\2\uffff\1\3\6\uffff\1\3\1\uffff\1\3\5\uffff\1\3",
            "\1\7\3\3\30\uffff\1\3\6\uffff\1\3\11\uffff\1\3\27\uffff\2\3",
            "",
            "\1\10",
            "\14\3\4\uffff\1\3\2\uffff\2\3\3\uffff\7\3\3\uffff\1\3\1\uffff\1\3\4\uffff\1\6\2\uffff\1\3\6\uffff\1\3\1\uffff\1\3\5\uffff\1\3",
            "",
            "\1\12\10\uffff\14\3\4\uffff\1\13\1\11\1\uffff\2\3\1\14\2\uffff\7\3\3\uffff\1\3\1\uffff\1\3\20\uffff\1\3",
            "\1\5\10\uffff\14\3\4\uffff\1\3\1\4\1\uffff\2\3\3\uffff\7\3\3\uffff\1\3\1\uffff\1\3\4\uffff\1\6\2\uffff\1\3\6\uffff\1\3\1\uffff\1\3\5\uffff\1\3",
            "\1\15",
            "\14\3\4\uffff\1\13\2\uffff\2\3\1\14\2\uffff\7\3\3\uffff\1\3\1\uffff\1\3\20\uffff\1\3",
            "\1\16\3\3\30\uffff\1\3\6\uffff\1\3\11\uffff\1\3\27\uffff\2\3",
            "\14\3\4\uffff\1\3\2\uffff\2\3\3\uffff\7\3\3\uffff\1\3\1\uffff\1\3\4\uffff\1\6\2\uffff\1\3\6\uffff\1\3\1\uffff\1\3\5\uffff\1\3",
            "\1\12\10\uffff\14\3\4\uffff\1\13\1\11\1\uffff\2\3\1\14\2\uffff\7\3\3\uffff\1\3\1\uffff\1\3\20\uffff\1\3",
            "\1\20\10\uffff\14\3\4\uffff\1\13\1\17\1\uffff\2\3\1\14\2\uffff\7\3\3\uffff\1\3\1\uffff\1\3\20\uffff\1\3",
            "\1\21",
            "\14\3\4\uffff\1\13\2\uffff\2\3\1\14\2\uffff\7\3\3\uffff\1\3\1\uffff\1\3\20\uffff\1\3",
            "\1\20\10\uffff\14\3\4\uffff\1\13\1\17\1\uffff\2\3\1\14\2\uffff\7\3\3\uffff\1\3\1\uffff\1\3\20\uffff\1\3"
    };

    static final short[] dfa_34 = DFA.unpackEncodedString(dfa_34s);
    static final short[] dfa_35 = DFA.unpackEncodedString(dfa_35s);
    static final char[] dfa_36 = DFA.unpackEncodedStringToUnsignedChars(dfa_36s);
    static final char[] dfa_37 = DFA.unpackEncodedStringToUnsignedChars(dfa_37s);
    static final short[] dfa_38 = DFA.unpackEncodedString(dfa_38s);
    static final short[] dfa_39 = DFA.unpackEncodedString(dfa_39s);
    static final short[][] dfa_40 = unpackEncodedStringArray(dfa_40s);

    class DFA21 extends DFA {

        public DFA21(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 21;
            this.eot = dfa_34;
            this.eof = dfa_35;
            this.min = dfa_36;
            this.max = dfa_37;
            this.accept = dfa_38;
            this.special = dfa_39;
            this.transition = dfa_40;
        }
        public String getDescription() {
            return "2052:1: rule__GenClause__Alternatives : ( ( ( rule__GenClause__BindingAssignment_0 ) ) | ( ( rule__GenClause__ExprAssignment_1 ) ) );";
        }
    }
    static final String dfa_41s = "\50\uffff";
    static final String dfa_42s = "\20\uffff\1\24\27\uffff";
    static final String dfa_43s = "\3\5\1\4\1\5\1\4\2\5\1\43\1\uffff\1\5\1\4\1\5\1\43\3\4\1\uffff\1\5\1\35\1\uffff\1\5\1\43\1\4\1\5\1\35\1\5\1\43\1\uffff\2\4\1\5\2\4\1\5\1\35\1\5\1\35\2\4";
    static final String dfa_44s = "\2\111\1\41\1\72\1\5\1\43\2\5\1\72\1\uffff\1\41\1\43\1\5\2\43\1\72\1\111\1\uffff\1\5\1\43\1\uffff\1\5\1\72\1\43\1\5\1\43\1\5\1\43\1\uffff\1\43\1\42\1\41\1\43\1\42\1\5\1\42\1\5\3\42";
    static final String dfa_45s = "\11\uffff\1\2\7\uffff\1\4\2\uffff\1\1\7\uffff\1\3\13\uffff";
    static final String dfa_46s = "\50\uffff}>";
    static final String[] dfa_47s = {
            "\1\3\33\uffff\1\4\34\uffff\1\1\12\uffff\1\2",
            "\1\3\33\uffff\1\4\47\uffff\1\2",
            "\1\5\33\uffff\1\6",
            "\1\10\31\uffff\1\7\4\uffff\1\12\26\uffff\1\11",
            "\1\13",
            "\1\15\31\uffff\1\14\4\uffff\1\12",
            "\1\16",
            "\1\17",
            "\1\12\26\uffff\1\11",
            "",
            "\1\20\33\uffff\1\21",
            "\1\23\30\uffff\1\25\1\22\3\uffff\1\26\1\24",
            "\1\27",
            "\1\12",
            "\1\31\30\uffff\1\32\1\30\3\uffff\1\33\1\24",
            "\1\10\31\uffff\1\7\4\uffff\1\12\26\uffff\1\11",
            "\1\34\1\24\24\uffff\1\24\6\uffff\1\24\15\uffff\1\24\12\uffff\1\24\3\uffff\4\24\7\uffff\1\24",
            "",
            "\1\35",
            "\1\25\4\uffff\1\26\1\24",
            "",
            "\1\36",
            "\1\37\26\uffff\1\11",
            "\1\15\31\uffff\1\14\4\uffff\1\12",
            "\1\40",
            "\1\32\4\uffff\1\33\1\24",
            "\1\41",
            "\1\37",
            "",
            "\1\23\30\uffff\1\25\1\22\3\uffff\1\26\1\24",
            "\1\43\30\uffff\1\25\1\42\3\uffff\1\26",
            "\1\34\33\uffff\1\21",
            "\1\31\30\uffff\1\32\1\30\3\uffff\1\33\1\24",
            "\1\45\30\uffff\1\32\1\44\3\uffff\1\33",
            "\1\46",
            "\1\25\4\uffff\1\26",
            "\1\47",
            "\1\32\4\uffff\1\33",
            "\1\43\30\uffff\1\25\1\42\3\uffff\1\26",
            "\1\45\30\uffff\1\32\1\44\3\uffff\1\33"
    };

    static final short[] dfa_41 = DFA.unpackEncodedString(dfa_41s);
    static final short[] dfa_42 = DFA.unpackEncodedString(dfa_42s);
    static final char[] dfa_43 = DFA.unpackEncodedStringToUnsignedChars(dfa_43s);
    static final char[] dfa_44 = DFA.unpackEncodedStringToUnsignedChars(dfa_44s);
    static final short[] dfa_45 = DFA.unpackEncodedString(dfa_45s);
    static final short[] dfa_46 = DFA.unpackEncodedString(dfa_46s);
    static final short[][] dfa_47 = unpackEncodedStringArray(dfa_47s);

    class DFA22 extends DFA {

        public DFA22(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 22;
            this.eot = dfa_41;
            this.eof = dfa_42;
            this.min = dfa_43;
            this.max = dfa_44;
            this.accept = dfa_45;
            this.special = dfa_46;
            this.transition = dfa_47;
        }
        public String getDescription() {
            return "2073:1: rule__FieldDecl__Alternatives : ( ( ( rule__FieldDecl__Group_0__0 ) ) | ( ( rule__FieldDecl__Group_1__0 ) ) | ( ( rule__FieldDecl__Group_2__0 ) ) | ( ( rule__FieldDecl__Group_3__0 ) ) );";
        }
    }
    static final String dfa_48s = "\47\uffff";
    static final String dfa_49s = "\2\5\1\4\1\5\1\4\2\5\1\43\1\uffff\1\5\1\4\1\5\1\43\3\4\1\uffff\1\5\1\35\1\5\1\43\1\uffff\1\4\1\5\1\35\1\5\1\43\1\uffff\2\4\1\5\2\4\1\5\1\35\1\5\1\35\2\4";
    static final String dfa_50s = "\1\111\1\41\1\72\1\5\1\43\2\5\1\72\1\uffff\1\41\1\43\1\5\2\43\2\72\1\uffff\1\5\1\43\1\5\1\72\1\uffff\1\43\1\5\1\43\1\5\1\43\1\uffff\1\43\1\42\1\41\1\43\1\42\1\5\1\42\1\5\3\42";
    static final String dfa_51s = "\10\uffff\1\2\7\uffff\1\4\4\uffff\1\1\5\uffff\1\3\13\uffff";
    static final String dfa_52s = "\47\uffff}>";
    static final String[] dfa_53s = {
            "\1\2\33\uffff\1\3\47\uffff\1\1",
            "\1\4\33\uffff\1\5",
            "\1\7\31\uffff\1\6\4\uffff\1\11\26\uffff\1\10",
            "\1\12",
            "\1\14\31\uffff\1\13\4\uffff\1\11",
            "\1\15",
            "\1\16",
            "\1\11\26\uffff\1\10",
            "",
            "\1\17\33\uffff\1\20",
            "\1\22\30\uffff\1\23\1\21\3\uffff\1\24\1\25",
            "\1\26",
            "\1\11",
            "\1\30\30\uffff\1\31\1\27\3\uffff\1\32\1\25",
            "\1\7\31\uffff\1\6\4\uffff\1\11\26\uffff\1\10",
            "\1\33\52\uffff\1\25\12\uffff\1\25",
            "",
            "\1\34",
            "\1\23\4\uffff\1\24\1\25",
            "\1\35",
            "\1\36\26\uffff\1\10",
            "",
            "\1\14\31\uffff\1\13\4\uffff\1\11",
            "\1\37",
            "\1\31\4\uffff\1\32\1\25",
            "\1\40",
            "\1\36",
            "",
            "\1\22\30\uffff\1\23\1\21\3\uffff\1\24\1\25",
            "\1\42\30\uffff\1\23\1\41\3\uffff\1\24",
            "\1\33\33\uffff\1\20",
            "\1\30\30\uffff\1\31\1\27\3\uffff\1\32\1\25",
            "\1\44\30\uffff\1\31\1\43\3\uffff\1\32",
            "\1\45",
            "\1\23\4\uffff\1\24",
            "\1\46",
            "\1\31\4\uffff\1\32",
            "\1\42\30\uffff\1\23\1\41\3\uffff\1\24",
            "\1\44\30\uffff\1\31\1\43\3\uffff\1\32"
    };

    static final short[] dfa_48 = DFA.unpackEncodedString(dfa_48s);
    static final char[] dfa_49 = DFA.unpackEncodedStringToUnsignedChars(dfa_49s);
    static final char[] dfa_50 = DFA.unpackEncodedStringToUnsignedChars(dfa_50s);
    static final short[] dfa_51 = DFA.unpackEncodedString(dfa_51s);
    static final short[] dfa_52 = DFA.unpackEncodedString(dfa_52s);
    static final short[][] dfa_53 = unpackEncodedStringArray(dfa_53s);

    class DFA28 extends DFA {

        public DFA28(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 28;
            this.eot = dfa_48;
            this.eof = dfa_48;
            this.min = dfa_49;
            this.max = dfa_50;
            this.accept = dfa_51;
            this.special = dfa_52;
            this.transition = dfa_53;
        }
        public String getDescription() {
            return "2223:1: rule__LocalVarDecl__Alternatives : ( ( ( rule__LocalVarDecl__Group_0__0 ) ) | ( ( rule__LocalVarDecl__Group_1__0 ) ) | ( ( rule__LocalVarDecl__Group_2__0 ) ) | ( ( rule__LocalVarDecl__Group_3__0 ) ) );";
        }
    }
    static final String dfa_54s = "\1\1\11\uffff";
    static final String dfa_55s = "\1\5\11\uffff";
    static final String dfa_56s = "\1\113\11\uffff";
    static final String dfa_57s = "\1\uffff\1\2\10\1";
    static final String[] dfa_58s = {
            "\4\1\4\uffff\4\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\uffff\1\1\2\uffff\1\1\2\uffff\3\1\1\uffff\11\1\2\uffff\2\1\1\uffff\4\1\1\uffff\3\1\4\uffff\11\1\1\uffff\4\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[] dfa_54 = DFA.unpackEncodedString(dfa_54s);
    static final char[] dfa_55 = DFA.unpackEncodedStringToUnsignedChars(dfa_55s);
    static final char[] dfa_56 = DFA.unpackEncodedStringToUnsignedChars(dfa_56s);
    static final short[] dfa_57 = DFA.unpackEncodedString(dfa_57s);
    static final short[][] dfa_58 = unpackEncodedStringArray(dfa_58s);

    class DFA56 extends DFA {

        public DFA56(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 56;
            this.eot = dfa_8;
            this.eof = dfa_54;
            this.min = dfa_55;
            this.max = dfa_56;
            this.accept = dfa_57;
            this.special = dfa_13;
            this.transition = dfa_58;
        }
        public String getDescription() {
            return "()* loopback of 5872:2: ( rule__Comparison__Group_1__0 )*";
        }
    }
    static final String dfa_59s = "\57\uffff";
    static final String dfa_60s = "\1\4\2\uffff\1\1\3\uffff\1\1\5\uffff\2\20\40\uffff";
    static final String dfa_61s = "\1\5\1\uffff\1\5\1\4\1\uffff\1\4\3\5\1\4\1\5\1\15\2\5\2\4\1\uffff\1\5\1\43\1\5\2\4\1\5\1\15\1\5\1\4\1\uffff\1\5\1\15\1\4\1\35\1\4\1\5\1\4\1\5\1\43\1\5\1\4\1\35\1\uffff\1\5\1\4\1\5\1\43\1\5\1\4\1\35";
    static final String dfa_62s = "\1\113\1\uffff\1\113\1\111\1\uffff\1\102\1\5\1\111\1\113\1\72\1\5\1\102\1\113\2\111\1\102\1\uffff\1\5\1\72\1\41\2\102\1\5\1\102\1\5\1\72\1\uffff\1\5\2\102\1\42\1\102\1\5\1\43\1\5\1\43\1\5\1\43\1\42\1\uffff\1\5\1\43\1\5\1\43\1\5\1\43\1\42";
    static final String dfa_63s = "\1\uffff\1\1\2\uffff\1\2\13\uffff\1\1\11\uffff\1\1\14\uffff\1\1\7\uffff";
    static final String dfa_64s = "\57\uffff}>";
    static final String[] dfa_65s = {
            "\1\3\3\1\21\uffff\1\4\6\uffff\1\2\6\uffff\1\1\11\uffff\1\1\13\uffff\4\4\7\uffff\1\4\2\1",
            "",
            "\1\5\3\1\30\uffff\1\1\6\uffff\1\1\11\uffff\1\1\27\uffff\2\1",
            "\1\7\1\11\7\uffff\14\1\1\uffff\1\1\3\uffff\1\6\1\uffff\1\1\1\10\1\uffff\1\4\1\uffff\7\1\3\uffff\1\1\1\uffff\1\1\10\uffff\1\4\3\uffff\5\1\6\uffff\1\1",
            "",
            "\1\13\10\uffff\14\1\4\uffff\1\14\1\12\1\uffff\2\1\1\15\1\4\1\uffff\7\1\3\uffff\1\1\1\uffff\1\1\20\uffff\1\1",
            "\1\16",
            "\1\1\7\uffff\14\1\1\uffff\1\1\5\uffff\2\1\1\uffff\1\4\1\uffff\7\1\3\uffff\1\1\1\uffff\1\1\10\uffff\1\4\3\uffff\5\1\6\uffff\1\1",
            "\1\17\3\1\30\uffff\1\1\1\20\5\uffff\1\1\11\uffff\1\1\27\uffff\2\1",
            "\1\22\1\20\30\uffff\1\21\2\uffff\1\20\1\uffff\1\23\26\uffff\1\20",
            "\1\24",
            "\14\20\4\uffff\1\14\2\uffff\2\20\1\15\1\4\1\uffff\7\20\3\uffff\1\20\1\uffff\1\20\20\uffff\1\20",
            "\1\25\3\20\30\uffff\1\20\6\uffff\1\20\11\uffff\1\20\27\uffff\2\20",
            "\1\20\7\uffff\14\20\1\uffff\1\20\5\uffff\2\20\1\uffff\1\4\1\uffff\7\20\3\uffff\1\20\1\uffff\1\20\10\uffff\1\4\3\uffff\5\20\6\uffff\1\20",
            "\1\7\1\20\7\uffff\14\20\1\uffff\1\20\3\uffff\1\6\1\uffff\2\20\1\uffff\1\4\1\uffff\7\20\3\uffff\1\20\1\uffff\1\20\10\uffff\1\4\3\uffff\5\20\6\uffff\1\20",
            "\1\27\10\uffff\14\20\4\uffff\1\20\1\26\1\uffff\3\20\1\30\1\uffff\7\20\3\uffff\1\20\1\uffff\1\20\20\uffff\1\20",
            "",
            "\1\31",
            "\1\23\26\uffff\1\20",
            "\1\32\33\uffff\1\32",
            "\1\13\10\uffff\14\32\4\uffff\1\14\1\12\1\uffff\2\32\1\15\1\4\1\uffff\7\32\3\uffff\1\32\1\uffff\1\32\20\uffff\1\32",
            "\1\34\10\uffff\14\32\4\uffff\1\14\1\33\1\uffff\2\32\1\15\2\uffff\7\32\3\uffff\1\32\1\uffff\1\32\20\uffff\1\32",
            "\1\35",
            "\14\32\4\uffff\1\32\2\uffff\3\32\1\30\1\uffff\7\32\3\uffff\1\32\1\uffff\1\32\20\uffff\1\32",
            "\1\36",
            "\1\22\31\uffff\1\21\4\uffff\1\23\26\uffff\1\32",
            "",
            "\1\37",
            "\14\32\4\uffff\1\14\2\uffff\2\32\1\15\2\uffff\7\32\3\uffff\1\32\1\uffff\1\32\20\uffff\1\32",
            "\1\27\10\uffff\14\32\4\uffff\1\32\1\26\1\uffff\3\32\1\30\1\uffff\7\32\3\uffff\1\32\1\uffff\1\32\20\uffff\1\32",
            "\1\40\4\uffff\1\4",
            "\1\34\10\uffff\14\32\4\uffff\1\14\1\33\1\uffff\2\32\1\15\2\uffff\7\32\3\uffff\1\32\1\uffff\1\32\20\uffff\1\32",
            "\1\41",
            "\1\43\31\uffff\1\42\4\uffff\1\44",
            "\1\45",
            "\1\44",
            "\1\46",
            "\1\43\31\uffff\1\42\4\uffff\1\44",
            "\1\50\4\uffff\1\47",
            "",
            "\1\51",
            "\1\53\31\uffff\1\52\4\uffff\1\54",
            "\1\55",
            "\1\54",
            "\1\56",
            "\1\53\31\uffff\1\52\4\uffff\1\54",
            "\1\50\4\uffff\1\47"
    };

    static final short[] dfa_59 = DFA.unpackEncodedString(dfa_59s);
    static final short[] dfa_60 = DFA.unpackEncodedString(dfa_60s);
    static final char[] dfa_61 = DFA.unpackEncodedStringToUnsignedChars(dfa_61s);
    static final char[] dfa_62 = DFA.unpackEncodedStringToUnsignedChars(dfa_62s);
    static final short[] dfa_63 = DFA.unpackEncodedString(dfa_63s);
    static final short[] dfa_64 = DFA.unpackEncodedString(dfa_64s);
    static final short[][] dfa_65 = unpackEncodedStringArray(dfa_65s);

    class DFA86 extends DFA {

        public DFA86(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 86;
            this.eot = dfa_59;
            this.eof = dfa_60;
            this.min = dfa_61;
            this.max = dfa_62;
            this.accept = dfa_63;
            this.special = dfa_64;
            this.transition = dfa_65;
        }
        public String getDescription() {
            return "9760:2: ( rule__FieldDecl__InitAssignment_1_3 )?";
        }
    }
 

    public static final BitSet FOLLOW_1 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_2 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_3 = new BitSet(new long[]{0xC000000200000022L,0x0000000000000203L});
    public static final BitSet FOLLOW_4 = new BitSet(new long[]{0xC000000000000002L,0x0000000000000003L});
    public static final BitSet FOLLOW_5 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_6 = new BitSet(new long[]{0x1800000000000000L});
    public static final BitSet FOLLOW_7 = new BitSet(new long[]{0x0800000000000002L});
    public static final BitSet FOLLOW_8 = new BitSet(new long[]{0xC000000204000020L,0x0000000000000203L});
    public static final BitSet FOLLOW_9 = new BitSet(new long[]{0x1800000000000002L});
    public static final BitSet FOLLOW_10 = new BitSet(new long[]{0x0800000004000000L});
    public static final BitSet FOLLOW_11 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_12 = new BitSet(new long[]{0x0000000080000020L});
    public static final BitSet FOLLOW_13 = new BitSet(new long[]{0x0000000080000000L});
    public static final BitSet FOLLOW_14 = new BitSet(new long[]{0x0000000030000000L});
    public static final BitSet FOLLOW_15 = new BitSet(new long[]{0x0000000020000002L});
    public static final BitSet FOLLOW_16 = new BitSet(new long[]{0x0000000040000000L});
    public static final BitSet FOLLOW_17 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_18 = new BitSet(new long[]{0x0000000010000000L});
    public static final BitSet FOLLOW_19 = new BitSet(new long[]{0x2000000000000000L});
    public static final BitSet FOLLOW_20 = new BitSet(new long[]{0x0000000100000000L});
    public static final BitSet FOLLOW_21 = new BitSet(new long[]{0x0000000040000010L});
    public static final BitSet FOLLOW_22 = new BitSet(new long[]{0x0000000040000002L});
    public static final BitSet FOLLOW_23 = new BitSet(new long[]{0x0000000400000000L});
    public static final BitSet FOLLOW_24 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_25 = new BitSet(new long[]{0x0000000400000020L});
    public static final BitSet FOLLOW_26 = new BitSet(new long[]{0x0000000800000000L});
    public static final BitSet FOLLOW_27 = new BitSet(new long[]{0x0000000200000000L});
    public static final BitSet FOLLOW_28 = new BitSet(new long[]{0x0000000420000000L});
    public static final BitSet FOLLOW_29 = new BitSet(new long[]{0xC000000000000020L,0x0000000000000003L});
    public static final BitSet FOLLOW_30 = new BitSet(new long[]{0x0000000200000020L});
    public static final BitSet FOLLOW_31 = new BitSet(new long[]{0x0400000800000000L});
    public static final BitSet FOLLOW_32 = new BitSet(new long[]{0x42040102000001E0L,0x0000000000000F79L});
    public static final BitSet FOLLOW_33 = new BitSet(new long[]{0x0000001000000000L});
    public static final BitSet FOLLOW_34 = new BitSet(new long[]{0x0200000000000000L,0x0000000000000179L});
    public static final BitSet FOLLOW_35 = new BitSet(new long[]{0x0000000100000002L});
    public static final BitSet FOLLOW_36 = new BitSet(new long[]{0x0000002000000000L});
    public static final BitSet FOLLOW_37 = new BitSet(new long[]{0x0000002000000002L});
    public static final BitSet FOLLOW_38 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_39 = new BitSet(new long[]{0x0000004000000002L});
    public static final BitSet FOLLOW_40 = new BitSet(new long[]{0x000000000001E000L});
    public static final BitSet FOLLOW_41 = new BitSet(new long[]{0x000000000001E002L});
    public static final BitSet FOLLOW_42 = new BitSet(new long[]{0x0000000001FE0000L});
    public static final BitSet FOLLOW_43 = new BitSet(new long[]{0x0000000001FE0002L});
    public static final BitSet FOLLOW_44 = new BitSet(new long[]{0x0000008000000000L});
    public static final BitSet FOLLOW_45 = new BitSet(new long[]{0x0000008000000002L});
    public static final BitSet FOLLOW_46 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_47 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_48 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_49 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_50 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_51 = new BitSet(new long[]{0x0000040000000002L});
    public static final BitSet FOLLOW_52 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_53 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000004L});
    public static final BitSet FOLLOW_54 = new BitSet(new long[]{0x0002880200000000L});
    public static final BitSet FOLLOW_55 = new BitSet(new long[]{0x0002000000000000L});
    public static final BitSet FOLLOW_56 = new BitSet(new long[]{0x42040106000001E0L,0x0000000000000F79L});
    public static final BitSet FOLLOW_57 = new BitSet(new long[]{0x0000080000000000L});
    public static final BitSet FOLLOW_58 = new BitSet(new long[]{0x42041102000001E0L,0x0000000000000F79L});
    public static final BitSet FOLLOW_59 = new BitSet(new long[]{0x40002006000001E0L,0x0000000000000C00L});
    public static final BitSet FOLLOW_60 = new BitSet(new long[]{0x4000000200000020L});
    public static final BitSet FOLLOW_61 = new BitSet(new long[]{0x0000400000000000L});
    public static final BitSet FOLLOW_62 = new BitSet(new long[]{0x0000800000000000L});
    public static final BitSet FOLLOW_63 = new BitSet(new long[]{0x42050102000001E0L,0x0000000000000F79L});
    public static final BitSet FOLLOW_64 = new BitSet(new long[]{0x0004000000000000L});
    public static final BitSet FOLLOW_65 = new BitSet(new long[]{0x0200000000000000L,0x0000000000000101L});
    public static final BitSet FOLLOW_66 = new BitSet(new long[]{0x0000000004000000L});
    public static final BitSet FOLLOW_67 = new BitSet(new long[]{0x0008000000000000L});
    public static final BitSet FOLLOW_68 = new BitSet(new long[]{0x0030000004000000L});
    public static final BitSet FOLLOW_69 = new BitSet(new long[]{0x0010000000000000L});
    public static final BitSet FOLLOW_70 = new BitSet(new long[]{0x0010000000000002L});
    public static final BitSet FOLLOW_71 = new BitSet(new long[]{0x0040000000000000L});
    public static final BitSet FOLLOW_72 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
    public static final BitSet FOLLOW_73 = new BitSet(new long[]{0x0080000000000000L});
    public static final BitSet FOLLOW_74 = new BitSet(new long[]{0x42040102000001E2L,0x0000000000000F79L});
    public static final BitSet FOLLOW_75 = new BitSet(new long[]{0x0100000004000000L});
    public static final BitSet FOLLOW_76 = new BitSet(new long[]{0x0100000000000002L});
    public static final BitSet FOLLOW_77 = new BitSet(new long[]{0x4000000200000020L,0x0000000000000200L});
    public static final BitSet FOLLOW_78 = new BitSet(new long[]{0x0400000000000000L});
    public static final BitSet FOLLOW_79 = new BitSet(new long[]{0xC000000200000020L,0x0000000000000203L});
    public static final BitSet FOLLOW_80 = new BitSet(new long[]{0x0001000000000000L});
    public static final BitSet FOLLOW_81 = new BitSet(new long[]{0x00000000000001C0L,0x0000000000000C00L});
    public static final BitSet FOLLOW_82 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_83 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_84 = new BitSet(new long[]{0x0000000000000100L});

}