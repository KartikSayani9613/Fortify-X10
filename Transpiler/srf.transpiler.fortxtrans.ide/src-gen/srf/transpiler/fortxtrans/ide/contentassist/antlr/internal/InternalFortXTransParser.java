package srf.transpiler.fortxtrans.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import srf.transpiler.fortxtrans.services.FortXTransGrammarAccess;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;

@SuppressWarnings("all")
public class InternalFortXTransParser extends AbstractInternalContentAssistParser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "RULE_DOTS", "RULE_ID", "RULE_INT", "RULE_FLOAT", "RULE_STRING", "RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS", "RULE_ANY_OTHER", "'component'", "'end'", "'api'", "'}'", "','", "'.'", "'{'", "'as'", "'('", "')'", "':'", "'+'", "'-'", "'/'", "'*'", "':='", "'then'", "'elif'", "'else'", "'<-'", "'also'", "'do'", "'='", "'import'", "'export'", "'except'", "'private'", "'test'", "'atomic'", "'io'", "'return'", "'while'", "'for'", "'if'", "'seq'", "'at'", "'_'", "'var'"
    };
    public static final int T__50=50;
    public static final int RULE_DOTS=4;
    public static final int T__19=19;
    public static final int T__15=15;
    public static final int T__16=16;
    public static final int T__17=17;
    public static final int T__18=18;
    public static final int T__13=13;
    public static final int T__14=14;
    public static final int RULE_ID=5;
    public static final int T__26=26;
    public static final int T__27=27;
    public static final int T__28=28;
    public static final int RULE_INT=6;
    public static final int T__29=29;
    public static final int T__22=22;
    public static final int RULE_ML_COMMENT=9;
    public static final int T__23=23;
    public static final int T__24=24;
    public static final int T__25=25;
    public static final int T__20=20;
    public static final int T__21=21;
    public static final int RULE_STRING=8;
    public static final int RULE_SL_COMMENT=10;
    public static final int T__37=37;
    public static final int T__38=38;
    public static final int T__39=39;
    public static final int T__33=33;
    public static final int T__34=34;
    public static final int T__35=35;
    public static final int T__36=36;
    public static final int EOF=-1;
    public static final int T__30=30;
    public static final int T__31=31;
    public static final int T__32=32;
    public static final int RULE_WS=11;
    public static final int RULE_ANY_OTHER=12;
    public static final int T__48=48;
    public static final int T__49=49;
    public static final int T__44=44;
    public static final int T__45=45;
    public static final int RULE_FLOAT=7;
    public static final int T__46=46;
    public static final int T__47=47;
    public static final int T__40=40;
    public static final int T__41=41;
    public static final int T__42=42;
    public static final int T__43=43;

    // delegates
    // delegators


        public InternalFortXTransParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public InternalFortXTransParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
             
        }
        

    public String[] getTokenNames() { return InternalFortXTransParser.tokenNames; }
    public String getGrammarFileName() { return "InternalFortXTrans.g"; }


    	private FortXTransGrammarAccess grammarAccess;

    	public void setGrammarAccess(FortXTransGrammarAccess grammarAccess) {
    		this.grammarAccess = grammarAccess;
    	}

    	@Override
    	protected Grammar getGrammar() {
    		return grammarAccess.getGrammar();
    	}

    	@Override
    	protected String getValueForTokenName(String tokenName) {
    		return tokenName;
    	}



    // $ANTLR start "entryRuleModel"
    // InternalFortXTrans.g:53:1: entryRuleModel : ruleModel EOF ;
    public final void entryRuleModel() throws RecognitionException {
        try {
            // InternalFortXTrans.g:54:1: ( ruleModel EOF )
            // InternalFortXTrans.g:55:1: ruleModel EOF
            {
             before(grammarAccess.getModelRule()); 
            pushFollow(FOLLOW_1);
            ruleModel();

            state._fsp--;

             after(grammarAccess.getModelRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleModel"


    // $ANTLR start "ruleModel"
    // InternalFortXTrans.g:62:1: ruleModel : ( ( rule__Model__Alternatives ) ) ;
    public final void ruleModel() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:66:2: ( ( ( rule__Model__Alternatives ) ) )
            // InternalFortXTrans.g:67:2: ( ( rule__Model__Alternatives ) )
            {
            // InternalFortXTrans.g:67:2: ( ( rule__Model__Alternatives ) )
            // InternalFortXTrans.g:68:3: ( rule__Model__Alternatives )
            {
             before(grammarAccess.getModelAccess().getAlternatives()); 
            // InternalFortXTrans.g:69:3: ( rule__Model__Alternatives )
            // InternalFortXTrans.g:69:4: rule__Model__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__Model__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getModelAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleModel"


    // $ANTLR start "entryRuleComponent"
    // InternalFortXTrans.g:78:1: entryRuleComponent : ruleComponent EOF ;
    public final void entryRuleComponent() throws RecognitionException {
        try {
            // InternalFortXTrans.g:79:1: ( ruleComponent EOF )
            // InternalFortXTrans.g:80:1: ruleComponent EOF
            {
             before(grammarAccess.getComponentRule()); 
            pushFollow(FOLLOW_1);
            ruleComponent();

            state._fsp--;

             after(grammarAccess.getComponentRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleComponent"


    // $ANTLR start "ruleComponent"
    // InternalFortXTrans.g:87:1: ruleComponent : ( ( rule__Component__Group__0 ) ) ;
    public final void ruleComponent() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:91:2: ( ( ( rule__Component__Group__0 ) ) )
            // InternalFortXTrans.g:92:2: ( ( rule__Component__Group__0 ) )
            {
            // InternalFortXTrans.g:92:2: ( ( rule__Component__Group__0 ) )
            // InternalFortXTrans.g:93:3: ( rule__Component__Group__0 )
            {
             before(grammarAccess.getComponentAccess().getGroup()); 
            // InternalFortXTrans.g:94:3: ( rule__Component__Group__0 )
            // InternalFortXTrans.g:94:4: rule__Component__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Component__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getComponentAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleComponent"


    // $ANTLR start "entryRuleAPI"
    // InternalFortXTrans.g:103:1: entryRuleAPI : ruleAPI EOF ;
    public final void entryRuleAPI() throws RecognitionException {
        try {
            // InternalFortXTrans.g:104:1: ( ruleAPI EOF )
            // InternalFortXTrans.g:105:1: ruleAPI EOF
            {
             before(grammarAccess.getAPIRule()); 
            pushFollow(FOLLOW_1);
            ruleAPI();

            state._fsp--;

             after(grammarAccess.getAPIRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAPI"


    // $ANTLR start "ruleAPI"
    // InternalFortXTrans.g:112:1: ruleAPI : ( ( rule__API__Group__0 ) ) ;
    public final void ruleAPI() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:116:2: ( ( ( rule__API__Group__0 ) ) )
            // InternalFortXTrans.g:117:2: ( ( rule__API__Group__0 ) )
            {
            // InternalFortXTrans.g:117:2: ( ( rule__API__Group__0 ) )
            // InternalFortXTrans.g:118:3: ( rule__API__Group__0 )
            {
             before(grammarAccess.getAPIAccess().getGroup()); 
            // InternalFortXTrans.g:119:3: ( rule__API__Group__0 )
            // InternalFortXTrans.g:119:4: rule__API__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__API__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getAPIAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAPI"


    // $ANTLR start "entryRuleImport"
    // InternalFortXTrans.g:128:1: entryRuleImport : ruleImport EOF ;
    public final void entryRuleImport() throws RecognitionException {
        try {
            // InternalFortXTrans.g:129:1: ( ruleImport EOF )
            // InternalFortXTrans.g:130:1: ruleImport EOF
            {
             before(grammarAccess.getImportRule()); 
            pushFollow(FOLLOW_1);
            ruleImport();

            state._fsp--;

             after(grammarAccess.getImportRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleImport"


    // $ANTLR start "ruleImport"
    // InternalFortXTrans.g:137:1: ruleImport : ( ( rule__Import__Alternatives ) ) ;
    public final void ruleImport() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:141:2: ( ( ( rule__Import__Alternatives ) ) )
            // InternalFortXTrans.g:142:2: ( ( rule__Import__Alternatives ) )
            {
            // InternalFortXTrans.g:142:2: ( ( rule__Import__Alternatives ) )
            // InternalFortXTrans.g:143:3: ( rule__Import__Alternatives )
            {
             before(grammarAccess.getImportAccess().getAlternatives()); 
            // InternalFortXTrans.g:144:3: ( rule__Import__Alternatives )
            // InternalFortXTrans.g:144:4: rule__Import__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__Import__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getImportAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleImport"


    // $ANTLR start "entryRuleExport"
    // InternalFortXTrans.g:153:1: entryRuleExport : ruleExport EOF ;
    public final void entryRuleExport() throws RecognitionException {
        try {
            // InternalFortXTrans.g:154:1: ( ruleExport EOF )
            // InternalFortXTrans.g:155:1: ruleExport EOF
            {
             before(grammarAccess.getExportRule()); 
            pushFollow(FOLLOW_1);
            ruleExport();

            state._fsp--;

             after(grammarAccess.getExportRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleExport"


    // $ANTLR start "ruleExport"
    // InternalFortXTrans.g:162:1: ruleExport : ( ( rule__Export__Alternatives ) ) ;
    public final void ruleExport() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:166:2: ( ( ( rule__Export__Alternatives ) ) )
            // InternalFortXTrans.g:167:2: ( ( rule__Export__Alternatives ) )
            {
            // InternalFortXTrans.g:167:2: ( ( rule__Export__Alternatives ) )
            // InternalFortXTrans.g:168:3: ( rule__Export__Alternatives )
            {
             before(grammarAccess.getExportAccess().getAlternatives()); 
            // InternalFortXTrans.g:169:3: ( rule__Export__Alternatives )
            // InternalFortXTrans.g:169:4: rule__Export__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__Export__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getExportAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleExport"


    // $ANTLR start "entryRuleImportedNames"
    // InternalFortXTrans.g:178:1: entryRuleImportedNames : ruleImportedNames EOF ;
    public final void entryRuleImportedNames() throws RecognitionException {
        try {
            // InternalFortXTrans.g:179:1: ( ruleImportedNames EOF )
            // InternalFortXTrans.g:180:1: ruleImportedNames EOF
            {
             before(grammarAccess.getImportedNamesRule()); 
            pushFollow(FOLLOW_1);
            ruleImportedNames();

            state._fsp--;

             after(grammarAccess.getImportedNamesRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleImportedNames"


    // $ANTLR start "ruleImportedNames"
    // InternalFortXTrans.g:187:1: ruleImportedNames : ( ( rule__ImportedNames__Alternatives ) ) ;
    public final void ruleImportedNames() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:191:2: ( ( ( rule__ImportedNames__Alternatives ) ) )
            // InternalFortXTrans.g:192:2: ( ( rule__ImportedNames__Alternatives ) )
            {
            // InternalFortXTrans.g:192:2: ( ( rule__ImportedNames__Alternatives ) )
            // InternalFortXTrans.g:193:3: ( rule__ImportedNames__Alternatives )
            {
             before(grammarAccess.getImportedNamesAccess().getAlternatives()); 
            // InternalFortXTrans.g:194:3: ( rule__ImportedNames__Alternatives )
            // InternalFortXTrans.g:194:4: rule__ImportedNames__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__ImportedNames__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getImportedNamesAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleImportedNames"


    // $ANTLR start "entryRuleQualifiedName"
    // InternalFortXTrans.g:203:1: entryRuleQualifiedName : ruleQualifiedName EOF ;
    public final void entryRuleQualifiedName() throws RecognitionException {
        try {
            // InternalFortXTrans.g:204:1: ( ruleQualifiedName EOF )
            // InternalFortXTrans.g:205:1: ruleQualifiedName EOF
            {
             before(grammarAccess.getQualifiedNameRule()); 
            pushFollow(FOLLOW_1);
            ruleQualifiedName();

            state._fsp--;

             after(grammarAccess.getQualifiedNameRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleQualifiedName"


    // $ANTLR start "ruleQualifiedName"
    // InternalFortXTrans.g:212:1: ruleQualifiedName : ( ( rule__QualifiedName__Alternatives ) ) ;
    public final void ruleQualifiedName() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:216:2: ( ( ( rule__QualifiedName__Alternatives ) ) )
            // InternalFortXTrans.g:217:2: ( ( rule__QualifiedName__Alternatives ) )
            {
            // InternalFortXTrans.g:217:2: ( ( rule__QualifiedName__Alternatives ) )
            // InternalFortXTrans.g:218:3: ( rule__QualifiedName__Alternatives )
            {
             before(grammarAccess.getQualifiedNameAccess().getAlternatives()); 
            // InternalFortXTrans.g:219:3: ( rule__QualifiedName__Alternatives )
            // InternalFortXTrans.g:219:4: rule__QualifiedName__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__QualifiedName__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getQualifiedNameAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleQualifiedName"


    // $ANTLR start "entryRuleQualified"
    // InternalFortXTrans.g:228:1: entryRuleQualified : ruleQualified EOF ;
    public final void entryRuleQualified() throws RecognitionException {
        try {
            // InternalFortXTrans.g:229:1: ( ruleQualified EOF )
            // InternalFortXTrans.g:230:1: ruleQualified EOF
            {
             before(grammarAccess.getQualifiedRule()); 
            pushFollow(FOLLOW_1);
            ruleQualified();

            state._fsp--;

             after(grammarAccess.getQualifiedRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleQualified"


    // $ANTLR start "ruleQualified"
    // InternalFortXTrans.g:237:1: ruleQualified : ( ( rule__Qualified__Alternatives ) ) ;
    public final void ruleQualified() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:241:2: ( ( ( rule__Qualified__Alternatives ) ) )
            // InternalFortXTrans.g:242:2: ( ( rule__Qualified__Alternatives ) )
            {
            // InternalFortXTrans.g:242:2: ( ( rule__Qualified__Alternatives ) )
            // InternalFortXTrans.g:243:3: ( rule__Qualified__Alternatives )
            {
             before(grammarAccess.getQualifiedAccess().getAlternatives()); 
            // InternalFortXTrans.g:244:3: ( rule__Qualified__Alternatives )
            // InternalFortXTrans.g:244:4: rule__Qualified__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__Qualified__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getQualifiedAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleQualified"


    // $ANTLR start "entryRuleQualifiedNameTuple"
    // InternalFortXTrans.g:253:1: entryRuleQualifiedNameTuple : ruleQualifiedNameTuple EOF ;
    public final void entryRuleQualifiedNameTuple() throws RecognitionException {
        try {
            // InternalFortXTrans.g:254:1: ( ruleQualifiedNameTuple EOF )
            // InternalFortXTrans.g:255:1: ruleQualifiedNameTuple EOF
            {
             before(grammarAccess.getQualifiedNameTupleRule()); 
            pushFollow(FOLLOW_1);
            ruleQualifiedNameTuple();

            state._fsp--;

             after(grammarAccess.getQualifiedNameTupleRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleQualifiedNameTuple"


    // $ANTLR start "ruleQualifiedNameTuple"
    // InternalFortXTrans.g:262:1: ruleQualifiedNameTuple : ( ( rule__QualifiedNameTuple__Group__0 ) ) ;
    public final void ruleQualifiedNameTuple() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:266:2: ( ( ( rule__QualifiedNameTuple__Group__0 ) ) )
            // InternalFortXTrans.g:267:2: ( ( rule__QualifiedNameTuple__Group__0 ) )
            {
            // InternalFortXTrans.g:267:2: ( ( rule__QualifiedNameTuple__Group__0 ) )
            // InternalFortXTrans.g:268:3: ( rule__QualifiedNameTuple__Group__0 )
            {
             before(grammarAccess.getQualifiedNameTupleAccess().getGroup()); 
            // InternalFortXTrans.g:269:3: ( rule__QualifiedNameTuple__Group__0 )
            // InternalFortXTrans.g:269:4: rule__QualifiedNameTuple__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__QualifiedNameTuple__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getQualifiedNameTupleAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleQualifiedNameTuple"


    // $ANTLR start "entryRuleSimpleNames"
    // InternalFortXTrans.g:278:1: entryRuleSimpleNames : ruleSimpleNames EOF ;
    public final void entryRuleSimpleNames() throws RecognitionException {
        try {
            // InternalFortXTrans.g:279:1: ( ruleSimpleNames EOF )
            // InternalFortXTrans.g:280:1: ruleSimpleNames EOF
            {
             before(grammarAccess.getSimpleNamesRule()); 
            pushFollow(FOLLOW_1);
            ruleSimpleNames();

            state._fsp--;

             after(grammarAccess.getSimpleNamesRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSimpleNames"


    // $ANTLR start "ruleSimpleNames"
    // InternalFortXTrans.g:287:1: ruleSimpleNames : ( ( rule__SimpleNames__Alternatives ) ) ;
    public final void ruleSimpleNames() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:291:2: ( ( ( rule__SimpleNames__Alternatives ) ) )
            // InternalFortXTrans.g:292:2: ( ( rule__SimpleNames__Alternatives ) )
            {
            // InternalFortXTrans.g:292:2: ( ( rule__SimpleNames__Alternatives ) )
            // InternalFortXTrans.g:293:3: ( rule__SimpleNames__Alternatives )
            {
             before(grammarAccess.getSimpleNamesAccess().getAlternatives()); 
            // InternalFortXTrans.g:294:3: ( rule__SimpleNames__Alternatives )
            // InternalFortXTrans.g:294:4: rule__SimpleNames__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__SimpleNames__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getSimpleNamesAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSimpleNames"


    // $ANTLR start "entryRuleSimpleName"
    // InternalFortXTrans.g:303:1: entryRuleSimpleName : ruleSimpleName EOF ;
    public final void entryRuleSimpleName() throws RecognitionException {
        try {
            // InternalFortXTrans.g:304:1: ( ruleSimpleName EOF )
            // InternalFortXTrans.g:305:1: ruleSimpleName EOF
            {
             before(grammarAccess.getSimpleNameRule()); 
            pushFollow(FOLLOW_1);
            ruleSimpleName();

            state._fsp--;

             after(grammarAccess.getSimpleNameRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSimpleName"


    // $ANTLR start "ruleSimpleName"
    // InternalFortXTrans.g:312:1: ruleSimpleName : ( ( rule__SimpleName__NameAssignment ) ) ;
    public final void ruleSimpleName() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:316:2: ( ( ( rule__SimpleName__NameAssignment ) ) )
            // InternalFortXTrans.g:317:2: ( ( rule__SimpleName__NameAssignment ) )
            {
            // InternalFortXTrans.g:317:2: ( ( rule__SimpleName__NameAssignment ) )
            // InternalFortXTrans.g:318:3: ( rule__SimpleName__NameAssignment )
            {
             before(grammarAccess.getSimpleNameAccess().getNameAssignment()); 
            // InternalFortXTrans.g:319:3: ( rule__SimpleName__NameAssignment )
            // InternalFortXTrans.g:319:4: rule__SimpleName__NameAssignment
            {
            pushFollow(FOLLOW_2);
            rule__SimpleName__NameAssignment();

            state._fsp--;


            }

             after(grammarAccess.getSimpleNameAccess().getNameAssignment()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSimpleName"


    // $ANTLR start "entryRuleAliasedSimpleName"
    // InternalFortXTrans.g:328:1: entryRuleAliasedSimpleName : ruleAliasedSimpleName EOF ;
    public final void entryRuleAliasedSimpleName() throws RecognitionException {
        try {
            // InternalFortXTrans.g:329:1: ( ruleAliasedSimpleName EOF )
            // InternalFortXTrans.g:330:1: ruleAliasedSimpleName EOF
            {
             before(grammarAccess.getAliasedSimpleNameRule()); 
            pushFollow(FOLLOW_1);
            ruleAliasedSimpleName();

            state._fsp--;

             after(grammarAccess.getAliasedSimpleNameRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAliasedSimpleName"


    // $ANTLR start "ruleAliasedSimpleName"
    // InternalFortXTrans.g:337:1: ruleAliasedSimpleName : ( ( rule__AliasedSimpleName__Group__0 ) ) ;
    public final void ruleAliasedSimpleName() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:341:2: ( ( ( rule__AliasedSimpleName__Group__0 ) ) )
            // InternalFortXTrans.g:342:2: ( ( rule__AliasedSimpleName__Group__0 ) )
            {
            // InternalFortXTrans.g:342:2: ( ( rule__AliasedSimpleName__Group__0 ) )
            // InternalFortXTrans.g:343:3: ( rule__AliasedSimpleName__Group__0 )
            {
             before(grammarAccess.getAliasedSimpleNameAccess().getGroup()); 
            // InternalFortXTrans.g:344:3: ( rule__AliasedSimpleName__Group__0 )
            // InternalFortXTrans.g:344:4: rule__AliasedSimpleName__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__AliasedSimpleName__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getAliasedSimpleNameAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAliasedSimpleName"


    // $ANTLR start "entryRuleAliasedAPINames"
    // InternalFortXTrans.g:353:1: entryRuleAliasedAPINames : ruleAliasedAPINames EOF ;
    public final void entryRuleAliasedAPINames() throws RecognitionException {
        try {
            // InternalFortXTrans.g:354:1: ( ruleAliasedAPINames EOF )
            // InternalFortXTrans.g:355:1: ruleAliasedAPINames EOF
            {
             before(grammarAccess.getAliasedAPINamesRule()); 
            pushFollow(FOLLOW_1);
            ruleAliasedAPINames();

            state._fsp--;

             after(grammarAccess.getAliasedAPINamesRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAliasedAPINames"


    // $ANTLR start "ruleAliasedAPINames"
    // InternalFortXTrans.g:362:1: ruleAliasedAPINames : ( ( rule__AliasedAPINames__Alternatives ) ) ;
    public final void ruleAliasedAPINames() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:366:2: ( ( ( rule__AliasedAPINames__Alternatives ) ) )
            // InternalFortXTrans.g:367:2: ( ( rule__AliasedAPINames__Alternatives ) )
            {
            // InternalFortXTrans.g:367:2: ( ( rule__AliasedAPINames__Alternatives ) )
            // InternalFortXTrans.g:368:3: ( rule__AliasedAPINames__Alternatives )
            {
             before(grammarAccess.getAliasedAPINamesAccess().getAlternatives()); 
            // InternalFortXTrans.g:369:3: ( rule__AliasedAPINames__Alternatives )
            // InternalFortXTrans.g:369:4: rule__AliasedAPINames__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__AliasedAPINames__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getAliasedAPINamesAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAliasedAPINames"


    // $ANTLR start "entryRuleAliasedAPIName"
    // InternalFortXTrans.g:378:1: entryRuleAliasedAPIName : ruleAliasedAPIName EOF ;
    public final void entryRuleAliasedAPIName() throws RecognitionException {
        try {
            // InternalFortXTrans.g:379:1: ( ruleAliasedAPIName EOF )
            // InternalFortXTrans.g:380:1: ruleAliasedAPIName EOF
            {
             before(grammarAccess.getAliasedAPINameRule()); 
            pushFollow(FOLLOW_1);
            ruleAliasedAPIName();

            state._fsp--;

             after(grammarAccess.getAliasedAPINameRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAliasedAPIName"


    // $ANTLR start "ruleAliasedAPIName"
    // InternalFortXTrans.g:387:1: ruleAliasedAPIName : ( ( rule__AliasedAPIName__Group__0 ) ) ;
    public final void ruleAliasedAPIName() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:391:2: ( ( ( rule__AliasedAPIName__Group__0 ) ) )
            // InternalFortXTrans.g:392:2: ( ( rule__AliasedAPIName__Group__0 ) )
            {
            // InternalFortXTrans.g:392:2: ( ( rule__AliasedAPIName__Group__0 ) )
            // InternalFortXTrans.g:393:3: ( rule__AliasedAPIName__Group__0 )
            {
             before(grammarAccess.getAliasedAPINameAccess().getGroup()); 
            // InternalFortXTrans.g:394:3: ( rule__AliasedAPIName__Group__0 )
            // InternalFortXTrans.g:394:4: rule__AliasedAPIName__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__AliasedAPIName__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getAliasedAPINameAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAliasedAPIName"


    // $ANTLR start "entryRuleDecls"
    // InternalFortXTrans.g:403:1: entryRuleDecls : ruleDecls EOF ;
    public final void entryRuleDecls() throws RecognitionException {
        try {
            // InternalFortXTrans.g:404:1: ( ruleDecls EOF )
            // InternalFortXTrans.g:405:1: ruleDecls EOF
            {
             before(grammarAccess.getDeclsRule()); 
            pushFollow(FOLLOW_1);
            ruleDecls();

            state._fsp--;

             after(grammarAccess.getDeclsRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDecls"


    // $ANTLR start "ruleDecls"
    // InternalFortXTrans.g:412:1: ruleDecls : ( ( ( rule__Decls__DeclsAssignment ) ) ( ( rule__Decls__DeclsAssignment )* ) ) ;
    public final void ruleDecls() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:416:2: ( ( ( ( rule__Decls__DeclsAssignment ) ) ( ( rule__Decls__DeclsAssignment )* ) ) )
            // InternalFortXTrans.g:417:2: ( ( ( rule__Decls__DeclsAssignment ) ) ( ( rule__Decls__DeclsAssignment )* ) )
            {
            // InternalFortXTrans.g:417:2: ( ( ( rule__Decls__DeclsAssignment ) ) ( ( rule__Decls__DeclsAssignment )* ) )
            // InternalFortXTrans.g:418:3: ( ( rule__Decls__DeclsAssignment ) ) ( ( rule__Decls__DeclsAssignment )* )
            {
            // InternalFortXTrans.g:418:3: ( ( rule__Decls__DeclsAssignment ) )
            // InternalFortXTrans.g:419:4: ( rule__Decls__DeclsAssignment )
            {
             before(grammarAccess.getDeclsAccess().getDeclsAssignment()); 
            // InternalFortXTrans.g:420:4: ( rule__Decls__DeclsAssignment )
            // InternalFortXTrans.g:420:5: rule__Decls__DeclsAssignment
            {
            pushFollow(FOLLOW_3);
            rule__Decls__DeclsAssignment();

            state._fsp--;


            }

             after(grammarAccess.getDeclsAccess().getDeclsAssignment()); 

            }

            // InternalFortXTrans.g:423:3: ( ( rule__Decls__DeclsAssignment )* )
            // InternalFortXTrans.g:424:4: ( rule__Decls__DeclsAssignment )*
            {
             before(grammarAccess.getDeclsAccess().getDeclsAssignment()); 
            // InternalFortXTrans.g:425:4: ( rule__Decls__DeclsAssignment )*
            loop1:
            do {
                int alt1=2;
                alt1 = dfa1.predict(input);
                switch (alt1) {
            	case 1 :
            	    // InternalFortXTrans.g:425:5: rule__Decls__DeclsAssignment
            	    {
            	    pushFollow(FOLLOW_3);
            	    rule__Decls__DeclsAssignment();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop1;
                }
            } while (true);

             after(grammarAccess.getDeclsAccess().getDeclsAssignment()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDecls"


    // $ANTLR start "entryRuleDecl"
    // InternalFortXTrans.g:435:1: entryRuleDecl : ruleDecl EOF ;
    public final void entryRuleDecl() throws RecognitionException {
        try {
            // InternalFortXTrans.g:436:1: ( ruleDecl EOF )
            // InternalFortXTrans.g:437:1: ruleDecl EOF
            {
             before(grammarAccess.getDeclRule()); 
            pushFollow(FOLLOW_1);
            ruleDecl();

            state._fsp--;

             after(grammarAccess.getDeclRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDecl"


    // $ANTLR start "ruleDecl"
    // InternalFortXTrans.g:444:1: ruleDecl : ( ( rule__Decl__Alternatives ) ) ;
    public final void ruleDecl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:448:2: ( ( ( rule__Decl__Alternatives ) ) )
            // InternalFortXTrans.g:449:2: ( ( rule__Decl__Alternatives ) )
            {
            // InternalFortXTrans.g:449:2: ( ( rule__Decl__Alternatives ) )
            // InternalFortXTrans.g:450:3: ( rule__Decl__Alternatives )
            {
             before(grammarAccess.getDeclAccess().getAlternatives()); 
            // InternalFortXTrans.g:451:3: ( rule__Decl__Alternatives )
            // InternalFortXTrans.g:451:4: rule__Decl__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__Decl__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getDeclAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDecl"


    // $ANTLR start "entryRuleFnMods"
    // InternalFortXTrans.g:460:1: entryRuleFnMods : ruleFnMods EOF ;
    public final void entryRuleFnMods() throws RecognitionException {
        try {
            // InternalFortXTrans.g:461:1: ( ruleFnMods EOF )
            // InternalFortXTrans.g:462:1: ruleFnMods EOF
            {
             before(grammarAccess.getFnModsRule()); 
            pushFollow(FOLLOW_1);
            ruleFnMods();

            state._fsp--;

             after(grammarAccess.getFnModsRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleFnMods"


    // $ANTLR start "ruleFnMods"
    // InternalFortXTrans.g:469:1: ruleFnMods : ( ( ( rule__FnMods__ModsAssignment ) ) ( ( rule__FnMods__ModsAssignment )* ) ) ;
    public final void ruleFnMods() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:473:2: ( ( ( ( rule__FnMods__ModsAssignment ) ) ( ( rule__FnMods__ModsAssignment )* ) ) )
            // InternalFortXTrans.g:474:2: ( ( ( rule__FnMods__ModsAssignment ) ) ( ( rule__FnMods__ModsAssignment )* ) )
            {
            // InternalFortXTrans.g:474:2: ( ( ( rule__FnMods__ModsAssignment ) ) ( ( rule__FnMods__ModsAssignment )* ) )
            // InternalFortXTrans.g:475:3: ( ( rule__FnMods__ModsAssignment ) ) ( ( rule__FnMods__ModsAssignment )* )
            {
            // InternalFortXTrans.g:475:3: ( ( rule__FnMods__ModsAssignment ) )
            // InternalFortXTrans.g:476:4: ( rule__FnMods__ModsAssignment )
            {
             before(grammarAccess.getFnModsAccess().getModsAssignment()); 
            // InternalFortXTrans.g:477:4: ( rule__FnMods__ModsAssignment )
            // InternalFortXTrans.g:477:5: rule__FnMods__ModsAssignment
            {
            pushFollow(FOLLOW_4);
            rule__FnMods__ModsAssignment();

            state._fsp--;


            }

             after(grammarAccess.getFnModsAccess().getModsAssignment()); 

            }

            // InternalFortXTrans.g:480:3: ( ( rule__FnMods__ModsAssignment )* )
            // InternalFortXTrans.g:481:4: ( rule__FnMods__ModsAssignment )*
            {
             before(grammarAccess.getFnModsAccess().getModsAssignment()); 
            // InternalFortXTrans.g:482:4: ( rule__FnMods__ModsAssignment )*
            loop2:
            do {
                int alt2=2;
                int LA2_0 = input.LA(1);

                if ( ((LA2_0>=39 && LA2_0<=42)) ) {
                    alt2=1;
                }


                switch (alt2) {
            	case 1 :
            	    // InternalFortXTrans.g:482:5: rule__FnMods__ModsAssignment
            	    {
            	    pushFollow(FOLLOW_4);
            	    rule__FnMods__ModsAssignment();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop2;
                }
            } while (true);

             after(grammarAccess.getFnModsAccess().getModsAssignment()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFnMods"


    // $ANTLR start "entryRuleFnMod"
    // InternalFortXTrans.g:492:1: entryRuleFnMod : ruleFnMod EOF ;
    public final void entryRuleFnMod() throws RecognitionException {
        try {
            // InternalFortXTrans.g:493:1: ( ruleFnMod EOF )
            // InternalFortXTrans.g:494:1: ruleFnMod EOF
            {
             before(grammarAccess.getFnModRule()); 
            pushFollow(FOLLOW_1);
            ruleFnMod();

            state._fsp--;

             after(grammarAccess.getFnModRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleFnMod"


    // $ANTLR start "ruleFnMod"
    // InternalFortXTrans.g:501:1: ruleFnMod : ( ( rule__FnMod__Alternatives ) ) ;
    public final void ruleFnMod() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:505:2: ( ( ( rule__FnMod__Alternatives ) ) )
            // InternalFortXTrans.g:506:2: ( ( rule__FnMod__Alternatives ) )
            {
            // InternalFortXTrans.g:506:2: ( ( rule__FnMod__Alternatives ) )
            // InternalFortXTrans.g:507:3: ( rule__FnMod__Alternatives )
            {
             before(grammarAccess.getFnModAccess().getAlternatives()); 
            // InternalFortXTrans.g:508:3: ( rule__FnMod__Alternatives )
            // InternalFortXTrans.g:508:4: rule__FnMod__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__FnMod__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getFnModAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFnMod"


    // $ANTLR start "entryRuleValParam"
    // InternalFortXTrans.g:517:1: entryRuleValParam : ruleValParam EOF ;
    public final void entryRuleValParam() throws RecognitionException {
        try {
            // InternalFortXTrans.g:518:1: ( ruleValParam EOF )
            // InternalFortXTrans.g:519:1: ruleValParam EOF
            {
             before(grammarAccess.getValParamRule()); 
            pushFollow(FOLLOW_1);
            ruleValParam();

            state._fsp--;

             after(grammarAccess.getValParamRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleValParam"


    // $ANTLR start "ruleValParam"
    // InternalFortXTrans.g:526:1: ruleValParam : ( ( rule__ValParam__Alternatives ) ) ;
    public final void ruleValParam() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:530:2: ( ( ( rule__ValParam__Alternatives ) ) )
            // InternalFortXTrans.g:531:2: ( ( rule__ValParam__Alternatives ) )
            {
            // InternalFortXTrans.g:531:2: ( ( rule__ValParam__Alternatives ) )
            // InternalFortXTrans.g:532:3: ( rule__ValParam__Alternatives )
            {
             before(grammarAccess.getValParamAccess().getAlternatives()); 
            // InternalFortXTrans.g:533:3: ( rule__ValParam__Alternatives )
            // InternalFortXTrans.g:533:4: rule__ValParam__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__ValParam__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getValParamAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleValParam"


    // $ANTLR start "entryRuleParam"
    // InternalFortXTrans.g:542:1: entryRuleParam : ruleParam EOF ;
    public final void entryRuleParam() throws RecognitionException {
        try {
            // InternalFortXTrans.g:543:1: ( ruleParam EOF )
            // InternalFortXTrans.g:544:1: ruleParam EOF
            {
             before(grammarAccess.getParamRule()); 
            pushFollow(FOLLOW_1);
            ruleParam();

            state._fsp--;

             after(grammarAccess.getParamRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleParam"


    // $ANTLR start "ruleParam"
    // InternalFortXTrans.g:551:1: ruleParam : ( ( rule__Param__Group__0 ) ) ;
    public final void ruleParam() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:555:2: ( ( ( rule__Param__Group__0 ) ) )
            // InternalFortXTrans.g:556:2: ( ( rule__Param__Group__0 ) )
            {
            // InternalFortXTrans.g:556:2: ( ( rule__Param__Group__0 ) )
            // InternalFortXTrans.g:557:3: ( rule__Param__Group__0 )
            {
             before(grammarAccess.getParamAccess().getGroup()); 
            // InternalFortXTrans.g:558:3: ( rule__Param__Group__0 )
            // InternalFortXTrans.g:558:4: rule__Param__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Param__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getParamAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleParam"


    // $ANTLR start "entryRuleRetType"
    // InternalFortXTrans.g:567:1: entryRuleRetType : ruleRetType EOF ;
    public final void entryRuleRetType() throws RecognitionException {
        try {
            // InternalFortXTrans.g:568:1: ( ruleRetType EOF )
            // InternalFortXTrans.g:569:1: ruleRetType EOF
            {
             before(grammarAccess.getRetTypeRule()); 
            pushFollow(FOLLOW_1);
            ruleRetType();

            state._fsp--;

             after(grammarAccess.getRetTypeRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleRetType"


    // $ANTLR start "ruleRetType"
    // InternalFortXTrans.g:576:1: ruleRetType : ( ( rule__RetType__Alternatives ) ) ;
    public final void ruleRetType() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:580:2: ( ( ( rule__RetType__Alternatives ) ) )
            // InternalFortXTrans.g:581:2: ( ( rule__RetType__Alternatives ) )
            {
            // InternalFortXTrans.g:581:2: ( ( rule__RetType__Alternatives ) )
            // InternalFortXTrans.g:582:3: ( rule__RetType__Alternatives )
            {
             before(grammarAccess.getRetTypeAccess().getAlternatives()); 
            // InternalFortXTrans.g:583:3: ( rule__RetType__Alternatives )
            // InternalFortXTrans.g:583:4: rule__RetType__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__RetType__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getRetTypeAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleRetType"


    // $ANTLR start "entryRuleTupleType"
    // InternalFortXTrans.g:592:1: entryRuleTupleType : ruleTupleType EOF ;
    public final void entryRuleTupleType() throws RecognitionException {
        try {
            // InternalFortXTrans.g:593:1: ( ruleTupleType EOF )
            // InternalFortXTrans.g:594:1: ruleTupleType EOF
            {
             before(grammarAccess.getTupleTypeRule()); 
            pushFollow(FOLLOW_1);
            ruleTupleType();

            state._fsp--;

             after(grammarAccess.getTupleTypeRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTupleType"


    // $ANTLR start "ruleTupleType"
    // InternalFortXTrans.g:601:1: ruleTupleType : ( ( rule__TupleType__Group__0 ) ) ;
    public final void ruleTupleType() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:605:2: ( ( ( rule__TupleType__Group__0 ) ) )
            // InternalFortXTrans.g:606:2: ( ( rule__TupleType__Group__0 ) )
            {
            // InternalFortXTrans.g:606:2: ( ( rule__TupleType__Group__0 ) )
            // InternalFortXTrans.g:607:3: ( rule__TupleType__Group__0 )
            {
             before(grammarAccess.getTupleTypeAccess().getGroup()); 
            // InternalFortXTrans.g:608:3: ( rule__TupleType__Group__0 )
            // InternalFortXTrans.g:608:4: rule__TupleType__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__TupleType__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getTupleTypeAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTupleType"


    // $ANTLR start "entryRuleFnDecl"
    // InternalFortXTrans.g:617:1: entryRuleFnDecl : ruleFnDecl EOF ;
    public final void entryRuleFnDecl() throws RecognitionException {
        try {
            // InternalFortXTrans.g:618:1: ( ruleFnDecl EOF )
            // InternalFortXTrans.g:619:1: ruleFnDecl EOF
            {
             before(grammarAccess.getFnDeclRule()); 
            pushFollow(FOLLOW_1);
            ruleFnDecl();

            state._fsp--;

             after(grammarAccess.getFnDeclRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleFnDecl"


    // $ANTLR start "ruleFnDecl"
    // InternalFortXTrans.g:626:1: ruleFnDecl : ( ( rule__FnDecl__Group__0 ) ) ;
    public final void ruleFnDecl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:630:2: ( ( ( rule__FnDecl__Group__0 ) ) )
            // InternalFortXTrans.g:631:2: ( ( rule__FnDecl__Group__0 ) )
            {
            // InternalFortXTrans.g:631:2: ( ( rule__FnDecl__Group__0 ) )
            // InternalFortXTrans.g:632:3: ( rule__FnDecl__Group__0 )
            {
             before(grammarAccess.getFnDeclAccess().getGroup()); 
            // InternalFortXTrans.g:633:3: ( rule__FnDecl__Group__0 )
            // InternalFortXTrans.g:633:4: rule__FnDecl__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__FnDecl__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getFnDeclAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFnDecl"


    // $ANTLR start "entryRuleStmnts"
    // InternalFortXTrans.g:642:1: entryRuleStmnts : ruleStmnts EOF ;
    public final void entryRuleStmnts() throws RecognitionException {
        try {
            // InternalFortXTrans.g:643:1: ( ruleStmnts EOF )
            // InternalFortXTrans.g:644:1: ruleStmnts EOF
            {
             before(grammarAccess.getStmntsRule()); 
            pushFollow(FOLLOW_1);
            ruleStmnts();

            state._fsp--;

             after(grammarAccess.getStmntsRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleStmnts"


    // $ANTLR start "ruleStmnts"
    // InternalFortXTrans.g:651:1: ruleStmnts : ( ( rule__Stmnts__Alternatives ) ) ;
    public final void ruleStmnts() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:655:2: ( ( ( rule__Stmnts__Alternatives ) ) )
            // InternalFortXTrans.g:656:2: ( ( rule__Stmnts__Alternatives ) )
            {
            // InternalFortXTrans.g:656:2: ( ( rule__Stmnts__Alternatives ) )
            // InternalFortXTrans.g:657:3: ( rule__Stmnts__Alternatives )
            {
             before(grammarAccess.getStmntsAccess().getAlternatives()); 
            // InternalFortXTrans.g:658:3: ( rule__Stmnts__Alternatives )
            // InternalFortXTrans.g:658:4: rule__Stmnts__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__Stmnts__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getStmntsAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleStmnts"


    // $ANTLR start "entryRuleStmnt"
    // InternalFortXTrans.g:667:1: entryRuleStmnt : ruleStmnt EOF ;
    public final void entryRuleStmnt() throws RecognitionException {
        try {
            // InternalFortXTrans.g:668:1: ( ruleStmnt EOF )
            // InternalFortXTrans.g:669:1: ruleStmnt EOF
            {
             before(grammarAccess.getStmntRule()); 
            pushFollow(FOLLOW_1);
            ruleStmnt();

            state._fsp--;

             after(grammarAccess.getStmntRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleStmnt"


    // $ANTLR start "ruleStmnt"
    // InternalFortXTrans.g:676:1: ruleStmnt : ( ( rule__Stmnt__Alternatives ) ) ;
    public final void ruleStmnt() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:680:2: ( ( ( rule__Stmnt__Alternatives ) ) )
            // InternalFortXTrans.g:681:2: ( ( rule__Stmnt__Alternatives ) )
            {
            // InternalFortXTrans.g:681:2: ( ( rule__Stmnt__Alternatives ) )
            // InternalFortXTrans.g:682:3: ( rule__Stmnt__Alternatives )
            {
             before(grammarAccess.getStmntAccess().getAlternatives()); 
            // InternalFortXTrans.g:683:3: ( rule__Stmnt__Alternatives )
            // InternalFortXTrans.g:683:4: rule__Stmnt__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__Stmnt__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getStmntAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleStmnt"


    // $ANTLR start "entryRuleDelimitedExprList"
    // InternalFortXTrans.g:692:1: entryRuleDelimitedExprList : ruleDelimitedExprList EOF ;
    public final void entryRuleDelimitedExprList() throws RecognitionException {
        try {
            // InternalFortXTrans.g:693:1: ( ruleDelimitedExprList EOF )
            // InternalFortXTrans.g:694:1: ruleDelimitedExprList EOF
            {
             before(grammarAccess.getDelimitedExprListRule()); 
            pushFollow(FOLLOW_1);
            ruleDelimitedExprList();

            state._fsp--;

             after(grammarAccess.getDelimitedExprListRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDelimitedExprList"


    // $ANTLR start "ruleDelimitedExprList"
    // InternalFortXTrans.g:701:1: ruleDelimitedExprList : ( ( rule__DelimitedExprList__Group__0 ) ) ;
    public final void ruleDelimitedExprList() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:705:2: ( ( ( rule__DelimitedExprList__Group__0 ) ) )
            // InternalFortXTrans.g:706:2: ( ( rule__DelimitedExprList__Group__0 ) )
            {
            // InternalFortXTrans.g:706:2: ( ( rule__DelimitedExprList__Group__0 ) )
            // InternalFortXTrans.g:707:3: ( rule__DelimitedExprList__Group__0 )
            {
             before(grammarAccess.getDelimitedExprListAccess().getGroup()); 
            // InternalFortXTrans.g:708:3: ( rule__DelimitedExprList__Group__0 )
            // InternalFortXTrans.g:708:4: rule__DelimitedExprList__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__DelimitedExprList__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getDelimitedExprListAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDelimitedExprList"


    // $ANTLR start "entryRuleExpr"
    // InternalFortXTrans.g:717:1: entryRuleExpr : ruleExpr EOF ;
    public final void entryRuleExpr() throws RecognitionException {
        try {
            // InternalFortXTrans.g:718:1: ( ruleExpr EOF )
            // InternalFortXTrans.g:719:1: ruleExpr EOF
            {
             before(grammarAccess.getExprRule()); 
            pushFollow(FOLLOW_1);
            ruleExpr();

            state._fsp--;

             after(grammarAccess.getExprRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleExpr"


    // $ANTLR start "ruleExpr"
    // InternalFortXTrans.g:726:1: ruleExpr : ( ( rule__Expr__Group__0 ) ) ;
    public final void ruleExpr() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:730:2: ( ( ( rule__Expr__Group__0 ) ) )
            // InternalFortXTrans.g:731:2: ( ( rule__Expr__Group__0 ) )
            {
            // InternalFortXTrans.g:731:2: ( ( rule__Expr__Group__0 ) )
            // InternalFortXTrans.g:732:3: ( rule__Expr__Group__0 )
            {
             before(grammarAccess.getExprAccess().getGroup()); 
            // InternalFortXTrans.g:733:3: ( rule__Expr__Group__0 )
            // InternalFortXTrans.g:733:4: rule__Expr__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Expr__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getExprAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleExpr"


    // $ANTLR start "entryRuleExprFront"
    // InternalFortXTrans.g:742:1: entryRuleExprFront : ruleExprFront EOF ;
    public final void entryRuleExprFront() throws RecognitionException {
        try {
            // InternalFortXTrans.g:743:1: ( ruleExprFront EOF )
            // InternalFortXTrans.g:744:1: ruleExprFront EOF
            {
             before(grammarAccess.getExprFrontRule()); 
            pushFollow(FOLLOW_1);
            ruleExprFront();

            state._fsp--;

             after(grammarAccess.getExprFrontRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleExprFront"


    // $ANTLR start "ruleExprFront"
    // InternalFortXTrans.g:751:1: ruleExprFront : ( ( rule__ExprFront__AddAssignment ) ) ;
    public final void ruleExprFront() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:755:2: ( ( ( rule__ExprFront__AddAssignment ) ) )
            // InternalFortXTrans.g:756:2: ( ( rule__ExprFront__AddAssignment ) )
            {
            // InternalFortXTrans.g:756:2: ( ( rule__ExprFront__AddAssignment ) )
            // InternalFortXTrans.g:757:3: ( rule__ExprFront__AddAssignment )
            {
             before(grammarAccess.getExprFrontAccess().getAddAssignment()); 
            // InternalFortXTrans.g:758:3: ( rule__ExprFront__AddAssignment )
            // InternalFortXTrans.g:758:4: rule__ExprFront__AddAssignment
            {
            pushFollow(FOLLOW_2);
            rule__ExprFront__AddAssignment();

            state._fsp--;


            }

             after(grammarAccess.getExprFrontAccess().getAddAssignment()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleExprFront"


    // $ANTLR start "entryRuleCommaExpr"
    // InternalFortXTrans.g:767:1: entryRuleCommaExpr : ruleCommaExpr EOF ;
    public final void entryRuleCommaExpr() throws RecognitionException {
        try {
            // InternalFortXTrans.g:768:1: ( ruleCommaExpr EOF )
            // InternalFortXTrans.g:769:1: ruleCommaExpr EOF
            {
             before(grammarAccess.getCommaExprRule()); 
            pushFollow(FOLLOW_1);
            ruleCommaExpr();

            state._fsp--;

             after(grammarAccess.getCommaExprRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleCommaExpr"


    // $ANTLR start "ruleCommaExpr"
    // InternalFortXTrans.g:776:1: ruleCommaExpr : ( ( rule__CommaExpr__Group__0 ) ) ;
    public final void ruleCommaExpr() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:780:2: ( ( ( rule__CommaExpr__Group__0 ) ) )
            // InternalFortXTrans.g:781:2: ( ( rule__CommaExpr__Group__0 ) )
            {
            // InternalFortXTrans.g:781:2: ( ( rule__CommaExpr__Group__0 ) )
            // InternalFortXTrans.g:782:3: ( rule__CommaExpr__Group__0 )
            {
             before(grammarAccess.getCommaExprAccess().getGroup()); 
            // InternalFortXTrans.g:783:3: ( rule__CommaExpr__Group__0 )
            // InternalFortXTrans.g:783:4: rule__CommaExpr__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__CommaExpr__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getCommaExprAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleCommaExpr"


    // $ANTLR start "entryRuleAddExpr"
    // InternalFortXTrans.g:792:1: entryRuleAddExpr : ruleAddExpr EOF ;
    public final void entryRuleAddExpr() throws RecognitionException {
        try {
            // InternalFortXTrans.g:793:1: ( ruleAddExpr EOF )
            // InternalFortXTrans.g:794:1: ruleAddExpr EOF
            {
             before(grammarAccess.getAddExprRule()); 
            pushFollow(FOLLOW_1);
            ruleAddExpr();

            state._fsp--;

             after(grammarAccess.getAddExprRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAddExpr"


    // $ANTLR start "ruleAddExpr"
    // InternalFortXTrans.g:801:1: ruleAddExpr : ( ( rule__AddExpr__Group__0 ) ) ;
    public final void ruleAddExpr() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:805:2: ( ( ( rule__AddExpr__Group__0 ) ) )
            // InternalFortXTrans.g:806:2: ( ( rule__AddExpr__Group__0 ) )
            {
            // InternalFortXTrans.g:806:2: ( ( rule__AddExpr__Group__0 ) )
            // InternalFortXTrans.g:807:3: ( rule__AddExpr__Group__0 )
            {
             before(grammarAccess.getAddExprAccess().getGroup()); 
            // InternalFortXTrans.g:808:3: ( rule__AddExpr__Group__0 )
            // InternalFortXTrans.g:808:4: rule__AddExpr__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__AddExpr__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getAddExprAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAddExpr"


    // $ANTLR start "entryRuleSubExpr"
    // InternalFortXTrans.g:817:1: entryRuleSubExpr : ruleSubExpr EOF ;
    public final void entryRuleSubExpr() throws RecognitionException {
        try {
            // InternalFortXTrans.g:818:1: ( ruleSubExpr EOF )
            // InternalFortXTrans.g:819:1: ruleSubExpr EOF
            {
             before(grammarAccess.getSubExprRule()); 
            pushFollow(FOLLOW_1);
            ruleSubExpr();

            state._fsp--;

             after(grammarAccess.getSubExprRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSubExpr"


    // $ANTLR start "ruleSubExpr"
    // InternalFortXTrans.g:826:1: ruleSubExpr : ( ( rule__SubExpr__Group__0 ) ) ;
    public final void ruleSubExpr() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:830:2: ( ( ( rule__SubExpr__Group__0 ) ) )
            // InternalFortXTrans.g:831:2: ( ( rule__SubExpr__Group__0 ) )
            {
            // InternalFortXTrans.g:831:2: ( ( rule__SubExpr__Group__0 ) )
            // InternalFortXTrans.g:832:3: ( rule__SubExpr__Group__0 )
            {
             before(grammarAccess.getSubExprAccess().getGroup()); 
            // InternalFortXTrans.g:833:3: ( rule__SubExpr__Group__0 )
            // InternalFortXTrans.g:833:4: rule__SubExpr__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__SubExpr__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getSubExprAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSubExpr"


    // $ANTLR start "entryRuleDivExpr"
    // InternalFortXTrans.g:842:1: entryRuleDivExpr : ruleDivExpr EOF ;
    public final void entryRuleDivExpr() throws RecognitionException {
        try {
            // InternalFortXTrans.g:843:1: ( ruleDivExpr EOF )
            // InternalFortXTrans.g:844:1: ruleDivExpr EOF
            {
             before(grammarAccess.getDivExprRule()); 
            pushFollow(FOLLOW_1);
            ruleDivExpr();

            state._fsp--;

             after(grammarAccess.getDivExprRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDivExpr"


    // $ANTLR start "ruleDivExpr"
    // InternalFortXTrans.g:851:1: ruleDivExpr : ( ( rule__DivExpr__Group__0 ) ) ;
    public final void ruleDivExpr() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:855:2: ( ( ( rule__DivExpr__Group__0 ) ) )
            // InternalFortXTrans.g:856:2: ( ( rule__DivExpr__Group__0 ) )
            {
            // InternalFortXTrans.g:856:2: ( ( rule__DivExpr__Group__0 ) )
            // InternalFortXTrans.g:857:3: ( rule__DivExpr__Group__0 )
            {
             before(grammarAccess.getDivExprAccess().getGroup()); 
            // InternalFortXTrans.g:858:3: ( rule__DivExpr__Group__0 )
            // InternalFortXTrans.g:858:4: rule__DivExpr__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__DivExpr__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getDivExprAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDivExpr"


    // $ANTLR start "entryRuleMultExpr"
    // InternalFortXTrans.g:867:1: entryRuleMultExpr : ruleMultExpr EOF ;
    public final void entryRuleMultExpr() throws RecognitionException {
        try {
            // InternalFortXTrans.g:868:1: ( ruleMultExpr EOF )
            // InternalFortXTrans.g:869:1: ruleMultExpr EOF
            {
             before(grammarAccess.getMultExprRule()); 
            pushFollow(FOLLOW_1);
            ruleMultExpr();

            state._fsp--;

             after(grammarAccess.getMultExprRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleMultExpr"


    // $ANTLR start "ruleMultExpr"
    // InternalFortXTrans.g:876:1: ruleMultExpr : ( ( rule__MultExpr__Group__0 ) ) ;
    public final void ruleMultExpr() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:880:2: ( ( ( rule__MultExpr__Group__0 ) ) )
            // InternalFortXTrans.g:881:2: ( ( rule__MultExpr__Group__0 ) )
            {
            // InternalFortXTrans.g:881:2: ( ( rule__MultExpr__Group__0 ) )
            // InternalFortXTrans.g:882:3: ( rule__MultExpr__Group__0 )
            {
             before(grammarAccess.getMultExprAccess().getGroup()); 
            // InternalFortXTrans.g:883:3: ( rule__MultExpr__Group__0 )
            // InternalFortXTrans.g:883:4: rule__MultExpr__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__MultExpr__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getMultExprAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleMultExpr"


    // $ANTLR start "entryRulePrimary"
    // InternalFortXTrans.g:892:1: entryRulePrimary : rulePrimary EOF ;
    public final void entryRulePrimary() throws RecognitionException {
        try {
            // InternalFortXTrans.g:893:1: ( rulePrimary EOF )
            // InternalFortXTrans.g:894:1: rulePrimary EOF
            {
             before(grammarAccess.getPrimaryRule()); 
            pushFollow(FOLLOW_1);
            rulePrimary();

            state._fsp--;

             after(grammarAccess.getPrimaryRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulePrimary"


    // $ANTLR start "rulePrimary"
    // InternalFortXTrans.g:901:1: rulePrimary : ( ( rule__Primary__Alternatives ) ) ;
    public final void rulePrimary() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:905:2: ( ( ( rule__Primary__Alternatives ) ) )
            // InternalFortXTrans.g:906:2: ( ( rule__Primary__Alternatives ) )
            {
            // InternalFortXTrans.g:906:2: ( ( rule__Primary__Alternatives ) )
            // InternalFortXTrans.g:907:3: ( rule__Primary__Alternatives )
            {
             before(grammarAccess.getPrimaryAccess().getAlternatives()); 
            // InternalFortXTrans.g:908:3: ( rule__Primary__Alternatives )
            // InternalFortXTrans.g:908:4: rule__Primary__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__Primary__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getPrimaryAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePrimary"


    // $ANTLR start "entryRuleExprTail"
    // InternalFortXTrans.g:917:1: entryRuleExprTail : ruleExprTail EOF ;
    public final void entryRuleExprTail() throws RecognitionException {
        try {
            // InternalFortXTrans.g:918:1: ( ruleExprTail EOF )
            // InternalFortXTrans.g:919:1: ruleExprTail EOF
            {
             before(grammarAccess.getExprTailRule()); 
            pushFollow(FOLLOW_1);
            ruleExprTail();

            state._fsp--;

             after(grammarAccess.getExprTailRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleExprTail"


    // $ANTLR start "ruleExprTail"
    // InternalFortXTrans.g:926:1: ruleExprTail : ( ( rule__ExprTail__Group__0 ) ) ;
    public final void ruleExprTail() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:930:2: ( ( ( rule__ExprTail__Group__0 ) ) )
            // InternalFortXTrans.g:931:2: ( ( rule__ExprTail__Group__0 ) )
            {
            // InternalFortXTrans.g:931:2: ( ( rule__ExprTail__Group__0 ) )
            // InternalFortXTrans.g:932:3: ( rule__ExprTail__Group__0 )
            {
             before(grammarAccess.getExprTailAccess().getGroup()); 
            // InternalFortXTrans.g:933:3: ( rule__ExprTail__Group__0 )
            // InternalFortXTrans.g:933:4: rule__ExprTail__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__ExprTail__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getExprTailAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleExprTail"


    // $ANTLR start "entryRuleDelimitedExpr"
    // InternalFortXTrans.g:942:1: entryRuleDelimitedExpr : ruleDelimitedExpr EOF ;
    public final void entryRuleDelimitedExpr() throws RecognitionException {
        try {
            // InternalFortXTrans.g:943:1: ( ruleDelimitedExpr EOF )
            // InternalFortXTrans.g:944:1: ruleDelimitedExpr EOF
            {
             before(grammarAccess.getDelimitedExprRule()); 
            pushFollow(FOLLOW_1);
            ruleDelimitedExpr();

            state._fsp--;

             after(grammarAccess.getDelimitedExprRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDelimitedExpr"


    // $ANTLR start "ruleDelimitedExpr"
    // InternalFortXTrans.g:951:1: ruleDelimitedExpr : ( ( rule__DelimitedExpr__Alternatives ) ) ;
    public final void ruleDelimitedExpr() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:955:2: ( ( ( rule__DelimitedExpr__Alternatives ) ) )
            // InternalFortXTrans.g:956:2: ( ( rule__DelimitedExpr__Alternatives ) )
            {
            // InternalFortXTrans.g:956:2: ( ( rule__DelimitedExpr__Alternatives ) )
            // InternalFortXTrans.g:957:3: ( rule__DelimitedExpr__Alternatives )
            {
             before(grammarAccess.getDelimitedExprAccess().getAlternatives()); 
            // InternalFortXTrans.g:958:3: ( rule__DelimitedExpr__Alternatives )
            // InternalFortXTrans.g:958:4: rule__DelimitedExpr__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__DelimitedExpr__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getDelimitedExprAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDelimitedExpr"


    // $ANTLR start "entryRuleElifs"
    // InternalFortXTrans.g:967:1: entryRuleElifs : ruleElifs EOF ;
    public final void entryRuleElifs() throws RecognitionException {
        try {
            // InternalFortXTrans.g:968:1: ( ruleElifs EOF )
            // InternalFortXTrans.g:969:1: ruleElifs EOF
            {
             before(grammarAccess.getElifsRule()); 
            pushFollow(FOLLOW_1);
            ruleElifs();

            state._fsp--;

             after(grammarAccess.getElifsRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleElifs"


    // $ANTLR start "ruleElifs"
    // InternalFortXTrans.g:976:1: ruleElifs : ( ( rule__Elifs__Group__0 ) ) ;
    public final void ruleElifs() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:980:2: ( ( ( rule__Elifs__Group__0 ) ) )
            // InternalFortXTrans.g:981:2: ( ( rule__Elifs__Group__0 ) )
            {
            // InternalFortXTrans.g:981:2: ( ( rule__Elifs__Group__0 ) )
            // InternalFortXTrans.g:982:3: ( rule__Elifs__Group__0 )
            {
             before(grammarAccess.getElifsAccess().getGroup()); 
            // InternalFortXTrans.g:983:3: ( rule__Elifs__Group__0 )
            // InternalFortXTrans.g:983:4: rule__Elifs__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Elifs__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getElifsAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleElifs"


    // $ANTLR start "entryRuleElif"
    // InternalFortXTrans.g:992:1: entryRuleElif : ruleElif EOF ;
    public final void entryRuleElif() throws RecognitionException {
        try {
            // InternalFortXTrans.g:993:1: ( ruleElif EOF )
            // InternalFortXTrans.g:994:1: ruleElif EOF
            {
             before(grammarAccess.getElifRule()); 
            pushFollow(FOLLOW_1);
            ruleElif();

            state._fsp--;

             after(grammarAccess.getElifRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleElif"


    // $ANTLR start "ruleElif"
    // InternalFortXTrans.g:1001:1: ruleElif : ( ( rule__Elif__Group__0 ) ) ;
    public final void ruleElif() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1005:2: ( ( ( rule__Elif__Group__0 ) ) )
            // InternalFortXTrans.g:1006:2: ( ( rule__Elif__Group__0 ) )
            {
            // InternalFortXTrans.g:1006:2: ( ( rule__Elif__Group__0 ) )
            // InternalFortXTrans.g:1007:3: ( rule__Elif__Group__0 )
            {
             before(grammarAccess.getElifAccess().getGroup()); 
            // InternalFortXTrans.g:1008:3: ( rule__Elif__Group__0 )
            // InternalFortXTrans.g:1008:4: rule__Elif__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Elif__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getElifAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleElif"


    // $ANTLR start "entryRuleElse"
    // InternalFortXTrans.g:1017:1: entryRuleElse : ruleElse EOF ;
    public final void entryRuleElse() throws RecognitionException {
        try {
            // InternalFortXTrans.g:1018:1: ( ruleElse EOF )
            // InternalFortXTrans.g:1019:1: ruleElse EOF
            {
             before(grammarAccess.getElseRule()); 
            pushFollow(FOLLOW_1);
            ruleElse();

            state._fsp--;

             after(grammarAccess.getElseRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleElse"


    // $ANTLR start "ruleElse"
    // InternalFortXTrans.g:1026:1: ruleElse : ( ( rule__Else__Group__0 ) ) ;
    public final void ruleElse() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1030:2: ( ( ( rule__Else__Group__0 ) ) )
            // InternalFortXTrans.g:1031:2: ( ( rule__Else__Group__0 ) )
            {
            // InternalFortXTrans.g:1031:2: ( ( rule__Else__Group__0 ) )
            // InternalFortXTrans.g:1032:3: ( rule__Else__Group__0 )
            {
             before(grammarAccess.getElseAccess().getGroup()); 
            // InternalFortXTrans.g:1033:3: ( rule__Else__Group__0 )
            // InternalFortXTrans.g:1033:4: rule__Else__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Else__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getElseAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleElse"


    // $ANTLR start "entryRuleGenerators"
    // InternalFortXTrans.g:1042:1: entryRuleGenerators : ruleGenerators EOF ;
    public final void entryRuleGenerators() throws RecognitionException {
        try {
            // InternalFortXTrans.g:1043:1: ( ruleGenerators EOF )
            // InternalFortXTrans.g:1044:1: ruleGenerators EOF
            {
             before(grammarAccess.getGeneratorsRule()); 
            pushFollow(FOLLOW_1);
            ruleGenerators();

            state._fsp--;

             after(grammarAccess.getGeneratorsRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleGenerators"


    // $ANTLR start "ruleGenerators"
    // InternalFortXTrans.g:1051:1: ruleGenerators : ( ( rule__Generators__Group__0 ) ) ;
    public final void ruleGenerators() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1055:2: ( ( ( rule__Generators__Group__0 ) ) )
            // InternalFortXTrans.g:1056:2: ( ( rule__Generators__Group__0 ) )
            {
            // InternalFortXTrans.g:1056:2: ( ( rule__Generators__Group__0 ) )
            // InternalFortXTrans.g:1057:3: ( rule__Generators__Group__0 )
            {
             before(grammarAccess.getGeneratorsAccess().getGroup()); 
            // InternalFortXTrans.g:1058:3: ( rule__Generators__Group__0 )
            // InternalFortXTrans.g:1058:4: rule__Generators__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Generators__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getGeneratorsAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleGenerators"


    // $ANTLR start "entryRuleBinding"
    // InternalFortXTrans.g:1067:1: entryRuleBinding : ruleBinding EOF ;
    public final void entryRuleBinding() throws RecognitionException {
        try {
            // InternalFortXTrans.g:1068:1: ( ruleBinding EOF )
            // InternalFortXTrans.g:1069:1: ruleBinding EOF
            {
             before(grammarAccess.getBindingRule()); 
            pushFollow(FOLLOW_1);
            ruleBinding();

            state._fsp--;

             after(grammarAccess.getBindingRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleBinding"


    // $ANTLR start "ruleBinding"
    // InternalFortXTrans.g:1076:1: ruleBinding : ( ( rule__Binding__Alternatives ) ) ;
    public final void ruleBinding() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1080:2: ( ( ( rule__Binding__Alternatives ) ) )
            // InternalFortXTrans.g:1081:2: ( ( rule__Binding__Alternatives ) )
            {
            // InternalFortXTrans.g:1081:2: ( ( rule__Binding__Alternatives ) )
            // InternalFortXTrans.g:1082:3: ( rule__Binding__Alternatives )
            {
             before(grammarAccess.getBindingAccess().getAlternatives()); 
            // InternalFortXTrans.g:1083:3: ( rule__Binding__Alternatives )
            // InternalFortXTrans.g:1083:4: rule__Binding__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__Binding__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getBindingAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleBinding"


    // $ANTLR start "entryRuleGenClause"
    // InternalFortXTrans.g:1092:1: entryRuleGenClause : ruleGenClause EOF ;
    public final void entryRuleGenClause() throws RecognitionException {
        try {
            // InternalFortXTrans.g:1093:1: ( ruleGenClause EOF )
            // InternalFortXTrans.g:1094:1: ruleGenClause EOF
            {
             before(grammarAccess.getGenClauseRule()); 
            pushFollow(FOLLOW_1);
            ruleGenClause();

            state._fsp--;

             after(grammarAccess.getGenClauseRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleGenClause"


    // $ANTLR start "ruleGenClause"
    // InternalFortXTrans.g:1101:1: ruleGenClause : ( ( rule__GenClause__Alternatives ) ) ;
    public final void ruleGenClause() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1105:2: ( ( ( rule__GenClause__Alternatives ) ) )
            // InternalFortXTrans.g:1106:2: ( ( rule__GenClause__Alternatives ) )
            {
            // InternalFortXTrans.g:1106:2: ( ( rule__GenClause__Alternatives ) )
            // InternalFortXTrans.g:1107:3: ( rule__GenClause__Alternatives )
            {
             before(grammarAccess.getGenClauseAccess().getAlternatives()); 
            // InternalFortXTrans.g:1108:3: ( rule__GenClause__Alternatives )
            // InternalFortXTrans.g:1108:4: rule__GenClause__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__GenClause__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getGenClauseAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleGenClause"


    // $ANTLR start "entryRuleBlockElems"
    // InternalFortXTrans.g:1117:1: entryRuleBlockElems : ruleBlockElems EOF ;
    public final void entryRuleBlockElems() throws RecognitionException {
        try {
            // InternalFortXTrans.g:1118:1: ( ruleBlockElems EOF )
            // InternalFortXTrans.g:1119:1: ruleBlockElems EOF
            {
             before(grammarAccess.getBlockElemsRule()); 
            pushFollow(FOLLOW_1);
            ruleBlockElems();

            state._fsp--;

             after(grammarAccess.getBlockElemsRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleBlockElems"


    // $ANTLR start "ruleBlockElems"
    // InternalFortXTrans.g:1126:1: ruleBlockElems : ( ( rule__BlockElems__Group__0 ) ) ;
    public final void ruleBlockElems() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1130:2: ( ( ( rule__BlockElems__Group__0 ) ) )
            // InternalFortXTrans.g:1131:2: ( ( rule__BlockElems__Group__0 ) )
            {
            // InternalFortXTrans.g:1131:2: ( ( rule__BlockElems__Group__0 ) )
            // InternalFortXTrans.g:1132:3: ( rule__BlockElems__Group__0 )
            {
             before(grammarAccess.getBlockElemsAccess().getGroup()); 
            // InternalFortXTrans.g:1133:3: ( rule__BlockElems__Group__0 )
            // InternalFortXTrans.g:1133:4: rule__BlockElems__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__BlockElems__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getBlockElemsAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleBlockElems"


    // $ANTLR start "entryRuleBlockElem"
    // InternalFortXTrans.g:1142:1: entryRuleBlockElem : ruleBlockElem EOF ;
    public final void entryRuleBlockElem() throws RecognitionException {
        try {
            // InternalFortXTrans.g:1143:1: ( ruleBlockElem EOF )
            // InternalFortXTrans.g:1144:1: ruleBlockElem EOF
            {
             before(grammarAccess.getBlockElemRule()); 
            pushFollow(FOLLOW_1);
            ruleBlockElem();

            state._fsp--;

             after(grammarAccess.getBlockElemRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleBlockElem"


    // $ANTLR start "ruleBlockElem"
    // InternalFortXTrans.g:1151:1: ruleBlockElem : ( ( rule__BlockElem__StAssignment ) ) ;
    public final void ruleBlockElem() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1155:2: ( ( ( rule__BlockElem__StAssignment ) ) )
            // InternalFortXTrans.g:1156:2: ( ( rule__BlockElem__StAssignment ) )
            {
            // InternalFortXTrans.g:1156:2: ( ( rule__BlockElem__StAssignment ) )
            // InternalFortXTrans.g:1157:3: ( rule__BlockElem__StAssignment )
            {
             before(grammarAccess.getBlockElemAccess().getStAssignment()); 
            // InternalFortXTrans.g:1158:3: ( rule__BlockElem__StAssignment )
            // InternalFortXTrans.g:1158:4: rule__BlockElem__StAssignment
            {
            pushFollow(FOLLOW_2);
            rule__BlockElem__StAssignment();

            state._fsp--;


            }

             after(grammarAccess.getBlockElemAccess().getStAssignment()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleBlockElem"


    // $ANTLR start "entryRuleDo"
    // InternalFortXTrans.g:1167:1: entryRuleDo : ruleDo EOF ;
    public final void entryRuleDo() throws RecognitionException {
        try {
            // InternalFortXTrans.g:1168:1: ( ruleDo EOF )
            // InternalFortXTrans.g:1169:1: ruleDo EOF
            {
             before(grammarAccess.getDoRule()); 
            pushFollow(FOLLOW_1);
            ruleDo();

            state._fsp--;

             after(grammarAccess.getDoRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDo"


    // $ANTLR start "ruleDo"
    // InternalFortXTrans.g:1176:1: ruleDo : ( ( rule__Do__Group__0 ) ) ;
    public final void ruleDo() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1180:2: ( ( ( rule__Do__Group__0 ) ) )
            // InternalFortXTrans.g:1181:2: ( ( rule__Do__Group__0 ) )
            {
            // InternalFortXTrans.g:1181:2: ( ( rule__Do__Group__0 ) )
            // InternalFortXTrans.g:1182:3: ( rule__Do__Group__0 )
            {
             before(grammarAccess.getDoAccess().getGroup()); 
            // InternalFortXTrans.g:1183:3: ( rule__Do__Group__0 )
            // InternalFortXTrans.g:1183:4: rule__Do__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Do__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getDoAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDo"


    // $ANTLR start "entryRuleDoFront"
    // InternalFortXTrans.g:1192:1: entryRuleDoFront : ruleDoFront EOF ;
    public final void entryRuleDoFront() throws RecognitionException {
        try {
            // InternalFortXTrans.g:1193:1: ( ruleDoFront EOF )
            // InternalFortXTrans.g:1194:1: ruleDoFront EOF
            {
             before(grammarAccess.getDoFrontRule()); 
            pushFollow(FOLLOW_1);
            ruleDoFront();

            state._fsp--;

             after(grammarAccess.getDoFrontRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDoFront"


    // $ANTLR start "ruleDoFront"
    // InternalFortXTrans.g:1201:1: ruleDoFront : ( ( rule__DoFront__Group__0 ) ) ;
    public final void ruleDoFront() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1205:2: ( ( ( rule__DoFront__Group__0 ) ) )
            // InternalFortXTrans.g:1206:2: ( ( rule__DoFront__Group__0 ) )
            {
            // InternalFortXTrans.g:1206:2: ( ( rule__DoFront__Group__0 ) )
            // InternalFortXTrans.g:1207:3: ( rule__DoFront__Group__0 )
            {
             before(grammarAccess.getDoFrontAccess().getGroup()); 
            // InternalFortXTrans.g:1208:3: ( rule__DoFront__Group__0 )
            // InternalFortXTrans.g:1208:4: rule__DoFront__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__DoFront__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getDoFrontAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDoFront"


    // $ANTLR start "entryRuleIdOrTuple"
    // InternalFortXTrans.g:1217:1: entryRuleIdOrTuple : ruleIdOrTuple EOF ;
    public final void entryRuleIdOrTuple() throws RecognitionException {
        try {
            // InternalFortXTrans.g:1218:1: ( ruleIdOrTuple EOF )
            // InternalFortXTrans.g:1219:1: ruleIdOrTuple EOF
            {
             before(grammarAccess.getIdOrTupleRule()); 
            pushFollow(FOLLOW_1);
            ruleIdOrTuple();

            state._fsp--;

             after(grammarAccess.getIdOrTupleRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleIdOrTuple"


    // $ANTLR start "ruleIdOrTuple"
    // InternalFortXTrans.g:1226:1: ruleIdOrTuple : ( ( rule__IdOrTuple__Alternatives ) ) ;
    public final void ruleIdOrTuple() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1230:2: ( ( ( rule__IdOrTuple__Alternatives ) ) )
            // InternalFortXTrans.g:1231:2: ( ( rule__IdOrTuple__Alternatives ) )
            {
            // InternalFortXTrans.g:1231:2: ( ( rule__IdOrTuple__Alternatives ) )
            // InternalFortXTrans.g:1232:3: ( rule__IdOrTuple__Alternatives )
            {
             before(grammarAccess.getIdOrTupleAccess().getAlternatives()); 
            // InternalFortXTrans.g:1233:3: ( rule__IdOrTuple__Alternatives )
            // InternalFortXTrans.g:1233:4: rule__IdOrTuple__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__IdOrTuple__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getIdOrTupleAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleIdOrTuple"


    // $ANTLR start "entryRuleBindId"
    // InternalFortXTrans.g:1242:1: entryRuleBindId : ruleBindId EOF ;
    public final void entryRuleBindId() throws RecognitionException {
        try {
            // InternalFortXTrans.g:1243:1: ( ruleBindId EOF )
            // InternalFortXTrans.g:1244:1: ruleBindId EOF
            {
             before(grammarAccess.getBindIdRule()); 
            pushFollow(FOLLOW_1);
            ruleBindId();

            state._fsp--;

             after(grammarAccess.getBindIdRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleBindId"


    // $ANTLR start "ruleBindId"
    // InternalFortXTrans.g:1251:1: ruleBindId : ( ( rule__BindId__Alternatives ) ) ;
    public final void ruleBindId() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1255:2: ( ( ( rule__BindId__Alternatives ) ) )
            // InternalFortXTrans.g:1256:2: ( ( rule__BindId__Alternatives ) )
            {
            // InternalFortXTrans.g:1256:2: ( ( rule__BindId__Alternatives ) )
            // InternalFortXTrans.g:1257:3: ( rule__BindId__Alternatives )
            {
             before(grammarAccess.getBindIdAccess().getAlternatives()); 
            // InternalFortXTrans.g:1258:3: ( rule__BindId__Alternatives )
            // InternalFortXTrans.g:1258:4: rule__BindId__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__BindId__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getBindIdAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleBindId"


    // $ANTLR start "entryRuleIsType"
    // InternalFortXTrans.g:1267:1: entryRuleIsType : ruleIsType EOF ;
    public final void entryRuleIsType() throws RecognitionException {
        try {
            // InternalFortXTrans.g:1268:1: ( ruleIsType EOF )
            // InternalFortXTrans.g:1269:1: ruleIsType EOF
            {
             before(grammarAccess.getIsTypeRule()); 
            pushFollow(FOLLOW_1);
            ruleIsType();

            state._fsp--;

             after(grammarAccess.getIsTypeRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleIsType"


    // $ANTLR start "ruleIsType"
    // InternalFortXTrans.g:1276:1: ruleIsType : ( ( rule__IsType__Group__0 ) ) ;
    public final void ruleIsType() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1280:2: ( ( ( rule__IsType__Group__0 ) ) )
            // InternalFortXTrans.g:1281:2: ( ( rule__IsType__Group__0 ) )
            {
            // InternalFortXTrans.g:1281:2: ( ( rule__IsType__Group__0 ) )
            // InternalFortXTrans.g:1282:3: ( rule__IsType__Group__0 )
            {
             before(grammarAccess.getIsTypeAccess().getGroup()); 
            // InternalFortXTrans.g:1283:3: ( rule__IsType__Group__0 )
            // InternalFortXTrans.g:1283:4: rule__IsType__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__IsType__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getIsTypeAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleIsType"


    // $ANTLR start "entryRuleFieldDecl"
    // InternalFortXTrans.g:1292:1: entryRuleFieldDecl : ruleFieldDecl EOF ;
    public final void entryRuleFieldDecl() throws RecognitionException {
        try {
            // InternalFortXTrans.g:1293:1: ( ruleFieldDecl EOF )
            // InternalFortXTrans.g:1294:1: ruleFieldDecl EOF
            {
             before(grammarAccess.getFieldDeclRule()); 
            pushFollow(FOLLOW_1);
            ruleFieldDecl();

            state._fsp--;

             after(grammarAccess.getFieldDeclRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleFieldDecl"


    // $ANTLR start "ruleFieldDecl"
    // InternalFortXTrans.g:1301:1: ruleFieldDecl : ( ( rule__FieldDecl__Alternatives ) ) ;
    public final void ruleFieldDecl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1305:2: ( ( ( rule__FieldDecl__Alternatives ) ) )
            // InternalFortXTrans.g:1306:2: ( ( rule__FieldDecl__Alternatives ) )
            {
            // InternalFortXTrans.g:1306:2: ( ( rule__FieldDecl__Alternatives ) )
            // InternalFortXTrans.g:1307:3: ( rule__FieldDecl__Alternatives )
            {
             before(grammarAccess.getFieldDeclAccess().getAlternatives()); 
            // InternalFortXTrans.g:1308:3: ( rule__FieldDecl__Alternatives )
            // InternalFortXTrans.g:1308:4: rule__FieldDecl__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__FieldDecl__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getFieldDeclAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFieldDecl"


    // $ANTLR start "entryRuleNoNewlineVarWTypes"
    // InternalFortXTrans.g:1317:1: entryRuleNoNewlineVarWTypes : ruleNoNewlineVarWTypes EOF ;
    public final void entryRuleNoNewlineVarWTypes() throws RecognitionException {
        try {
            // InternalFortXTrans.g:1318:1: ( ruleNoNewlineVarWTypes EOF )
            // InternalFortXTrans.g:1319:1: ruleNoNewlineVarWTypes EOF
            {
             before(grammarAccess.getNoNewlineVarWTypesRule()); 
            pushFollow(FOLLOW_1);
            ruleNoNewlineVarWTypes();

            state._fsp--;

             after(grammarAccess.getNoNewlineVarWTypesRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleNoNewlineVarWTypes"


    // $ANTLR start "ruleNoNewlineVarWTypes"
    // InternalFortXTrans.g:1326:1: ruleNoNewlineVarWTypes : ( ( rule__NoNewlineVarWTypes__Alternatives ) ) ;
    public final void ruleNoNewlineVarWTypes() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1330:2: ( ( ( rule__NoNewlineVarWTypes__Alternatives ) ) )
            // InternalFortXTrans.g:1331:2: ( ( rule__NoNewlineVarWTypes__Alternatives ) )
            {
            // InternalFortXTrans.g:1331:2: ( ( rule__NoNewlineVarWTypes__Alternatives ) )
            // InternalFortXTrans.g:1332:3: ( rule__NoNewlineVarWTypes__Alternatives )
            {
             before(grammarAccess.getNoNewlineVarWTypesAccess().getAlternatives()); 
            // InternalFortXTrans.g:1333:3: ( rule__NoNewlineVarWTypes__Alternatives )
            // InternalFortXTrans.g:1333:4: rule__NoNewlineVarWTypes__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__NoNewlineVarWTypes__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getNoNewlineVarWTypesAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleNoNewlineVarWTypes"


    // $ANTLR start "entryRuleNoNewlineVarWType"
    // InternalFortXTrans.g:1342:1: entryRuleNoNewlineVarWType : ruleNoNewlineVarWType EOF ;
    public final void entryRuleNoNewlineVarWType() throws RecognitionException {
        try {
            // InternalFortXTrans.g:1343:1: ( ruleNoNewlineVarWType EOF )
            // InternalFortXTrans.g:1344:1: ruleNoNewlineVarWType EOF
            {
             before(grammarAccess.getNoNewlineVarWTypeRule()); 
            pushFollow(FOLLOW_1);
            ruleNoNewlineVarWType();

            state._fsp--;

             after(grammarAccess.getNoNewlineVarWTypeRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleNoNewlineVarWType"


    // $ANTLR start "ruleNoNewlineVarWType"
    // InternalFortXTrans.g:1351:1: ruleNoNewlineVarWType : ( ( rule__NoNewlineVarWType__Group__0 ) ) ;
    public final void ruleNoNewlineVarWType() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1355:2: ( ( ( rule__NoNewlineVarWType__Group__0 ) ) )
            // InternalFortXTrans.g:1356:2: ( ( rule__NoNewlineVarWType__Group__0 ) )
            {
            // InternalFortXTrans.g:1356:2: ( ( rule__NoNewlineVarWType__Group__0 ) )
            // InternalFortXTrans.g:1357:3: ( rule__NoNewlineVarWType__Group__0 )
            {
             before(grammarAccess.getNoNewlineVarWTypeAccess().getGroup()); 
            // InternalFortXTrans.g:1358:3: ( rule__NoNewlineVarWType__Group__0 )
            // InternalFortXTrans.g:1358:4: rule__NoNewlineVarWType__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__NoNewlineVarWType__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getNoNewlineVarWTypeAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleNoNewlineVarWType"


    // $ANTLR start "entryRuleInitVal"
    // InternalFortXTrans.g:1367:1: entryRuleInitVal : ruleInitVal EOF ;
    public final void entryRuleInitVal() throws RecognitionException {
        try {
            // InternalFortXTrans.g:1368:1: ( ruleInitVal EOF )
            // InternalFortXTrans.g:1369:1: ruleInitVal EOF
            {
             before(grammarAccess.getInitValRule()); 
            pushFollow(FOLLOW_1);
            ruleInitVal();

            state._fsp--;

             after(grammarAccess.getInitValRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleInitVal"


    // $ANTLR start "ruleInitVal"
    // InternalFortXTrans.g:1376:1: ruleInitVal : ( ( rule__InitVal__Alternatives ) ) ;
    public final void ruleInitVal() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1380:2: ( ( ( rule__InitVal__Alternatives ) ) )
            // InternalFortXTrans.g:1381:2: ( ( rule__InitVal__Alternatives ) )
            {
            // InternalFortXTrans.g:1381:2: ( ( rule__InitVal__Alternatives ) )
            // InternalFortXTrans.g:1382:3: ( rule__InitVal__Alternatives )
            {
             before(grammarAccess.getInitValAccess().getAlternatives()); 
            // InternalFortXTrans.g:1383:3: ( rule__InitVal__Alternatives )
            // InternalFortXTrans.g:1383:4: rule__InitVal__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__InitVal__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getInitValAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleInitVal"


    // $ANTLR start "entryRuleLiteralTuple"
    // InternalFortXTrans.g:1392:1: entryRuleLiteralTuple : ruleLiteralTuple EOF ;
    public final void entryRuleLiteralTuple() throws RecognitionException {
        try {
            // InternalFortXTrans.g:1393:1: ( ruleLiteralTuple EOF )
            // InternalFortXTrans.g:1394:1: ruleLiteralTuple EOF
            {
             before(grammarAccess.getLiteralTupleRule()); 
            pushFollow(FOLLOW_1);
            ruleLiteralTuple();

            state._fsp--;

             after(grammarAccess.getLiteralTupleRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleLiteralTuple"


    // $ANTLR start "ruleLiteralTuple"
    // InternalFortXTrans.g:1401:1: ruleLiteralTuple : ( ( rule__LiteralTuple__Alternatives ) ) ;
    public final void ruleLiteralTuple() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1405:2: ( ( ( rule__LiteralTuple__Alternatives ) ) )
            // InternalFortXTrans.g:1406:2: ( ( rule__LiteralTuple__Alternatives ) )
            {
            // InternalFortXTrans.g:1406:2: ( ( rule__LiteralTuple__Alternatives ) )
            // InternalFortXTrans.g:1407:3: ( rule__LiteralTuple__Alternatives )
            {
             before(grammarAccess.getLiteralTupleAccess().getAlternatives()); 
            // InternalFortXTrans.g:1408:3: ( rule__LiteralTuple__Alternatives )
            // InternalFortXTrans.g:1408:4: rule__LiteralTuple__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__LiteralTuple__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getLiteralTupleAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleLiteralTuple"


    // $ANTLR start "entryRuleLiteralTup"
    // InternalFortXTrans.g:1417:1: entryRuleLiteralTup : ruleLiteralTup EOF ;
    public final void entryRuleLiteralTup() throws RecognitionException {
        try {
            // InternalFortXTrans.g:1418:1: ( ruleLiteralTup EOF )
            // InternalFortXTrans.g:1419:1: ruleLiteralTup EOF
            {
             before(grammarAccess.getLiteralTupRule()); 
            pushFollow(FOLLOW_1);
            ruleLiteralTup();

            state._fsp--;

             after(grammarAccess.getLiteralTupRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleLiteralTup"


    // $ANTLR start "ruleLiteralTup"
    // InternalFortXTrans.g:1426:1: ruleLiteralTup : ( ( rule__LiteralTup__Alternatives ) ) ;
    public final void ruleLiteralTup() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1430:2: ( ( ( rule__LiteralTup__Alternatives ) ) )
            // InternalFortXTrans.g:1431:2: ( ( rule__LiteralTup__Alternatives ) )
            {
            // InternalFortXTrans.g:1431:2: ( ( rule__LiteralTup__Alternatives ) )
            // InternalFortXTrans.g:1432:3: ( rule__LiteralTup__Alternatives )
            {
             before(grammarAccess.getLiteralTupAccess().getAlternatives()); 
            // InternalFortXTrans.g:1433:3: ( rule__LiteralTup__Alternatives )
            // InternalFortXTrans.g:1433:4: rule__LiteralTup__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__LiteralTup__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getLiteralTupAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleLiteralTup"


    // $ANTLR start "entryRuleLiteral"
    // InternalFortXTrans.g:1442:1: entryRuleLiteral : ruleLiteral EOF ;
    public final void entryRuleLiteral() throws RecognitionException {
        try {
            // InternalFortXTrans.g:1443:1: ( ruleLiteral EOF )
            // InternalFortXTrans.g:1444:1: ruleLiteral EOF
            {
             before(grammarAccess.getLiteralRule()); 
            pushFollow(FOLLOW_1);
            ruleLiteral();

            state._fsp--;

             after(grammarAccess.getLiteralRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleLiteral"


    // $ANTLR start "ruleLiteral"
    // InternalFortXTrans.g:1451:1: ruleLiteral : ( ( rule__Literal__Alternatives ) ) ;
    public final void ruleLiteral() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1455:2: ( ( ( rule__Literal__Alternatives ) ) )
            // InternalFortXTrans.g:1456:2: ( ( rule__Literal__Alternatives ) )
            {
            // InternalFortXTrans.g:1456:2: ( ( rule__Literal__Alternatives ) )
            // InternalFortXTrans.g:1457:3: ( rule__Literal__Alternatives )
            {
             before(grammarAccess.getLiteralAccess().getAlternatives()); 
            // InternalFortXTrans.g:1458:3: ( rule__Literal__Alternatives )
            // InternalFortXTrans.g:1458:4: rule__Literal__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__Literal__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getLiteralAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleLiteral"


    // $ANTLR start "entryRuleLocalVarDecl"
    // InternalFortXTrans.g:1467:1: entryRuleLocalVarDecl : ruleLocalVarDecl EOF ;
    public final void entryRuleLocalVarDecl() throws RecognitionException {
        try {
            // InternalFortXTrans.g:1468:1: ( ruleLocalVarDecl EOF )
            // InternalFortXTrans.g:1469:1: ruleLocalVarDecl EOF
            {
             before(grammarAccess.getLocalVarDeclRule()); 
            pushFollow(FOLLOW_1);
            ruleLocalVarDecl();

            state._fsp--;

             after(grammarAccess.getLocalVarDeclRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleLocalVarDecl"


    // $ANTLR start "ruleLocalVarDecl"
    // InternalFortXTrans.g:1476:1: ruleLocalVarDecl : ( ( rule__LocalVarDecl__Alternatives ) ) ;
    public final void ruleLocalVarDecl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1480:2: ( ( ( rule__LocalVarDecl__Alternatives ) ) )
            // InternalFortXTrans.g:1481:2: ( ( rule__LocalVarDecl__Alternatives ) )
            {
            // InternalFortXTrans.g:1481:2: ( ( rule__LocalVarDecl__Alternatives ) )
            // InternalFortXTrans.g:1482:3: ( rule__LocalVarDecl__Alternatives )
            {
             before(grammarAccess.getLocalVarDeclAccess().getAlternatives()); 
            // InternalFortXTrans.g:1483:3: ( rule__LocalVarDecl__Alternatives )
            // InternalFortXTrans.g:1483:4: rule__LocalVarDecl__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__LocalVarDecl__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getLocalVarDeclAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleLocalVarDecl"


    // $ANTLR start "rule__Model__Alternatives"
    // InternalFortXTrans.g:1491:1: rule__Model__Alternatives : ( ( ruleComponent ) | ( ruleAPI ) );
    public final void rule__Model__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1495:1: ( ( ruleComponent ) | ( ruleAPI ) )
            int alt3=2;
            int LA3_0 = input.LA(1);

            if ( (LA3_0==13) ) {
                alt3=1;
            }
            else if ( (LA3_0==15) ) {
                alt3=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 3, 0, input);

                throw nvae;
            }
            switch (alt3) {
                case 1 :
                    // InternalFortXTrans.g:1496:2: ( ruleComponent )
                    {
                    // InternalFortXTrans.g:1496:2: ( ruleComponent )
                    // InternalFortXTrans.g:1497:3: ruleComponent
                    {
                     before(grammarAccess.getModelAccess().getComponentParserRuleCall_0()); 
                    pushFollow(FOLLOW_2);
                    ruleComponent();

                    state._fsp--;

                     after(grammarAccess.getModelAccess().getComponentParserRuleCall_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalFortXTrans.g:1502:2: ( ruleAPI )
                    {
                    // InternalFortXTrans.g:1502:2: ( ruleAPI )
                    // InternalFortXTrans.g:1503:3: ruleAPI
                    {
                     before(grammarAccess.getModelAccess().getAPIParserRuleCall_1()); 
                    pushFollow(FOLLOW_2);
                    ruleAPI();

                    state._fsp--;

                     after(grammarAccess.getModelAccess().getAPIParserRuleCall_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Model__Alternatives"


    // $ANTLR start "rule__Import__Alternatives"
    // InternalFortXTrans.g:1512:1: rule__Import__Alternatives : ( ( ( rule__Import__Group_0__0 ) ) | ( ( rule__Import__Group_1__0 ) ) );
    public final void rule__Import__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1516:1: ( ( ( rule__Import__Group_0__0 ) ) | ( ( rule__Import__Group_1__0 ) ) )
            int alt4=2;
            int LA4_0 = input.LA(1);

            if ( (LA4_0==36) ) {
                int LA4_1 = input.LA(2);

                if ( (LA4_1==RULE_ID) ) {
                    alt4=1;
                }
                else if ( (LA4_1==15) ) {
                    alt4=2;
                }
                else {
                    NoViableAltException nvae =
                        new NoViableAltException("", 4, 1, input);

                    throw nvae;
                }
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 4, 0, input);

                throw nvae;
            }
            switch (alt4) {
                case 1 :
                    // InternalFortXTrans.g:1517:2: ( ( rule__Import__Group_0__0 ) )
                    {
                    // InternalFortXTrans.g:1517:2: ( ( rule__Import__Group_0__0 ) )
                    // InternalFortXTrans.g:1518:3: ( rule__Import__Group_0__0 )
                    {
                     before(grammarAccess.getImportAccess().getGroup_0()); 
                    // InternalFortXTrans.g:1519:3: ( rule__Import__Group_0__0 )
                    // InternalFortXTrans.g:1519:4: rule__Import__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Import__Group_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getImportAccess().getGroup_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalFortXTrans.g:1523:2: ( ( rule__Import__Group_1__0 ) )
                    {
                    // InternalFortXTrans.g:1523:2: ( ( rule__Import__Group_1__0 ) )
                    // InternalFortXTrans.g:1524:3: ( rule__Import__Group_1__0 )
                    {
                     before(grammarAccess.getImportAccess().getGroup_1()); 
                    // InternalFortXTrans.g:1525:3: ( rule__Import__Group_1__0 )
                    // InternalFortXTrans.g:1525:4: rule__Import__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Import__Group_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getImportAccess().getGroup_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Import__Alternatives"


    // $ANTLR start "rule__Export__Alternatives"
    // InternalFortXTrans.g:1533:1: rule__Export__Alternatives : ( ( ( rule__Export__Group_0__0 ) ) | ( ( rule__Export__Group_1__0 ) ) );
    public final void rule__Export__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1537:1: ( ( ( rule__Export__Group_0__0 ) ) | ( ( rule__Export__Group_1__0 ) ) )
            int alt5=2;
            int LA5_0 = input.LA(1);

            if ( (LA5_0==37) ) {
                int LA5_1 = input.LA(2);

                if ( (LA5_1==RULE_ID) ) {
                    alt5=1;
                }
                else if ( (LA5_1==19) ) {
                    alt5=2;
                }
                else {
                    NoViableAltException nvae =
                        new NoViableAltException("", 5, 1, input);

                    throw nvae;
                }
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 5, 0, input);

                throw nvae;
            }
            switch (alt5) {
                case 1 :
                    // InternalFortXTrans.g:1538:2: ( ( rule__Export__Group_0__0 ) )
                    {
                    // InternalFortXTrans.g:1538:2: ( ( rule__Export__Group_0__0 ) )
                    // InternalFortXTrans.g:1539:3: ( rule__Export__Group_0__0 )
                    {
                     before(grammarAccess.getExportAccess().getGroup_0()); 
                    // InternalFortXTrans.g:1540:3: ( rule__Export__Group_0__0 )
                    // InternalFortXTrans.g:1540:4: rule__Export__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Export__Group_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getExportAccess().getGroup_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalFortXTrans.g:1544:2: ( ( rule__Export__Group_1__0 ) )
                    {
                    // InternalFortXTrans.g:1544:2: ( ( rule__Export__Group_1__0 ) )
                    // InternalFortXTrans.g:1545:3: ( rule__Export__Group_1__0 )
                    {
                     before(grammarAccess.getExportAccess().getGroup_1()); 
                    // InternalFortXTrans.g:1546:3: ( rule__Export__Group_1__0 )
                    // InternalFortXTrans.g:1546:4: rule__Export__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Export__Group_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getExportAccess().getGroup_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Export__Alternatives"


    // $ANTLR start "rule__ImportedNames__Alternatives"
    // InternalFortXTrans.g:1554:1: rule__ImportedNames__Alternatives : ( ( ( rule__ImportedNames__Group_0__0 ) ) | ( ( rule__ImportedNames__Group_1__0 ) ) | ( ( rule__ImportedNames__Group_2__0 ) ) );
    public final void rule__ImportedNames__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1558:1: ( ( ( rule__ImportedNames__Group_0__0 ) ) | ( ( rule__ImportedNames__Group_1__0 ) ) | ( ( rule__ImportedNames__Group_2__0 ) ) )
            int alt6=3;
            alt6 = dfa6.predict(input);
            switch (alt6) {
                case 1 :
                    // InternalFortXTrans.g:1559:2: ( ( rule__ImportedNames__Group_0__0 ) )
                    {
                    // InternalFortXTrans.g:1559:2: ( ( rule__ImportedNames__Group_0__0 ) )
                    // InternalFortXTrans.g:1560:3: ( rule__ImportedNames__Group_0__0 )
                    {
                     before(grammarAccess.getImportedNamesAccess().getGroup_0()); 
                    // InternalFortXTrans.g:1561:3: ( rule__ImportedNames__Group_0__0 )
                    // InternalFortXTrans.g:1561:4: rule__ImportedNames__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ImportedNames__Group_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getImportedNamesAccess().getGroup_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalFortXTrans.g:1565:2: ( ( rule__ImportedNames__Group_1__0 ) )
                    {
                    // InternalFortXTrans.g:1565:2: ( ( rule__ImportedNames__Group_1__0 ) )
                    // InternalFortXTrans.g:1566:3: ( rule__ImportedNames__Group_1__0 )
                    {
                     before(grammarAccess.getImportedNamesAccess().getGroup_1()); 
                    // InternalFortXTrans.g:1567:3: ( rule__ImportedNames__Group_1__0 )
                    // InternalFortXTrans.g:1567:4: rule__ImportedNames__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ImportedNames__Group_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getImportedNamesAccess().getGroup_1()); 

                    }


                    }
                    break;
                case 3 :
                    // InternalFortXTrans.g:1571:2: ( ( rule__ImportedNames__Group_2__0 ) )
                    {
                    // InternalFortXTrans.g:1571:2: ( ( rule__ImportedNames__Group_2__0 ) )
                    // InternalFortXTrans.g:1572:3: ( rule__ImportedNames__Group_2__0 )
                    {
                     before(grammarAccess.getImportedNamesAccess().getGroup_2()); 
                    // InternalFortXTrans.g:1573:3: ( rule__ImportedNames__Group_2__0 )
                    // InternalFortXTrans.g:1573:4: rule__ImportedNames__Group_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ImportedNames__Group_2__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getImportedNamesAccess().getGroup_2()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Alternatives"


    // $ANTLR start "rule__QualifiedName__Alternatives"
    // InternalFortXTrans.g:1581:1: rule__QualifiedName__Alternatives : ( ( ( rule__QualifiedName__Group_0__0 ) ) | ( ( rule__QualifiedName__Group_1__0 ) ) );
    public final void rule__QualifiedName__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1585:1: ( ( ( rule__QualifiedName__Group_0__0 ) ) | ( ( rule__QualifiedName__Group_1__0 ) ) )
            int alt7=2;
            int LA7_0 = input.LA(1);

            if ( (LA7_0==RULE_ID) ) {
                int LA7_1 = input.LA(2);

                if ( (LA7_1==EOF||(LA7_1>=RULE_DOTS && LA7_1<=RULE_STRING)||LA7_1==14||(LA7_1>=16 && LA7_1<=17)||(LA7_1>=20 && LA7_1<=22)||(LA7_1>=24 && LA7_1<=31)||(LA7_1>=33 && LA7_1<=34)||(LA7_1>=36 && LA7_1<=37)||(LA7_1>=39 && LA7_1<=46)||(LA7_1>=48 && LA7_1<=50)) ) {
                    alt7=1;
                }
                else if ( (LA7_1==18) ) {
                    int LA7_3 = input.LA(3);

                    if ( (LA7_3==19) ) {
                        alt7=1;
                    }
                    else if ( (LA7_3==RULE_ID) ) {
                        alt7=2;
                    }
                    else {
                        NoViableAltException nvae =
                            new NoViableAltException("", 7, 3, input);

                        throw nvae;
                    }
                }
                else {
                    NoViableAltException nvae =
                        new NoViableAltException("", 7, 1, input);

                    throw nvae;
                }
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 7, 0, input);

                throw nvae;
            }
            switch (alt7) {
                case 1 :
                    // InternalFortXTrans.g:1586:2: ( ( rule__QualifiedName__Group_0__0 ) )
                    {
                    // InternalFortXTrans.g:1586:2: ( ( rule__QualifiedName__Group_0__0 ) )
                    // InternalFortXTrans.g:1587:3: ( rule__QualifiedName__Group_0__0 )
                    {
                     before(grammarAccess.getQualifiedNameAccess().getGroup_0()); 
                    // InternalFortXTrans.g:1588:3: ( rule__QualifiedName__Group_0__0 )
                    // InternalFortXTrans.g:1588:4: rule__QualifiedName__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__QualifiedName__Group_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getQualifiedNameAccess().getGroup_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalFortXTrans.g:1592:2: ( ( rule__QualifiedName__Group_1__0 ) )
                    {
                    // InternalFortXTrans.g:1592:2: ( ( rule__QualifiedName__Group_1__0 ) )
                    // InternalFortXTrans.g:1593:3: ( rule__QualifiedName__Group_1__0 )
                    {
                     before(grammarAccess.getQualifiedNameAccess().getGroup_1()); 
                    // InternalFortXTrans.g:1594:3: ( rule__QualifiedName__Group_1__0 )
                    // InternalFortXTrans.g:1594:4: rule__QualifiedName__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__QualifiedName__Group_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getQualifiedNameAccess().getGroup_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedName__Alternatives"


    // $ANTLR start "rule__Qualified__Alternatives"
    // InternalFortXTrans.g:1602:1: rule__Qualified__Alternatives : ( ( ( rule__Qualified__QAssignment_0 ) ) | ( ( rule__Qualified__QlistAssignment_1 ) ) );
    public final void rule__Qualified__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1606:1: ( ( ( rule__Qualified__QAssignment_0 ) ) | ( ( rule__Qualified__QlistAssignment_1 ) ) )
            int alt8=2;
            int LA8_0 = input.LA(1);

            if ( (LA8_0==RULE_ID) ) {
                alt8=1;
            }
            else if ( (LA8_0==21) ) {
                alt8=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 8, 0, input);

                throw nvae;
            }
            switch (alt8) {
                case 1 :
                    // InternalFortXTrans.g:1607:2: ( ( rule__Qualified__QAssignment_0 ) )
                    {
                    // InternalFortXTrans.g:1607:2: ( ( rule__Qualified__QAssignment_0 ) )
                    // InternalFortXTrans.g:1608:3: ( rule__Qualified__QAssignment_0 )
                    {
                     before(grammarAccess.getQualifiedAccess().getQAssignment_0()); 
                    // InternalFortXTrans.g:1609:3: ( rule__Qualified__QAssignment_0 )
                    // InternalFortXTrans.g:1609:4: rule__Qualified__QAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Qualified__QAssignment_0();

                    state._fsp--;


                    }

                     after(grammarAccess.getQualifiedAccess().getQAssignment_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalFortXTrans.g:1613:2: ( ( rule__Qualified__QlistAssignment_1 ) )
                    {
                    // InternalFortXTrans.g:1613:2: ( ( rule__Qualified__QlistAssignment_1 ) )
                    // InternalFortXTrans.g:1614:3: ( rule__Qualified__QlistAssignment_1 )
                    {
                     before(grammarAccess.getQualifiedAccess().getQlistAssignment_1()); 
                    // InternalFortXTrans.g:1615:3: ( rule__Qualified__QlistAssignment_1 )
                    // InternalFortXTrans.g:1615:4: rule__Qualified__QlistAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__Qualified__QlistAssignment_1();

                    state._fsp--;


                    }

                     after(grammarAccess.getQualifiedAccess().getQlistAssignment_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Qualified__Alternatives"


    // $ANTLR start "rule__SimpleNames__Alternatives"
    // InternalFortXTrans.g:1623:1: rule__SimpleNames__Alternatives : ( ( ( rule__SimpleNames__NameListAssignment_0 ) ) | ( ( rule__SimpleNames__Group_1__0 ) ) );
    public final void rule__SimpleNames__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1627:1: ( ( ( rule__SimpleNames__NameListAssignment_0 ) ) | ( ( rule__SimpleNames__Group_1__0 ) ) )
            int alt9=2;
            int LA9_0 = input.LA(1);

            if ( (LA9_0==RULE_ID) ) {
                alt9=1;
            }
            else if ( (LA9_0==19) ) {
                alt9=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 9, 0, input);

                throw nvae;
            }
            switch (alt9) {
                case 1 :
                    // InternalFortXTrans.g:1628:2: ( ( rule__SimpleNames__NameListAssignment_0 ) )
                    {
                    // InternalFortXTrans.g:1628:2: ( ( rule__SimpleNames__NameListAssignment_0 ) )
                    // InternalFortXTrans.g:1629:3: ( rule__SimpleNames__NameListAssignment_0 )
                    {
                     before(grammarAccess.getSimpleNamesAccess().getNameListAssignment_0()); 
                    // InternalFortXTrans.g:1630:3: ( rule__SimpleNames__NameListAssignment_0 )
                    // InternalFortXTrans.g:1630:4: rule__SimpleNames__NameListAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__SimpleNames__NameListAssignment_0();

                    state._fsp--;


                    }

                     after(grammarAccess.getSimpleNamesAccess().getNameListAssignment_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalFortXTrans.g:1634:2: ( ( rule__SimpleNames__Group_1__0 ) )
                    {
                    // InternalFortXTrans.g:1634:2: ( ( rule__SimpleNames__Group_1__0 ) )
                    // InternalFortXTrans.g:1635:3: ( rule__SimpleNames__Group_1__0 )
                    {
                     before(grammarAccess.getSimpleNamesAccess().getGroup_1()); 
                    // InternalFortXTrans.g:1636:3: ( rule__SimpleNames__Group_1__0 )
                    // InternalFortXTrans.g:1636:4: rule__SimpleNames__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__SimpleNames__Group_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getSimpleNamesAccess().getGroup_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleNames__Alternatives"


    // $ANTLR start "rule__AliasedAPINames__Alternatives"
    // InternalFortXTrans.g:1644:1: rule__AliasedAPINames__Alternatives : ( ( ( rule__AliasedAPINames__NameListAssignment_0 ) ) | ( ( rule__AliasedAPINames__Group_1__0 ) ) );
    public final void rule__AliasedAPINames__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1648:1: ( ( ( rule__AliasedAPINames__NameListAssignment_0 ) ) | ( ( rule__AliasedAPINames__Group_1__0 ) ) )
            int alt10=2;
            int LA10_0 = input.LA(1);

            if ( (LA10_0==RULE_ID) ) {
                alt10=1;
            }
            else if ( (LA10_0==19) ) {
                alt10=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 10, 0, input);

                throw nvae;
            }
            switch (alt10) {
                case 1 :
                    // InternalFortXTrans.g:1649:2: ( ( rule__AliasedAPINames__NameListAssignment_0 ) )
                    {
                    // InternalFortXTrans.g:1649:2: ( ( rule__AliasedAPINames__NameListAssignment_0 ) )
                    // InternalFortXTrans.g:1650:3: ( rule__AliasedAPINames__NameListAssignment_0 )
                    {
                     before(grammarAccess.getAliasedAPINamesAccess().getNameListAssignment_0()); 
                    // InternalFortXTrans.g:1651:3: ( rule__AliasedAPINames__NameListAssignment_0 )
                    // InternalFortXTrans.g:1651:4: rule__AliasedAPINames__NameListAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__AliasedAPINames__NameListAssignment_0();

                    state._fsp--;


                    }

                     after(grammarAccess.getAliasedAPINamesAccess().getNameListAssignment_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalFortXTrans.g:1655:2: ( ( rule__AliasedAPINames__Group_1__0 ) )
                    {
                    // InternalFortXTrans.g:1655:2: ( ( rule__AliasedAPINames__Group_1__0 ) )
                    // InternalFortXTrans.g:1656:3: ( rule__AliasedAPINames__Group_1__0 )
                    {
                     before(grammarAccess.getAliasedAPINamesAccess().getGroup_1()); 
                    // InternalFortXTrans.g:1657:3: ( rule__AliasedAPINames__Group_1__0 )
                    // InternalFortXTrans.g:1657:4: rule__AliasedAPINames__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__AliasedAPINames__Group_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getAliasedAPINamesAccess().getGroup_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedAPINames__Alternatives"


    // $ANTLR start "rule__Decl__Alternatives"
    // InternalFortXTrans.g:1665:1: rule__Decl__Alternatives : ( ( ( rule__Decl__FunctionAssignment_0 ) ) | ( ( rule__Decl__FieldAssignment_1 ) ) );
    public final void rule__Decl__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1669:1: ( ( ( rule__Decl__FunctionAssignment_0 ) ) | ( ( rule__Decl__FieldAssignment_1 ) ) )
            int alt11=2;
            switch ( input.LA(1) ) {
            case 39:
                {
                switch ( input.LA(2) ) {
                case 21:
                case 49:
                case 50:
                    {
                    alt11=2;
                    }
                    break;
                case RULE_ID:
                    {
                    int LA11_3 = input.LA(3);

                    if ( (LA11_3==RULE_ID||LA11_3==21||LA11_3==49) ) {
                        alt11=1;
                    }
                    else if ( (LA11_3==23||LA11_3==35) ) {
                        alt11=2;
                    }
                    else {
                        NoViableAltException nvae =
                            new NoViableAltException("", 11, 3, input);

                        throw nvae;
                    }
                    }
                    break;
                case 39:
                case 40:
                case 41:
                case 42:
                    {
                    alt11=1;
                    }
                    break;
                default:
                    NoViableAltException nvae =
                        new NoViableAltException("", 11, 1, input);

                    throw nvae;
                }

                }
                break;
            case 40:
            case 41:
            case 42:
                {
                alt11=1;
                }
                break;
            case RULE_ID:
                {
                int LA11_3 = input.LA(2);

                if ( (LA11_3==RULE_ID||LA11_3==21||LA11_3==49) ) {
                    alt11=1;
                }
                else if ( (LA11_3==23||LA11_3==35) ) {
                    alt11=2;
                }
                else {
                    NoViableAltException nvae =
                        new NoViableAltException("", 11, 3, input);

                    throw nvae;
                }
                }
                break;
            case 21:
            case 49:
            case 50:
                {
                alt11=2;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 11, 0, input);

                throw nvae;
            }

            switch (alt11) {
                case 1 :
                    // InternalFortXTrans.g:1670:2: ( ( rule__Decl__FunctionAssignment_0 ) )
                    {
                    // InternalFortXTrans.g:1670:2: ( ( rule__Decl__FunctionAssignment_0 ) )
                    // InternalFortXTrans.g:1671:3: ( rule__Decl__FunctionAssignment_0 )
                    {
                     before(grammarAccess.getDeclAccess().getFunctionAssignment_0()); 
                    // InternalFortXTrans.g:1672:3: ( rule__Decl__FunctionAssignment_0 )
                    // InternalFortXTrans.g:1672:4: rule__Decl__FunctionAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Decl__FunctionAssignment_0();

                    state._fsp--;


                    }

                     after(grammarAccess.getDeclAccess().getFunctionAssignment_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalFortXTrans.g:1676:2: ( ( rule__Decl__FieldAssignment_1 ) )
                    {
                    // InternalFortXTrans.g:1676:2: ( ( rule__Decl__FieldAssignment_1 ) )
                    // InternalFortXTrans.g:1677:3: ( rule__Decl__FieldAssignment_1 )
                    {
                     before(grammarAccess.getDeclAccess().getFieldAssignment_1()); 
                    // InternalFortXTrans.g:1678:3: ( rule__Decl__FieldAssignment_1 )
                    // InternalFortXTrans.g:1678:4: rule__Decl__FieldAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__Decl__FieldAssignment_1();

                    state._fsp--;


                    }

                     after(grammarAccess.getDeclAccess().getFieldAssignment_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Decl__Alternatives"


    // $ANTLR start "rule__FnMod__Alternatives"
    // InternalFortXTrans.g:1686:1: rule__FnMod__Alternatives : ( ( ( rule__FnMod__ModtypeAssignment_0 ) ) | ( ( rule__FnMod__ModtypeAssignment_1 ) ) | ( ( rule__FnMod__ModtypeAssignment_2 ) ) | ( ( rule__FnMod__ModtypeAssignment_3 ) ) );
    public final void rule__FnMod__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1690:1: ( ( ( rule__FnMod__ModtypeAssignment_0 ) ) | ( ( rule__FnMod__ModtypeAssignment_1 ) ) | ( ( rule__FnMod__ModtypeAssignment_2 ) ) | ( ( rule__FnMod__ModtypeAssignment_3 ) ) )
            int alt12=4;
            switch ( input.LA(1) ) {
            case 39:
                {
                alt12=1;
                }
                break;
            case 40:
                {
                alt12=2;
                }
                break;
            case 41:
                {
                alt12=3;
                }
                break;
            case 42:
                {
                alt12=4;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 12, 0, input);

                throw nvae;
            }

            switch (alt12) {
                case 1 :
                    // InternalFortXTrans.g:1691:2: ( ( rule__FnMod__ModtypeAssignment_0 ) )
                    {
                    // InternalFortXTrans.g:1691:2: ( ( rule__FnMod__ModtypeAssignment_0 ) )
                    // InternalFortXTrans.g:1692:3: ( rule__FnMod__ModtypeAssignment_0 )
                    {
                     before(grammarAccess.getFnModAccess().getModtypeAssignment_0()); 
                    // InternalFortXTrans.g:1693:3: ( rule__FnMod__ModtypeAssignment_0 )
                    // InternalFortXTrans.g:1693:4: rule__FnMod__ModtypeAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__FnMod__ModtypeAssignment_0();

                    state._fsp--;


                    }

                     after(grammarAccess.getFnModAccess().getModtypeAssignment_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalFortXTrans.g:1697:2: ( ( rule__FnMod__ModtypeAssignment_1 ) )
                    {
                    // InternalFortXTrans.g:1697:2: ( ( rule__FnMod__ModtypeAssignment_1 ) )
                    // InternalFortXTrans.g:1698:3: ( rule__FnMod__ModtypeAssignment_1 )
                    {
                     before(grammarAccess.getFnModAccess().getModtypeAssignment_1()); 
                    // InternalFortXTrans.g:1699:3: ( rule__FnMod__ModtypeAssignment_1 )
                    // InternalFortXTrans.g:1699:4: rule__FnMod__ModtypeAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__FnMod__ModtypeAssignment_1();

                    state._fsp--;


                    }

                     after(grammarAccess.getFnModAccess().getModtypeAssignment_1()); 

                    }


                    }
                    break;
                case 3 :
                    // InternalFortXTrans.g:1703:2: ( ( rule__FnMod__ModtypeAssignment_2 ) )
                    {
                    // InternalFortXTrans.g:1703:2: ( ( rule__FnMod__ModtypeAssignment_2 ) )
                    // InternalFortXTrans.g:1704:3: ( rule__FnMod__ModtypeAssignment_2 )
                    {
                     before(grammarAccess.getFnModAccess().getModtypeAssignment_2()); 
                    // InternalFortXTrans.g:1705:3: ( rule__FnMod__ModtypeAssignment_2 )
                    // InternalFortXTrans.g:1705:4: rule__FnMod__ModtypeAssignment_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__FnMod__ModtypeAssignment_2();

                    state._fsp--;


                    }

                     after(grammarAccess.getFnModAccess().getModtypeAssignment_2()); 

                    }


                    }
                    break;
                case 4 :
                    // InternalFortXTrans.g:1709:2: ( ( rule__FnMod__ModtypeAssignment_3 ) )
                    {
                    // InternalFortXTrans.g:1709:2: ( ( rule__FnMod__ModtypeAssignment_3 ) )
                    // InternalFortXTrans.g:1710:3: ( rule__FnMod__ModtypeAssignment_3 )
                    {
                     before(grammarAccess.getFnModAccess().getModtypeAssignment_3()); 
                    // InternalFortXTrans.g:1711:3: ( rule__FnMod__ModtypeAssignment_3 )
                    // InternalFortXTrans.g:1711:4: rule__FnMod__ModtypeAssignment_3
                    {
                    pushFollow(FOLLOW_2);
                    rule__FnMod__ModtypeAssignment_3();

                    state._fsp--;


                    }

                     after(grammarAccess.getFnModAccess().getModtypeAssignment_3()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FnMod__Alternatives"


    // $ANTLR start "rule__ValParam__Alternatives"
    // InternalFortXTrans.g:1719:1: rule__ValParam__Alternatives : ( ( ( rule__ValParam__ParamsAssignment_0 ) ) | ( ( rule__ValParam__Group_1__0 ) ) );
    public final void rule__ValParam__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1723:1: ( ( ( rule__ValParam__ParamsAssignment_0 ) ) | ( ( rule__ValParam__Group_1__0 ) ) )
            int alt13=2;
            int LA13_0 = input.LA(1);

            if ( (LA13_0==RULE_ID||LA13_0==49) ) {
                alt13=1;
            }
            else if ( (LA13_0==21) ) {
                alt13=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 13, 0, input);

                throw nvae;
            }
            switch (alt13) {
                case 1 :
                    // InternalFortXTrans.g:1724:2: ( ( rule__ValParam__ParamsAssignment_0 ) )
                    {
                    // InternalFortXTrans.g:1724:2: ( ( rule__ValParam__ParamsAssignment_0 ) )
                    // InternalFortXTrans.g:1725:3: ( rule__ValParam__ParamsAssignment_0 )
                    {
                     before(grammarAccess.getValParamAccess().getParamsAssignment_0()); 
                    // InternalFortXTrans.g:1726:3: ( rule__ValParam__ParamsAssignment_0 )
                    // InternalFortXTrans.g:1726:4: rule__ValParam__ParamsAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ValParam__ParamsAssignment_0();

                    state._fsp--;


                    }

                     after(grammarAccess.getValParamAccess().getParamsAssignment_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalFortXTrans.g:1730:2: ( ( rule__ValParam__Group_1__0 ) )
                    {
                    // InternalFortXTrans.g:1730:2: ( ( rule__ValParam__Group_1__0 ) )
                    // InternalFortXTrans.g:1731:3: ( rule__ValParam__Group_1__0 )
                    {
                     before(grammarAccess.getValParamAccess().getGroup_1()); 
                    // InternalFortXTrans.g:1732:3: ( rule__ValParam__Group_1__0 )
                    // InternalFortXTrans.g:1732:4: rule__ValParam__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ValParam__Group_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getValParamAccess().getGroup_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValParam__Alternatives"


    // $ANTLR start "rule__RetType__Alternatives"
    // InternalFortXTrans.g:1740:1: rule__RetType__Alternatives : ( ( ( rule__RetType__Group_0__0 ) ) | ( ( rule__RetType__Group_1__0 ) ) );
    public final void rule__RetType__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1744:1: ( ( ( rule__RetType__Group_0__0 ) ) | ( ( rule__RetType__Group_1__0 ) ) )
            int alt14=2;
            int LA14_0 = input.LA(1);

            if ( (LA14_0==23) ) {
                int LA14_1 = input.LA(2);

                if ( (LA14_1==21) ) {
                    alt14=1;
                }
                else if ( (LA14_1==RULE_ID) ) {
                    alt14=2;
                }
                else {
                    NoViableAltException nvae =
                        new NoViableAltException("", 14, 1, input);

                    throw nvae;
                }
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 14, 0, input);

                throw nvae;
            }
            switch (alt14) {
                case 1 :
                    // InternalFortXTrans.g:1745:2: ( ( rule__RetType__Group_0__0 ) )
                    {
                    // InternalFortXTrans.g:1745:2: ( ( rule__RetType__Group_0__0 ) )
                    // InternalFortXTrans.g:1746:3: ( rule__RetType__Group_0__0 )
                    {
                     before(grammarAccess.getRetTypeAccess().getGroup_0()); 
                    // InternalFortXTrans.g:1747:3: ( rule__RetType__Group_0__0 )
                    // InternalFortXTrans.g:1747:4: rule__RetType__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__RetType__Group_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getRetTypeAccess().getGroup_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalFortXTrans.g:1751:2: ( ( rule__RetType__Group_1__0 ) )
                    {
                    // InternalFortXTrans.g:1751:2: ( ( rule__RetType__Group_1__0 ) )
                    // InternalFortXTrans.g:1752:3: ( rule__RetType__Group_1__0 )
                    {
                     before(grammarAccess.getRetTypeAccess().getGroup_1()); 
                    // InternalFortXTrans.g:1753:3: ( rule__RetType__Group_1__0 )
                    // InternalFortXTrans.g:1753:4: rule__RetType__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__RetType__Group_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getRetTypeAccess().getGroup_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RetType__Alternatives"


    // $ANTLR start "rule__Stmnts__Alternatives"
    // InternalFortXTrans.g:1761:1: rule__Stmnts__Alternatives : ( ( ( rule__Stmnts__FrontAssignment_0 ) ) | ( ( rule__Stmnts__LocVarAssignment_1 ) ) | ( ( rule__Stmnts__ExpAssignment_2 ) ) );
    public final void rule__Stmnts__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1765:1: ( ( ( rule__Stmnts__FrontAssignment_0 ) ) | ( ( rule__Stmnts__LocVarAssignment_1 ) ) | ( ( rule__Stmnts__ExpAssignment_2 ) ) )
            int alt15=3;
            alt15 = dfa15.predict(input);
            switch (alt15) {
                case 1 :
                    // InternalFortXTrans.g:1766:2: ( ( rule__Stmnts__FrontAssignment_0 ) )
                    {
                    // InternalFortXTrans.g:1766:2: ( ( rule__Stmnts__FrontAssignment_0 ) )
                    // InternalFortXTrans.g:1767:3: ( rule__Stmnts__FrontAssignment_0 )
                    {
                     before(grammarAccess.getStmntsAccess().getFrontAssignment_0()); 
                    // InternalFortXTrans.g:1768:3: ( rule__Stmnts__FrontAssignment_0 )
                    // InternalFortXTrans.g:1768:4: rule__Stmnts__FrontAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Stmnts__FrontAssignment_0();

                    state._fsp--;


                    }

                     after(grammarAccess.getStmntsAccess().getFrontAssignment_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalFortXTrans.g:1772:2: ( ( rule__Stmnts__LocVarAssignment_1 ) )
                    {
                    // InternalFortXTrans.g:1772:2: ( ( rule__Stmnts__LocVarAssignment_1 ) )
                    // InternalFortXTrans.g:1773:3: ( rule__Stmnts__LocVarAssignment_1 )
                    {
                     before(grammarAccess.getStmntsAccess().getLocVarAssignment_1()); 
                    // InternalFortXTrans.g:1774:3: ( rule__Stmnts__LocVarAssignment_1 )
                    // InternalFortXTrans.g:1774:4: rule__Stmnts__LocVarAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__Stmnts__LocVarAssignment_1();

                    state._fsp--;


                    }

                     after(grammarAccess.getStmntsAccess().getLocVarAssignment_1()); 

                    }


                    }
                    break;
                case 3 :
                    // InternalFortXTrans.g:1778:2: ( ( rule__Stmnts__ExpAssignment_2 ) )
                    {
                    // InternalFortXTrans.g:1778:2: ( ( rule__Stmnts__ExpAssignment_2 ) )
                    // InternalFortXTrans.g:1779:3: ( rule__Stmnts__ExpAssignment_2 )
                    {
                     before(grammarAccess.getStmntsAccess().getExpAssignment_2()); 
                    // InternalFortXTrans.g:1780:3: ( rule__Stmnts__ExpAssignment_2 )
                    // InternalFortXTrans.g:1780:4: rule__Stmnts__ExpAssignment_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__Stmnts__ExpAssignment_2();

                    state._fsp--;


                    }

                     after(grammarAccess.getStmntsAccess().getExpAssignment_2()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Stmnts__Alternatives"


    // $ANTLR start "rule__Stmnt__Alternatives"
    // InternalFortXTrans.g:1788:1: rule__Stmnt__Alternatives : ( ( ( rule__Stmnt__DelimAssignment_0 ) ) | ( ( rule__Stmnt__Group_1__0 ) ) );
    public final void rule__Stmnt__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1792:1: ( ( ( rule__Stmnt__DelimAssignment_0 ) ) | ( ( rule__Stmnt__Group_1__0 ) ) )
            int alt16=2;
            int LA16_0 = input.LA(1);

            if ( (LA16_0==34||LA16_0==41||(LA16_0>=43 && LA16_0<=46)||LA16_0==48) ) {
                alt16=1;
            }
            else if ( (LA16_0==21) ) {
                alt16=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 16, 0, input);

                throw nvae;
            }
            switch (alt16) {
                case 1 :
                    // InternalFortXTrans.g:1793:2: ( ( rule__Stmnt__DelimAssignment_0 ) )
                    {
                    // InternalFortXTrans.g:1793:2: ( ( rule__Stmnt__DelimAssignment_0 ) )
                    // InternalFortXTrans.g:1794:3: ( rule__Stmnt__DelimAssignment_0 )
                    {
                     before(grammarAccess.getStmntAccess().getDelimAssignment_0()); 
                    // InternalFortXTrans.g:1795:3: ( rule__Stmnt__DelimAssignment_0 )
                    // InternalFortXTrans.g:1795:4: rule__Stmnt__DelimAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Stmnt__DelimAssignment_0();

                    state._fsp--;


                    }

                     after(grammarAccess.getStmntAccess().getDelimAssignment_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalFortXTrans.g:1799:2: ( ( rule__Stmnt__Group_1__0 ) )
                    {
                    // InternalFortXTrans.g:1799:2: ( ( rule__Stmnt__Group_1__0 ) )
                    // InternalFortXTrans.g:1800:3: ( rule__Stmnt__Group_1__0 )
                    {
                     before(grammarAccess.getStmntAccess().getGroup_1()); 
                    // InternalFortXTrans.g:1801:3: ( rule__Stmnt__Group_1__0 )
                    // InternalFortXTrans.g:1801:4: rule__Stmnt__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Stmnt__Group_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getStmntAccess().getGroup_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Stmnt__Alternatives"


    // $ANTLR start "rule__Primary__Alternatives"
    // InternalFortXTrans.g:1809:1: rule__Primary__Alternatives : ( ( ( rule__Primary__Group_0__0 ) ) | ( ruleLiteralTuple ) | ( ( rule__Primary__Group_2__0 ) ) );
    public final void rule__Primary__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1813:1: ( ( ( rule__Primary__Group_0__0 ) ) | ( ruleLiteralTuple ) | ( ( rule__Primary__Group_2__0 ) ) )
            int alt17=3;
            alt17 = dfa17.predict(input);
            switch (alt17) {
                case 1 :
                    // InternalFortXTrans.g:1814:2: ( ( rule__Primary__Group_0__0 ) )
                    {
                    // InternalFortXTrans.g:1814:2: ( ( rule__Primary__Group_0__0 ) )
                    // InternalFortXTrans.g:1815:3: ( rule__Primary__Group_0__0 )
                    {
                     before(grammarAccess.getPrimaryAccess().getGroup_0()); 
                    // InternalFortXTrans.g:1816:3: ( rule__Primary__Group_0__0 )
                    // InternalFortXTrans.g:1816:4: rule__Primary__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Primary__Group_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getPrimaryAccess().getGroup_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalFortXTrans.g:1820:2: ( ruleLiteralTuple )
                    {
                    // InternalFortXTrans.g:1820:2: ( ruleLiteralTuple )
                    // InternalFortXTrans.g:1821:3: ruleLiteralTuple
                    {
                     before(grammarAccess.getPrimaryAccess().getLiteralTupleParserRuleCall_1()); 
                    pushFollow(FOLLOW_2);
                    ruleLiteralTuple();

                    state._fsp--;

                     after(grammarAccess.getPrimaryAccess().getLiteralTupleParserRuleCall_1()); 

                    }


                    }
                    break;
                case 3 :
                    // InternalFortXTrans.g:1826:2: ( ( rule__Primary__Group_2__0 ) )
                    {
                    // InternalFortXTrans.g:1826:2: ( ( rule__Primary__Group_2__0 ) )
                    // InternalFortXTrans.g:1827:3: ( rule__Primary__Group_2__0 )
                    {
                     before(grammarAccess.getPrimaryAccess().getGroup_2()); 
                    // InternalFortXTrans.g:1828:3: ( rule__Primary__Group_2__0 )
                    // InternalFortXTrans.g:1828:4: rule__Primary__Group_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Primary__Group_2__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getPrimaryAccess().getGroup_2()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Alternatives"


    // $ANTLR start "rule__DelimitedExpr__Alternatives"
    // InternalFortXTrans.g:1836:1: rule__DelimitedExpr__Alternatives : ( ( ( rule__DelimitedExpr__DodAssignment_0 ) ) | ( ( rule__DelimitedExpr__Group_1__0 ) ) | ( ( rule__DelimitedExpr__Group_2__0 ) ) | ( ( rule__DelimitedExpr__Group_3__0 ) ) | ( ( rule__DelimitedExpr__Group_4__0 ) ) );
    public final void rule__DelimitedExpr__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1840:1: ( ( ( rule__DelimitedExpr__DodAssignment_0 ) ) | ( ( rule__DelimitedExpr__Group_1__0 ) ) | ( ( rule__DelimitedExpr__Group_2__0 ) ) | ( ( rule__DelimitedExpr__Group_3__0 ) ) | ( ( rule__DelimitedExpr__Group_4__0 ) ) )
            int alt18=5;
            switch ( input.LA(1) ) {
            case 34:
            case 41:
            case 48:
                {
                alt18=1;
                }
                break;
            case 43:
                {
                alt18=2;
                }
                break;
            case 44:
                {
                alt18=3;
                }
                break;
            case 45:
                {
                alt18=4;
                }
                break;
            case 46:
                {
                alt18=5;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 18, 0, input);

                throw nvae;
            }

            switch (alt18) {
                case 1 :
                    // InternalFortXTrans.g:1841:2: ( ( rule__DelimitedExpr__DodAssignment_0 ) )
                    {
                    // InternalFortXTrans.g:1841:2: ( ( rule__DelimitedExpr__DodAssignment_0 ) )
                    // InternalFortXTrans.g:1842:3: ( rule__DelimitedExpr__DodAssignment_0 )
                    {
                     before(grammarAccess.getDelimitedExprAccess().getDodAssignment_0()); 
                    // InternalFortXTrans.g:1843:3: ( rule__DelimitedExpr__DodAssignment_0 )
                    // InternalFortXTrans.g:1843:4: rule__DelimitedExpr__DodAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__DelimitedExpr__DodAssignment_0();

                    state._fsp--;


                    }

                     after(grammarAccess.getDelimitedExprAccess().getDodAssignment_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalFortXTrans.g:1847:2: ( ( rule__DelimitedExpr__Group_1__0 ) )
                    {
                    // InternalFortXTrans.g:1847:2: ( ( rule__DelimitedExpr__Group_1__0 ) )
                    // InternalFortXTrans.g:1848:3: ( rule__DelimitedExpr__Group_1__0 )
                    {
                     before(grammarAccess.getDelimitedExprAccess().getGroup_1()); 
                    // InternalFortXTrans.g:1849:3: ( rule__DelimitedExpr__Group_1__0 )
                    // InternalFortXTrans.g:1849:4: rule__DelimitedExpr__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__DelimitedExpr__Group_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getDelimitedExprAccess().getGroup_1()); 

                    }


                    }
                    break;
                case 3 :
                    // InternalFortXTrans.g:1853:2: ( ( rule__DelimitedExpr__Group_2__0 ) )
                    {
                    // InternalFortXTrans.g:1853:2: ( ( rule__DelimitedExpr__Group_2__0 ) )
                    // InternalFortXTrans.g:1854:3: ( rule__DelimitedExpr__Group_2__0 )
                    {
                     before(grammarAccess.getDelimitedExprAccess().getGroup_2()); 
                    // InternalFortXTrans.g:1855:3: ( rule__DelimitedExpr__Group_2__0 )
                    // InternalFortXTrans.g:1855:4: rule__DelimitedExpr__Group_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__DelimitedExpr__Group_2__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getDelimitedExprAccess().getGroup_2()); 

                    }


                    }
                    break;
                case 4 :
                    // InternalFortXTrans.g:1859:2: ( ( rule__DelimitedExpr__Group_3__0 ) )
                    {
                    // InternalFortXTrans.g:1859:2: ( ( rule__DelimitedExpr__Group_3__0 ) )
                    // InternalFortXTrans.g:1860:3: ( rule__DelimitedExpr__Group_3__0 )
                    {
                     before(grammarAccess.getDelimitedExprAccess().getGroup_3()); 
                    // InternalFortXTrans.g:1861:3: ( rule__DelimitedExpr__Group_3__0 )
                    // InternalFortXTrans.g:1861:4: rule__DelimitedExpr__Group_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__DelimitedExpr__Group_3__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getDelimitedExprAccess().getGroup_3()); 

                    }


                    }
                    break;
                case 5 :
                    // InternalFortXTrans.g:1865:2: ( ( rule__DelimitedExpr__Group_4__0 ) )
                    {
                    // InternalFortXTrans.g:1865:2: ( ( rule__DelimitedExpr__Group_4__0 ) )
                    // InternalFortXTrans.g:1866:3: ( rule__DelimitedExpr__Group_4__0 )
                    {
                     before(grammarAccess.getDelimitedExprAccess().getGroup_4()); 
                    // InternalFortXTrans.g:1867:3: ( rule__DelimitedExpr__Group_4__0 )
                    // InternalFortXTrans.g:1867:4: rule__DelimitedExpr__Group_4__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__DelimitedExpr__Group_4__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getDelimitedExprAccess().getGroup_4()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Alternatives"


    // $ANTLR start "rule__Binding__Alternatives"
    // InternalFortXTrans.g:1875:1: rule__Binding__Alternatives : ( ( ( rule__Binding__Group_0__0 ) ) | ( ( rule__Binding__Group_1__0 ) ) );
    public final void rule__Binding__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1879:1: ( ( ( rule__Binding__Group_0__0 ) ) | ( ( rule__Binding__Group_1__0 ) ) )
            int alt19=2;
            alt19 = dfa19.predict(input);
            switch (alt19) {
                case 1 :
                    // InternalFortXTrans.g:1880:2: ( ( rule__Binding__Group_0__0 ) )
                    {
                    // InternalFortXTrans.g:1880:2: ( ( rule__Binding__Group_0__0 ) )
                    // InternalFortXTrans.g:1881:3: ( rule__Binding__Group_0__0 )
                    {
                     before(grammarAccess.getBindingAccess().getGroup_0()); 
                    // InternalFortXTrans.g:1882:3: ( rule__Binding__Group_0__0 )
                    // InternalFortXTrans.g:1882:4: rule__Binding__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Binding__Group_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getBindingAccess().getGroup_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalFortXTrans.g:1886:2: ( ( rule__Binding__Group_1__0 ) )
                    {
                    // InternalFortXTrans.g:1886:2: ( ( rule__Binding__Group_1__0 ) )
                    // InternalFortXTrans.g:1887:3: ( rule__Binding__Group_1__0 )
                    {
                     before(grammarAccess.getBindingAccess().getGroup_1()); 
                    // InternalFortXTrans.g:1888:3: ( rule__Binding__Group_1__0 )
                    // InternalFortXTrans.g:1888:4: rule__Binding__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Binding__Group_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getBindingAccess().getGroup_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Binding__Alternatives"


    // $ANTLR start "rule__GenClause__Alternatives"
    // InternalFortXTrans.g:1896:1: rule__GenClause__Alternatives : ( ( ( rule__GenClause__BindingAssignment_0 ) ) | ( ( rule__GenClause__ExprAssignment_1 ) ) );
    public final void rule__GenClause__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1900:1: ( ( ( rule__GenClause__BindingAssignment_0 ) ) | ( ( rule__GenClause__ExprAssignment_1 ) ) )
            int alt20=2;
            alt20 = dfa20.predict(input);
            switch (alt20) {
                case 1 :
                    // InternalFortXTrans.g:1901:2: ( ( rule__GenClause__BindingAssignment_0 ) )
                    {
                    // InternalFortXTrans.g:1901:2: ( ( rule__GenClause__BindingAssignment_0 ) )
                    // InternalFortXTrans.g:1902:3: ( rule__GenClause__BindingAssignment_0 )
                    {
                     before(grammarAccess.getGenClauseAccess().getBindingAssignment_0()); 
                    // InternalFortXTrans.g:1903:3: ( rule__GenClause__BindingAssignment_0 )
                    // InternalFortXTrans.g:1903:4: rule__GenClause__BindingAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__GenClause__BindingAssignment_0();

                    state._fsp--;


                    }

                     after(grammarAccess.getGenClauseAccess().getBindingAssignment_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalFortXTrans.g:1907:2: ( ( rule__GenClause__ExprAssignment_1 ) )
                    {
                    // InternalFortXTrans.g:1907:2: ( ( rule__GenClause__ExprAssignment_1 ) )
                    // InternalFortXTrans.g:1908:3: ( rule__GenClause__ExprAssignment_1 )
                    {
                     before(grammarAccess.getGenClauseAccess().getExprAssignment_1()); 
                    // InternalFortXTrans.g:1909:3: ( rule__GenClause__ExprAssignment_1 )
                    // InternalFortXTrans.g:1909:4: rule__GenClause__ExprAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__GenClause__ExprAssignment_1();

                    state._fsp--;


                    }

                     after(grammarAccess.getGenClauseAccess().getExprAssignment_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GenClause__Alternatives"


    // $ANTLR start "rule__IdOrTuple__Alternatives"
    // InternalFortXTrans.g:1917:1: rule__IdOrTuple__Alternatives : ( ( ( rule__IdOrTuple__BidAssignment_0 ) ) | ( ( rule__IdOrTuple__Group_1__0 ) ) );
    public final void rule__IdOrTuple__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1921:1: ( ( ( rule__IdOrTuple__BidAssignment_0 ) ) | ( ( rule__IdOrTuple__Group_1__0 ) ) )
            int alt21=2;
            int LA21_0 = input.LA(1);

            if ( (LA21_0==RULE_ID||LA21_0==49) ) {
                alt21=1;
            }
            else if ( (LA21_0==21) ) {
                alt21=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 21, 0, input);

                throw nvae;
            }
            switch (alt21) {
                case 1 :
                    // InternalFortXTrans.g:1922:2: ( ( rule__IdOrTuple__BidAssignment_0 ) )
                    {
                    // InternalFortXTrans.g:1922:2: ( ( rule__IdOrTuple__BidAssignment_0 ) )
                    // InternalFortXTrans.g:1923:3: ( rule__IdOrTuple__BidAssignment_0 )
                    {
                     before(grammarAccess.getIdOrTupleAccess().getBidAssignment_0()); 
                    // InternalFortXTrans.g:1924:3: ( rule__IdOrTuple__BidAssignment_0 )
                    // InternalFortXTrans.g:1924:4: rule__IdOrTuple__BidAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__IdOrTuple__BidAssignment_0();

                    state._fsp--;


                    }

                     after(grammarAccess.getIdOrTupleAccess().getBidAssignment_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalFortXTrans.g:1928:2: ( ( rule__IdOrTuple__Group_1__0 ) )
                    {
                    // InternalFortXTrans.g:1928:2: ( ( rule__IdOrTuple__Group_1__0 ) )
                    // InternalFortXTrans.g:1929:3: ( rule__IdOrTuple__Group_1__0 )
                    {
                     before(grammarAccess.getIdOrTupleAccess().getGroup_1()); 
                    // InternalFortXTrans.g:1930:3: ( rule__IdOrTuple__Group_1__0 )
                    // InternalFortXTrans.g:1930:4: rule__IdOrTuple__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__IdOrTuple__Group_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getIdOrTupleAccess().getGroup_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IdOrTuple__Alternatives"


    // $ANTLR start "rule__BindId__Alternatives"
    // InternalFortXTrans.g:1938:1: rule__BindId__Alternatives : ( ( ( rule__BindId__SAssignment_0 ) ) | ( ( rule__BindId__UndscAssignment_1 ) ) );
    public final void rule__BindId__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1942:1: ( ( ( rule__BindId__SAssignment_0 ) ) | ( ( rule__BindId__UndscAssignment_1 ) ) )
            int alt22=2;
            int LA22_0 = input.LA(1);

            if ( (LA22_0==RULE_ID) ) {
                alt22=1;
            }
            else if ( (LA22_0==49) ) {
                alt22=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 22, 0, input);

                throw nvae;
            }
            switch (alt22) {
                case 1 :
                    // InternalFortXTrans.g:1943:2: ( ( rule__BindId__SAssignment_0 ) )
                    {
                    // InternalFortXTrans.g:1943:2: ( ( rule__BindId__SAssignment_0 ) )
                    // InternalFortXTrans.g:1944:3: ( rule__BindId__SAssignment_0 )
                    {
                     before(grammarAccess.getBindIdAccess().getSAssignment_0()); 
                    // InternalFortXTrans.g:1945:3: ( rule__BindId__SAssignment_0 )
                    // InternalFortXTrans.g:1945:4: rule__BindId__SAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__BindId__SAssignment_0();

                    state._fsp--;


                    }

                     after(grammarAccess.getBindIdAccess().getSAssignment_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalFortXTrans.g:1949:2: ( ( rule__BindId__UndscAssignment_1 ) )
                    {
                    // InternalFortXTrans.g:1949:2: ( ( rule__BindId__UndscAssignment_1 ) )
                    // InternalFortXTrans.g:1950:3: ( rule__BindId__UndscAssignment_1 )
                    {
                     before(grammarAccess.getBindIdAccess().getUndscAssignment_1()); 
                    // InternalFortXTrans.g:1951:3: ( rule__BindId__UndscAssignment_1 )
                    // InternalFortXTrans.g:1951:4: rule__BindId__UndscAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__BindId__UndscAssignment_1();

                    state._fsp--;


                    }

                     after(grammarAccess.getBindIdAccess().getUndscAssignment_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BindId__Alternatives"


    // $ANTLR start "rule__FieldDecl__Alternatives"
    // InternalFortXTrans.g:1959:1: rule__FieldDecl__Alternatives : ( ( ( rule__FieldDecl__Group_0__0 ) ) | ( ( rule__FieldDecl__Group_1__0 ) ) | ( ( rule__FieldDecl__Group_2__0 ) ) | ( ( rule__FieldDecl__Group_3__0 ) ) );
    public final void rule__FieldDecl__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1963:1: ( ( ( rule__FieldDecl__Group_0__0 ) ) | ( ( rule__FieldDecl__Group_1__0 ) ) | ( ( rule__FieldDecl__Group_2__0 ) ) | ( ( rule__FieldDecl__Group_3__0 ) ) )
            int alt23=4;
            alt23 = dfa23.predict(input);
            switch (alt23) {
                case 1 :
                    // InternalFortXTrans.g:1964:2: ( ( rule__FieldDecl__Group_0__0 ) )
                    {
                    // InternalFortXTrans.g:1964:2: ( ( rule__FieldDecl__Group_0__0 ) )
                    // InternalFortXTrans.g:1965:3: ( rule__FieldDecl__Group_0__0 )
                    {
                     before(grammarAccess.getFieldDeclAccess().getGroup_0()); 
                    // InternalFortXTrans.g:1966:3: ( rule__FieldDecl__Group_0__0 )
                    // InternalFortXTrans.g:1966:4: rule__FieldDecl__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__FieldDecl__Group_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getFieldDeclAccess().getGroup_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalFortXTrans.g:1970:2: ( ( rule__FieldDecl__Group_1__0 ) )
                    {
                    // InternalFortXTrans.g:1970:2: ( ( rule__FieldDecl__Group_1__0 ) )
                    // InternalFortXTrans.g:1971:3: ( rule__FieldDecl__Group_1__0 )
                    {
                     before(grammarAccess.getFieldDeclAccess().getGroup_1()); 
                    // InternalFortXTrans.g:1972:3: ( rule__FieldDecl__Group_1__0 )
                    // InternalFortXTrans.g:1972:4: rule__FieldDecl__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__FieldDecl__Group_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getFieldDeclAccess().getGroup_1()); 

                    }


                    }
                    break;
                case 3 :
                    // InternalFortXTrans.g:1976:2: ( ( rule__FieldDecl__Group_2__0 ) )
                    {
                    // InternalFortXTrans.g:1976:2: ( ( rule__FieldDecl__Group_2__0 ) )
                    // InternalFortXTrans.g:1977:3: ( rule__FieldDecl__Group_2__0 )
                    {
                     before(grammarAccess.getFieldDeclAccess().getGroup_2()); 
                    // InternalFortXTrans.g:1978:3: ( rule__FieldDecl__Group_2__0 )
                    // InternalFortXTrans.g:1978:4: rule__FieldDecl__Group_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__FieldDecl__Group_2__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getFieldDeclAccess().getGroup_2()); 

                    }


                    }
                    break;
                case 4 :
                    // InternalFortXTrans.g:1982:2: ( ( rule__FieldDecl__Group_3__0 ) )
                    {
                    // InternalFortXTrans.g:1982:2: ( ( rule__FieldDecl__Group_3__0 ) )
                    // InternalFortXTrans.g:1983:3: ( rule__FieldDecl__Group_3__0 )
                    {
                     before(grammarAccess.getFieldDeclAccess().getGroup_3()); 
                    // InternalFortXTrans.g:1984:3: ( rule__FieldDecl__Group_3__0 )
                    // InternalFortXTrans.g:1984:4: rule__FieldDecl__Group_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__FieldDecl__Group_3__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getFieldDeclAccess().getGroup_3()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Alternatives"


    // $ANTLR start "rule__NoNewlineVarWTypes__Alternatives"
    // InternalFortXTrans.g:1992:1: rule__NoNewlineVarWTypes__Alternatives : ( ( ( rule__NoNewlineVarWTypes__SingleAssignment_0 ) ) | ( ( rule__NoNewlineVarWTypes__Group_1__0 ) ) );
    public final void rule__NoNewlineVarWTypes__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1996:1: ( ( ( rule__NoNewlineVarWTypes__SingleAssignment_0 ) ) | ( ( rule__NoNewlineVarWTypes__Group_1__0 ) ) )
            int alt24=2;
            int LA24_0 = input.LA(1);

            if ( (LA24_0==RULE_ID||LA24_0==49) ) {
                alt24=1;
            }
            else if ( (LA24_0==21) ) {
                alt24=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 24, 0, input);

                throw nvae;
            }
            switch (alt24) {
                case 1 :
                    // InternalFortXTrans.g:1997:2: ( ( rule__NoNewlineVarWTypes__SingleAssignment_0 ) )
                    {
                    // InternalFortXTrans.g:1997:2: ( ( rule__NoNewlineVarWTypes__SingleAssignment_0 ) )
                    // InternalFortXTrans.g:1998:3: ( rule__NoNewlineVarWTypes__SingleAssignment_0 )
                    {
                     before(grammarAccess.getNoNewlineVarWTypesAccess().getSingleAssignment_0()); 
                    // InternalFortXTrans.g:1999:3: ( rule__NoNewlineVarWTypes__SingleAssignment_0 )
                    // InternalFortXTrans.g:1999:4: rule__NoNewlineVarWTypes__SingleAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__NoNewlineVarWTypes__SingleAssignment_0();

                    state._fsp--;


                    }

                     after(grammarAccess.getNoNewlineVarWTypesAccess().getSingleAssignment_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalFortXTrans.g:2003:2: ( ( rule__NoNewlineVarWTypes__Group_1__0 ) )
                    {
                    // InternalFortXTrans.g:2003:2: ( ( rule__NoNewlineVarWTypes__Group_1__0 ) )
                    // InternalFortXTrans.g:2004:3: ( rule__NoNewlineVarWTypes__Group_1__0 )
                    {
                     before(grammarAccess.getNoNewlineVarWTypesAccess().getGroup_1()); 
                    // InternalFortXTrans.g:2005:3: ( rule__NoNewlineVarWTypes__Group_1__0 )
                    // InternalFortXTrans.g:2005:4: rule__NoNewlineVarWTypes__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__NoNewlineVarWTypes__Group_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getNoNewlineVarWTypesAccess().getGroup_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NoNewlineVarWTypes__Alternatives"


    // $ANTLR start "rule__InitVal__Alternatives"
    // InternalFortXTrans.g:2013:1: rule__InitVal__Alternatives : ( ( ( rule__InitVal__Group_0__0 ) ) | ( ( rule__InitVal__Group_1__0 ) ) );
    public final void rule__InitVal__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2017:1: ( ( ( rule__InitVal__Group_0__0 ) ) | ( ( rule__InitVal__Group_1__0 ) ) )
            int alt25=2;
            int LA25_0 = input.LA(1);

            if ( (LA25_0==28) ) {
                alt25=1;
            }
            else if ( (LA25_0==35) ) {
                alt25=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 25, 0, input);

                throw nvae;
            }
            switch (alt25) {
                case 1 :
                    // InternalFortXTrans.g:2018:2: ( ( rule__InitVal__Group_0__0 ) )
                    {
                    // InternalFortXTrans.g:2018:2: ( ( rule__InitVal__Group_0__0 ) )
                    // InternalFortXTrans.g:2019:3: ( rule__InitVal__Group_0__0 )
                    {
                     before(grammarAccess.getInitValAccess().getGroup_0()); 
                    // InternalFortXTrans.g:2020:3: ( rule__InitVal__Group_0__0 )
                    // InternalFortXTrans.g:2020:4: rule__InitVal__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__InitVal__Group_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getInitValAccess().getGroup_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalFortXTrans.g:2024:2: ( ( rule__InitVal__Group_1__0 ) )
                    {
                    // InternalFortXTrans.g:2024:2: ( ( rule__InitVal__Group_1__0 ) )
                    // InternalFortXTrans.g:2025:3: ( rule__InitVal__Group_1__0 )
                    {
                     before(grammarAccess.getInitValAccess().getGroup_1()); 
                    // InternalFortXTrans.g:2026:3: ( rule__InitVal__Group_1__0 )
                    // InternalFortXTrans.g:2026:4: rule__InitVal__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__InitVal__Group_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getInitValAccess().getGroup_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InitVal__Alternatives"


    // $ANTLR start "rule__LiteralTuple__Alternatives"
    // InternalFortXTrans.g:2034:1: rule__LiteralTuple__Alternatives : ( ( ( rule__LiteralTuple__LitAssignment_0 ) ) | ( ( rule__LiteralTuple__QnameAssignment_1 ) ) | ( ( rule__LiteralTuple__QlistAssignment_2 ) ) );
    public final void rule__LiteralTuple__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2038:1: ( ( ( rule__LiteralTuple__LitAssignment_0 ) ) | ( ( rule__LiteralTuple__QnameAssignment_1 ) ) | ( ( rule__LiteralTuple__QlistAssignment_2 ) ) )
            int alt26=3;
            switch ( input.LA(1) ) {
            case RULE_INT:
            case RULE_FLOAT:
            case RULE_STRING:
                {
                alt26=1;
                }
                break;
            case 21:
                {
                int LA26_2 = input.LA(2);

                if ( (LA26_2==RULE_ID) ) {
                    alt26=3;
                }
                else if ( ((LA26_2>=RULE_INT && LA26_2<=RULE_STRING)) ) {
                    alt26=1;
                }
                else {
                    NoViableAltException nvae =
                        new NoViableAltException("", 26, 2, input);

                    throw nvae;
                }
                }
                break;
            case RULE_ID:
                {
                alt26=2;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 26, 0, input);

                throw nvae;
            }

            switch (alt26) {
                case 1 :
                    // InternalFortXTrans.g:2039:2: ( ( rule__LiteralTuple__LitAssignment_0 ) )
                    {
                    // InternalFortXTrans.g:2039:2: ( ( rule__LiteralTuple__LitAssignment_0 ) )
                    // InternalFortXTrans.g:2040:3: ( rule__LiteralTuple__LitAssignment_0 )
                    {
                     before(grammarAccess.getLiteralTupleAccess().getLitAssignment_0()); 
                    // InternalFortXTrans.g:2041:3: ( rule__LiteralTuple__LitAssignment_0 )
                    // InternalFortXTrans.g:2041:4: rule__LiteralTuple__LitAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__LiteralTuple__LitAssignment_0();

                    state._fsp--;


                    }

                     after(grammarAccess.getLiteralTupleAccess().getLitAssignment_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalFortXTrans.g:2045:2: ( ( rule__LiteralTuple__QnameAssignment_1 ) )
                    {
                    // InternalFortXTrans.g:2045:2: ( ( rule__LiteralTuple__QnameAssignment_1 ) )
                    // InternalFortXTrans.g:2046:3: ( rule__LiteralTuple__QnameAssignment_1 )
                    {
                     before(grammarAccess.getLiteralTupleAccess().getQnameAssignment_1()); 
                    // InternalFortXTrans.g:2047:3: ( rule__LiteralTuple__QnameAssignment_1 )
                    // InternalFortXTrans.g:2047:4: rule__LiteralTuple__QnameAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__LiteralTuple__QnameAssignment_1();

                    state._fsp--;


                    }

                     after(grammarAccess.getLiteralTupleAccess().getQnameAssignment_1()); 

                    }


                    }
                    break;
                case 3 :
                    // InternalFortXTrans.g:2051:2: ( ( rule__LiteralTuple__QlistAssignment_2 ) )
                    {
                    // InternalFortXTrans.g:2051:2: ( ( rule__LiteralTuple__QlistAssignment_2 ) )
                    // InternalFortXTrans.g:2052:3: ( rule__LiteralTuple__QlistAssignment_2 )
                    {
                     before(grammarAccess.getLiteralTupleAccess().getQlistAssignment_2()); 
                    // InternalFortXTrans.g:2053:3: ( rule__LiteralTuple__QlistAssignment_2 )
                    // InternalFortXTrans.g:2053:4: rule__LiteralTuple__QlistAssignment_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__LiteralTuple__QlistAssignment_2();

                    state._fsp--;


                    }

                     after(grammarAccess.getLiteralTupleAccess().getQlistAssignment_2()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralTuple__Alternatives"


    // $ANTLR start "rule__LiteralTup__Alternatives"
    // InternalFortXTrans.g:2061:1: rule__LiteralTup__Alternatives : ( ( ( rule__LiteralTup__LitAssignment_0 ) ) | ( ( rule__LiteralTup__Group_1__0 ) ) );
    public final void rule__LiteralTup__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2065:1: ( ( ( rule__LiteralTup__LitAssignment_0 ) ) | ( ( rule__LiteralTup__Group_1__0 ) ) )
            int alt27=2;
            int LA27_0 = input.LA(1);

            if ( ((LA27_0>=RULE_INT && LA27_0<=RULE_STRING)) ) {
                alt27=1;
            }
            else if ( (LA27_0==21) ) {
                alt27=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 27, 0, input);

                throw nvae;
            }
            switch (alt27) {
                case 1 :
                    // InternalFortXTrans.g:2066:2: ( ( rule__LiteralTup__LitAssignment_0 ) )
                    {
                    // InternalFortXTrans.g:2066:2: ( ( rule__LiteralTup__LitAssignment_0 ) )
                    // InternalFortXTrans.g:2067:3: ( rule__LiteralTup__LitAssignment_0 )
                    {
                     before(grammarAccess.getLiteralTupAccess().getLitAssignment_0()); 
                    // InternalFortXTrans.g:2068:3: ( rule__LiteralTup__LitAssignment_0 )
                    // InternalFortXTrans.g:2068:4: rule__LiteralTup__LitAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__LiteralTup__LitAssignment_0();

                    state._fsp--;


                    }

                     after(grammarAccess.getLiteralTupAccess().getLitAssignment_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalFortXTrans.g:2072:2: ( ( rule__LiteralTup__Group_1__0 ) )
                    {
                    // InternalFortXTrans.g:2072:2: ( ( rule__LiteralTup__Group_1__0 ) )
                    // InternalFortXTrans.g:2073:3: ( rule__LiteralTup__Group_1__0 )
                    {
                     before(grammarAccess.getLiteralTupAccess().getGroup_1()); 
                    // InternalFortXTrans.g:2074:3: ( rule__LiteralTup__Group_1__0 )
                    // InternalFortXTrans.g:2074:4: rule__LiteralTup__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__LiteralTup__Group_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getLiteralTupAccess().getGroup_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralTup__Alternatives"


    // $ANTLR start "rule__Literal__Alternatives"
    // InternalFortXTrans.g:2082:1: rule__Literal__Alternatives : ( ( ( rule__Literal__IntgAssignment_0 ) ) | ( ( rule__Literal__FlotAssignment_1 ) ) | ( ( rule__Literal__StrAssignment_2 ) ) );
    public final void rule__Literal__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2086:1: ( ( ( rule__Literal__IntgAssignment_0 ) ) | ( ( rule__Literal__FlotAssignment_1 ) ) | ( ( rule__Literal__StrAssignment_2 ) ) )
            int alt28=3;
            switch ( input.LA(1) ) {
            case RULE_INT:
                {
                alt28=1;
                }
                break;
            case RULE_FLOAT:
                {
                alt28=2;
                }
                break;
            case RULE_STRING:
                {
                alt28=3;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 28, 0, input);

                throw nvae;
            }

            switch (alt28) {
                case 1 :
                    // InternalFortXTrans.g:2087:2: ( ( rule__Literal__IntgAssignment_0 ) )
                    {
                    // InternalFortXTrans.g:2087:2: ( ( rule__Literal__IntgAssignment_0 ) )
                    // InternalFortXTrans.g:2088:3: ( rule__Literal__IntgAssignment_0 )
                    {
                     before(grammarAccess.getLiteralAccess().getIntgAssignment_0()); 
                    // InternalFortXTrans.g:2089:3: ( rule__Literal__IntgAssignment_0 )
                    // InternalFortXTrans.g:2089:4: rule__Literal__IntgAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Literal__IntgAssignment_0();

                    state._fsp--;


                    }

                     after(grammarAccess.getLiteralAccess().getIntgAssignment_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalFortXTrans.g:2093:2: ( ( rule__Literal__FlotAssignment_1 ) )
                    {
                    // InternalFortXTrans.g:2093:2: ( ( rule__Literal__FlotAssignment_1 ) )
                    // InternalFortXTrans.g:2094:3: ( rule__Literal__FlotAssignment_1 )
                    {
                     before(grammarAccess.getLiteralAccess().getFlotAssignment_1()); 
                    // InternalFortXTrans.g:2095:3: ( rule__Literal__FlotAssignment_1 )
                    // InternalFortXTrans.g:2095:4: rule__Literal__FlotAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__Literal__FlotAssignment_1();

                    state._fsp--;


                    }

                     after(grammarAccess.getLiteralAccess().getFlotAssignment_1()); 

                    }


                    }
                    break;
                case 3 :
                    // InternalFortXTrans.g:2099:2: ( ( rule__Literal__StrAssignment_2 ) )
                    {
                    // InternalFortXTrans.g:2099:2: ( ( rule__Literal__StrAssignment_2 ) )
                    // InternalFortXTrans.g:2100:3: ( rule__Literal__StrAssignment_2 )
                    {
                     before(grammarAccess.getLiteralAccess().getStrAssignment_2()); 
                    // InternalFortXTrans.g:2101:3: ( rule__Literal__StrAssignment_2 )
                    // InternalFortXTrans.g:2101:4: rule__Literal__StrAssignment_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__Literal__StrAssignment_2();

                    state._fsp--;


                    }

                     after(grammarAccess.getLiteralAccess().getStrAssignment_2()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Literal__Alternatives"


    // $ANTLR start "rule__LocalVarDecl__Alternatives"
    // InternalFortXTrans.g:2109:1: rule__LocalVarDecl__Alternatives : ( ( ( rule__LocalVarDecl__Group_0__0 ) ) | ( ( rule__LocalVarDecl__Group_1__0 ) ) | ( ( rule__LocalVarDecl__Group_2__0 ) ) | ( ( rule__LocalVarDecl__Group_3__0 ) ) );
    public final void rule__LocalVarDecl__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2113:1: ( ( ( rule__LocalVarDecl__Group_0__0 ) ) | ( ( rule__LocalVarDecl__Group_1__0 ) ) | ( ( rule__LocalVarDecl__Group_2__0 ) ) | ( ( rule__LocalVarDecl__Group_3__0 ) ) )
            int alt29=4;
            alt29 = dfa29.predict(input);
            switch (alt29) {
                case 1 :
                    // InternalFortXTrans.g:2114:2: ( ( rule__LocalVarDecl__Group_0__0 ) )
                    {
                    // InternalFortXTrans.g:2114:2: ( ( rule__LocalVarDecl__Group_0__0 ) )
                    // InternalFortXTrans.g:2115:3: ( rule__LocalVarDecl__Group_0__0 )
                    {
                     before(grammarAccess.getLocalVarDeclAccess().getGroup_0()); 
                    // InternalFortXTrans.g:2116:3: ( rule__LocalVarDecl__Group_0__0 )
                    // InternalFortXTrans.g:2116:4: rule__LocalVarDecl__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__LocalVarDecl__Group_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getLocalVarDeclAccess().getGroup_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalFortXTrans.g:2120:2: ( ( rule__LocalVarDecl__Group_1__0 ) )
                    {
                    // InternalFortXTrans.g:2120:2: ( ( rule__LocalVarDecl__Group_1__0 ) )
                    // InternalFortXTrans.g:2121:3: ( rule__LocalVarDecl__Group_1__0 )
                    {
                     before(grammarAccess.getLocalVarDeclAccess().getGroup_1()); 
                    // InternalFortXTrans.g:2122:3: ( rule__LocalVarDecl__Group_1__0 )
                    // InternalFortXTrans.g:2122:4: rule__LocalVarDecl__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__LocalVarDecl__Group_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getLocalVarDeclAccess().getGroup_1()); 

                    }


                    }
                    break;
                case 3 :
                    // InternalFortXTrans.g:2126:2: ( ( rule__LocalVarDecl__Group_2__0 ) )
                    {
                    // InternalFortXTrans.g:2126:2: ( ( rule__LocalVarDecl__Group_2__0 ) )
                    // InternalFortXTrans.g:2127:3: ( rule__LocalVarDecl__Group_2__0 )
                    {
                     before(grammarAccess.getLocalVarDeclAccess().getGroup_2()); 
                    // InternalFortXTrans.g:2128:3: ( rule__LocalVarDecl__Group_2__0 )
                    // InternalFortXTrans.g:2128:4: rule__LocalVarDecl__Group_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__LocalVarDecl__Group_2__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getLocalVarDeclAccess().getGroup_2()); 

                    }


                    }
                    break;
                case 4 :
                    // InternalFortXTrans.g:2132:2: ( ( rule__LocalVarDecl__Group_3__0 ) )
                    {
                    // InternalFortXTrans.g:2132:2: ( ( rule__LocalVarDecl__Group_3__0 ) )
                    // InternalFortXTrans.g:2133:3: ( rule__LocalVarDecl__Group_3__0 )
                    {
                     before(grammarAccess.getLocalVarDeclAccess().getGroup_3()); 
                    // InternalFortXTrans.g:2134:3: ( rule__LocalVarDecl__Group_3__0 )
                    // InternalFortXTrans.g:2134:4: rule__LocalVarDecl__Group_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__LocalVarDecl__Group_3__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getLocalVarDeclAccess().getGroup_3()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Alternatives"


    // $ANTLR start "rule__Component__Group__0"
    // InternalFortXTrans.g:2142:1: rule__Component__Group__0 : rule__Component__Group__0__Impl rule__Component__Group__1 ;
    public final void rule__Component__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2146:1: ( rule__Component__Group__0__Impl rule__Component__Group__1 )
            // InternalFortXTrans.g:2147:2: rule__Component__Group__0__Impl rule__Component__Group__1
            {
            pushFollow(FOLLOW_5);
            rule__Component__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Component__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Component__Group__0"


    // $ANTLR start "rule__Component__Group__0__Impl"
    // InternalFortXTrans.g:2154:1: rule__Component__Group__0__Impl : ( 'component' ) ;
    public final void rule__Component__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2158:1: ( ( 'component' ) )
            // InternalFortXTrans.g:2159:1: ( 'component' )
            {
            // InternalFortXTrans.g:2159:1: ( 'component' )
            // InternalFortXTrans.g:2160:2: 'component'
            {
             before(grammarAccess.getComponentAccess().getComponentKeyword_0()); 
            match(input,13,FOLLOW_2); 
             after(grammarAccess.getComponentAccess().getComponentKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Component__Group__0__Impl"


    // $ANTLR start "rule__Component__Group__1"
    // InternalFortXTrans.g:2169:1: rule__Component__Group__1 : rule__Component__Group__1__Impl rule__Component__Group__2 ;
    public final void rule__Component__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2173:1: ( rule__Component__Group__1__Impl rule__Component__Group__2 )
            // InternalFortXTrans.g:2174:2: rule__Component__Group__1__Impl rule__Component__Group__2
            {
            pushFollow(FOLLOW_6);
            rule__Component__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Component__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Component__Group__1"


    // $ANTLR start "rule__Component__Group__1__Impl"
    // InternalFortXTrans.g:2181:1: rule__Component__Group__1__Impl : ( ( rule__Component__NameAssignment_1 ) ) ;
    public final void rule__Component__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2185:1: ( ( ( rule__Component__NameAssignment_1 ) ) )
            // InternalFortXTrans.g:2186:1: ( ( rule__Component__NameAssignment_1 ) )
            {
            // InternalFortXTrans.g:2186:1: ( ( rule__Component__NameAssignment_1 ) )
            // InternalFortXTrans.g:2187:2: ( rule__Component__NameAssignment_1 )
            {
             before(grammarAccess.getComponentAccess().getNameAssignment_1()); 
            // InternalFortXTrans.g:2188:2: ( rule__Component__NameAssignment_1 )
            // InternalFortXTrans.g:2188:3: rule__Component__NameAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__Component__NameAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getComponentAccess().getNameAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Component__Group__1__Impl"


    // $ANTLR start "rule__Component__Group__2"
    // InternalFortXTrans.g:2196:1: rule__Component__Group__2 : rule__Component__Group__2__Impl rule__Component__Group__3 ;
    public final void rule__Component__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2200:1: ( rule__Component__Group__2__Impl rule__Component__Group__3 )
            // InternalFortXTrans.g:2201:2: rule__Component__Group__2__Impl rule__Component__Group__3
            {
            pushFollow(FOLLOW_6);
            rule__Component__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Component__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Component__Group__2"


    // $ANTLR start "rule__Component__Group__2__Impl"
    // InternalFortXTrans.g:2208:1: rule__Component__Group__2__Impl : ( ( rule__Component__ImportsAssignment_2 )* ) ;
    public final void rule__Component__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2212:1: ( ( ( rule__Component__ImportsAssignment_2 )* ) )
            // InternalFortXTrans.g:2213:1: ( ( rule__Component__ImportsAssignment_2 )* )
            {
            // InternalFortXTrans.g:2213:1: ( ( rule__Component__ImportsAssignment_2 )* )
            // InternalFortXTrans.g:2214:2: ( rule__Component__ImportsAssignment_2 )*
            {
             before(grammarAccess.getComponentAccess().getImportsAssignment_2()); 
            // InternalFortXTrans.g:2215:2: ( rule__Component__ImportsAssignment_2 )*
            loop30:
            do {
                int alt30=2;
                int LA30_0 = input.LA(1);

                if ( (LA30_0==36) ) {
                    alt30=1;
                }


                switch (alt30) {
            	case 1 :
            	    // InternalFortXTrans.g:2215:3: rule__Component__ImportsAssignment_2
            	    {
            	    pushFollow(FOLLOW_7);
            	    rule__Component__ImportsAssignment_2();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop30;
                }
            } while (true);

             after(grammarAccess.getComponentAccess().getImportsAssignment_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Component__Group__2__Impl"


    // $ANTLR start "rule__Component__Group__3"
    // InternalFortXTrans.g:2223:1: rule__Component__Group__3 : rule__Component__Group__3__Impl rule__Component__Group__4 ;
    public final void rule__Component__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2227:1: ( rule__Component__Group__3__Impl rule__Component__Group__4 )
            // InternalFortXTrans.g:2228:2: rule__Component__Group__3__Impl rule__Component__Group__4
            {
            pushFollow(FOLLOW_8);
            rule__Component__Group__3__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Component__Group__4();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Component__Group__3"


    // $ANTLR start "rule__Component__Group__3__Impl"
    // InternalFortXTrans.g:2235:1: rule__Component__Group__3__Impl : ( ( ( rule__Component__ExportsAssignment_3 ) ) ( ( rule__Component__ExportsAssignment_3 )* ) ) ;
    public final void rule__Component__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2239:1: ( ( ( ( rule__Component__ExportsAssignment_3 ) ) ( ( rule__Component__ExportsAssignment_3 )* ) ) )
            // InternalFortXTrans.g:2240:1: ( ( ( rule__Component__ExportsAssignment_3 ) ) ( ( rule__Component__ExportsAssignment_3 )* ) )
            {
            // InternalFortXTrans.g:2240:1: ( ( ( rule__Component__ExportsAssignment_3 ) ) ( ( rule__Component__ExportsAssignment_3 )* ) )
            // InternalFortXTrans.g:2241:2: ( ( rule__Component__ExportsAssignment_3 ) ) ( ( rule__Component__ExportsAssignment_3 )* )
            {
            // InternalFortXTrans.g:2241:2: ( ( rule__Component__ExportsAssignment_3 ) )
            // InternalFortXTrans.g:2242:3: ( rule__Component__ExportsAssignment_3 )
            {
             before(grammarAccess.getComponentAccess().getExportsAssignment_3()); 
            // InternalFortXTrans.g:2243:3: ( rule__Component__ExportsAssignment_3 )
            // InternalFortXTrans.g:2243:4: rule__Component__ExportsAssignment_3
            {
            pushFollow(FOLLOW_9);
            rule__Component__ExportsAssignment_3();

            state._fsp--;


            }

             after(grammarAccess.getComponentAccess().getExportsAssignment_3()); 

            }

            // InternalFortXTrans.g:2246:2: ( ( rule__Component__ExportsAssignment_3 )* )
            // InternalFortXTrans.g:2247:3: ( rule__Component__ExportsAssignment_3 )*
            {
             before(grammarAccess.getComponentAccess().getExportsAssignment_3()); 
            // InternalFortXTrans.g:2248:3: ( rule__Component__ExportsAssignment_3 )*
            loop31:
            do {
                int alt31=2;
                int LA31_0 = input.LA(1);

                if ( (LA31_0==37) ) {
                    alt31=1;
                }


                switch (alt31) {
            	case 1 :
            	    // InternalFortXTrans.g:2248:4: rule__Component__ExportsAssignment_3
            	    {
            	    pushFollow(FOLLOW_9);
            	    rule__Component__ExportsAssignment_3();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop31;
                }
            } while (true);

             after(grammarAccess.getComponentAccess().getExportsAssignment_3()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Component__Group__3__Impl"


    // $ANTLR start "rule__Component__Group__4"
    // InternalFortXTrans.g:2257:1: rule__Component__Group__4 : rule__Component__Group__4__Impl rule__Component__Group__5 ;
    public final void rule__Component__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2261:1: ( rule__Component__Group__4__Impl rule__Component__Group__5 )
            // InternalFortXTrans.g:2262:2: rule__Component__Group__4__Impl rule__Component__Group__5
            {
            pushFollow(FOLLOW_8);
            rule__Component__Group__4__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Component__Group__5();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Component__Group__4"


    // $ANTLR start "rule__Component__Group__4__Impl"
    // InternalFortXTrans.g:2269:1: rule__Component__Group__4__Impl : ( ( rule__Component__DeclsAssignment_4 )* ) ;
    public final void rule__Component__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2273:1: ( ( ( rule__Component__DeclsAssignment_4 )* ) )
            // InternalFortXTrans.g:2274:1: ( ( rule__Component__DeclsAssignment_4 )* )
            {
            // InternalFortXTrans.g:2274:1: ( ( rule__Component__DeclsAssignment_4 )* )
            // InternalFortXTrans.g:2275:2: ( rule__Component__DeclsAssignment_4 )*
            {
             before(grammarAccess.getComponentAccess().getDeclsAssignment_4()); 
            // InternalFortXTrans.g:2276:2: ( rule__Component__DeclsAssignment_4 )*
            loop32:
            do {
                int alt32=2;
                int LA32_0 = input.LA(1);

                if ( (LA32_0==RULE_ID||LA32_0==21||(LA32_0>=39 && LA32_0<=42)||(LA32_0>=49 && LA32_0<=50)) ) {
                    alt32=1;
                }


                switch (alt32) {
            	case 1 :
            	    // InternalFortXTrans.g:2276:3: rule__Component__DeclsAssignment_4
            	    {
            	    pushFollow(FOLLOW_3);
            	    rule__Component__DeclsAssignment_4();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop32;
                }
            } while (true);

             after(grammarAccess.getComponentAccess().getDeclsAssignment_4()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Component__Group__4__Impl"


    // $ANTLR start "rule__Component__Group__5"
    // InternalFortXTrans.g:2284:1: rule__Component__Group__5 : rule__Component__Group__5__Impl ;
    public final void rule__Component__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2288:1: ( rule__Component__Group__5__Impl )
            // InternalFortXTrans.g:2289:2: rule__Component__Group__5__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Component__Group__5__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Component__Group__5"


    // $ANTLR start "rule__Component__Group__5__Impl"
    // InternalFortXTrans.g:2295:1: rule__Component__Group__5__Impl : ( 'end' ) ;
    public final void rule__Component__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2299:1: ( ( 'end' ) )
            // InternalFortXTrans.g:2300:1: ( 'end' )
            {
            // InternalFortXTrans.g:2300:1: ( 'end' )
            // InternalFortXTrans.g:2301:2: 'end'
            {
             before(grammarAccess.getComponentAccess().getEndKeyword_5()); 
            match(input,14,FOLLOW_2); 
             after(grammarAccess.getComponentAccess().getEndKeyword_5()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Component__Group__5__Impl"


    // $ANTLR start "rule__API__Group__0"
    // InternalFortXTrans.g:2311:1: rule__API__Group__0 : rule__API__Group__0__Impl rule__API__Group__1 ;
    public final void rule__API__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2315:1: ( rule__API__Group__0__Impl rule__API__Group__1 )
            // InternalFortXTrans.g:2316:2: rule__API__Group__0__Impl rule__API__Group__1
            {
            pushFollow(FOLLOW_5);
            rule__API__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__API__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__API__Group__0"


    // $ANTLR start "rule__API__Group__0__Impl"
    // InternalFortXTrans.g:2323:1: rule__API__Group__0__Impl : ( 'api' ) ;
    public final void rule__API__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2327:1: ( ( 'api' ) )
            // InternalFortXTrans.g:2328:1: ( 'api' )
            {
            // InternalFortXTrans.g:2328:1: ( 'api' )
            // InternalFortXTrans.g:2329:2: 'api'
            {
             before(grammarAccess.getAPIAccess().getApiKeyword_0()); 
            match(input,15,FOLLOW_2); 
             after(grammarAccess.getAPIAccess().getApiKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__API__Group__0__Impl"


    // $ANTLR start "rule__API__Group__1"
    // InternalFortXTrans.g:2338:1: rule__API__Group__1 : rule__API__Group__1__Impl rule__API__Group__2 ;
    public final void rule__API__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2342:1: ( rule__API__Group__1__Impl rule__API__Group__2 )
            // InternalFortXTrans.g:2343:2: rule__API__Group__1__Impl rule__API__Group__2
            {
            pushFollow(FOLLOW_10);
            rule__API__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__API__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__API__Group__1"


    // $ANTLR start "rule__API__Group__1__Impl"
    // InternalFortXTrans.g:2350:1: rule__API__Group__1__Impl : ( ( rule__API__NameAssignment_1 ) ) ;
    public final void rule__API__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2354:1: ( ( ( rule__API__NameAssignment_1 ) ) )
            // InternalFortXTrans.g:2355:1: ( ( rule__API__NameAssignment_1 ) )
            {
            // InternalFortXTrans.g:2355:1: ( ( rule__API__NameAssignment_1 ) )
            // InternalFortXTrans.g:2356:2: ( rule__API__NameAssignment_1 )
            {
             before(grammarAccess.getAPIAccess().getNameAssignment_1()); 
            // InternalFortXTrans.g:2357:2: ( rule__API__NameAssignment_1 )
            // InternalFortXTrans.g:2357:3: rule__API__NameAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__API__NameAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getAPIAccess().getNameAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__API__Group__1__Impl"


    // $ANTLR start "rule__API__Group__2"
    // InternalFortXTrans.g:2365:1: rule__API__Group__2 : rule__API__Group__2__Impl rule__API__Group__3 ;
    public final void rule__API__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2369:1: ( rule__API__Group__2__Impl rule__API__Group__3 )
            // InternalFortXTrans.g:2370:2: rule__API__Group__2__Impl rule__API__Group__3
            {
            pushFollow(FOLLOW_10);
            rule__API__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__API__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__API__Group__2"


    // $ANTLR start "rule__API__Group__2__Impl"
    // InternalFortXTrans.g:2377:1: rule__API__Group__2__Impl : ( ( rule__API__ImportsAssignment_2 )* ) ;
    public final void rule__API__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2381:1: ( ( ( rule__API__ImportsAssignment_2 )* ) )
            // InternalFortXTrans.g:2382:1: ( ( rule__API__ImportsAssignment_2 )* )
            {
            // InternalFortXTrans.g:2382:1: ( ( rule__API__ImportsAssignment_2 )* )
            // InternalFortXTrans.g:2383:2: ( rule__API__ImportsAssignment_2 )*
            {
             before(grammarAccess.getAPIAccess().getImportsAssignment_2()); 
            // InternalFortXTrans.g:2384:2: ( rule__API__ImportsAssignment_2 )*
            loop33:
            do {
                int alt33=2;
                int LA33_0 = input.LA(1);

                if ( (LA33_0==36) ) {
                    alt33=1;
                }


                switch (alt33) {
            	case 1 :
            	    // InternalFortXTrans.g:2384:3: rule__API__ImportsAssignment_2
            	    {
            	    pushFollow(FOLLOW_7);
            	    rule__API__ImportsAssignment_2();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop33;
                }
            } while (true);

             after(grammarAccess.getAPIAccess().getImportsAssignment_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__API__Group__2__Impl"


    // $ANTLR start "rule__API__Group__3"
    // InternalFortXTrans.g:2392:1: rule__API__Group__3 : rule__API__Group__3__Impl ;
    public final void rule__API__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2396:1: ( rule__API__Group__3__Impl )
            // InternalFortXTrans.g:2397:2: rule__API__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__API__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__API__Group__3"


    // $ANTLR start "rule__API__Group__3__Impl"
    // InternalFortXTrans.g:2403:1: rule__API__Group__3__Impl : ( 'end' ) ;
    public final void rule__API__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2407:1: ( ( 'end' ) )
            // InternalFortXTrans.g:2408:1: ( 'end' )
            {
            // InternalFortXTrans.g:2408:1: ( 'end' )
            // InternalFortXTrans.g:2409:2: 'end'
            {
             before(grammarAccess.getAPIAccess().getEndKeyword_3()); 
            match(input,14,FOLLOW_2); 
             after(grammarAccess.getAPIAccess().getEndKeyword_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__API__Group__3__Impl"


    // $ANTLR start "rule__Import__Group_0__0"
    // InternalFortXTrans.g:2419:1: rule__Import__Group_0__0 : rule__Import__Group_0__0__Impl rule__Import__Group_0__1 ;
    public final void rule__Import__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2423:1: ( rule__Import__Group_0__0__Impl rule__Import__Group_0__1 )
            // InternalFortXTrans.g:2424:2: rule__Import__Group_0__0__Impl rule__Import__Group_0__1
            {
            pushFollow(FOLLOW_5);
            rule__Import__Group_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Import__Group_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Import__Group_0__0"


    // $ANTLR start "rule__Import__Group_0__0__Impl"
    // InternalFortXTrans.g:2431:1: rule__Import__Group_0__0__Impl : ( ( rule__Import__ImpsAssignment_0_0 ) ) ;
    public final void rule__Import__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2435:1: ( ( ( rule__Import__ImpsAssignment_0_0 ) ) )
            // InternalFortXTrans.g:2436:1: ( ( rule__Import__ImpsAssignment_0_0 ) )
            {
            // InternalFortXTrans.g:2436:1: ( ( rule__Import__ImpsAssignment_0_0 ) )
            // InternalFortXTrans.g:2437:2: ( rule__Import__ImpsAssignment_0_0 )
            {
             before(grammarAccess.getImportAccess().getImpsAssignment_0_0()); 
            // InternalFortXTrans.g:2438:2: ( rule__Import__ImpsAssignment_0_0 )
            // InternalFortXTrans.g:2438:3: rule__Import__ImpsAssignment_0_0
            {
            pushFollow(FOLLOW_2);
            rule__Import__ImpsAssignment_0_0();

            state._fsp--;


            }

             after(grammarAccess.getImportAccess().getImpsAssignment_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Import__Group_0__0__Impl"


    // $ANTLR start "rule__Import__Group_0__1"
    // InternalFortXTrans.g:2446:1: rule__Import__Group_0__1 : rule__Import__Group_0__1__Impl ;
    public final void rule__Import__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2450:1: ( rule__Import__Group_0__1__Impl )
            // InternalFortXTrans.g:2451:2: rule__Import__Group_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Import__Group_0__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Import__Group_0__1"


    // $ANTLR start "rule__Import__Group_0__1__Impl"
    // InternalFortXTrans.g:2457:1: rule__Import__Group_0__1__Impl : ( ( rule__Import__ImportedNamesAssignment_0_1 ) ) ;
    public final void rule__Import__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2461:1: ( ( ( rule__Import__ImportedNamesAssignment_0_1 ) ) )
            // InternalFortXTrans.g:2462:1: ( ( rule__Import__ImportedNamesAssignment_0_1 ) )
            {
            // InternalFortXTrans.g:2462:1: ( ( rule__Import__ImportedNamesAssignment_0_1 ) )
            // InternalFortXTrans.g:2463:2: ( rule__Import__ImportedNamesAssignment_0_1 )
            {
             before(grammarAccess.getImportAccess().getImportedNamesAssignment_0_1()); 
            // InternalFortXTrans.g:2464:2: ( rule__Import__ImportedNamesAssignment_0_1 )
            // InternalFortXTrans.g:2464:3: rule__Import__ImportedNamesAssignment_0_1
            {
            pushFollow(FOLLOW_2);
            rule__Import__ImportedNamesAssignment_0_1();

            state._fsp--;


            }

             after(grammarAccess.getImportAccess().getImportedNamesAssignment_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Import__Group_0__1__Impl"


    // $ANTLR start "rule__Import__Group_1__0"
    // InternalFortXTrans.g:2473:1: rule__Import__Group_1__0 : rule__Import__Group_1__0__Impl rule__Import__Group_1__1 ;
    public final void rule__Import__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2477:1: ( rule__Import__Group_1__0__Impl rule__Import__Group_1__1 )
            // InternalFortXTrans.g:2478:2: rule__Import__Group_1__0__Impl rule__Import__Group_1__1
            {
            pushFollow(FOLLOW_11);
            rule__Import__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Import__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Import__Group_1__0"


    // $ANTLR start "rule__Import__Group_1__0__Impl"
    // InternalFortXTrans.g:2485:1: rule__Import__Group_1__0__Impl : ( ( rule__Import__ImpsAssignment_1_0 ) ) ;
    public final void rule__Import__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2489:1: ( ( ( rule__Import__ImpsAssignment_1_0 ) ) )
            // InternalFortXTrans.g:2490:1: ( ( rule__Import__ImpsAssignment_1_0 ) )
            {
            // InternalFortXTrans.g:2490:1: ( ( rule__Import__ImpsAssignment_1_0 ) )
            // InternalFortXTrans.g:2491:2: ( rule__Import__ImpsAssignment_1_0 )
            {
             before(grammarAccess.getImportAccess().getImpsAssignment_1_0()); 
            // InternalFortXTrans.g:2492:2: ( rule__Import__ImpsAssignment_1_0 )
            // InternalFortXTrans.g:2492:3: rule__Import__ImpsAssignment_1_0
            {
            pushFollow(FOLLOW_2);
            rule__Import__ImpsAssignment_1_0();

            state._fsp--;


            }

             after(grammarAccess.getImportAccess().getImpsAssignment_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Import__Group_1__0__Impl"


    // $ANTLR start "rule__Import__Group_1__1"
    // InternalFortXTrans.g:2500:1: rule__Import__Group_1__1 : rule__Import__Group_1__1__Impl rule__Import__Group_1__2 ;
    public final void rule__Import__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2504:1: ( rule__Import__Group_1__1__Impl rule__Import__Group_1__2 )
            // InternalFortXTrans.g:2505:2: rule__Import__Group_1__1__Impl rule__Import__Group_1__2
            {
            pushFollow(FOLLOW_12);
            rule__Import__Group_1__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Import__Group_1__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Import__Group_1__1"


    // $ANTLR start "rule__Import__Group_1__1__Impl"
    // InternalFortXTrans.g:2512:1: rule__Import__Group_1__1__Impl : ( ( rule__Import__ApiAssignment_1_1 ) ) ;
    public final void rule__Import__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2516:1: ( ( ( rule__Import__ApiAssignment_1_1 ) ) )
            // InternalFortXTrans.g:2517:1: ( ( rule__Import__ApiAssignment_1_1 ) )
            {
            // InternalFortXTrans.g:2517:1: ( ( rule__Import__ApiAssignment_1_1 ) )
            // InternalFortXTrans.g:2518:2: ( rule__Import__ApiAssignment_1_1 )
            {
             before(grammarAccess.getImportAccess().getApiAssignment_1_1()); 
            // InternalFortXTrans.g:2519:2: ( rule__Import__ApiAssignment_1_1 )
            // InternalFortXTrans.g:2519:3: rule__Import__ApiAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Import__ApiAssignment_1_1();

            state._fsp--;


            }

             after(grammarAccess.getImportAccess().getApiAssignment_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Import__Group_1__1__Impl"


    // $ANTLR start "rule__Import__Group_1__2"
    // InternalFortXTrans.g:2527:1: rule__Import__Group_1__2 : rule__Import__Group_1__2__Impl ;
    public final void rule__Import__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2531:1: ( rule__Import__Group_1__2__Impl )
            // InternalFortXTrans.g:2532:2: rule__Import__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Import__Group_1__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Import__Group_1__2"


    // $ANTLR start "rule__Import__Group_1__2__Impl"
    // InternalFortXTrans.g:2538:1: rule__Import__Group_1__2__Impl : ( ( rule__Import__AliasedimportedNamesAssignment_1_2 ) ) ;
    public final void rule__Import__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2542:1: ( ( ( rule__Import__AliasedimportedNamesAssignment_1_2 ) ) )
            // InternalFortXTrans.g:2543:1: ( ( rule__Import__AliasedimportedNamesAssignment_1_2 ) )
            {
            // InternalFortXTrans.g:2543:1: ( ( rule__Import__AliasedimportedNamesAssignment_1_2 ) )
            // InternalFortXTrans.g:2544:2: ( rule__Import__AliasedimportedNamesAssignment_1_2 )
            {
             before(grammarAccess.getImportAccess().getAliasedimportedNamesAssignment_1_2()); 
            // InternalFortXTrans.g:2545:2: ( rule__Import__AliasedimportedNamesAssignment_1_2 )
            // InternalFortXTrans.g:2545:3: rule__Import__AliasedimportedNamesAssignment_1_2
            {
            pushFollow(FOLLOW_2);
            rule__Import__AliasedimportedNamesAssignment_1_2();

            state._fsp--;


            }

             after(grammarAccess.getImportAccess().getAliasedimportedNamesAssignment_1_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Import__Group_1__2__Impl"


    // $ANTLR start "rule__Export__Group_0__0"
    // InternalFortXTrans.g:2554:1: rule__Export__Group_0__0 : rule__Export__Group_0__0__Impl rule__Export__Group_0__1 ;
    public final void rule__Export__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2558:1: ( rule__Export__Group_0__0__Impl rule__Export__Group_0__1 )
            // InternalFortXTrans.g:2559:2: rule__Export__Group_0__0__Impl rule__Export__Group_0__1
            {
            pushFollow(FOLLOW_5);
            rule__Export__Group_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Export__Group_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Export__Group_0__0"


    // $ANTLR start "rule__Export__Group_0__0__Impl"
    // InternalFortXTrans.g:2566:1: rule__Export__Group_0__0__Impl : ( ( rule__Export__ExpAssignment_0_0 ) ) ;
    public final void rule__Export__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2570:1: ( ( ( rule__Export__ExpAssignment_0_0 ) ) )
            // InternalFortXTrans.g:2571:1: ( ( rule__Export__ExpAssignment_0_0 ) )
            {
            // InternalFortXTrans.g:2571:1: ( ( rule__Export__ExpAssignment_0_0 ) )
            // InternalFortXTrans.g:2572:2: ( rule__Export__ExpAssignment_0_0 )
            {
             before(grammarAccess.getExportAccess().getExpAssignment_0_0()); 
            // InternalFortXTrans.g:2573:2: ( rule__Export__ExpAssignment_0_0 )
            // InternalFortXTrans.g:2573:3: rule__Export__ExpAssignment_0_0
            {
            pushFollow(FOLLOW_2);
            rule__Export__ExpAssignment_0_0();

            state._fsp--;


            }

             after(grammarAccess.getExportAccess().getExpAssignment_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Export__Group_0__0__Impl"


    // $ANTLR start "rule__Export__Group_0__1"
    // InternalFortXTrans.g:2581:1: rule__Export__Group_0__1 : rule__Export__Group_0__1__Impl ;
    public final void rule__Export__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2585:1: ( rule__Export__Group_0__1__Impl )
            // InternalFortXTrans.g:2586:2: rule__Export__Group_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Export__Group_0__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Export__Group_0__1"


    // $ANTLR start "rule__Export__Group_0__1__Impl"
    // InternalFortXTrans.g:2592:1: rule__Export__Group_0__1__Impl : ( ( rule__Export__ExportedNameAssignment_0_1 ) ) ;
    public final void rule__Export__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2596:1: ( ( ( rule__Export__ExportedNameAssignment_0_1 ) ) )
            // InternalFortXTrans.g:2597:1: ( ( rule__Export__ExportedNameAssignment_0_1 ) )
            {
            // InternalFortXTrans.g:2597:1: ( ( rule__Export__ExportedNameAssignment_0_1 ) )
            // InternalFortXTrans.g:2598:2: ( rule__Export__ExportedNameAssignment_0_1 )
            {
             before(grammarAccess.getExportAccess().getExportedNameAssignment_0_1()); 
            // InternalFortXTrans.g:2599:2: ( rule__Export__ExportedNameAssignment_0_1 )
            // InternalFortXTrans.g:2599:3: rule__Export__ExportedNameAssignment_0_1
            {
            pushFollow(FOLLOW_2);
            rule__Export__ExportedNameAssignment_0_1();

            state._fsp--;


            }

             after(grammarAccess.getExportAccess().getExportedNameAssignment_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Export__Group_0__1__Impl"


    // $ANTLR start "rule__Export__Group_1__0"
    // InternalFortXTrans.g:2608:1: rule__Export__Group_1__0 : rule__Export__Group_1__0__Impl rule__Export__Group_1__1 ;
    public final void rule__Export__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2612:1: ( rule__Export__Group_1__0__Impl rule__Export__Group_1__1 )
            // InternalFortXTrans.g:2613:2: rule__Export__Group_1__0__Impl rule__Export__Group_1__1
            {
            pushFollow(FOLLOW_13);
            rule__Export__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Export__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Export__Group_1__0"


    // $ANTLR start "rule__Export__Group_1__0__Impl"
    // InternalFortXTrans.g:2620:1: rule__Export__Group_1__0__Impl : ( ( rule__Export__ExpAssignment_1_0 ) ) ;
    public final void rule__Export__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2624:1: ( ( ( rule__Export__ExpAssignment_1_0 ) ) )
            // InternalFortXTrans.g:2625:1: ( ( rule__Export__ExpAssignment_1_0 ) )
            {
            // InternalFortXTrans.g:2625:1: ( ( rule__Export__ExpAssignment_1_0 ) )
            // InternalFortXTrans.g:2626:2: ( rule__Export__ExpAssignment_1_0 )
            {
             before(grammarAccess.getExportAccess().getExpAssignment_1_0()); 
            // InternalFortXTrans.g:2627:2: ( rule__Export__ExpAssignment_1_0 )
            // InternalFortXTrans.g:2627:3: rule__Export__ExpAssignment_1_0
            {
            pushFollow(FOLLOW_2);
            rule__Export__ExpAssignment_1_0();

            state._fsp--;


            }

             after(grammarAccess.getExportAccess().getExpAssignment_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Export__Group_1__0__Impl"


    // $ANTLR start "rule__Export__Group_1__1"
    // InternalFortXTrans.g:2635:1: rule__Export__Group_1__1 : rule__Export__Group_1__1__Impl rule__Export__Group_1__2 ;
    public final void rule__Export__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2639:1: ( rule__Export__Group_1__1__Impl rule__Export__Group_1__2 )
            // InternalFortXTrans.g:2640:2: rule__Export__Group_1__1__Impl rule__Export__Group_1__2
            {
            pushFollow(FOLLOW_5);
            rule__Export__Group_1__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Export__Group_1__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Export__Group_1__1"


    // $ANTLR start "rule__Export__Group_1__1__Impl"
    // InternalFortXTrans.g:2647:1: rule__Export__Group_1__1__Impl : ( ( rule__Export__BrackAssignment_1_1 ) ) ;
    public final void rule__Export__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2651:1: ( ( ( rule__Export__BrackAssignment_1_1 ) ) )
            // InternalFortXTrans.g:2652:1: ( ( rule__Export__BrackAssignment_1_1 ) )
            {
            // InternalFortXTrans.g:2652:1: ( ( rule__Export__BrackAssignment_1_1 ) )
            // InternalFortXTrans.g:2653:2: ( rule__Export__BrackAssignment_1_1 )
            {
             before(grammarAccess.getExportAccess().getBrackAssignment_1_1()); 
            // InternalFortXTrans.g:2654:2: ( rule__Export__BrackAssignment_1_1 )
            // InternalFortXTrans.g:2654:3: rule__Export__BrackAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Export__BrackAssignment_1_1();

            state._fsp--;


            }

             after(grammarAccess.getExportAccess().getBrackAssignment_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Export__Group_1__1__Impl"


    // $ANTLR start "rule__Export__Group_1__2"
    // InternalFortXTrans.g:2662:1: rule__Export__Group_1__2 : rule__Export__Group_1__2__Impl rule__Export__Group_1__3 ;
    public final void rule__Export__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2666:1: ( rule__Export__Group_1__2__Impl rule__Export__Group_1__3 )
            // InternalFortXTrans.g:2667:2: rule__Export__Group_1__2__Impl rule__Export__Group_1__3
            {
            pushFollow(FOLLOW_14);
            rule__Export__Group_1__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Export__Group_1__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Export__Group_1__2"


    // $ANTLR start "rule__Export__Group_1__2__Impl"
    // InternalFortXTrans.g:2674:1: rule__Export__Group_1__2__Impl : ( ( rule__Export__ExportedNameAssignment_1_2 ) ) ;
    public final void rule__Export__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2678:1: ( ( ( rule__Export__ExportedNameAssignment_1_2 ) ) )
            // InternalFortXTrans.g:2679:1: ( ( rule__Export__ExportedNameAssignment_1_2 ) )
            {
            // InternalFortXTrans.g:2679:1: ( ( rule__Export__ExportedNameAssignment_1_2 ) )
            // InternalFortXTrans.g:2680:2: ( rule__Export__ExportedNameAssignment_1_2 )
            {
             before(grammarAccess.getExportAccess().getExportedNameAssignment_1_2()); 
            // InternalFortXTrans.g:2681:2: ( rule__Export__ExportedNameAssignment_1_2 )
            // InternalFortXTrans.g:2681:3: rule__Export__ExportedNameAssignment_1_2
            {
            pushFollow(FOLLOW_2);
            rule__Export__ExportedNameAssignment_1_2();

            state._fsp--;


            }

             after(grammarAccess.getExportAccess().getExportedNameAssignment_1_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Export__Group_1__2__Impl"


    // $ANTLR start "rule__Export__Group_1__3"
    // InternalFortXTrans.g:2689:1: rule__Export__Group_1__3 : rule__Export__Group_1__3__Impl rule__Export__Group_1__4 ;
    public final void rule__Export__Group_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2693:1: ( rule__Export__Group_1__3__Impl rule__Export__Group_1__4 )
            // InternalFortXTrans.g:2694:2: rule__Export__Group_1__3__Impl rule__Export__Group_1__4
            {
            pushFollow(FOLLOW_14);
            rule__Export__Group_1__3__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Export__Group_1__4();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Export__Group_1__3"


    // $ANTLR start "rule__Export__Group_1__3__Impl"
    // InternalFortXTrans.g:2701:1: rule__Export__Group_1__3__Impl : ( ( rule__Export__Group_1_3__0 )* ) ;
    public final void rule__Export__Group_1__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2705:1: ( ( ( rule__Export__Group_1_3__0 )* ) )
            // InternalFortXTrans.g:2706:1: ( ( rule__Export__Group_1_3__0 )* )
            {
            // InternalFortXTrans.g:2706:1: ( ( rule__Export__Group_1_3__0 )* )
            // InternalFortXTrans.g:2707:2: ( rule__Export__Group_1_3__0 )*
            {
             before(grammarAccess.getExportAccess().getGroup_1_3()); 
            // InternalFortXTrans.g:2708:2: ( rule__Export__Group_1_3__0 )*
            loop34:
            do {
                int alt34=2;
                int LA34_0 = input.LA(1);

                if ( (LA34_0==17) ) {
                    alt34=1;
                }


                switch (alt34) {
            	case 1 :
            	    // InternalFortXTrans.g:2708:3: rule__Export__Group_1_3__0
            	    {
            	    pushFollow(FOLLOW_15);
            	    rule__Export__Group_1_3__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop34;
                }
            } while (true);

             after(grammarAccess.getExportAccess().getGroup_1_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Export__Group_1__3__Impl"


    // $ANTLR start "rule__Export__Group_1__4"
    // InternalFortXTrans.g:2716:1: rule__Export__Group_1__4 : rule__Export__Group_1__4__Impl ;
    public final void rule__Export__Group_1__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2720:1: ( rule__Export__Group_1__4__Impl )
            // InternalFortXTrans.g:2721:2: rule__Export__Group_1__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Export__Group_1__4__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Export__Group_1__4"


    // $ANTLR start "rule__Export__Group_1__4__Impl"
    // InternalFortXTrans.g:2727:1: rule__Export__Group_1__4__Impl : ( '}' ) ;
    public final void rule__Export__Group_1__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2731:1: ( ( '}' ) )
            // InternalFortXTrans.g:2732:1: ( '}' )
            {
            // InternalFortXTrans.g:2732:1: ( '}' )
            // InternalFortXTrans.g:2733:2: '}'
            {
             before(grammarAccess.getExportAccess().getRightCurlyBracketKeyword_1_4()); 
            match(input,16,FOLLOW_2); 
             after(grammarAccess.getExportAccess().getRightCurlyBracketKeyword_1_4()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Export__Group_1__4__Impl"


    // $ANTLR start "rule__Export__Group_1_3__0"
    // InternalFortXTrans.g:2743:1: rule__Export__Group_1_3__0 : rule__Export__Group_1_3__0__Impl rule__Export__Group_1_3__1 ;
    public final void rule__Export__Group_1_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2747:1: ( rule__Export__Group_1_3__0__Impl rule__Export__Group_1_3__1 )
            // InternalFortXTrans.g:2748:2: rule__Export__Group_1_3__0__Impl rule__Export__Group_1_3__1
            {
            pushFollow(FOLLOW_5);
            rule__Export__Group_1_3__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Export__Group_1_3__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Export__Group_1_3__0"


    // $ANTLR start "rule__Export__Group_1_3__0__Impl"
    // InternalFortXTrans.g:2755:1: rule__Export__Group_1_3__0__Impl : ( ',' ) ;
    public final void rule__Export__Group_1_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2759:1: ( ( ',' ) )
            // InternalFortXTrans.g:2760:1: ( ',' )
            {
            // InternalFortXTrans.g:2760:1: ( ',' )
            // InternalFortXTrans.g:2761:2: ','
            {
             before(grammarAccess.getExportAccess().getCommaKeyword_1_3_0()); 
            match(input,17,FOLLOW_2); 
             after(grammarAccess.getExportAccess().getCommaKeyword_1_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Export__Group_1_3__0__Impl"


    // $ANTLR start "rule__Export__Group_1_3__1"
    // InternalFortXTrans.g:2770:1: rule__Export__Group_1_3__1 : rule__Export__Group_1_3__1__Impl ;
    public final void rule__Export__Group_1_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2774:1: ( rule__Export__Group_1_3__1__Impl )
            // InternalFortXTrans.g:2775:2: rule__Export__Group_1_3__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Export__Group_1_3__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Export__Group_1_3__1"


    // $ANTLR start "rule__Export__Group_1_3__1__Impl"
    // InternalFortXTrans.g:2781:1: rule__Export__Group_1_3__1__Impl : ( ( rule__Export__ExportedNameAssignment_1_3_1 ) ) ;
    public final void rule__Export__Group_1_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2785:1: ( ( ( rule__Export__ExportedNameAssignment_1_3_1 ) ) )
            // InternalFortXTrans.g:2786:1: ( ( rule__Export__ExportedNameAssignment_1_3_1 ) )
            {
            // InternalFortXTrans.g:2786:1: ( ( rule__Export__ExportedNameAssignment_1_3_1 ) )
            // InternalFortXTrans.g:2787:2: ( rule__Export__ExportedNameAssignment_1_3_1 )
            {
             before(grammarAccess.getExportAccess().getExportedNameAssignment_1_3_1()); 
            // InternalFortXTrans.g:2788:2: ( rule__Export__ExportedNameAssignment_1_3_1 )
            // InternalFortXTrans.g:2788:3: rule__Export__ExportedNameAssignment_1_3_1
            {
            pushFollow(FOLLOW_2);
            rule__Export__ExportedNameAssignment_1_3_1();

            state._fsp--;


            }

             after(grammarAccess.getExportAccess().getExportedNameAssignment_1_3_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Export__Group_1_3__1__Impl"


    // $ANTLR start "rule__ImportedNames__Group_0__0"
    // InternalFortXTrans.g:2797:1: rule__ImportedNames__Group_0__0 : rule__ImportedNames__Group_0__0__Impl rule__ImportedNames__Group_0__1 ;
    public final void rule__ImportedNames__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2801:1: ( rule__ImportedNames__Group_0__0__Impl rule__ImportedNames__Group_0__1 )
            // InternalFortXTrans.g:2802:2: rule__ImportedNames__Group_0__0__Impl rule__ImportedNames__Group_0__1
            {
            pushFollow(FOLLOW_16);
            rule__ImportedNames__Group_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ImportedNames__Group_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_0__0"


    // $ANTLR start "rule__ImportedNames__Group_0__0__Impl"
    // InternalFortXTrans.g:2809:1: rule__ImportedNames__Group_0__0__Impl : ( ( rule__ImportedNames__ImpnameAssignment_0_0 ) ) ;
    public final void rule__ImportedNames__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2813:1: ( ( ( rule__ImportedNames__ImpnameAssignment_0_0 ) ) )
            // InternalFortXTrans.g:2814:1: ( ( rule__ImportedNames__ImpnameAssignment_0_0 ) )
            {
            // InternalFortXTrans.g:2814:1: ( ( rule__ImportedNames__ImpnameAssignment_0_0 ) )
            // InternalFortXTrans.g:2815:2: ( rule__ImportedNames__ImpnameAssignment_0_0 )
            {
             before(grammarAccess.getImportedNamesAccess().getImpnameAssignment_0_0()); 
            // InternalFortXTrans.g:2816:2: ( rule__ImportedNames__ImpnameAssignment_0_0 )
            // InternalFortXTrans.g:2816:3: rule__ImportedNames__ImpnameAssignment_0_0
            {
            pushFollow(FOLLOW_2);
            rule__ImportedNames__ImpnameAssignment_0_0();

            state._fsp--;


            }

             after(grammarAccess.getImportedNamesAccess().getImpnameAssignment_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_0__0__Impl"


    // $ANTLR start "rule__ImportedNames__Group_0__1"
    // InternalFortXTrans.g:2824:1: rule__ImportedNames__Group_0__1 : rule__ImportedNames__Group_0__1__Impl rule__ImportedNames__Group_0__2 ;
    public final void rule__ImportedNames__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2828:1: ( rule__ImportedNames__Group_0__1__Impl rule__ImportedNames__Group_0__2 )
            // InternalFortXTrans.g:2829:2: rule__ImportedNames__Group_0__1__Impl rule__ImportedNames__Group_0__2
            {
            pushFollow(FOLLOW_13);
            rule__ImportedNames__Group_0__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ImportedNames__Group_0__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_0__1"


    // $ANTLR start "rule__ImportedNames__Group_0__1__Impl"
    // InternalFortXTrans.g:2836:1: rule__ImportedNames__Group_0__1__Impl : ( '.' ) ;
    public final void rule__ImportedNames__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2840:1: ( ( '.' ) )
            // InternalFortXTrans.g:2841:1: ( '.' )
            {
            // InternalFortXTrans.g:2841:1: ( '.' )
            // InternalFortXTrans.g:2842:2: '.'
            {
             before(grammarAccess.getImportedNamesAccess().getFullStopKeyword_0_1()); 
            match(input,18,FOLLOW_2); 
             after(grammarAccess.getImportedNamesAccess().getFullStopKeyword_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_0__1__Impl"


    // $ANTLR start "rule__ImportedNames__Group_0__2"
    // InternalFortXTrans.g:2851:1: rule__ImportedNames__Group_0__2 : rule__ImportedNames__Group_0__2__Impl rule__ImportedNames__Group_0__3 ;
    public final void rule__ImportedNames__Group_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2855:1: ( rule__ImportedNames__Group_0__2__Impl rule__ImportedNames__Group_0__3 )
            // InternalFortXTrans.g:2856:2: rule__ImportedNames__Group_0__2__Impl rule__ImportedNames__Group_0__3
            {
            pushFollow(FOLLOW_17);
            rule__ImportedNames__Group_0__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ImportedNames__Group_0__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_0__2"


    // $ANTLR start "rule__ImportedNames__Group_0__2__Impl"
    // InternalFortXTrans.g:2863:1: rule__ImportedNames__Group_0__2__Impl : ( '{' ) ;
    public final void rule__ImportedNames__Group_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2867:1: ( ( '{' ) )
            // InternalFortXTrans.g:2868:1: ( '{' )
            {
            // InternalFortXTrans.g:2868:1: ( '{' )
            // InternalFortXTrans.g:2869:2: '{'
            {
             before(grammarAccess.getImportedNamesAccess().getLeftCurlyBracketKeyword_0_2()); 
            match(input,19,FOLLOW_2); 
             after(grammarAccess.getImportedNamesAccess().getLeftCurlyBracketKeyword_0_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_0__2__Impl"


    // $ANTLR start "rule__ImportedNames__Group_0__3"
    // InternalFortXTrans.g:2878:1: rule__ImportedNames__Group_0__3 : rule__ImportedNames__Group_0__3__Impl rule__ImportedNames__Group_0__4 ;
    public final void rule__ImportedNames__Group_0__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2882:1: ( rule__ImportedNames__Group_0__3__Impl rule__ImportedNames__Group_0__4 )
            // InternalFortXTrans.g:2883:2: rule__ImportedNames__Group_0__3__Impl rule__ImportedNames__Group_0__4
            {
            pushFollow(FOLLOW_18);
            rule__ImportedNames__Group_0__3__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ImportedNames__Group_0__4();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_0__3"


    // $ANTLR start "rule__ImportedNames__Group_0__3__Impl"
    // InternalFortXTrans.g:2890:1: rule__ImportedNames__Group_0__3__Impl : ( RULE_DOTS ) ;
    public final void rule__ImportedNames__Group_0__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2894:1: ( ( RULE_DOTS ) )
            // InternalFortXTrans.g:2895:1: ( RULE_DOTS )
            {
            // InternalFortXTrans.g:2895:1: ( RULE_DOTS )
            // InternalFortXTrans.g:2896:2: RULE_DOTS
            {
             before(grammarAccess.getImportedNamesAccess().getDOTSTerminalRuleCall_0_3()); 
            match(input,RULE_DOTS,FOLLOW_2); 
             after(grammarAccess.getImportedNamesAccess().getDOTSTerminalRuleCall_0_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_0__3__Impl"


    // $ANTLR start "rule__ImportedNames__Group_0__4"
    // InternalFortXTrans.g:2905:1: rule__ImportedNames__Group_0__4 : rule__ImportedNames__Group_0__4__Impl rule__ImportedNames__Group_0__5 ;
    public final void rule__ImportedNames__Group_0__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2909:1: ( rule__ImportedNames__Group_0__4__Impl rule__ImportedNames__Group_0__5 )
            // InternalFortXTrans.g:2910:2: rule__ImportedNames__Group_0__4__Impl rule__ImportedNames__Group_0__5
            {
            pushFollow(FOLLOW_19);
            rule__ImportedNames__Group_0__4__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ImportedNames__Group_0__5();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_0__4"


    // $ANTLR start "rule__ImportedNames__Group_0__4__Impl"
    // InternalFortXTrans.g:2917:1: rule__ImportedNames__Group_0__4__Impl : ( '}' ) ;
    public final void rule__ImportedNames__Group_0__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2921:1: ( ( '}' ) )
            // InternalFortXTrans.g:2922:1: ( '}' )
            {
            // InternalFortXTrans.g:2922:1: ( '}' )
            // InternalFortXTrans.g:2923:2: '}'
            {
             before(grammarAccess.getImportedNamesAccess().getRightCurlyBracketKeyword_0_4()); 
            match(input,16,FOLLOW_2); 
             after(grammarAccess.getImportedNamesAccess().getRightCurlyBracketKeyword_0_4()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_0__4__Impl"


    // $ANTLR start "rule__ImportedNames__Group_0__5"
    // InternalFortXTrans.g:2932:1: rule__ImportedNames__Group_0__5 : rule__ImportedNames__Group_0__5__Impl ;
    public final void rule__ImportedNames__Group_0__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2936:1: ( rule__ImportedNames__Group_0__5__Impl )
            // InternalFortXTrans.g:2937:2: rule__ImportedNames__Group_0__5__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ImportedNames__Group_0__5__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_0__5"


    // $ANTLR start "rule__ImportedNames__Group_0__5__Impl"
    // InternalFortXTrans.g:2943:1: rule__ImportedNames__Group_0__5__Impl : ( ( rule__ImportedNames__Group_0_5__0 )? ) ;
    public final void rule__ImportedNames__Group_0__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2947:1: ( ( ( rule__ImportedNames__Group_0_5__0 )? ) )
            // InternalFortXTrans.g:2948:1: ( ( rule__ImportedNames__Group_0_5__0 )? )
            {
            // InternalFortXTrans.g:2948:1: ( ( rule__ImportedNames__Group_0_5__0 )? )
            // InternalFortXTrans.g:2949:2: ( rule__ImportedNames__Group_0_5__0 )?
            {
             before(grammarAccess.getImportedNamesAccess().getGroup_0_5()); 
            // InternalFortXTrans.g:2950:2: ( rule__ImportedNames__Group_0_5__0 )?
            int alt35=2;
            int LA35_0 = input.LA(1);

            if ( (LA35_0==38) ) {
                alt35=1;
            }
            switch (alt35) {
                case 1 :
                    // InternalFortXTrans.g:2950:3: rule__ImportedNames__Group_0_5__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ImportedNames__Group_0_5__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getImportedNamesAccess().getGroup_0_5()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_0__5__Impl"


    // $ANTLR start "rule__ImportedNames__Group_0_5__0"
    // InternalFortXTrans.g:2959:1: rule__ImportedNames__Group_0_5__0 : rule__ImportedNames__Group_0_5__0__Impl rule__ImportedNames__Group_0_5__1 ;
    public final void rule__ImportedNames__Group_0_5__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2963:1: ( rule__ImportedNames__Group_0_5__0__Impl rule__ImportedNames__Group_0_5__1 )
            // InternalFortXTrans.g:2964:2: rule__ImportedNames__Group_0_5__0__Impl rule__ImportedNames__Group_0_5__1
            {
            pushFollow(FOLLOW_12);
            rule__ImportedNames__Group_0_5__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ImportedNames__Group_0_5__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_0_5__0"


    // $ANTLR start "rule__ImportedNames__Group_0_5__0__Impl"
    // InternalFortXTrans.g:2971:1: rule__ImportedNames__Group_0_5__0__Impl : ( ( rule__ImportedNames__ExceptAssignment_0_5_0 ) ) ;
    public final void rule__ImportedNames__Group_0_5__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2975:1: ( ( ( rule__ImportedNames__ExceptAssignment_0_5_0 ) ) )
            // InternalFortXTrans.g:2976:1: ( ( rule__ImportedNames__ExceptAssignment_0_5_0 ) )
            {
            // InternalFortXTrans.g:2976:1: ( ( rule__ImportedNames__ExceptAssignment_0_5_0 ) )
            // InternalFortXTrans.g:2977:2: ( rule__ImportedNames__ExceptAssignment_0_5_0 )
            {
             before(grammarAccess.getImportedNamesAccess().getExceptAssignment_0_5_0()); 
            // InternalFortXTrans.g:2978:2: ( rule__ImportedNames__ExceptAssignment_0_5_0 )
            // InternalFortXTrans.g:2978:3: rule__ImportedNames__ExceptAssignment_0_5_0
            {
            pushFollow(FOLLOW_2);
            rule__ImportedNames__ExceptAssignment_0_5_0();

            state._fsp--;


            }

             after(grammarAccess.getImportedNamesAccess().getExceptAssignment_0_5_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_0_5__0__Impl"


    // $ANTLR start "rule__ImportedNames__Group_0_5__1"
    // InternalFortXTrans.g:2986:1: rule__ImportedNames__Group_0_5__1 : rule__ImportedNames__Group_0_5__1__Impl ;
    public final void rule__ImportedNames__Group_0_5__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2990:1: ( rule__ImportedNames__Group_0_5__1__Impl )
            // InternalFortXTrans.g:2991:2: rule__ImportedNames__Group_0_5__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ImportedNames__Group_0_5__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_0_5__1"


    // $ANTLR start "rule__ImportedNames__Group_0_5__1__Impl"
    // InternalFortXTrans.g:2997:1: rule__ImportedNames__Group_0_5__1__Impl : ( ( rule__ImportedNames__SimpAssignment_0_5_1 ) ) ;
    public final void rule__ImportedNames__Group_0_5__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3001:1: ( ( ( rule__ImportedNames__SimpAssignment_0_5_1 ) ) )
            // InternalFortXTrans.g:3002:1: ( ( rule__ImportedNames__SimpAssignment_0_5_1 ) )
            {
            // InternalFortXTrans.g:3002:1: ( ( rule__ImportedNames__SimpAssignment_0_5_1 ) )
            // InternalFortXTrans.g:3003:2: ( rule__ImportedNames__SimpAssignment_0_5_1 )
            {
             before(grammarAccess.getImportedNamesAccess().getSimpAssignment_0_5_1()); 
            // InternalFortXTrans.g:3004:2: ( rule__ImportedNames__SimpAssignment_0_5_1 )
            // InternalFortXTrans.g:3004:3: rule__ImportedNames__SimpAssignment_0_5_1
            {
            pushFollow(FOLLOW_2);
            rule__ImportedNames__SimpAssignment_0_5_1();

            state._fsp--;


            }

             after(grammarAccess.getImportedNamesAccess().getSimpAssignment_0_5_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_0_5__1__Impl"


    // $ANTLR start "rule__ImportedNames__Group_1__0"
    // InternalFortXTrans.g:3013:1: rule__ImportedNames__Group_1__0 : rule__ImportedNames__Group_1__0__Impl rule__ImportedNames__Group_1__1 ;
    public final void rule__ImportedNames__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3017:1: ( rule__ImportedNames__Group_1__0__Impl rule__ImportedNames__Group_1__1 )
            // InternalFortXTrans.g:3018:2: rule__ImportedNames__Group_1__0__Impl rule__ImportedNames__Group_1__1
            {
            pushFollow(FOLLOW_16);
            rule__ImportedNames__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ImportedNames__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_1__0"


    // $ANTLR start "rule__ImportedNames__Group_1__0__Impl"
    // InternalFortXTrans.g:3025:1: rule__ImportedNames__Group_1__0__Impl : ( ( rule__ImportedNames__ImpnameAssignment_1_0 ) ) ;
    public final void rule__ImportedNames__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3029:1: ( ( ( rule__ImportedNames__ImpnameAssignment_1_0 ) ) )
            // InternalFortXTrans.g:3030:1: ( ( rule__ImportedNames__ImpnameAssignment_1_0 ) )
            {
            // InternalFortXTrans.g:3030:1: ( ( rule__ImportedNames__ImpnameAssignment_1_0 ) )
            // InternalFortXTrans.g:3031:2: ( rule__ImportedNames__ImpnameAssignment_1_0 )
            {
             before(grammarAccess.getImportedNamesAccess().getImpnameAssignment_1_0()); 
            // InternalFortXTrans.g:3032:2: ( rule__ImportedNames__ImpnameAssignment_1_0 )
            // InternalFortXTrans.g:3032:3: rule__ImportedNames__ImpnameAssignment_1_0
            {
            pushFollow(FOLLOW_2);
            rule__ImportedNames__ImpnameAssignment_1_0();

            state._fsp--;


            }

             after(grammarAccess.getImportedNamesAccess().getImpnameAssignment_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_1__0__Impl"


    // $ANTLR start "rule__ImportedNames__Group_1__1"
    // InternalFortXTrans.g:3040:1: rule__ImportedNames__Group_1__1 : rule__ImportedNames__Group_1__1__Impl rule__ImportedNames__Group_1__2 ;
    public final void rule__ImportedNames__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3044:1: ( rule__ImportedNames__Group_1__1__Impl rule__ImportedNames__Group_1__2 )
            // InternalFortXTrans.g:3045:2: rule__ImportedNames__Group_1__1__Impl rule__ImportedNames__Group_1__2
            {
            pushFollow(FOLLOW_13);
            rule__ImportedNames__Group_1__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ImportedNames__Group_1__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_1__1"


    // $ANTLR start "rule__ImportedNames__Group_1__1__Impl"
    // InternalFortXTrans.g:3052:1: rule__ImportedNames__Group_1__1__Impl : ( '.' ) ;
    public final void rule__ImportedNames__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3056:1: ( ( '.' ) )
            // InternalFortXTrans.g:3057:1: ( '.' )
            {
            // InternalFortXTrans.g:3057:1: ( '.' )
            // InternalFortXTrans.g:3058:2: '.'
            {
             before(grammarAccess.getImportedNamesAccess().getFullStopKeyword_1_1()); 
            match(input,18,FOLLOW_2); 
             after(grammarAccess.getImportedNamesAccess().getFullStopKeyword_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_1__1__Impl"


    // $ANTLR start "rule__ImportedNames__Group_1__2"
    // InternalFortXTrans.g:3067:1: rule__ImportedNames__Group_1__2 : rule__ImportedNames__Group_1__2__Impl rule__ImportedNames__Group_1__3 ;
    public final void rule__ImportedNames__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3071:1: ( rule__ImportedNames__Group_1__2__Impl rule__ImportedNames__Group_1__3 )
            // InternalFortXTrans.g:3072:2: rule__ImportedNames__Group_1__2__Impl rule__ImportedNames__Group_1__3
            {
            pushFollow(FOLLOW_5);
            rule__ImportedNames__Group_1__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ImportedNames__Group_1__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_1__2"


    // $ANTLR start "rule__ImportedNames__Group_1__2__Impl"
    // InternalFortXTrans.g:3079:1: rule__ImportedNames__Group_1__2__Impl : ( '{' ) ;
    public final void rule__ImportedNames__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3083:1: ( ( '{' ) )
            // InternalFortXTrans.g:3084:1: ( '{' )
            {
            // InternalFortXTrans.g:3084:1: ( '{' )
            // InternalFortXTrans.g:3085:2: '{'
            {
             before(grammarAccess.getImportedNamesAccess().getLeftCurlyBracketKeyword_1_2()); 
            match(input,19,FOLLOW_2); 
             after(grammarAccess.getImportedNamesAccess().getLeftCurlyBracketKeyword_1_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_1__2__Impl"


    // $ANTLR start "rule__ImportedNames__Group_1__3"
    // InternalFortXTrans.g:3094:1: rule__ImportedNames__Group_1__3 : rule__ImportedNames__Group_1__3__Impl rule__ImportedNames__Group_1__4 ;
    public final void rule__ImportedNames__Group_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3098:1: ( rule__ImportedNames__Group_1__3__Impl rule__ImportedNames__Group_1__4 )
            // InternalFortXTrans.g:3099:2: rule__ImportedNames__Group_1__3__Impl rule__ImportedNames__Group_1__4
            {
            pushFollow(FOLLOW_14);
            rule__ImportedNames__Group_1__3__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ImportedNames__Group_1__4();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_1__3"


    // $ANTLR start "rule__ImportedNames__Group_1__3__Impl"
    // InternalFortXTrans.g:3106:1: rule__ImportedNames__Group_1__3__Impl : ( ( rule__ImportedNames__SimpListAssignment_1_3 ) ) ;
    public final void rule__ImportedNames__Group_1__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3110:1: ( ( ( rule__ImportedNames__SimpListAssignment_1_3 ) ) )
            // InternalFortXTrans.g:3111:1: ( ( rule__ImportedNames__SimpListAssignment_1_3 ) )
            {
            // InternalFortXTrans.g:3111:1: ( ( rule__ImportedNames__SimpListAssignment_1_3 ) )
            // InternalFortXTrans.g:3112:2: ( rule__ImportedNames__SimpListAssignment_1_3 )
            {
             before(grammarAccess.getImportedNamesAccess().getSimpListAssignment_1_3()); 
            // InternalFortXTrans.g:3113:2: ( rule__ImportedNames__SimpListAssignment_1_3 )
            // InternalFortXTrans.g:3113:3: rule__ImportedNames__SimpListAssignment_1_3
            {
            pushFollow(FOLLOW_2);
            rule__ImportedNames__SimpListAssignment_1_3();

            state._fsp--;


            }

             after(grammarAccess.getImportedNamesAccess().getSimpListAssignment_1_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_1__3__Impl"


    // $ANTLR start "rule__ImportedNames__Group_1__4"
    // InternalFortXTrans.g:3121:1: rule__ImportedNames__Group_1__4 : rule__ImportedNames__Group_1__4__Impl rule__ImportedNames__Group_1__5 ;
    public final void rule__ImportedNames__Group_1__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3125:1: ( rule__ImportedNames__Group_1__4__Impl rule__ImportedNames__Group_1__5 )
            // InternalFortXTrans.g:3126:2: rule__ImportedNames__Group_1__4__Impl rule__ImportedNames__Group_1__5
            {
            pushFollow(FOLLOW_14);
            rule__ImportedNames__Group_1__4__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ImportedNames__Group_1__5();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_1__4"


    // $ANTLR start "rule__ImportedNames__Group_1__4__Impl"
    // InternalFortXTrans.g:3133:1: rule__ImportedNames__Group_1__4__Impl : ( ( rule__ImportedNames__Group_1_4__0 )* ) ;
    public final void rule__ImportedNames__Group_1__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3137:1: ( ( ( rule__ImportedNames__Group_1_4__0 )* ) )
            // InternalFortXTrans.g:3138:1: ( ( rule__ImportedNames__Group_1_4__0 )* )
            {
            // InternalFortXTrans.g:3138:1: ( ( rule__ImportedNames__Group_1_4__0 )* )
            // InternalFortXTrans.g:3139:2: ( rule__ImportedNames__Group_1_4__0 )*
            {
             before(grammarAccess.getImportedNamesAccess().getGroup_1_4()); 
            // InternalFortXTrans.g:3140:2: ( rule__ImportedNames__Group_1_4__0 )*
            loop36:
            do {
                int alt36=2;
                int LA36_0 = input.LA(1);

                if ( (LA36_0==17) ) {
                    int LA36_1 = input.LA(2);

                    if ( (LA36_1==RULE_ID) ) {
                        alt36=1;
                    }


                }


                switch (alt36) {
            	case 1 :
            	    // InternalFortXTrans.g:3140:3: rule__ImportedNames__Group_1_4__0
            	    {
            	    pushFollow(FOLLOW_15);
            	    rule__ImportedNames__Group_1_4__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop36;
                }
            } while (true);

             after(grammarAccess.getImportedNamesAccess().getGroup_1_4()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_1__4__Impl"


    // $ANTLR start "rule__ImportedNames__Group_1__5"
    // InternalFortXTrans.g:3148:1: rule__ImportedNames__Group_1__5 : rule__ImportedNames__Group_1__5__Impl rule__ImportedNames__Group_1__6 ;
    public final void rule__ImportedNames__Group_1__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3152:1: ( rule__ImportedNames__Group_1__5__Impl rule__ImportedNames__Group_1__6 )
            // InternalFortXTrans.g:3153:2: rule__ImportedNames__Group_1__5__Impl rule__ImportedNames__Group_1__6
            {
            pushFollow(FOLLOW_14);
            rule__ImportedNames__Group_1__5__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ImportedNames__Group_1__6();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_1__5"


    // $ANTLR start "rule__ImportedNames__Group_1__5__Impl"
    // InternalFortXTrans.g:3160:1: rule__ImportedNames__Group_1__5__Impl : ( ( rule__ImportedNames__Group_1_5__0 )? ) ;
    public final void rule__ImportedNames__Group_1__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3164:1: ( ( ( rule__ImportedNames__Group_1_5__0 )? ) )
            // InternalFortXTrans.g:3165:1: ( ( rule__ImportedNames__Group_1_5__0 )? )
            {
            // InternalFortXTrans.g:3165:1: ( ( rule__ImportedNames__Group_1_5__0 )? )
            // InternalFortXTrans.g:3166:2: ( rule__ImportedNames__Group_1_5__0 )?
            {
             before(grammarAccess.getImportedNamesAccess().getGroup_1_5()); 
            // InternalFortXTrans.g:3167:2: ( rule__ImportedNames__Group_1_5__0 )?
            int alt37=2;
            int LA37_0 = input.LA(1);

            if ( (LA37_0==17) ) {
                alt37=1;
            }
            switch (alt37) {
                case 1 :
                    // InternalFortXTrans.g:3167:3: rule__ImportedNames__Group_1_5__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ImportedNames__Group_1_5__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getImportedNamesAccess().getGroup_1_5()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_1__5__Impl"


    // $ANTLR start "rule__ImportedNames__Group_1__6"
    // InternalFortXTrans.g:3175:1: rule__ImportedNames__Group_1__6 : rule__ImportedNames__Group_1__6__Impl ;
    public final void rule__ImportedNames__Group_1__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3179:1: ( rule__ImportedNames__Group_1__6__Impl )
            // InternalFortXTrans.g:3180:2: rule__ImportedNames__Group_1__6__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ImportedNames__Group_1__6__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_1__6"


    // $ANTLR start "rule__ImportedNames__Group_1__6__Impl"
    // InternalFortXTrans.g:3186:1: rule__ImportedNames__Group_1__6__Impl : ( '}' ) ;
    public final void rule__ImportedNames__Group_1__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3190:1: ( ( '}' ) )
            // InternalFortXTrans.g:3191:1: ( '}' )
            {
            // InternalFortXTrans.g:3191:1: ( '}' )
            // InternalFortXTrans.g:3192:2: '}'
            {
             before(grammarAccess.getImportedNamesAccess().getRightCurlyBracketKeyword_1_6()); 
            match(input,16,FOLLOW_2); 
             after(grammarAccess.getImportedNamesAccess().getRightCurlyBracketKeyword_1_6()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_1__6__Impl"


    // $ANTLR start "rule__ImportedNames__Group_1_4__0"
    // InternalFortXTrans.g:3202:1: rule__ImportedNames__Group_1_4__0 : rule__ImportedNames__Group_1_4__0__Impl rule__ImportedNames__Group_1_4__1 ;
    public final void rule__ImportedNames__Group_1_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3206:1: ( rule__ImportedNames__Group_1_4__0__Impl rule__ImportedNames__Group_1_4__1 )
            // InternalFortXTrans.g:3207:2: rule__ImportedNames__Group_1_4__0__Impl rule__ImportedNames__Group_1_4__1
            {
            pushFollow(FOLLOW_5);
            rule__ImportedNames__Group_1_4__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ImportedNames__Group_1_4__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_1_4__0"


    // $ANTLR start "rule__ImportedNames__Group_1_4__0__Impl"
    // InternalFortXTrans.g:3214:1: rule__ImportedNames__Group_1_4__0__Impl : ( ',' ) ;
    public final void rule__ImportedNames__Group_1_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3218:1: ( ( ',' ) )
            // InternalFortXTrans.g:3219:1: ( ',' )
            {
            // InternalFortXTrans.g:3219:1: ( ',' )
            // InternalFortXTrans.g:3220:2: ','
            {
             before(grammarAccess.getImportedNamesAccess().getCommaKeyword_1_4_0()); 
            match(input,17,FOLLOW_2); 
             after(grammarAccess.getImportedNamesAccess().getCommaKeyword_1_4_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_1_4__0__Impl"


    // $ANTLR start "rule__ImportedNames__Group_1_4__1"
    // InternalFortXTrans.g:3229:1: rule__ImportedNames__Group_1_4__1 : rule__ImportedNames__Group_1_4__1__Impl ;
    public final void rule__ImportedNames__Group_1_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3233:1: ( rule__ImportedNames__Group_1_4__1__Impl )
            // InternalFortXTrans.g:3234:2: rule__ImportedNames__Group_1_4__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ImportedNames__Group_1_4__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_1_4__1"


    // $ANTLR start "rule__ImportedNames__Group_1_4__1__Impl"
    // InternalFortXTrans.g:3240:1: rule__ImportedNames__Group_1_4__1__Impl : ( ( rule__ImportedNames__SimpListAssignment_1_4_1 ) ) ;
    public final void rule__ImportedNames__Group_1_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3244:1: ( ( ( rule__ImportedNames__SimpListAssignment_1_4_1 ) ) )
            // InternalFortXTrans.g:3245:1: ( ( rule__ImportedNames__SimpListAssignment_1_4_1 ) )
            {
            // InternalFortXTrans.g:3245:1: ( ( rule__ImportedNames__SimpListAssignment_1_4_1 ) )
            // InternalFortXTrans.g:3246:2: ( rule__ImportedNames__SimpListAssignment_1_4_1 )
            {
             before(grammarAccess.getImportedNamesAccess().getSimpListAssignment_1_4_1()); 
            // InternalFortXTrans.g:3247:2: ( rule__ImportedNames__SimpListAssignment_1_4_1 )
            // InternalFortXTrans.g:3247:3: rule__ImportedNames__SimpListAssignment_1_4_1
            {
            pushFollow(FOLLOW_2);
            rule__ImportedNames__SimpListAssignment_1_4_1();

            state._fsp--;


            }

             after(grammarAccess.getImportedNamesAccess().getSimpListAssignment_1_4_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_1_4__1__Impl"


    // $ANTLR start "rule__ImportedNames__Group_1_5__0"
    // InternalFortXTrans.g:3256:1: rule__ImportedNames__Group_1_5__0 : rule__ImportedNames__Group_1_5__0__Impl rule__ImportedNames__Group_1_5__1 ;
    public final void rule__ImportedNames__Group_1_5__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3260:1: ( rule__ImportedNames__Group_1_5__0__Impl rule__ImportedNames__Group_1_5__1 )
            // InternalFortXTrans.g:3261:2: rule__ImportedNames__Group_1_5__0__Impl rule__ImportedNames__Group_1_5__1
            {
            pushFollow(FOLLOW_17);
            rule__ImportedNames__Group_1_5__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ImportedNames__Group_1_5__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_1_5__0"


    // $ANTLR start "rule__ImportedNames__Group_1_5__0__Impl"
    // InternalFortXTrans.g:3268:1: rule__ImportedNames__Group_1_5__0__Impl : ( ( rule__ImportedNames__CommaAssignment_1_5_0 ) ) ;
    public final void rule__ImportedNames__Group_1_5__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3272:1: ( ( ( rule__ImportedNames__CommaAssignment_1_5_0 ) ) )
            // InternalFortXTrans.g:3273:1: ( ( rule__ImportedNames__CommaAssignment_1_5_0 ) )
            {
            // InternalFortXTrans.g:3273:1: ( ( rule__ImportedNames__CommaAssignment_1_5_0 ) )
            // InternalFortXTrans.g:3274:2: ( rule__ImportedNames__CommaAssignment_1_5_0 )
            {
             before(grammarAccess.getImportedNamesAccess().getCommaAssignment_1_5_0()); 
            // InternalFortXTrans.g:3275:2: ( rule__ImportedNames__CommaAssignment_1_5_0 )
            // InternalFortXTrans.g:3275:3: rule__ImportedNames__CommaAssignment_1_5_0
            {
            pushFollow(FOLLOW_2);
            rule__ImportedNames__CommaAssignment_1_5_0();

            state._fsp--;


            }

             after(grammarAccess.getImportedNamesAccess().getCommaAssignment_1_5_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_1_5__0__Impl"


    // $ANTLR start "rule__ImportedNames__Group_1_5__1"
    // InternalFortXTrans.g:3283:1: rule__ImportedNames__Group_1_5__1 : rule__ImportedNames__Group_1_5__1__Impl ;
    public final void rule__ImportedNames__Group_1_5__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3287:1: ( rule__ImportedNames__Group_1_5__1__Impl )
            // InternalFortXTrans.g:3288:2: rule__ImportedNames__Group_1_5__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ImportedNames__Group_1_5__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_1_5__1"


    // $ANTLR start "rule__ImportedNames__Group_1_5__1__Impl"
    // InternalFortXTrans.g:3294:1: rule__ImportedNames__Group_1_5__1__Impl : ( ( rule__ImportedNames__DotsAssignment_1_5_1 ) ) ;
    public final void rule__ImportedNames__Group_1_5__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3298:1: ( ( ( rule__ImportedNames__DotsAssignment_1_5_1 ) ) )
            // InternalFortXTrans.g:3299:1: ( ( rule__ImportedNames__DotsAssignment_1_5_1 ) )
            {
            // InternalFortXTrans.g:3299:1: ( ( rule__ImportedNames__DotsAssignment_1_5_1 ) )
            // InternalFortXTrans.g:3300:2: ( rule__ImportedNames__DotsAssignment_1_5_1 )
            {
             before(grammarAccess.getImportedNamesAccess().getDotsAssignment_1_5_1()); 
            // InternalFortXTrans.g:3301:2: ( rule__ImportedNames__DotsAssignment_1_5_1 )
            // InternalFortXTrans.g:3301:3: rule__ImportedNames__DotsAssignment_1_5_1
            {
            pushFollow(FOLLOW_2);
            rule__ImportedNames__DotsAssignment_1_5_1();

            state._fsp--;


            }

             after(grammarAccess.getImportedNamesAccess().getDotsAssignment_1_5_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_1_5__1__Impl"


    // $ANTLR start "rule__ImportedNames__Group_2__0"
    // InternalFortXTrans.g:3310:1: rule__ImportedNames__Group_2__0 : rule__ImportedNames__Group_2__0__Impl rule__ImportedNames__Group_2__1 ;
    public final void rule__ImportedNames__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3314:1: ( rule__ImportedNames__Group_2__0__Impl rule__ImportedNames__Group_2__1 )
            // InternalFortXTrans.g:3315:2: rule__ImportedNames__Group_2__0__Impl rule__ImportedNames__Group_2__1
            {
            pushFollow(FOLLOW_20);
            rule__ImportedNames__Group_2__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ImportedNames__Group_2__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_2__0"


    // $ANTLR start "rule__ImportedNames__Group_2__0__Impl"
    // InternalFortXTrans.g:3322:1: rule__ImportedNames__Group_2__0__Impl : ( ( rule__ImportedNames__ImpnameAssignment_2_0 ) ) ;
    public final void rule__ImportedNames__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3326:1: ( ( ( rule__ImportedNames__ImpnameAssignment_2_0 ) ) )
            // InternalFortXTrans.g:3327:1: ( ( rule__ImportedNames__ImpnameAssignment_2_0 ) )
            {
            // InternalFortXTrans.g:3327:1: ( ( rule__ImportedNames__ImpnameAssignment_2_0 ) )
            // InternalFortXTrans.g:3328:2: ( rule__ImportedNames__ImpnameAssignment_2_0 )
            {
             before(grammarAccess.getImportedNamesAccess().getImpnameAssignment_2_0()); 
            // InternalFortXTrans.g:3329:2: ( rule__ImportedNames__ImpnameAssignment_2_0 )
            // InternalFortXTrans.g:3329:3: rule__ImportedNames__ImpnameAssignment_2_0
            {
            pushFollow(FOLLOW_2);
            rule__ImportedNames__ImpnameAssignment_2_0();

            state._fsp--;


            }

             after(grammarAccess.getImportedNamesAccess().getImpnameAssignment_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_2__0__Impl"


    // $ANTLR start "rule__ImportedNames__Group_2__1"
    // InternalFortXTrans.g:3337:1: rule__ImportedNames__Group_2__1 : rule__ImportedNames__Group_2__1__Impl ;
    public final void rule__ImportedNames__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3341:1: ( rule__ImportedNames__Group_2__1__Impl )
            // InternalFortXTrans.g:3342:2: rule__ImportedNames__Group_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ImportedNames__Group_2__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_2__1"


    // $ANTLR start "rule__ImportedNames__Group_2__1__Impl"
    // InternalFortXTrans.g:3348:1: rule__ImportedNames__Group_2__1__Impl : ( ( rule__ImportedNames__Group_2_1__0 )? ) ;
    public final void rule__ImportedNames__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3352:1: ( ( ( rule__ImportedNames__Group_2_1__0 )? ) )
            // InternalFortXTrans.g:3353:1: ( ( rule__ImportedNames__Group_2_1__0 )? )
            {
            // InternalFortXTrans.g:3353:1: ( ( rule__ImportedNames__Group_2_1__0 )? )
            // InternalFortXTrans.g:3354:2: ( rule__ImportedNames__Group_2_1__0 )?
            {
             before(grammarAccess.getImportedNamesAccess().getGroup_2_1()); 
            // InternalFortXTrans.g:3355:2: ( rule__ImportedNames__Group_2_1__0 )?
            int alt38=2;
            int LA38_0 = input.LA(1);

            if ( (LA38_0==20) ) {
                alt38=1;
            }
            switch (alt38) {
                case 1 :
                    // InternalFortXTrans.g:3355:3: rule__ImportedNames__Group_2_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ImportedNames__Group_2_1__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getImportedNamesAccess().getGroup_2_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_2__1__Impl"


    // $ANTLR start "rule__ImportedNames__Group_2_1__0"
    // InternalFortXTrans.g:3364:1: rule__ImportedNames__Group_2_1__0 : rule__ImportedNames__Group_2_1__0__Impl rule__ImportedNames__Group_2_1__1 ;
    public final void rule__ImportedNames__Group_2_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3368:1: ( rule__ImportedNames__Group_2_1__0__Impl rule__ImportedNames__Group_2_1__1 )
            // InternalFortXTrans.g:3369:2: rule__ImportedNames__Group_2_1__0__Impl rule__ImportedNames__Group_2_1__1
            {
            pushFollow(FOLLOW_5);
            rule__ImportedNames__Group_2_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ImportedNames__Group_2_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_2_1__0"


    // $ANTLR start "rule__ImportedNames__Group_2_1__0__Impl"
    // InternalFortXTrans.g:3376:1: rule__ImportedNames__Group_2_1__0__Impl : ( 'as' ) ;
    public final void rule__ImportedNames__Group_2_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3380:1: ( ( 'as' ) )
            // InternalFortXTrans.g:3381:1: ( 'as' )
            {
            // InternalFortXTrans.g:3381:1: ( 'as' )
            // InternalFortXTrans.g:3382:2: 'as'
            {
             before(grammarAccess.getImportedNamesAccess().getAsKeyword_2_1_0()); 
            match(input,20,FOLLOW_2); 
             after(grammarAccess.getImportedNamesAccess().getAsKeyword_2_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_2_1__0__Impl"


    // $ANTLR start "rule__ImportedNames__Group_2_1__1"
    // InternalFortXTrans.g:3391:1: rule__ImportedNames__Group_2_1__1 : rule__ImportedNames__Group_2_1__1__Impl ;
    public final void rule__ImportedNames__Group_2_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3395:1: ( rule__ImportedNames__Group_2_1__1__Impl )
            // InternalFortXTrans.g:3396:2: rule__ImportedNames__Group_2_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ImportedNames__Group_2_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_2_1__1"


    // $ANTLR start "rule__ImportedNames__Group_2_1__1__Impl"
    // InternalFortXTrans.g:3402:1: rule__ImportedNames__Group_2_1__1__Impl : ( ( rule__ImportedNames__AsnameAssignment_2_1_1 ) ) ;
    public final void rule__ImportedNames__Group_2_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3406:1: ( ( ( rule__ImportedNames__AsnameAssignment_2_1_1 ) ) )
            // InternalFortXTrans.g:3407:1: ( ( rule__ImportedNames__AsnameAssignment_2_1_1 ) )
            {
            // InternalFortXTrans.g:3407:1: ( ( rule__ImportedNames__AsnameAssignment_2_1_1 ) )
            // InternalFortXTrans.g:3408:2: ( rule__ImportedNames__AsnameAssignment_2_1_1 )
            {
             before(grammarAccess.getImportedNamesAccess().getAsnameAssignment_2_1_1()); 
            // InternalFortXTrans.g:3409:2: ( rule__ImportedNames__AsnameAssignment_2_1_1 )
            // InternalFortXTrans.g:3409:3: rule__ImportedNames__AsnameAssignment_2_1_1
            {
            pushFollow(FOLLOW_2);
            rule__ImportedNames__AsnameAssignment_2_1_1();

            state._fsp--;


            }

             after(grammarAccess.getImportedNamesAccess().getAsnameAssignment_2_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_2_1__1__Impl"


    // $ANTLR start "rule__QualifiedName__Group_0__0"
    // InternalFortXTrans.g:3418:1: rule__QualifiedName__Group_0__0 : rule__QualifiedName__Group_0__0__Impl rule__QualifiedName__Group_0__1 ;
    public final void rule__QualifiedName__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3422:1: ( rule__QualifiedName__Group_0__0__Impl rule__QualifiedName__Group_0__1 )
            // InternalFortXTrans.g:3423:2: rule__QualifiedName__Group_0__0__Impl rule__QualifiedName__Group_0__1
            {
            pushFollow(FOLLOW_17);
            rule__QualifiedName__Group_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__QualifiedName__Group_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedName__Group_0__0"


    // $ANTLR start "rule__QualifiedName__Group_0__0__Impl"
    // InternalFortXTrans.g:3430:1: rule__QualifiedName__Group_0__0__Impl : ( ( rule__QualifiedName__SAssignment_0_0 ) ) ;
    public final void rule__QualifiedName__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3434:1: ( ( ( rule__QualifiedName__SAssignment_0_0 ) ) )
            // InternalFortXTrans.g:3435:1: ( ( rule__QualifiedName__SAssignment_0_0 ) )
            {
            // InternalFortXTrans.g:3435:1: ( ( rule__QualifiedName__SAssignment_0_0 ) )
            // InternalFortXTrans.g:3436:2: ( rule__QualifiedName__SAssignment_0_0 )
            {
             before(grammarAccess.getQualifiedNameAccess().getSAssignment_0_0()); 
            // InternalFortXTrans.g:3437:2: ( rule__QualifiedName__SAssignment_0_0 )
            // InternalFortXTrans.g:3437:3: rule__QualifiedName__SAssignment_0_0
            {
            pushFollow(FOLLOW_2);
            rule__QualifiedName__SAssignment_0_0();

            state._fsp--;


            }

             after(grammarAccess.getQualifiedNameAccess().getSAssignment_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedName__Group_0__0__Impl"


    // $ANTLR start "rule__QualifiedName__Group_0__1"
    // InternalFortXTrans.g:3445:1: rule__QualifiedName__Group_0__1 : rule__QualifiedName__Group_0__1__Impl ;
    public final void rule__QualifiedName__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3449:1: ( rule__QualifiedName__Group_0__1__Impl )
            // InternalFortXTrans.g:3450:2: rule__QualifiedName__Group_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__QualifiedName__Group_0__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedName__Group_0__1"


    // $ANTLR start "rule__QualifiedName__Group_0__1__Impl"
    // InternalFortXTrans.g:3456:1: rule__QualifiedName__Group_0__1__Impl : ( ( rule__QualifiedName__DotsAssignment_0_1 )? ) ;
    public final void rule__QualifiedName__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3460:1: ( ( ( rule__QualifiedName__DotsAssignment_0_1 )? ) )
            // InternalFortXTrans.g:3461:1: ( ( rule__QualifiedName__DotsAssignment_0_1 )? )
            {
            // InternalFortXTrans.g:3461:1: ( ( rule__QualifiedName__DotsAssignment_0_1 )? )
            // InternalFortXTrans.g:3462:2: ( rule__QualifiedName__DotsAssignment_0_1 )?
            {
             before(grammarAccess.getQualifiedNameAccess().getDotsAssignment_0_1()); 
            // InternalFortXTrans.g:3463:2: ( rule__QualifiedName__DotsAssignment_0_1 )?
            int alt39=2;
            int LA39_0 = input.LA(1);

            if ( (LA39_0==RULE_DOTS) ) {
                alt39=1;
            }
            switch (alt39) {
                case 1 :
                    // InternalFortXTrans.g:3463:3: rule__QualifiedName__DotsAssignment_0_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__QualifiedName__DotsAssignment_0_1();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getQualifiedNameAccess().getDotsAssignment_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedName__Group_0__1__Impl"


    // $ANTLR start "rule__QualifiedName__Group_1__0"
    // InternalFortXTrans.g:3472:1: rule__QualifiedName__Group_1__0 : rule__QualifiedName__Group_1__0__Impl rule__QualifiedName__Group_1__1 ;
    public final void rule__QualifiedName__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3476:1: ( rule__QualifiedName__Group_1__0__Impl rule__QualifiedName__Group_1__1 )
            // InternalFortXTrans.g:3477:2: rule__QualifiedName__Group_1__0__Impl rule__QualifiedName__Group_1__1
            {
            pushFollow(FOLLOW_16);
            rule__QualifiedName__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__QualifiedName__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedName__Group_1__0"


    // $ANTLR start "rule__QualifiedName__Group_1__0__Impl"
    // InternalFortXTrans.g:3484:1: rule__QualifiedName__Group_1__0__Impl : ( ( rule__QualifiedName__SAssignment_1_0 ) ) ;
    public final void rule__QualifiedName__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3488:1: ( ( ( rule__QualifiedName__SAssignment_1_0 ) ) )
            // InternalFortXTrans.g:3489:1: ( ( rule__QualifiedName__SAssignment_1_0 ) )
            {
            // InternalFortXTrans.g:3489:1: ( ( rule__QualifiedName__SAssignment_1_0 ) )
            // InternalFortXTrans.g:3490:2: ( rule__QualifiedName__SAssignment_1_0 )
            {
             before(grammarAccess.getQualifiedNameAccess().getSAssignment_1_0()); 
            // InternalFortXTrans.g:3491:2: ( rule__QualifiedName__SAssignment_1_0 )
            // InternalFortXTrans.g:3491:3: rule__QualifiedName__SAssignment_1_0
            {
            pushFollow(FOLLOW_2);
            rule__QualifiedName__SAssignment_1_0();

            state._fsp--;


            }

             after(grammarAccess.getQualifiedNameAccess().getSAssignment_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedName__Group_1__0__Impl"


    // $ANTLR start "rule__QualifiedName__Group_1__1"
    // InternalFortXTrans.g:3499:1: rule__QualifiedName__Group_1__1 : rule__QualifiedName__Group_1__1__Impl rule__QualifiedName__Group_1__2 ;
    public final void rule__QualifiedName__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3503:1: ( rule__QualifiedName__Group_1__1__Impl rule__QualifiedName__Group_1__2 )
            // InternalFortXTrans.g:3504:2: rule__QualifiedName__Group_1__1__Impl rule__QualifiedName__Group_1__2
            {
            pushFollow(FOLLOW_17);
            rule__QualifiedName__Group_1__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__QualifiedName__Group_1__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedName__Group_1__1"


    // $ANTLR start "rule__QualifiedName__Group_1__1__Impl"
    // InternalFortXTrans.g:3511:1: rule__QualifiedName__Group_1__1__Impl : ( ( ( rule__QualifiedName__Group_1_1__0 ) ) ( ( rule__QualifiedName__Group_1_1__0 )* ) ) ;
    public final void rule__QualifiedName__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3515:1: ( ( ( ( rule__QualifiedName__Group_1_1__0 ) ) ( ( rule__QualifiedName__Group_1_1__0 )* ) ) )
            // InternalFortXTrans.g:3516:1: ( ( ( rule__QualifiedName__Group_1_1__0 ) ) ( ( rule__QualifiedName__Group_1_1__0 )* ) )
            {
            // InternalFortXTrans.g:3516:1: ( ( ( rule__QualifiedName__Group_1_1__0 ) ) ( ( rule__QualifiedName__Group_1_1__0 )* ) )
            // InternalFortXTrans.g:3517:2: ( ( rule__QualifiedName__Group_1_1__0 ) ) ( ( rule__QualifiedName__Group_1_1__0 )* )
            {
            // InternalFortXTrans.g:3517:2: ( ( rule__QualifiedName__Group_1_1__0 ) )
            // InternalFortXTrans.g:3518:3: ( rule__QualifiedName__Group_1_1__0 )
            {
             before(grammarAccess.getQualifiedNameAccess().getGroup_1_1()); 
            // InternalFortXTrans.g:3519:3: ( rule__QualifiedName__Group_1_1__0 )
            // InternalFortXTrans.g:3519:4: rule__QualifiedName__Group_1_1__0
            {
            pushFollow(FOLLOW_21);
            rule__QualifiedName__Group_1_1__0();

            state._fsp--;


            }

             after(grammarAccess.getQualifiedNameAccess().getGroup_1_1()); 

            }

            // InternalFortXTrans.g:3522:2: ( ( rule__QualifiedName__Group_1_1__0 )* )
            // InternalFortXTrans.g:3523:3: ( rule__QualifiedName__Group_1_1__0 )*
            {
             before(grammarAccess.getQualifiedNameAccess().getGroup_1_1()); 
            // InternalFortXTrans.g:3524:3: ( rule__QualifiedName__Group_1_1__0 )*
            loop40:
            do {
                int alt40=2;
                int LA40_0 = input.LA(1);

                if ( (LA40_0==18) ) {
                    int LA40_2 = input.LA(2);

                    if ( (LA40_2==RULE_ID) ) {
                        alt40=1;
                    }


                }


                switch (alt40) {
            	case 1 :
            	    // InternalFortXTrans.g:3524:4: rule__QualifiedName__Group_1_1__0
            	    {
            	    pushFollow(FOLLOW_21);
            	    rule__QualifiedName__Group_1_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop40;
                }
            } while (true);

             after(grammarAccess.getQualifiedNameAccess().getGroup_1_1()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedName__Group_1__1__Impl"


    // $ANTLR start "rule__QualifiedName__Group_1__2"
    // InternalFortXTrans.g:3533:1: rule__QualifiedName__Group_1__2 : rule__QualifiedName__Group_1__2__Impl ;
    public final void rule__QualifiedName__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3537:1: ( rule__QualifiedName__Group_1__2__Impl )
            // InternalFortXTrans.g:3538:2: rule__QualifiedName__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__QualifiedName__Group_1__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedName__Group_1__2"


    // $ANTLR start "rule__QualifiedName__Group_1__2__Impl"
    // InternalFortXTrans.g:3544:1: rule__QualifiedName__Group_1__2__Impl : ( ( rule__QualifiedName__DotsAssignment_1_2 )? ) ;
    public final void rule__QualifiedName__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3548:1: ( ( ( rule__QualifiedName__DotsAssignment_1_2 )? ) )
            // InternalFortXTrans.g:3549:1: ( ( rule__QualifiedName__DotsAssignment_1_2 )? )
            {
            // InternalFortXTrans.g:3549:1: ( ( rule__QualifiedName__DotsAssignment_1_2 )? )
            // InternalFortXTrans.g:3550:2: ( rule__QualifiedName__DotsAssignment_1_2 )?
            {
             before(grammarAccess.getQualifiedNameAccess().getDotsAssignment_1_2()); 
            // InternalFortXTrans.g:3551:2: ( rule__QualifiedName__DotsAssignment_1_2 )?
            int alt41=2;
            int LA41_0 = input.LA(1);

            if ( (LA41_0==RULE_DOTS) ) {
                alt41=1;
            }
            switch (alt41) {
                case 1 :
                    // InternalFortXTrans.g:3551:3: rule__QualifiedName__DotsAssignment_1_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__QualifiedName__DotsAssignment_1_2();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getQualifiedNameAccess().getDotsAssignment_1_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedName__Group_1__2__Impl"


    // $ANTLR start "rule__QualifiedName__Group_1_1__0"
    // InternalFortXTrans.g:3560:1: rule__QualifiedName__Group_1_1__0 : rule__QualifiedName__Group_1_1__0__Impl rule__QualifiedName__Group_1_1__1 ;
    public final void rule__QualifiedName__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3564:1: ( rule__QualifiedName__Group_1_1__0__Impl rule__QualifiedName__Group_1_1__1 )
            // InternalFortXTrans.g:3565:2: rule__QualifiedName__Group_1_1__0__Impl rule__QualifiedName__Group_1_1__1
            {
            pushFollow(FOLLOW_5);
            rule__QualifiedName__Group_1_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__QualifiedName__Group_1_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedName__Group_1_1__0"


    // $ANTLR start "rule__QualifiedName__Group_1_1__0__Impl"
    // InternalFortXTrans.g:3572:1: rule__QualifiedName__Group_1_1__0__Impl : ( '.' ) ;
    public final void rule__QualifiedName__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3576:1: ( ( '.' ) )
            // InternalFortXTrans.g:3577:1: ( '.' )
            {
            // InternalFortXTrans.g:3577:1: ( '.' )
            // InternalFortXTrans.g:3578:2: '.'
            {
             before(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_1_0()); 
            match(input,18,FOLLOW_2); 
             after(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedName__Group_1_1__0__Impl"


    // $ANTLR start "rule__QualifiedName__Group_1_1__1"
    // InternalFortXTrans.g:3587:1: rule__QualifiedName__Group_1_1__1 : rule__QualifiedName__Group_1_1__1__Impl ;
    public final void rule__QualifiedName__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3591:1: ( rule__QualifiedName__Group_1_1__1__Impl )
            // InternalFortXTrans.g:3592:2: rule__QualifiedName__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__QualifiedName__Group_1_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedName__Group_1_1__1"


    // $ANTLR start "rule__QualifiedName__Group_1_1__1__Impl"
    // InternalFortXTrans.g:3598:1: rule__QualifiedName__Group_1_1__1__Impl : ( ( rule__QualifiedName__SAssignment_1_1_1 ) ) ;
    public final void rule__QualifiedName__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3602:1: ( ( ( rule__QualifiedName__SAssignment_1_1_1 ) ) )
            // InternalFortXTrans.g:3603:1: ( ( rule__QualifiedName__SAssignment_1_1_1 ) )
            {
            // InternalFortXTrans.g:3603:1: ( ( rule__QualifiedName__SAssignment_1_1_1 ) )
            // InternalFortXTrans.g:3604:2: ( rule__QualifiedName__SAssignment_1_1_1 )
            {
             before(grammarAccess.getQualifiedNameAccess().getSAssignment_1_1_1()); 
            // InternalFortXTrans.g:3605:2: ( rule__QualifiedName__SAssignment_1_1_1 )
            // InternalFortXTrans.g:3605:3: rule__QualifiedName__SAssignment_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__QualifiedName__SAssignment_1_1_1();

            state._fsp--;


            }

             after(grammarAccess.getQualifiedNameAccess().getSAssignment_1_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedName__Group_1_1__1__Impl"


    // $ANTLR start "rule__QualifiedNameTuple__Group__0"
    // InternalFortXTrans.g:3614:1: rule__QualifiedNameTuple__Group__0 : rule__QualifiedNameTuple__Group__0__Impl rule__QualifiedNameTuple__Group__1 ;
    public final void rule__QualifiedNameTuple__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3618:1: ( rule__QualifiedNameTuple__Group__0__Impl rule__QualifiedNameTuple__Group__1 )
            // InternalFortXTrans.g:3619:2: rule__QualifiedNameTuple__Group__0__Impl rule__QualifiedNameTuple__Group__1
            {
            pushFollow(FOLLOW_5);
            rule__QualifiedNameTuple__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__QualifiedNameTuple__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedNameTuple__Group__0"


    // $ANTLR start "rule__QualifiedNameTuple__Group__0__Impl"
    // InternalFortXTrans.g:3626:1: rule__QualifiedNameTuple__Group__0__Impl : ( '(' ) ;
    public final void rule__QualifiedNameTuple__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3630:1: ( ( '(' ) )
            // InternalFortXTrans.g:3631:1: ( '(' )
            {
            // InternalFortXTrans.g:3631:1: ( '(' )
            // InternalFortXTrans.g:3632:2: '('
            {
             before(grammarAccess.getQualifiedNameTupleAccess().getLeftParenthesisKeyword_0()); 
            match(input,21,FOLLOW_2); 
             after(grammarAccess.getQualifiedNameTupleAccess().getLeftParenthesisKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedNameTuple__Group__0__Impl"


    // $ANTLR start "rule__QualifiedNameTuple__Group__1"
    // InternalFortXTrans.g:3641:1: rule__QualifiedNameTuple__Group__1 : rule__QualifiedNameTuple__Group__1__Impl rule__QualifiedNameTuple__Group__2 ;
    public final void rule__QualifiedNameTuple__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3645:1: ( rule__QualifiedNameTuple__Group__1__Impl rule__QualifiedNameTuple__Group__2 )
            // InternalFortXTrans.g:3646:2: rule__QualifiedNameTuple__Group__1__Impl rule__QualifiedNameTuple__Group__2
            {
            pushFollow(FOLLOW_22);
            rule__QualifiedNameTuple__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__QualifiedNameTuple__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedNameTuple__Group__1"


    // $ANTLR start "rule__QualifiedNameTuple__Group__1__Impl"
    // InternalFortXTrans.g:3653:1: rule__QualifiedNameTuple__Group__1__Impl : ( ( rule__QualifiedNameTuple__QlistAssignment_1 ) ) ;
    public final void rule__QualifiedNameTuple__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3657:1: ( ( ( rule__QualifiedNameTuple__QlistAssignment_1 ) ) )
            // InternalFortXTrans.g:3658:1: ( ( rule__QualifiedNameTuple__QlistAssignment_1 ) )
            {
            // InternalFortXTrans.g:3658:1: ( ( rule__QualifiedNameTuple__QlistAssignment_1 ) )
            // InternalFortXTrans.g:3659:2: ( rule__QualifiedNameTuple__QlistAssignment_1 )
            {
             before(grammarAccess.getQualifiedNameTupleAccess().getQlistAssignment_1()); 
            // InternalFortXTrans.g:3660:2: ( rule__QualifiedNameTuple__QlistAssignment_1 )
            // InternalFortXTrans.g:3660:3: rule__QualifiedNameTuple__QlistAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__QualifiedNameTuple__QlistAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getQualifiedNameTupleAccess().getQlistAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedNameTuple__Group__1__Impl"


    // $ANTLR start "rule__QualifiedNameTuple__Group__2"
    // InternalFortXTrans.g:3668:1: rule__QualifiedNameTuple__Group__2 : rule__QualifiedNameTuple__Group__2__Impl rule__QualifiedNameTuple__Group__3 ;
    public final void rule__QualifiedNameTuple__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3672:1: ( rule__QualifiedNameTuple__Group__2__Impl rule__QualifiedNameTuple__Group__3 )
            // InternalFortXTrans.g:3673:2: rule__QualifiedNameTuple__Group__2__Impl rule__QualifiedNameTuple__Group__3
            {
            pushFollow(FOLLOW_22);
            rule__QualifiedNameTuple__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__QualifiedNameTuple__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedNameTuple__Group__2"


    // $ANTLR start "rule__QualifiedNameTuple__Group__2__Impl"
    // InternalFortXTrans.g:3680:1: rule__QualifiedNameTuple__Group__2__Impl : ( ( rule__QualifiedNameTuple__Group_2__0 )* ) ;
    public final void rule__QualifiedNameTuple__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3684:1: ( ( ( rule__QualifiedNameTuple__Group_2__0 )* ) )
            // InternalFortXTrans.g:3685:1: ( ( rule__QualifiedNameTuple__Group_2__0 )* )
            {
            // InternalFortXTrans.g:3685:1: ( ( rule__QualifiedNameTuple__Group_2__0 )* )
            // InternalFortXTrans.g:3686:2: ( rule__QualifiedNameTuple__Group_2__0 )*
            {
             before(grammarAccess.getQualifiedNameTupleAccess().getGroup_2()); 
            // InternalFortXTrans.g:3687:2: ( rule__QualifiedNameTuple__Group_2__0 )*
            loop42:
            do {
                int alt42=2;
                int LA42_0 = input.LA(1);

                if ( (LA42_0==17) ) {
                    alt42=1;
                }


                switch (alt42) {
            	case 1 :
            	    // InternalFortXTrans.g:3687:3: rule__QualifiedNameTuple__Group_2__0
            	    {
            	    pushFollow(FOLLOW_15);
            	    rule__QualifiedNameTuple__Group_2__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop42;
                }
            } while (true);

             after(grammarAccess.getQualifiedNameTupleAccess().getGroup_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedNameTuple__Group__2__Impl"


    // $ANTLR start "rule__QualifiedNameTuple__Group__3"
    // InternalFortXTrans.g:3695:1: rule__QualifiedNameTuple__Group__3 : rule__QualifiedNameTuple__Group__3__Impl ;
    public final void rule__QualifiedNameTuple__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3699:1: ( rule__QualifiedNameTuple__Group__3__Impl )
            // InternalFortXTrans.g:3700:2: rule__QualifiedNameTuple__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__QualifiedNameTuple__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedNameTuple__Group__3"


    // $ANTLR start "rule__QualifiedNameTuple__Group__3__Impl"
    // InternalFortXTrans.g:3706:1: rule__QualifiedNameTuple__Group__3__Impl : ( ')' ) ;
    public final void rule__QualifiedNameTuple__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3710:1: ( ( ')' ) )
            // InternalFortXTrans.g:3711:1: ( ')' )
            {
            // InternalFortXTrans.g:3711:1: ( ')' )
            // InternalFortXTrans.g:3712:2: ')'
            {
             before(grammarAccess.getQualifiedNameTupleAccess().getRightParenthesisKeyword_3()); 
            match(input,22,FOLLOW_2); 
             after(grammarAccess.getQualifiedNameTupleAccess().getRightParenthesisKeyword_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedNameTuple__Group__3__Impl"


    // $ANTLR start "rule__QualifiedNameTuple__Group_2__0"
    // InternalFortXTrans.g:3722:1: rule__QualifiedNameTuple__Group_2__0 : rule__QualifiedNameTuple__Group_2__0__Impl rule__QualifiedNameTuple__Group_2__1 ;
    public final void rule__QualifiedNameTuple__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3726:1: ( rule__QualifiedNameTuple__Group_2__0__Impl rule__QualifiedNameTuple__Group_2__1 )
            // InternalFortXTrans.g:3727:2: rule__QualifiedNameTuple__Group_2__0__Impl rule__QualifiedNameTuple__Group_2__1
            {
            pushFollow(FOLLOW_5);
            rule__QualifiedNameTuple__Group_2__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__QualifiedNameTuple__Group_2__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedNameTuple__Group_2__0"


    // $ANTLR start "rule__QualifiedNameTuple__Group_2__0__Impl"
    // InternalFortXTrans.g:3734:1: rule__QualifiedNameTuple__Group_2__0__Impl : ( ',' ) ;
    public final void rule__QualifiedNameTuple__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3738:1: ( ( ',' ) )
            // InternalFortXTrans.g:3739:1: ( ',' )
            {
            // InternalFortXTrans.g:3739:1: ( ',' )
            // InternalFortXTrans.g:3740:2: ','
            {
             before(grammarAccess.getQualifiedNameTupleAccess().getCommaKeyword_2_0()); 
            match(input,17,FOLLOW_2); 
             after(grammarAccess.getQualifiedNameTupleAccess().getCommaKeyword_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedNameTuple__Group_2__0__Impl"


    // $ANTLR start "rule__QualifiedNameTuple__Group_2__1"
    // InternalFortXTrans.g:3749:1: rule__QualifiedNameTuple__Group_2__1 : rule__QualifiedNameTuple__Group_2__1__Impl ;
    public final void rule__QualifiedNameTuple__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3753:1: ( rule__QualifiedNameTuple__Group_2__1__Impl )
            // InternalFortXTrans.g:3754:2: rule__QualifiedNameTuple__Group_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__QualifiedNameTuple__Group_2__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedNameTuple__Group_2__1"


    // $ANTLR start "rule__QualifiedNameTuple__Group_2__1__Impl"
    // InternalFortXTrans.g:3760:1: rule__QualifiedNameTuple__Group_2__1__Impl : ( ( rule__QualifiedNameTuple__QlistAssignment_2_1 ) ) ;
    public final void rule__QualifiedNameTuple__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3764:1: ( ( ( rule__QualifiedNameTuple__QlistAssignment_2_1 ) ) )
            // InternalFortXTrans.g:3765:1: ( ( rule__QualifiedNameTuple__QlistAssignment_2_1 ) )
            {
            // InternalFortXTrans.g:3765:1: ( ( rule__QualifiedNameTuple__QlistAssignment_2_1 ) )
            // InternalFortXTrans.g:3766:2: ( rule__QualifiedNameTuple__QlistAssignment_2_1 )
            {
             before(grammarAccess.getQualifiedNameTupleAccess().getQlistAssignment_2_1()); 
            // InternalFortXTrans.g:3767:2: ( rule__QualifiedNameTuple__QlistAssignment_2_1 )
            // InternalFortXTrans.g:3767:3: rule__QualifiedNameTuple__QlistAssignment_2_1
            {
            pushFollow(FOLLOW_2);
            rule__QualifiedNameTuple__QlistAssignment_2_1();

            state._fsp--;


            }

             after(grammarAccess.getQualifiedNameTupleAccess().getQlistAssignment_2_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedNameTuple__Group_2__1__Impl"


    // $ANTLR start "rule__SimpleNames__Group_1__0"
    // InternalFortXTrans.g:3776:1: rule__SimpleNames__Group_1__0 : rule__SimpleNames__Group_1__0__Impl rule__SimpleNames__Group_1__1 ;
    public final void rule__SimpleNames__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3780:1: ( rule__SimpleNames__Group_1__0__Impl rule__SimpleNames__Group_1__1 )
            // InternalFortXTrans.g:3781:2: rule__SimpleNames__Group_1__0__Impl rule__SimpleNames__Group_1__1
            {
            pushFollow(FOLLOW_5);
            rule__SimpleNames__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__SimpleNames__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleNames__Group_1__0"


    // $ANTLR start "rule__SimpleNames__Group_1__0__Impl"
    // InternalFortXTrans.g:3788:1: rule__SimpleNames__Group_1__0__Impl : ( ( rule__SimpleNames__BrackAssignment_1_0 ) ) ;
    public final void rule__SimpleNames__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3792:1: ( ( ( rule__SimpleNames__BrackAssignment_1_0 ) ) )
            // InternalFortXTrans.g:3793:1: ( ( rule__SimpleNames__BrackAssignment_1_0 ) )
            {
            // InternalFortXTrans.g:3793:1: ( ( rule__SimpleNames__BrackAssignment_1_0 ) )
            // InternalFortXTrans.g:3794:2: ( rule__SimpleNames__BrackAssignment_1_0 )
            {
             before(grammarAccess.getSimpleNamesAccess().getBrackAssignment_1_0()); 
            // InternalFortXTrans.g:3795:2: ( rule__SimpleNames__BrackAssignment_1_0 )
            // InternalFortXTrans.g:3795:3: rule__SimpleNames__BrackAssignment_1_0
            {
            pushFollow(FOLLOW_2);
            rule__SimpleNames__BrackAssignment_1_0();

            state._fsp--;


            }

             after(grammarAccess.getSimpleNamesAccess().getBrackAssignment_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleNames__Group_1__0__Impl"


    // $ANTLR start "rule__SimpleNames__Group_1__1"
    // InternalFortXTrans.g:3803:1: rule__SimpleNames__Group_1__1 : rule__SimpleNames__Group_1__1__Impl rule__SimpleNames__Group_1__2 ;
    public final void rule__SimpleNames__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3807:1: ( rule__SimpleNames__Group_1__1__Impl rule__SimpleNames__Group_1__2 )
            // InternalFortXTrans.g:3808:2: rule__SimpleNames__Group_1__1__Impl rule__SimpleNames__Group_1__2
            {
            pushFollow(FOLLOW_14);
            rule__SimpleNames__Group_1__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__SimpleNames__Group_1__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleNames__Group_1__1"


    // $ANTLR start "rule__SimpleNames__Group_1__1__Impl"
    // InternalFortXTrans.g:3815:1: rule__SimpleNames__Group_1__1__Impl : ( ( rule__SimpleNames__NameListAssignment_1_1 ) ) ;
    public final void rule__SimpleNames__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3819:1: ( ( ( rule__SimpleNames__NameListAssignment_1_1 ) ) )
            // InternalFortXTrans.g:3820:1: ( ( rule__SimpleNames__NameListAssignment_1_1 ) )
            {
            // InternalFortXTrans.g:3820:1: ( ( rule__SimpleNames__NameListAssignment_1_1 ) )
            // InternalFortXTrans.g:3821:2: ( rule__SimpleNames__NameListAssignment_1_1 )
            {
             before(grammarAccess.getSimpleNamesAccess().getNameListAssignment_1_1()); 
            // InternalFortXTrans.g:3822:2: ( rule__SimpleNames__NameListAssignment_1_1 )
            // InternalFortXTrans.g:3822:3: rule__SimpleNames__NameListAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__SimpleNames__NameListAssignment_1_1();

            state._fsp--;


            }

             after(grammarAccess.getSimpleNamesAccess().getNameListAssignment_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleNames__Group_1__1__Impl"


    // $ANTLR start "rule__SimpleNames__Group_1__2"
    // InternalFortXTrans.g:3830:1: rule__SimpleNames__Group_1__2 : rule__SimpleNames__Group_1__2__Impl rule__SimpleNames__Group_1__3 ;
    public final void rule__SimpleNames__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3834:1: ( rule__SimpleNames__Group_1__2__Impl rule__SimpleNames__Group_1__3 )
            // InternalFortXTrans.g:3835:2: rule__SimpleNames__Group_1__2__Impl rule__SimpleNames__Group_1__3
            {
            pushFollow(FOLLOW_14);
            rule__SimpleNames__Group_1__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__SimpleNames__Group_1__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleNames__Group_1__2"


    // $ANTLR start "rule__SimpleNames__Group_1__2__Impl"
    // InternalFortXTrans.g:3842:1: rule__SimpleNames__Group_1__2__Impl : ( ( rule__SimpleNames__Group_1_2__0 )* ) ;
    public final void rule__SimpleNames__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3846:1: ( ( ( rule__SimpleNames__Group_1_2__0 )* ) )
            // InternalFortXTrans.g:3847:1: ( ( rule__SimpleNames__Group_1_2__0 )* )
            {
            // InternalFortXTrans.g:3847:1: ( ( rule__SimpleNames__Group_1_2__0 )* )
            // InternalFortXTrans.g:3848:2: ( rule__SimpleNames__Group_1_2__0 )*
            {
             before(grammarAccess.getSimpleNamesAccess().getGroup_1_2()); 
            // InternalFortXTrans.g:3849:2: ( rule__SimpleNames__Group_1_2__0 )*
            loop43:
            do {
                int alt43=2;
                int LA43_0 = input.LA(1);

                if ( (LA43_0==17) ) {
                    alt43=1;
                }


                switch (alt43) {
            	case 1 :
            	    // InternalFortXTrans.g:3849:3: rule__SimpleNames__Group_1_2__0
            	    {
            	    pushFollow(FOLLOW_15);
            	    rule__SimpleNames__Group_1_2__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop43;
                }
            } while (true);

             after(grammarAccess.getSimpleNamesAccess().getGroup_1_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleNames__Group_1__2__Impl"


    // $ANTLR start "rule__SimpleNames__Group_1__3"
    // InternalFortXTrans.g:3857:1: rule__SimpleNames__Group_1__3 : rule__SimpleNames__Group_1__3__Impl ;
    public final void rule__SimpleNames__Group_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3861:1: ( rule__SimpleNames__Group_1__3__Impl )
            // InternalFortXTrans.g:3862:2: rule__SimpleNames__Group_1__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__SimpleNames__Group_1__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleNames__Group_1__3"


    // $ANTLR start "rule__SimpleNames__Group_1__3__Impl"
    // InternalFortXTrans.g:3868:1: rule__SimpleNames__Group_1__3__Impl : ( '}' ) ;
    public final void rule__SimpleNames__Group_1__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3872:1: ( ( '}' ) )
            // InternalFortXTrans.g:3873:1: ( '}' )
            {
            // InternalFortXTrans.g:3873:1: ( '}' )
            // InternalFortXTrans.g:3874:2: '}'
            {
             before(grammarAccess.getSimpleNamesAccess().getRightCurlyBracketKeyword_1_3()); 
            match(input,16,FOLLOW_2); 
             after(grammarAccess.getSimpleNamesAccess().getRightCurlyBracketKeyword_1_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleNames__Group_1__3__Impl"


    // $ANTLR start "rule__SimpleNames__Group_1_2__0"
    // InternalFortXTrans.g:3884:1: rule__SimpleNames__Group_1_2__0 : rule__SimpleNames__Group_1_2__0__Impl rule__SimpleNames__Group_1_2__1 ;
    public final void rule__SimpleNames__Group_1_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3888:1: ( rule__SimpleNames__Group_1_2__0__Impl rule__SimpleNames__Group_1_2__1 )
            // InternalFortXTrans.g:3889:2: rule__SimpleNames__Group_1_2__0__Impl rule__SimpleNames__Group_1_2__1
            {
            pushFollow(FOLLOW_5);
            rule__SimpleNames__Group_1_2__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__SimpleNames__Group_1_2__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleNames__Group_1_2__0"


    // $ANTLR start "rule__SimpleNames__Group_1_2__0__Impl"
    // InternalFortXTrans.g:3896:1: rule__SimpleNames__Group_1_2__0__Impl : ( ',' ) ;
    public final void rule__SimpleNames__Group_1_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3900:1: ( ( ',' ) )
            // InternalFortXTrans.g:3901:1: ( ',' )
            {
            // InternalFortXTrans.g:3901:1: ( ',' )
            // InternalFortXTrans.g:3902:2: ','
            {
             before(grammarAccess.getSimpleNamesAccess().getCommaKeyword_1_2_0()); 
            match(input,17,FOLLOW_2); 
             after(grammarAccess.getSimpleNamesAccess().getCommaKeyword_1_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleNames__Group_1_2__0__Impl"


    // $ANTLR start "rule__SimpleNames__Group_1_2__1"
    // InternalFortXTrans.g:3911:1: rule__SimpleNames__Group_1_2__1 : rule__SimpleNames__Group_1_2__1__Impl ;
    public final void rule__SimpleNames__Group_1_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3915:1: ( rule__SimpleNames__Group_1_2__1__Impl )
            // InternalFortXTrans.g:3916:2: rule__SimpleNames__Group_1_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__SimpleNames__Group_1_2__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleNames__Group_1_2__1"


    // $ANTLR start "rule__SimpleNames__Group_1_2__1__Impl"
    // InternalFortXTrans.g:3922:1: rule__SimpleNames__Group_1_2__1__Impl : ( ( rule__SimpleNames__NameListAssignment_1_2_1 ) ) ;
    public final void rule__SimpleNames__Group_1_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3926:1: ( ( ( rule__SimpleNames__NameListAssignment_1_2_1 ) ) )
            // InternalFortXTrans.g:3927:1: ( ( rule__SimpleNames__NameListAssignment_1_2_1 ) )
            {
            // InternalFortXTrans.g:3927:1: ( ( rule__SimpleNames__NameListAssignment_1_2_1 ) )
            // InternalFortXTrans.g:3928:2: ( rule__SimpleNames__NameListAssignment_1_2_1 )
            {
             before(grammarAccess.getSimpleNamesAccess().getNameListAssignment_1_2_1()); 
            // InternalFortXTrans.g:3929:2: ( rule__SimpleNames__NameListAssignment_1_2_1 )
            // InternalFortXTrans.g:3929:3: rule__SimpleNames__NameListAssignment_1_2_1
            {
            pushFollow(FOLLOW_2);
            rule__SimpleNames__NameListAssignment_1_2_1();

            state._fsp--;


            }

             after(grammarAccess.getSimpleNamesAccess().getNameListAssignment_1_2_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleNames__Group_1_2__1__Impl"


    // $ANTLR start "rule__AliasedSimpleName__Group__0"
    // InternalFortXTrans.g:3938:1: rule__AliasedSimpleName__Group__0 : rule__AliasedSimpleName__Group__0__Impl rule__AliasedSimpleName__Group__1 ;
    public final void rule__AliasedSimpleName__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3942:1: ( rule__AliasedSimpleName__Group__0__Impl rule__AliasedSimpleName__Group__1 )
            // InternalFortXTrans.g:3943:2: rule__AliasedSimpleName__Group__0__Impl rule__AliasedSimpleName__Group__1
            {
            pushFollow(FOLLOW_20);
            rule__AliasedSimpleName__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__AliasedSimpleName__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedSimpleName__Group__0"


    // $ANTLR start "rule__AliasedSimpleName__Group__0__Impl"
    // InternalFortXTrans.g:3950:1: rule__AliasedSimpleName__Group__0__Impl : ( ( rule__AliasedSimpleName__OrigAssignment_0 ) ) ;
    public final void rule__AliasedSimpleName__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3954:1: ( ( ( rule__AliasedSimpleName__OrigAssignment_0 ) ) )
            // InternalFortXTrans.g:3955:1: ( ( rule__AliasedSimpleName__OrigAssignment_0 ) )
            {
            // InternalFortXTrans.g:3955:1: ( ( rule__AliasedSimpleName__OrigAssignment_0 ) )
            // InternalFortXTrans.g:3956:2: ( rule__AliasedSimpleName__OrigAssignment_0 )
            {
             before(grammarAccess.getAliasedSimpleNameAccess().getOrigAssignment_0()); 
            // InternalFortXTrans.g:3957:2: ( rule__AliasedSimpleName__OrigAssignment_0 )
            // InternalFortXTrans.g:3957:3: rule__AliasedSimpleName__OrigAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__AliasedSimpleName__OrigAssignment_0();

            state._fsp--;


            }

             after(grammarAccess.getAliasedSimpleNameAccess().getOrigAssignment_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedSimpleName__Group__0__Impl"


    // $ANTLR start "rule__AliasedSimpleName__Group__1"
    // InternalFortXTrans.g:3965:1: rule__AliasedSimpleName__Group__1 : rule__AliasedSimpleName__Group__1__Impl ;
    public final void rule__AliasedSimpleName__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3969:1: ( rule__AliasedSimpleName__Group__1__Impl )
            // InternalFortXTrans.g:3970:2: rule__AliasedSimpleName__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AliasedSimpleName__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedSimpleName__Group__1"


    // $ANTLR start "rule__AliasedSimpleName__Group__1__Impl"
    // InternalFortXTrans.g:3976:1: rule__AliasedSimpleName__Group__1__Impl : ( ( rule__AliasedSimpleName__Group_1__0 )? ) ;
    public final void rule__AliasedSimpleName__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3980:1: ( ( ( rule__AliasedSimpleName__Group_1__0 )? ) )
            // InternalFortXTrans.g:3981:1: ( ( rule__AliasedSimpleName__Group_1__0 )? )
            {
            // InternalFortXTrans.g:3981:1: ( ( rule__AliasedSimpleName__Group_1__0 )? )
            // InternalFortXTrans.g:3982:2: ( rule__AliasedSimpleName__Group_1__0 )?
            {
             before(grammarAccess.getAliasedSimpleNameAccess().getGroup_1()); 
            // InternalFortXTrans.g:3983:2: ( rule__AliasedSimpleName__Group_1__0 )?
            int alt44=2;
            int LA44_0 = input.LA(1);

            if ( (LA44_0==20) ) {
                alt44=1;
            }
            switch (alt44) {
                case 1 :
                    // InternalFortXTrans.g:3983:3: rule__AliasedSimpleName__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__AliasedSimpleName__Group_1__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getAliasedSimpleNameAccess().getGroup_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedSimpleName__Group__1__Impl"


    // $ANTLR start "rule__AliasedSimpleName__Group_1__0"
    // InternalFortXTrans.g:3992:1: rule__AliasedSimpleName__Group_1__0 : rule__AliasedSimpleName__Group_1__0__Impl rule__AliasedSimpleName__Group_1__1 ;
    public final void rule__AliasedSimpleName__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3996:1: ( rule__AliasedSimpleName__Group_1__0__Impl rule__AliasedSimpleName__Group_1__1 )
            // InternalFortXTrans.g:3997:2: rule__AliasedSimpleName__Group_1__0__Impl rule__AliasedSimpleName__Group_1__1
            {
            pushFollow(FOLLOW_5);
            rule__AliasedSimpleName__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__AliasedSimpleName__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedSimpleName__Group_1__0"


    // $ANTLR start "rule__AliasedSimpleName__Group_1__0__Impl"
    // InternalFortXTrans.g:4004:1: rule__AliasedSimpleName__Group_1__0__Impl : ( 'as' ) ;
    public final void rule__AliasedSimpleName__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4008:1: ( ( 'as' ) )
            // InternalFortXTrans.g:4009:1: ( 'as' )
            {
            // InternalFortXTrans.g:4009:1: ( 'as' )
            // InternalFortXTrans.g:4010:2: 'as'
            {
             before(grammarAccess.getAliasedSimpleNameAccess().getAsKeyword_1_0()); 
            match(input,20,FOLLOW_2); 
             after(grammarAccess.getAliasedSimpleNameAccess().getAsKeyword_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedSimpleName__Group_1__0__Impl"


    // $ANTLR start "rule__AliasedSimpleName__Group_1__1"
    // InternalFortXTrans.g:4019:1: rule__AliasedSimpleName__Group_1__1 : rule__AliasedSimpleName__Group_1__1__Impl ;
    public final void rule__AliasedSimpleName__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4023:1: ( rule__AliasedSimpleName__Group_1__1__Impl )
            // InternalFortXTrans.g:4024:2: rule__AliasedSimpleName__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AliasedSimpleName__Group_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedSimpleName__Group_1__1"


    // $ANTLR start "rule__AliasedSimpleName__Group_1__1__Impl"
    // InternalFortXTrans.g:4030:1: rule__AliasedSimpleName__Group_1__1__Impl : ( ( rule__AliasedSimpleName__AsNameAssignment_1_1 ) ) ;
    public final void rule__AliasedSimpleName__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4034:1: ( ( ( rule__AliasedSimpleName__AsNameAssignment_1_1 ) ) )
            // InternalFortXTrans.g:4035:1: ( ( rule__AliasedSimpleName__AsNameAssignment_1_1 ) )
            {
            // InternalFortXTrans.g:4035:1: ( ( rule__AliasedSimpleName__AsNameAssignment_1_1 ) )
            // InternalFortXTrans.g:4036:2: ( rule__AliasedSimpleName__AsNameAssignment_1_1 )
            {
             before(grammarAccess.getAliasedSimpleNameAccess().getAsNameAssignment_1_1()); 
            // InternalFortXTrans.g:4037:2: ( rule__AliasedSimpleName__AsNameAssignment_1_1 )
            // InternalFortXTrans.g:4037:3: rule__AliasedSimpleName__AsNameAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__AliasedSimpleName__AsNameAssignment_1_1();

            state._fsp--;


            }

             after(grammarAccess.getAliasedSimpleNameAccess().getAsNameAssignment_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedSimpleName__Group_1__1__Impl"


    // $ANTLR start "rule__AliasedAPINames__Group_1__0"
    // InternalFortXTrans.g:4046:1: rule__AliasedAPINames__Group_1__0 : rule__AliasedAPINames__Group_1__0__Impl rule__AliasedAPINames__Group_1__1 ;
    public final void rule__AliasedAPINames__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4050:1: ( rule__AliasedAPINames__Group_1__0__Impl rule__AliasedAPINames__Group_1__1 )
            // InternalFortXTrans.g:4051:2: rule__AliasedAPINames__Group_1__0__Impl rule__AliasedAPINames__Group_1__1
            {
            pushFollow(FOLLOW_5);
            rule__AliasedAPINames__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__AliasedAPINames__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedAPINames__Group_1__0"


    // $ANTLR start "rule__AliasedAPINames__Group_1__0__Impl"
    // InternalFortXTrans.g:4058:1: rule__AliasedAPINames__Group_1__0__Impl : ( ( rule__AliasedAPINames__BrackAssignment_1_0 ) ) ;
    public final void rule__AliasedAPINames__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4062:1: ( ( ( rule__AliasedAPINames__BrackAssignment_1_0 ) ) )
            // InternalFortXTrans.g:4063:1: ( ( rule__AliasedAPINames__BrackAssignment_1_0 ) )
            {
            // InternalFortXTrans.g:4063:1: ( ( rule__AliasedAPINames__BrackAssignment_1_0 ) )
            // InternalFortXTrans.g:4064:2: ( rule__AliasedAPINames__BrackAssignment_1_0 )
            {
             before(grammarAccess.getAliasedAPINamesAccess().getBrackAssignment_1_0()); 
            // InternalFortXTrans.g:4065:2: ( rule__AliasedAPINames__BrackAssignment_1_0 )
            // InternalFortXTrans.g:4065:3: rule__AliasedAPINames__BrackAssignment_1_0
            {
            pushFollow(FOLLOW_2);
            rule__AliasedAPINames__BrackAssignment_1_0();

            state._fsp--;


            }

             after(grammarAccess.getAliasedAPINamesAccess().getBrackAssignment_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedAPINames__Group_1__0__Impl"


    // $ANTLR start "rule__AliasedAPINames__Group_1__1"
    // InternalFortXTrans.g:4073:1: rule__AliasedAPINames__Group_1__1 : rule__AliasedAPINames__Group_1__1__Impl rule__AliasedAPINames__Group_1__2 ;
    public final void rule__AliasedAPINames__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4077:1: ( rule__AliasedAPINames__Group_1__1__Impl rule__AliasedAPINames__Group_1__2 )
            // InternalFortXTrans.g:4078:2: rule__AliasedAPINames__Group_1__1__Impl rule__AliasedAPINames__Group_1__2
            {
            pushFollow(FOLLOW_14);
            rule__AliasedAPINames__Group_1__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__AliasedAPINames__Group_1__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedAPINames__Group_1__1"


    // $ANTLR start "rule__AliasedAPINames__Group_1__1__Impl"
    // InternalFortXTrans.g:4085:1: rule__AliasedAPINames__Group_1__1__Impl : ( ( rule__AliasedAPINames__NameListAssignment_1_1 ) ) ;
    public final void rule__AliasedAPINames__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4089:1: ( ( ( rule__AliasedAPINames__NameListAssignment_1_1 ) ) )
            // InternalFortXTrans.g:4090:1: ( ( rule__AliasedAPINames__NameListAssignment_1_1 ) )
            {
            // InternalFortXTrans.g:4090:1: ( ( rule__AliasedAPINames__NameListAssignment_1_1 ) )
            // InternalFortXTrans.g:4091:2: ( rule__AliasedAPINames__NameListAssignment_1_1 )
            {
             before(grammarAccess.getAliasedAPINamesAccess().getNameListAssignment_1_1()); 
            // InternalFortXTrans.g:4092:2: ( rule__AliasedAPINames__NameListAssignment_1_1 )
            // InternalFortXTrans.g:4092:3: rule__AliasedAPINames__NameListAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__AliasedAPINames__NameListAssignment_1_1();

            state._fsp--;


            }

             after(grammarAccess.getAliasedAPINamesAccess().getNameListAssignment_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedAPINames__Group_1__1__Impl"


    // $ANTLR start "rule__AliasedAPINames__Group_1__2"
    // InternalFortXTrans.g:4100:1: rule__AliasedAPINames__Group_1__2 : rule__AliasedAPINames__Group_1__2__Impl rule__AliasedAPINames__Group_1__3 ;
    public final void rule__AliasedAPINames__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4104:1: ( rule__AliasedAPINames__Group_1__2__Impl rule__AliasedAPINames__Group_1__3 )
            // InternalFortXTrans.g:4105:2: rule__AliasedAPINames__Group_1__2__Impl rule__AliasedAPINames__Group_1__3
            {
            pushFollow(FOLLOW_14);
            rule__AliasedAPINames__Group_1__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__AliasedAPINames__Group_1__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedAPINames__Group_1__2"


    // $ANTLR start "rule__AliasedAPINames__Group_1__2__Impl"
    // InternalFortXTrans.g:4112:1: rule__AliasedAPINames__Group_1__2__Impl : ( ( rule__AliasedAPINames__Group_1_2__0 )* ) ;
    public final void rule__AliasedAPINames__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4116:1: ( ( ( rule__AliasedAPINames__Group_1_2__0 )* ) )
            // InternalFortXTrans.g:4117:1: ( ( rule__AliasedAPINames__Group_1_2__0 )* )
            {
            // InternalFortXTrans.g:4117:1: ( ( rule__AliasedAPINames__Group_1_2__0 )* )
            // InternalFortXTrans.g:4118:2: ( rule__AliasedAPINames__Group_1_2__0 )*
            {
             before(grammarAccess.getAliasedAPINamesAccess().getGroup_1_2()); 
            // InternalFortXTrans.g:4119:2: ( rule__AliasedAPINames__Group_1_2__0 )*
            loop45:
            do {
                int alt45=2;
                int LA45_0 = input.LA(1);

                if ( (LA45_0==17) ) {
                    alt45=1;
                }


                switch (alt45) {
            	case 1 :
            	    // InternalFortXTrans.g:4119:3: rule__AliasedAPINames__Group_1_2__0
            	    {
            	    pushFollow(FOLLOW_15);
            	    rule__AliasedAPINames__Group_1_2__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop45;
                }
            } while (true);

             after(grammarAccess.getAliasedAPINamesAccess().getGroup_1_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedAPINames__Group_1__2__Impl"


    // $ANTLR start "rule__AliasedAPINames__Group_1__3"
    // InternalFortXTrans.g:4127:1: rule__AliasedAPINames__Group_1__3 : rule__AliasedAPINames__Group_1__3__Impl ;
    public final void rule__AliasedAPINames__Group_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4131:1: ( rule__AliasedAPINames__Group_1__3__Impl )
            // InternalFortXTrans.g:4132:2: rule__AliasedAPINames__Group_1__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AliasedAPINames__Group_1__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedAPINames__Group_1__3"


    // $ANTLR start "rule__AliasedAPINames__Group_1__3__Impl"
    // InternalFortXTrans.g:4138:1: rule__AliasedAPINames__Group_1__3__Impl : ( '}' ) ;
    public final void rule__AliasedAPINames__Group_1__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4142:1: ( ( '}' ) )
            // InternalFortXTrans.g:4143:1: ( '}' )
            {
            // InternalFortXTrans.g:4143:1: ( '}' )
            // InternalFortXTrans.g:4144:2: '}'
            {
             before(grammarAccess.getAliasedAPINamesAccess().getRightCurlyBracketKeyword_1_3()); 
            match(input,16,FOLLOW_2); 
             after(grammarAccess.getAliasedAPINamesAccess().getRightCurlyBracketKeyword_1_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedAPINames__Group_1__3__Impl"


    // $ANTLR start "rule__AliasedAPINames__Group_1_2__0"
    // InternalFortXTrans.g:4154:1: rule__AliasedAPINames__Group_1_2__0 : rule__AliasedAPINames__Group_1_2__0__Impl rule__AliasedAPINames__Group_1_2__1 ;
    public final void rule__AliasedAPINames__Group_1_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4158:1: ( rule__AliasedAPINames__Group_1_2__0__Impl rule__AliasedAPINames__Group_1_2__1 )
            // InternalFortXTrans.g:4159:2: rule__AliasedAPINames__Group_1_2__0__Impl rule__AliasedAPINames__Group_1_2__1
            {
            pushFollow(FOLLOW_5);
            rule__AliasedAPINames__Group_1_2__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__AliasedAPINames__Group_1_2__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedAPINames__Group_1_2__0"


    // $ANTLR start "rule__AliasedAPINames__Group_1_2__0__Impl"
    // InternalFortXTrans.g:4166:1: rule__AliasedAPINames__Group_1_2__0__Impl : ( ',' ) ;
    public final void rule__AliasedAPINames__Group_1_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4170:1: ( ( ',' ) )
            // InternalFortXTrans.g:4171:1: ( ',' )
            {
            // InternalFortXTrans.g:4171:1: ( ',' )
            // InternalFortXTrans.g:4172:2: ','
            {
             before(grammarAccess.getAliasedAPINamesAccess().getCommaKeyword_1_2_0()); 
            match(input,17,FOLLOW_2); 
             after(grammarAccess.getAliasedAPINamesAccess().getCommaKeyword_1_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedAPINames__Group_1_2__0__Impl"


    // $ANTLR start "rule__AliasedAPINames__Group_1_2__1"
    // InternalFortXTrans.g:4181:1: rule__AliasedAPINames__Group_1_2__1 : rule__AliasedAPINames__Group_1_2__1__Impl ;
    public final void rule__AliasedAPINames__Group_1_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4185:1: ( rule__AliasedAPINames__Group_1_2__1__Impl )
            // InternalFortXTrans.g:4186:2: rule__AliasedAPINames__Group_1_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AliasedAPINames__Group_1_2__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedAPINames__Group_1_2__1"


    // $ANTLR start "rule__AliasedAPINames__Group_1_2__1__Impl"
    // InternalFortXTrans.g:4192:1: rule__AliasedAPINames__Group_1_2__1__Impl : ( ( rule__AliasedAPINames__NameListAssignment_1_2_1 ) ) ;
    public final void rule__AliasedAPINames__Group_1_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4196:1: ( ( ( rule__AliasedAPINames__NameListAssignment_1_2_1 ) ) )
            // InternalFortXTrans.g:4197:1: ( ( rule__AliasedAPINames__NameListAssignment_1_2_1 ) )
            {
            // InternalFortXTrans.g:4197:1: ( ( rule__AliasedAPINames__NameListAssignment_1_2_1 ) )
            // InternalFortXTrans.g:4198:2: ( rule__AliasedAPINames__NameListAssignment_1_2_1 )
            {
             before(grammarAccess.getAliasedAPINamesAccess().getNameListAssignment_1_2_1()); 
            // InternalFortXTrans.g:4199:2: ( rule__AliasedAPINames__NameListAssignment_1_2_1 )
            // InternalFortXTrans.g:4199:3: rule__AliasedAPINames__NameListAssignment_1_2_1
            {
            pushFollow(FOLLOW_2);
            rule__AliasedAPINames__NameListAssignment_1_2_1();

            state._fsp--;


            }

             after(grammarAccess.getAliasedAPINamesAccess().getNameListAssignment_1_2_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedAPINames__Group_1_2__1__Impl"


    // $ANTLR start "rule__AliasedAPIName__Group__0"
    // InternalFortXTrans.g:4208:1: rule__AliasedAPIName__Group__0 : rule__AliasedAPIName__Group__0__Impl rule__AliasedAPIName__Group__1 ;
    public final void rule__AliasedAPIName__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4212:1: ( rule__AliasedAPIName__Group__0__Impl rule__AliasedAPIName__Group__1 )
            // InternalFortXTrans.g:4213:2: rule__AliasedAPIName__Group__0__Impl rule__AliasedAPIName__Group__1
            {
            pushFollow(FOLLOW_20);
            rule__AliasedAPIName__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__AliasedAPIName__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedAPIName__Group__0"


    // $ANTLR start "rule__AliasedAPIName__Group__0__Impl"
    // InternalFortXTrans.g:4220:1: rule__AliasedAPIName__Group__0__Impl : ( ( rule__AliasedAPIName__OrigAssignment_0 ) ) ;
    public final void rule__AliasedAPIName__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4224:1: ( ( ( rule__AliasedAPIName__OrigAssignment_0 ) ) )
            // InternalFortXTrans.g:4225:1: ( ( rule__AliasedAPIName__OrigAssignment_0 ) )
            {
            // InternalFortXTrans.g:4225:1: ( ( rule__AliasedAPIName__OrigAssignment_0 ) )
            // InternalFortXTrans.g:4226:2: ( rule__AliasedAPIName__OrigAssignment_0 )
            {
             before(grammarAccess.getAliasedAPINameAccess().getOrigAssignment_0()); 
            // InternalFortXTrans.g:4227:2: ( rule__AliasedAPIName__OrigAssignment_0 )
            // InternalFortXTrans.g:4227:3: rule__AliasedAPIName__OrigAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__AliasedAPIName__OrigAssignment_0();

            state._fsp--;


            }

             after(grammarAccess.getAliasedAPINameAccess().getOrigAssignment_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedAPIName__Group__0__Impl"


    // $ANTLR start "rule__AliasedAPIName__Group__1"
    // InternalFortXTrans.g:4235:1: rule__AliasedAPIName__Group__1 : rule__AliasedAPIName__Group__1__Impl ;
    public final void rule__AliasedAPIName__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4239:1: ( rule__AliasedAPIName__Group__1__Impl )
            // InternalFortXTrans.g:4240:2: rule__AliasedAPIName__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AliasedAPIName__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedAPIName__Group__1"


    // $ANTLR start "rule__AliasedAPIName__Group__1__Impl"
    // InternalFortXTrans.g:4246:1: rule__AliasedAPIName__Group__1__Impl : ( ( rule__AliasedAPIName__Group_1__0 )? ) ;
    public final void rule__AliasedAPIName__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4250:1: ( ( ( rule__AliasedAPIName__Group_1__0 )? ) )
            // InternalFortXTrans.g:4251:1: ( ( rule__AliasedAPIName__Group_1__0 )? )
            {
            // InternalFortXTrans.g:4251:1: ( ( rule__AliasedAPIName__Group_1__0 )? )
            // InternalFortXTrans.g:4252:2: ( rule__AliasedAPIName__Group_1__0 )?
            {
             before(grammarAccess.getAliasedAPINameAccess().getGroup_1()); 
            // InternalFortXTrans.g:4253:2: ( rule__AliasedAPIName__Group_1__0 )?
            int alt46=2;
            int LA46_0 = input.LA(1);

            if ( (LA46_0==20) ) {
                alt46=1;
            }
            switch (alt46) {
                case 1 :
                    // InternalFortXTrans.g:4253:3: rule__AliasedAPIName__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__AliasedAPIName__Group_1__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getAliasedAPINameAccess().getGroup_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedAPIName__Group__1__Impl"


    // $ANTLR start "rule__AliasedAPIName__Group_1__0"
    // InternalFortXTrans.g:4262:1: rule__AliasedAPIName__Group_1__0 : rule__AliasedAPIName__Group_1__0__Impl rule__AliasedAPIName__Group_1__1 ;
    public final void rule__AliasedAPIName__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4266:1: ( rule__AliasedAPIName__Group_1__0__Impl rule__AliasedAPIName__Group_1__1 )
            // InternalFortXTrans.g:4267:2: rule__AliasedAPIName__Group_1__0__Impl rule__AliasedAPIName__Group_1__1
            {
            pushFollow(FOLLOW_5);
            rule__AliasedAPIName__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__AliasedAPIName__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedAPIName__Group_1__0"


    // $ANTLR start "rule__AliasedAPIName__Group_1__0__Impl"
    // InternalFortXTrans.g:4274:1: rule__AliasedAPIName__Group_1__0__Impl : ( 'as' ) ;
    public final void rule__AliasedAPIName__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4278:1: ( ( 'as' ) )
            // InternalFortXTrans.g:4279:1: ( 'as' )
            {
            // InternalFortXTrans.g:4279:1: ( 'as' )
            // InternalFortXTrans.g:4280:2: 'as'
            {
             before(grammarAccess.getAliasedAPINameAccess().getAsKeyword_1_0()); 
            match(input,20,FOLLOW_2); 
             after(grammarAccess.getAliasedAPINameAccess().getAsKeyword_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedAPIName__Group_1__0__Impl"


    // $ANTLR start "rule__AliasedAPIName__Group_1__1"
    // InternalFortXTrans.g:4289:1: rule__AliasedAPIName__Group_1__1 : rule__AliasedAPIName__Group_1__1__Impl ;
    public final void rule__AliasedAPIName__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4293:1: ( rule__AliasedAPIName__Group_1__1__Impl )
            // InternalFortXTrans.g:4294:2: rule__AliasedAPIName__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AliasedAPIName__Group_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedAPIName__Group_1__1"


    // $ANTLR start "rule__AliasedAPIName__Group_1__1__Impl"
    // InternalFortXTrans.g:4300:1: rule__AliasedAPIName__Group_1__1__Impl : ( ( rule__AliasedAPIName__AsNameAssignment_1_1 ) ) ;
    public final void rule__AliasedAPIName__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4304:1: ( ( ( rule__AliasedAPIName__AsNameAssignment_1_1 ) ) )
            // InternalFortXTrans.g:4305:1: ( ( rule__AliasedAPIName__AsNameAssignment_1_1 ) )
            {
            // InternalFortXTrans.g:4305:1: ( ( rule__AliasedAPIName__AsNameAssignment_1_1 ) )
            // InternalFortXTrans.g:4306:2: ( rule__AliasedAPIName__AsNameAssignment_1_1 )
            {
             before(grammarAccess.getAliasedAPINameAccess().getAsNameAssignment_1_1()); 
            // InternalFortXTrans.g:4307:2: ( rule__AliasedAPIName__AsNameAssignment_1_1 )
            // InternalFortXTrans.g:4307:3: rule__AliasedAPIName__AsNameAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__AliasedAPIName__AsNameAssignment_1_1();

            state._fsp--;


            }

             after(grammarAccess.getAliasedAPINameAccess().getAsNameAssignment_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedAPIName__Group_1__1__Impl"


    // $ANTLR start "rule__ValParam__Group_1__0"
    // InternalFortXTrans.g:4316:1: rule__ValParam__Group_1__0 : rule__ValParam__Group_1__0__Impl rule__ValParam__Group_1__1 ;
    public final void rule__ValParam__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4320:1: ( rule__ValParam__Group_1__0__Impl rule__ValParam__Group_1__1 )
            // InternalFortXTrans.g:4321:2: rule__ValParam__Group_1__0__Impl rule__ValParam__Group_1__1
            {
            pushFollow(FOLLOW_23);
            rule__ValParam__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ValParam__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValParam__Group_1__0"


    // $ANTLR start "rule__ValParam__Group_1__0__Impl"
    // InternalFortXTrans.g:4328:1: rule__ValParam__Group_1__0__Impl : ( ( rule__ValParam__BrackAssignment_1_0 ) ) ;
    public final void rule__ValParam__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4332:1: ( ( ( rule__ValParam__BrackAssignment_1_0 ) ) )
            // InternalFortXTrans.g:4333:1: ( ( rule__ValParam__BrackAssignment_1_0 ) )
            {
            // InternalFortXTrans.g:4333:1: ( ( rule__ValParam__BrackAssignment_1_0 ) )
            // InternalFortXTrans.g:4334:2: ( rule__ValParam__BrackAssignment_1_0 )
            {
             before(grammarAccess.getValParamAccess().getBrackAssignment_1_0()); 
            // InternalFortXTrans.g:4335:2: ( rule__ValParam__BrackAssignment_1_0 )
            // InternalFortXTrans.g:4335:3: rule__ValParam__BrackAssignment_1_0
            {
            pushFollow(FOLLOW_2);
            rule__ValParam__BrackAssignment_1_0();

            state._fsp--;


            }

             after(grammarAccess.getValParamAccess().getBrackAssignment_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValParam__Group_1__0__Impl"


    // $ANTLR start "rule__ValParam__Group_1__1"
    // InternalFortXTrans.g:4343:1: rule__ValParam__Group_1__1 : rule__ValParam__Group_1__1__Impl rule__ValParam__Group_1__2 ;
    public final void rule__ValParam__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4347:1: ( rule__ValParam__Group_1__1__Impl rule__ValParam__Group_1__2 )
            // InternalFortXTrans.g:4348:2: rule__ValParam__Group_1__1__Impl rule__ValParam__Group_1__2
            {
            pushFollow(FOLLOW_23);
            rule__ValParam__Group_1__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ValParam__Group_1__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValParam__Group_1__1"


    // $ANTLR start "rule__ValParam__Group_1__1__Impl"
    // InternalFortXTrans.g:4355:1: rule__ValParam__Group_1__1__Impl : ( ( rule__ValParam__Group_1_1__0 )? ) ;
    public final void rule__ValParam__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4359:1: ( ( ( rule__ValParam__Group_1_1__0 )? ) )
            // InternalFortXTrans.g:4360:1: ( ( rule__ValParam__Group_1_1__0 )? )
            {
            // InternalFortXTrans.g:4360:1: ( ( rule__ValParam__Group_1_1__0 )? )
            // InternalFortXTrans.g:4361:2: ( rule__ValParam__Group_1_1__0 )?
            {
             before(grammarAccess.getValParamAccess().getGroup_1_1()); 
            // InternalFortXTrans.g:4362:2: ( rule__ValParam__Group_1_1__0 )?
            int alt47=2;
            int LA47_0 = input.LA(1);

            if ( (LA47_0==RULE_ID||LA47_0==49) ) {
                alt47=1;
            }
            switch (alt47) {
                case 1 :
                    // InternalFortXTrans.g:4362:3: rule__ValParam__Group_1_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ValParam__Group_1_1__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getValParamAccess().getGroup_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValParam__Group_1__1__Impl"


    // $ANTLR start "rule__ValParam__Group_1__2"
    // InternalFortXTrans.g:4370:1: rule__ValParam__Group_1__2 : rule__ValParam__Group_1__2__Impl ;
    public final void rule__ValParam__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4374:1: ( rule__ValParam__Group_1__2__Impl )
            // InternalFortXTrans.g:4375:2: rule__ValParam__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ValParam__Group_1__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValParam__Group_1__2"


    // $ANTLR start "rule__ValParam__Group_1__2__Impl"
    // InternalFortXTrans.g:4381:1: rule__ValParam__Group_1__2__Impl : ( ')' ) ;
    public final void rule__ValParam__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4385:1: ( ( ')' ) )
            // InternalFortXTrans.g:4386:1: ( ')' )
            {
            // InternalFortXTrans.g:4386:1: ( ')' )
            // InternalFortXTrans.g:4387:2: ')'
            {
             before(grammarAccess.getValParamAccess().getRightParenthesisKeyword_1_2()); 
            match(input,22,FOLLOW_2); 
             after(grammarAccess.getValParamAccess().getRightParenthesisKeyword_1_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValParam__Group_1__2__Impl"


    // $ANTLR start "rule__ValParam__Group_1_1__0"
    // InternalFortXTrans.g:4397:1: rule__ValParam__Group_1_1__0 : rule__ValParam__Group_1_1__0__Impl rule__ValParam__Group_1_1__1 ;
    public final void rule__ValParam__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4401:1: ( rule__ValParam__Group_1_1__0__Impl rule__ValParam__Group_1_1__1 )
            // InternalFortXTrans.g:4402:2: rule__ValParam__Group_1_1__0__Impl rule__ValParam__Group_1_1__1
            {
            pushFollow(FOLLOW_24);
            rule__ValParam__Group_1_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ValParam__Group_1_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValParam__Group_1_1__0"


    // $ANTLR start "rule__ValParam__Group_1_1__0__Impl"
    // InternalFortXTrans.g:4409:1: rule__ValParam__Group_1_1__0__Impl : ( ( rule__ValParam__ParamsAssignment_1_1_0 ) ) ;
    public final void rule__ValParam__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4413:1: ( ( ( rule__ValParam__ParamsAssignment_1_1_0 ) ) )
            // InternalFortXTrans.g:4414:1: ( ( rule__ValParam__ParamsAssignment_1_1_0 ) )
            {
            // InternalFortXTrans.g:4414:1: ( ( rule__ValParam__ParamsAssignment_1_1_0 ) )
            // InternalFortXTrans.g:4415:2: ( rule__ValParam__ParamsAssignment_1_1_0 )
            {
             before(grammarAccess.getValParamAccess().getParamsAssignment_1_1_0()); 
            // InternalFortXTrans.g:4416:2: ( rule__ValParam__ParamsAssignment_1_1_0 )
            // InternalFortXTrans.g:4416:3: rule__ValParam__ParamsAssignment_1_1_0
            {
            pushFollow(FOLLOW_2);
            rule__ValParam__ParamsAssignment_1_1_0();

            state._fsp--;


            }

             after(grammarAccess.getValParamAccess().getParamsAssignment_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValParam__Group_1_1__0__Impl"


    // $ANTLR start "rule__ValParam__Group_1_1__1"
    // InternalFortXTrans.g:4424:1: rule__ValParam__Group_1_1__1 : rule__ValParam__Group_1_1__1__Impl ;
    public final void rule__ValParam__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4428:1: ( rule__ValParam__Group_1_1__1__Impl )
            // InternalFortXTrans.g:4429:2: rule__ValParam__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ValParam__Group_1_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValParam__Group_1_1__1"


    // $ANTLR start "rule__ValParam__Group_1_1__1__Impl"
    // InternalFortXTrans.g:4435:1: rule__ValParam__Group_1_1__1__Impl : ( ( rule__ValParam__Group_1_1_1__0 )* ) ;
    public final void rule__ValParam__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4439:1: ( ( ( rule__ValParam__Group_1_1_1__0 )* ) )
            // InternalFortXTrans.g:4440:1: ( ( rule__ValParam__Group_1_1_1__0 )* )
            {
            // InternalFortXTrans.g:4440:1: ( ( rule__ValParam__Group_1_1_1__0 )* )
            // InternalFortXTrans.g:4441:2: ( rule__ValParam__Group_1_1_1__0 )*
            {
             before(grammarAccess.getValParamAccess().getGroup_1_1_1()); 
            // InternalFortXTrans.g:4442:2: ( rule__ValParam__Group_1_1_1__0 )*
            loop48:
            do {
                int alt48=2;
                int LA48_0 = input.LA(1);

                if ( (LA48_0==17) ) {
                    alt48=1;
                }


                switch (alt48) {
            	case 1 :
            	    // InternalFortXTrans.g:4442:3: rule__ValParam__Group_1_1_1__0
            	    {
            	    pushFollow(FOLLOW_15);
            	    rule__ValParam__Group_1_1_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop48;
                }
            } while (true);

             after(grammarAccess.getValParamAccess().getGroup_1_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValParam__Group_1_1__1__Impl"


    // $ANTLR start "rule__ValParam__Group_1_1_1__0"
    // InternalFortXTrans.g:4451:1: rule__ValParam__Group_1_1_1__0 : rule__ValParam__Group_1_1_1__0__Impl rule__ValParam__Group_1_1_1__1 ;
    public final void rule__ValParam__Group_1_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4455:1: ( rule__ValParam__Group_1_1_1__0__Impl rule__ValParam__Group_1_1_1__1 )
            // InternalFortXTrans.g:4456:2: rule__ValParam__Group_1_1_1__0__Impl rule__ValParam__Group_1_1_1__1
            {
            pushFollow(FOLLOW_25);
            rule__ValParam__Group_1_1_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ValParam__Group_1_1_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValParam__Group_1_1_1__0"


    // $ANTLR start "rule__ValParam__Group_1_1_1__0__Impl"
    // InternalFortXTrans.g:4463:1: rule__ValParam__Group_1_1_1__0__Impl : ( ',' ) ;
    public final void rule__ValParam__Group_1_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4467:1: ( ( ',' ) )
            // InternalFortXTrans.g:4468:1: ( ',' )
            {
            // InternalFortXTrans.g:4468:1: ( ',' )
            // InternalFortXTrans.g:4469:2: ','
            {
             before(grammarAccess.getValParamAccess().getCommaKeyword_1_1_1_0()); 
            match(input,17,FOLLOW_2); 
             after(grammarAccess.getValParamAccess().getCommaKeyword_1_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValParam__Group_1_1_1__0__Impl"


    // $ANTLR start "rule__ValParam__Group_1_1_1__1"
    // InternalFortXTrans.g:4478:1: rule__ValParam__Group_1_1_1__1 : rule__ValParam__Group_1_1_1__1__Impl ;
    public final void rule__ValParam__Group_1_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4482:1: ( rule__ValParam__Group_1_1_1__1__Impl )
            // InternalFortXTrans.g:4483:2: rule__ValParam__Group_1_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ValParam__Group_1_1_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValParam__Group_1_1_1__1"


    // $ANTLR start "rule__ValParam__Group_1_1_1__1__Impl"
    // InternalFortXTrans.g:4489:1: rule__ValParam__Group_1_1_1__1__Impl : ( ( rule__ValParam__ParamsAssignment_1_1_1_1 ) ) ;
    public final void rule__ValParam__Group_1_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4493:1: ( ( ( rule__ValParam__ParamsAssignment_1_1_1_1 ) ) )
            // InternalFortXTrans.g:4494:1: ( ( rule__ValParam__ParamsAssignment_1_1_1_1 ) )
            {
            // InternalFortXTrans.g:4494:1: ( ( rule__ValParam__ParamsAssignment_1_1_1_1 ) )
            // InternalFortXTrans.g:4495:2: ( rule__ValParam__ParamsAssignment_1_1_1_1 )
            {
             before(grammarAccess.getValParamAccess().getParamsAssignment_1_1_1_1()); 
            // InternalFortXTrans.g:4496:2: ( rule__ValParam__ParamsAssignment_1_1_1_1 )
            // InternalFortXTrans.g:4496:3: rule__ValParam__ParamsAssignment_1_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__ValParam__ParamsAssignment_1_1_1_1();

            state._fsp--;


            }

             after(grammarAccess.getValParamAccess().getParamsAssignment_1_1_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValParam__Group_1_1_1__1__Impl"


    // $ANTLR start "rule__Param__Group__0"
    // InternalFortXTrans.g:4505:1: rule__Param__Group__0 : rule__Param__Group__0__Impl rule__Param__Group__1 ;
    public final void rule__Param__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4509:1: ( rule__Param__Group__0__Impl rule__Param__Group__1 )
            // InternalFortXTrans.g:4510:2: rule__Param__Group__0__Impl rule__Param__Group__1
            {
            pushFollow(FOLLOW_26);
            rule__Param__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Param__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Param__Group__0"


    // $ANTLR start "rule__Param__Group__0__Impl"
    // InternalFortXTrans.g:4517:1: rule__Param__Group__0__Impl : ( ( rule__Param__BIdAssignment_0 ) ) ;
    public final void rule__Param__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4521:1: ( ( ( rule__Param__BIdAssignment_0 ) ) )
            // InternalFortXTrans.g:4522:1: ( ( rule__Param__BIdAssignment_0 ) )
            {
            // InternalFortXTrans.g:4522:1: ( ( rule__Param__BIdAssignment_0 ) )
            // InternalFortXTrans.g:4523:2: ( rule__Param__BIdAssignment_0 )
            {
             before(grammarAccess.getParamAccess().getBIdAssignment_0()); 
            // InternalFortXTrans.g:4524:2: ( rule__Param__BIdAssignment_0 )
            // InternalFortXTrans.g:4524:3: rule__Param__BIdAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__Param__BIdAssignment_0();

            state._fsp--;


            }

             after(grammarAccess.getParamAccess().getBIdAssignment_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Param__Group__0__Impl"


    // $ANTLR start "rule__Param__Group__1"
    // InternalFortXTrans.g:4532:1: rule__Param__Group__1 : rule__Param__Group__1__Impl ;
    public final void rule__Param__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4536:1: ( rule__Param__Group__1__Impl )
            // InternalFortXTrans.g:4537:2: rule__Param__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Param__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Param__Group__1"


    // $ANTLR start "rule__Param__Group__1__Impl"
    // InternalFortXTrans.g:4543:1: rule__Param__Group__1__Impl : ( ( rule__Param__IstypeAssignment_1 ) ) ;
    public final void rule__Param__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4547:1: ( ( ( rule__Param__IstypeAssignment_1 ) ) )
            // InternalFortXTrans.g:4548:1: ( ( rule__Param__IstypeAssignment_1 ) )
            {
            // InternalFortXTrans.g:4548:1: ( ( rule__Param__IstypeAssignment_1 ) )
            // InternalFortXTrans.g:4549:2: ( rule__Param__IstypeAssignment_1 )
            {
             before(grammarAccess.getParamAccess().getIstypeAssignment_1()); 
            // InternalFortXTrans.g:4550:2: ( rule__Param__IstypeAssignment_1 )
            // InternalFortXTrans.g:4550:3: rule__Param__IstypeAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__Param__IstypeAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getParamAccess().getIstypeAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Param__Group__1__Impl"


    // $ANTLR start "rule__RetType__Group_0__0"
    // InternalFortXTrans.g:4559:1: rule__RetType__Group_0__0 : rule__RetType__Group_0__0__Impl rule__RetType__Group_0__1 ;
    public final void rule__RetType__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4563:1: ( rule__RetType__Group_0__0__Impl rule__RetType__Group_0__1 )
            // InternalFortXTrans.g:4564:2: rule__RetType__Group_0__0__Impl rule__RetType__Group_0__1
            {
            pushFollow(FOLLOW_27);
            rule__RetType__Group_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__RetType__Group_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RetType__Group_0__0"


    // $ANTLR start "rule__RetType__Group_0__0__Impl"
    // InternalFortXTrans.g:4571:1: rule__RetType__Group_0__0__Impl : ( ':' ) ;
    public final void rule__RetType__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4575:1: ( ( ':' ) )
            // InternalFortXTrans.g:4576:1: ( ':' )
            {
            // InternalFortXTrans.g:4576:1: ( ':' )
            // InternalFortXTrans.g:4577:2: ':'
            {
             before(grammarAccess.getRetTypeAccess().getColonKeyword_0_0()); 
            match(input,23,FOLLOW_2); 
             after(grammarAccess.getRetTypeAccess().getColonKeyword_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RetType__Group_0__0__Impl"


    // $ANTLR start "rule__RetType__Group_0__1"
    // InternalFortXTrans.g:4586:1: rule__RetType__Group_0__1 : rule__RetType__Group_0__1__Impl rule__RetType__Group_0__2 ;
    public final void rule__RetType__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4590:1: ( rule__RetType__Group_0__1__Impl rule__RetType__Group_0__2 )
            // InternalFortXTrans.g:4591:2: rule__RetType__Group_0__1__Impl rule__RetType__Group_0__2
            {
            pushFollow(FOLLOW_28);
            rule__RetType__Group_0__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__RetType__Group_0__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RetType__Group_0__1"


    // $ANTLR start "rule__RetType__Group_0__1__Impl"
    // InternalFortXTrans.g:4598:1: rule__RetType__Group_0__1__Impl : ( ( rule__RetType__EmptyAssignment_0_1 ) ) ;
    public final void rule__RetType__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4602:1: ( ( ( rule__RetType__EmptyAssignment_0_1 ) ) )
            // InternalFortXTrans.g:4603:1: ( ( rule__RetType__EmptyAssignment_0_1 ) )
            {
            // InternalFortXTrans.g:4603:1: ( ( rule__RetType__EmptyAssignment_0_1 ) )
            // InternalFortXTrans.g:4604:2: ( rule__RetType__EmptyAssignment_0_1 )
            {
             before(grammarAccess.getRetTypeAccess().getEmptyAssignment_0_1()); 
            // InternalFortXTrans.g:4605:2: ( rule__RetType__EmptyAssignment_0_1 )
            // InternalFortXTrans.g:4605:3: rule__RetType__EmptyAssignment_0_1
            {
            pushFollow(FOLLOW_2);
            rule__RetType__EmptyAssignment_0_1();

            state._fsp--;


            }

             after(grammarAccess.getRetTypeAccess().getEmptyAssignment_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RetType__Group_0__1__Impl"


    // $ANTLR start "rule__RetType__Group_0__2"
    // InternalFortXTrans.g:4613:1: rule__RetType__Group_0__2 : rule__RetType__Group_0__2__Impl ;
    public final void rule__RetType__Group_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4617:1: ( rule__RetType__Group_0__2__Impl )
            // InternalFortXTrans.g:4618:2: rule__RetType__Group_0__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__RetType__Group_0__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RetType__Group_0__2"


    // $ANTLR start "rule__RetType__Group_0__2__Impl"
    // InternalFortXTrans.g:4624:1: rule__RetType__Group_0__2__Impl : ( ')' ) ;
    public final void rule__RetType__Group_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4628:1: ( ( ')' ) )
            // InternalFortXTrans.g:4629:1: ( ')' )
            {
            // InternalFortXTrans.g:4629:1: ( ')' )
            // InternalFortXTrans.g:4630:2: ')'
            {
             before(grammarAccess.getRetTypeAccess().getRightParenthesisKeyword_0_2()); 
            match(input,22,FOLLOW_2); 
             after(grammarAccess.getRetTypeAccess().getRightParenthesisKeyword_0_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RetType__Group_0__2__Impl"


    // $ANTLR start "rule__RetType__Group_1__0"
    // InternalFortXTrans.g:4640:1: rule__RetType__Group_1__0 : rule__RetType__Group_1__0__Impl rule__RetType__Group_1__1 ;
    public final void rule__RetType__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4644:1: ( rule__RetType__Group_1__0__Impl rule__RetType__Group_1__1 )
            // InternalFortXTrans.g:4645:2: rule__RetType__Group_1__0__Impl rule__RetType__Group_1__1
            {
            pushFollow(FOLLOW_5);
            rule__RetType__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__RetType__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RetType__Group_1__0"


    // $ANTLR start "rule__RetType__Group_1__0__Impl"
    // InternalFortXTrans.g:4652:1: rule__RetType__Group_1__0__Impl : ( ':' ) ;
    public final void rule__RetType__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4656:1: ( ( ':' ) )
            // InternalFortXTrans.g:4657:1: ( ':' )
            {
            // InternalFortXTrans.g:4657:1: ( ':' )
            // InternalFortXTrans.g:4658:2: ':'
            {
             before(grammarAccess.getRetTypeAccess().getColonKeyword_1_0()); 
            match(input,23,FOLLOW_2); 
             after(grammarAccess.getRetTypeAccess().getColonKeyword_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RetType__Group_1__0__Impl"


    // $ANTLR start "rule__RetType__Group_1__1"
    // InternalFortXTrans.g:4667:1: rule__RetType__Group_1__1 : rule__RetType__Group_1__1__Impl ;
    public final void rule__RetType__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4671:1: ( rule__RetType__Group_1__1__Impl )
            // InternalFortXTrans.g:4672:2: rule__RetType__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__RetType__Group_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RetType__Group_1__1"


    // $ANTLR start "rule__RetType__Group_1__1__Impl"
    // InternalFortXTrans.g:4678:1: rule__RetType__Group_1__1__Impl : ( ( rule__RetType__TypeAssignment_1_1 ) ) ;
    public final void rule__RetType__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4682:1: ( ( ( rule__RetType__TypeAssignment_1_1 ) ) )
            // InternalFortXTrans.g:4683:1: ( ( rule__RetType__TypeAssignment_1_1 ) )
            {
            // InternalFortXTrans.g:4683:1: ( ( rule__RetType__TypeAssignment_1_1 ) )
            // InternalFortXTrans.g:4684:2: ( rule__RetType__TypeAssignment_1_1 )
            {
             before(grammarAccess.getRetTypeAccess().getTypeAssignment_1_1()); 
            // InternalFortXTrans.g:4685:2: ( rule__RetType__TypeAssignment_1_1 )
            // InternalFortXTrans.g:4685:3: rule__RetType__TypeAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__RetType__TypeAssignment_1_1();

            state._fsp--;


            }

             after(grammarAccess.getRetTypeAccess().getTypeAssignment_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RetType__Group_1__1__Impl"


    // $ANTLR start "rule__TupleType__Group__0"
    // InternalFortXTrans.g:4694:1: rule__TupleType__Group__0 : rule__TupleType__Group__0__Impl rule__TupleType__Group__1 ;
    public final void rule__TupleType__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4698:1: ( rule__TupleType__Group__0__Impl rule__TupleType__Group__1 )
            // InternalFortXTrans.g:4699:2: rule__TupleType__Group__0__Impl rule__TupleType__Group__1
            {
            pushFollow(FOLLOW_5);
            rule__TupleType__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__TupleType__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TupleType__Group__0"


    // $ANTLR start "rule__TupleType__Group__0__Impl"
    // InternalFortXTrans.g:4706:1: rule__TupleType__Group__0__Impl : ( '(' ) ;
    public final void rule__TupleType__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4710:1: ( ( '(' ) )
            // InternalFortXTrans.g:4711:1: ( '(' )
            {
            // InternalFortXTrans.g:4711:1: ( '(' )
            // InternalFortXTrans.g:4712:2: '('
            {
             before(grammarAccess.getTupleTypeAccess().getLeftParenthesisKeyword_0()); 
            match(input,21,FOLLOW_2); 
             after(grammarAccess.getTupleTypeAccess().getLeftParenthesisKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TupleType__Group__0__Impl"


    // $ANTLR start "rule__TupleType__Group__1"
    // InternalFortXTrans.g:4721:1: rule__TupleType__Group__1 : rule__TupleType__Group__1__Impl rule__TupleType__Group__2 ;
    public final void rule__TupleType__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4725:1: ( rule__TupleType__Group__1__Impl rule__TupleType__Group__2 )
            // InternalFortXTrans.g:4726:2: rule__TupleType__Group__1__Impl rule__TupleType__Group__2
            {
            pushFollow(FOLLOW_22);
            rule__TupleType__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__TupleType__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TupleType__Group__1"


    // $ANTLR start "rule__TupleType__Group__1__Impl"
    // InternalFortXTrans.g:4733:1: rule__TupleType__Group__1__Impl : ( ( rule__TupleType__TypesAssignment_1 ) ) ;
    public final void rule__TupleType__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4737:1: ( ( ( rule__TupleType__TypesAssignment_1 ) ) )
            // InternalFortXTrans.g:4738:1: ( ( rule__TupleType__TypesAssignment_1 ) )
            {
            // InternalFortXTrans.g:4738:1: ( ( rule__TupleType__TypesAssignment_1 ) )
            // InternalFortXTrans.g:4739:2: ( rule__TupleType__TypesAssignment_1 )
            {
             before(grammarAccess.getTupleTypeAccess().getTypesAssignment_1()); 
            // InternalFortXTrans.g:4740:2: ( rule__TupleType__TypesAssignment_1 )
            // InternalFortXTrans.g:4740:3: rule__TupleType__TypesAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__TupleType__TypesAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getTupleTypeAccess().getTypesAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TupleType__Group__1__Impl"


    // $ANTLR start "rule__TupleType__Group__2"
    // InternalFortXTrans.g:4748:1: rule__TupleType__Group__2 : rule__TupleType__Group__2__Impl rule__TupleType__Group__3 ;
    public final void rule__TupleType__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4752:1: ( rule__TupleType__Group__2__Impl rule__TupleType__Group__3 )
            // InternalFortXTrans.g:4753:2: rule__TupleType__Group__2__Impl rule__TupleType__Group__3
            {
            pushFollow(FOLLOW_22);
            rule__TupleType__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__TupleType__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TupleType__Group__2"


    // $ANTLR start "rule__TupleType__Group__2__Impl"
    // InternalFortXTrans.g:4760:1: rule__TupleType__Group__2__Impl : ( ( rule__TupleType__Group_2__0 )* ) ;
    public final void rule__TupleType__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4764:1: ( ( ( rule__TupleType__Group_2__0 )* ) )
            // InternalFortXTrans.g:4765:1: ( ( rule__TupleType__Group_2__0 )* )
            {
            // InternalFortXTrans.g:4765:1: ( ( rule__TupleType__Group_2__0 )* )
            // InternalFortXTrans.g:4766:2: ( rule__TupleType__Group_2__0 )*
            {
             before(grammarAccess.getTupleTypeAccess().getGroup_2()); 
            // InternalFortXTrans.g:4767:2: ( rule__TupleType__Group_2__0 )*
            loop49:
            do {
                int alt49=2;
                int LA49_0 = input.LA(1);

                if ( (LA49_0==17) ) {
                    alt49=1;
                }


                switch (alt49) {
            	case 1 :
            	    // InternalFortXTrans.g:4767:3: rule__TupleType__Group_2__0
            	    {
            	    pushFollow(FOLLOW_15);
            	    rule__TupleType__Group_2__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop49;
                }
            } while (true);

             after(grammarAccess.getTupleTypeAccess().getGroup_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TupleType__Group__2__Impl"


    // $ANTLR start "rule__TupleType__Group__3"
    // InternalFortXTrans.g:4775:1: rule__TupleType__Group__3 : rule__TupleType__Group__3__Impl ;
    public final void rule__TupleType__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4779:1: ( rule__TupleType__Group__3__Impl )
            // InternalFortXTrans.g:4780:2: rule__TupleType__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__TupleType__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TupleType__Group__3"


    // $ANTLR start "rule__TupleType__Group__3__Impl"
    // InternalFortXTrans.g:4786:1: rule__TupleType__Group__3__Impl : ( ')' ) ;
    public final void rule__TupleType__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4790:1: ( ( ')' ) )
            // InternalFortXTrans.g:4791:1: ( ')' )
            {
            // InternalFortXTrans.g:4791:1: ( ')' )
            // InternalFortXTrans.g:4792:2: ')'
            {
             before(grammarAccess.getTupleTypeAccess().getRightParenthesisKeyword_3()); 
            match(input,22,FOLLOW_2); 
             after(grammarAccess.getTupleTypeAccess().getRightParenthesisKeyword_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TupleType__Group__3__Impl"


    // $ANTLR start "rule__TupleType__Group_2__0"
    // InternalFortXTrans.g:4802:1: rule__TupleType__Group_2__0 : rule__TupleType__Group_2__0__Impl rule__TupleType__Group_2__1 ;
    public final void rule__TupleType__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4806:1: ( rule__TupleType__Group_2__0__Impl rule__TupleType__Group_2__1 )
            // InternalFortXTrans.g:4807:2: rule__TupleType__Group_2__0__Impl rule__TupleType__Group_2__1
            {
            pushFollow(FOLLOW_5);
            rule__TupleType__Group_2__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__TupleType__Group_2__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TupleType__Group_2__0"


    // $ANTLR start "rule__TupleType__Group_2__0__Impl"
    // InternalFortXTrans.g:4814:1: rule__TupleType__Group_2__0__Impl : ( ',' ) ;
    public final void rule__TupleType__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4818:1: ( ( ',' ) )
            // InternalFortXTrans.g:4819:1: ( ',' )
            {
            // InternalFortXTrans.g:4819:1: ( ',' )
            // InternalFortXTrans.g:4820:2: ','
            {
             before(grammarAccess.getTupleTypeAccess().getCommaKeyword_2_0()); 
            match(input,17,FOLLOW_2); 
             after(grammarAccess.getTupleTypeAccess().getCommaKeyword_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TupleType__Group_2__0__Impl"


    // $ANTLR start "rule__TupleType__Group_2__1"
    // InternalFortXTrans.g:4829:1: rule__TupleType__Group_2__1 : rule__TupleType__Group_2__1__Impl ;
    public final void rule__TupleType__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4833:1: ( rule__TupleType__Group_2__1__Impl )
            // InternalFortXTrans.g:4834:2: rule__TupleType__Group_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__TupleType__Group_2__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TupleType__Group_2__1"


    // $ANTLR start "rule__TupleType__Group_2__1__Impl"
    // InternalFortXTrans.g:4840:1: rule__TupleType__Group_2__1__Impl : ( ( rule__TupleType__TypesAssignment_2_1 ) ) ;
    public final void rule__TupleType__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4844:1: ( ( ( rule__TupleType__TypesAssignment_2_1 ) ) )
            // InternalFortXTrans.g:4845:1: ( ( rule__TupleType__TypesAssignment_2_1 ) )
            {
            // InternalFortXTrans.g:4845:1: ( ( rule__TupleType__TypesAssignment_2_1 ) )
            // InternalFortXTrans.g:4846:2: ( rule__TupleType__TypesAssignment_2_1 )
            {
             before(grammarAccess.getTupleTypeAccess().getTypesAssignment_2_1()); 
            // InternalFortXTrans.g:4847:2: ( rule__TupleType__TypesAssignment_2_1 )
            // InternalFortXTrans.g:4847:3: rule__TupleType__TypesAssignment_2_1
            {
            pushFollow(FOLLOW_2);
            rule__TupleType__TypesAssignment_2_1();

            state._fsp--;


            }

             after(grammarAccess.getTupleTypeAccess().getTypesAssignment_2_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TupleType__Group_2__1__Impl"


    // $ANTLR start "rule__FnDecl__Group__0"
    // InternalFortXTrans.g:4856:1: rule__FnDecl__Group__0 : rule__FnDecl__Group__0__Impl rule__FnDecl__Group__1 ;
    public final void rule__FnDecl__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4860:1: ( rule__FnDecl__Group__0__Impl rule__FnDecl__Group__1 )
            // InternalFortXTrans.g:4861:2: rule__FnDecl__Group__0__Impl rule__FnDecl__Group__1
            {
            pushFollow(FOLLOW_29);
            rule__FnDecl__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__FnDecl__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FnDecl__Group__0"


    // $ANTLR start "rule__FnDecl__Group__0__Impl"
    // InternalFortXTrans.g:4868:1: rule__FnDecl__Group__0__Impl : ( ( rule__FnDecl__ModsAssignment_0 )? ) ;
    public final void rule__FnDecl__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4872:1: ( ( ( rule__FnDecl__ModsAssignment_0 )? ) )
            // InternalFortXTrans.g:4873:1: ( ( rule__FnDecl__ModsAssignment_0 )? )
            {
            // InternalFortXTrans.g:4873:1: ( ( rule__FnDecl__ModsAssignment_0 )? )
            // InternalFortXTrans.g:4874:2: ( rule__FnDecl__ModsAssignment_0 )?
            {
             before(grammarAccess.getFnDeclAccess().getModsAssignment_0()); 
            // InternalFortXTrans.g:4875:2: ( rule__FnDecl__ModsAssignment_0 )?
            int alt50=2;
            int LA50_0 = input.LA(1);

            if ( ((LA50_0>=39 && LA50_0<=42)) ) {
                alt50=1;
            }
            switch (alt50) {
                case 1 :
                    // InternalFortXTrans.g:4875:3: rule__FnDecl__ModsAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__FnDecl__ModsAssignment_0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getFnDeclAccess().getModsAssignment_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FnDecl__Group__0__Impl"


    // $ANTLR start "rule__FnDecl__Group__1"
    // InternalFortXTrans.g:4883:1: rule__FnDecl__Group__1 : rule__FnDecl__Group__1__Impl rule__FnDecl__Group__2 ;
    public final void rule__FnDecl__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4887:1: ( rule__FnDecl__Group__1__Impl rule__FnDecl__Group__2 )
            // InternalFortXTrans.g:4888:2: rule__FnDecl__Group__1__Impl rule__FnDecl__Group__2
            {
            pushFollow(FOLLOW_30);
            rule__FnDecl__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__FnDecl__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FnDecl__Group__1"


    // $ANTLR start "rule__FnDecl__Group__1__Impl"
    // InternalFortXTrans.g:4895:1: rule__FnDecl__Group__1__Impl : ( ( rule__FnDecl__NameAssignment_1 ) ) ;
    public final void rule__FnDecl__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4899:1: ( ( ( rule__FnDecl__NameAssignment_1 ) ) )
            // InternalFortXTrans.g:4900:1: ( ( rule__FnDecl__NameAssignment_1 ) )
            {
            // InternalFortXTrans.g:4900:1: ( ( rule__FnDecl__NameAssignment_1 ) )
            // InternalFortXTrans.g:4901:2: ( rule__FnDecl__NameAssignment_1 )
            {
             before(grammarAccess.getFnDeclAccess().getNameAssignment_1()); 
            // InternalFortXTrans.g:4902:2: ( rule__FnDecl__NameAssignment_1 )
            // InternalFortXTrans.g:4902:3: rule__FnDecl__NameAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__FnDecl__NameAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getFnDeclAccess().getNameAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FnDecl__Group__1__Impl"


    // $ANTLR start "rule__FnDecl__Group__2"
    // InternalFortXTrans.g:4910:1: rule__FnDecl__Group__2 : rule__FnDecl__Group__2__Impl rule__FnDecl__Group__3 ;
    public final void rule__FnDecl__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4914:1: ( rule__FnDecl__Group__2__Impl rule__FnDecl__Group__3 )
            // InternalFortXTrans.g:4915:2: rule__FnDecl__Group__2__Impl rule__FnDecl__Group__3
            {
            pushFollow(FOLLOW_31);
            rule__FnDecl__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__FnDecl__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FnDecl__Group__2"


    // $ANTLR start "rule__FnDecl__Group__2__Impl"
    // InternalFortXTrans.g:4922:1: rule__FnDecl__Group__2__Impl : ( ( rule__FnDecl__ParamsAssignment_2 ) ) ;
    public final void rule__FnDecl__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4926:1: ( ( ( rule__FnDecl__ParamsAssignment_2 ) ) )
            // InternalFortXTrans.g:4927:1: ( ( rule__FnDecl__ParamsAssignment_2 ) )
            {
            // InternalFortXTrans.g:4927:1: ( ( rule__FnDecl__ParamsAssignment_2 ) )
            // InternalFortXTrans.g:4928:2: ( rule__FnDecl__ParamsAssignment_2 )
            {
             before(grammarAccess.getFnDeclAccess().getParamsAssignment_2()); 
            // InternalFortXTrans.g:4929:2: ( rule__FnDecl__ParamsAssignment_2 )
            // InternalFortXTrans.g:4929:3: rule__FnDecl__ParamsAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__FnDecl__ParamsAssignment_2();

            state._fsp--;


            }

             after(grammarAccess.getFnDeclAccess().getParamsAssignment_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FnDecl__Group__2__Impl"


    // $ANTLR start "rule__FnDecl__Group__3"
    // InternalFortXTrans.g:4937:1: rule__FnDecl__Group__3 : rule__FnDecl__Group__3__Impl rule__FnDecl__Group__4 ;
    public final void rule__FnDecl__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4941:1: ( rule__FnDecl__Group__3__Impl rule__FnDecl__Group__4 )
            // InternalFortXTrans.g:4942:2: rule__FnDecl__Group__3__Impl rule__FnDecl__Group__4
            {
            pushFollow(FOLLOW_31);
            rule__FnDecl__Group__3__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__FnDecl__Group__4();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FnDecl__Group__3"


    // $ANTLR start "rule__FnDecl__Group__3__Impl"
    // InternalFortXTrans.g:4949:1: rule__FnDecl__Group__3__Impl : ( ( rule__FnDecl__RetValAssignment_3 )? ) ;
    public final void rule__FnDecl__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4953:1: ( ( ( rule__FnDecl__RetValAssignment_3 )? ) )
            // InternalFortXTrans.g:4954:1: ( ( rule__FnDecl__RetValAssignment_3 )? )
            {
            // InternalFortXTrans.g:4954:1: ( ( rule__FnDecl__RetValAssignment_3 )? )
            // InternalFortXTrans.g:4955:2: ( rule__FnDecl__RetValAssignment_3 )?
            {
             before(grammarAccess.getFnDeclAccess().getRetValAssignment_3()); 
            // InternalFortXTrans.g:4956:2: ( rule__FnDecl__RetValAssignment_3 )?
            int alt51=2;
            int LA51_0 = input.LA(1);

            if ( (LA51_0==23) ) {
                alt51=1;
            }
            switch (alt51) {
                case 1 :
                    // InternalFortXTrans.g:4956:3: rule__FnDecl__RetValAssignment_3
                    {
                    pushFollow(FOLLOW_2);
                    rule__FnDecl__RetValAssignment_3();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getFnDeclAccess().getRetValAssignment_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FnDecl__Group__3__Impl"


    // $ANTLR start "rule__FnDecl__Group__4"
    // InternalFortXTrans.g:4964:1: rule__FnDecl__Group__4 : rule__FnDecl__Group__4__Impl ;
    public final void rule__FnDecl__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4968:1: ( rule__FnDecl__Group__4__Impl )
            // InternalFortXTrans.g:4969:2: rule__FnDecl__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FnDecl__Group__4__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FnDecl__Group__4"


    // $ANTLR start "rule__FnDecl__Group__4__Impl"
    // InternalFortXTrans.g:4975:1: rule__FnDecl__Group__4__Impl : ( ( rule__FnDecl__Group_4__0 )? ) ;
    public final void rule__FnDecl__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4979:1: ( ( ( rule__FnDecl__Group_4__0 )? ) )
            // InternalFortXTrans.g:4980:1: ( ( rule__FnDecl__Group_4__0 )? )
            {
            // InternalFortXTrans.g:4980:1: ( ( rule__FnDecl__Group_4__0 )? )
            // InternalFortXTrans.g:4981:2: ( rule__FnDecl__Group_4__0 )?
            {
             before(grammarAccess.getFnDeclAccess().getGroup_4()); 
            // InternalFortXTrans.g:4982:2: ( rule__FnDecl__Group_4__0 )?
            int alt52=2;
            int LA52_0 = input.LA(1);

            if ( (LA52_0==35) ) {
                alt52=1;
            }
            switch (alt52) {
                case 1 :
                    // InternalFortXTrans.g:4982:3: rule__FnDecl__Group_4__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__FnDecl__Group_4__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getFnDeclAccess().getGroup_4()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FnDecl__Group__4__Impl"


    // $ANTLR start "rule__FnDecl__Group_4__0"
    // InternalFortXTrans.g:4991:1: rule__FnDecl__Group_4__0 : rule__FnDecl__Group_4__0__Impl rule__FnDecl__Group_4__1 ;
    public final void rule__FnDecl__Group_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4995:1: ( rule__FnDecl__Group_4__0__Impl rule__FnDecl__Group_4__1 )
            // InternalFortXTrans.g:4996:2: rule__FnDecl__Group_4__0__Impl rule__FnDecl__Group_4__1
            {
            pushFollow(FOLLOW_32);
            rule__FnDecl__Group_4__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__FnDecl__Group_4__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FnDecl__Group_4__0"


    // $ANTLR start "rule__FnDecl__Group_4__0__Impl"
    // InternalFortXTrans.g:5003:1: rule__FnDecl__Group_4__0__Impl : ( ( rule__FnDecl__BodyAssignment_4_0 ) ) ;
    public final void rule__FnDecl__Group_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5007:1: ( ( ( rule__FnDecl__BodyAssignment_4_0 ) ) )
            // InternalFortXTrans.g:5008:1: ( ( rule__FnDecl__BodyAssignment_4_0 ) )
            {
            // InternalFortXTrans.g:5008:1: ( ( rule__FnDecl__BodyAssignment_4_0 ) )
            // InternalFortXTrans.g:5009:2: ( rule__FnDecl__BodyAssignment_4_0 )
            {
             before(grammarAccess.getFnDeclAccess().getBodyAssignment_4_0()); 
            // InternalFortXTrans.g:5010:2: ( rule__FnDecl__BodyAssignment_4_0 )
            // InternalFortXTrans.g:5010:3: rule__FnDecl__BodyAssignment_4_0
            {
            pushFollow(FOLLOW_2);
            rule__FnDecl__BodyAssignment_4_0();

            state._fsp--;


            }

             after(grammarAccess.getFnDeclAccess().getBodyAssignment_4_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FnDecl__Group_4__0__Impl"


    // $ANTLR start "rule__FnDecl__Group_4__1"
    // InternalFortXTrans.g:5018:1: rule__FnDecl__Group_4__1 : rule__FnDecl__Group_4__1__Impl ;
    public final void rule__FnDecl__Group_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5022:1: ( rule__FnDecl__Group_4__1__Impl )
            // InternalFortXTrans.g:5023:2: rule__FnDecl__Group_4__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FnDecl__Group_4__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FnDecl__Group_4__1"


    // $ANTLR start "rule__FnDecl__Group_4__1__Impl"
    // InternalFortXTrans.g:5029:1: rule__FnDecl__Group_4__1__Impl : ( ( rule__FnDecl__FnItselfAssignment_4_1 ) ) ;
    public final void rule__FnDecl__Group_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5033:1: ( ( ( rule__FnDecl__FnItselfAssignment_4_1 ) ) )
            // InternalFortXTrans.g:5034:1: ( ( rule__FnDecl__FnItselfAssignment_4_1 ) )
            {
            // InternalFortXTrans.g:5034:1: ( ( rule__FnDecl__FnItselfAssignment_4_1 ) )
            // InternalFortXTrans.g:5035:2: ( rule__FnDecl__FnItselfAssignment_4_1 )
            {
             before(grammarAccess.getFnDeclAccess().getFnItselfAssignment_4_1()); 
            // InternalFortXTrans.g:5036:2: ( rule__FnDecl__FnItselfAssignment_4_1 )
            // InternalFortXTrans.g:5036:3: rule__FnDecl__FnItselfAssignment_4_1
            {
            pushFollow(FOLLOW_2);
            rule__FnDecl__FnItselfAssignment_4_1();

            state._fsp--;


            }

             after(grammarAccess.getFnDeclAccess().getFnItselfAssignment_4_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FnDecl__Group_4__1__Impl"


    // $ANTLR start "rule__Stmnt__Group_1__0"
    // InternalFortXTrans.g:5045:1: rule__Stmnt__Group_1__0 : rule__Stmnt__Group_1__0__Impl rule__Stmnt__Group_1__1 ;
    public final void rule__Stmnt__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5049:1: ( rule__Stmnt__Group_1__0__Impl rule__Stmnt__Group_1__1 )
            // InternalFortXTrans.g:5050:2: rule__Stmnt__Group_1__0__Impl rule__Stmnt__Group_1__1
            {
            pushFollow(FOLLOW_33);
            rule__Stmnt__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Stmnt__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Stmnt__Group_1__0"


    // $ANTLR start "rule__Stmnt__Group_1__0__Impl"
    // InternalFortXTrans.g:5057:1: rule__Stmnt__Group_1__0__Impl : ( ( rule__Stmnt__BrackAssignment_1_0 ) ) ;
    public final void rule__Stmnt__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5061:1: ( ( ( rule__Stmnt__BrackAssignment_1_0 ) ) )
            // InternalFortXTrans.g:5062:1: ( ( rule__Stmnt__BrackAssignment_1_0 ) )
            {
            // InternalFortXTrans.g:5062:1: ( ( rule__Stmnt__BrackAssignment_1_0 ) )
            // InternalFortXTrans.g:5063:2: ( rule__Stmnt__BrackAssignment_1_0 )
            {
             before(grammarAccess.getStmntAccess().getBrackAssignment_1_0()); 
            // InternalFortXTrans.g:5064:2: ( rule__Stmnt__BrackAssignment_1_0 )
            // InternalFortXTrans.g:5064:3: rule__Stmnt__BrackAssignment_1_0
            {
            pushFollow(FOLLOW_2);
            rule__Stmnt__BrackAssignment_1_0();

            state._fsp--;


            }

             after(grammarAccess.getStmntAccess().getBrackAssignment_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Stmnt__Group_1__0__Impl"


    // $ANTLR start "rule__Stmnt__Group_1__1"
    // InternalFortXTrans.g:5072:1: rule__Stmnt__Group_1__1 : rule__Stmnt__Group_1__1__Impl rule__Stmnt__Group_1__2 ;
    public final void rule__Stmnt__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5076:1: ( rule__Stmnt__Group_1__1__Impl rule__Stmnt__Group_1__2 )
            // InternalFortXTrans.g:5077:2: rule__Stmnt__Group_1__1__Impl rule__Stmnt__Group_1__2
            {
            pushFollow(FOLLOW_28);
            rule__Stmnt__Group_1__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Stmnt__Group_1__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Stmnt__Group_1__1"


    // $ANTLR start "rule__Stmnt__Group_1__1__Impl"
    // InternalFortXTrans.g:5084:1: rule__Stmnt__Group_1__1__Impl : ( ( rule__Stmnt__DelimListAssignment_1_1 ) ) ;
    public final void rule__Stmnt__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5088:1: ( ( ( rule__Stmnt__DelimListAssignment_1_1 ) ) )
            // InternalFortXTrans.g:5089:1: ( ( rule__Stmnt__DelimListAssignment_1_1 ) )
            {
            // InternalFortXTrans.g:5089:1: ( ( rule__Stmnt__DelimListAssignment_1_1 ) )
            // InternalFortXTrans.g:5090:2: ( rule__Stmnt__DelimListAssignment_1_1 )
            {
             before(grammarAccess.getStmntAccess().getDelimListAssignment_1_1()); 
            // InternalFortXTrans.g:5091:2: ( rule__Stmnt__DelimListAssignment_1_1 )
            // InternalFortXTrans.g:5091:3: rule__Stmnt__DelimListAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Stmnt__DelimListAssignment_1_1();

            state._fsp--;


            }

             after(grammarAccess.getStmntAccess().getDelimListAssignment_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Stmnt__Group_1__1__Impl"


    // $ANTLR start "rule__Stmnt__Group_1__2"
    // InternalFortXTrans.g:5099:1: rule__Stmnt__Group_1__2 : rule__Stmnt__Group_1__2__Impl ;
    public final void rule__Stmnt__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5103:1: ( rule__Stmnt__Group_1__2__Impl )
            // InternalFortXTrans.g:5104:2: rule__Stmnt__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Stmnt__Group_1__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Stmnt__Group_1__2"


    // $ANTLR start "rule__Stmnt__Group_1__2__Impl"
    // InternalFortXTrans.g:5110:1: rule__Stmnt__Group_1__2__Impl : ( ')' ) ;
    public final void rule__Stmnt__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5114:1: ( ( ')' ) )
            // InternalFortXTrans.g:5115:1: ( ')' )
            {
            // InternalFortXTrans.g:5115:1: ( ')' )
            // InternalFortXTrans.g:5116:2: ')'
            {
             before(grammarAccess.getStmntAccess().getRightParenthesisKeyword_1_2()); 
            match(input,22,FOLLOW_2); 
             after(grammarAccess.getStmntAccess().getRightParenthesisKeyword_1_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Stmnt__Group_1__2__Impl"


    // $ANTLR start "rule__DelimitedExprList__Group__0"
    // InternalFortXTrans.g:5126:1: rule__DelimitedExprList__Group__0 : rule__DelimitedExprList__Group__0__Impl rule__DelimitedExprList__Group__1 ;
    public final void rule__DelimitedExprList__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5130:1: ( rule__DelimitedExprList__Group__0__Impl rule__DelimitedExprList__Group__1 )
            // InternalFortXTrans.g:5131:2: rule__DelimitedExprList__Group__0__Impl rule__DelimitedExprList__Group__1
            {
            pushFollow(FOLLOW_24);
            rule__DelimitedExprList__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DelimitedExprList__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExprList__Group__0"


    // $ANTLR start "rule__DelimitedExprList__Group__0__Impl"
    // InternalFortXTrans.g:5138:1: rule__DelimitedExprList__Group__0__Impl : ( ( rule__DelimitedExprList__DelimAssignment_0 ) ) ;
    public final void rule__DelimitedExprList__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5142:1: ( ( ( rule__DelimitedExprList__DelimAssignment_0 ) ) )
            // InternalFortXTrans.g:5143:1: ( ( rule__DelimitedExprList__DelimAssignment_0 ) )
            {
            // InternalFortXTrans.g:5143:1: ( ( rule__DelimitedExprList__DelimAssignment_0 ) )
            // InternalFortXTrans.g:5144:2: ( rule__DelimitedExprList__DelimAssignment_0 )
            {
             before(grammarAccess.getDelimitedExprListAccess().getDelimAssignment_0()); 
            // InternalFortXTrans.g:5145:2: ( rule__DelimitedExprList__DelimAssignment_0 )
            // InternalFortXTrans.g:5145:3: rule__DelimitedExprList__DelimAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__DelimitedExprList__DelimAssignment_0();

            state._fsp--;


            }

             after(grammarAccess.getDelimitedExprListAccess().getDelimAssignment_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExprList__Group__0__Impl"


    // $ANTLR start "rule__DelimitedExprList__Group__1"
    // InternalFortXTrans.g:5153:1: rule__DelimitedExprList__Group__1 : rule__DelimitedExprList__Group__1__Impl ;
    public final void rule__DelimitedExprList__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5157:1: ( rule__DelimitedExprList__Group__1__Impl )
            // InternalFortXTrans.g:5158:2: rule__DelimitedExprList__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__DelimitedExprList__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExprList__Group__1"


    // $ANTLR start "rule__DelimitedExprList__Group__1__Impl"
    // InternalFortXTrans.g:5164:1: rule__DelimitedExprList__Group__1__Impl : ( ( ( rule__DelimitedExprList__Group_1__0 ) ) ( ( rule__DelimitedExprList__Group_1__0 )* ) ) ;
    public final void rule__DelimitedExprList__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5168:1: ( ( ( ( rule__DelimitedExprList__Group_1__0 ) ) ( ( rule__DelimitedExprList__Group_1__0 )* ) ) )
            // InternalFortXTrans.g:5169:1: ( ( ( rule__DelimitedExprList__Group_1__0 ) ) ( ( rule__DelimitedExprList__Group_1__0 )* ) )
            {
            // InternalFortXTrans.g:5169:1: ( ( ( rule__DelimitedExprList__Group_1__0 ) ) ( ( rule__DelimitedExprList__Group_1__0 )* ) )
            // InternalFortXTrans.g:5170:2: ( ( rule__DelimitedExprList__Group_1__0 ) ) ( ( rule__DelimitedExprList__Group_1__0 )* )
            {
            // InternalFortXTrans.g:5170:2: ( ( rule__DelimitedExprList__Group_1__0 ) )
            // InternalFortXTrans.g:5171:3: ( rule__DelimitedExprList__Group_1__0 )
            {
             before(grammarAccess.getDelimitedExprListAccess().getGroup_1()); 
            // InternalFortXTrans.g:5172:3: ( rule__DelimitedExprList__Group_1__0 )
            // InternalFortXTrans.g:5172:4: rule__DelimitedExprList__Group_1__0
            {
            pushFollow(FOLLOW_15);
            rule__DelimitedExprList__Group_1__0();

            state._fsp--;


            }

             after(grammarAccess.getDelimitedExprListAccess().getGroup_1()); 

            }

            // InternalFortXTrans.g:5175:2: ( ( rule__DelimitedExprList__Group_1__0 )* )
            // InternalFortXTrans.g:5176:3: ( rule__DelimitedExprList__Group_1__0 )*
            {
             before(grammarAccess.getDelimitedExprListAccess().getGroup_1()); 
            // InternalFortXTrans.g:5177:3: ( rule__DelimitedExprList__Group_1__0 )*
            loop53:
            do {
                int alt53=2;
                int LA53_0 = input.LA(1);

                if ( (LA53_0==17) ) {
                    alt53=1;
                }


                switch (alt53) {
            	case 1 :
            	    // InternalFortXTrans.g:5177:4: rule__DelimitedExprList__Group_1__0
            	    {
            	    pushFollow(FOLLOW_15);
            	    rule__DelimitedExprList__Group_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop53;
                }
            } while (true);

             after(grammarAccess.getDelimitedExprListAccess().getGroup_1()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExprList__Group__1__Impl"


    // $ANTLR start "rule__DelimitedExprList__Group_1__0"
    // InternalFortXTrans.g:5187:1: rule__DelimitedExprList__Group_1__0 : rule__DelimitedExprList__Group_1__0__Impl rule__DelimitedExprList__Group_1__1 ;
    public final void rule__DelimitedExprList__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5191:1: ( rule__DelimitedExprList__Group_1__0__Impl rule__DelimitedExprList__Group_1__1 )
            // InternalFortXTrans.g:5192:2: rule__DelimitedExprList__Group_1__0__Impl rule__DelimitedExprList__Group_1__1
            {
            pushFollow(FOLLOW_33);
            rule__DelimitedExprList__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DelimitedExprList__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExprList__Group_1__0"


    // $ANTLR start "rule__DelimitedExprList__Group_1__0__Impl"
    // InternalFortXTrans.g:5199:1: rule__DelimitedExprList__Group_1__0__Impl : ( ',' ) ;
    public final void rule__DelimitedExprList__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5203:1: ( ( ',' ) )
            // InternalFortXTrans.g:5204:1: ( ',' )
            {
            // InternalFortXTrans.g:5204:1: ( ',' )
            // InternalFortXTrans.g:5205:2: ','
            {
             before(grammarAccess.getDelimitedExprListAccess().getCommaKeyword_1_0()); 
            match(input,17,FOLLOW_2); 
             after(grammarAccess.getDelimitedExprListAccess().getCommaKeyword_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExprList__Group_1__0__Impl"


    // $ANTLR start "rule__DelimitedExprList__Group_1__1"
    // InternalFortXTrans.g:5214:1: rule__DelimitedExprList__Group_1__1 : rule__DelimitedExprList__Group_1__1__Impl ;
    public final void rule__DelimitedExprList__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5218:1: ( rule__DelimitedExprList__Group_1__1__Impl )
            // InternalFortXTrans.g:5219:2: rule__DelimitedExprList__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__DelimitedExprList__Group_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExprList__Group_1__1"


    // $ANTLR start "rule__DelimitedExprList__Group_1__1__Impl"
    // InternalFortXTrans.g:5225:1: rule__DelimitedExprList__Group_1__1__Impl : ( ( rule__DelimitedExprList__DelimAssignment_1_1 ) ) ;
    public final void rule__DelimitedExprList__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5229:1: ( ( ( rule__DelimitedExprList__DelimAssignment_1_1 ) ) )
            // InternalFortXTrans.g:5230:1: ( ( rule__DelimitedExprList__DelimAssignment_1_1 ) )
            {
            // InternalFortXTrans.g:5230:1: ( ( rule__DelimitedExprList__DelimAssignment_1_1 ) )
            // InternalFortXTrans.g:5231:2: ( rule__DelimitedExprList__DelimAssignment_1_1 )
            {
             before(grammarAccess.getDelimitedExprListAccess().getDelimAssignment_1_1()); 
            // InternalFortXTrans.g:5232:2: ( rule__DelimitedExprList__DelimAssignment_1_1 )
            // InternalFortXTrans.g:5232:3: rule__DelimitedExprList__DelimAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__DelimitedExprList__DelimAssignment_1_1();

            state._fsp--;


            }

             after(grammarAccess.getDelimitedExprListAccess().getDelimAssignment_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExprList__Group_1__1__Impl"


    // $ANTLR start "rule__Expr__Group__0"
    // InternalFortXTrans.g:5241:1: rule__Expr__Group__0 : rule__Expr__Group__0__Impl rule__Expr__Group__1 ;
    public final void rule__Expr__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5245:1: ( rule__Expr__Group__0__Impl rule__Expr__Group__1 )
            // InternalFortXTrans.g:5246:2: rule__Expr__Group__0__Impl rule__Expr__Group__1
            {
            pushFollow(FOLLOW_20);
            rule__Expr__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Expr__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Expr__Group__0"


    // $ANTLR start "rule__Expr__Group__0__Impl"
    // InternalFortXTrans.g:5253:1: rule__Expr__Group__0__Impl : ( ( rule__Expr__FrontAssignment_0 ) ) ;
    public final void rule__Expr__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5257:1: ( ( ( rule__Expr__FrontAssignment_0 ) ) )
            // InternalFortXTrans.g:5258:1: ( ( rule__Expr__FrontAssignment_0 ) )
            {
            // InternalFortXTrans.g:5258:1: ( ( rule__Expr__FrontAssignment_0 ) )
            // InternalFortXTrans.g:5259:2: ( rule__Expr__FrontAssignment_0 )
            {
             before(grammarAccess.getExprAccess().getFrontAssignment_0()); 
            // InternalFortXTrans.g:5260:2: ( rule__Expr__FrontAssignment_0 )
            // InternalFortXTrans.g:5260:3: rule__Expr__FrontAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__Expr__FrontAssignment_0();

            state._fsp--;


            }

             after(grammarAccess.getExprAccess().getFrontAssignment_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Expr__Group__0__Impl"


    // $ANTLR start "rule__Expr__Group__1"
    // InternalFortXTrans.g:5268:1: rule__Expr__Group__1 : rule__Expr__Group__1__Impl ;
    public final void rule__Expr__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5272:1: ( rule__Expr__Group__1__Impl )
            // InternalFortXTrans.g:5273:2: rule__Expr__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Expr__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Expr__Group__1"


    // $ANTLR start "rule__Expr__Group__1__Impl"
    // InternalFortXTrans.g:5279:1: rule__Expr__Group__1__Impl : ( ( rule__Expr__TailAssignment_1 )* ) ;
    public final void rule__Expr__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5283:1: ( ( ( rule__Expr__TailAssignment_1 )* ) )
            // InternalFortXTrans.g:5284:1: ( ( rule__Expr__TailAssignment_1 )* )
            {
            // InternalFortXTrans.g:5284:1: ( ( rule__Expr__TailAssignment_1 )* )
            // InternalFortXTrans.g:5285:2: ( rule__Expr__TailAssignment_1 )*
            {
             before(grammarAccess.getExprAccess().getTailAssignment_1()); 
            // InternalFortXTrans.g:5286:2: ( rule__Expr__TailAssignment_1 )*
            loop54:
            do {
                int alt54=2;
                int LA54_0 = input.LA(1);

                if ( (LA54_0==20) ) {
                    alt54=1;
                }


                switch (alt54) {
            	case 1 :
            	    // InternalFortXTrans.g:5286:3: rule__Expr__TailAssignment_1
            	    {
            	    pushFollow(FOLLOW_34);
            	    rule__Expr__TailAssignment_1();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop54;
                }
            } while (true);

             after(grammarAccess.getExprAccess().getTailAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Expr__Group__1__Impl"


    // $ANTLR start "rule__CommaExpr__Group__0"
    // InternalFortXTrans.g:5295:1: rule__CommaExpr__Group__0 : rule__CommaExpr__Group__0__Impl rule__CommaExpr__Group__1 ;
    public final void rule__CommaExpr__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5299:1: ( rule__CommaExpr__Group__0__Impl rule__CommaExpr__Group__1 )
            // InternalFortXTrans.g:5300:2: rule__CommaExpr__Group__0__Impl rule__CommaExpr__Group__1
            {
            pushFollow(FOLLOW_24);
            rule__CommaExpr__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__CommaExpr__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CommaExpr__Group__0"


    // $ANTLR start "rule__CommaExpr__Group__0__Impl"
    // InternalFortXTrans.g:5307:1: rule__CommaExpr__Group__0__Impl : ( ruleAddExpr ) ;
    public final void rule__CommaExpr__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5311:1: ( ( ruleAddExpr ) )
            // InternalFortXTrans.g:5312:1: ( ruleAddExpr )
            {
            // InternalFortXTrans.g:5312:1: ( ruleAddExpr )
            // InternalFortXTrans.g:5313:2: ruleAddExpr
            {
             before(grammarAccess.getCommaExprAccess().getAddExprParserRuleCall_0()); 
            pushFollow(FOLLOW_2);
            ruleAddExpr();

            state._fsp--;

             after(grammarAccess.getCommaExprAccess().getAddExprParserRuleCall_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CommaExpr__Group__0__Impl"


    // $ANTLR start "rule__CommaExpr__Group__1"
    // InternalFortXTrans.g:5322:1: rule__CommaExpr__Group__1 : rule__CommaExpr__Group__1__Impl ;
    public final void rule__CommaExpr__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5326:1: ( rule__CommaExpr__Group__1__Impl )
            // InternalFortXTrans.g:5327:2: rule__CommaExpr__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__CommaExpr__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CommaExpr__Group__1"


    // $ANTLR start "rule__CommaExpr__Group__1__Impl"
    // InternalFortXTrans.g:5333:1: rule__CommaExpr__Group__1__Impl : ( ( rule__CommaExpr__Group_1__0 )* ) ;
    public final void rule__CommaExpr__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5337:1: ( ( ( rule__CommaExpr__Group_1__0 )* ) )
            // InternalFortXTrans.g:5338:1: ( ( rule__CommaExpr__Group_1__0 )* )
            {
            // InternalFortXTrans.g:5338:1: ( ( rule__CommaExpr__Group_1__0 )* )
            // InternalFortXTrans.g:5339:2: ( rule__CommaExpr__Group_1__0 )*
            {
             before(grammarAccess.getCommaExprAccess().getGroup_1()); 
            // InternalFortXTrans.g:5340:2: ( rule__CommaExpr__Group_1__0 )*
            loop55:
            do {
                int alt55=2;
                int LA55_0 = input.LA(1);

                if ( (LA55_0==17) ) {
                    alt55=1;
                }


                switch (alt55) {
            	case 1 :
            	    // InternalFortXTrans.g:5340:3: rule__CommaExpr__Group_1__0
            	    {
            	    pushFollow(FOLLOW_15);
            	    rule__CommaExpr__Group_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop55;
                }
            } while (true);

             after(grammarAccess.getCommaExprAccess().getGroup_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CommaExpr__Group__1__Impl"


    // $ANTLR start "rule__CommaExpr__Group_1__0"
    // InternalFortXTrans.g:5349:1: rule__CommaExpr__Group_1__0 : rule__CommaExpr__Group_1__0__Impl rule__CommaExpr__Group_1__1 ;
    public final void rule__CommaExpr__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5353:1: ( rule__CommaExpr__Group_1__0__Impl rule__CommaExpr__Group_1__1 )
            // InternalFortXTrans.g:5354:2: rule__CommaExpr__Group_1__0__Impl rule__CommaExpr__Group_1__1
            {
            pushFollow(FOLLOW_24);
            rule__CommaExpr__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__CommaExpr__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CommaExpr__Group_1__0"


    // $ANTLR start "rule__CommaExpr__Group_1__0__Impl"
    // InternalFortXTrans.g:5361:1: rule__CommaExpr__Group_1__0__Impl : ( () ) ;
    public final void rule__CommaExpr__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5365:1: ( ( () ) )
            // InternalFortXTrans.g:5366:1: ( () )
            {
            // InternalFortXTrans.g:5366:1: ( () )
            // InternalFortXTrans.g:5367:2: ()
            {
             before(grammarAccess.getCommaExprAccess().getCommaExprLeftAction_1_0()); 
            // InternalFortXTrans.g:5368:2: ()
            // InternalFortXTrans.g:5368:3: 
            {
            }

             after(grammarAccess.getCommaExprAccess().getCommaExprLeftAction_1_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CommaExpr__Group_1__0__Impl"


    // $ANTLR start "rule__CommaExpr__Group_1__1"
    // InternalFortXTrans.g:5376:1: rule__CommaExpr__Group_1__1 : rule__CommaExpr__Group_1__1__Impl rule__CommaExpr__Group_1__2 ;
    public final void rule__CommaExpr__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5380:1: ( rule__CommaExpr__Group_1__1__Impl rule__CommaExpr__Group_1__2 )
            // InternalFortXTrans.g:5381:2: rule__CommaExpr__Group_1__1__Impl rule__CommaExpr__Group_1__2
            {
            pushFollow(FOLLOW_32);
            rule__CommaExpr__Group_1__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__CommaExpr__Group_1__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CommaExpr__Group_1__1"


    // $ANTLR start "rule__CommaExpr__Group_1__1__Impl"
    // InternalFortXTrans.g:5388:1: rule__CommaExpr__Group_1__1__Impl : ( ',' ) ;
    public final void rule__CommaExpr__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5392:1: ( ( ',' ) )
            // InternalFortXTrans.g:5393:1: ( ',' )
            {
            // InternalFortXTrans.g:5393:1: ( ',' )
            // InternalFortXTrans.g:5394:2: ','
            {
             before(grammarAccess.getCommaExprAccess().getCommaKeyword_1_1()); 
            match(input,17,FOLLOW_2); 
             after(grammarAccess.getCommaExprAccess().getCommaKeyword_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CommaExpr__Group_1__1__Impl"


    // $ANTLR start "rule__CommaExpr__Group_1__2"
    // InternalFortXTrans.g:5403:1: rule__CommaExpr__Group_1__2 : rule__CommaExpr__Group_1__2__Impl ;
    public final void rule__CommaExpr__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5407:1: ( rule__CommaExpr__Group_1__2__Impl )
            // InternalFortXTrans.g:5408:2: rule__CommaExpr__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__CommaExpr__Group_1__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CommaExpr__Group_1__2"


    // $ANTLR start "rule__CommaExpr__Group_1__2__Impl"
    // InternalFortXTrans.g:5414:1: rule__CommaExpr__Group_1__2__Impl : ( ( rule__CommaExpr__RightAssignment_1_2 ) ) ;
    public final void rule__CommaExpr__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5418:1: ( ( ( rule__CommaExpr__RightAssignment_1_2 ) ) )
            // InternalFortXTrans.g:5419:1: ( ( rule__CommaExpr__RightAssignment_1_2 ) )
            {
            // InternalFortXTrans.g:5419:1: ( ( rule__CommaExpr__RightAssignment_1_2 ) )
            // InternalFortXTrans.g:5420:2: ( rule__CommaExpr__RightAssignment_1_2 )
            {
             before(grammarAccess.getCommaExprAccess().getRightAssignment_1_2()); 
            // InternalFortXTrans.g:5421:2: ( rule__CommaExpr__RightAssignment_1_2 )
            // InternalFortXTrans.g:5421:3: rule__CommaExpr__RightAssignment_1_2
            {
            pushFollow(FOLLOW_2);
            rule__CommaExpr__RightAssignment_1_2();

            state._fsp--;


            }

             after(grammarAccess.getCommaExprAccess().getRightAssignment_1_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CommaExpr__Group_1__2__Impl"


    // $ANTLR start "rule__AddExpr__Group__0"
    // InternalFortXTrans.g:5430:1: rule__AddExpr__Group__0 : rule__AddExpr__Group__0__Impl rule__AddExpr__Group__1 ;
    public final void rule__AddExpr__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5434:1: ( rule__AddExpr__Group__0__Impl rule__AddExpr__Group__1 )
            // InternalFortXTrans.g:5435:2: rule__AddExpr__Group__0__Impl rule__AddExpr__Group__1
            {
            pushFollow(FOLLOW_35);
            rule__AddExpr__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__AddExpr__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AddExpr__Group__0"


    // $ANTLR start "rule__AddExpr__Group__0__Impl"
    // InternalFortXTrans.g:5442:1: rule__AddExpr__Group__0__Impl : ( ruleSubExpr ) ;
    public final void rule__AddExpr__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5446:1: ( ( ruleSubExpr ) )
            // InternalFortXTrans.g:5447:1: ( ruleSubExpr )
            {
            // InternalFortXTrans.g:5447:1: ( ruleSubExpr )
            // InternalFortXTrans.g:5448:2: ruleSubExpr
            {
             before(grammarAccess.getAddExprAccess().getSubExprParserRuleCall_0()); 
            pushFollow(FOLLOW_2);
            ruleSubExpr();

            state._fsp--;

             after(grammarAccess.getAddExprAccess().getSubExprParserRuleCall_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AddExpr__Group__0__Impl"


    // $ANTLR start "rule__AddExpr__Group__1"
    // InternalFortXTrans.g:5457:1: rule__AddExpr__Group__1 : rule__AddExpr__Group__1__Impl ;
    public final void rule__AddExpr__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5461:1: ( rule__AddExpr__Group__1__Impl )
            // InternalFortXTrans.g:5462:2: rule__AddExpr__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AddExpr__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AddExpr__Group__1"


    // $ANTLR start "rule__AddExpr__Group__1__Impl"
    // InternalFortXTrans.g:5468:1: rule__AddExpr__Group__1__Impl : ( ( rule__AddExpr__Group_1__0 )* ) ;
    public final void rule__AddExpr__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5472:1: ( ( ( rule__AddExpr__Group_1__0 )* ) )
            // InternalFortXTrans.g:5473:1: ( ( rule__AddExpr__Group_1__0 )* )
            {
            // InternalFortXTrans.g:5473:1: ( ( rule__AddExpr__Group_1__0 )* )
            // InternalFortXTrans.g:5474:2: ( rule__AddExpr__Group_1__0 )*
            {
             before(grammarAccess.getAddExprAccess().getGroup_1()); 
            // InternalFortXTrans.g:5475:2: ( rule__AddExpr__Group_1__0 )*
            loop56:
            do {
                int alt56=2;
                int LA56_0 = input.LA(1);

                if ( (LA56_0==24) ) {
                    alt56=1;
                }


                switch (alt56) {
            	case 1 :
            	    // InternalFortXTrans.g:5475:3: rule__AddExpr__Group_1__0
            	    {
            	    pushFollow(FOLLOW_36);
            	    rule__AddExpr__Group_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop56;
                }
            } while (true);

             after(grammarAccess.getAddExprAccess().getGroup_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AddExpr__Group__1__Impl"


    // $ANTLR start "rule__AddExpr__Group_1__0"
    // InternalFortXTrans.g:5484:1: rule__AddExpr__Group_1__0 : rule__AddExpr__Group_1__0__Impl rule__AddExpr__Group_1__1 ;
    public final void rule__AddExpr__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5488:1: ( rule__AddExpr__Group_1__0__Impl rule__AddExpr__Group_1__1 )
            // InternalFortXTrans.g:5489:2: rule__AddExpr__Group_1__0__Impl rule__AddExpr__Group_1__1
            {
            pushFollow(FOLLOW_35);
            rule__AddExpr__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__AddExpr__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AddExpr__Group_1__0"


    // $ANTLR start "rule__AddExpr__Group_1__0__Impl"
    // InternalFortXTrans.g:5496:1: rule__AddExpr__Group_1__0__Impl : ( () ) ;
    public final void rule__AddExpr__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5500:1: ( ( () ) )
            // InternalFortXTrans.g:5501:1: ( () )
            {
            // InternalFortXTrans.g:5501:1: ( () )
            // InternalFortXTrans.g:5502:2: ()
            {
             before(grammarAccess.getAddExprAccess().getAddExprLeftAction_1_0()); 
            // InternalFortXTrans.g:5503:2: ()
            // InternalFortXTrans.g:5503:3: 
            {
            }

             after(grammarAccess.getAddExprAccess().getAddExprLeftAction_1_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AddExpr__Group_1__0__Impl"


    // $ANTLR start "rule__AddExpr__Group_1__1"
    // InternalFortXTrans.g:5511:1: rule__AddExpr__Group_1__1 : rule__AddExpr__Group_1__1__Impl rule__AddExpr__Group_1__2 ;
    public final void rule__AddExpr__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5515:1: ( rule__AddExpr__Group_1__1__Impl rule__AddExpr__Group_1__2 )
            // InternalFortXTrans.g:5516:2: rule__AddExpr__Group_1__1__Impl rule__AddExpr__Group_1__2
            {
            pushFollow(FOLLOW_32);
            rule__AddExpr__Group_1__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__AddExpr__Group_1__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AddExpr__Group_1__1"


    // $ANTLR start "rule__AddExpr__Group_1__1__Impl"
    // InternalFortXTrans.g:5523:1: rule__AddExpr__Group_1__1__Impl : ( '+' ) ;
    public final void rule__AddExpr__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5527:1: ( ( '+' ) )
            // InternalFortXTrans.g:5528:1: ( '+' )
            {
            // InternalFortXTrans.g:5528:1: ( '+' )
            // InternalFortXTrans.g:5529:2: '+'
            {
             before(grammarAccess.getAddExprAccess().getPlusSignKeyword_1_1()); 
            match(input,24,FOLLOW_2); 
             after(grammarAccess.getAddExprAccess().getPlusSignKeyword_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AddExpr__Group_1__1__Impl"


    // $ANTLR start "rule__AddExpr__Group_1__2"
    // InternalFortXTrans.g:5538:1: rule__AddExpr__Group_1__2 : rule__AddExpr__Group_1__2__Impl ;
    public final void rule__AddExpr__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5542:1: ( rule__AddExpr__Group_1__2__Impl )
            // InternalFortXTrans.g:5543:2: rule__AddExpr__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AddExpr__Group_1__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AddExpr__Group_1__2"


    // $ANTLR start "rule__AddExpr__Group_1__2__Impl"
    // InternalFortXTrans.g:5549:1: rule__AddExpr__Group_1__2__Impl : ( ( rule__AddExpr__RightAssignment_1_2 ) ) ;
    public final void rule__AddExpr__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5553:1: ( ( ( rule__AddExpr__RightAssignment_1_2 ) ) )
            // InternalFortXTrans.g:5554:1: ( ( rule__AddExpr__RightAssignment_1_2 ) )
            {
            // InternalFortXTrans.g:5554:1: ( ( rule__AddExpr__RightAssignment_1_2 ) )
            // InternalFortXTrans.g:5555:2: ( rule__AddExpr__RightAssignment_1_2 )
            {
             before(grammarAccess.getAddExprAccess().getRightAssignment_1_2()); 
            // InternalFortXTrans.g:5556:2: ( rule__AddExpr__RightAssignment_1_2 )
            // InternalFortXTrans.g:5556:3: rule__AddExpr__RightAssignment_1_2
            {
            pushFollow(FOLLOW_2);
            rule__AddExpr__RightAssignment_1_2();

            state._fsp--;


            }

             after(grammarAccess.getAddExprAccess().getRightAssignment_1_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AddExpr__Group_1__2__Impl"


    // $ANTLR start "rule__SubExpr__Group__0"
    // InternalFortXTrans.g:5565:1: rule__SubExpr__Group__0 : rule__SubExpr__Group__0__Impl rule__SubExpr__Group__1 ;
    public final void rule__SubExpr__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5569:1: ( rule__SubExpr__Group__0__Impl rule__SubExpr__Group__1 )
            // InternalFortXTrans.g:5570:2: rule__SubExpr__Group__0__Impl rule__SubExpr__Group__1
            {
            pushFollow(FOLLOW_37);
            rule__SubExpr__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__SubExpr__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubExpr__Group__0"


    // $ANTLR start "rule__SubExpr__Group__0__Impl"
    // InternalFortXTrans.g:5577:1: rule__SubExpr__Group__0__Impl : ( ruleDivExpr ) ;
    public final void rule__SubExpr__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5581:1: ( ( ruleDivExpr ) )
            // InternalFortXTrans.g:5582:1: ( ruleDivExpr )
            {
            // InternalFortXTrans.g:5582:1: ( ruleDivExpr )
            // InternalFortXTrans.g:5583:2: ruleDivExpr
            {
             before(grammarAccess.getSubExprAccess().getDivExprParserRuleCall_0()); 
            pushFollow(FOLLOW_2);
            ruleDivExpr();

            state._fsp--;

             after(grammarAccess.getSubExprAccess().getDivExprParserRuleCall_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubExpr__Group__0__Impl"


    // $ANTLR start "rule__SubExpr__Group__1"
    // InternalFortXTrans.g:5592:1: rule__SubExpr__Group__1 : rule__SubExpr__Group__1__Impl ;
    public final void rule__SubExpr__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5596:1: ( rule__SubExpr__Group__1__Impl )
            // InternalFortXTrans.g:5597:2: rule__SubExpr__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__SubExpr__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubExpr__Group__1"


    // $ANTLR start "rule__SubExpr__Group__1__Impl"
    // InternalFortXTrans.g:5603:1: rule__SubExpr__Group__1__Impl : ( ( rule__SubExpr__Group_1__0 )* ) ;
    public final void rule__SubExpr__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5607:1: ( ( ( rule__SubExpr__Group_1__0 )* ) )
            // InternalFortXTrans.g:5608:1: ( ( rule__SubExpr__Group_1__0 )* )
            {
            // InternalFortXTrans.g:5608:1: ( ( rule__SubExpr__Group_1__0 )* )
            // InternalFortXTrans.g:5609:2: ( rule__SubExpr__Group_1__0 )*
            {
             before(grammarAccess.getSubExprAccess().getGroup_1()); 
            // InternalFortXTrans.g:5610:2: ( rule__SubExpr__Group_1__0 )*
            loop57:
            do {
                int alt57=2;
                int LA57_0 = input.LA(1);

                if ( (LA57_0==25) ) {
                    alt57=1;
                }


                switch (alt57) {
            	case 1 :
            	    // InternalFortXTrans.g:5610:3: rule__SubExpr__Group_1__0
            	    {
            	    pushFollow(FOLLOW_38);
            	    rule__SubExpr__Group_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop57;
                }
            } while (true);

             after(grammarAccess.getSubExprAccess().getGroup_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubExpr__Group__1__Impl"


    // $ANTLR start "rule__SubExpr__Group_1__0"
    // InternalFortXTrans.g:5619:1: rule__SubExpr__Group_1__0 : rule__SubExpr__Group_1__0__Impl rule__SubExpr__Group_1__1 ;
    public final void rule__SubExpr__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5623:1: ( rule__SubExpr__Group_1__0__Impl rule__SubExpr__Group_1__1 )
            // InternalFortXTrans.g:5624:2: rule__SubExpr__Group_1__0__Impl rule__SubExpr__Group_1__1
            {
            pushFollow(FOLLOW_37);
            rule__SubExpr__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__SubExpr__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubExpr__Group_1__0"


    // $ANTLR start "rule__SubExpr__Group_1__0__Impl"
    // InternalFortXTrans.g:5631:1: rule__SubExpr__Group_1__0__Impl : ( () ) ;
    public final void rule__SubExpr__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5635:1: ( ( () ) )
            // InternalFortXTrans.g:5636:1: ( () )
            {
            // InternalFortXTrans.g:5636:1: ( () )
            // InternalFortXTrans.g:5637:2: ()
            {
             before(grammarAccess.getSubExprAccess().getSubExprLeftAction_1_0()); 
            // InternalFortXTrans.g:5638:2: ()
            // InternalFortXTrans.g:5638:3: 
            {
            }

             after(grammarAccess.getSubExprAccess().getSubExprLeftAction_1_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubExpr__Group_1__0__Impl"


    // $ANTLR start "rule__SubExpr__Group_1__1"
    // InternalFortXTrans.g:5646:1: rule__SubExpr__Group_1__1 : rule__SubExpr__Group_1__1__Impl rule__SubExpr__Group_1__2 ;
    public final void rule__SubExpr__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5650:1: ( rule__SubExpr__Group_1__1__Impl rule__SubExpr__Group_1__2 )
            // InternalFortXTrans.g:5651:2: rule__SubExpr__Group_1__1__Impl rule__SubExpr__Group_1__2
            {
            pushFollow(FOLLOW_32);
            rule__SubExpr__Group_1__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__SubExpr__Group_1__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubExpr__Group_1__1"


    // $ANTLR start "rule__SubExpr__Group_1__1__Impl"
    // InternalFortXTrans.g:5658:1: rule__SubExpr__Group_1__1__Impl : ( '-' ) ;
    public final void rule__SubExpr__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5662:1: ( ( '-' ) )
            // InternalFortXTrans.g:5663:1: ( '-' )
            {
            // InternalFortXTrans.g:5663:1: ( '-' )
            // InternalFortXTrans.g:5664:2: '-'
            {
             before(grammarAccess.getSubExprAccess().getHyphenMinusKeyword_1_1()); 
            match(input,25,FOLLOW_2); 
             after(grammarAccess.getSubExprAccess().getHyphenMinusKeyword_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubExpr__Group_1__1__Impl"


    // $ANTLR start "rule__SubExpr__Group_1__2"
    // InternalFortXTrans.g:5673:1: rule__SubExpr__Group_1__2 : rule__SubExpr__Group_1__2__Impl ;
    public final void rule__SubExpr__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5677:1: ( rule__SubExpr__Group_1__2__Impl )
            // InternalFortXTrans.g:5678:2: rule__SubExpr__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__SubExpr__Group_1__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubExpr__Group_1__2"


    // $ANTLR start "rule__SubExpr__Group_1__2__Impl"
    // InternalFortXTrans.g:5684:1: rule__SubExpr__Group_1__2__Impl : ( ( rule__SubExpr__RightAssignment_1_2 ) ) ;
    public final void rule__SubExpr__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5688:1: ( ( ( rule__SubExpr__RightAssignment_1_2 ) ) )
            // InternalFortXTrans.g:5689:1: ( ( rule__SubExpr__RightAssignment_1_2 ) )
            {
            // InternalFortXTrans.g:5689:1: ( ( rule__SubExpr__RightAssignment_1_2 ) )
            // InternalFortXTrans.g:5690:2: ( rule__SubExpr__RightAssignment_1_2 )
            {
             before(grammarAccess.getSubExprAccess().getRightAssignment_1_2()); 
            // InternalFortXTrans.g:5691:2: ( rule__SubExpr__RightAssignment_1_2 )
            // InternalFortXTrans.g:5691:3: rule__SubExpr__RightAssignment_1_2
            {
            pushFollow(FOLLOW_2);
            rule__SubExpr__RightAssignment_1_2();

            state._fsp--;


            }

             after(grammarAccess.getSubExprAccess().getRightAssignment_1_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubExpr__Group_1__2__Impl"


    // $ANTLR start "rule__DivExpr__Group__0"
    // InternalFortXTrans.g:5700:1: rule__DivExpr__Group__0 : rule__DivExpr__Group__0__Impl rule__DivExpr__Group__1 ;
    public final void rule__DivExpr__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5704:1: ( rule__DivExpr__Group__0__Impl rule__DivExpr__Group__1 )
            // InternalFortXTrans.g:5705:2: rule__DivExpr__Group__0__Impl rule__DivExpr__Group__1
            {
            pushFollow(FOLLOW_39);
            rule__DivExpr__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DivExpr__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DivExpr__Group__0"


    // $ANTLR start "rule__DivExpr__Group__0__Impl"
    // InternalFortXTrans.g:5712:1: rule__DivExpr__Group__0__Impl : ( ruleMultExpr ) ;
    public final void rule__DivExpr__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5716:1: ( ( ruleMultExpr ) )
            // InternalFortXTrans.g:5717:1: ( ruleMultExpr )
            {
            // InternalFortXTrans.g:5717:1: ( ruleMultExpr )
            // InternalFortXTrans.g:5718:2: ruleMultExpr
            {
             before(grammarAccess.getDivExprAccess().getMultExprParserRuleCall_0()); 
            pushFollow(FOLLOW_2);
            ruleMultExpr();

            state._fsp--;

             after(grammarAccess.getDivExprAccess().getMultExprParserRuleCall_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DivExpr__Group__0__Impl"


    // $ANTLR start "rule__DivExpr__Group__1"
    // InternalFortXTrans.g:5727:1: rule__DivExpr__Group__1 : rule__DivExpr__Group__1__Impl ;
    public final void rule__DivExpr__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5731:1: ( rule__DivExpr__Group__1__Impl )
            // InternalFortXTrans.g:5732:2: rule__DivExpr__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__DivExpr__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DivExpr__Group__1"


    // $ANTLR start "rule__DivExpr__Group__1__Impl"
    // InternalFortXTrans.g:5738:1: rule__DivExpr__Group__1__Impl : ( ( rule__DivExpr__Group_1__0 )* ) ;
    public final void rule__DivExpr__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5742:1: ( ( ( rule__DivExpr__Group_1__0 )* ) )
            // InternalFortXTrans.g:5743:1: ( ( rule__DivExpr__Group_1__0 )* )
            {
            // InternalFortXTrans.g:5743:1: ( ( rule__DivExpr__Group_1__0 )* )
            // InternalFortXTrans.g:5744:2: ( rule__DivExpr__Group_1__0 )*
            {
             before(grammarAccess.getDivExprAccess().getGroup_1()); 
            // InternalFortXTrans.g:5745:2: ( rule__DivExpr__Group_1__0 )*
            loop58:
            do {
                int alt58=2;
                int LA58_0 = input.LA(1);

                if ( (LA58_0==26) ) {
                    alt58=1;
                }


                switch (alt58) {
            	case 1 :
            	    // InternalFortXTrans.g:5745:3: rule__DivExpr__Group_1__0
            	    {
            	    pushFollow(FOLLOW_40);
            	    rule__DivExpr__Group_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop58;
                }
            } while (true);

             after(grammarAccess.getDivExprAccess().getGroup_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DivExpr__Group__1__Impl"


    // $ANTLR start "rule__DivExpr__Group_1__0"
    // InternalFortXTrans.g:5754:1: rule__DivExpr__Group_1__0 : rule__DivExpr__Group_1__0__Impl rule__DivExpr__Group_1__1 ;
    public final void rule__DivExpr__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5758:1: ( rule__DivExpr__Group_1__0__Impl rule__DivExpr__Group_1__1 )
            // InternalFortXTrans.g:5759:2: rule__DivExpr__Group_1__0__Impl rule__DivExpr__Group_1__1
            {
            pushFollow(FOLLOW_39);
            rule__DivExpr__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DivExpr__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DivExpr__Group_1__0"


    // $ANTLR start "rule__DivExpr__Group_1__0__Impl"
    // InternalFortXTrans.g:5766:1: rule__DivExpr__Group_1__0__Impl : ( () ) ;
    public final void rule__DivExpr__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5770:1: ( ( () ) )
            // InternalFortXTrans.g:5771:1: ( () )
            {
            // InternalFortXTrans.g:5771:1: ( () )
            // InternalFortXTrans.g:5772:2: ()
            {
             before(grammarAccess.getDivExprAccess().getDivExprLeftAction_1_0()); 
            // InternalFortXTrans.g:5773:2: ()
            // InternalFortXTrans.g:5773:3: 
            {
            }

             after(grammarAccess.getDivExprAccess().getDivExprLeftAction_1_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DivExpr__Group_1__0__Impl"


    // $ANTLR start "rule__DivExpr__Group_1__1"
    // InternalFortXTrans.g:5781:1: rule__DivExpr__Group_1__1 : rule__DivExpr__Group_1__1__Impl rule__DivExpr__Group_1__2 ;
    public final void rule__DivExpr__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5785:1: ( rule__DivExpr__Group_1__1__Impl rule__DivExpr__Group_1__2 )
            // InternalFortXTrans.g:5786:2: rule__DivExpr__Group_1__1__Impl rule__DivExpr__Group_1__2
            {
            pushFollow(FOLLOW_32);
            rule__DivExpr__Group_1__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DivExpr__Group_1__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DivExpr__Group_1__1"


    // $ANTLR start "rule__DivExpr__Group_1__1__Impl"
    // InternalFortXTrans.g:5793:1: rule__DivExpr__Group_1__1__Impl : ( '/' ) ;
    public final void rule__DivExpr__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5797:1: ( ( '/' ) )
            // InternalFortXTrans.g:5798:1: ( '/' )
            {
            // InternalFortXTrans.g:5798:1: ( '/' )
            // InternalFortXTrans.g:5799:2: '/'
            {
             before(grammarAccess.getDivExprAccess().getSolidusKeyword_1_1()); 
            match(input,26,FOLLOW_2); 
             after(grammarAccess.getDivExprAccess().getSolidusKeyword_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DivExpr__Group_1__1__Impl"


    // $ANTLR start "rule__DivExpr__Group_1__2"
    // InternalFortXTrans.g:5808:1: rule__DivExpr__Group_1__2 : rule__DivExpr__Group_1__2__Impl ;
    public final void rule__DivExpr__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5812:1: ( rule__DivExpr__Group_1__2__Impl )
            // InternalFortXTrans.g:5813:2: rule__DivExpr__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__DivExpr__Group_1__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DivExpr__Group_1__2"


    // $ANTLR start "rule__DivExpr__Group_1__2__Impl"
    // InternalFortXTrans.g:5819:1: rule__DivExpr__Group_1__2__Impl : ( ( rule__DivExpr__RightAssignment_1_2 ) ) ;
    public final void rule__DivExpr__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5823:1: ( ( ( rule__DivExpr__RightAssignment_1_2 ) ) )
            // InternalFortXTrans.g:5824:1: ( ( rule__DivExpr__RightAssignment_1_2 ) )
            {
            // InternalFortXTrans.g:5824:1: ( ( rule__DivExpr__RightAssignment_1_2 ) )
            // InternalFortXTrans.g:5825:2: ( rule__DivExpr__RightAssignment_1_2 )
            {
             before(grammarAccess.getDivExprAccess().getRightAssignment_1_2()); 
            // InternalFortXTrans.g:5826:2: ( rule__DivExpr__RightAssignment_1_2 )
            // InternalFortXTrans.g:5826:3: rule__DivExpr__RightAssignment_1_2
            {
            pushFollow(FOLLOW_2);
            rule__DivExpr__RightAssignment_1_2();

            state._fsp--;


            }

             after(grammarAccess.getDivExprAccess().getRightAssignment_1_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DivExpr__Group_1__2__Impl"


    // $ANTLR start "rule__MultExpr__Group__0"
    // InternalFortXTrans.g:5835:1: rule__MultExpr__Group__0 : rule__MultExpr__Group__0__Impl rule__MultExpr__Group__1 ;
    public final void rule__MultExpr__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5839:1: ( rule__MultExpr__Group__0__Impl rule__MultExpr__Group__1 )
            // InternalFortXTrans.g:5840:2: rule__MultExpr__Group__0__Impl rule__MultExpr__Group__1
            {
            pushFollow(FOLLOW_41);
            rule__MultExpr__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__MultExpr__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultExpr__Group__0"


    // $ANTLR start "rule__MultExpr__Group__0__Impl"
    // InternalFortXTrans.g:5847:1: rule__MultExpr__Group__0__Impl : ( rulePrimary ) ;
    public final void rule__MultExpr__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5851:1: ( ( rulePrimary ) )
            // InternalFortXTrans.g:5852:1: ( rulePrimary )
            {
            // InternalFortXTrans.g:5852:1: ( rulePrimary )
            // InternalFortXTrans.g:5853:2: rulePrimary
            {
             before(grammarAccess.getMultExprAccess().getPrimaryParserRuleCall_0()); 
            pushFollow(FOLLOW_2);
            rulePrimary();

            state._fsp--;

             after(grammarAccess.getMultExprAccess().getPrimaryParserRuleCall_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultExpr__Group__0__Impl"


    // $ANTLR start "rule__MultExpr__Group__1"
    // InternalFortXTrans.g:5862:1: rule__MultExpr__Group__1 : rule__MultExpr__Group__1__Impl ;
    public final void rule__MultExpr__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5866:1: ( rule__MultExpr__Group__1__Impl )
            // InternalFortXTrans.g:5867:2: rule__MultExpr__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__MultExpr__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultExpr__Group__1"


    // $ANTLR start "rule__MultExpr__Group__1__Impl"
    // InternalFortXTrans.g:5873:1: rule__MultExpr__Group__1__Impl : ( ( rule__MultExpr__Group_1__0 )* ) ;
    public final void rule__MultExpr__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5877:1: ( ( ( rule__MultExpr__Group_1__0 )* ) )
            // InternalFortXTrans.g:5878:1: ( ( rule__MultExpr__Group_1__0 )* )
            {
            // InternalFortXTrans.g:5878:1: ( ( rule__MultExpr__Group_1__0 )* )
            // InternalFortXTrans.g:5879:2: ( rule__MultExpr__Group_1__0 )*
            {
             before(grammarAccess.getMultExprAccess().getGroup_1()); 
            // InternalFortXTrans.g:5880:2: ( rule__MultExpr__Group_1__0 )*
            loop59:
            do {
                int alt59=2;
                int LA59_0 = input.LA(1);

                if ( (LA59_0==27) ) {
                    alt59=1;
                }


                switch (alt59) {
            	case 1 :
            	    // InternalFortXTrans.g:5880:3: rule__MultExpr__Group_1__0
            	    {
            	    pushFollow(FOLLOW_42);
            	    rule__MultExpr__Group_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop59;
                }
            } while (true);

             after(grammarAccess.getMultExprAccess().getGroup_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultExpr__Group__1__Impl"


    // $ANTLR start "rule__MultExpr__Group_1__0"
    // InternalFortXTrans.g:5889:1: rule__MultExpr__Group_1__0 : rule__MultExpr__Group_1__0__Impl rule__MultExpr__Group_1__1 ;
    public final void rule__MultExpr__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5893:1: ( rule__MultExpr__Group_1__0__Impl rule__MultExpr__Group_1__1 )
            // InternalFortXTrans.g:5894:2: rule__MultExpr__Group_1__0__Impl rule__MultExpr__Group_1__1
            {
            pushFollow(FOLLOW_41);
            rule__MultExpr__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__MultExpr__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultExpr__Group_1__0"


    // $ANTLR start "rule__MultExpr__Group_1__0__Impl"
    // InternalFortXTrans.g:5901:1: rule__MultExpr__Group_1__0__Impl : ( () ) ;
    public final void rule__MultExpr__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5905:1: ( ( () ) )
            // InternalFortXTrans.g:5906:1: ( () )
            {
            // InternalFortXTrans.g:5906:1: ( () )
            // InternalFortXTrans.g:5907:2: ()
            {
             before(grammarAccess.getMultExprAccess().getMultExprLeftAction_1_0()); 
            // InternalFortXTrans.g:5908:2: ()
            // InternalFortXTrans.g:5908:3: 
            {
            }

             after(grammarAccess.getMultExprAccess().getMultExprLeftAction_1_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultExpr__Group_1__0__Impl"


    // $ANTLR start "rule__MultExpr__Group_1__1"
    // InternalFortXTrans.g:5916:1: rule__MultExpr__Group_1__1 : rule__MultExpr__Group_1__1__Impl rule__MultExpr__Group_1__2 ;
    public final void rule__MultExpr__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5920:1: ( rule__MultExpr__Group_1__1__Impl rule__MultExpr__Group_1__2 )
            // InternalFortXTrans.g:5921:2: rule__MultExpr__Group_1__1__Impl rule__MultExpr__Group_1__2
            {
            pushFollow(FOLLOW_32);
            rule__MultExpr__Group_1__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__MultExpr__Group_1__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultExpr__Group_1__1"


    // $ANTLR start "rule__MultExpr__Group_1__1__Impl"
    // InternalFortXTrans.g:5928:1: rule__MultExpr__Group_1__1__Impl : ( '*' ) ;
    public final void rule__MultExpr__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5932:1: ( ( '*' ) )
            // InternalFortXTrans.g:5933:1: ( '*' )
            {
            // InternalFortXTrans.g:5933:1: ( '*' )
            // InternalFortXTrans.g:5934:2: '*'
            {
             before(grammarAccess.getMultExprAccess().getAsteriskKeyword_1_1()); 
            match(input,27,FOLLOW_2); 
             after(grammarAccess.getMultExprAccess().getAsteriskKeyword_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultExpr__Group_1__1__Impl"


    // $ANTLR start "rule__MultExpr__Group_1__2"
    // InternalFortXTrans.g:5943:1: rule__MultExpr__Group_1__2 : rule__MultExpr__Group_1__2__Impl ;
    public final void rule__MultExpr__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5947:1: ( rule__MultExpr__Group_1__2__Impl )
            // InternalFortXTrans.g:5948:2: rule__MultExpr__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__MultExpr__Group_1__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultExpr__Group_1__2"


    // $ANTLR start "rule__MultExpr__Group_1__2__Impl"
    // InternalFortXTrans.g:5954:1: rule__MultExpr__Group_1__2__Impl : ( ( rule__MultExpr__RightAssignment_1_2 ) ) ;
    public final void rule__MultExpr__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5958:1: ( ( ( rule__MultExpr__RightAssignment_1_2 ) ) )
            // InternalFortXTrans.g:5959:1: ( ( rule__MultExpr__RightAssignment_1_2 ) )
            {
            // InternalFortXTrans.g:5959:1: ( ( rule__MultExpr__RightAssignment_1_2 ) )
            // InternalFortXTrans.g:5960:2: ( rule__MultExpr__RightAssignment_1_2 )
            {
             before(grammarAccess.getMultExprAccess().getRightAssignment_1_2()); 
            // InternalFortXTrans.g:5961:2: ( rule__MultExpr__RightAssignment_1_2 )
            // InternalFortXTrans.g:5961:3: rule__MultExpr__RightAssignment_1_2
            {
            pushFollow(FOLLOW_2);
            rule__MultExpr__RightAssignment_1_2();

            state._fsp--;


            }

             after(grammarAccess.getMultExprAccess().getRightAssignment_1_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultExpr__Group_1__2__Impl"


    // $ANTLR start "rule__Primary__Group_0__0"
    // InternalFortXTrans.g:5970:1: rule__Primary__Group_0__0 : rule__Primary__Group_0__0__Impl rule__Primary__Group_0__1 ;
    public final void rule__Primary__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5974:1: ( rule__Primary__Group_0__0__Impl rule__Primary__Group_0__1 )
            // InternalFortXTrans.g:5975:2: rule__Primary__Group_0__0__Impl rule__Primary__Group_0__1
            {
            pushFollow(FOLLOW_43);
            rule__Primary__Group_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Primary__Group_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0__0"


    // $ANTLR start "rule__Primary__Group_0__0__Impl"
    // InternalFortXTrans.g:5982:1: rule__Primary__Group_0__0__Impl : ( ruleQualified ) ;
    public final void rule__Primary__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5986:1: ( ( ruleQualified ) )
            // InternalFortXTrans.g:5987:1: ( ruleQualified )
            {
            // InternalFortXTrans.g:5987:1: ( ruleQualified )
            // InternalFortXTrans.g:5988:2: ruleQualified
            {
             before(grammarAccess.getPrimaryAccess().getQualifiedParserRuleCall_0_0()); 
            pushFollow(FOLLOW_2);
            ruleQualified();

            state._fsp--;

             after(grammarAccess.getPrimaryAccess().getQualifiedParserRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0__0__Impl"


    // $ANTLR start "rule__Primary__Group_0__1"
    // InternalFortXTrans.g:5997:1: rule__Primary__Group_0__1 : rule__Primary__Group_0__1__Impl rule__Primary__Group_0__2 ;
    public final void rule__Primary__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6001:1: ( rule__Primary__Group_0__1__Impl rule__Primary__Group_0__2 )
            // InternalFortXTrans.g:6002:2: rule__Primary__Group_0__1__Impl rule__Primary__Group_0__2
            {
            pushFollow(FOLLOW_43);
            rule__Primary__Group_0__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Primary__Group_0__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0__1"


    // $ANTLR start "rule__Primary__Group_0__1__Impl"
    // InternalFortXTrans.g:6009:1: rule__Primary__Group_0__1__Impl : ( ( rule__Primary__Group_0_1__0 )? ) ;
    public final void rule__Primary__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6013:1: ( ( ( rule__Primary__Group_0_1__0 )? ) )
            // InternalFortXTrans.g:6014:1: ( ( rule__Primary__Group_0_1__0 )? )
            {
            // InternalFortXTrans.g:6014:1: ( ( rule__Primary__Group_0_1__0 )? )
            // InternalFortXTrans.g:6015:2: ( rule__Primary__Group_0_1__0 )?
            {
             before(grammarAccess.getPrimaryAccess().getGroup_0_1()); 
            // InternalFortXTrans.g:6016:2: ( rule__Primary__Group_0_1__0 )?
            int alt60=2;
            int LA60_0 = input.LA(1);

            if ( (LA60_0==28) ) {
                alt60=1;
            }
            switch (alt60) {
                case 1 :
                    // InternalFortXTrans.g:6016:3: rule__Primary__Group_0_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Primary__Group_0_1__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getPrimaryAccess().getGroup_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0__1__Impl"


    // $ANTLR start "rule__Primary__Group_0__2"
    // InternalFortXTrans.g:6024:1: rule__Primary__Group_0__2 : rule__Primary__Group_0__2__Impl ;
    public final void rule__Primary__Group_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6028:1: ( rule__Primary__Group_0__2__Impl )
            // InternalFortXTrans.g:6029:2: rule__Primary__Group_0__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Primary__Group_0__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0__2"


    // $ANTLR start "rule__Primary__Group_0__2__Impl"
    // InternalFortXTrans.g:6035:1: rule__Primary__Group_0__2__Impl : ( ( rule__Primary__Group_0_2__0 )? ) ;
    public final void rule__Primary__Group_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6039:1: ( ( ( rule__Primary__Group_0_2__0 )? ) )
            // InternalFortXTrans.g:6040:1: ( ( rule__Primary__Group_0_2__0 )? )
            {
            // InternalFortXTrans.g:6040:1: ( ( rule__Primary__Group_0_2__0 )? )
            // InternalFortXTrans.g:6041:2: ( rule__Primary__Group_0_2__0 )?
            {
             before(grammarAccess.getPrimaryAccess().getGroup_0_2()); 
            // InternalFortXTrans.g:6042:2: ( rule__Primary__Group_0_2__0 )?
            int alt61=2;
            int LA61_0 = input.LA(1);

            if ( (LA61_0==21) ) {
                alt61=1;
            }
            switch (alt61) {
                case 1 :
                    // InternalFortXTrans.g:6042:3: rule__Primary__Group_0_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Primary__Group_0_2__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getPrimaryAccess().getGroup_0_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0__2__Impl"


    // $ANTLR start "rule__Primary__Group_0_1__0"
    // InternalFortXTrans.g:6051:1: rule__Primary__Group_0_1__0 : rule__Primary__Group_0_1__0__Impl rule__Primary__Group_0_1__1 ;
    public final void rule__Primary__Group_0_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6055:1: ( rule__Primary__Group_0_1__0__Impl rule__Primary__Group_0_1__1 )
            // InternalFortXTrans.g:6056:2: rule__Primary__Group_0_1__0__Impl rule__Primary__Group_0_1__1
            {
            pushFollow(FOLLOW_44);
            rule__Primary__Group_0_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Primary__Group_0_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0_1__0"


    // $ANTLR start "rule__Primary__Group_0_1__0__Impl"
    // InternalFortXTrans.g:6063:1: rule__Primary__Group_0_1__0__Impl : ( () ) ;
    public final void rule__Primary__Group_0_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6067:1: ( ( () ) )
            // InternalFortXTrans.g:6068:1: ( () )
            {
            // InternalFortXTrans.g:6068:1: ( () )
            // InternalFortXTrans.g:6069:2: ()
            {
             before(grammarAccess.getPrimaryAccess().getPrimaryLeftAction_0_1_0()); 
            // InternalFortXTrans.g:6070:2: ()
            // InternalFortXTrans.g:6070:3: 
            {
            }

             after(grammarAccess.getPrimaryAccess().getPrimaryLeftAction_0_1_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0_1__0__Impl"


    // $ANTLR start "rule__Primary__Group_0_1__1"
    // InternalFortXTrans.g:6078:1: rule__Primary__Group_0_1__1 : rule__Primary__Group_0_1__1__Impl rule__Primary__Group_0_1__2 ;
    public final void rule__Primary__Group_0_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6082:1: ( rule__Primary__Group_0_1__1__Impl rule__Primary__Group_0_1__2 )
            // InternalFortXTrans.g:6083:2: rule__Primary__Group_0_1__1__Impl rule__Primary__Group_0_1__2
            {
            pushFollow(FOLLOW_32);
            rule__Primary__Group_0_1__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Primary__Group_0_1__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0_1__1"


    // $ANTLR start "rule__Primary__Group_0_1__1__Impl"
    // InternalFortXTrans.g:6090:1: rule__Primary__Group_0_1__1__Impl : ( ':=' ) ;
    public final void rule__Primary__Group_0_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6094:1: ( ( ':=' ) )
            // InternalFortXTrans.g:6095:1: ( ':=' )
            {
            // InternalFortXTrans.g:6095:1: ( ':=' )
            // InternalFortXTrans.g:6096:2: ':='
            {
             before(grammarAccess.getPrimaryAccess().getColonEqualsSignKeyword_0_1_1()); 
            match(input,28,FOLLOW_2); 
             after(grammarAccess.getPrimaryAccess().getColonEqualsSignKeyword_0_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0_1__1__Impl"


    // $ANTLR start "rule__Primary__Group_0_1__2"
    // InternalFortXTrans.g:6105:1: rule__Primary__Group_0_1__2 : rule__Primary__Group_0_1__2__Impl ;
    public final void rule__Primary__Group_0_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6109:1: ( rule__Primary__Group_0_1__2__Impl )
            // InternalFortXTrans.g:6110:2: rule__Primary__Group_0_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Primary__Group_0_1__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0_1__2"


    // $ANTLR start "rule__Primary__Group_0_1__2__Impl"
    // InternalFortXTrans.g:6116:1: rule__Primary__Group_0_1__2__Impl : ( ( rule__Primary__ExpAssignment_0_1_2 ) ) ;
    public final void rule__Primary__Group_0_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6120:1: ( ( ( rule__Primary__ExpAssignment_0_1_2 ) ) )
            // InternalFortXTrans.g:6121:1: ( ( rule__Primary__ExpAssignment_0_1_2 ) )
            {
            // InternalFortXTrans.g:6121:1: ( ( rule__Primary__ExpAssignment_0_1_2 ) )
            // InternalFortXTrans.g:6122:2: ( rule__Primary__ExpAssignment_0_1_2 )
            {
             before(grammarAccess.getPrimaryAccess().getExpAssignment_0_1_2()); 
            // InternalFortXTrans.g:6123:2: ( rule__Primary__ExpAssignment_0_1_2 )
            // InternalFortXTrans.g:6123:3: rule__Primary__ExpAssignment_0_1_2
            {
            pushFollow(FOLLOW_2);
            rule__Primary__ExpAssignment_0_1_2();

            state._fsp--;


            }

             after(grammarAccess.getPrimaryAccess().getExpAssignment_0_1_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0_1__2__Impl"


    // $ANTLR start "rule__Primary__Group_0_2__0"
    // InternalFortXTrans.g:6132:1: rule__Primary__Group_0_2__0 : rule__Primary__Group_0_2__0__Impl rule__Primary__Group_0_2__1 ;
    public final void rule__Primary__Group_0_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6136:1: ( rule__Primary__Group_0_2__0__Impl rule__Primary__Group_0_2__1 )
            // InternalFortXTrans.g:6137:2: rule__Primary__Group_0_2__0__Impl rule__Primary__Group_0_2__1
            {
            pushFollow(FOLLOW_27);
            rule__Primary__Group_0_2__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Primary__Group_0_2__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0_2__0"


    // $ANTLR start "rule__Primary__Group_0_2__0__Impl"
    // InternalFortXTrans.g:6144:1: rule__Primary__Group_0_2__0__Impl : ( () ) ;
    public final void rule__Primary__Group_0_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6148:1: ( ( () ) )
            // InternalFortXTrans.g:6149:1: ( () )
            {
            // InternalFortXTrans.g:6149:1: ( () )
            // InternalFortXTrans.g:6150:2: ()
            {
             before(grammarAccess.getPrimaryAccess().getPrimaryFnameAction_0_2_0()); 
            // InternalFortXTrans.g:6151:2: ()
            // InternalFortXTrans.g:6151:3: 
            {
            }

             after(grammarAccess.getPrimaryAccess().getPrimaryFnameAction_0_2_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0_2__0__Impl"


    // $ANTLR start "rule__Primary__Group_0_2__1"
    // InternalFortXTrans.g:6159:1: rule__Primary__Group_0_2__1 : rule__Primary__Group_0_2__1__Impl rule__Primary__Group_0_2__2 ;
    public final void rule__Primary__Group_0_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6163:1: ( rule__Primary__Group_0_2__1__Impl rule__Primary__Group_0_2__2 )
            // InternalFortXTrans.g:6164:2: rule__Primary__Group_0_2__1__Impl rule__Primary__Group_0_2__2
            {
            pushFollow(FOLLOW_32);
            rule__Primary__Group_0_2__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Primary__Group_0_2__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0_2__1"


    // $ANTLR start "rule__Primary__Group_0_2__1__Impl"
    // InternalFortXTrans.g:6171:1: rule__Primary__Group_0_2__1__Impl : ( '(' ) ;
    public final void rule__Primary__Group_0_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6175:1: ( ( '(' ) )
            // InternalFortXTrans.g:6176:1: ( '(' )
            {
            // InternalFortXTrans.g:6176:1: ( '(' )
            // InternalFortXTrans.g:6177:2: '('
            {
             before(grammarAccess.getPrimaryAccess().getLeftParenthesisKeyword_0_2_1()); 
            match(input,21,FOLLOW_2); 
             after(grammarAccess.getPrimaryAccess().getLeftParenthesisKeyword_0_2_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0_2__1__Impl"


    // $ANTLR start "rule__Primary__Group_0_2__2"
    // InternalFortXTrans.g:6186:1: rule__Primary__Group_0_2__2 : rule__Primary__Group_0_2__2__Impl rule__Primary__Group_0_2__3 ;
    public final void rule__Primary__Group_0_2__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6190:1: ( rule__Primary__Group_0_2__2__Impl rule__Primary__Group_0_2__3 )
            // InternalFortXTrans.g:6191:2: rule__Primary__Group_0_2__2__Impl rule__Primary__Group_0_2__3
            {
            pushFollow(FOLLOW_28);
            rule__Primary__Group_0_2__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Primary__Group_0_2__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0_2__2"


    // $ANTLR start "rule__Primary__Group_0_2__2__Impl"
    // InternalFortXTrans.g:6198:1: rule__Primary__Group_0_2__2__Impl : ( ( rule__Primary__FargsAssignment_0_2_2 ) ) ;
    public final void rule__Primary__Group_0_2__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6202:1: ( ( ( rule__Primary__FargsAssignment_0_2_2 ) ) )
            // InternalFortXTrans.g:6203:1: ( ( rule__Primary__FargsAssignment_0_2_2 ) )
            {
            // InternalFortXTrans.g:6203:1: ( ( rule__Primary__FargsAssignment_0_2_2 ) )
            // InternalFortXTrans.g:6204:2: ( rule__Primary__FargsAssignment_0_2_2 )
            {
             before(grammarAccess.getPrimaryAccess().getFargsAssignment_0_2_2()); 
            // InternalFortXTrans.g:6205:2: ( rule__Primary__FargsAssignment_0_2_2 )
            // InternalFortXTrans.g:6205:3: rule__Primary__FargsAssignment_0_2_2
            {
            pushFollow(FOLLOW_2);
            rule__Primary__FargsAssignment_0_2_2();

            state._fsp--;


            }

             after(grammarAccess.getPrimaryAccess().getFargsAssignment_0_2_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0_2__2__Impl"


    // $ANTLR start "rule__Primary__Group_0_2__3"
    // InternalFortXTrans.g:6213:1: rule__Primary__Group_0_2__3 : rule__Primary__Group_0_2__3__Impl ;
    public final void rule__Primary__Group_0_2__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6217:1: ( rule__Primary__Group_0_2__3__Impl )
            // InternalFortXTrans.g:6218:2: rule__Primary__Group_0_2__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Primary__Group_0_2__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0_2__3"


    // $ANTLR start "rule__Primary__Group_0_2__3__Impl"
    // InternalFortXTrans.g:6224:1: rule__Primary__Group_0_2__3__Impl : ( ')' ) ;
    public final void rule__Primary__Group_0_2__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6228:1: ( ( ')' ) )
            // InternalFortXTrans.g:6229:1: ( ')' )
            {
            // InternalFortXTrans.g:6229:1: ( ')' )
            // InternalFortXTrans.g:6230:2: ')'
            {
             before(grammarAccess.getPrimaryAccess().getRightParenthesisKeyword_0_2_3()); 
            match(input,22,FOLLOW_2); 
             after(grammarAccess.getPrimaryAccess().getRightParenthesisKeyword_0_2_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0_2__3__Impl"


    // $ANTLR start "rule__Primary__Group_2__0"
    // InternalFortXTrans.g:6240:1: rule__Primary__Group_2__0 : rule__Primary__Group_2__0__Impl rule__Primary__Group_2__1 ;
    public final void rule__Primary__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6244:1: ( rule__Primary__Group_2__0__Impl rule__Primary__Group_2__1 )
            // InternalFortXTrans.g:6245:2: rule__Primary__Group_2__0__Impl rule__Primary__Group_2__1
            {
            pushFollow(FOLLOW_32);
            rule__Primary__Group_2__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Primary__Group_2__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_2__0"


    // $ANTLR start "rule__Primary__Group_2__0__Impl"
    // InternalFortXTrans.g:6252:1: rule__Primary__Group_2__0__Impl : ( '(' ) ;
    public final void rule__Primary__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6256:1: ( ( '(' ) )
            // InternalFortXTrans.g:6257:1: ( '(' )
            {
            // InternalFortXTrans.g:6257:1: ( '(' )
            // InternalFortXTrans.g:6258:2: '('
            {
             before(grammarAccess.getPrimaryAccess().getLeftParenthesisKeyword_2_0()); 
            match(input,21,FOLLOW_2); 
             after(grammarAccess.getPrimaryAccess().getLeftParenthesisKeyword_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_2__0__Impl"


    // $ANTLR start "rule__Primary__Group_2__1"
    // InternalFortXTrans.g:6267:1: rule__Primary__Group_2__1 : rule__Primary__Group_2__1__Impl rule__Primary__Group_2__2 ;
    public final void rule__Primary__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6271:1: ( rule__Primary__Group_2__1__Impl rule__Primary__Group_2__2 )
            // InternalFortXTrans.g:6272:2: rule__Primary__Group_2__1__Impl rule__Primary__Group_2__2
            {
            pushFollow(FOLLOW_28);
            rule__Primary__Group_2__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Primary__Group_2__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_2__1"


    // $ANTLR start "rule__Primary__Group_2__1__Impl"
    // InternalFortXTrans.g:6279:1: rule__Primary__Group_2__1__Impl : ( ( rule__Primary__ExpAssignment_2_1 ) ) ;
    public final void rule__Primary__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6283:1: ( ( ( rule__Primary__ExpAssignment_2_1 ) ) )
            // InternalFortXTrans.g:6284:1: ( ( rule__Primary__ExpAssignment_2_1 ) )
            {
            // InternalFortXTrans.g:6284:1: ( ( rule__Primary__ExpAssignment_2_1 ) )
            // InternalFortXTrans.g:6285:2: ( rule__Primary__ExpAssignment_2_1 )
            {
             before(grammarAccess.getPrimaryAccess().getExpAssignment_2_1()); 
            // InternalFortXTrans.g:6286:2: ( rule__Primary__ExpAssignment_2_1 )
            // InternalFortXTrans.g:6286:3: rule__Primary__ExpAssignment_2_1
            {
            pushFollow(FOLLOW_2);
            rule__Primary__ExpAssignment_2_1();

            state._fsp--;


            }

             after(grammarAccess.getPrimaryAccess().getExpAssignment_2_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_2__1__Impl"


    // $ANTLR start "rule__Primary__Group_2__2"
    // InternalFortXTrans.g:6294:1: rule__Primary__Group_2__2 : rule__Primary__Group_2__2__Impl ;
    public final void rule__Primary__Group_2__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6298:1: ( rule__Primary__Group_2__2__Impl )
            // InternalFortXTrans.g:6299:2: rule__Primary__Group_2__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Primary__Group_2__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_2__2"


    // $ANTLR start "rule__Primary__Group_2__2__Impl"
    // InternalFortXTrans.g:6305:1: rule__Primary__Group_2__2__Impl : ( ')' ) ;
    public final void rule__Primary__Group_2__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6309:1: ( ( ')' ) )
            // InternalFortXTrans.g:6310:1: ( ')' )
            {
            // InternalFortXTrans.g:6310:1: ( ')' )
            // InternalFortXTrans.g:6311:2: ')'
            {
             before(grammarAccess.getPrimaryAccess().getRightParenthesisKeyword_2_2()); 
            match(input,22,FOLLOW_2); 
             after(grammarAccess.getPrimaryAccess().getRightParenthesisKeyword_2_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_2__2__Impl"


    // $ANTLR start "rule__ExprTail__Group__0"
    // InternalFortXTrans.g:6321:1: rule__ExprTail__Group__0 : rule__ExprTail__Group__0__Impl rule__ExprTail__Group__1 ;
    public final void rule__ExprTail__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6325:1: ( rule__ExprTail__Group__0__Impl rule__ExprTail__Group__1 )
            // InternalFortXTrans.g:6326:2: rule__ExprTail__Group__0__Impl rule__ExprTail__Group__1
            {
            pushFollow(FOLLOW_5);
            rule__ExprTail__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ExprTail__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExprTail__Group__0"


    // $ANTLR start "rule__ExprTail__Group__0__Impl"
    // InternalFortXTrans.g:6333:1: rule__ExprTail__Group__0__Impl : ( 'as' ) ;
    public final void rule__ExprTail__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6337:1: ( ( 'as' ) )
            // InternalFortXTrans.g:6338:1: ( 'as' )
            {
            // InternalFortXTrans.g:6338:1: ( 'as' )
            // InternalFortXTrans.g:6339:2: 'as'
            {
             before(grammarAccess.getExprTailAccess().getAsKeyword_0()); 
            match(input,20,FOLLOW_2); 
             after(grammarAccess.getExprTailAccess().getAsKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExprTail__Group__0__Impl"


    // $ANTLR start "rule__ExprTail__Group__1"
    // InternalFortXTrans.g:6348:1: rule__ExprTail__Group__1 : rule__ExprTail__Group__1__Impl ;
    public final void rule__ExprTail__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6352:1: ( rule__ExprTail__Group__1__Impl )
            // InternalFortXTrans.g:6353:2: rule__ExprTail__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ExprTail__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExprTail__Group__1"


    // $ANTLR start "rule__ExprTail__Group__1__Impl"
    // InternalFortXTrans.g:6359:1: rule__ExprTail__Group__1__Impl : ( ( rule__ExprTail__TypeAssignment_1 ) ) ;
    public final void rule__ExprTail__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6363:1: ( ( ( rule__ExprTail__TypeAssignment_1 ) ) )
            // InternalFortXTrans.g:6364:1: ( ( rule__ExprTail__TypeAssignment_1 ) )
            {
            // InternalFortXTrans.g:6364:1: ( ( rule__ExprTail__TypeAssignment_1 ) )
            // InternalFortXTrans.g:6365:2: ( rule__ExprTail__TypeAssignment_1 )
            {
             before(grammarAccess.getExprTailAccess().getTypeAssignment_1()); 
            // InternalFortXTrans.g:6366:2: ( rule__ExprTail__TypeAssignment_1 )
            // InternalFortXTrans.g:6366:3: rule__ExprTail__TypeAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__ExprTail__TypeAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getExprTailAccess().getTypeAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExprTail__Group__1__Impl"


    // $ANTLR start "rule__DelimitedExpr__Group_1__0"
    // InternalFortXTrans.g:6375:1: rule__DelimitedExpr__Group_1__0 : rule__DelimitedExpr__Group_1__0__Impl rule__DelimitedExpr__Group_1__1 ;
    public final void rule__DelimitedExpr__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6379:1: ( rule__DelimitedExpr__Group_1__0__Impl rule__DelimitedExpr__Group_1__1 )
            // InternalFortXTrans.g:6380:2: rule__DelimitedExpr__Group_1__0__Impl rule__DelimitedExpr__Group_1__1
            {
            pushFollow(FOLLOW_32);
            rule__DelimitedExpr__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DelimitedExpr__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Group_1__0"


    // $ANTLR start "rule__DelimitedExpr__Group_1__0__Impl"
    // InternalFortXTrans.g:6387:1: rule__DelimitedExpr__Group_1__0__Impl : ( ( rule__DelimitedExpr__RetAssignment_1_0 ) ) ;
    public final void rule__DelimitedExpr__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6391:1: ( ( ( rule__DelimitedExpr__RetAssignment_1_0 ) ) )
            // InternalFortXTrans.g:6392:1: ( ( rule__DelimitedExpr__RetAssignment_1_0 ) )
            {
            // InternalFortXTrans.g:6392:1: ( ( rule__DelimitedExpr__RetAssignment_1_0 ) )
            // InternalFortXTrans.g:6393:2: ( rule__DelimitedExpr__RetAssignment_1_0 )
            {
             before(grammarAccess.getDelimitedExprAccess().getRetAssignment_1_0()); 
            // InternalFortXTrans.g:6394:2: ( rule__DelimitedExpr__RetAssignment_1_0 )
            // InternalFortXTrans.g:6394:3: rule__DelimitedExpr__RetAssignment_1_0
            {
            pushFollow(FOLLOW_2);
            rule__DelimitedExpr__RetAssignment_1_0();

            state._fsp--;


            }

             after(grammarAccess.getDelimitedExprAccess().getRetAssignment_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Group_1__0__Impl"


    // $ANTLR start "rule__DelimitedExpr__Group_1__1"
    // InternalFortXTrans.g:6402:1: rule__DelimitedExpr__Group_1__1 : rule__DelimitedExpr__Group_1__1__Impl ;
    public final void rule__DelimitedExpr__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6406:1: ( rule__DelimitedExpr__Group_1__1__Impl )
            // InternalFortXTrans.g:6407:2: rule__DelimitedExpr__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__DelimitedExpr__Group_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Group_1__1"


    // $ANTLR start "rule__DelimitedExpr__Group_1__1__Impl"
    // InternalFortXTrans.g:6413:1: rule__DelimitedExpr__Group_1__1__Impl : ( ( rule__DelimitedExpr__BlockAssignment_1_1 ) ) ;
    public final void rule__DelimitedExpr__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6417:1: ( ( ( rule__DelimitedExpr__BlockAssignment_1_1 ) ) )
            // InternalFortXTrans.g:6418:1: ( ( rule__DelimitedExpr__BlockAssignment_1_1 ) )
            {
            // InternalFortXTrans.g:6418:1: ( ( rule__DelimitedExpr__BlockAssignment_1_1 ) )
            // InternalFortXTrans.g:6419:2: ( rule__DelimitedExpr__BlockAssignment_1_1 )
            {
             before(grammarAccess.getDelimitedExprAccess().getBlockAssignment_1_1()); 
            // InternalFortXTrans.g:6420:2: ( rule__DelimitedExpr__BlockAssignment_1_1 )
            // InternalFortXTrans.g:6420:3: rule__DelimitedExpr__BlockAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__DelimitedExpr__BlockAssignment_1_1();

            state._fsp--;


            }

             after(grammarAccess.getDelimitedExprAccess().getBlockAssignment_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Group_1__1__Impl"


    // $ANTLR start "rule__DelimitedExpr__Group_2__0"
    // InternalFortXTrans.g:6429:1: rule__DelimitedExpr__Group_2__0 : rule__DelimitedExpr__Group_2__0__Impl rule__DelimitedExpr__Group_2__1 ;
    public final void rule__DelimitedExpr__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6433:1: ( rule__DelimitedExpr__Group_2__0__Impl rule__DelimitedExpr__Group_2__1 )
            // InternalFortXTrans.g:6434:2: rule__DelimitedExpr__Group_2__0__Impl rule__DelimitedExpr__Group_2__1
            {
            pushFollow(FOLLOW_32);
            rule__DelimitedExpr__Group_2__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DelimitedExpr__Group_2__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Group_2__0"


    // $ANTLR start "rule__DelimitedExpr__Group_2__0__Impl"
    // InternalFortXTrans.g:6441:1: rule__DelimitedExpr__Group_2__0__Impl : ( ( rule__DelimitedExpr__AwhileAssignment_2_0 ) ) ;
    public final void rule__DelimitedExpr__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6445:1: ( ( ( rule__DelimitedExpr__AwhileAssignment_2_0 ) ) )
            // InternalFortXTrans.g:6446:1: ( ( rule__DelimitedExpr__AwhileAssignment_2_0 ) )
            {
            // InternalFortXTrans.g:6446:1: ( ( rule__DelimitedExpr__AwhileAssignment_2_0 ) )
            // InternalFortXTrans.g:6447:2: ( rule__DelimitedExpr__AwhileAssignment_2_0 )
            {
             before(grammarAccess.getDelimitedExprAccess().getAwhileAssignment_2_0()); 
            // InternalFortXTrans.g:6448:2: ( rule__DelimitedExpr__AwhileAssignment_2_0 )
            // InternalFortXTrans.g:6448:3: rule__DelimitedExpr__AwhileAssignment_2_0
            {
            pushFollow(FOLLOW_2);
            rule__DelimitedExpr__AwhileAssignment_2_0();

            state._fsp--;


            }

             after(grammarAccess.getDelimitedExprAccess().getAwhileAssignment_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Group_2__0__Impl"


    // $ANTLR start "rule__DelimitedExpr__Group_2__1"
    // InternalFortXTrans.g:6456:1: rule__DelimitedExpr__Group_2__1 : rule__DelimitedExpr__Group_2__1__Impl rule__DelimitedExpr__Group_2__2 ;
    public final void rule__DelimitedExpr__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6460:1: ( rule__DelimitedExpr__Group_2__1__Impl rule__DelimitedExpr__Group_2__2 )
            // InternalFortXTrans.g:6461:2: rule__DelimitedExpr__Group_2__1__Impl rule__DelimitedExpr__Group_2__2
            {
            pushFollow(FOLLOW_45);
            rule__DelimitedExpr__Group_2__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DelimitedExpr__Group_2__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Group_2__1"


    // $ANTLR start "rule__DelimitedExpr__Group_2__1__Impl"
    // InternalFortXTrans.g:6468:1: rule__DelimitedExpr__Group_2__1__Impl : ( ( rule__DelimitedExpr__ExprAssignment_2_1 ) ) ;
    public final void rule__DelimitedExpr__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6472:1: ( ( ( rule__DelimitedExpr__ExprAssignment_2_1 ) ) )
            // InternalFortXTrans.g:6473:1: ( ( rule__DelimitedExpr__ExprAssignment_2_1 ) )
            {
            // InternalFortXTrans.g:6473:1: ( ( rule__DelimitedExpr__ExprAssignment_2_1 ) )
            // InternalFortXTrans.g:6474:2: ( rule__DelimitedExpr__ExprAssignment_2_1 )
            {
             before(grammarAccess.getDelimitedExprAccess().getExprAssignment_2_1()); 
            // InternalFortXTrans.g:6475:2: ( rule__DelimitedExpr__ExprAssignment_2_1 )
            // InternalFortXTrans.g:6475:3: rule__DelimitedExpr__ExprAssignment_2_1
            {
            pushFollow(FOLLOW_2);
            rule__DelimitedExpr__ExprAssignment_2_1();

            state._fsp--;


            }

             after(grammarAccess.getDelimitedExprAccess().getExprAssignment_2_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Group_2__1__Impl"


    // $ANTLR start "rule__DelimitedExpr__Group_2__2"
    // InternalFortXTrans.g:6483:1: rule__DelimitedExpr__Group_2__2 : rule__DelimitedExpr__Group_2__2__Impl ;
    public final void rule__DelimitedExpr__Group_2__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6487:1: ( rule__DelimitedExpr__Group_2__2__Impl )
            // InternalFortXTrans.g:6488:2: rule__DelimitedExpr__Group_2__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__DelimitedExpr__Group_2__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Group_2__2"


    // $ANTLR start "rule__DelimitedExpr__Group_2__2__Impl"
    // InternalFortXTrans.g:6494:1: rule__DelimitedExpr__Group_2__2__Impl : ( ( rule__DelimitedExpr__WhiledodAssignment_2_2 ) ) ;
    public final void rule__DelimitedExpr__Group_2__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6498:1: ( ( ( rule__DelimitedExpr__WhiledodAssignment_2_2 ) ) )
            // InternalFortXTrans.g:6499:1: ( ( rule__DelimitedExpr__WhiledodAssignment_2_2 ) )
            {
            // InternalFortXTrans.g:6499:1: ( ( rule__DelimitedExpr__WhiledodAssignment_2_2 ) )
            // InternalFortXTrans.g:6500:2: ( rule__DelimitedExpr__WhiledodAssignment_2_2 )
            {
             before(grammarAccess.getDelimitedExprAccess().getWhiledodAssignment_2_2()); 
            // InternalFortXTrans.g:6501:2: ( rule__DelimitedExpr__WhiledodAssignment_2_2 )
            // InternalFortXTrans.g:6501:3: rule__DelimitedExpr__WhiledodAssignment_2_2
            {
            pushFollow(FOLLOW_2);
            rule__DelimitedExpr__WhiledodAssignment_2_2();

            state._fsp--;


            }

             after(grammarAccess.getDelimitedExprAccess().getWhiledodAssignment_2_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Group_2__2__Impl"


    // $ANTLR start "rule__DelimitedExpr__Group_3__0"
    // InternalFortXTrans.g:6510:1: rule__DelimitedExpr__Group_3__0 : rule__DelimitedExpr__Group_3__0__Impl rule__DelimitedExpr__Group_3__1 ;
    public final void rule__DelimitedExpr__Group_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6514:1: ( rule__DelimitedExpr__Group_3__0__Impl rule__DelimitedExpr__Group_3__1 )
            // InternalFortXTrans.g:6515:2: rule__DelimitedExpr__Group_3__0__Impl rule__DelimitedExpr__Group_3__1
            {
            pushFollow(FOLLOW_46);
            rule__DelimitedExpr__Group_3__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DelimitedExpr__Group_3__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Group_3__0"


    // $ANTLR start "rule__DelimitedExpr__Group_3__0__Impl"
    // InternalFortXTrans.g:6522:1: rule__DelimitedExpr__Group_3__0__Impl : ( ( rule__DelimitedExpr__AforAssignment_3_0 ) ) ;
    public final void rule__DelimitedExpr__Group_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6526:1: ( ( ( rule__DelimitedExpr__AforAssignment_3_0 ) ) )
            // InternalFortXTrans.g:6527:1: ( ( rule__DelimitedExpr__AforAssignment_3_0 ) )
            {
            // InternalFortXTrans.g:6527:1: ( ( rule__DelimitedExpr__AforAssignment_3_0 ) )
            // InternalFortXTrans.g:6528:2: ( rule__DelimitedExpr__AforAssignment_3_0 )
            {
             before(grammarAccess.getDelimitedExprAccess().getAforAssignment_3_0()); 
            // InternalFortXTrans.g:6529:2: ( rule__DelimitedExpr__AforAssignment_3_0 )
            // InternalFortXTrans.g:6529:3: rule__DelimitedExpr__AforAssignment_3_0
            {
            pushFollow(FOLLOW_2);
            rule__DelimitedExpr__AforAssignment_3_0();

            state._fsp--;


            }

             after(grammarAccess.getDelimitedExprAccess().getAforAssignment_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Group_3__0__Impl"


    // $ANTLR start "rule__DelimitedExpr__Group_3__1"
    // InternalFortXTrans.g:6537:1: rule__DelimitedExpr__Group_3__1 : rule__DelimitedExpr__Group_3__1__Impl rule__DelimitedExpr__Group_3__2 ;
    public final void rule__DelimitedExpr__Group_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6541:1: ( rule__DelimitedExpr__Group_3__1__Impl rule__DelimitedExpr__Group_3__2 )
            // InternalFortXTrans.g:6542:2: rule__DelimitedExpr__Group_3__1__Impl rule__DelimitedExpr__Group_3__2
            {
            pushFollow(FOLLOW_45);
            rule__DelimitedExpr__Group_3__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DelimitedExpr__Group_3__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Group_3__1"


    // $ANTLR start "rule__DelimitedExpr__Group_3__1__Impl"
    // InternalFortXTrans.g:6549:1: rule__DelimitedExpr__Group_3__1__Impl : ( ( rule__DelimitedExpr__GenAssignment_3_1 ) ) ;
    public final void rule__DelimitedExpr__Group_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6553:1: ( ( ( rule__DelimitedExpr__GenAssignment_3_1 ) ) )
            // InternalFortXTrans.g:6554:1: ( ( rule__DelimitedExpr__GenAssignment_3_1 ) )
            {
            // InternalFortXTrans.g:6554:1: ( ( rule__DelimitedExpr__GenAssignment_3_1 ) )
            // InternalFortXTrans.g:6555:2: ( rule__DelimitedExpr__GenAssignment_3_1 )
            {
             before(grammarAccess.getDelimitedExprAccess().getGenAssignment_3_1()); 
            // InternalFortXTrans.g:6556:2: ( rule__DelimitedExpr__GenAssignment_3_1 )
            // InternalFortXTrans.g:6556:3: rule__DelimitedExpr__GenAssignment_3_1
            {
            pushFollow(FOLLOW_2);
            rule__DelimitedExpr__GenAssignment_3_1();

            state._fsp--;


            }

             after(grammarAccess.getDelimitedExprAccess().getGenAssignment_3_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Group_3__1__Impl"


    // $ANTLR start "rule__DelimitedExpr__Group_3__2"
    // InternalFortXTrans.g:6564:1: rule__DelimitedExpr__Group_3__2 : rule__DelimitedExpr__Group_3__2__Impl rule__DelimitedExpr__Group_3__3 ;
    public final void rule__DelimitedExpr__Group_3__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6568:1: ( rule__DelimitedExpr__Group_3__2__Impl rule__DelimitedExpr__Group_3__3 )
            // InternalFortXTrans.g:6569:2: rule__DelimitedExpr__Group_3__2__Impl rule__DelimitedExpr__Group_3__3
            {
            pushFollow(FOLLOW_47);
            rule__DelimitedExpr__Group_3__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DelimitedExpr__Group_3__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Group_3__2"


    // $ANTLR start "rule__DelimitedExpr__Group_3__2__Impl"
    // InternalFortXTrans.g:6576:1: rule__DelimitedExpr__Group_3__2__Impl : ( ( rule__DelimitedExpr__DofrontAssignment_3_2 ) ) ;
    public final void rule__DelimitedExpr__Group_3__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6580:1: ( ( ( rule__DelimitedExpr__DofrontAssignment_3_2 ) ) )
            // InternalFortXTrans.g:6581:1: ( ( rule__DelimitedExpr__DofrontAssignment_3_2 ) )
            {
            // InternalFortXTrans.g:6581:1: ( ( rule__DelimitedExpr__DofrontAssignment_3_2 ) )
            // InternalFortXTrans.g:6582:2: ( rule__DelimitedExpr__DofrontAssignment_3_2 )
            {
             before(grammarAccess.getDelimitedExprAccess().getDofrontAssignment_3_2()); 
            // InternalFortXTrans.g:6583:2: ( rule__DelimitedExpr__DofrontAssignment_3_2 )
            // InternalFortXTrans.g:6583:3: rule__DelimitedExpr__DofrontAssignment_3_2
            {
            pushFollow(FOLLOW_2);
            rule__DelimitedExpr__DofrontAssignment_3_2();

            state._fsp--;


            }

             after(grammarAccess.getDelimitedExprAccess().getDofrontAssignment_3_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Group_3__2__Impl"


    // $ANTLR start "rule__DelimitedExpr__Group_3__3"
    // InternalFortXTrans.g:6591:1: rule__DelimitedExpr__Group_3__3 : rule__DelimitedExpr__Group_3__3__Impl ;
    public final void rule__DelimitedExpr__Group_3__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6595:1: ( rule__DelimitedExpr__Group_3__3__Impl )
            // InternalFortXTrans.g:6596:2: rule__DelimitedExpr__Group_3__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__DelimitedExpr__Group_3__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Group_3__3"


    // $ANTLR start "rule__DelimitedExpr__Group_3__3__Impl"
    // InternalFortXTrans.g:6602:1: rule__DelimitedExpr__Group_3__3__Impl : ( 'end' ) ;
    public final void rule__DelimitedExpr__Group_3__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6606:1: ( ( 'end' ) )
            // InternalFortXTrans.g:6607:1: ( 'end' )
            {
            // InternalFortXTrans.g:6607:1: ( 'end' )
            // InternalFortXTrans.g:6608:2: 'end'
            {
             before(grammarAccess.getDelimitedExprAccess().getEndKeyword_3_3()); 
            match(input,14,FOLLOW_2); 
             after(grammarAccess.getDelimitedExprAccess().getEndKeyword_3_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Group_3__3__Impl"


    // $ANTLR start "rule__DelimitedExpr__Group_4__0"
    // InternalFortXTrans.g:6618:1: rule__DelimitedExpr__Group_4__0 : rule__DelimitedExpr__Group_4__0__Impl rule__DelimitedExpr__Group_4__1 ;
    public final void rule__DelimitedExpr__Group_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6622:1: ( rule__DelimitedExpr__Group_4__0__Impl rule__DelimitedExpr__Group_4__1 )
            // InternalFortXTrans.g:6623:2: rule__DelimitedExpr__Group_4__0__Impl rule__DelimitedExpr__Group_4__1
            {
            pushFollow(FOLLOW_32);
            rule__DelimitedExpr__Group_4__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DelimitedExpr__Group_4__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Group_4__0"


    // $ANTLR start "rule__DelimitedExpr__Group_4__0__Impl"
    // InternalFortXTrans.g:6630:1: rule__DelimitedExpr__Group_4__0__Impl : ( ( rule__DelimitedExpr__AnifAssignment_4_0 ) ) ;
    public final void rule__DelimitedExpr__Group_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6634:1: ( ( ( rule__DelimitedExpr__AnifAssignment_4_0 ) ) )
            // InternalFortXTrans.g:6635:1: ( ( rule__DelimitedExpr__AnifAssignment_4_0 ) )
            {
            // InternalFortXTrans.g:6635:1: ( ( rule__DelimitedExpr__AnifAssignment_4_0 ) )
            // InternalFortXTrans.g:6636:2: ( rule__DelimitedExpr__AnifAssignment_4_0 )
            {
             before(grammarAccess.getDelimitedExprAccess().getAnifAssignment_4_0()); 
            // InternalFortXTrans.g:6637:2: ( rule__DelimitedExpr__AnifAssignment_4_0 )
            // InternalFortXTrans.g:6637:3: rule__DelimitedExpr__AnifAssignment_4_0
            {
            pushFollow(FOLLOW_2);
            rule__DelimitedExpr__AnifAssignment_4_0();

            state._fsp--;


            }

             after(grammarAccess.getDelimitedExprAccess().getAnifAssignment_4_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Group_4__0__Impl"


    // $ANTLR start "rule__DelimitedExpr__Group_4__1"
    // InternalFortXTrans.g:6645:1: rule__DelimitedExpr__Group_4__1 : rule__DelimitedExpr__Group_4__1__Impl rule__DelimitedExpr__Group_4__2 ;
    public final void rule__DelimitedExpr__Group_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6649:1: ( rule__DelimitedExpr__Group_4__1__Impl rule__DelimitedExpr__Group_4__2 )
            // InternalFortXTrans.g:6650:2: rule__DelimitedExpr__Group_4__1__Impl rule__DelimitedExpr__Group_4__2
            {
            pushFollow(FOLLOW_48);
            rule__DelimitedExpr__Group_4__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DelimitedExpr__Group_4__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Group_4__1"


    // $ANTLR start "rule__DelimitedExpr__Group_4__1__Impl"
    // InternalFortXTrans.g:6657:1: rule__DelimitedExpr__Group_4__1__Impl : ( ( rule__DelimitedExpr__CondAssignment_4_1 ) ) ;
    public final void rule__DelimitedExpr__Group_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6661:1: ( ( ( rule__DelimitedExpr__CondAssignment_4_1 ) ) )
            // InternalFortXTrans.g:6662:1: ( ( rule__DelimitedExpr__CondAssignment_4_1 ) )
            {
            // InternalFortXTrans.g:6662:1: ( ( rule__DelimitedExpr__CondAssignment_4_1 ) )
            // InternalFortXTrans.g:6663:2: ( rule__DelimitedExpr__CondAssignment_4_1 )
            {
             before(grammarAccess.getDelimitedExprAccess().getCondAssignment_4_1()); 
            // InternalFortXTrans.g:6664:2: ( rule__DelimitedExpr__CondAssignment_4_1 )
            // InternalFortXTrans.g:6664:3: rule__DelimitedExpr__CondAssignment_4_1
            {
            pushFollow(FOLLOW_2);
            rule__DelimitedExpr__CondAssignment_4_1();

            state._fsp--;


            }

             after(grammarAccess.getDelimitedExprAccess().getCondAssignment_4_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Group_4__1__Impl"


    // $ANTLR start "rule__DelimitedExpr__Group_4__2"
    // InternalFortXTrans.g:6672:1: rule__DelimitedExpr__Group_4__2 : rule__DelimitedExpr__Group_4__2__Impl rule__DelimitedExpr__Group_4__3 ;
    public final void rule__DelimitedExpr__Group_4__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6676:1: ( rule__DelimitedExpr__Group_4__2__Impl rule__DelimitedExpr__Group_4__3 )
            // InternalFortXTrans.g:6677:2: rule__DelimitedExpr__Group_4__2__Impl rule__DelimitedExpr__Group_4__3
            {
            pushFollow(FOLLOW_32);
            rule__DelimitedExpr__Group_4__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DelimitedExpr__Group_4__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Group_4__2"


    // $ANTLR start "rule__DelimitedExpr__Group_4__2__Impl"
    // InternalFortXTrans.g:6684:1: rule__DelimitedExpr__Group_4__2__Impl : ( 'then' ) ;
    public final void rule__DelimitedExpr__Group_4__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6688:1: ( ( 'then' ) )
            // InternalFortXTrans.g:6689:1: ( 'then' )
            {
            // InternalFortXTrans.g:6689:1: ( 'then' )
            // InternalFortXTrans.g:6690:2: 'then'
            {
             before(grammarAccess.getDelimitedExprAccess().getThenKeyword_4_2()); 
            match(input,29,FOLLOW_2); 
             after(grammarAccess.getDelimitedExprAccess().getThenKeyword_4_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Group_4__2__Impl"


    // $ANTLR start "rule__DelimitedExpr__Group_4__3"
    // InternalFortXTrans.g:6699:1: rule__DelimitedExpr__Group_4__3 : rule__DelimitedExpr__Group_4__3__Impl rule__DelimitedExpr__Group_4__4 ;
    public final void rule__DelimitedExpr__Group_4__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6703:1: ( rule__DelimitedExpr__Group_4__3__Impl rule__DelimitedExpr__Group_4__4 )
            // InternalFortXTrans.g:6704:2: rule__DelimitedExpr__Group_4__3__Impl rule__DelimitedExpr__Group_4__4
            {
            pushFollow(FOLLOW_49);
            rule__DelimitedExpr__Group_4__3__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DelimitedExpr__Group_4__4();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Group_4__3"


    // $ANTLR start "rule__DelimitedExpr__Group_4__3__Impl"
    // InternalFortXTrans.g:6711:1: rule__DelimitedExpr__Group_4__3__Impl : ( ( rule__DelimitedExpr__BlocksAssignment_4_3 ) ) ;
    public final void rule__DelimitedExpr__Group_4__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6715:1: ( ( ( rule__DelimitedExpr__BlocksAssignment_4_3 ) ) )
            // InternalFortXTrans.g:6716:1: ( ( rule__DelimitedExpr__BlocksAssignment_4_3 ) )
            {
            // InternalFortXTrans.g:6716:1: ( ( rule__DelimitedExpr__BlocksAssignment_4_3 ) )
            // InternalFortXTrans.g:6717:2: ( rule__DelimitedExpr__BlocksAssignment_4_3 )
            {
             before(grammarAccess.getDelimitedExprAccess().getBlocksAssignment_4_3()); 
            // InternalFortXTrans.g:6718:2: ( rule__DelimitedExpr__BlocksAssignment_4_3 )
            // InternalFortXTrans.g:6718:3: rule__DelimitedExpr__BlocksAssignment_4_3
            {
            pushFollow(FOLLOW_2);
            rule__DelimitedExpr__BlocksAssignment_4_3();

            state._fsp--;


            }

             after(grammarAccess.getDelimitedExprAccess().getBlocksAssignment_4_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Group_4__3__Impl"


    // $ANTLR start "rule__DelimitedExpr__Group_4__4"
    // InternalFortXTrans.g:6726:1: rule__DelimitedExpr__Group_4__4 : rule__DelimitedExpr__Group_4__4__Impl rule__DelimitedExpr__Group_4__5 ;
    public final void rule__DelimitedExpr__Group_4__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6730:1: ( rule__DelimitedExpr__Group_4__4__Impl rule__DelimitedExpr__Group_4__5 )
            // InternalFortXTrans.g:6731:2: rule__DelimitedExpr__Group_4__4__Impl rule__DelimitedExpr__Group_4__5
            {
            pushFollow(FOLLOW_49);
            rule__DelimitedExpr__Group_4__4__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DelimitedExpr__Group_4__5();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Group_4__4"


    // $ANTLR start "rule__DelimitedExpr__Group_4__4__Impl"
    // InternalFortXTrans.g:6738:1: rule__DelimitedExpr__Group_4__4__Impl : ( ( rule__DelimitedExpr__ElifsAssignment_4_4 )? ) ;
    public final void rule__DelimitedExpr__Group_4__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6742:1: ( ( ( rule__DelimitedExpr__ElifsAssignment_4_4 )? ) )
            // InternalFortXTrans.g:6743:1: ( ( rule__DelimitedExpr__ElifsAssignment_4_4 )? )
            {
            // InternalFortXTrans.g:6743:1: ( ( rule__DelimitedExpr__ElifsAssignment_4_4 )? )
            // InternalFortXTrans.g:6744:2: ( rule__DelimitedExpr__ElifsAssignment_4_4 )?
            {
             before(grammarAccess.getDelimitedExprAccess().getElifsAssignment_4_4()); 
            // InternalFortXTrans.g:6745:2: ( rule__DelimitedExpr__ElifsAssignment_4_4 )?
            int alt62=2;
            int LA62_0 = input.LA(1);

            if ( (LA62_0==30) ) {
                alt62=1;
            }
            switch (alt62) {
                case 1 :
                    // InternalFortXTrans.g:6745:3: rule__DelimitedExpr__ElifsAssignment_4_4
                    {
                    pushFollow(FOLLOW_2);
                    rule__DelimitedExpr__ElifsAssignment_4_4();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getDelimitedExprAccess().getElifsAssignment_4_4()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Group_4__4__Impl"


    // $ANTLR start "rule__DelimitedExpr__Group_4__5"
    // InternalFortXTrans.g:6753:1: rule__DelimitedExpr__Group_4__5 : rule__DelimitedExpr__Group_4__5__Impl rule__DelimitedExpr__Group_4__6 ;
    public final void rule__DelimitedExpr__Group_4__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6757:1: ( rule__DelimitedExpr__Group_4__5__Impl rule__DelimitedExpr__Group_4__6 )
            // InternalFortXTrans.g:6758:2: rule__DelimitedExpr__Group_4__5__Impl rule__DelimitedExpr__Group_4__6
            {
            pushFollow(FOLLOW_49);
            rule__DelimitedExpr__Group_4__5__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DelimitedExpr__Group_4__6();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Group_4__5"


    // $ANTLR start "rule__DelimitedExpr__Group_4__5__Impl"
    // InternalFortXTrans.g:6765:1: rule__DelimitedExpr__Group_4__5__Impl : ( ( rule__DelimitedExpr__ElsAssignment_4_5 )? ) ;
    public final void rule__DelimitedExpr__Group_4__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6769:1: ( ( ( rule__DelimitedExpr__ElsAssignment_4_5 )? ) )
            // InternalFortXTrans.g:6770:1: ( ( rule__DelimitedExpr__ElsAssignment_4_5 )? )
            {
            // InternalFortXTrans.g:6770:1: ( ( rule__DelimitedExpr__ElsAssignment_4_5 )? )
            // InternalFortXTrans.g:6771:2: ( rule__DelimitedExpr__ElsAssignment_4_5 )?
            {
             before(grammarAccess.getDelimitedExprAccess().getElsAssignment_4_5()); 
            // InternalFortXTrans.g:6772:2: ( rule__DelimitedExpr__ElsAssignment_4_5 )?
            int alt63=2;
            int LA63_0 = input.LA(1);

            if ( (LA63_0==31) ) {
                alt63=1;
            }
            switch (alt63) {
                case 1 :
                    // InternalFortXTrans.g:6772:3: rule__DelimitedExpr__ElsAssignment_4_5
                    {
                    pushFollow(FOLLOW_2);
                    rule__DelimitedExpr__ElsAssignment_4_5();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getDelimitedExprAccess().getElsAssignment_4_5()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Group_4__5__Impl"


    // $ANTLR start "rule__DelimitedExpr__Group_4__6"
    // InternalFortXTrans.g:6780:1: rule__DelimitedExpr__Group_4__6 : rule__DelimitedExpr__Group_4__6__Impl ;
    public final void rule__DelimitedExpr__Group_4__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6784:1: ( rule__DelimitedExpr__Group_4__6__Impl )
            // InternalFortXTrans.g:6785:2: rule__DelimitedExpr__Group_4__6__Impl
            {
            pushFollow(FOLLOW_2);
            rule__DelimitedExpr__Group_4__6__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Group_4__6"


    // $ANTLR start "rule__DelimitedExpr__Group_4__6__Impl"
    // InternalFortXTrans.g:6791:1: rule__DelimitedExpr__Group_4__6__Impl : ( 'end' ) ;
    public final void rule__DelimitedExpr__Group_4__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6795:1: ( ( 'end' ) )
            // InternalFortXTrans.g:6796:1: ( 'end' )
            {
            // InternalFortXTrans.g:6796:1: ( 'end' )
            // InternalFortXTrans.g:6797:2: 'end'
            {
             before(grammarAccess.getDelimitedExprAccess().getEndKeyword_4_6()); 
            match(input,14,FOLLOW_2); 
             after(grammarAccess.getDelimitedExprAccess().getEndKeyword_4_6()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Group_4__6__Impl"


    // $ANTLR start "rule__Elifs__Group__0"
    // InternalFortXTrans.g:6807:1: rule__Elifs__Group__0 : rule__Elifs__Group__0__Impl rule__Elifs__Group__1 ;
    public final void rule__Elifs__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6811:1: ( rule__Elifs__Group__0__Impl rule__Elifs__Group__1 )
            // InternalFortXTrans.g:6812:2: rule__Elifs__Group__0__Impl rule__Elifs__Group__1
            {
            pushFollow(FOLLOW_50);
            rule__Elifs__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Elifs__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Elifs__Group__0"


    // $ANTLR start "rule__Elifs__Group__0__Impl"
    // InternalFortXTrans.g:6819:1: rule__Elifs__Group__0__Impl : ( ( rule__Elifs__EAssignment_0 ) ) ;
    public final void rule__Elifs__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6823:1: ( ( ( rule__Elifs__EAssignment_0 ) ) )
            // InternalFortXTrans.g:6824:1: ( ( rule__Elifs__EAssignment_0 ) )
            {
            // InternalFortXTrans.g:6824:1: ( ( rule__Elifs__EAssignment_0 ) )
            // InternalFortXTrans.g:6825:2: ( rule__Elifs__EAssignment_0 )
            {
             before(grammarAccess.getElifsAccess().getEAssignment_0()); 
            // InternalFortXTrans.g:6826:2: ( rule__Elifs__EAssignment_0 )
            // InternalFortXTrans.g:6826:3: rule__Elifs__EAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__Elifs__EAssignment_0();

            state._fsp--;


            }

             after(grammarAccess.getElifsAccess().getEAssignment_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Elifs__Group__0__Impl"


    // $ANTLR start "rule__Elifs__Group__1"
    // InternalFortXTrans.g:6834:1: rule__Elifs__Group__1 : rule__Elifs__Group__1__Impl ;
    public final void rule__Elifs__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6838:1: ( rule__Elifs__Group__1__Impl )
            // InternalFortXTrans.g:6839:2: rule__Elifs__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Elifs__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Elifs__Group__1"


    // $ANTLR start "rule__Elifs__Group__1__Impl"
    // InternalFortXTrans.g:6845:1: rule__Elifs__Group__1__Impl : ( ( rule__Elifs__EAssignment_1 )* ) ;
    public final void rule__Elifs__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6849:1: ( ( ( rule__Elifs__EAssignment_1 )* ) )
            // InternalFortXTrans.g:6850:1: ( ( rule__Elifs__EAssignment_1 )* )
            {
            // InternalFortXTrans.g:6850:1: ( ( rule__Elifs__EAssignment_1 )* )
            // InternalFortXTrans.g:6851:2: ( rule__Elifs__EAssignment_1 )*
            {
             before(grammarAccess.getElifsAccess().getEAssignment_1()); 
            // InternalFortXTrans.g:6852:2: ( rule__Elifs__EAssignment_1 )*
            loop64:
            do {
                int alt64=2;
                int LA64_0 = input.LA(1);

                if ( (LA64_0==30) ) {
                    alt64=1;
                }


                switch (alt64) {
            	case 1 :
            	    // InternalFortXTrans.g:6852:3: rule__Elifs__EAssignment_1
            	    {
            	    pushFollow(FOLLOW_51);
            	    rule__Elifs__EAssignment_1();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop64;
                }
            } while (true);

             after(grammarAccess.getElifsAccess().getEAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Elifs__Group__1__Impl"


    // $ANTLR start "rule__Elif__Group__0"
    // InternalFortXTrans.g:6861:1: rule__Elif__Group__0 : rule__Elif__Group__0__Impl rule__Elif__Group__1 ;
    public final void rule__Elif__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6865:1: ( rule__Elif__Group__0__Impl rule__Elif__Group__1 )
            // InternalFortXTrans.g:6866:2: rule__Elif__Group__0__Impl rule__Elif__Group__1
            {
            pushFollow(FOLLOW_32);
            rule__Elif__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Elif__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Elif__Group__0"


    // $ANTLR start "rule__Elif__Group__0__Impl"
    // InternalFortXTrans.g:6873:1: rule__Elif__Group__0__Impl : ( 'elif' ) ;
    public final void rule__Elif__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6877:1: ( ( 'elif' ) )
            // InternalFortXTrans.g:6878:1: ( 'elif' )
            {
            // InternalFortXTrans.g:6878:1: ( 'elif' )
            // InternalFortXTrans.g:6879:2: 'elif'
            {
             before(grammarAccess.getElifAccess().getElifKeyword_0()); 
            match(input,30,FOLLOW_2); 
             after(grammarAccess.getElifAccess().getElifKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Elif__Group__0__Impl"


    // $ANTLR start "rule__Elif__Group__1"
    // InternalFortXTrans.g:6888:1: rule__Elif__Group__1 : rule__Elif__Group__1__Impl rule__Elif__Group__2 ;
    public final void rule__Elif__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6892:1: ( rule__Elif__Group__1__Impl rule__Elif__Group__2 )
            // InternalFortXTrans.g:6893:2: rule__Elif__Group__1__Impl rule__Elif__Group__2
            {
            pushFollow(FOLLOW_48);
            rule__Elif__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Elif__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Elif__Group__1"


    // $ANTLR start "rule__Elif__Group__1__Impl"
    // InternalFortXTrans.g:6900:1: rule__Elif__Group__1__Impl : ( ( rule__Elif__ExprAssignment_1 ) ) ;
    public final void rule__Elif__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6904:1: ( ( ( rule__Elif__ExprAssignment_1 ) ) )
            // InternalFortXTrans.g:6905:1: ( ( rule__Elif__ExprAssignment_1 ) )
            {
            // InternalFortXTrans.g:6905:1: ( ( rule__Elif__ExprAssignment_1 ) )
            // InternalFortXTrans.g:6906:2: ( rule__Elif__ExprAssignment_1 )
            {
             before(grammarAccess.getElifAccess().getExprAssignment_1()); 
            // InternalFortXTrans.g:6907:2: ( rule__Elif__ExprAssignment_1 )
            // InternalFortXTrans.g:6907:3: rule__Elif__ExprAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__Elif__ExprAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getElifAccess().getExprAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Elif__Group__1__Impl"


    // $ANTLR start "rule__Elif__Group__2"
    // InternalFortXTrans.g:6915:1: rule__Elif__Group__2 : rule__Elif__Group__2__Impl rule__Elif__Group__3 ;
    public final void rule__Elif__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6919:1: ( rule__Elif__Group__2__Impl rule__Elif__Group__3 )
            // InternalFortXTrans.g:6920:2: rule__Elif__Group__2__Impl rule__Elif__Group__3
            {
            pushFollow(FOLLOW_32);
            rule__Elif__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Elif__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Elif__Group__2"


    // $ANTLR start "rule__Elif__Group__2__Impl"
    // InternalFortXTrans.g:6927:1: rule__Elif__Group__2__Impl : ( 'then' ) ;
    public final void rule__Elif__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6931:1: ( ( 'then' ) )
            // InternalFortXTrans.g:6932:1: ( 'then' )
            {
            // InternalFortXTrans.g:6932:1: ( 'then' )
            // InternalFortXTrans.g:6933:2: 'then'
            {
             before(grammarAccess.getElifAccess().getThenKeyword_2()); 
            match(input,29,FOLLOW_2); 
             after(grammarAccess.getElifAccess().getThenKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Elif__Group__2__Impl"


    // $ANTLR start "rule__Elif__Group__3"
    // InternalFortXTrans.g:6942:1: rule__Elif__Group__3 : rule__Elif__Group__3__Impl ;
    public final void rule__Elif__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6946:1: ( rule__Elif__Group__3__Impl )
            // InternalFortXTrans.g:6947:2: rule__Elif__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Elif__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Elif__Group__3"


    // $ANTLR start "rule__Elif__Group__3__Impl"
    // InternalFortXTrans.g:6953:1: rule__Elif__Group__3__Impl : ( ( rule__Elif__BlockAssignment_3 ) ) ;
    public final void rule__Elif__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6957:1: ( ( ( rule__Elif__BlockAssignment_3 ) ) )
            // InternalFortXTrans.g:6958:1: ( ( rule__Elif__BlockAssignment_3 ) )
            {
            // InternalFortXTrans.g:6958:1: ( ( rule__Elif__BlockAssignment_3 ) )
            // InternalFortXTrans.g:6959:2: ( rule__Elif__BlockAssignment_3 )
            {
             before(grammarAccess.getElifAccess().getBlockAssignment_3()); 
            // InternalFortXTrans.g:6960:2: ( rule__Elif__BlockAssignment_3 )
            // InternalFortXTrans.g:6960:3: rule__Elif__BlockAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__Elif__BlockAssignment_3();

            state._fsp--;


            }

             after(grammarAccess.getElifAccess().getBlockAssignment_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Elif__Group__3__Impl"


    // $ANTLR start "rule__Else__Group__0"
    // InternalFortXTrans.g:6969:1: rule__Else__Group__0 : rule__Else__Group__0__Impl rule__Else__Group__1 ;
    public final void rule__Else__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6973:1: ( rule__Else__Group__0__Impl rule__Else__Group__1 )
            // InternalFortXTrans.g:6974:2: rule__Else__Group__0__Impl rule__Else__Group__1
            {
            pushFollow(FOLLOW_32);
            rule__Else__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Else__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Else__Group__0"


    // $ANTLR start "rule__Else__Group__0__Impl"
    // InternalFortXTrans.g:6981:1: rule__Else__Group__0__Impl : ( 'else' ) ;
    public final void rule__Else__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6985:1: ( ( 'else' ) )
            // InternalFortXTrans.g:6986:1: ( 'else' )
            {
            // InternalFortXTrans.g:6986:1: ( 'else' )
            // InternalFortXTrans.g:6987:2: 'else'
            {
             before(grammarAccess.getElseAccess().getElseKeyword_0()); 
            match(input,31,FOLLOW_2); 
             after(grammarAccess.getElseAccess().getElseKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Else__Group__0__Impl"


    // $ANTLR start "rule__Else__Group__1"
    // InternalFortXTrans.g:6996:1: rule__Else__Group__1 : rule__Else__Group__1__Impl ;
    public final void rule__Else__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7000:1: ( rule__Else__Group__1__Impl )
            // InternalFortXTrans.g:7001:2: rule__Else__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Else__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Else__Group__1"


    // $ANTLR start "rule__Else__Group__1__Impl"
    // InternalFortXTrans.g:7007:1: rule__Else__Group__1__Impl : ( ( rule__Else__BlockAssignment_1 ) ) ;
    public final void rule__Else__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7011:1: ( ( ( rule__Else__BlockAssignment_1 ) ) )
            // InternalFortXTrans.g:7012:1: ( ( rule__Else__BlockAssignment_1 ) )
            {
            // InternalFortXTrans.g:7012:1: ( ( rule__Else__BlockAssignment_1 ) )
            // InternalFortXTrans.g:7013:2: ( rule__Else__BlockAssignment_1 )
            {
             before(grammarAccess.getElseAccess().getBlockAssignment_1()); 
            // InternalFortXTrans.g:7014:2: ( rule__Else__BlockAssignment_1 )
            // InternalFortXTrans.g:7014:3: rule__Else__BlockAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__Else__BlockAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getElseAccess().getBlockAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Else__Group__1__Impl"


    // $ANTLR start "rule__Generators__Group__0"
    // InternalFortXTrans.g:7023:1: rule__Generators__Group__0 : rule__Generators__Group__0__Impl rule__Generators__Group__1 ;
    public final void rule__Generators__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7027:1: ( rule__Generators__Group__0__Impl rule__Generators__Group__1 )
            // InternalFortXTrans.g:7028:2: rule__Generators__Group__0__Impl rule__Generators__Group__1
            {
            pushFollow(FOLLOW_24);
            rule__Generators__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Generators__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Generators__Group__0"


    // $ANTLR start "rule__Generators__Group__0__Impl"
    // InternalFortXTrans.g:7035:1: rule__Generators__Group__0__Impl : ( ( rule__Generators__BindingAssignment_0 ) ) ;
    public final void rule__Generators__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7039:1: ( ( ( rule__Generators__BindingAssignment_0 ) ) )
            // InternalFortXTrans.g:7040:1: ( ( rule__Generators__BindingAssignment_0 ) )
            {
            // InternalFortXTrans.g:7040:1: ( ( rule__Generators__BindingAssignment_0 ) )
            // InternalFortXTrans.g:7041:2: ( rule__Generators__BindingAssignment_0 )
            {
             before(grammarAccess.getGeneratorsAccess().getBindingAssignment_0()); 
            // InternalFortXTrans.g:7042:2: ( rule__Generators__BindingAssignment_0 )
            // InternalFortXTrans.g:7042:3: rule__Generators__BindingAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__Generators__BindingAssignment_0();

            state._fsp--;


            }

             after(grammarAccess.getGeneratorsAccess().getBindingAssignment_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Generators__Group__0__Impl"


    // $ANTLR start "rule__Generators__Group__1"
    // InternalFortXTrans.g:7050:1: rule__Generators__Group__1 : rule__Generators__Group__1__Impl ;
    public final void rule__Generators__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7054:1: ( rule__Generators__Group__1__Impl )
            // InternalFortXTrans.g:7055:2: rule__Generators__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Generators__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Generators__Group__1"


    // $ANTLR start "rule__Generators__Group__1__Impl"
    // InternalFortXTrans.g:7061:1: rule__Generators__Group__1__Impl : ( ( rule__Generators__Group_1__0 )* ) ;
    public final void rule__Generators__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7065:1: ( ( ( rule__Generators__Group_1__0 )* ) )
            // InternalFortXTrans.g:7066:1: ( ( rule__Generators__Group_1__0 )* )
            {
            // InternalFortXTrans.g:7066:1: ( ( rule__Generators__Group_1__0 )* )
            // InternalFortXTrans.g:7067:2: ( rule__Generators__Group_1__0 )*
            {
             before(grammarAccess.getGeneratorsAccess().getGroup_1()); 
            // InternalFortXTrans.g:7068:2: ( rule__Generators__Group_1__0 )*
            loop65:
            do {
                int alt65=2;
                int LA65_0 = input.LA(1);

                if ( (LA65_0==17) ) {
                    alt65=1;
                }


                switch (alt65) {
            	case 1 :
            	    // InternalFortXTrans.g:7068:3: rule__Generators__Group_1__0
            	    {
            	    pushFollow(FOLLOW_15);
            	    rule__Generators__Group_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop65;
                }
            } while (true);

             after(grammarAccess.getGeneratorsAccess().getGroup_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Generators__Group__1__Impl"


    // $ANTLR start "rule__Generators__Group_1__0"
    // InternalFortXTrans.g:7077:1: rule__Generators__Group_1__0 : rule__Generators__Group_1__0__Impl rule__Generators__Group_1__1 ;
    public final void rule__Generators__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7081:1: ( rule__Generators__Group_1__0__Impl rule__Generators__Group_1__1 )
            // InternalFortXTrans.g:7082:2: rule__Generators__Group_1__0__Impl rule__Generators__Group_1__1
            {
            pushFollow(FOLLOW_32);
            rule__Generators__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Generators__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Generators__Group_1__0"


    // $ANTLR start "rule__Generators__Group_1__0__Impl"
    // InternalFortXTrans.g:7089:1: rule__Generators__Group_1__0__Impl : ( ',' ) ;
    public final void rule__Generators__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7093:1: ( ( ',' ) )
            // InternalFortXTrans.g:7094:1: ( ',' )
            {
            // InternalFortXTrans.g:7094:1: ( ',' )
            // InternalFortXTrans.g:7095:2: ','
            {
             before(grammarAccess.getGeneratorsAccess().getCommaKeyword_1_0()); 
            match(input,17,FOLLOW_2); 
             after(grammarAccess.getGeneratorsAccess().getCommaKeyword_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Generators__Group_1__0__Impl"


    // $ANTLR start "rule__Generators__Group_1__1"
    // InternalFortXTrans.g:7104:1: rule__Generators__Group_1__1 : rule__Generators__Group_1__1__Impl ;
    public final void rule__Generators__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7108:1: ( rule__Generators__Group_1__1__Impl )
            // InternalFortXTrans.g:7109:2: rule__Generators__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Generators__Group_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Generators__Group_1__1"


    // $ANTLR start "rule__Generators__Group_1__1__Impl"
    // InternalFortXTrans.g:7115:1: rule__Generators__Group_1__1__Impl : ( ( rule__Generators__ClauseAssignment_1_1 ) ) ;
    public final void rule__Generators__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7119:1: ( ( ( rule__Generators__ClauseAssignment_1_1 ) ) )
            // InternalFortXTrans.g:7120:1: ( ( rule__Generators__ClauseAssignment_1_1 ) )
            {
            // InternalFortXTrans.g:7120:1: ( ( rule__Generators__ClauseAssignment_1_1 ) )
            // InternalFortXTrans.g:7121:2: ( rule__Generators__ClauseAssignment_1_1 )
            {
             before(grammarAccess.getGeneratorsAccess().getClauseAssignment_1_1()); 
            // InternalFortXTrans.g:7122:2: ( rule__Generators__ClauseAssignment_1_1 )
            // InternalFortXTrans.g:7122:3: rule__Generators__ClauseAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Generators__ClauseAssignment_1_1();

            state._fsp--;


            }

             after(grammarAccess.getGeneratorsAccess().getClauseAssignment_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Generators__Group_1__1__Impl"


    // $ANTLR start "rule__Binding__Group_0__0"
    // InternalFortXTrans.g:7131:1: rule__Binding__Group_0__0 : rule__Binding__Group_0__0__Impl rule__Binding__Group_0__1 ;
    public final void rule__Binding__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7135:1: ( rule__Binding__Group_0__0__Impl rule__Binding__Group_0__1 )
            // InternalFortXTrans.g:7136:2: rule__Binding__Group_0__0__Impl rule__Binding__Group_0__1
            {
            pushFollow(FOLLOW_52);
            rule__Binding__Group_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Binding__Group_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Binding__Group_0__0"


    // $ANTLR start "rule__Binding__Group_0__0__Impl"
    // InternalFortXTrans.g:7143:1: rule__Binding__Group_0__0__Impl : ( ( rule__Binding__IdtupAssignment_0_0 ) ) ;
    public final void rule__Binding__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7147:1: ( ( ( rule__Binding__IdtupAssignment_0_0 ) ) )
            // InternalFortXTrans.g:7148:1: ( ( rule__Binding__IdtupAssignment_0_0 ) )
            {
            // InternalFortXTrans.g:7148:1: ( ( rule__Binding__IdtupAssignment_0_0 ) )
            // InternalFortXTrans.g:7149:2: ( rule__Binding__IdtupAssignment_0_0 )
            {
             before(grammarAccess.getBindingAccess().getIdtupAssignment_0_0()); 
            // InternalFortXTrans.g:7150:2: ( rule__Binding__IdtupAssignment_0_0 )
            // InternalFortXTrans.g:7150:3: rule__Binding__IdtupAssignment_0_0
            {
            pushFollow(FOLLOW_2);
            rule__Binding__IdtupAssignment_0_0();

            state._fsp--;


            }

             after(grammarAccess.getBindingAccess().getIdtupAssignment_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Binding__Group_0__0__Impl"


    // $ANTLR start "rule__Binding__Group_0__1"
    // InternalFortXTrans.g:7158:1: rule__Binding__Group_0__1 : rule__Binding__Group_0__1__Impl rule__Binding__Group_0__2 ;
    public final void rule__Binding__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7162:1: ( rule__Binding__Group_0__1__Impl rule__Binding__Group_0__2 )
            // InternalFortXTrans.g:7163:2: rule__Binding__Group_0__1__Impl rule__Binding__Group_0__2
            {
            pushFollow(FOLLOW_32);
            rule__Binding__Group_0__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Binding__Group_0__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Binding__Group_0__1"


    // $ANTLR start "rule__Binding__Group_0__1__Impl"
    // InternalFortXTrans.g:7170:1: rule__Binding__Group_0__1__Impl : ( '<-' ) ;
    public final void rule__Binding__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7174:1: ( ( '<-' ) )
            // InternalFortXTrans.g:7175:1: ( '<-' )
            {
            // InternalFortXTrans.g:7175:1: ( '<-' )
            // InternalFortXTrans.g:7176:2: '<-'
            {
             before(grammarAccess.getBindingAccess().getLessThanSignHyphenMinusKeyword_0_1()); 
            match(input,32,FOLLOW_2); 
             after(grammarAccess.getBindingAccess().getLessThanSignHyphenMinusKeyword_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Binding__Group_0__1__Impl"


    // $ANTLR start "rule__Binding__Group_0__2"
    // InternalFortXTrans.g:7185:1: rule__Binding__Group_0__2 : rule__Binding__Group_0__2__Impl ;
    public final void rule__Binding__Group_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7189:1: ( rule__Binding__Group_0__2__Impl )
            // InternalFortXTrans.g:7190:2: rule__Binding__Group_0__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Binding__Group_0__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Binding__Group_0__2"


    // $ANTLR start "rule__Binding__Group_0__2__Impl"
    // InternalFortXTrans.g:7196:1: rule__Binding__Group_0__2__Impl : ( ( rule__Binding__ExprAssignment_0_2 ) ) ;
    public final void rule__Binding__Group_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7200:1: ( ( ( rule__Binding__ExprAssignment_0_2 ) ) )
            // InternalFortXTrans.g:7201:1: ( ( rule__Binding__ExprAssignment_0_2 ) )
            {
            // InternalFortXTrans.g:7201:1: ( ( rule__Binding__ExprAssignment_0_2 ) )
            // InternalFortXTrans.g:7202:2: ( rule__Binding__ExprAssignment_0_2 )
            {
             before(grammarAccess.getBindingAccess().getExprAssignment_0_2()); 
            // InternalFortXTrans.g:7203:2: ( rule__Binding__ExprAssignment_0_2 )
            // InternalFortXTrans.g:7203:3: rule__Binding__ExprAssignment_0_2
            {
            pushFollow(FOLLOW_2);
            rule__Binding__ExprAssignment_0_2();

            state._fsp--;


            }

             after(grammarAccess.getBindingAccess().getExprAssignment_0_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Binding__Group_0__2__Impl"


    // $ANTLR start "rule__Binding__Group_1__0"
    // InternalFortXTrans.g:7212:1: rule__Binding__Group_1__0 : rule__Binding__Group_1__0__Impl rule__Binding__Group_1__1 ;
    public final void rule__Binding__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7216:1: ( rule__Binding__Group_1__0__Impl rule__Binding__Group_1__1 )
            // InternalFortXTrans.g:7217:2: rule__Binding__Group_1__0__Impl rule__Binding__Group_1__1
            {
            pushFollow(FOLLOW_52);
            rule__Binding__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Binding__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Binding__Group_1__0"


    // $ANTLR start "rule__Binding__Group_1__0__Impl"
    // InternalFortXTrans.g:7224:1: rule__Binding__Group_1__0__Impl : ( ( rule__Binding__IdtupAssignment_1_0 ) ) ;
    public final void rule__Binding__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7228:1: ( ( ( rule__Binding__IdtupAssignment_1_0 ) ) )
            // InternalFortXTrans.g:7229:1: ( ( rule__Binding__IdtupAssignment_1_0 ) )
            {
            // InternalFortXTrans.g:7229:1: ( ( rule__Binding__IdtupAssignment_1_0 ) )
            // InternalFortXTrans.g:7230:2: ( rule__Binding__IdtupAssignment_1_0 )
            {
             before(grammarAccess.getBindingAccess().getIdtupAssignment_1_0()); 
            // InternalFortXTrans.g:7231:2: ( rule__Binding__IdtupAssignment_1_0 )
            // InternalFortXTrans.g:7231:3: rule__Binding__IdtupAssignment_1_0
            {
            pushFollow(FOLLOW_2);
            rule__Binding__IdtupAssignment_1_0();

            state._fsp--;


            }

             after(grammarAccess.getBindingAccess().getIdtupAssignment_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Binding__Group_1__0__Impl"


    // $ANTLR start "rule__Binding__Group_1__1"
    // InternalFortXTrans.g:7239:1: rule__Binding__Group_1__1 : rule__Binding__Group_1__1__Impl rule__Binding__Group_1__2 ;
    public final void rule__Binding__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7243:1: ( rule__Binding__Group_1__1__Impl rule__Binding__Group_1__2 )
            // InternalFortXTrans.g:7244:2: rule__Binding__Group_1__1__Impl rule__Binding__Group_1__2
            {
            pushFollow(FOLLOW_53);
            rule__Binding__Group_1__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Binding__Group_1__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Binding__Group_1__1"


    // $ANTLR start "rule__Binding__Group_1__1__Impl"
    // InternalFortXTrans.g:7251:1: rule__Binding__Group_1__1__Impl : ( '<-' ) ;
    public final void rule__Binding__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7255:1: ( ( '<-' ) )
            // InternalFortXTrans.g:7256:1: ( '<-' )
            {
            // InternalFortXTrans.g:7256:1: ( '<-' )
            // InternalFortXTrans.g:7257:2: '<-'
            {
             before(grammarAccess.getBindingAccess().getLessThanSignHyphenMinusKeyword_1_1()); 
            match(input,32,FOLLOW_2); 
             after(grammarAccess.getBindingAccess().getLessThanSignHyphenMinusKeyword_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Binding__Group_1__1__Impl"


    // $ANTLR start "rule__Binding__Group_1__2"
    // InternalFortXTrans.g:7266:1: rule__Binding__Group_1__2 : rule__Binding__Group_1__2__Impl rule__Binding__Group_1__3 ;
    public final void rule__Binding__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7270:1: ( rule__Binding__Group_1__2__Impl rule__Binding__Group_1__3 )
            // InternalFortXTrans.g:7271:2: rule__Binding__Group_1__2__Impl rule__Binding__Group_1__3
            {
            pushFollow(FOLLOW_27);
            rule__Binding__Group_1__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Binding__Group_1__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Binding__Group_1__2"


    // $ANTLR start "rule__Binding__Group_1__2__Impl"
    // InternalFortXTrans.g:7278:1: rule__Binding__Group_1__2__Impl : ( ( rule__Binding__SeqAssignment_1_2 ) ) ;
    public final void rule__Binding__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7282:1: ( ( ( rule__Binding__SeqAssignment_1_2 ) ) )
            // InternalFortXTrans.g:7283:1: ( ( rule__Binding__SeqAssignment_1_2 ) )
            {
            // InternalFortXTrans.g:7283:1: ( ( rule__Binding__SeqAssignment_1_2 ) )
            // InternalFortXTrans.g:7284:2: ( rule__Binding__SeqAssignment_1_2 )
            {
             before(grammarAccess.getBindingAccess().getSeqAssignment_1_2()); 
            // InternalFortXTrans.g:7285:2: ( rule__Binding__SeqAssignment_1_2 )
            // InternalFortXTrans.g:7285:3: rule__Binding__SeqAssignment_1_2
            {
            pushFollow(FOLLOW_2);
            rule__Binding__SeqAssignment_1_2();

            state._fsp--;


            }

             after(grammarAccess.getBindingAccess().getSeqAssignment_1_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Binding__Group_1__2__Impl"


    // $ANTLR start "rule__Binding__Group_1__3"
    // InternalFortXTrans.g:7293:1: rule__Binding__Group_1__3 : rule__Binding__Group_1__3__Impl rule__Binding__Group_1__4 ;
    public final void rule__Binding__Group_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7297:1: ( rule__Binding__Group_1__3__Impl rule__Binding__Group_1__4 )
            // InternalFortXTrans.g:7298:2: rule__Binding__Group_1__3__Impl rule__Binding__Group_1__4
            {
            pushFollow(FOLLOW_32);
            rule__Binding__Group_1__3__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Binding__Group_1__4();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Binding__Group_1__3"


    // $ANTLR start "rule__Binding__Group_1__3__Impl"
    // InternalFortXTrans.g:7305:1: rule__Binding__Group_1__3__Impl : ( '(' ) ;
    public final void rule__Binding__Group_1__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7309:1: ( ( '(' ) )
            // InternalFortXTrans.g:7310:1: ( '(' )
            {
            // InternalFortXTrans.g:7310:1: ( '(' )
            // InternalFortXTrans.g:7311:2: '('
            {
             before(grammarAccess.getBindingAccess().getLeftParenthesisKeyword_1_3()); 
            match(input,21,FOLLOW_2); 
             after(grammarAccess.getBindingAccess().getLeftParenthesisKeyword_1_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Binding__Group_1__3__Impl"


    // $ANTLR start "rule__Binding__Group_1__4"
    // InternalFortXTrans.g:7320:1: rule__Binding__Group_1__4 : rule__Binding__Group_1__4__Impl rule__Binding__Group_1__5 ;
    public final void rule__Binding__Group_1__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7324:1: ( rule__Binding__Group_1__4__Impl rule__Binding__Group_1__5 )
            // InternalFortXTrans.g:7325:2: rule__Binding__Group_1__4__Impl rule__Binding__Group_1__5
            {
            pushFollow(FOLLOW_28);
            rule__Binding__Group_1__4__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Binding__Group_1__5();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Binding__Group_1__4"


    // $ANTLR start "rule__Binding__Group_1__4__Impl"
    // InternalFortXTrans.g:7332:1: rule__Binding__Group_1__4__Impl : ( ( rule__Binding__ExprAssignment_1_4 ) ) ;
    public final void rule__Binding__Group_1__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7336:1: ( ( ( rule__Binding__ExprAssignment_1_4 ) ) )
            // InternalFortXTrans.g:7337:1: ( ( rule__Binding__ExprAssignment_1_4 ) )
            {
            // InternalFortXTrans.g:7337:1: ( ( rule__Binding__ExprAssignment_1_4 ) )
            // InternalFortXTrans.g:7338:2: ( rule__Binding__ExprAssignment_1_4 )
            {
             before(grammarAccess.getBindingAccess().getExprAssignment_1_4()); 
            // InternalFortXTrans.g:7339:2: ( rule__Binding__ExprAssignment_1_4 )
            // InternalFortXTrans.g:7339:3: rule__Binding__ExprAssignment_1_4
            {
            pushFollow(FOLLOW_2);
            rule__Binding__ExprAssignment_1_4();

            state._fsp--;


            }

             after(grammarAccess.getBindingAccess().getExprAssignment_1_4()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Binding__Group_1__4__Impl"


    // $ANTLR start "rule__Binding__Group_1__5"
    // InternalFortXTrans.g:7347:1: rule__Binding__Group_1__5 : rule__Binding__Group_1__5__Impl ;
    public final void rule__Binding__Group_1__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7351:1: ( rule__Binding__Group_1__5__Impl )
            // InternalFortXTrans.g:7352:2: rule__Binding__Group_1__5__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Binding__Group_1__5__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Binding__Group_1__5"


    // $ANTLR start "rule__Binding__Group_1__5__Impl"
    // InternalFortXTrans.g:7358:1: rule__Binding__Group_1__5__Impl : ( ')' ) ;
    public final void rule__Binding__Group_1__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7362:1: ( ( ')' ) )
            // InternalFortXTrans.g:7363:1: ( ')' )
            {
            // InternalFortXTrans.g:7363:1: ( ')' )
            // InternalFortXTrans.g:7364:2: ')'
            {
             before(grammarAccess.getBindingAccess().getRightParenthesisKeyword_1_5()); 
            match(input,22,FOLLOW_2); 
             after(grammarAccess.getBindingAccess().getRightParenthesisKeyword_1_5()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Binding__Group_1__5__Impl"


    // $ANTLR start "rule__BlockElems__Group__0"
    // InternalFortXTrans.g:7374:1: rule__BlockElems__Group__0 : rule__BlockElems__Group__0__Impl rule__BlockElems__Group__1 ;
    public final void rule__BlockElems__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7378:1: ( rule__BlockElems__Group__0__Impl rule__BlockElems__Group__1 )
            // InternalFortXTrans.g:7379:2: rule__BlockElems__Group__0__Impl rule__BlockElems__Group__1
            {
            pushFollow(FOLLOW_32);
            rule__BlockElems__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__BlockElems__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BlockElems__Group__0"


    // $ANTLR start "rule__BlockElems__Group__0__Impl"
    // InternalFortXTrans.g:7386:1: rule__BlockElems__Group__0__Impl : ( ( rule__BlockElems__BlockAssignment_0 ) ) ;
    public final void rule__BlockElems__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7390:1: ( ( ( rule__BlockElems__BlockAssignment_0 ) ) )
            // InternalFortXTrans.g:7391:1: ( ( rule__BlockElems__BlockAssignment_0 ) )
            {
            // InternalFortXTrans.g:7391:1: ( ( rule__BlockElems__BlockAssignment_0 ) )
            // InternalFortXTrans.g:7392:2: ( rule__BlockElems__BlockAssignment_0 )
            {
             before(grammarAccess.getBlockElemsAccess().getBlockAssignment_0()); 
            // InternalFortXTrans.g:7393:2: ( rule__BlockElems__BlockAssignment_0 )
            // InternalFortXTrans.g:7393:3: rule__BlockElems__BlockAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__BlockElems__BlockAssignment_0();

            state._fsp--;


            }

             after(grammarAccess.getBlockElemsAccess().getBlockAssignment_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BlockElems__Group__0__Impl"


    // $ANTLR start "rule__BlockElems__Group__1"
    // InternalFortXTrans.g:7401:1: rule__BlockElems__Group__1 : rule__BlockElems__Group__1__Impl ;
    public final void rule__BlockElems__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7405:1: ( rule__BlockElems__Group__1__Impl )
            // InternalFortXTrans.g:7406:2: rule__BlockElems__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__BlockElems__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BlockElems__Group__1"


    // $ANTLR start "rule__BlockElems__Group__1__Impl"
    // InternalFortXTrans.g:7412:1: rule__BlockElems__Group__1__Impl : ( ( rule__BlockElems__BlockAssignment_1 )* ) ;
    public final void rule__BlockElems__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7416:1: ( ( ( rule__BlockElems__BlockAssignment_1 )* ) )
            // InternalFortXTrans.g:7417:1: ( ( rule__BlockElems__BlockAssignment_1 )* )
            {
            // InternalFortXTrans.g:7417:1: ( ( rule__BlockElems__BlockAssignment_1 )* )
            // InternalFortXTrans.g:7418:2: ( rule__BlockElems__BlockAssignment_1 )*
            {
             before(grammarAccess.getBlockElemsAccess().getBlockAssignment_1()); 
            // InternalFortXTrans.g:7419:2: ( rule__BlockElems__BlockAssignment_1 )*
            loop66:
            do {
                int alt66=2;
                int LA66_0 = input.LA(1);

                if ( ((LA66_0>=RULE_ID && LA66_0<=RULE_STRING)||LA66_0==21||LA66_0==34||LA66_0==41||(LA66_0>=43 && LA66_0<=46)||(LA66_0>=48 && LA66_0<=50)) ) {
                    alt66=1;
                }


                switch (alt66) {
            	case 1 :
            	    // InternalFortXTrans.g:7419:3: rule__BlockElems__BlockAssignment_1
            	    {
            	    pushFollow(FOLLOW_54);
            	    rule__BlockElems__BlockAssignment_1();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop66;
                }
            } while (true);

             after(grammarAccess.getBlockElemsAccess().getBlockAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BlockElems__Group__1__Impl"


    // $ANTLR start "rule__Do__Group__0"
    // InternalFortXTrans.g:7428:1: rule__Do__Group__0 : rule__Do__Group__0__Impl rule__Do__Group__1 ;
    public final void rule__Do__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7432:1: ( rule__Do__Group__0__Impl rule__Do__Group__1 )
            // InternalFortXTrans.g:7433:2: rule__Do__Group__0__Impl rule__Do__Group__1
            {
            pushFollow(FOLLOW_55);
            rule__Do__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Do__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Do__Group__0"


    // $ANTLR start "rule__Do__Group__0__Impl"
    // InternalFortXTrans.g:7440:1: rule__Do__Group__0__Impl : ( ( rule__Do__DofsAssignment_0 ) ) ;
    public final void rule__Do__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7444:1: ( ( ( rule__Do__DofsAssignment_0 ) ) )
            // InternalFortXTrans.g:7445:1: ( ( rule__Do__DofsAssignment_0 ) )
            {
            // InternalFortXTrans.g:7445:1: ( ( rule__Do__DofsAssignment_0 ) )
            // InternalFortXTrans.g:7446:2: ( rule__Do__DofsAssignment_0 )
            {
             before(grammarAccess.getDoAccess().getDofsAssignment_0()); 
            // InternalFortXTrans.g:7447:2: ( rule__Do__DofsAssignment_0 )
            // InternalFortXTrans.g:7447:3: rule__Do__DofsAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__Do__DofsAssignment_0();

            state._fsp--;


            }

             after(grammarAccess.getDoAccess().getDofsAssignment_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Do__Group__0__Impl"


    // $ANTLR start "rule__Do__Group__1"
    // InternalFortXTrans.g:7455:1: rule__Do__Group__1 : rule__Do__Group__1__Impl rule__Do__Group__2 ;
    public final void rule__Do__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7459:1: ( rule__Do__Group__1__Impl rule__Do__Group__2 )
            // InternalFortXTrans.g:7460:2: rule__Do__Group__1__Impl rule__Do__Group__2
            {
            pushFollow(FOLLOW_55);
            rule__Do__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Do__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Do__Group__1"


    // $ANTLR start "rule__Do__Group__1__Impl"
    // InternalFortXTrans.g:7467:1: rule__Do__Group__1__Impl : ( ( rule__Do__Group_1__0 )* ) ;
    public final void rule__Do__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7471:1: ( ( ( rule__Do__Group_1__0 )* ) )
            // InternalFortXTrans.g:7472:1: ( ( rule__Do__Group_1__0 )* )
            {
            // InternalFortXTrans.g:7472:1: ( ( rule__Do__Group_1__0 )* )
            // InternalFortXTrans.g:7473:2: ( rule__Do__Group_1__0 )*
            {
             before(grammarAccess.getDoAccess().getGroup_1()); 
            // InternalFortXTrans.g:7474:2: ( rule__Do__Group_1__0 )*
            loop67:
            do {
                int alt67=2;
                int LA67_0 = input.LA(1);

                if ( (LA67_0==33) ) {
                    alt67=1;
                }


                switch (alt67) {
            	case 1 :
            	    // InternalFortXTrans.g:7474:3: rule__Do__Group_1__0
            	    {
            	    pushFollow(FOLLOW_56);
            	    rule__Do__Group_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop67;
                }
            } while (true);

             after(grammarAccess.getDoAccess().getGroup_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Do__Group__1__Impl"


    // $ANTLR start "rule__Do__Group__2"
    // InternalFortXTrans.g:7482:1: rule__Do__Group__2 : rule__Do__Group__2__Impl ;
    public final void rule__Do__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7486:1: ( rule__Do__Group__2__Impl )
            // InternalFortXTrans.g:7487:2: rule__Do__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Do__Group__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Do__Group__2"


    // $ANTLR start "rule__Do__Group__2__Impl"
    // InternalFortXTrans.g:7493:1: rule__Do__Group__2__Impl : ( 'end' ) ;
    public final void rule__Do__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7497:1: ( ( 'end' ) )
            // InternalFortXTrans.g:7498:1: ( 'end' )
            {
            // InternalFortXTrans.g:7498:1: ( 'end' )
            // InternalFortXTrans.g:7499:2: 'end'
            {
             before(grammarAccess.getDoAccess().getEndKeyword_2()); 
            match(input,14,FOLLOW_2); 
             after(grammarAccess.getDoAccess().getEndKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Do__Group__2__Impl"


    // $ANTLR start "rule__Do__Group_1__0"
    // InternalFortXTrans.g:7509:1: rule__Do__Group_1__0 : rule__Do__Group_1__0__Impl rule__Do__Group_1__1 ;
    public final void rule__Do__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7513:1: ( rule__Do__Group_1__0__Impl rule__Do__Group_1__1 )
            // InternalFortXTrans.g:7514:2: rule__Do__Group_1__0__Impl rule__Do__Group_1__1
            {
            pushFollow(FOLLOW_45);
            rule__Do__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Do__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Do__Group_1__0"


    // $ANTLR start "rule__Do__Group_1__0__Impl"
    // InternalFortXTrans.g:7521:1: rule__Do__Group_1__0__Impl : ( 'also' ) ;
    public final void rule__Do__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7525:1: ( ( 'also' ) )
            // InternalFortXTrans.g:7526:1: ( 'also' )
            {
            // InternalFortXTrans.g:7526:1: ( 'also' )
            // InternalFortXTrans.g:7527:2: 'also'
            {
             before(grammarAccess.getDoAccess().getAlsoKeyword_1_0()); 
            match(input,33,FOLLOW_2); 
             after(grammarAccess.getDoAccess().getAlsoKeyword_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Do__Group_1__0__Impl"


    // $ANTLR start "rule__Do__Group_1__1"
    // InternalFortXTrans.g:7536:1: rule__Do__Group_1__1 : rule__Do__Group_1__1__Impl ;
    public final void rule__Do__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7540:1: ( rule__Do__Group_1__1__Impl )
            // InternalFortXTrans.g:7541:2: rule__Do__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Do__Group_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Do__Group_1__1"


    // $ANTLR start "rule__Do__Group_1__1__Impl"
    // InternalFortXTrans.g:7547:1: rule__Do__Group_1__1__Impl : ( ( rule__Do__DofsAssignment_1_1 ) ) ;
    public final void rule__Do__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7551:1: ( ( ( rule__Do__DofsAssignment_1_1 ) ) )
            // InternalFortXTrans.g:7552:1: ( ( rule__Do__DofsAssignment_1_1 ) )
            {
            // InternalFortXTrans.g:7552:1: ( ( rule__Do__DofsAssignment_1_1 ) )
            // InternalFortXTrans.g:7553:2: ( rule__Do__DofsAssignment_1_1 )
            {
             before(grammarAccess.getDoAccess().getDofsAssignment_1_1()); 
            // InternalFortXTrans.g:7554:2: ( rule__Do__DofsAssignment_1_1 )
            // InternalFortXTrans.g:7554:3: rule__Do__DofsAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Do__DofsAssignment_1_1();

            state._fsp--;


            }

             after(grammarAccess.getDoAccess().getDofsAssignment_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Do__Group_1__1__Impl"


    // $ANTLR start "rule__DoFront__Group__0"
    // InternalFortXTrans.g:7563:1: rule__DoFront__Group__0 : rule__DoFront__Group__0__Impl rule__DoFront__Group__1 ;
    public final void rule__DoFront__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7567:1: ( rule__DoFront__Group__0__Impl rule__DoFront__Group__1 )
            // InternalFortXTrans.g:7568:2: rule__DoFront__Group__0__Impl rule__DoFront__Group__1
            {
            pushFollow(FOLLOW_45);
            rule__DoFront__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DoFront__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DoFront__Group__0"


    // $ANTLR start "rule__DoFront__Group__0__Impl"
    // InternalFortXTrans.g:7575:1: rule__DoFront__Group__0__Impl : ( ( rule__DoFront__Group_0__0 )? ) ;
    public final void rule__DoFront__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7579:1: ( ( ( rule__DoFront__Group_0__0 )? ) )
            // InternalFortXTrans.g:7580:1: ( ( rule__DoFront__Group_0__0 )? )
            {
            // InternalFortXTrans.g:7580:1: ( ( rule__DoFront__Group_0__0 )? )
            // InternalFortXTrans.g:7581:2: ( rule__DoFront__Group_0__0 )?
            {
             before(grammarAccess.getDoFrontAccess().getGroup_0()); 
            // InternalFortXTrans.g:7582:2: ( rule__DoFront__Group_0__0 )?
            int alt68=2;
            int LA68_0 = input.LA(1);

            if ( (LA68_0==48) ) {
                alt68=1;
            }
            switch (alt68) {
                case 1 :
                    // InternalFortXTrans.g:7582:3: rule__DoFront__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__DoFront__Group_0__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getDoFrontAccess().getGroup_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DoFront__Group__0__Impl"


    // $ANTLR start "rule__DoFront__Group__1"
    // InternalFortXTrans.g:7590:1: rule__DoFront__Group__1 : rule__DoFront__Group__1__Impl rule__DoFront__Group__2 ;
    public final void rule__DoFront__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7594:1: ( rule__DoFront__Group__1__Impl rule__DoFront__Group__2 )
            // InternalFortXTrans.g:7595:2: rule__DoFront__Group__1__Impl rule__DoFront__Group__2
            {
            pushFollow(FOLLOW_45);
            rule__DoFront__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DoFront__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DoFront__Group__1"


    // $ANTLR start "rule__DoFront__Group__1__Impl"
    // InternalFortXTrans.g:7602:1: rule__DoFront__Group__1__Impl : ( ( rule__DoFront__AtomAssignment_1 )? ) ;
    public final void rule__DoFront__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7606:1: ( ( ( rule__DoFront__AtomAssignment_1 )? ) )
            // InternalFortXTrans.g:7607:1: ( ( rule__DoFront__AtomAssignment_1 )? )
            {
            // InternalFortXTrans.g:7607:1: ( ( rule__DoFront__AtomAssignment_1 )? )
            // InternalFortXTrans.g:7608:2: ( rule__DoFront__AtomAssignment_1 )?
            {
             before(grammarAccess.getDoFrontAccess().getAtomAssignment_1()); 
            // InternalFortXTrans.g:7609:2: ( rule__DoFront__AtomAssignment_1 )?
            int alt69=2;
            int LA69_0 = input.LA(1);

            if ( (LA69_0==41) ) {
                alt69=1;
            }
            switch (alt69) {
                case 1 :
                    // InternalFortXTrans.g:7609:3: rule__DoFront__AtomAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__DoFront__AtomAssignment_1();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getDoFrontAccess().getAtomAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DoFront__Group__1__Impl"


    // $ANTLR start "rule__DoFront__Group__2"
    // InternalFortXTrans.g:7617:1: rule__DoFront__Group__2 : rule__DoFront__Group__2__Impl rule__DoFront__Group__3 ;
    public final void rule__DoFront__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7621:1: ( rule__DoFront__Group__2__Impl rule__DoFront__Group__3 )
            // InternalFortXTrans.g:7622:2: rule__DoFront__Group__2__Impl rule__DoFront__Group__3
            {
            pushFollow(FOLLOW_32);
            rule__DoFront__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DoFront__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DoFront__Group__2"


    // $ANTLR start "rule__DoFront__Group__2__Impl"
    // InternalFortXTrans.g:7629:1: rule__DoFront__Group__2__Impl : ( 'do' ) ;
    public final void rule__DoFront__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7633:1: ( ( 'do' ) )
            // InternalFortXTrans.g:7634:1: ( 'do' )
            {
            // InternalFortXTrans.g:7634:1: ( 'do' )
            // InternalFortXTrans.g:7635:2: 'do'
            {
             before(grammarAccess.getDoFrontAccess().getDoKeyword_2()); 
            match(input,34,FOLLOW_2); 
             after(grammarAccess.getDoFrontAccess().getDoKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DoFront__Group__2__Impl"


    // $ANTLR start "rule__DoFront__Group__3"
    // InternalFortXTrans.g:7644:1: rule__DoFront__Group__3 : rule__DoFront__Group__3__Impl ;
    public final void rule__DoFront__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7648:1: ( rule__DoFront__Group__3__Impl )
            // InternalFortXTrans.g:7649:2: rule__DoFront__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__DoFront__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DoFront__Group__3"


    // $ANTLR start "rule__DoFront__Group__3__Impl"
    // InternalFortXTrans.g:7655:1: rule__DoFront__Group__3__Impl : ( ( rule__DoFront__BlockAssignment_3 ) ) ;
    public final void rule__DoFront__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7659:1: ( ( ( rule__DoFront__BlockAssignment_3 ) ) )
            // InternalFortXTrans.g:7660:1: ( ( rule__DoFront__BlockAssignment_3 ) )
            {
            // InternalFortXTrans.g:7660:1: ( ( rule__DoFront__BlockAssignment_3 ) )
            // InternalFortXTrans.g:7661:2: ( rule__DoFront__BlockAssignment_3 )
            {
             before(grammarAccess.getDoFrontAccess().getBlockAssignment_3()); 
            // InternalFortXTrans.g:7662:2: ( rule__DoFront__BlockAssignment_3 )
            // InternalFortXTrans.g:7662:3: rule__DoFront__BlockAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__DoFront__BlockAssignment_3();

            state._fsp--;


            }

             after(grammarAccess.getDoFrontAccess().getBlockAssignment_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DoFront__Group__3__Impl"


    // $ANTLR start "rule__DoFront__Group_0__0"
    // InternalFortXTrans.g:7671:1: rule__DoFront__Group_0__0 : rule__DoFront__Group_0__0__Impl rule__DoFront__Group_0__1 ;
    public final void rule__DoFront__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7675:1: ( rule__DoFront__Group_0__0__Impl rule__DoFront__Group_0__1 )
            // InternalFortXTrans.g:7676:2: rule__DoFront__Group_0__0__Impl rule__DoFront__Group_0__1
            {
            pushFollow(FOLLOW_32);
            rule__DoFront__Group_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DoFront__Group_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DoFront__Group_0__0"


    // $ANTLR start "rule__DoFront__Group_0__0__Impl"
    // InternalFortXTrans.g:7683:1: rule__DoFront__Group_0__0__Impl : ( ( rule__DoFront__AtAssignment_0_0 ) ) ;
    public final void rule__DoFront__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7687:1: ( ( ( rule__DoFront__AtAssignment_0_0 ) ) )
            // InternalFortXTrans.g:7688:1: ( ( rule__DoFront__AtAssignment_0_0 ) )
            {
            // InternalFortXTrans.g:7688:1: ( ( rule__DoFront__AtAssignment_0_0 ) )
            // InternalFortXTrans.g:7689:2: ( rule__DoFront__AtAssignment_0_0 )
            {
             before(grammarAccess.getDoFrontAccess().getAtAssignment_0_0()); 
            // InternalFortXTrans.g:7690:2: ( rule__DoFront__AtAssignment_0_0 )
            // InternalFortXTrans.g:7690:3: rule__DoFront__AtAssignment_0_0
            {
            pushFollow(FOLLOW_2);
            rule__DoFront__AtAssignment_0_0();

            state._fsp--;


            }

             after(grammarAccess.getDoFrontAccess().getAtAssignment_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DoFront__Group_0__0__Impl"


    // $ANTLR start "rule__DoFront__Group_0__1"
    // InternalFortXTrans.g:7698:1: rule__DoFront__Group_0__1 : rule__DoFront__Group_0__1__Impl ;
    public final void rule__DoFront__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7702:1: ( rule__DoFront__Group_0__1__Impl )
            // InternalFortXTrans.g:7703:2: rule__DoFront__Group_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__DoFront__Group_0__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DoFront__Group_0__1"


    // $ANTLR start "rule__DoFront__Group_0__1__Impl"
    // InternalFortXTrans.g:7709:1: rule__DoFront__Group_0__1__Impl : ( ( rule__DoFront__ExpAssignment_0_1 ) ) ;
    public final void rule__DoFront__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7713:1: ( ( ( rule__DoFront__ExpAssignment_0_1 ) ) )
            // InternalFortXTrans.g:7714:1: ( ( rule__DoFront__ExpAssignment_0_1 ) )
            {
            // InternalFortXTrans.g:7714:1: ( ( rule__DoFront__ExpAssignment_0_1 ) )
            // InternalFortXTrans.g:7715:2: ( rule__DoFront__ExpAssignment_0_1 )
            {
             before(grammarAccess.getDoFrontAccess().getExpAssignment_0_1()); 
            // InternalFortXTrans.g:7716:2: ( rule__DoFront__ExpAssignment_0_1 )
            // InternalFortXTrans.g:7716:3: rule__DoFront__ExpAssignment_0_1
            {
            pushFollow(FOLLOW_2);
            rule__DoFront__ExpAssignment_0_1();

            state._fsp--;


            }

             after(grammarAccess.getDoFrontAccess().getExpAssignment_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DoFront__Group_0__1__Impl"


    // $ANTLR start "rule__IdOrTuple__Group_1__0"
    // InternalFortXTrans.g:7725:1: rule__IdOrTuple__Group_1__0 : rule__IdOrTuple__Group_1__0__Impl rule__IdOrTuple__Group_1__1 ;
    public final void rule__IdOrTuple__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7729:1: ( rule__IdOrTuple__Group_1__0__Impl rule__IdOrTuple__Group_1__1 )
            // InternalFortXTrans.g:7730:2: rule__IdOrTuple__Group_1__0__Impl rule__IdOrTuple__Group_1__1
            {
            pushFollow(FOLLOW_25);
            rule__IdOrTuple__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__IdOrTuple__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IdOrTuple__Group_1__0"


    // $ANTLR start "rule__IdOrTuple__Group_1__0__Impl"
    // InternalFortXTrans.g:7737:1: rule__IdOrTuple__Group_1__0__Impl : ( '(' ) ;
    public final void rule__IdOrTuple__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7741:1: ( ( '(' ) )
            // InternalFortXTrans.g:7742:1: ( '(' )
            {
            // InternalFortXTrans.g:7742:1: ( '(' )
            // InternalFortXTrans.g:7743:2: '('
            {
             before(grammarAccess.getIdOrTupleAccess().getLeftParenthesisKeyword_1_0()); 
            match(input,21,FOLLOW_2); 
             after(grammarAccess.getIdOrTupleAccess().getLeftParenthesisKeyword_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IdOrTuple__Group_1__0__Impl"


    // $ANTLR start "rule__IdOrTuple__Group_1__1"
    // InternalFortXTrans.g:7752:1: rule__IdOrTuple__Group_1__1 : rule__IdOrTuple__Group_1__1__Impl rule__IdOrTuple__Group_1__2 ;
    public final void rule__IdOrTuple__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7756:1: ( rule__IdOrTuple__Group_1__1__Impl rule__IdOrTuple__Group_1__2 )
            // InternalFortXTrans.g:7757:2: rule__IdOrTuple__Group_1__1__Impl rule__IdOrTuple__Group_1__2
            {
            pushFollow(FOLLOW_22);
            rule__IdOrTuple__Group_1__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__IdOrTuple__Group_1__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IdOrTuple__Group_1__1"


    // $ANTLR start "rule__IdOrTuple__Group_1__1__Impl"
    // InternalFortXTrans.g:7764:1: rule__IdOrTuple__Group_1__1__Impl : ( ( rule__IdOrTuple__BidAssignment_1_1 ) ) ;
    public final void rule__IdOrTuple__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7768:1: ( ( ( rule__IdOrTuple__BidAssignment_1_1 ) ) )
            // InternalFortXTrans.g:7769:1: ( ( rule__IdOrTuple__BidAssignment_1_1 ) )
            {
            // InternalFortXTrans.g:7769:1: ( ( rule__IdOrTuple__BidAssignment_1_1 ) )
            // InternalFortXTrans.g:7770:2: ( rule__IdOrTuple__BidAssignment_1_1 )
            {
             before(grammarAccess.getIdOrTupleAccess().getBidAssignment_1_1()); 
            // InternalFortXTrans.g:7771:2: ( rule__IdOrTuple__BidAssignment_1_1 )
            // InternalFortXTrans.g:7771:3: rule__IdOrTuple__BidAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__IdOrTuple__BidAssignment_1_1();

            state._fsp--;


            }

             after(grammarAccess.getIdOrTupleAccess().getBidAssignment_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IdOrTuple__Group_1__1__Impl"


    // $ANTLR start "rule__IdOrTuple__Group_1__2"
    // InternalFortXTrans.g:7779:1: rule__IdOrTuple__Group_1__2 : rule__IdOrTuple__Group_1__2__Impl rule__IdOrTuple__Group_1__3 ;
    public final void rule__IdOrTuple__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7783:1: ( rule__IdOrTuple__Group_1__2__Impl rule__IdOrTuple__Group_1__3 )
            // InternalFortXTrans.g:7784:2: rule__IdOrTuple__Group_1__2__Impl rule__IdOrTuple__Group_1__3
            {
            pushFollow(FOLLOW_22);
            rule__IdOrTuple__Group_1__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__IdOrTuple__Group_1__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IdOrTuple__Group_1__2"


    // $ANTLR start "rule__IdOrTuple__Group_1__2__Impl"
    // InternalFortXTrans.g:7791:1: rule__IdOrTuple__Group_1__2__Impl : ( ( rule__IdOrTuple__Group_1_2__0 )* ) ;
    public final void rule__IdOrTuple__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7795:1: ( ( ( rule__IdOrTuple__Group_1_2__0 )* ) )
            // InternalFortXTrans.g:7796:1: ( ( rule__IdOrTuple__Group_1_2__0 )* )
            {
            // InternalFortXTrans.g:7796:1: ( ( rule__IdOrTuple__Group_1_2__0 )* )
            // InternalFortXTrans.g:7797:2: ( rule__IdOrTuple__Group_1_2__0 )*
            {
             before(grammarAccess.getIdOrTupleAccess().getGroup_1_2()); 
            // InternalFortXTrans.g:7798:2: ( rule__IdOrTuple__Group_1_2__0 )*
            loop70:
            do {
                int alt70=2;
                int LA70_0 = input.LA(1);

                if ( (LA70_0==17) ) {
                    alt70=1;
                }


                switch (alt70) {
            	case 1 :
            	    // InternalFortXTrans.g:7798:3: rule__IdOrTuple__Group_1_2__0
            	    {
            	    pushFollow(FOLLOW_15);
            	    rule__IdOrTuple__Group_1_2__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop70;
                }
            } while (true);

             after(grammarAccess.getIdOrTupleAccess().getGroup_1_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IdOrTuple__Group_1__2__Impl"


    // $ANTLR start "rule__IdOrTuple__Group_1__3"
    // InternalFortXTrans.g:7806:1: rule__IdOrTuple__Group_1__3 : rule__IdOrTuple__Group_1__3__Impl ;
    public final void rule__IdOrTuple__Group_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7810:1: ( rule__IdOrTuple__Group_1__3__Impl )
            // InternalFortXTrans.g:7811:2: rule__IdOrTuple__Group_1__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__IdOrTuple__Group_1__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IdOrTuple__Group_1__3"


    // $ANTLR start "rule__IdOrTuple__Group_1__3__Impl"
    // InternalFortXTrans.g:7817:1: rule__IdOrTuple__Group_1__3__Impl : ( ')' ) ;
    public final void rule__IdOrTuple__Group_1__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7821:1: ( ( ')' ) )
            // InternalFortXTrans.g:7822:1: ( ')' )
            {
            // InternalFortXTrans.g:7822:1: ( ')' )
            // InternalFortXTrans.g:7823:2: ')'
            {
             before(grammarAccess.getIdOrTupleAccess().getRightParenthesisKeyword_1_3()); 
            match(input,22,FOLLOW_2); 
             after(grammarAccess.getIdOrTupleAccess().getRightParenthesisKeyword_1_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IdOrTuple__Group_1__3__Impl"


    // $ANTLR start "rule__IdOrTuple__Group_1_2__0"
    // InternalFortXTrans.g:7833:1: rule__IdOrTuple__Group_1_2__0 : rule__IdOrTuple__Group_1_2__0__Impl rule__IdOrTuple__Group_1_2__1 ;
    public final void rule__IdOrTuple__Group_1_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7837:1: ( rule__IdOrTuple__Group_1_2__0__Impl rule__IdOrTuple__Group_1_2__1 )
            // InternalFortXTrans.g:7838:2: rule__IdOrTuple__Group_1_2__0__Impl rule__IdOrTuple__Group_1_2__1
            {
            pushFollow(FOLLOW_25);
            rule__IdOrTuple__Group_1_2__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__IdOrTuple__Group_1_2__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IdOrTuple__Group_1_2__0"


    // $ANTLR start "rule__IdOrTuple__Group_1_2__0__Impl"
    // InternalFortXTrans.g:7845:1: rule__IdOrTuple__Group_1_2__0__Impl : ( ',' ) ;
    public final void rule__IdOrTuple__Group_1_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7849:1: ( ( ',' ) )
            // InternalFortXTrans.g:7850:1: ( ',' )
            {
            // InternalFortXTrans.g:7850:1: ( ',' )
            // InternalFortXTrans.g:7851:2: ','
            {
             before(grammarAccess.getIdOrTupleAccess().getCommaKeyword_1_2_0()); 
            match(input,17,FOLLOW_2); 
             after(grammarAccess.getIdOrTupleAccess().getCommaKeyword_1_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IdOrTuple__Group_1_2__0__Impl"


    // $ANTLR start "rule__IdOrTuple__Group_1_2__1"
    // InternalFortXTrans.g:7860:1: rule__IdOrTuple__Group_1_2__1 : rule__IdOrTuple__Group_1_2__1__Impl ;
    public final void rule__IdOrTuple__Group_1_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7864:1: ( rule__IdOrTuple__Group_1_2__1__Impl )
            // InternalFortXTrans.g:7865:2: rule__IdOrTuple__Group_1_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__IdOrTuple__Group_1_2__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IdOrTuple__Group_1_2__1"


    // $ANTLR start "rule__IdOrTuple__Group_1_2__1__Impl"
    // InternalFortXTrans.g:7871:1: rule__IdOrTuple__Group_1_2__1__Impl : ( ( rule__IdOrTuple__BidAssignment_1_2_1 ) ) ;
    public final void rule__IdOrTuple__Group_1_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7875:1: ( ( ( rule__IdOrTuple__BidAssignment_1_2_1 ) ) )
            // InternalFortXTrans.g:7876:1: ( ( rule__IdOrTuple__BidAssignment_1_2_1 ) )
            {
            // InternalFortXTrans.g:7876:1: ( ( rule__IdOrTuple__BidAssignment_1_2_1 ) )
            // InternalFortXTrans.g:7877:2: ( rule__IdOrTuple__BidAssignment_1_2_1 )
            {
             before(grammarAccess.getIdOrTupleAccess().getBidAssignment_1_2_1()); 
            // InternalFortXTrans.g:7878:2: ( rule__IdOrTuple__BidAssignment_1_2_1 )
            // InternalFortXTrans.g:7878:3: rule__IdOrTuple__BidAssignment_1_2_1
            {
            pushFollow(FOLLOW_2);
            rule__IdOrTuple__BidAssignment_1_2_1();

            state._fsp--;


            }

             after(grammarAccess.getIdOrTupleAccess().getBidAssignment_1_2_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IdOrTuple__Group_1_2__1__Impl"


    // $ANTLR start "rule__IsType__Group__0"
    // InternalFortXTrans.g:7887:1: rule__IsType__Group__0 : rule__IsType__Group__0__Impl rule__IsType__Group__1 ;
    public final void rule__IsType__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7891:1: ( rule__IsType__Group__0__Impl rule__IsType__Group__1 )
            // InternalFortXTrans.g:7892:2: rule__IsType__Group__0__Impl rule__IsType__Group__1
            {
            pushFollow(FOLLOW_5);
            rule__IsType__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__IsType__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IsType__Group__0"


    // $ANTLR start "rule__IsType__Group__0__Impl"
    // InternalFortXTrans.g:7899:1: rule__IsType__Group__0__Impl : ( ':' ) ;
    public final void rule__IsType__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7903:1: ( ( ':' ) )
            // InternalFortXTrans.g:7904:1: ( ':' )
            {
            // InternalFortXTrans.g:7904:1: ( ':' )
            // InternalFortXTrans.g:7905:2: ':'
            {
             before(grammarAccess.getIsTypeAccess().getColonKeyword_0()); 
            match(input,23,FOLLOW_2); 
             after(grammarAccess.getIsTypeAccess().getColonKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IsType__Group__0__Impl"


    // $ANTLR start "rule__IsType__Group__1"
    // InternalFortXTrans.g:7914:1: rule__IsType__Group__1 : rule__IsType__Group__1__Impl ;
    public final void rule__IsType__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7918:1: ( rule__IsType__Group__1__Impl )
            // InternalFortXTrans.g:7919:2: rule__IsType__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__IsType__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IsType__Group__1"


    // $ANTLR start "rule__IsType__Group__1__Impl"
    // InternalFortXTrans.g:7925:1: rule__IsType__Group__1__Impl : ( ( rule__IsType__TypeAssignment_1 ) ) ;
    public final void rule__IsType__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7929:1: ( ( ( rule__IsType__TypeAssignment_1 ) ) )
            // InternalFortXTrans.g:7930:1: ( ( rule__IsType__TypeAssignment_1 ) )
            {
            // InternalFortXTrans.g:7930:1: ( ( rule__IsType__TypeAssignment_1 ) )
            // InternalFortXTrans.g:7931:2: ( rule__IsType__TypeAssignment_1 )
            {
             before(grammarAccess.getIsTypeAccess().getTypeAssignment_1()); 
            // InternalFortXTrans.g:7932:2: ( rule__IsType__TypeAssignment_1 )
            // InternalFortXTrans.g:7932:3: rule__IsType__TypeAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__IsType__TypeAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getIsTypeAccess().getTypeAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IsType__Group__1__Impl"


    // $ANTLR start "rule__FieldDecl__Group_0__0"
    // InternalFortXTrans.g:7941:1: rule__FieldDecl__Group_0__0 : rule__FieldDecl__Group_0__0__Impl rule__FieldDecl__Group_0__1 ;
    public final void rule__FieldDecl__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7945:1: ( rule__FieldDecl__Group_0__0__Impl rule__FieldDecl__Group_0__1 )
            // InternalFortXTrans.g:7946:2: rule__FieldDecl__Group_0__0__Impl rule__FieldDecl__Group_0__1
            {
            pushFollow(FOLLOW_57);
            rule__FieldDecl__Group_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__FieldDecl__Group_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_0__0"


    // $ANTLR start "rule__FieldDecl__Group_0__0__Impl"
    // InternalFortXTrans.g:7953:1: rule__FieldDecl__Group_0__0__Impl : ( ( rule__FieldDecl__PriAssignment_0_0 )? ) ;
    public final void rule__FieldDecl__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7957:1: ( ( ( rule__FieldDecl__PriAssignment_0_0 )? ) )
            // InternalFortXTrans.g:7958:1: ( ( rule__FieldDecl__PriAssignment_0_0 )? )
            {
            // InternalFortXTrans.g:7958:1: ( ( rule__FieldDecl__PriAssignment_0_0 )? )
            // InternalFortXTrans.g:7959:2: ( rule__FieldDecl__PriAssignment_0_0 )?
            {
             before(grammarAccess.getFieldDeclAccess().getPriAssignment_0_0()); 
            // InternalFortXTrans.g:7960:2: ( rule__FieldDecl__PriAssignment_0_0 )?
            int alt71=2;
            int LA71_0 = input.LA(1);

            if ( (LA71_0==39) ) {
                alt71=1;
            }
            switch (alt71) {
                case 1 :
                    // InternalFortXTrans.g:7960:3: rule__FieldDecl__PriAssignment_0_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__FieldDecl__PriAssignment_0_0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getFieldDeclAccess().getPriAssignment_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_0__0__Impl"


    // $ANTLR start "rule__FieldDecl__Group_0__1"
    // InternalFortXTrans.g:7968:1: rule__FieldDecl__Group_0__1 : rule__FieldDecl__Group_0__1__Impl rule__FieldDecl__Group_0__2 ;
    public final void rule__FieldDecl__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7972:1: ( rule__FieldDecl__Group_0__1__Impl rule__FieldDecl__Group_0__2 )
            // InternalFortXTrans.g:7973:2: rule__FieldDecl__Group_0__1__Impl rule__FieldDecl__Group_0__2
            {
            pushFollow(FOLLOW_57);
            rule__FieldDecl__Group_0__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__FieldDecl__Group_0__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_0__1"


    // $ANTLR start "rule__FieldDecl__Group_0__1__Impl"
    // InternalFortXTrans.g:7980:1: rule__FieldDecl__Group_0__1__Impl : ( ( rule__FieldDecl__MutAssignment_0_1 )? ) ;
    public final void rule__FieldDecl__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7984:1: ( ( ( rule__FieldDecl__MutAssignment_0_1 )? ) )
            // InternalFortXTrans.g:7985:1: ( ( rule__FieldDecl__MutAssignment_0_1 )? )
            {
            // InternalFortXTrans.g:7985:1: ( ( rule__FieldDecl__MutAssignment_0_1 )? )
            // InternalFortXTrans.g:7986:2: ( rule__FieldDecl__MutAssignment_0_1 )?
            {
             before(grammarAccess.getFieldDeclAccess().getMutAssignment_0_1()); 
            // InternalFortXTrans.g:7987:2: ( rule__FieldDecl__MutAssignment_0_1 )?
            int alt72=2;
            int LA72_0 = input.LA(1);

            if ( (LA72_0==50) ) {
                alt72=1;
            }
            switch (alt72) {
                case 1 :
                    // InternalFortXTrans.g:7987:3: rule__FieldDecl__MutAssignment_0_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__FieldDecl__MutAssignment_0_1();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getFieldDeclAccess().getMutAssignment_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_0__1__Impl"


    // $ANTLR start "rule__FieldDecl__Group_0__2"
    // InternalFortXTrans.g:7995:1: rule__FieldDecl__Group_0__2 : rule__FieldDecl__Group_0__2__Impl rule__FieldDecl__Group_0__3 ;
    public final void rule__FieldDecl__Group_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7999:1: ( rule__FieldDecl__Group_0__2__Impl rule__FieldDecl__Group_0__3 )
            // InternalFortXTrans.g:8000:2: rule__FieldDecl__Group_0__2__Impl rule__FieldDecl__Group_0__3
            {
            pushFollow(FOLLOW_58);
            rule__FieldDecl__Group_0__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__FieldDecl__Group_0__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_0__2"


    // $ANTLR start "rule__FieldDecl__Group_0__2__Impl"
    // InternalFortXTrans.g:8007:1: rule__FieldDecl__Group_0__2__Impl : ( ( rule__FieldDecl__VarsAssignment_0_2 ) ) ;
    public final void rule__FieldDecl__Group_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8011:1: ( ( ( rule__FieldDecl__VarsAssignment_0_2 ) ) )
            // InternalFortXTrans.g:8012:1: ( ( rule__FieldDecl__VarsAssignment_0_2 ) )
            {
            // InternalFortXTrans.g:8012:1: ( ( rule__FieldDecl__VarsAssignment_0_2 ) )
            // InternalFortXTrans.g:8013:2: ( rule__FieldDecl__VarsAssignment_0_2 )
            {
             before(grammarAccess.getFieldDeclAccess().getVarsAssignment_0_2()); 
            // InternalFortXTrans.g:8014:2: ( rule__FieldDecl__VarsAssignment_0_2 )
            // InternalFortXTrans.g:8014:3: rule__FieldDecl__VarsAssignment_0_2
            {
            pushFollow(FOLLOW_2);
            rule__FieldDecl__VarsAssignment_0_2();

            state._fsp--;


            }

             after(grammarAccess.getFieldDeclAccess().getVarsAssignment_0_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_0__2__Impl"


    // $ANTLR start "rule__FieldDecl__Group_0__3"
    // InternalFortXTrans.g:8022:1: rule__FieldDecl__Group_0__3 : rule__FieldDecl__Group_0__3__Impl ;
    public final void rule__FieldDecl__Group_0__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8026:1: ( rule__FieldDecl__Group_0__3__Impl )
            // InternalFortXTrans.g:8027:2: rule__FieldDecl__Group_0__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FieldDecl__Group_0__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_0__3"


    // $ANTLR start "rule__FieldDecl__Group_0__3__Impl"
    // InternalFortXTrans.g:8033:1: rule__FieldDecl__Group_0__3__Impl : ( ( rule__FieldDecl__InitAssignment_0_3 ) ) ;
    public final void rule__FieldDecl__Group_0__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8037:1: ( ( ( rule__FieldDecl__InitAssignment_0_3 ) ) )
            // InternalFortXTrans.g:8038:1: ( ( rule__FieldDecl__InitAssignment_0_3 ) )
            {
            // InternalFortXTrans.g:8038:1: ( ( rule__FieldDecl__InitAssignment_0_3 ) )
            // InternalFortXTrans.g:8039:2: ( rule__FieldDecl__InitAssignment_0_3 )
            {
             before(grammarAccess.getFieldDeclAccess().getInitAssignment_0_3()); 
            // InternalFortXTrans.g:8040:2: ( rule__FieldDecl__InitAssignment_0_3 )
            // InternalFortXTrans.g:8040:3: rule__FieldDecl__InitAssignment_0_3
            {
            pushFollow(FOLLOW_2);
            rule__FieldDecl__InitAssignment_0_3();

            state._fsp--;


            }

             after(grammarAccess.getFieldDeclAccess().getInitAssignment_0_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_0__3__Impl"


    // $ANTLR start "rule__FieldDecl__Group_1__0"
    // InternalFortXTrans.g:8049:1: rule__FieldDecl__Group_1__0 : rule__FieldDecl__Group_1__0__Impl rule__FieldDecl__Group_1__1 ;
    public final void rule__FieldDecl__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8053:1: ( rule__FieldDecl__Group_1__0__Impl rule__FieldDecl__Group_1__1 )
            // InternalFortXTrans.g:8054:2: rule__FieldDecl__Group_1__0__Impl rule__FieldDecl__Group_1__1
            {
            pushFollow(FOLLOW_46);
            rule__FieldDecl__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__FieldDecl__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_1__0"


    // $ANTLR start "rule__FieldDecl__Group_1__0__Impl"
    // InternalFortXTrans.g:8061:1: rule__FieldDecl__Group_1__0__Impl : ( ( rule__FieldDecl__PriAssignment_1_0 )? ) ;
    public final void rule__FieldDecl__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8065:1: ( ( ( rule__FieldDecl__PriAssignment_1_0 )? ) )
            // InternalFortXTrans.g:8066:1: ( ( rule__FieldDecl__PriAssignment_1_0 )? )
            {
            // InternalFortXTrans.g:8066:1: ( ( rule__FieldDecl__PriAssignment_1_0 )? )
            // InternalFortXTrans.g:8067:2: ( rule__FieldDecl__PriAssignment_1_0 )?
            {
             before(grammarAccess.getFieldDeclAccess().getPriAssignment_1_0()); 
            // InternalFortXTrans.g:8068:2: ( rule__FieldDecl__PriAssignment_1_0 )?
            int alt73=2;
            int LA73_0 = input.LA(1);

            if ( (LA73_0==39) ) {
                alt73=1;
            }
            switch (alt73) {
                case 1 :
                    // InternalFortXTrans.g:8068:3: rule__FieldDecl__PriAssignment_1_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__FieldDecl__PriAssignment_1_0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getFieldDeclAccess().getPriAssignment_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_1__0__Impl"


    // $ANTLR start "rule__FieldDecl__Group_1__1"
    // InternalFortXTrans.g:8076:1: rule__FieldDecl__Group_1__1 : rule__FieldDecl__Group_1__1__Impl rule__FieldDecl__Group_1__2 ;
    public final void rule__FieldDecl__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8080:1: ( rule__FieldDecl__Group_1__1__Impl rule__FieldDecl__Group_1__2 )
            // InternalFortXTrans.g:8081:2: rule__FieldDecl__Group_1__1__Impl rule__FieldDecl__Group_1__2
            {
            pushFollow(FOLLOW_59);
            rule__FieldDecl__Group_1__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__FieldDecl__Group_1__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_1__1"


    // $ANTLR start "rule__FieldDecl__Group_1__1__Impl"
    // InternalFortXTrans.g:8088:1: rule__FieldDecl__Group_1__1__Impl : ( ( rule__FieldDecl__IdtupAssignment_1_1 ) ) ;
    public final void rule__FieldDecl__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8092:1: ( ( ( rule__FieldDecl__IdtupAssignment_1_1 ) ) )
            // InternalFortXTrans.g:8093:1: ( ( rule__FieldDecl__IdtupAssignment_1_1 ) )
            {
            // InternalFortXTrans.g:8093:1: ( ( rule__FieldDecl__IdtupAssignment_1_1 ) )
            // InternalFortXTrans.g:8094:2: ( rule__FieldDecl__IdtupAssignment_1_1 )
            {
             before(grammarAccess.getFieldDeclAccess().getIdtupAssignment_1_1()); 
            // InternalFortXTrans.g:8095:2: ( rule__FieldDecl__IdtupAssignment_1_1 )
            // InternalFortXTrans.g:8095:3: rule__FieldDecl__IdtupAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__FieldDecl__IdtupAssignment_1_1();

            state._fsp--;


            }

             after(grammarAccess.getFieldDeclAccess().getIdtupAssignment_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_1__1__Impl"


    // $ANTLR start "rule__FieldDecl__Group_1__2"
    // InternalFortXTrans.g:8103:1: rule__FieldDecl__Group_1__2 : rule__FieldDecl__Group_1__2__Impl rule__FieldDecl__Group_1__3 ;
    public final void rule__FieldDecl__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8107:1: ( rule__FieldDecl__Group_1__2__Impl rule__FieldDecl__Group_1__3 )
            // InternalFortXTrans.g:8108:2: rule__FieldDecl__Group_1__2__Impl rule__FieldDecl__Group_1__3
            {
            pushFollow(FOLLOW_60);
            rule__FieldDecl__Group_1__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__FieldDecl__Group_1__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_1__2"


    // $ANTLR start "rule__FieldDecl__Group_1__2__Impl"
    // InternalFortXTrans.g:8115:1: rule__FieldDecl__Group_1__2__Impl : ( '=' ) ;
    public final void rule__FieldDecl__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8119:1: ( ( '=' ) )
            // InternalFortXTrans.g:8120:1: ( '=' )
            {
            // InternalFortXTrans.g:8120:1: ( '=' )
            // InternalFortXTrans.g:8121:2: '='
            {
             before(grammarAccess.getFieldDeclAccess().getEqualsSignKeyword_1_2()); 
            match(input,35,FOLLOW_2); 
             after(grammarAccess.getFieldDeclAccess().getEqualsSignKeyword_1_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_1__2__Impl"


    // $ANTLR start "rule__FieldDecl__Group_1__3"
    // InternalFortXTrans.g:8130:1: rule__FieldDecl__Group_1__3 : rule__FieldDecl__Group_1__3__Impl ;
    public final void rule__FieldDecl__Group_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8134:1: ( rule__FieldDecl__Group_1__3__Impl )
            // InternalFortXTrans.g:8135:2: rule__FieldDecl__Group_1__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FieldDecl__Group_1__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_1__3"


    // $ANTLR start "rule__FieldDecl__Group_1__3__Impl"
    // InternalFortXTrans.g:8141:1: rule__FieldDecl__Group_1__3__Impl : ( ( rule__FieldDecl__LitTupAssignment_1_3 ) ) ;
    public final void rule__FieldDecl__Group_1__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8145:1: ( ( ( rule__FieldDecl__LitTupAssignment_1_3 ) ) )
            // InternalFortXTrans.g:8146:1: ( ( rule__FieldDecl__LitTupAssignment_1_3 ) )
            {
            // InternalFortXTrans.g:8146:1: ( ( rule__FieldDecl__LitTupAssignment_1_3 ) )
            // InternalFortXTrans.g:8147:2: ( rule__FieldDecl__LitTupAssignment_1_3 )
            {
             before(grammarAccess.getFieldDeclAccess().getLitTupAssignment_1_3()); 
            // InternalFortXTrans.g:8148:2: ( rule__FieldDecl__LitTupAssignment_1_3 )
            // InternalFortXTrans.g:8148:3: rule__FieldDecl__LitTupAssignment_1_3
            {
            pushFollow(FOLLOW_2);
            rule__FieldDecl__LitTupAssignment_1_3();

            state._fsp--;


            }

             after(grammarAccess.getFieldDeclAccess().getLitTupAssignment_1_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_1__3__Impl"


    // $ANTLR start "rule__FieldDecl__Group_2__0"
    // InternalFortXTrans.g:8157:1: rule__FieldDecl__Group_2__0 : rule__FieldDecl__Group_2__0__Impl rule__FieldDecl__Group_2__1 ;
    public final void rule__FieldDecl__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8161:1: ( rule__FieldDecl__Group_2__0__Impl rule__FieldDecl__Group_2__1 )
            // InternalFortXTrans.g:8162:2: rule__FieldDecl__Group_2__0__Impl rule__FieldDecl__Group_2__1
            {
            pushFollow(FOLLOW_57);
            rule__FieldDecl__Group_2__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__FieldDecl__Group_2__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_2__0"


    // $ANTLR start "rule__FieldDecl__Group_2__0__Impl"
    // InternalFortXTrans.g:8169:1: rule__FieldDecl__Group_2__0__Impl : ( ( rule__FieldDecl__PriAssignment_2_0 )? ) ;
    public final void rule__FieldDecl__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8173:1: ( ( ( rule__FieldDecl__PriAssignment_2_0 )? ) )
            // InternalFortXTrans.g:8174:1: ( ( rule__FieldDecl__PriAssignment_2_0 )? )
            {
            // InternalFortXTrans.g:8174:1: ( ( rule__FieldDecl__PriAssignment_2_0 )? )
            // InternalFortXTrans.g:8175:2: ( rule__FieldDecl__PriAssignment_2_0 )?
            {
             before(grammarAccess.getFieldDeclAccess().getPriAssignment_2_0()); 
            // InternalFortXTrans.g:8176:2: ( rule__FieldDecl__PriAssignment_2_0 )?
            int alt74=2;
            int LA74_0 = input.LA(1);

            if ( (LA74_0==39) ) {
                alt74=1;
            }
            switch (alt74) {
                case 1 :
                    // InternalFortXTrans.g:8176:3: rule__FieldDecl__PriAssignment_2_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__FieldDecl__PriAssignment_2_0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getFieldDeclAccess().getPriAssignment_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_2__0__Impl"


    // $ANTLR start "rule__FieldDecl__Group_2__1"
    // InternalFortXTrans.g:8184:1: rule__FieldDecl__Group_2__1 : rule__FieldDecl__Group_2__1__Impl rule__FieldDecl__Group_2__2 ;
    public final void rule__FieldDecl__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8188:1: ( rule__FieldDecl__Group_2__1__Impl rule__FieldDecl__Group_2__2 )
            // InternalFortXTrans.g:8189:2: rule__FieldDecl__Group_2__1__Impl rule__FieldDecl__Group_2__2
            {
            pushFollow(FOLLOW_57);
            rule__FieldDecl__Group_2__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__FieldDecl__Group_2__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_2__1"


    // $ANTLR start "rule__FieldDecl__Group_2__1__Impl"
    // InternalFortXTrans.g:8196:1: rule__FieldDecl__Group_2__1__Impl : ( ( rule__FieldDecl__MutAssignment_2_1 )? ) ;
    public final void rule__FieldDecl__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8200:1: ( ( ( rule__FieldDecl__MutAssignment_2_1 )? ) )
            // InternalFortXTrans.g:8201:1: ( ( rule__FieldDecl__MutAssignment_2_1 )? )
            {
            // InternalFortXTrans.g:8201:1: ( ( rule__FieldDecl__MutAssignment_2_1 )? )
            // InternalFortXTrans.g:8202:2: ( rule__FieldDecl__MutAssignment_2_1 )?
            {
             before(grammarAccess.getFieldDeclAccess().getMutAssignment_2_1()); 
            // InternalFortXTrans.g:8203:2: ( rule__FieldDecl__MutAssignment_2_1 )?
            int alt75=2;
            int LA75_0 = input.LA(1);

            if ( (LA75_0==50) ) {
                alt75=1;
            }
            switch (alt75) {
                case 1 :
                    // InternalFortXTrans.g:8203:3: rule__FieldDecl__MutAssignment_2_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__FieldDecl__MutAssignment_2_1();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getFieldDeclAccess().getMutAssignment_2_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_2__1__Impl"


    // $ANTLR start "rule__FieldDecl__Group_2__2"
    // InternalFortXTrans.g:8211:1: rule__FieldDecl__Group_2__2 : rule__FieldDecl__Group_2__2__Impl rule__FieldDecl__Group_2__3 ;
    public final void rule__FieldDecl__Group_2__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8215:1: ( rule__FieldDecl__Group_2__2__Impl rule__FieldDecl__Group_2__3 )
            // InternalFortXTrans.g:8216:2: rule__FieldDecl__Group_2__2__Impl rule__FieldDecl__Group_2__3
            {
            pushFollow(FOLLOW_26);
            rule__FieldDecl__Group_2__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__FieldDecl__Group_2__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_2__2"


    // $ANTLR start "rule__FieldDecl__Group_2__2__Impl"
    // InternalFortXTrans.g:8223:1: rule__FieldDecl__Group_2__2__Impl : ( ( rule__FieldDecl__IdtupAssignment_2_2 ) ) ;
    public final void rule__FieldDecl__Group_2__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8227:1: ( ( ( rule__FieldDecl__IdtupAssignment_2_2 ) ) )
            // InternalFortXTrans.g:8228:1: ( ( rule__FieldDecl__IdtupAssignment_2_2 ) )
            {
            // InternalFortXTrans.g:8228:1: ( ( rule__FieldDecl__IdtupAssignment_2_2 ) )
            // InternalFortXTrans.g:8229:2: ( rule__FieldDecl__IdtupAssignment_2_2 )
            {
             before(grammarAccess.getFieldDeclAccess().getIdtupAssignment_2_2()); 
            // InternalFortXTrans.g:8230:2: ( rule__FieldDecl__IdtupAssignment_2_2 )
            // InternalFortXTrans.g:8230:3: rule__FieldDecl__IdtupAssignment_2_2
            {
            pushFollow(FOLLOW_2);
            rule__FieldDecl__IdtupAssignment_2_2();

            state._fsp--;


            }

             after(grammarAccess.getFieldDeclAccess().getIdtupAssignment_2_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_2__2__Impl"


    // $ANTLR start "rule__FieldDecl__Group_2__3"
    // InternalFortXTrans.g:8238:1: rule__FieldDecl__Group_2__3 : rule__FieldDecl__Group_2__3__Impl rule__FieldDecl__Group_2__4 ;
    public final void rule__FieldDecl__Group_2__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8242:1: ( rule__FieldDecl__Group_2__3__Impl rule__FieldDecl__Group_2__4 )
            // InternalFortXTrans.g:8243:2: rule__FieldDecl__Group_2__3__Impl rule__FieldDecl__Group_2__4
            {
            pushFollow(FOLLOW_5);
            rule__FieldDecl__Group_2__3__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__FieldDecl__Group_2__4();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_2__3"


    // $ANTLR start "rule__FieldDecl__Group_2__3__Impl"
    // InternalFortXTrans.g:8250:1: rule__FieldDecl__Group_2__3__Impl : ( ':' ) ;
    public final void rule__FieldDecl__Group_2__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8254:1: ( ( ':' ) )
            // InternalFortXTrans.g:8255:1: ( ':' )
            {
            // InternalFortXTrans.g:8255:1: ( ':' )
            // InternalFortXTrans.g:8256:2: ':'
            {
             before(grammarAccess.getFieldDeclAccess().getColonKeyword_2_3()); 
            match(input,23,FOLLOW_2); 
             after(grammarAccess.getFieldDeclAccess().getColonKeyword_2_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_2__3__Impl"


    // $ANTLR start "rule__FieldDecl__Group_2__4"
    // InternalFortXTrans.g:8265:1: rule__FieldDecl__Group_2__4 : rule__FieldDecl__Group_2__4__Impl rule__FieldDecl__Group_2__5 ;
    public final void rule__FieldDecl__Group_2__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8269:1: ( rule__FieldDecl__Group_2__4__Impl rule__FieldDecl__Group_2__5 )
            // InternalFortXTrans.g:8270:2: rule__FieldDecl__Group_2__4__Impl rule__FieldDecl__Group_2__5
            {
            pushFollow(FOLLOW_17);
            rule__FieldDecl__Group_2__4__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__FieldDecl__Group_2__5();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_2__4"


    // $ANTLR start "rule__FieldDecl__Group_2__4__Impl"
    // InternalFortXTrans.g:8277:1: rule__FieldDecl__Group_2__4__Impl : ( ( rule__FieldDecl__TypeAssignment_2_4 ) ) ;
    public final void rule__FieldDecl__Group_2__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8281:1: ( ( ( rule__FieldDecl__TypeAssignment_2_4 ) ) )
            // InternalFortXTrans.g:8282:1: ( ( rule__FieldDecl__TypeAssignment_2_4 ) )
            {
            // InternalFortXTrans.g:8282:1: ( ( rule__FieldDecl__TypeAssignment_2_4 ) )
            // InternalFortXTrans.g:8283:2: ( rule__FieldDecl__TypeAssignment_2_4 )
            {
             before(grammarAccess.getFieldDeclAccess().getTypeAssignment_2_4()); 
            // InternalFortXTrans.g:8284:2: ( rule__FieldDecl__TypeAssignment_2_4 )
            // InternalFortXTrans.g:8284:3: rule__FieldDecl__TypeAssignment_2_4
            {
            pushFollow(FOLLOW_2);
            rule__FieldDecl__TypeAssignment_2_4();

            state._fsp--;


            }

             after(grammarAccess.getFieldDeclAccess().getTypeAssignment_2_4()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_2__4__Impl"


    // $ANTLR start "rule__FieldDecl__Group_2__5"
    // InternalFortXTrans.g:8292:1: rule__FieldDecl__Group_2__5 : rule__FieldDecl__Group_2__5__Impl rule__FieldDecl__Group_2__6 ;
    public final void rule__FieldDecl__Group_2__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8296:1: ( rule__FieldDecl__Group_2__5__Impl rule__FieldDecl__Group_2__6 )
            // InternalFortXTrans.g:8297:2: rule__FieldDecl__Group_2__5__Impl rule__FieldDecl__Group_2__6
            {
            pushFollow(FOLLOW_58);
            rule__FieldDecl__Group_2__5__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__FieldDecl__Group_2__6();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_2__5"


    // $ANTLR start "rule__FieldDecl__Group_2__5__Impl"
    // InternalFortXTrans.g:8304:1: rule__FieldDecl__Group_2__5__Impl : ( RULE_DOTS ) ;
    public final void rule__FieldDecl__Group_2__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8308:1: ( ( RULE_DOTS ) )
            // InternalFortXTrans.g:8309:1: ( RULE_DOTS )
            {
            // InternalFortXTrans.g:8309:1: ( RULE_DOTS )
            // InternalFortXTrans.g:8310:2: RULE_DOTS
            {
             before(grammarAccess.getFieldDeclAccess().getDOTSTerminalRuleCall_2_5()); 
            match(input,RULE_DOTS,FOLLOW_2); 
             after(grammarAccess.getFieldDeclAccess().getDOTSTerminalRuleCall_2_5()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_2__5__Impl"


    // $ANTLR start "rule__FieldDecl__Group_2__6"
    // InternalFortXTrans.g:8319:1: rule__FieldDecl__Group_2__6 : rule__FieldDecl__Group_2__6__Impl ;
    public final void rule__FieldDecl__Group_2__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8323:1: ( rule__FieldDecl__Group_2__6__Impl )
            // InternalFortXTrans.g:8324:2: rule__FieldDecl__Group_2__6__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FieldDecl__Group_2__6__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_2__6"


    // $ANTLR start "rule__FieldDecl__Group_2__6__Impl"
    // InternalFortXTrans.g:8330:1: rule__FieldDecl__Group_2__6__Impl : ( ( rule__FieldDecl__InitAssignment_2_6 ) ) ;
    public final void rule__FieldDecl__Group_2__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8334:1: ( ( ( rule__FieldDecl__InitAssignment_2_6 ) ) )
            // InternalFortXTrans.g:8335:1: ( ( rule__FieldDecl__InitAssignment_2_6 ) )
            {
            // InternalFortXTrans.g:8335:1: ( ( rule__FieldDecl__InitAssignment_2_6 ) )
            // InternalFortXTrans.g:8336:2: ( rule__FieldDecl__InitAssignment_2_6 )
            {
             before(grammarAccess.getFieldDeclAccess().getInitAssignment_2_6()); 
            // InternalFortXTrans.g:8337:2: ( rule__FieldDecl__InitAssignment_2_6 )
            // InternalFortXTrans.g:8337:3: rule__FieldDecl__InitAssignment_2_6
            {
            pushFollow(FOLLOW_2);
            rule__FieldDecl__InitAssignment_2_6();

            state._fsp--;


            }

             after(grammarAccess.getFieldDeclAccess().getInitAssignment_2_6()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_2__6__Impl"


    // $ANTLR start "rule__FieldDecl__Group_3__0"
    // InternalFortXTrans.g:8346:1: rule__FieldDecl__Group_3__0 : rule__FieldDecl__Group_3__0__Impl rule__FieldDecl__Group_3__1 ;
    public final void rule__FieldDecl__Group_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8350:1: ( rule__FieldDecl__Group_3__0__Impl rule__FieldDecl__Group_3__1 )
            // InternalFortXTrans.g:8351:2: rule__FieldDecl__Group_3__0__Impl rule__FieldDecl__Group_3__1
            {
            pushFollow(FOLLOW_61);
            rule__FieldDecl__Group_3__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__FieldDecl__Group_3__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_3__0"


    // $ANTLR start "rule__FieldDecl__Group_3__0__Impl"
    // InternalFortXTrans.g:8358:1: rule__FieldDecl__Group_3__0__Impl : ( ( rule__FieldDecl__PriAssignment_3_0 )? ) ;
    public final void rule__FieldDecl__Group_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8362:1: ( ( ( rule__FieldDecl__PriAssignment_3_0 )? ) )
            // InternalFortXTrans.g:8363:1: ( ( rule__FieldDecl__PriAssignment_3_0 )? )
            {
            // InternalFortXTrans.g:8363:1: ( ( rule__FieldDecl__PriAssignment_3_0 )? )
            // InternalFortXTrans.g:8364:2: ( rule__FieldDecl__PriAssignment_3_0 )?
            {
             before(grammarAccess.getFieldDeclAccess().getPriAssignment_3_0()); 
            // InternalFortXTrans.g:8365:2: ( rule__FieldDecl__PriAssignment_3_0 )?
            int alt76=2;
            int LA76_0 = input.LA(1);

            if ( (LA76_0==39) ) {
                alt76=1;
            }
            switch (alt76) {
                case 1 :
                    // InternalFortXTrans.g:8365:3: rule__FieldDecl__PriAssignment_3_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__FieldDecl__PriAssignment_3_0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getFieldDeclAccess().getPriAssignment_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_3__0__Impl"


    // $ANTLR start "rule__FieldDecl__Group_3__1"
    // InternalFortXTrans.g:8373:1: rule__FieldDecl__Group_3__1 : rule__FieldDecl__Group_3__1__Impl rule__FieldDecl__Group_3__2 ;
    public final void rule__FieldDecl__Group_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8377:1: ( rule__FieldDecl__Group_3__1__Impl rule__FieldDecl__Group_3__2 )
            // InternalFortXTrans.g:8378:2: rule__FieldDecl__Group_3__1__Impl rule__FieldDecl__Group_3__2
            {
            pushFollow(FOLLOW_61);
            rule__FieldDecl__Group_3__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__FieldDecl__Group_3__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_3__1"


    // $ANTLR start "rule__FieldDecl__Group_3__1__Impl"
    // InternalFortXTrans.g:8385:1: rule__FieldDecl__Group_3__1__Impl : ( ( rule__FieldDecl__MutAssignment_3_1 )? ) ;
    public final void rule__FieldDecl__Group_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8389:1: ( ( ( rule__FieldDecl__MutAssignment_3_1 )? ) )
            // InternalFortXTrans.g:8390:1: ( ( rule__FieldDecl__MutAssignment_3_1 )? )
            {
            // InternalFortXTrans.g:8390:1: ( ( rule__FieldDecl__MutAssignment_3_1 )? )
            // InternalFortXTrans.g:8391:2: ( rule__FieldDecl__MutAssignment_3_1 )?
            {
             before(grammarAccess.getFieldDeclAccess().getMutAssignment_3_1()); 
            // InternalFortXTrans.g:8392:2: ( rule__FieldDecl__MutAssignment_3_1 )?
            int alt77=2;
            int LA77_0 = input.LA(1);

            if ( (LA77_0==50) ) {
                alt77=1;
            }
            switch (alt77) {
                case 1 :
                    // InternalFortXTrans.g:8392:3: rule__FieldDecl__MutAssignment_3_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__FieldDecl__MutAssignment_3_1();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getFieldDeclAccess().getMutAssignment_3_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_3__1__Impl"


    // $ANTLR start "rule__FieldDecl__Group_3__2"
    // InternalFortXTrans.g:8400:1: rule__FieldDecl__Group_3__2 : rule__FieldDecl__Group_3__2__Impl rule__FieldDecl__Group_3__3 ;
    public final void rule__FieldDecl__Group_3__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8404:1: ( rule__FieldDecl__Group_3__2__Impl rule__FieldDecl__Group_3__3 )
            // InternalFortXTrans.g:8405:2: rule__FieldDecl__Group_3__2__Impl rule__FieldDecl__Group_3__3
            {
            pushFollow(FOLLOW_26);
            rule__FieldDecl__Group_3__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__FieldDecl__Group_3__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_3__2"


    // $ANTLR start "rule__FieldDecl__Group_3__2__Impl"
    // InternalFortXTrans.g:8412:1: rule__FieldDecl__Group_3__2__Impl : ( ( rule__FieldDecl__IdtupAssignment_3_2 ) ) ;
    public final void rule__FieldDecl__Group_3__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8416:1: ( ( ( rule__FieldDecl__IdtupAssignment_3_2 ) ) )
            // InternalFortXTrans.g:8417:1: ( ( rule__FieldDecl__IdtupAssignment_3_2 ) )
            {
            // InternalFortXTrans.g:8417:1: ( ( rule__FieldDecl__IdtupAssignment_3_2 ) )
            // InternalFortXTrans.g:8418:2: ( rule__FieldDecl__IdtupAssignment_3_2 )
            {
             before(grammarAccess.getFieldDeclAccess().getIdtupAssignment_3_2()); 
            // InternalFortXTrans.g:8419:2: ( rule__FieldDecl__IdtupAssignment_3_2 )
            // InternalFortXTrans.g:8419:3: rule__FieldDecl__IdtupAssignment_3_2
            {
            pushFollow(FOLLOW_2);
            rule__FieldDecl__IdtupAssignment_3_2();

            state._fsp--;


            }

             after(grammarAccess.getFieldDeclAccess().getIdtupAssignment_3_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_3__2__Impl"


    // $ANTLR start "rule__FieldDecl__Group_3__3"
    // InternalFortXTrans.g:8427:1: rule__FieldDecl__Group_3__3 : rule__FieldDecl__Group_3__3__Impl rule__FieldDecl__Group_3__4 ;
    public final void rule__FieldDecl__Group_3__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8431:1: ( rule__FieldDecl__Group_3__3__Impl rule__FieldDecl__Group_3__4 )
            // InternalFortXTrans.g:8432:2: rule__FieldDecl__Group_3__3__Impl rule__FieldDecl__Group_3__4
            {
            pushFollow(FOLLOW_27);
            rule__FieldDecl__Group_3__3__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__FieldDecl__Group_3__4();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_3__3"


    // $ANTLR start "rule__FieldDecl__Group_3__3__Impl"
    // InternalFortXTrans.g:8439:1: rule__FieldDecl__Group_3__3__Impl : ( ':' ) ;
    public final void rule__FieldDecl__Group_3__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8443:1: ( ( ':' ) )
            // InternalFortXTrans.g:8444:1: ( ':' )
            {
            // InternalFortXTrans.g:8444:1: ( ':' )
            // InternalFortXTrans.g:8445:2: ':'
            {
             before(grammarAccess.getFieldDeclAccess().getColonKeyword_3_3()); 
            match(input,23,FOLLOW_2); 
             after(grammarAccess.getFieldDeclAccess().getColonKeyword_3_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_3__3__Impl"


    // $ANTLR start "rule__FieldDecl__Group_3__4"
    // InternalFortXTrans.g:8454:1: rule__FieldDecl__Group_3__4 : rule__FieldDecl__Group_3__4__Impl rule__FieldDecl__Group_3__5 ;
    public final void rule__FieldDecl__Group_3__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8458:1: ( rule__FieldDecl__Group_3__4__Impl rule__FieldDecl__Group_3__5 )
            // InternalFortXTrans.g:8459:2: rule__FieldDecl__Group_3__4__Impl rule__FieldDecl__Group_3__5
            {
            pushFollow(FOLLOW_58);
            rule__FieldDecl__Group_3__4__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__FieldDecl__Group_3__5();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_3__4"


    // $ANTLR start "rule__FieldDecl__Group_3__4__Impl"
    // InternalFortXTrans.g:8466:1: rule__FieldDecl__Group_3__4__Impl : ( ( rule__FieldDecl__TuptypeAssignment_3_4 ) ) ;
    public final void rule__FieldDecl__Group_3__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8470:1: ( ( ( rule__FieldDecl__TuptypeAssignment_3_4 ) ) )
            // InternalFortXTrans.g:8471:1: ( ( rule__FieldDecl__TuptypeAssignment_3_4 ) )
            {
            // InternalFortXTrans.g:8471:1: ( ( rule__FieldDecl__TuptypeAssignment_3_4 ) )
            // InternalFortXTrans.g:8472:2: ( rule__FieldDecl__TuptypeAssignment_3_4 )
            {
             before(grammarAccess.getFieldDeclAccess().getTuptypeAssignment_3_4()); 
            // InternalFortXTrans.g:8473:2: ( rule__FieldDecl__TuptypeAssignment_3_4 )
            // InternalFortXTrans.g:8473:3: rule__FieldDecl__TuptypeAssignment_3_4
            {
            pushFollow(FOLLOW_2);
            rule__FieldDecl__TuptypeAssignment_3_4();

            state._fsp--;


            }

             after(grammarAccess.getFieldDeclAccess().getTuptypeAssignment_3_4()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_3__4__Impl"


    // $ANTLR start "rule__FieldDecl__Group_3__5"
    // InternalFortXTrans.g:8481:1: rule__FieldDecl__Group_3__5 : rule__FieldDecl__Group_3__5__Impl ;
    public final void rule__FieldDecl__Group_3__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8485:1: ( rule__FieldDecl__Group_3__5__Impl )
            // InternalFortXTrans.g:8486:2: rule__FieldDecl__Group_3__5__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FieldDecl__Group_3__5__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_3__5"


    // $ANTLR start "rule__FieldDecl__Group_3__5__Impl"
    // InternalFortXTrans.g:8492:1: rule__FieldDecl__Group_3__5__Impl : ( ( rule__FieldDecl__InitAssignment_3_5 ) ) ;
    public final void rule__FieldDecl__Group_3__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8496:1: ( ( ( rule__FieldDecl__InitAssignment_3_5 ) ) )
            // InternalFortXTrans.g:8497:1: ( ( rule__FieldDecl__InitAssignment_3_5 ) )
            {
            // InternalFortXTrans.g:8497:1: ( ( rule__FieldDecl__InitAssignment_3_5 ) )
            // InternalFortXTrans.g:8498:2: ( rule__FieldDecl__InitAssignment_3_5 )
            {
             before(grammarAccess.getFieldDeclAccess().getInitAssignment_3_5()); 
            // InternalFortXTrans.g:8499:2: ( rule__FieldDecl__InitAssignment_3_5 )
            // InternalFortXTrans.g:8499:3: rule__FieldDecl__InitAssignment_3_5
            {
            pushFollow(FOLLOW_2);
            rule__FieldDecl__InitAssignment_3_5();

            state._fsp--;


            }

             after(grammarAccess.getFieldDeclAccess().getInitAssignment_3_5()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_3__5__Impl"


    // $ANTLR start "rule__NoNewlineVarWTypes__Group_1__0"
    // InternalFortXTrans.g:8508:1: rule__NoNewlineVarWTypes__Group_1__0 : rule__NoNewlineVarWTypes__Group_1__0__Impl rule__NoNewlineVarWTypes__Group_1__1 ;
    public final void rule__NoNewlineVarWTypes__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8512:1: ( rule__NoNewlineVarWTypes__Group_1__0__Impl rule__NoNewlineVarWTypes__Group_1__1 )
            // InternalFortXTrans.g:8513:2: rule__NoNewlineVarWTypes__Group_1__0__Impl rule__NoNewlineVarWTypes__Group_1__1
            {
            pushFollow(FOLLOW_25);
            rule__NoNewlineVarWTypes__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__NoNewlineVarWTypes__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NoNewlineVarWTypes__Group_1__0"


    // $ANTLR start "rule__NoNewlineVarWTypes__Group_1__0__Impl"
    // InternalFortXTrans.g:8520:1: rule__NoNewlineVarWTypes__Group_1__0__Impl : ( '(' ) ;
    public final void rule__NoNewlineVarWTypes__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8524:1: ( ( '(' ) )
            // InternalFortXTrans.g:8525:1: ( '(' )
            {
            // InternalFortXTrans.g:8525:1: ( '(' )
            // InternalFortXTrans.g:8526:2: '('
            {
             before(grammarAccess.getNoNewlineVarWTypesAccess().getLeftParenthesisKeyword_1_0()); 
            match(input,21,FOLLOW_2); 
             after(grammarAccess.getNoNewlineVarWTypesAccess().getLeftParenthesisKeyword_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NoNewlineVarWTypes__Group_1__0__Impl"


    // $ANTLR start "rule__NoNewlineVarWTypes__Group_1__1"
    // InternalFortXTrans.g:8535:1: rule__NoNewlineVarWTypes__Group_1__1 : rule__NoNewlineVarWTypes__Group_1__1__Impl rule__NoNewlineVarWTypes__Group_1__2 ;
    public final void rule__NoNewlineVarWTypes__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8539:1: ( rule__NoNewlineVarWTypes__Group_1__1__Impl rule__NoNewlineVarWTypes__Group_1__2 )
            // InternalFortXTrans.g:8540:2: rule__NoNewlineVarWTypes__Group_1__1__Impl rule__NoNewlineVarWTypes__Group_1__2
            {
            pushFollow(FOLLOW_24);
            rule__NoNewlineVarWTypes__Group_1__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__NoNewlineVarWTypes__Group_1__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NoNewlineVarWTypes__Group_1__1"


    // $ANTLR start "rule__NoNewlineVarWTypes__Group_1__1__Impl"
    // InternalFortXTrans.g:8547:1: rule__NoNewlineVarWTypes__Group_1__1__Impl : ( ( rule__NoNewlineVarWTypes__MultipleAssignment_1_1 ) ) ;
    public final void rule__NoNewlineVarWTypes__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8551:1: ( ( ( rule__NoNewlineVarWTypes__MultipleAssignment_1_1 ) ) )
            // InternalFortXTrans.g:8552:1: ( ( rule__NoNewlineVarWTypes__MultipleAssignment_1_1 ) )
            {
            // InternalFortXTrans.g:8552:1: ( ( rule__NoNewlineVarWTypes__MultipleAssignment_1_1 ) )
            // InternalFortXTrans.g:8553:2: ( rule__NoNewlineVarWTypes__MultipleAssignment_1_1 )
            {
             before(grammarAccess.getNoNewlineVarWTypesAccess().getMultipleAssignment_1_1()); 
            // InternalFortXTrans.g:8554:2: ( rule__NoNewlineVarWTypes__MultipleAssignment_1_1 )
            // InternalFortXTrans.g:8554:3: rule__NoNewlineVarWTypes__MultipleAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__NoNewlineVarWTypes__MultipleAssignment_1_1();

            state._fsp--;


            }

             after(grammarAccess.getNoNewlineVarWTypesAccess().getMultipleAssignment_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NoNewlineVarWTypes__Group_1__1__Impl"


    // $ANTLR start "rule__NoNewlineVarWTypes__Group_1__2"
    // InternalFortXTrans.g:8562:1: rule__NoNewlineVarWTypes__Group_1__2 : rule__NoNewlineVarWTypes__Group_1__2__Impl rule__NoNewlineVarWTypes__Group_1__3 ;
    public final void rule__NoNewlineVarWTypes__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8566:1: ( rule__NoNewlineVarWTypes__Group_1__2__Impl rule__NoNewlineVarWTypes__Group_1__3 )
            // InternalFortXTrans.g:8567:2: rule__NoNewlineVarWTypes__Group_1__2__Impl rule__NoNewlineVarWTypes__Group_1__3
            {
            pushFollow(FOLLOW_28);
            rule__NoNewlineVarWTypes__Group_1__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__NoNewlineVarWTypes__Group_1__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NoNewlineVarWTypes__Group_1__2"


    // $ANTLR start "rule__NoNewlineVarWTypes__Group_1__2__Impl"
    // InternalFortXTrans.g:8574:1: rule__NoNewlineVarWTypes__Group_1__2__Impl : ( ( ( rule__NoNewlineVarWTypes__Group_1_2__0 ) ) ( ( rule__NoNewlineVarWTypes__Group_1_2__0 )* ) ) ;
    public final void rule__NoNewlineVarWTypes__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8578:1: ( ( ( ( rule__NoNewlineVarWTypes__Group_1_2__0 ) ) ( ( rule__NoNewlineVarWTypes__Group_1_2__0 )* ) ) )
            // InternalFortXTrans.g:8579:1: ( ( ( rule__NoNewlineVarWTypes__Group_1_2__0 ) ) ( ( rule__NoNewlineVarWTypes__Group_1_2__0 )* ) )
            {
            // InternalFortXTrans.g:8579:1: ( ( ( rule__NoNewlineVarWTypes__Group_1_2__0 ) ) ( ( rule__NoNewlineVarWTypes__Group_1_2__0 )* ) )
            // InternalFortXTrans.g:8580:2: ( ( rule__NoNewlineVarWTypes__Group_1_2__0 ) ) ( ( rule__NoNewlineVarWTypes__Group_1_2__0 )* )
            {
            // InternalFortXTrans.g:8580:2: ( ( rule__NoNewlineVarWTypes__Group_1_2__0 ) )
            // InternalFortXTrans.g:8581:3: ( rule__NoNewlineVarWTypes__Group_1_2__0 )
            {
             before(grammarAccess.getNoNewlineVarWTypesAccess().getGroup_1_2()); 
            // InternalFortXTrans.g:8582:3: ( rule__NoNewlineVarWTypes__Group_1_2__0 )
            // InternalFortXTrans.g:8582:4: rule__NoNewlineVarWTypes__Group_1_2__0
            {
            pushFollow(FOLLOW_15);
            rule__NoNewlineVarWTypes__Group_1_2__0();

            state._fsp--;


            }

             after(grammarAccess.getNoNewlineVarWTypesAccess().getGroup_1_2()); 

            }

            // InternalFortXTrans.g:8585:2: ( ( rule__NoNewlineVarWTypes__Group_1_2__0 )* )
            // InternalFortXTrans.g:8586:3: ( rule__NoNewlineVarWTypes__Group_1_2__0 )*
            {
             before(grammarAccess.getNoNewlineVarWTypesAccess().getGroup_1_2()); 
            // InternalFortXTrans.g:8587:3: ( rule__NoNewlineVarWTypes__Group_1_2__0 )*
            loop78:
            do {
                int alt78=2;
                int LA78_0 = input.LA(1);

                if ( (LA78_0==17) ) {
                    alt78=1;
                }


                switch (alt78) {
            	case 1 :
            	    // InternalFortXTrans.g:8587:4: rule__NoNewlineVarWTypes__Group_1_2__0
            	    {
            	    pushFollow(FOLLOW_15);
            	    rule__NoNewlineVarWTypes__Group_1_2__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop78;
                }
            } while (true);

             after(grammarAccess.getNoNewlineVarWTypesAccess().getGroup_1_2()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NoNewlineVarWTypes__Group_1__2__Impl"


    // $ANTLR start "rule__NoNewlineVarWTypes__Group_1__3"
    // InternalFortXTrans.g:8596:1: rule__NoNewlineVarWTypes__Group_1__3 : rule__NoNewlineVarWTypes__Group_1__3__Impl ;
    public final void rule__NoNewlineVarWTypes__Group_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8600:1: ( rule__NoNewlineVarWTypes__Group_1__3__Impl )
            // InternalFortXTrans.g:8601:2: rule__NoNewlineVarWTypes__Group_1__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__NoNewlineVarWTypes__Group_1__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NoNewlineVarWTypes__Group_1__3"


    // $ANTLR start "rule__NoNewlineVarWTypes__Group_1__3__Impl"
    // InternalFortXTrans.g:8607:1: rule__NoNewlineVarWTypes__Group_1__3__Impl : ( ')' ) ;
    public final void rule__NoNewlineVarWTypes__Group_1__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8611:1: ( ( ')' ) )
            // InternalFortXTrans.g:8612:1: ( ')' )
            {
            // InternalFortXTrans.g:8612:1: ( ')' )
            // InternalFortXTrans.g:8613:2: ')'
            {
             before(grammarAccess.getNoNewlineVarWTypesAccess().getRightParenthesisKeyword_1_3()); 
            match(input,22,FOLLOW_2); 
             after(grammarAccess.getNoNewlineVarWTypesAccess().getRightParenthesisKeyword_1_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NoNewlineVarWTypes__Group_1__3__Impl"


    // $ANTLR start "rule__NoNewlineVarWTypes__Group_1_2__0"
    // InternalFortXTrans.g:8623:1: rule__NoNewlineVarWTypes__Group_1_2__0 : rule__NoNewlineVarWTypes__Group_1_2__0__Impl rule__NoNewlineVarWTypes__Group_1_2__1 ;
    public final void rule__NoNewlineVarWTypes__Group_1_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8627:1: ( rule__NoNewlineVarWTypes__Group_1_2__0__Impl rule__NoNewlineVarWTypes__Group_1_2__1 )
            // InternalFortXTrans.g:8628:2: rule__NoNewlineVarWTypes__Group_1_2__0__Impl rule__NoNewlineVarWTypes__Group_1_2__1
            {
            pushFollow(FOLLOW_25);
            rule__NoNewlineVarWTypes__Group_1_2__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__NoNewlineVarWTypes__Group_1_2__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NoNewlineVarWTypes__Group_1_2__0"


    // $ANTLR start "rule__NoNewlineVarWTypes__Group_1_2__0__Impl"
    // InternalFortXTrans.g:8635:1: rule__NoNewlineVarWTypes__Group_1_2__0__Impl : ( ',' ) ;
    public final void rule__NoNewlineVarWTypes__Group_1_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8639:1: ( ( ',' ) )
            // InternalFortXTrans.g:8640:1: ( ',' )
            {
            // InternalFortXTrans.g:8640:1: ( ',' )
            // InternalFortXTrans.g:8641:2: ','
            {
             before(grammarAccess.getNoNewlineVarWTypesAccess().getCommaKeyword_1_2_0()); 
            match(input,17,FOLLOW_2); 
             after(grammarAccess.getNoNewlineVarWTypesAccess().getCommaKeyword_1_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NoNewlineVarWTypes__Group_1_2__0__Impl"


    // $ANTLR start "rule__NoNewlineVarWTypes__Group_1_2__1"
    // InternalFortXTrans.g:8650:1: rule__NoNewlineVarWTypes__Group_1_2__1 : rule__NoNewlineVarWTypes__Group_1_2__1__Impl ;
    public final void rule__NoNewlineVarWTypes__Group_1_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8654:1: ( rule__NoNewlineVarWTypes__Group_1_2__1__Impl )
            // InternalFortXTrans.g:8655:2: rule__NoNewlineVarWTypes__Group_1_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__NoNewlineVarWTypes__Group_1_2__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NoNewlineVarWTypes__Group_1_2__1"


    // $ANTLR start "rule__NoNewlineVarWTypes__Group_1_2__1__Impl"
    // InternalFortXTrans.g:8661:1: rule__NoNewlineVarWTypes__Group_1_2__1__Impl : ( ( rule__NoNewlineVarWTypes__MultipleAssignment_1_2_1 ) ) ;
    public final void rule__NoNewlineVarWTypes__Group_1_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8665:1: ( ( ( rule__NoNewlineVarWTypes__MultipleAssignment_1_2_1 ) ) )
            // InternalFortXTrans.g:8666:1: ( ( rule__NoNewlineVarWTypes__MultipleAssignment_1_2_1 ) )
            {
            // InternalFortXTrans.g:8666:1: ( ( rule__NoNewlineVarWTypes__MultipleAssignment_1_2_1 ) )
            // InternalFortXTrans.g:8667:2: ( rule__NoNewlineVarWTypes__MultipleAssignment_1_2_1 )
            {
             before(grammarAccess.getNoNewlineVarWTypesAccess().getMultipleAssignment_1_2_1()); 
            // InternalFortXTrans.g:8668:2: ( rule__NoNewlineVarWTypes__MultipleAssignment_1_2_1 )
            // InternalFortXTrans.g:8668:3: rule__NoNewlineVarWTypes__MultipleAssignment_1_2_1
            {
            pushFollow(FOLLOW_2);
            rule__NoNewlineVarWTypes__MultipleAssignment_1_2_1();

            state._fsp--;


            }

             after(grammarAccess.getNoNewlineVarWTypesAccess().getMultipleAssignment_1_2_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NoNewlineVarWTypes__Group_1_2__1__Impl"


    // $ANTLR start "rule__NoNewlineVarWType__Group__0"
    // InternalFortXTrans.g:8677:1: rule__NoNewlineVarWType__Group__0 : rule__NoNewlineVarWType__Group__0__Impl rule__NoNewlineVarWType__Group__1 ;
    public final void rule__NoNewlineVarWType__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8681:1: ( rule__NoNewlineVarWType__Group__0__Impl rule__NoNewlineVarWType__Group__1 )
            // InternalFortXTrans.g:8682:2: rule__NoNewlineVarWType__Group__0__Impl rule__NoNewlineVarWType__Group__1
            {
            pushFollow(FOLLOW_26);
            rule__NoNewlineVarWType__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__NoNewlineVarWType__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NoNewlineVarWType__Group__0"


    // $ANTLR start "rule__NoNewlineVarWType__Group__0__Impl"
    // InternalFortXTrans.g:8689:1: rule__NoNewlineVarWType__Group__0__Impl : ( ( rule__NoNewlineVarWType__BidAssignment_0 ) ) ;
    public final void rule__NoNewlineVarWType__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8693:1: ( ( ( rule__NoNewlineVarWType__BidAssignment_0 ) ) )
            // InternalFortXTrans.g:8694:1: ( ( rule__NoNewlineVarWType__BidAssignment_0 ) )
            {
            // InternalFortXTrans.g:8694:1: ( ( rule__NoNewlineVarWType__BidAssignment_0 ) )
            // InternalFortXTrans.g:8695:2: ( rule__NoNewlineVarWType__BidAssignment_0 )
            {
             before(grammarAccess.getNoNewlineVarWTypeAccess().getBidAssignment_0()); 
            // InternalFortXTrans.g:8696:2: ( rule__NoNewlineVarWType__BidAssignment_0 )
            // InternalFortXTrans.g:8696:3: rule__NoNewlineVarWType__BidAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__NoNewlineVarWType__BidAssignment_0();

            state._fsp--;


            }

             after(grammarAccess.getNoNewlineVarWTypeAccess().getBidAssignment_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NoNewlineVarWType__Group__0__Impl"


    // $ANTLR start "rule__NoNewlineVarWType__Group__1"
    // InternalFortXTrans.g:8704:1: rule__NoNewlineVarWType__Group__1 : rule__NoNewlineVarWType__Group__1__Impl ;
    public final void rule__NoNewlineVarWType__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8708:1: ( rule__NoNewlineVarWType__Group__1__Impl )
            // InternalFortXTrans.g:8709:2: rule__NoNewlineVarWType__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__NoNewlineVarWType__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NoNewlineVarWType__Group__1"


    // $ANTLR start "rule__NoNewlineVarWType__Group__1__Impl"
    // InternalFortXTrans.g:8715:1: rule__NoNewlineVarWType__Group__1__Impl : ( ( rule__NoNewlineVarWType__IstypeAssignment_1 ) ) ;
    public final void rule__NoNewlineVarWType__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8719:1: ( ( ( rule__NoNewlineVarWType__IstypeAssignment_1 ) ) )
            // InternalFortXTrans.g:8720:1: ( ( rule__NoNewlineVarWType__IstypeAssignment_1 ) )
            {
            // InternalFortXTrans.g:8720:1: ( ( rule__NoNewlineVarWType__IstypeAssignment_1 ) )
            // InternalFortXTrans.g:8721:2: ( rule__NoNewlineVarWType__IstypeAssignment_1 )
            {
             before(grammarAccess.getNoNewlineVarWTypeAccess().getIstypeAssignment_1()); 
            // InternalFortXTrans.g:8722:2: ( rule__NoNewlineVarWType__IstypeAssignment_1 )
            // InternalFortXTrans.g:8722:3: rule__NoNewlineVarWType__IstypeAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__NoNewlineVarWType__IstypeAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getNoNewlineVarWTypeAccess().getIstypeAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NoNewlineVarWType__Group__1__Impl"


    // $ANTLR start "rule__InitVal__Group_0__0"
    // InternalFortXTrans.g:8731:1: rule__InitVal__Group_0__0 : rule__InitVal__Group_0__0__Impl rule__InitVal__Group_0__1 ;
    public final void rule__InitVal__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8735:1: ( rule__InitVal__Group_0__0__Impl rule__InitVal__Group_0__1 )
            // InternalFortXTrans.g:8736:2: rule__InitVal__Group_0__0__Impl rule__InitVal__Group_0__1
            {
            pushFollow(FOLLOW_60);
            rule__InitVal__Group_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__InitVal__Group_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InitVal__Group_0__0"


    // $ANTLR start "rule__InitVal__Group_0__0__Impl"
    // InternalFortXTrans.g:8743:1: rule__InitVal__Group_0__0__Impl : ( ( rule__InitVal__MutAssignment_0_0 ) ) ;
    public final void rule__InitVal__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8747:1: ( ( ( rule__InitVal__MutAssignment_0_0 ) ) )
            // InternalFortXTrans.g:8748:1: ( ( rule__InitVal__MutAssignment_0_0 ) )
            {
            // InternalFortXTrans.g:8748:1: ( ( rule__InitVal__MutAssignment_0_0 ) )
            // InternalFortXTrans.g:8749:2: ( rule__InitVal__MutAssignment_0_0 )
            {
             before(grammarAccess.getInitValAccess().getMutAssignment_0_0()); 
            // InternalFortXTrans.g:8750:2: ( rule__InitVal__MutAssignment_0_0 )
            // InternalFortXTrans.g:8750:3: rule__InitVal__MutAssignment_0_0
            {
            pushFollow(FOLLOW_2);
            rule__InitVal__MutAssignment_0_0();

            state._fsp--;


            }

             after(grammarAccess.getInitValAccess().getMutAssignment_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InitVal__Group_0__0__Impl"


    // $ANTLR start "rule__InitVal__Group_0__1"
    // InternalFortXTrans.g:8758:1: rule__InitVal__Group_0__1 : rule__InitVal__Group_0__1__Impl ;
    public final void rule__InitVal__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8762:1: ( rule__InitVal__Group_0__1__Impl )
            // InternalFortXTrans.g:8763:2: rule__InitVal__Group_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__InitVal__Group_0__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InitVal__Group_0__1"


    // $ANTLR start "rule__InitVal__Group_0__1__Impl"
    // InternalFortXTrans.g:8769:1: rule__InitVal__Group_0__1__Impl : ( ( rule__InitVal__LitAssignment_0_1 ) ) ;
    public final void rule__InitVal__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8773:1: ( ( ( rule__InitVal__LitAssignment_0_1 ) ) )
            // InternalFortXTrans.g:8774:1: ( ( rule__InitVal__LitAssignment_0_1 ) )
            {
            // InternalFortXTrans.g:8774:1: ( ( rule__InitVal__LitAssignment_0_1 ) )
            // InternalFortXTrans.g:8775:2: ( rule__InitVal__LitAssignment_0_1 )
            {
             before(grammarAccess.getInitValAccess().getLitAssignment_0_1()); 
            // InternalFortXTrans.g:8776:2: ( rule__InitVal__LitAssignment_0_1 )
            // InternalFortXTrans.g:8776:3: rule__InitVal__LitAssignment_0_1
            {
            pushFollow(FOLLOW_2);
            rule__InitVal__LitAssignment_0_1();

            state._fsp--;


            }

             after(grammarAccess.getInitValAccess().getLitAssignment_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InitVal__Group_0__1__Impl"


    // $ANTLR start "rule__InitVal__Group_1__0"
    // InternalFortXTrans.g:8785:1: rule__InitVal__Group_1__0 : rule__InitVal__Group_1__0__Impl rule__InitVal__Group_1__1 ;
    public final void rule__InitVal__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8789:1: ( rule__InitVal__Group_1__0__Impl rule__InitVal__Group_1__1 )
            // InternalFortXTrans.g:8790:2: rule__InitVal__Group_1__0__Impl rule__InitVal__Group_1__1
            {
            pushFollow(FOLLOW_60);
            rule__InitVal__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__InitVal__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InitVal__Group_1__0"


    // $ANTLR start "rule__InitVal__Group_1__0__Impl"
    // InternalFortXTrans.g:8797:1: rule__InitVal__Group_1__0__Impl : ( ( rule__InitVal__ImmutAssignment_1_0 ) ) ;
    public final void rule__InitVal__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8801:1: ( ( ( rule__InitVal__ImmutAssignment_1_0 ) ) )
            // InternalFortXTrans.g:8802:1: ( ( rule__InitVal__ImmutAssignment_1_0 ) )
            {
            // InternalFortXTrans.g:8802:1: ( ( rule__InitVal__ImmutAssignment_1_0 ) )
            // InternalFortXTrans.g:8803:2: ( rule__InitVal__ImmutAssignment_1_0 )
            {
             before(grammarAccess.getInitValAccess().getImmutAssignment_1_0()); 
            // InternalFortXTrans.g:8804:2: ( rule__InitVal__ImmutAssignment_1_0 )
            // InternalFortXTrans.g:8804:3: rule__InitVal__ImmutAssignment_1_0
            {
            pushFollow(FOLLOW_2);
            rule__InitVal__ImmutAssignment_1_0();

            state._fsp--;


            }

             after(grammarAccess.getInitValAccess().getImmutAssignment_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InitVal__Group_1__0__Impl"


    // $ANTLR start "rule__InitVal__Group_1__1"
    // InternalFortXTrans.g:8812:1: rule__InitVal__Group_1__1 : rule__InitVal__Group_1__1__Impl ;
    public final void rule__InitVal__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8816:1: ( rule__InitVal__Group_1__1__Impl )
            // InternalFortXTrans.g:8817:2: rule__InitVal__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__InitVal__Group_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InitVal__Group_1__1"


    // $ANTLR start "rule__InitVal__Group_1__1__Impl"
    // InternalFortXTrans.g:8823:1: rule__InitVal__Group_1__1__Impl : ( ( rule__InitVal__LitAssignment_1_1 ) ) ;
    public final void rule__InitVal__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8827:1: ( ( ( rule__InitVal__LitAssignment_1_1 ) ) )
            // InternalFortXTrans.g:8828:1: ( ( rule__InitVal__LitAssignment_1_1 ) )
            {
            // InternalFortXTrans.g:8828:1: ( ( rule__InitVal__LitAssignment_1_1 ) )
            // InternalFortXTrans.g:8829:2: ( rule__InitVal__LitAssignment_1_1 )
            {
             before(grammarAccess.getInitValAccess().getLitAssignment_1_1()); 
            // InternalFortXTrans.g:8830:2: ( rule__InitVal__LitAssignment_1_1 )
            // InternalFortXTrans.g:8830:3: rule__InitVal__LitAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__InitVal__LitAssignment_1_1();

            state._fsp--;


            }

             after(grammarAccess.getInitValAccess().getLitAssignment_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InitVal__Group_1__1__Impl"


    // $ANTLR start "rule__LiteralTup__Group_1__0"
    // InternalFortXTrans.g:8839:1: rule__LiteralTup__Group_1__0 : rule__LiteralTup__Group_1__0__Impl rule__LiteralTup__Group_1__1 ;
    public final void rule__LiteralTup__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8843:1: ( rule__LiteralTup__Group_1__0__Impl rule__LiteralTup__Group_1__1 )
            // InternalFortXTrans.g:8844:2: rule__LiteralTup__Group_1__0__Impl rule__LiteralTup__Group_1__1
            {
            pushFollow(FOLLOW_62);
            rule__LiteralTup__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__LiteralTup__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralTup__Group_1__0"


    // $ANTLR start "rule__LiteralTup__Group_1__0__Impl"
    // InternalFortXTrans.g:8851:1: rule__LiteralTup__Group_1__0__Impl : ( '(' ) ;
    public final void rule__LiteralTup__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8855:1: ( ( '(' ) )
            // InternalFortXTrans.g:8856:1: ( '(' )
            {
            // InternalFortXTrans.g:8856:1: ( '(' )
            // InternalFortXTrans.g:8857:2: '('
            {
             before(grammarAccess.getLiteralTupAccess().getLeftParenthesisKeyword_1_0()); 
            match(input,21,FOLLOW_2); 
             after(grammarAccess.getLiteralTupAccess().getLeftParenthesisKeyword_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralTup__Group_1__0__Impl"


    // $ANTLR start "rule__LiteralTup__Group_1__1"
    // InternalFortXTrans.g:8866:1: rule__LiteralTup__Group_1__1 : rule__LiteralTup__Group_1__1__Impl rule__LiteralTup__Group_1__2 ;
    public final void rule__LiteralTup__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8870:1: ( rule__LiteralTup__Group_1__1__Impl rule__LiteralTup__Group_1__2 )
            // InternalFortXTrans.g:8871:2: rule__LiteralTup__Group_1__1__Impl rule__LiteralTup__Group_1__2
            {
            pushFollow(FOLLOW_24);
            rule__LiteralTup__Group_1__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__LiteralTup__Group_1__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralTup__Group_1__1"


    // $ANTLR start "rule__LiteralTup__Group_1__1__Impl"
    // InternalFortXTrans.g:8878:1: rule__LiteralTup__Group_1__1__Impl : ( ( rule__LiteralTup__LitsAssignment_1_1 ) ) ;
    public final void rule__LiteralTup__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8882:1: ( ( ( rule__LiteralTup__LitsAssignment_1_1 ) ) )
            // InternalFortXTrans.g:8883:1: ( ( rule__LiteralTup__LitsAssignment_1_1 ) )
            {
            // InternalFortXTrans.g:8883:1: ( ( rule__LiteralTup__LitsAssignment_1_1 ) )
            // InternalFortXTrans.g:8884:2: ( rule__LiteralTup__LitsAssignment_1_1 )
            {
             before(grammarAccess.getLiteralTupAccess().getLitsAssignment_1_1()); 
            // InternalFortXTrans.g:8885:2: ( rule__LiteralTup__LitsAssignment_1_1 )
            // InternalFortXTrans.g:8885:3: rule__LiteralTup__LitsAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__LiteralTup__LitsAssignment_1_1();

            state._fsp--;


            }

             after(grammarAccess.getLiteralTupAccess().getLitsAssignment_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralTup__Group_1__1__Impl"


    // $ANTLR start "rule__LiteralTup__Group_1__2"
    // InternalFortXTrans.g:8893:1: rule__LiteralTup__Group_1__2 : rule__LiteralTup__Group_1__2__Impl rule__LiteralTup__Group_1__3 ;
    public final void rule__LiteralTup__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8897:1: ( rule__LiteralTup__Group_1__2__Impl rule__LiteralTup__Group_1__3 )
            // InternalFortXTrans.g:8898:2: rule__LiteralTup__Group_1__2__Impl rule__LiteralTup__Group_1__3
            {
            pushFollow(FOLLOW_28);
            rule__LiteralTup__Group_1__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__LiteralTup__Group_1__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralTup__Group_1__2"


    // $ANTLR start "rule__LiteralTup__Group_1__2__Impl"
    // InternalFortXTrans.g:8905:1: rule__LiteralTup__Group_1__2__Impl : ( ( ( rule__LiteralTup__Group_1_2__0 ) ) ( ( rule__LiteralTup__Group_1_2__0 )* ) ) ;
    public final void rule__LiteralTup__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8909:1: ( ( ( ( rule__LiteralTup__Group_1_2__0 ) ) ( ( rule__LiteralTup__Group_1_2__0 )* ) ) )
            // InternalFortXTrans.g:8910:1: ( ( ( rule__LiteralTup__Group_1_2__0 ) ) ( ( rule__LiteralTup__Group_1_2__0 )* ) )
            {
            // InternalFortXTrans.g:8910:1: ( ( ( rule__LiteralTup__Group_1_2__0 ) ) ( ( rule__LiteralTup__Group_1_2__0 )* ) )
            // InternalFortXTrans.g:8911:2: ( ( rule__LiteralTup__Group_1_2__0 ) ) ( ( rule__LiteralTup__Group_1_2__0 )* )
            {
            // InternalFortXTrans.g:8911:2: ( ( rule__LiteralTup__Group_1_2__0 ) )
            // InternalFortXTrans.g:8912:3: ( rule__LiteralTup__Group_1_2__0 )
            {
             before(grammarAccess.getLiteralTupAccess().getGroup_1_2()); 
            // InternalFortXTrans.g:8913:3: ( rule__LiteralTup__Group_1_2__0 )
            // InternalFortXTrans.g:8913:4: rule__LiteralTup__Group_1_2__0
            {
            pushFollow(FOLLOW_15);
            rule__LiteralTup__Group_1_2__0();

            state._fsp--;


            }

             after(grammarAccess.getLiteralTupAccess().getGroup_1_2()); 

            }

            // InternalFortXTrans.g:8916:2: ( ( rule__LiteralTup__Group_1_2__0 )* )
            // InternalFortXTrans.g:8917:3: ( rule__LiteralTup__Group_1_2__0 )*
            {
             before(grammarAccess.getLiteralTupAccess().getGroup_1_2()); 
            // InternalFortXTrans.g:8918:3: ( rule__LiteralTup__Group_1_2__0 )*
            loop79:
            do {
                int alt79=2;
                int LA79_0 = input.LA(1);

                if ( (LA79_0==17) ) {
                    alt79=1;
                }


                switch (alt79) {
            	case 1 :
            	    // InternalFortXTrans.g:8918:4: rule__LiteralTup__Group_1_2__0
            	    {
            	    pushFollow(FOLLOW_15);
            	    rule__LiteralTup__Group_1_2__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop79;
                }
            } while (true);

             after(grammarAccess.getLiteralTupAccess().getGroup_1_2()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralTup__Group_1__2__Impl"


    // $ANTLR start "rule__LiteralTup__Group_1__3"
    // InternalFortXTrans.g:8927:1: rule__LiteralTup__Group_1__3 : rule__LiteralTup__Group_1__3__Impl ;
    public final void rule__LiteralTup__Group_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8931:1: ( rule__LiteralTup__Group_1__3__Impl )
            // InternalFortXTrans.g:8932:2: rule__LiteralTup__Group_1__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__LiteralTup__Group_1__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralTup__Group_1__3"


    // $ANTLR start "rule__LiteralTup__Group_1__3__Impl"
    // InternalFortXTrans.g:8938:1: rule__LiteralTup__Group_1__3__Impl : ( ')' ) ;
    public final void rule__LiteralTup__Group_1__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8942:1: ( ( ')' ) )
            // InternalFortXTrans.g:8943:1: ( ')' )
            {
            // InternalFortXTrans.g:8943:1: ( ')' )
            // InternalFortXTrans.g:8944:2: ')'
            {
             before(grammarAccess.getLiteralTupAccess().getRightParenthesisKeyword_1_3()); 
            match(input,22,FOLLOW_2); 
             after(grammarAccess.getLiteralTupAccess().getRightParenthesisKeyword_1_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralTup__Group_1__3__Impl"


    // $ANTLR start "rule__LiteralTup__Group_1_2__0"
    // InternalFortXTrans.g:8954:1: rule__LiteralTup__Group_1_2__0 : rule__LiteralTup__Group_1_2__0__Impl rule__LiteralTup__Group_1_2__1 ;
    public final void rule__LiteralTup__Group_1_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8958:1: ( rule__LiteralTup__Group_1_2__0__Impl rule__LiteralTup__Group_1_2__1 )
            // InternalFortXTrans.g:8959:2: rule__LiteralTup__Group_1_2__0__Impl rule__LiteralTup__Group_1_2__1
            {
            pushFollow(FOLLOW_62);
            rule__LiteralTup__Group_1_2__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__LiteralTup__Group_1_2__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralTup__Group_1_2__0"


    // $ANTLR start "rule__LiteralTup__Group_1_2__0__Impl"
    // InternalFortXTrans.g:8966:1: rule__LiteralTup__Group_1_2__0__Impl : ( ',' ) ;
    public final void rule__LiteralTup__Group_1_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8970:1: ( ( ',' ) )
            // InternalFortXTrans.g:8971:1: ( ',' )
            {
            // InternalFortXTrans.g:8971:1: ( ',' )
            // InternalFortXTrans.g:8972:2: ','
            {
             before(grammarAccess.getLiteralTupAccess().getCommaKeyword_1_2_0()); 
            match(input,17,FOLLOW_2); 
             after(grammarAccess.getLiteralTupAccess().getCommaKeyword_1_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralTup__Group_1_2__0__Impl"


    // $ANTLR start "rule__LiteralTup__Group_1_2__1"
    // InternalFortXTrans.g:8981:1: rule__LiteralTup__Group_1_2__1 : rule__LiteralTup__Group_1_2__1__Impl ;
    public final void rule__LiteralTup__Group_1_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8985:1: ( rule__LiteralTup__Group_1_2__1__Impl )
            // InternalFortXTrans.g:8986:2: rule__LiteralTup__Group_1_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__LiteralTup__Group_1_2__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralTup__Group_1_2__1"


    // $ANTLR start "rule__LiteralTup__Group_1_2__1__Impl"
    // InternalFortXTrans.g:8992:1: rule__LiteralTup__Group_1_2__1__Impl : ( ( rule__LiteralTup__LitsAssignment_1_2_1 ) ) ;
    public final void rule__LiteralTup__Group_1_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8996:1: ( ( ( rule__LiteralTup__LitsAssignment_1_2_1 ) ) )
            // InternalFortXTrans.g:8997:1: ( ( rule__LiteralTup__LitsAssignment_1_2_1 ) )
            {
            // InternalFortXTrans.g:8997:1: ( ( rule__LiteralTup__LitsAssignment_1_2_1 ) )
            // InternalFortXTrans.g:8998:2: ( rule__LiteralTup__LitsAssignment_1_2_1 )
            {
             before(grammarAccess.getLiteralTupAccess().getLitsAssignment_1_2_1()); 
            // InternalFortXTrans.g:8999:2: ( rule__LiteralTup__LitsAssignment_1_2_1 )
            // InternalFortXTrans.g:8999:3: rule__LiteralTup__LitsAssignment_1_2_1
            {
            pushFollow(FOLLOW_2);
            rule__LiteralTup__LitsAssignment_1_2_1();

            state._fsp--;


            }

             after(grammarAccess.getLiteralTupAccess().getLitsAssignment_1_2_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralTup__Group_1_2__1__Impl"


    // $ANTLR start "rule__LocalVarDecl__Group_0__0"
    // InternalFortXTrans.g:9008:1: rule__LocalVarDecl__Group_0__0 : rule__LocalVarDecl__Group_0__0__Impl rule__LocalVarDecl__Group_0__1 ;
    public final void rule__LocalVarDecl__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9012:1: ( rule__LocalVarDecl__Group_0__0__Impl rule__LocalVarDecl__Group_0__1 )
            // InternalFortXTrans.g:9013:2: rule__LocalVarDecl__Group_0__0__Impl rule__LocalVarDecl__Group_0__1
            {
            pushFollow(FOLLOW_57);
            rule__LocalVarDecl__Group_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__LocalVarDecl__Group_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_0__0"


    // $ANTLR start "rule__LocalVarDecl__Group_0__0__Impl"
    // InternalFortXTrans.g:9020:1: rule__LocalVarDecl__Group_0__0__Impl : ( ( rule__LocalVarDecl__MutAssignment_0_0 )? ) ;
    public final void rule__LocalVarDecl__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9024:1: ( ( ( rule__LocalVarDecl__MutAssignment_0_0 )? ) )
            // InternalFortXTrans.g:9025:1: ( ( rule__LocalVarDecl__MutAssignment_0_0 )? )
            {
            // InternalFortXTrans.g:9025:1: ( ( rule__LocalVarDecl__MutAssignment_0_0 )? )
            // InternalFortXTrans.g:9026:2: ( rule__LocalVarDecl__MutAssignment_0_0 )?
            {
             before(grammarAccess.getLocalVarDeclAccess().getMutAssignment_0_0()); 
            // InternalFortXTrans.g:9027:2: ( rule__LocalVarDecl__MutAssignment_0_0 )?
            int alt80=2;
            int LA80_0 = input.LA(1);

            if ( (LA80_0==50) ) {
                alt80=1;
            }
            switch (alt80) {
                case 1 :
                    // InternalFortXTrans.g:9027:3: rule__LocalVarDecl__MutAssignment_0_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__LocalVarDecl__MutAssignment_0_0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getLocalVarDeclAccess().getMutAssignment_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_0__0__Impl"


    // $ANTLR start "rule__LocalVarDecl__Group_0__1"
    // InternalFortXTrans.g:9035:1: rule__LocalVarDecl__Group_0__1 : rule__LocalVarDecl__Group_0__1__Impl rule__LocalVarDecl__Group_0__2 ;
    public final void rule__LocalVarDecl__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9039:1: ( rule__LocalVarDecl__Group_0__1__Impl rule__LocalVarDecl__Group_0__2 )
            // InternalFortXTrans.g:9040:2: rule__LocalVarDecl__Group_0__1__Impl rule__LocalVarDecl__Group_0__2
            {
            pushFollow(FOLLOW_59);
            rule__LocalVarDecl__Group_0__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__LocalVarDecl__Group_0__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_0__1"


    // $ANTLR start "rule__LocalVarDecl__Group_0__1__Impl"
    // InternalFortXTrans.g:9047:1: rule__LocalVarDecl__Group_0__1__Impl : ( ( rule__LocalVarDecl__VarsAssignment_0_1 ) ) ;
    public final void rule__LocalVarDecl__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9051:1: ( ( ( rule__LocalVarDecl__VarsAssignment_0_1 ) ) )
            // InternalFortXTrans.g:9052:1: ( ( rule__LocalVarDecl__VarsAssignment_0_1 ) )
            {
            // InternalFortXTrans.g:9052:1: ( ( rule__LocalVarDecl__VarsAssignment_0_1 ) )
            // InternalFortXTrans.g:9053:2: ( rule__LocalVarDecl__VarsAssignment_0_1 )
            {
             before(grammarAccess.getLocalVarDeclAccess().getVarsAssignment_0_1()); 
            // InternalFortXTrans.g:9054:2: ( rule__LocalVarDecl__VarsAssignment_0_1 )
            // InternalFortXTrans.g:9054:3: rule__LocalVarDecl__VarsAssignment_0_1
            {
            pushFollow(FOLLOW_2);
            rule__LocalVarDecl__VarsAssignment_0_1();

            state._fsp--;


            }

             after(grammarAccess.getLocalVarDeclAccess().getVarsAssignment_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_0__1__Impl"


    // $ANTLR start "rule__LocalVarDecl__Group_0__2"
    // InternalFortXTrans.g:9062:1: rule__LocalVarDecl__Group_0__2 : rule__LocalVarDecl__Group_0__2__Impl rule__LocalVarDecl__Group_0__3 ;
    public final void rule__LocalVarDecl__Group_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9066:1: ( rule__LocalVarDecl__Group_0__2__Impl rule__LocalVarDecl__Group_0__3 )
            // InternalFortXTrans.g:9067:2: rule__LocalVarDecl__Group_0__2__Impl rule__LocalVarDecl__Group_0__3
            {
            pushFollow(FOLLOW_32);
            rule__LocalVarDecl__Group_0__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__LocalVarDecl__Group_0__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_0__2"


    // $ANTLR start "rule__LocalVarDecl__Group_0__2__Impl"
    // InternalFortXTrans.g:9074:1: rule__LocalVarDecl__Group_0__2__Impl : ( '=' ) ;
    public final void rule__LocalVarDecl__Group_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9078:1: ( ( '=' ) )
            // InternalFortXTrans.g:9079:1: ( '=' )
            {
            // InternalFortXTrans.g:9079:1: ( '=' )
            // InternalFortXTrans.g:9080:2: '='
            {
             before(grammarAccess.getLocalVarDeclAccess().getEqualsSignKeyword_0_2()); 
            match(input,35,FOLLOW_2); 
             after(grammarAccess.getLocalVarDeclAccess().getEqualsSignKeyword_0_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_0__2__Impl"


    // $ANTLR start "rule__LocalVarDecl__Group_0__3"
    // InternalFortXTrans.g:9089:1: rule__LocalVarDecl__Group_0__3 : rule__LocalVarDecl__Group_0__3__Impl ;
    public final void rule__LocalVarDecl__Group_0__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9093:1: ( rule__LocalVarDecl__Group_0__3__Impl )
            // InternalFortXTrans.g:9094:2: rule__LocalVarDecl__Group_0__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__LocalVarDecl__Group_0__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_0__3"


    // $ANTLR start "rule__LocalVarDecl__Group_0__3__Impl"
    // InternalFortXTrans.g:9100:1: rule__LocalVarDecl__Group_0__3__Impl : ( ( rule__LocalVarDecl__InitAssignment_0_3 ) ) ;
    public final void rule__LocalVarDecl__Group_0__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9104:1: ( ( ( rule__LocalVarDecl__InitAssignment_0_3 ) ) )
            // InternalFortXTrans.g:9105:1: ( ( rule__LocalVarDecl__InitAssignment_0_3 ) )
            {
            // InternalFortXTrans.g:9105:1: ( ( rule__LocalVarDecl__InitAssignment_0_3 ) )
            // InternalFortXTrans.g:9106:2: ( rule__LocalVarDecl__InitAssignment_0_3 )
            {
             before(grammarAccess.getLocalVarDeclAccess().getInitAssignment_0_3()); 
            // InternalFortXTrans.g:9107:2: ( rule__LocalVarDecl__InitAssignment_0_3 )
            // InternalFortXTrans.g:9107:3: rule__LocalVarDecl__InitAssignment_0_3
            {
            pushFollow(FOLLOW_2);
            rule__LocalVarDecl__InitAssignment_0_3();

            state._fsp--;


            }

             after(grammarAccess.getLocalVarDeclAccess().getInitAssignment_0_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_0__3__Impl"


    // $ANTLR start "rule__LocalVarDecl__Group_1__0"
    // InternalFortXTrans.g:9116:1: rule__LocalVarDecl__Group_1__0 : rule__LocalVarDecl__Group_1__0__Impl rule__LocalVarDecl__Group_1__1 ;
    public final void rule__LocalVarDecl__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9120:1: ( rule__LocalVarDecl__Group_1__0__Impl rule__LocalVarDecl__Group_1__1 )
            // InternalFortXTrans.g:9121:2: rule__LocalVarDecl__Group_1__0__Impl rule__LocalVarDecl__Group_1__1
            {
            pushFollow(FOLLOW_59);
            rule__LocalVarDecl__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__LocalVarDecl__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_1__0"


    // $ANTLR start "rule__LocalVarDecl__Group_1__0__Impl"
    // InternalFortXTrans.g:9128:1: rule__LocalVarDecl__Group_1__0__Impl : ( ( rule__LocalVarDecl__IdtupAssignment_1_0 ) ) ;
    public final void rule__LocalVarDecl__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9132:1: ( ( ( rule__LocalVarDecl__IdtupAssignment_1_0 ) ) )
            // InternalFortXTrans.g:9133:1: ( ( rule__LocalVarDecl__IdtupAssignment_1_0 ) )
            {
            // InternalFortXTrans.g:9133:1: ( ( rule__LocalVarDecl__IdtupAssignment_1_0 ) )
            // InternalFortXTrans.g:9134:2: ( rule__LocalVarDecl__IdtupAssignment_1_0 )
            {
             before(grammarAccess.getLocalVarDeclAccess().getIdtupAssignment_1_0()); 
            // InternalFortXTrans.g:9135:2: ( rule__LocalVarDecl__IdtupAssignment_1_0 )
            // InternalFortXTrans.g:9135:3: rule__LocalVarDecl__IdtupAssignment_1_0
            {
            pushFollow(FOLLOW_2);
            rule__LocalVarDecl__IdtupAssignment_1_0();

            state._fsp--;


            }

             after(grammarAccess.getLocalVarDeclAccess().getIdtupAssignment_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_1__0__Impl"


    // $ANTLR start "rule__LocalVarDecl__Group_1__1"
    // InternalFortXTrans.g:9143:1: rule__LocalVarDecl__Group_1__1 : rule__LocalVarDecl__Group_1__1__Impl rule__LocalVarDecl__Group_1__2 ;
    public final void rule__LocalVarDecl__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9147:1: ( rule__LocalVarDecl__Group_1__1__Impl rule__LocalVarDecl__Group_1__2 )
            // InternalFortXTrans.g:9148:2: rule__LocalVarDecl__Group_1__1__Impl rule__LocalVarDecl__Group_1__2
            {
            pushFollow(FOLLOW_60);
            rule__LocalVarDecl__Group_1__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__LocalVarDecl__Group_1__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_1__1"


    // $ANTLR start "rule__LocalVarDecl__Group_1__1__Impl"
    // InternalFortXTrans.g:9155:1: rule__LocalVarDecl__Group_1__1__Impl : ( '=' ) ;
    public final void rule__LocalVarDecl__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9159:1: ( ( '=' ) )
            // InternalFortXTrans.g:9160:1: ( '=' )
            {
            // InternalFortXTrans.g:9160:1: ( '=' )
            // InternalFortXTrans.g:9161:2: '='
            {
             before(grammarAccess.getLocalVarDeclAccess().getEqualsSignKeyword_1_1()); 
            match(input,35,FOLLOW_2); 
             after(grammarAccess.getLocalVarDeclAccess().getEqualsSignKeyword_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_1__1__Impl"


    // $ANTLR start "rule__LocalVarDecl__Group_1__2"
    // InternalFortXTrans.g:9170:1: rule__LocalVarDecl__Group_1__2 : rule__LocalVarDecl__Group_1__2__Impl ;
    public final void rule__LocalVarDecl__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9174:1: ( rule__LocalVarDecl__Group_1__2__Impl )
            // InternalFortXTrans.g:9175:2: rule__LocalVarDecl__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__LocalVarDecl__Group_1__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_1__2"


    // $ANTLR start "rule__LocalVarDecl__Group_1__2__Impl"
    // InternalFortXTrans.g:9181:1: rule__LocalVarDecl__Group_1__2__Impl : ( ( rule__LocalVarDecl__LitTupAssignment_1_2 ) ) ;
    public final void rule__LocalVarDecl__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9185:1: ( ( ( rule__LocalVarDecl__LitTupAssignment_1_2 ) ) )
            // InternalFortXTrans.g:9186:1: ( ( rule__LocalVarDecl__LitTupAssignment_1_2 ) )
            {
            // InternalFortXTrans.g:9186:1: ( ( rule__LocalVarDecl__LitTupAssignment_1_2 ) )
            // InternalFortXTrans.g:9187:2: ( rule__LocalVarDecl__LitTupAssignment_1_2 )
            {
             before(grammarAccess.getLocalVarDeclAccess().getLitTupAssignment_1_2()); 
            // InternalFortXTrans.g:9188:2: ( rule__LocalVarDecl__LitTupAssignment_1_2 )
            // InternalFortXTrans.g:9188:3: rule__LocalVarDecl__LitTupAssignment_1_2
            {
            pushFollow(FOLLOW_2);
            rule__LocalVarDecl__LitTupAssignment_1_2();

            state._fsp--;


            }

             after(grammarAccess.getLocalVarDeclAccess().getLitTupAssignment_1_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_1__2__Impl"


    // $ANTLR start "rule__LocalVarDecl__Group_2__0"
    // InternalFortXTrans.g:9197:1: rule__LocalVarDecl__Group_2__0 : rule__LocalVarDecl__Group_2__0__Impl rule__LocalVarDecl__Group_2__1 ;
    public final void rule__LocalVarDecl__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9201:1: ( rule__LocalVarDecl__Group_2__0__Impl rule__LocalVarDecl__Group_2__1 )
            // InternalFortXTrans.g:9202:2: rule__LocalVarDecl__Group_2__0__Impl rule__LocalVarDecl__Group_2__1
            {
            pushFollow(FOLLOW_57);
            rule__LocalVarDecl__Group_2__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__LocalVarDecl__Group_2__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_2__0"


    // $ANTLR start "rule__LocalVarDecl__Group_2__0__Impl"
    // InternalFortXTrans.g:9209:1: rule__LocalVarDecl__Group_2__0__Impl : ( ( rule__LocalVarDecl__MutAssignment_2_0 )? ) ;
    public final void rule__LocalVarDecl__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9213:1: ( ( ( rule__LocalVarDecl__MutAssignment_2_0 )? ) )
            // InternalFortXTrans.g:9214:1: ( ( rule__LocalVarDecl__MutAssignment_2_0 )? )
            {
            // InternalFortXTrans.g:9214:1: ( ( rule__LocalVarDecl__MutAssignment_2_0 )? )
            // InternalFortXTrans.g:9215:2: ( rule__LocalVarDecl__MutAssignment_2_0 )?
            {
             before(grammarAccess.getLocalVarDeclAccess().getMutAssignment_2_0()); 
            // InternalFortXTrans.g:9216:2: ( rule__LocalVarDecl__MutAssignment_2_0 )?
            int alt81=2;
            int LA81_0 = input.LA(1);

            if ( (LA81_0==50) ) {
                alt81=1;
            }
            switch (alt81) {
                case 1 :
                    // InternalFortXTrans.g:9216:3: rule__LocalVarDecl__MutAssignment_2_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__LocalVarDecl__MutAssignment_2_0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getLocalVarDeclAccess().getMutAssignment_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_2__0__Impl"


    // $ANTLR start "rule__LocalVarDecl__Group_2__1"
    // InternalFortXTrans.g:9224:1: rule__LocalVarDecl__Group_2__1 : rule__LocalVarDecl__Group_2__1__Impl rule__LocalVarDecl__Group_2__2 ;
    public final void rule__LocalVarDecl__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9228:1: ( rule__LocalVarDecl__Group_2__1__Impl rule__LocalVarDecl__Group_2__2 )
            // InternalFortXTrans.g:9229:2: rule__LocalVarDecl__Group_2__1__Impl rule__LocalVarDecl__Group_2__2
            {
            pushFollow(FOLLOW_26);
            rule__LocalVarDecl__Group_2__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__LocalVarDecl__Group_2__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_2__1"


    // $ANTLR start "rule__LocalVarDecl__Group_2__1__Impl"
    // InternalFortXTrans.g:9236:1: rule__LocalVarDecl__Group_2__1__Impl : ( ( rule__LocalVarDecl__IdtupAssignment_2_1 ) ) ;
    public final void rule__LocalVarDecl__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9240:1: ( ( ( rule__LocalVarDecl__IdtupAssignment_2_1 ) ) )
            // InternalFortXTrans.g:9241:1: ( ( rule__LocalVarDecl__IdtupAssignment_2_1 ) )
            {
            // InternalFortXTrans.g:9241:1: ( ( rule__LocalVarDecl__IdtupAssignment_2_1 ) )
            // InternalFortXTrans.g:9242:2: ( rule__LocalVarDecl__IdtupAssignment_2_1 )
            {
             before(grammarAccess.getLocalVarDeclAccess().getIdtupAssignment_2_1()); 
            // InternalFortXTrans.g:9243:2: ( rule__LocalVarDecl__IdtupAssignment_2_1 )
            // InternalFortXTrans.g:9243:3: rule__LocalVarDecl__IdtupAssignment_2_1
            {
            pushFollow(FOLLOW_2);
            rule__LocalVarDecl__IdtupAssignment_2_1();

            state._fsp--;


            }

             after(grammarAccess.getLocalVarDeclAccess().getIdtupAssignment_2_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_2__1__Impl"


    // $ANTLR start "rule__LocalVarDecl__Group_2__2"
    // InternalFortXTrans.g:9251:1: rule__LocalVarDecl__Group_2__2 : rule__LocalVarDecl__Group_2__2__Impl rule__LocalVarDecl__Group_2__3 ;
    public final void rule__LocalVarDecl__Group_2__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9255:1: ( rule__LocalVarDecl__Group_2__2__Impl rule__LocalVarDecl__Group_2__3 )
            // InternalFortXTrans.g:9256:2: rule__LocalVarDecl__Group_2__2__Impl rule__LocalVarDecl__Group_2__3
            {
            pushFollow(FOLLOW_5);
            rule__LocalVarDecl__Group_2__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__LocalVarDecl__Group_2__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_2__2"


    // $ANTLR start "rule__LocalVarDecl__Group_2__2__Impl"
    // InternalFortXTrans.g:9263:1: rule__LocalVarDecl__Group_2__2__Impl : ( ':' ) ;
    public final void rule__LocalVarDecl__Group_2__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9267:1: ( ( ':' ) )
            // InternalFortXTrans.g:9268:1: ( ':' )
            {
            // InternalFortXTrans.g:9268:1: ( ':' )
            // InternalFortXTrans.g:9269:2: ':'
            {
             before(grammarAccess.getLocalVarDeclAccess().getColonKeyword_2_2()); 
            match(input,23,FOLLOW_2); 
             after(grammarAccess.getLocalVarDeclAccess().getColonKeyword_2_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_2__2__Impl"


    // $ANTLR start "rule__LocalVarDecl__Group_2__3"
    // InternalFortXTrans.g:9278:1: rule__LocalVarDecl__Group_2__3 : rule__LocalVarDecl__Group_2__3__Impl rule__LocalVarDecl__Group_2__4 ;
    public final void rule__LocalVarDecl__Group_2__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9282:1: ( rule__LocalVarDecl__Group_2__3__Impl rule__LocalVarDecl__Group_2__4 )
            // InternalFortXTrans.g:9283:2: rule__LocalVarDecl__Group_2__3__Impl rule__LocalVarDecl__Group_2__4
            {
            pushFollow(FOLLOW_17);
            rule__LocalVarDecl__Group_2__3__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__LocalVarDecl__Group_2__4();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_2__3"


    // $ANTLR start "rule__LocalVarDecl__Group_2__3__Impl"
    // InternalFortXTrans.g:9290:1: rule__LocalVarDecl__Group_2__3__Impl : ( ( rule__LocalVarDecl__TypeAssignment_2_3 ) ) ;
    public final void rule__LocalVarDecl__Group_2__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9294:1: ( ( ( rule__LocalVarDecl__TypeAssignment_2_3 ) ) )
            // InternalFortXTrans.g:9295:1: ( ( rule__LocalVarDecl__TypeAssignment_2_3 ) )
            {
            // InternalFortXTrans.g:9295:1: ( ( rule__LocalVarDecl__TypeAssignment_2_3 ) )
            // InternalFortXTrans.g:9296:2: ( rule__LocalVarDecl__TypeAssignment_2_3 )
            {
             before(grammarAccess.getLocalVarDeclAccess().getTypeAssignment_2_3()); 
            // InternalFortXTrans.g:9297:2: ( rule__LocalVarDecl__TypeAssignment_2_3 )
            // InternalFortXTrans.g:9297:3: rule__LocalVarDecl__TypeAssignment_2_3
            {
            pushFollow(FOLLOW_2);
            rule__LocalVarDecl__TypeAssignment_2_3();

            state._fsp--;


            }

             after(grammarAccess.getLocalVarDeclAccess().getTypeAssignment_2_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_2__3__Impl"


    // $ANTLR start "rule__LocalVarDecl__Group_2__4"
    // InternalFortXTrans.g:9305:1: rule__LocalVarDecl__Group_2__4 : rule__LocalVarDecl__Group_2__4__Impl rule__LocalVarDecl__Group_2__5 ;
    public final void rule__LocalVarDecl__Group_2__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9309:1: ( rule__LocalVarDecl__Group_2__4__Impl rule__LocalVarDecl__Group_2__5 )
            // InternalFortXTrans.g:9310:2: rule__LocalVarDecl__Group_2__4__Impl rule__LocalVarDecl__Group_2__5
            {
            pushFollow(FOLLOW_59);
            rule__LocalVarDecl__Group_2__4__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__LocalVarDecl__Group_2__5();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_2__4"


    // $ANTLR start "rule__LocalVarDecl__Group_2__4__Impl"
    // InternalFortXTrans.g:9317:1: rule__LocalVarDecl__Group_2__4__Impl : ( RULE_DOTS ) ;
    public final void rule__LocalVarDecl__Group_2__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9321:1: ( ( RULE_DOTS ) )
            // InternalFortXTrans.g:9322:1: ( RULE_DOTS )
            {
            // InternalFortXTrans.g:9322:1: ( RULE_DOTS )
            // InternalFortXTrans.g:9323:2: RULE_DOTS
            {
             before(grammarAccess.getLocalVarDeclAccess().getDOTSTerminalRuleCall_2_4()); 
            match(input,RULE_DOTS,FOLLOW_2); 
             after(grammarAccess.getLocalVarDeclAccess().getDOTSTerminalRuleCall_2_4()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_2__4__Impl"


    // $ANTLR start "rule__LocalVarDecl__Group_2__5"
    // InternalFortXTrans.g:9332:1: rule__LocalVarDecl__Group_2__5 : rule__LocalVarDecl__Group_2__5__Impl rule__LocalVarDecl__Group_2__6 ;
    public final void rule__LocalVarDecl__Group_2__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9336:1: ( rule__LocalVarDecl__Group_2__5__Impl rule__LocalVarDecl__Group_2__6 )
            // InternalFortXTrans.g:9337:2: rule__LocalVarDecl__Group_2__5__Impl rule__LocalVarDecl__Group_2__6
            {
            pushFollow(FOLLOW_32);
            rule__LocalVarDecl__Group_2__5__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__LocalVarDecl__Group_2__6();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_2__5"


    // $ANTLR start "rule__LocalVarDecl__Group_2__5__Impl"
    // InternalFortXTrans.g:9344:1: rule__LocalVarDecl__Group_2__5__Impl : ( '=' ) ;
    public final void rule__LocalVarDecl__Group_2__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9348:1: ( ( '=' ) )
            // InternalFortXTrans.g:9349:1: ( '=' )
            {
            // InternalFortXTrans.g:9349:1: ( '=' )
            // InternalFortXTrans.g:9350:2: '='
            {
             before(grammarAccess.getLocalVarDeclAccess().getEqualsSignKeyword_2_5()); 
            match(input,35,FOLLOW_2); 
             after(grammarAccess.getLocalVarDeclAccess().getEqualsSignKeyword_2_5()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_2__5__Impl"


    // $ANTLR start "rule__LocalVarDecl__Group_2__6"
    // InternalFortXTrans.g:9359:1: rule__LocalVarDecl__Group_2__6 : rule__LocalVarDecl__Group_2__6__Impl ;
    public final void rule__LocalVarDecl__Group_2__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9363:1: ( rule__LocalVarDecl__Group_2__6__Impl )
            // InternalFortXTrans.g:9364:2: rule__LocalVarDecl__Group_2__6__Impl
            {
            pushFollow(FOLLOW_2);
            rule__LocalVarDecl__Group_2__6__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_2__6"


    // $ANTLR start "rule__LocalVarDecl__Group_2__6__Impl"
    // InternalFortXTrans.g:9370:1: rule__LocalVarDecl__Group_2__6__Impl : ( ( rule__LocalVarDecl__InitAssignment_2_6 ) ) ;
    public final void rule__LocalVarDecl__Group_2__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9374:1: ( ( ( rule__LocalVarDecl__InitAssignment_2_6 ) ) )
            // InternalFortXTrans.g:9375:1: ( ( rule__LocalVarDecl__InitAssignment_2_6 ) )
            {
            // InternalFortXTrans.g:9375:1: ( ( rule__LocalVarDecl__InitAssignment_2_6 ) )
            // InternalFortXTrans.g:9376:2: ( rule__LocalVarDecl__InitAssignment_2_6 )
            {
             before(grammarAccess.getLocalVarDeclAccess().getInitAssignment_2_6()); 
            // InternalFortXTrans.g:9377:2: ( rule__LocalVarDecl__InitAssignment_2_6 )
            // InternalFortXTrans.g:9377:3: rule__LocalVarDecl__InitAssignment_2_6
            {
            pushFollow(FOLLOW_2);
            rule__LocalVarDecl__InitAssignment_2_6();

            state._fsp--;


            }

             after(grammarAccess.getLocalVarDeclAccess().getInitAssignment_2_6()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_2__6__Impl"


    // $ANTLR start "rule__LocalVarDecl__Group_3__0"
    // InternalFortXTrans.g:9386:1: rule__LocalVarDecl__Group_3__0 : rule__LocalVarDecl__Group_3__0__Impl rule__LocalVarDecl__Group_3__1 ;
    public final void rule__LocalVarDecl__Group_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9390:1: ( rule__LocalVarDecl__Group_3__0__Impl rule__LocalVarDecl__Group_3__1 )
            // InternalFortXTrans.g:9391:2: rule__LocalVarDecl__Group_3__0__Impl rule__LocalVarDecl__Group_3__1
            {
            pushFollow(FOLLOW_57);
            rule__LocalVarDecl__Group_3__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__LocalVarDecl__Group_3__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_3__0"


    // $ANTLR start "rule__LocalVarDecl__Group_3__0__Impl"
    // InternalFortXTrans.g:9398:1: rule__LocalVarDecl__Group_3__0__Impl : ( ( rule__LocalVarDecl__MutAssignment_3_0 )? ) ;
    public final void rule__LocalVarDecl__Group_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9402:1: ( ( ( rule__LocalVarDecl__MutAssignment_3_0 )? ) )
            // InternalFortXTrans.g:9403:1: ( ( rule__LocalVarDecl__MutAssignment_3_0 )? )
            {
            // InternalFortXTrans.g:9403:1: ( ( rule__LocalVarDecl__MutAssignment_3_0 )? )
            // InternalFortXTrans.g:9404:2: ( rule__LocalVarDecl__MutAssignment_3_0 )?
            {
             before(grammarAccess.getLocalVarDeclAccess().getMutAssignment_3_0()); 
            // InternalFortXTrans.g:9405:2: ( rule__LocalVarDecl__MutAssignment_3_0 )?
            int alt82=2;
            int LA82_0 = input.LA(1);

            if ( (LA82_0==50) ) {
                alt82=1;
            }
            switch (alt82) {
                case 1 :
                    // InternalFortXTrans.g:9405:3: rule__LocalVarDecl__MutAssignment_3_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__LocalVarDecl__MutAssignment_3_0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getLocalVarDeclAccess().getMutAssignment_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_3__0__Impl"


    // $ANTLR start "rule__LocalVarDecl__Group_3__1"
    // InternalFortXTrans.g:9413:1: rule__LocalVarDecl__Group_3__1 : rule__LocalVarDecl__Group_3__1__Impl rule__LocalVarDecl__Group_3__2 ;
    public final void rule__LocalVarDecl__Group_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9417:1: ( rule__LocalVarDecl__Group_3__1__Impl rule__LocalVarDecl__Group_3__2 )
            // InternalFortXTrans.g:9418:2: rule__LocalVarDecl__Group_3__1__Impl rule__LocalVarDecl__Group_3__2
            {
            pushFollow(FOLLOW_26);
            rule__LocalVarDecl__Group_3__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__LocalVarDecl__Group_3__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_3__1"


    // $ANTLR start "rule__LocalVarDecl__Group_3__1__Impl"
    // InternalFortXTrans.g:9425:1: rule__LocalVarDecl__Group_3__1__Impl : ( ( rule__LocalVarDecl__IdtupAssignment_3_1 ) ) ;
    public final void rule__LocalVarDecl__Group_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9429:1: ( ( ( rule__LocalVarDecl__IdtupAssignment_3_1 ) ) )
            // InternalFortXTrans.g:9430:1: ( ( rule__LocalVarDecl__IdtupAssignment_3_1 ) )
            {
            // InternalFortXTrans.g:9430:1: ( ( rule__LocalVarDecl__IdtupAssignment_3_1 ) )
            // InternalFortXTrans.g:9431:2: ( rule__LocalVarDecl__IdtupAssignment_3_1 )
            {
             before(grammarAccess.getLocalVarDeclAccess().getIdtupAssignment_3_1()); 
            // InternalFortXTrans.g:9432:2: ( rule__LocalVarDecl__IdtupAssignment_3_1 )
            // InternalFortXTrans.g:9432:3: rule__LocalVarDecl__IdtupAssignment_3_1
            {
            pushFollow(FOLLOW_2);
            rule__LocalVarDecl__IdtupAssignment_3_1();

            state._fsp--;


            }

             after(grammarAccess.getLocalVarDeclAccess().getIdtupAssignment_3_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_3__1__Impl"


    // $ANTLR start "rule__LocalVarDecl__Group_3__2"
    // InternalFortXTrans.g:9440:1: rule__LocalVarDecl__Group_3__2 : rule__LocalVarDecl__Group_3__2__Impl rule__LocalVarDecl__Group_3__3 ;
    public final void rule__LocalVarDecl__Group_3__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9444:1: ( rule__LocalVarDecl__Group_3__2__Impl rule__LocalVarDecl__Group_3__3 )
            // InternalFortXTrans.g:9445:2: rule__LocalVarDecl__Group_3__2__Impl rule__LocalVarDecl__Group_3__3
            {
            pushFollow(FOLLOW_27);
            rule__LocalVarDecl__Group_3__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__LocalVarDecl__Group_3__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_3__2"


    // $ANTLR start "rule__LocalVarDecl__Group_3__2__Impl"
    // InternalFortXTrans.g:9452:1: rule__LocalVarDecl__Group_3__2__Impl : ( ':' ) ;
    public final void rule__LocalVarDecl__Group_3__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9456:1: ( ( ':' ) )
            // InternalFortXTrans.g:9457:1: ( ':' )
            {
            // InternalFortXTrans.g:9457:1: ( ':' )
            // InternalFortXTrans.g:9458:2: ':'
            {
             before(grammarAccess.getLocalVarDeclAccess().getColonKeyword_3_2()); 
            match(input,23,FOLLOW_2); 
             after(grammarAccess.getLocalVarDeclAccess().getColonKeyword_3_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_3__2__Impl"


    // $ANTLR start "rule__LocalVarDecl__Group_3__3"
    // InternalFortXTrans.g:9467:1: rule__LocalVarDecl__Group_3__3 : rule__LocalVarDecl__Group_3__3__Impl rule__LocalVarDecl__Group_3__4 ;
    public final void rule__LocalVarDecl__Group_3__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9471:1: ( rule__LocalVarDecl__Group_3__3__Impl rule__LocalVarDecl__Group_3__4 )
            // InternalFortXTrans.g:9472:2: rule__LocalVarDecl__Group_3__3__Impl rule__LocalVarDecl__Group_3__4
            {
            pushFollow(FOLLOW_59);
            rule__LocalVarDecl__Group_3__3__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__LocalVarDecl__Group_3__4();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_3__3"


    // $ANTLR start "rule__LocalVarDecl__Group_3__3__Impl"
    // InternalFortXTrans.g:9479:1: rule__LocalVarDecl__Group_3__3__Impl : ( ( rule__LocalVarDecl__TuptypeAssignment_3_3 ) ) ;
    public final void rule__LocalVarDecl__Group_3__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9483:1: ( ( ( rule__LocalVarDecl__TuptypeAssignment_3_3 ) ) )
            // InternalFortXTrans.g:9484:1: ( ( rule__LocalVarDecl__TuptypeAssignment_3_3 ) )
            {
            // InternalFortXTrans.g:9484:1: ( ( rule__LocalVarDecl__TuptypeAssignment_3_3 ) )
            // InternalFortXTrans.g:9485:2: ( rule__LocalVarDecl__TuptypeAssignment_3_3 )
            {
             before(grammarAccess.getLocalVarDeclAccess().getTuptypeAssignment_3_3()); 
            // InternalFortXTrans.g:9486:2: ( rule__LocalVarDecl__TuptypeAssignment_3_3 )
            // InternalFortXTrans.g:9486:3: rule__LocalVarDecl__TuptypeAssignment_3_3
            {
            pushFollow(FOLLOW_2);
            rule__LocalVarDecl__TuptypeAssignment_3_3();

            state._fsp--;


            }

             after(grammarAccess.getLocalVarDeclAccess().getTuptypeAssignment_3_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_3__3__Impl"


    // $ANTLR start "rule__LocalVarDecl__Group_3__4"
    // InternalFortXTrans.g:9494:1: rule__LocalVarDecl__Group_3__4 : rule__LocalVarDecl__Group_3__4__Impl rule__LocalVarDecl__Group_3__5 ;
    public final void rule__LocalVarDecl__Group_3__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9498:1: ( rule__LocalVarDecl__Group_3__4__Impl rule__LocalVarDecl__Group_3__5 )
            // InternalFortXTrans.g:9499:2: rule__LocalVarDecl__Group_3__4__Impl rule__LocalVarDecl__Group_3__5
            {
            pushFollow(FOLLOW_32);
            rule__LocalVarDecl__Group_3__4__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__LocalVarDecl__Group_3__5();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_3__4"


    // $ANTLR start "rule__LocalVarDecl__Group_3__4__Impl"
    // InternalFortXTrans.g:9506:1: rule__LocalVarDecl__Group_3__4__Impl : ( '=' ) ;
    public final void rule__LocalVarDecl__Group_3__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9510:1: ( ( '=' ) )
            // InternalFortXTrans.g:9511:1: ( '=' )
            {
            // InternalFortXTrans.g:9511:1: ( '=' )
            // InternalFortXTrans.g:9512:2: '='
            {
             before(grammarAccess.getLocalVarDeclAccess().getEqualsSignKeyword_3_4()); 
            match(input,35,FOLLOW_2); 
             after(grammarAccess.getLocalVarDeclAccess().getEqualsSignKeyword_3_4()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_3__4__Impl"


    // $ANTLR start "rule__LocalVarDecl__Group_3__5"
    // InternalFortXTrans.g:9521:1: rule__LocalVarDecl__Group_3__5 : rule__LocalVarDecl__Group_3__5__Impl ;
    public final void rule__LocalVarDecl__Group_3__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9525:1: ( rule__LocalVarDecl__Group_3__5__Impl )
            // InternalFortXTrans.g:9526:2: rule__LocalVarDecl__Group_3__5__Impl
            {
            pushFollow(FOLLOW_2);
            rule__LocalVarDecl__Group_3__5__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_3__5"


    // $ANTLR start "rule__LocalVarDecl__Group_3__5__Impl"
    // InternalFortXTrans.g:9532:1: rule__LocalVarDecl__Group_3__5__Impl : ( ( rule__LocalVarDecl__InitAssignment_3_5 ) ) ;
    public final void rule__LocalVarDecl__Group_3__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9536:1: ( ( ( rule__LocalVarDecl__InitAssignment_3_5 ) ) )
            // InternalFortXTrans.g:9537:1: ( ( rule__LocalVarDecl__InitAssignment_3_5 ) )
            {
            // InternalFortXTrans.g:9537:1: ( ( rule__LocalVarDecl__InitAssignment_3_5 ) )
            // InternalFortXTrans.g:9538:2: ( rule__LocalVarDecl__InitAssignment_3_5 )
            {
             before(grammarAccess.getLocalVarDeclAccess().getInitAssignment_3_5()); 
            // InternalFortXTrans.g:9539:2: ( rule__LocalVarDecl__InitAssignment_3_5 )
            // InternalFortXTrans.g:9539:3: rule__LocalVarDecl__InitAssignment_3_5
            {
            pushFollow(FOLLOW_2);
            rule__LocalVarDecl__InitAssignment_3_5();

            state._fsp--;


            }

             after(grammarAccess.getLocalVarDeclAccess().getInitAssignment_3_5()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_3__5__Impl"


    // $ANTLR start "rule__Component__NameAssignment_1"
    // InternalFortXTrans.g:9548:1: rule__Component__NameAssignment_1 : ( RULE_ID ) ;
    public final void rule__Component__NameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9552:1: ( ( RULE_ID ) )
            // InternalFortXTrans.g:9553:2: ( RULE_ID )
            {
            // InternalFortXTrans.g:9553:2: ( RULE_ID )
            // InternalFortXTrans.g:9554:3: RULE_ID
            {
             before(grammarAccess.getComponentAccess().getNameIDTerminalRuleCall_1_0()); 
            match(input,RULE_ID,FOLLOW_2); 
             after(grammarAccess.getComponentAccess().getNameIDTerminalRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Component__NameAssignment_1"


    // $ANTLR start "rule__Component__ImportsAssignment_2"
    // InternalFortXTrans.g:9563:1: rule__Component__ImportsAssignment_2 : ( ruleImport ) ;
    public final void rule__Component__ImportsAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9567:1: ( ( ruleImport ) )
            // InternalFortXTrans.g:9568:2: ( ruleImport )
            {
            // InternalFortXTrans.g:9568:2: ( ruleImport )
            // InternalFortXTrans.g:9569:3: ruleImport
            {
             before(grammarAccess.getComponentAccess().getImportsImportParserRuleCall_2_0()); 
            pushFollow(FOLLOW_2);
            ruleImport();

            state._fsp--;

             after(grammarAccess.getComponentAccess().getImportsImportParserRuleCall_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Component__ImportsAssignment_2"


    // $ANTLR start "rule__Component__ExportsAssignment_3"
    // InternalFortXTrans.g:9578:1: rule__Component__ExportsAssignment_3 : ( ruleExport ) ;
    public final void rule__Component__ExportsAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9582:1: ( ( ruleExport ) )
            // InternalFortXTrans.g:9583:2: ( ruleExport )
            {
            // InternalFortXTrans.g:9583:2: ( ruleExport )
            // InternalFortXTrans.g:9584:3: ruleExport
            {
             before(grammarAccess.getComponentAccess().getExportsExportParserRuleCall_3_0()); 
            pushFollow(FOLLOW_2);
            ruleExport();

            state._fsp--;

             after(grammarAccess.getComponentAccess().getExportsExportParserRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Component__ExportsAssignment_3"


    // $ANTLR start "rule__Component__DeclsAssignment_4"
    // InternalFortXTrans.g:9593:1: rule__Component__DeclsAssignment_4 : ( ruleDecls ) ;
    public final void rule__Component__DeclsAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9597:1: ( ( ruleDecls ) )
            // InternalFortXTrans.g:9598:2: ( ruleDecls )
            {
            // InternalFortXTrans.g:9598:2: ( ruleDecls )
            // InternalFortXTrans.g:9599:3: ruleDecls
            {
             before(grammarAccess.getComponentAccess().getDeclsDeclsParserRuleCall_4_0()); 
            pushFollow(FOLLOW_2);
            ruleDecls();

            state._fsp--;

             after(grammarAccess.getComponentAccess().getDeclsDeclsParserRuleCall_4_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Component__DeclsAssignment_4"


    // $ANTLR start "rule__API__NameAssignment_1"
    // InternalFortXTrans.g:9608:1: rule__API__NameAssignment_1 : ( RULE_ID ) ;
    public final void rule__API__NameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9612:1: ( ( RULE_ID ) )
            // InternalFortXTrans.g:9613:2: ( RULE_ID )
            {
            // InternalFortXTrans.g:9613:2: ( RULE_ID )
            // InternalFortXTrans.g:9614:3: RULE_ID
            {
             before(grammarAccess.getAPIAccess().getNameIDTerminalRuleCall_1_0()); 
            match(input,RULE_ID,FOLLOW_2); 
             after(grammarAccess.getAPIAccess().getNameIDTerminalRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__API__NameAssignment_1"


    // $ANTLR start "rule__API__ImportsAssignment_2"
    // InternalFortXTrans.g:9623:1: rule__API__ImportsAssignment_2 : ( ruleImport ) ;
    public final void rule__API__ImportsAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9627:1: ( ( ruleImport ) )
            // InternalFortXTrans.g:9628:2: ( ruleImport )
            {
            // InternalFortXTrans.g:9628:2: ( ruleImport )
            // InternalFortXTrans.g:9629:3: ruleImport
            {
             before(grammarAccess.getAPIAccess().getImportsImportParserRuleCall_2_0()); 
            pushFollow(FOLLOW_2);
            ruleImport();

            state._fsp--;

             after(grammarAccess.getAPIAccess().getImportsImportParserRuleCall_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__API__ImportsAssignment_2"


    // $ANTLR start "rule__Import__ImpsAssignment_0_0"
    // InternalFortXTrans.g:9638:1: rule__Import__ImpsAssignment_0_0 : ( ( 'import' ) ) ;
    public final void rule__Import__ImpsAssignment_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9642:1: ( ( ( 'import' ) ) )
            // InternalFortXTrans.g:9643:2: ( ( 'import' ) )
            {
            // InternalFortXTrans.g:9643:2: ( ( 'import' ) )
            // InternalFortXTrans.g:9644:3: ( 'import' )
            {
             before(grammarAccess.getImportAccess().getImpsImportKeyword_0_0_0()); 
            // InternalFortXTrans.g:9645:3: ( 'import' )
            // InternalFortXTrans.g:9646:4: 'import'
            {
             before(grammarAccess.getImportAccess().getImpsImportKeyword_0_0_0()); 
            match(input,36,FOLLOW_2); 
             after(grammarAccess.getImportAccess().getImpsImportKeyword_0_0_0()); 

            }

             after(grammarAccess.getImportAccess().getImpsImportKeyword_0_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Import__ImpsAssignment_0_0"


    // $ANTLR start "rule__Import__ImportedNamesAssignment_0_1"
    // InternalFortXTrans.g:9657:1: rule__Import__ImportedNamesAssignment_0_1 : ( ruleImportedNames ) ;
    public final void rule__Import__ImportedNamesAssignment_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9661:1: ( ( ruleImportedNames ) )
            // InternalFortXTrans.g:9662:2: ( ruleImportedNames )
            {
            // InternalFortXTrans.g:9662:2: ( ruleImportedNames )
            // InternalFortXTrans.g:9663:3: ruleImportedNames
            {
             before(grammarAccess.getImportAccess().getImportedNamesImportedNamesParserRuleCall_0_1_0()); 
            pushFollow(FOLLOW_2);
            ruleImportedNames();

            state._fsp--;

             after(grammarAccess.getImportAccess().getImportedNamesImportedNamesParserRuleCall_0_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Import__ImportedNamesAssignment_0_1"


    // $ANTLR start "rule__Import__ImpsAssignment_1_0"
    // InternalFortXTrans.g:9672:1: rule__Import__ImpsAssignment_1_0 : ( ( 'import' ) ) ;
    public final void rule__Import__ImpsAssignment_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9676:1: ( ( ( 'import' ) ) )
            // InternalFortXTrans.g:9677:2: ( ( 'import' ) )
            {
            // InternalFortXTrans.g:9677:2: ( ( 'import' ) )
            // InternalFortXTrans.g:9678:3: ( 'import' )
            {
             before(grammarAccess.getImportAccess().getImpsImportKeyword_1_0_0()); 
            // InternalFortXTrans.g:9679:3: ( 'import' )
            // InternalFortXTrans.g:9680:4: 'import'
            {
             before(grammarAccess.getImportAccess().getImpsImportKeyword_1_0_0()); 
            match(input,36,FOLLOW_2); 
             after(grammarAccess.getImportAccess().getImpsImportKeyword_1_0_0()); 

            }

             after(grammarAccess.getImportAccess().getImpsImportKeyword_1_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Import__ImpsAssignment_1_0"


    // $ANTLR start "rule__Import__ApiAssignment_1_1"
    // InternalFortXTrans.g:9691:1: rule__Import__ApiAssignment_1_1 : ( ( 'api' ) ) ;
    public final void rule__Import__ApiAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9695:1: ( ( ( 'api' ) ) )
            // InternalFortXTrans.g:9696:2: ( ( 'api' ) )
            {
            // InternalFortXTrans.g:9696:2: ( ( 'api' ) )
            // InternalFortXTrans.g:9697:3: ( 'api' )
            {
             before(grammarAccess.getImportAccess().getApiApiKeyword_1_1_0()); 
            // InternalFortXTrans.g:9698:3: ( 'api' )
            // InternalFortXTrans.g:9699:4: 'api'
            {
             before(grammarAccess.getImportAccess().getApiApiKeyword_1_1_0()); 
            match(input,15,FOLLOW_2); 
             after(grammarAccess.getImportAccess().getApiApiKeyword_1_1_0()); 

            }

             after(grammarAccess.getImportAccess().getApiApiKeyword_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Import__ApiAssignment_1_1"


    // $ANTLR start "rule__Import__AliasedimportedNamesAssignment_1_2"
    // InternalFortXTrans.g:9710:1: rule__Import__AliasedimportedNamesAssignment_1_2 : ( ruleAliasedAPINames ) ;
    public final void rule__Import__AliasedimportedNamesAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9714:1: ( ( ruleAliasedAPINames ) )
            // InternalFortXTrans.g:9715:2: ( ruleAliasedAPINames )
            {
            // InternalFortXTrans.g:9715:2: ( ruleAliasedAPINames )
            // InternalFortXTrans.g:9716:3: ruleAliasedAPINames
            {
             before(grammarAccess.getImportAccess().getAliasedimportedNamesAliasedAPINamesParserRuleCall_1_2_0()); 
            pushFollow(FOLLOW_2);
            ruleAliasedAPINames();

            state._fsp--;

             after(grammarAccess.getImportAccess().getAliasedimportedNamesAliasedAPINamesParserRuleCall_1_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Import__AliasedimportedNamesAssignment_1_2"


    // $ANTLR start "rule__Export__ExpAssignment_0_0"
    // InternalFortXTrans.g:9725:1: rule__Export__ExpAssignment_0_0 : ( ( 'export' ) ) ;
    public final void rule__Export__ExpAssignment_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9729:1: ( ( ( 'export' ) ) )
            // InternalFortXTrans.g:9730:2: ( ( 'export' ) )
            {
            // InternalFortXTrans.g:9730:2: ( ( 'export' ) )
            // InternalFortXTrans.g:9731:3: ( 'export' )
            {
             before(grammarAccess.getExportAccess().getExpExportKeyword_0_0_0()); 
            // InternalFortXTrans.g:9732:3: ( 'export' )
            // InternalFortXTrans.g:9733:4: 'export'
            {
             before(grammarAccess.getExportAccess().getExpExportKeyword_0_0_0()); 
            match(input,37,FOLLOW_2); 
             after(grammarAccess.getExportAccess().getExpExportKeyword_0_0_0()); 

            }

             after(grammarAccess.getExportAccess().getExpExportKeyword_0_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Export__ExpAssignment_0_0"


    // $ANTLR start "rule__Export__ExportedNameAssignment_0_1"
    // InternalFortXTrans.g:9744:1: rule__Export__ExportedNameAssignment_0_1 : ( ruleQualifiedName ) ;
    public final void rule__Export__ExportedNameAssignment_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9748:1: ( ( ruleQualifiedName ) )
            // InternalFortXTrans.g:9749:2: ( ruleQualifiedName )
            {
            // InternalFortXTrans.g:9749:2: ( ruleQualifiedName )
            // InternalFortXTrans.g:9750:3: ruleQualifiedName
            {
             before(grammarAccess.getExportAccess().getExportedNameQualifiedNameParserRuleCall_0_1_0()); 
            pushFollow(FOLLOW_2);
            ruleQualifiedName();

            state._fsp--;

             after(grammarAccess.getExportAccess().getExportedNameQualifiedNameParserRuleCall_0_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Export__ExportedNameAssignment_0_1"


    // $ANTLR start "rule__Export__ExpAssignment_1_0"
    // InternalFortXTrans.g:9759:1: rule__Export__ExpAssignment_1_0 : ( ( 'export' ) ) ;
    public final void rule__Export__ExpAssignment_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9763:1: ( ( ( 'export' ) ) )
            // InternalFortXTrans.g:9764:2: ( ( 'export' ) )
            {
            // InternalFortXTrans.g:9764:2: ( ( 'export' ) )
            // InternalFortXTrans.g:9765:3: ( 'export' )
            {
             before(grammarAccess.getExportAccess().getExpExportKeyword_1_0_0()); 
            // InternalFortXTrans.g:9766:3: ( 'export' )
            // InternalFortXTrans.g:9767:4: 'export'
            {
             before(grammarAccess.getExportAccess().getExpExportKeyword_1_0_0()); 
            match(input,37,FOLLOW_2); 
             after(grammarAccess.getExportAccess().getExpExportKeyword_1_0_0()); 

            }

             after(grammarAccess.getExportAccess().getExpExportKeyword_1_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Export__ExpAssignment_1_0"


    // $ANTLR start "rule__Export__BrackAssignment_1_1"
    // InternalFortXTrans.g:9778:1: rule__Export__BrackAssignment_1_1 : ( ( '{' ) ) ;
    public final void rule__Export__BrackAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9782:1: ( ( ( '{' ) ) )
            // InternalFortXTrans.g:9783:2: ( ( '{' ) )
            {
            // InternalFortXTrans.g:9783:2: ( ( '{' ) )
            // InternalFortXTrans.g:9784:3: ( '{' )
            {
             before(grammarAccess.getExportAccess().getBrackLeftCurlyBracketKeyword_1_1_0()); 
            // InternalFortXTrans.g:9785:3: ( '{' )
            // InternalFortXTrans.g:9786:4: '{'
            {
             before(grammarAccess.getExportAccess().getBrackLeftCurlyBracketKeyword_1_1_0()); 
            match(input,19,FOLLOW_2); 
             after(grammarAccess.getExportAccess().getBrackLeftCurlyBracketKeyword_1_1_0()); 

            }

             after(grammarAccess.getExportAccess().getBrackLeftCurlyBracketKeyword_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Export__BrackAssignment_1_1"


    // $ANTLR start "rule__Export__ExportedNameAssignment_1_2"
    // InternalFortXTrans.g:9797:1: rule__Export__ExportedNameAssignment_1_2 : ( ruleQualifiedName ) ;
    public final void rule__Export__ExportedNameAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9801:1: ( ( ruleQualifiedName ) )
            // InternalFortXTrans.g:9802:2: ( ruleQualifiedName )
            {
            // InternalFortXTrans.g:9802:2: ( ruleQualifiedName )
            // InternalFortXTrans.g:9803:3: ruleQualifiedName
            {
             before(grammarAccess.getExportAccess().getExportedNameQualifiedNameParserRuleCall_1_2_0()); 
            pushFollow(FOLLOW_2);
            ruleQualifiedName();

            state._fsp--;

             after(grammarAccess.getExportAccess().getExportedNameQualifiedNameParserRuleCall_1_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Export__ExportedNameAssignment_1_2"


    // $ANTLR start "rule__Export__ExportedNameAssignment_1_3_1"
    // InternalFortXTrans.g:9812:1: rule__Export__ExportedNameAssignment_1_3_1 : ( ruleQualifiedName ) ;
    public final void rule__Export__ExportedNameAssignment_1_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9816:1: ( ( ruleQualifiedName ) )
            // InternalFortXTrans.g:9817:2: ( ruleQualifiedName )
            {
            // InternalFortXTrans.g:9817:2: ( ruleQualifiedName )
            // InternalFortXTrans.g:9818:3: ruleQualifiedName
            {
             before(grammarAccess.getExportAccess().getExportedNameQualifiedNameParserRuleCall_1_3_1_0()); 
            pushFollow(FOLLOW_2);
            ruleQualifiedName();

            state._fsp--;

             after(grammarAccess.getExportAccess().getExportedNameQualifiedNameParserRuleCall_1_3_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Export__ExportedNameAssignment_1_3_1"


    // $ANTLR start "rule__ImportedNames__ImpnameAssignment_0_0"
    // InternalFortXTrans.g:9827:1: rule__ImportedNames__ImpnameAssignment_0_0 : ( ruleQualifiedName ) ;
    public final void rule__ImportedNames__ImpnameAssignment_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9831:1: ( ( ruleQualifiedName ) )
            // InternalFortXTrans.g:9832:2: ( ruleQualifiedName )
            {
            // InternalFortXTrans.g:9832:2: ( ruleQualifiedName )
            // InternalFortXTrans.g:9833:3: ruleQualifiedName
            {
             before(grammarAccess.getImportedNamesAccess().getImpnameQualifiedNameParserRuleCall_0_0_0()); 
            pushFollow(FOLLOW_2);
            ruleQualifiedName();

            state._fsp--;

             after(grammarAccess.getImportedNamesAccess().getImpnameQualifiedNameParserRuleCall_0_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__ImpnameAssignment_0_0"


    // $ANTLR start "rule__ImportedNames__ExceptAssignment_0_5_0"
    // InternalFortXTrans.g:9842:1: rule__ImportedNames__ExceptAssignment_0_5_0 : ( ( 'except' ) ) ;
    public final void rule__ImportedNames__ExceptAssignment_0_5_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9846:1: ( ( ( 'except' ) ) )
            // InternalFortXTrans.g:9847:2: ( ( 'except' ) )
            {
            // InternalFortXTrans.g:9847:2: ( ( 'except' ) )
            // InternalFortXTrans.g:9848:3: ( 'except' )
            {
             before(grammarAccess.getImportedNamesAccess().getExceptExceptKeyword_0_5_0_0()); 
            // InternalFortXTrans.g:9849:3: ( 'except' )
            // InternalFortXTrans.g:9850:4: 'except'
            {
             before(grammarAccess.getImportedNamesAccess().getExceptExceptKeyword_0_5_0_0()); 
            match(input,38,FOLLOW_2); 
             after(grammarAccess.getImportedNamesAccess().getExceptExceptKeyword_0_5_0_0()); 

            }

             after(grammarAccess.getImportedNamesAccess().getExceptExceptKeyword_0_5_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__ExceptAssignment_0_5_0"


    // $ANTLR start "rule__ImportedNames__SimpAssignment_0_5_1"
    // InternalFortXTrans.g:9861:1: rule__ImportedNames__SimpAssignment_0_5_1 : ( ruleSimpleNames ) ;
    public final void rule__ImportedNames__SimpAssignment_0_5_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9865:1: ( ( ruleSimpleNames ) )
            // InternalFortXTrans.g:9866:2: ( ruleSimpleNames )
            {
            // InternalFortXTrans.g:9866:2: ( ruleSimpleNames )
            // InternalFortXTrans.g:9867:3: ruleSimpleNames
            {
             before(grammarAccess.getImportedNamesAccess().getSimpSimpleNamesParserRuleCall_0_5_1_0()); 
            pushFollow(FOLLOW_2);
            ruleSimpleNames();

            state._fsp--;

             after(grammarAccess.getImportedNamesAccess().getSimpSimpleNamesParserRuleCall_0_5_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__SimpAssignment_0_5_1"


    // $ANTLR start "rule__ImportedNames__ImpnameAssignment_1_0"
    // InternalFortXTrans.g:9876:1: rule__ImportedNames__ImpnameAssignment_1_0 : ( ruleQualifiedName ) ;
    public final void rule__ImportedNames__ImpnameAssignment_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9880:1: ( ( ruleQualifiedName ) )
            // InternalFortXTrans.g:9881:2: ( ruleQualifiedName )
            {
            // InternalFortXTrans.g:9881:2: ( ruleQualifiedName )
            // InternalFortXTrans.g:9882:3: ruleQualifiedName
            {
             before(grammarAccess.getImportedNamesAccess().getImpnameQualifiedNameParserRuleCall_1_0_0()); 
            pushFollow(FOLLOW_2);
            ruleQualifiedName();

            state._fsp--;

             after(grammarAccess.getImportedNamesAccess().getImpnameQualifiedNameParserRuleCall_1_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__ImpnameAssignment_1_0"


    // $ANTLR start "rule__ImportedNames__SimpListAssignment_1_3"
    // InternalFortXTrans.g:9891:1: rule__ImportedNames__SimpListAssignment_1_3 : ( ruleAliasedSimpleName ) ;
    public final void rule__ImportedNames__SimpListAssignment_1_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9895:1: ( ( ruleAliasedSimpleName ) )
            // InternalFortXTrans.g:9896:2: ( ruleAliasedSimpleName )
            {
            // InternalFortXTrans.g:9896:2: ( ruleAliasedSimpleName )
            // InternalFortXTrans.g:9897:3: ruleAliasedSimpleName
            {
             before(grammarAccess.getImportedNamesAccess().getSimpListAliasedSimpleNameParserRuleCall_1_3_0()); 
            pushFollow(FOLLOW_2);
            ruleAliasedSimpleName();

            state._fsp--;

             after(grammarAccess.getImportedNamesAccess().getSimpListAliasedSimpleNameParserRuleCall_1_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__SimpListAssignment_1_3"


    // $ANTLR start "rule__ImportedNames__SimpListAssignment_1_4_1"
    // InternalFortXTrans.g:9906:1: rule__ImportedNames__SimpListAssignment_1_4_1 : ( ruleAliasedSimpleName ) ;
    public final void rule__ImportedNames__SimpListAssignment_1_4_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9910:1: ( ( ruleAliasedSimpleName ) )
            // InternalFortXTrans.g:9911:2: ( ruleAliasedSimpleName )
            {
            // InternalFortXTrans.g:9911:2: ( ruleAliasedSimpleName )
            // InternalFortXTrans.g:9912:3: ruleAliasedSimpleName
            {
             before(grammarAccess.getImportedNamesAccess().getSimpListAliasedSimpleNameParserRuleCall_1_4_1_0()); 
            pushFollow(FOLLOW_2);
            ruleAliasedSimpleName();

            state._fsp--;

             after(grammarAccess.getImportedNamesAccess().getSimpListAliasedSimpleNameParserRuleCall_1_4_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__SimpListAssignment_1_4_1"


    // $ANTLR start "rule__ImportedNames__CommaAssignment_1_5_0"
    // InternalFortXTrans.g:9921:1: rule__ImportedNames__CommaAssignment_1_5_0 : ( ( ',' ) ) ;
    public final void rule__ImportedNames__CommaAssignment_1_5_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9925:1: ( ( ( ',' ) ) )
            // InternalFortXTrans.g:9926:2: ( ( ',' ) )
            {
            // InternalFortXTrans.g:9926:2: ( ( ',' ) )
            // InternalFortXTrans.g:9927:3: ( ',' )
            {
             before(grammarAccess.getImportedNamesAccess().getCommaCommaKeyword_1_5_0_0()); 
            // InternalFortXTrans.g:9928:3: ( ',' )
            // InternalFortXTrans.g:9929:4: ','
            {
             before(grammarAccess.getImportedNamesAccess().getCommaCommaKeyword_1_5_0_0()); 
            match(input,17,FOLLOW_2); 
             after(grammarAccess.getImportedNamesAccess().getCommaCommaKeyword_1_5_0_0()); 

            }

             after(grammarAccess.getImportedNamesAccess().getCommaCommaKeyword_1_5_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__CommaAssignment_1_5_0"


    // $ANTLR start "rule__ImportedNames__DotsAssignment_1_5_1"
    // InternalFortXTrans.g:9940:1: rule__ImportedNames__DotsAssignment_1_5_1 : ( RULE_DOTS ) ;
    public final void rule__ImportedNames__DotsAssignment_1_5_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9944:1: ( ( RULE_DOTS ) )
            // InternalFortXTrans.g:9945:2: ( RULE_DOTS )
            {
            // InternalFortXTrans.g:9945:2: ( RULE_DOTS )
            // InternalFortXTrans.g:9946:3: RULE_DOTS
            {
             before(grammarAccess.getImportedNamesAccess().getDotsDOTSTerminalRuleCall_1_5_1_0()); 
            match(input,RULE_DOTS,FOLLOW_2); 
             after(grammarAccess.getImportedNamesAccess().getDotsDOTSTerminalRuleCall_1_5_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__DotsAssignment_1_5_1"


    // $ANTLR start "rule__ImportedNames__ImpnameAssignment_2_0"
    // InternalFortXTrans.g:9955:1: rule__ImportedNames__ImpnameAssignment_2_0 : ( ruleQualifiedName ) ;
    public final void rule__ImportedNames__ImpnameAssignment_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9959:1: ( ( ruleQualifiedName ) )
            // InternalFortXTrans.g:9960:2: ( ruleQualifiedName )
            {
            // InternalFortXTrans.g:9960:2: ( ruleQualifiedName )
            // InternalFortXTrans.g:9961:3: ruleQualifiedName
            {
             before(grammarAccess.getImportedNamesAccess().getImpnameQualifiedNameParserRuleCall_2_0_0()); 
            pushFollow(FOLLOW_2);
            ruleQualifiedName();

            state._fsp--;

             after(grammarAccess.getImportedNamesAccess().getImpnameQualifiedNameParserRuleCall_2_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__ImpnameAssignment_2_0"


    // $ANTLR start "rule__ImportedNames__AsnameAssignment_2_1_1"
    // InternalFortXTrans.g:9970:1: rule__ImportedNames__AsnameAssignment_2_1_1 : ( RULE_ID ) ;
    public final void rule__ImportedNames__AsnameAssignment_2_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9974:1: ( ( RULE_ID ) )
            // InternalFortXTrans.g:9975:2: ( RULE_ID )
            {
            // InternalFortXTrans.g:9975:2: ( RULE_ID )
            // InternalFortXTrans.g:9976:3: RULE_ID
            {
             before(grammarAccess.getImportedNamesAccess().getAsnameIDTerminalRuleCall_2_1_1_0()); 
            match(input,RULE_ID,FOLLOW_2); 
             after(grammarAccess.getImportedNamesAccess().getAsnameIDTerminalRuleCall_2_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__AsnameAssignment_2_1_1"


    // $ANTLR start "rule__QualifiedName__SAssignment_0_0"
    // InternalFortXTrans.g:9985:1: rule__QualifiedName__SAssignment_0_0 : ( ruleSimpleName ) ;
    public final void rule__QualifiedName__SAssignment_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9989:1: ( ( ruleSimpleName ) )
            // InternalFortXTrans.g:9990:2: ( ruleSimpleName )
            {
            // InternalFortXTrans.g:9990:2: ( ruleSimpleName )
            // InternalFortXTrans.g:9991:3: ruleSimpleName
            {
             before(grammarAccess.getQualifiedNameAccess().getSSimpleNameParserRuleCall_0_0_0()); 
            pushFollow(FOLLOW_2);
            ruleSimpleName();

            state._fsp--;

             after(grammarAccess.getQualifiedNameAccess().getSSimpleNameParserRuleCall_0_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedName__SAssignment_0_0"


    // $ANTLR start "rule__QualifiedName__DotsAssignment_0_1"
    // InternalFortXTrans.g:10000:1: rule__QualifiedName__DotsAssignment_0_1 : ( RULE_DOTS ) ;
    public final void rule__QualifiedName__DotsAssignment_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10004:1: ( ( RULE_DOTS ) )
            // InternalFortXTrans.g:10005:2: ( RULE_DOTS )
            {
            // InternalFortXTrans.g:10005:2: ( RULE_DOTS )
            // InternalFortXTrans.g:10006:3: RULE_DOTS
            {
             before(grammarAccess.getQualifiedNameAccess().getDotsDOTSTerminalRuleCall_0_1_0()); 
            match(input,RULE_DOTS,FOLLOW_2); 
             after(grammarAccess.getQualifiedNameAccess().getDotsDOTSTerminalRuleCall_0_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedName__DotsAssignment_0_1"


    // $ANTLR start "rule__QualifiedName__SAssignment_1_0"
    // InternalFortXTrans.g:10015:1: rule__QualifiedName__SAssignment_1_0 : ( ruleSimpleName ) ;
    public final void rule__QualifiedName__SAssignment_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10019:1: ( ( ruleSimpleName ) )
            // InternalFortXTrans.g:10020:2: ( ruleSimpleName )
            {
            // InternalFortXTrans.g:10020:2: ( ruleSimpleName )
            // InternalFortXTrans.g:10021:3: ruleSimpleName
            {
             before(grammarAccess.getQualifiedNameAccess().getSSimpleNameParserRuleCall_1_0_0()); 
            pushFollow(FOLLOW_2);
            ruleSimpleName();

            state._fsp--;

             after(grammarAccess.getQualifiedNameAccess().getSSimpleNameParserRuleCall_1_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedName__SAssignment_1_0"


    // $ANTLR start "rule__QualifiedName__SAssignment_1_1_1"
    // InternalFortXTrans.g:10030:1: rule__QualifiedName__SAssignment_1_1_1 : ( ruleSimpleName ) ;
    public final void rule__QualifiedName__SAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10034:1: ( ( ruleSimpleName ) )
            // InternalFortXTrans.g:10035:2: ( ruleSimpleName )
            {
            // InternalFortXTrans.g:10035:2: ( ruleSimpleName )
            // InternalFortXTrans.g:10036:3: ruleSimpleName
            {
             before(grammarAccess.getQualifiedNameAccess().getSSimpleNameParserRuleCall_1_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleSimpleName();

            state._fsp--;

             after(grammarAccess.getQualifiedNameAccess().getSSimpleNameParserRuleCall_1_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedName__SAssignment_1_1_1"


    // $ANTLR start "rule__QualifiedName__DotsAssignment_1_2"
    // InternalFortXTrans.g:10045:1: rule__QualifiedName__DotsAssignment_1_2 : ( RULE_DOTS ) ;
    public final void rule__QualifiedName__DotsAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10049:1: ( ( RULE_DOTS ) )
            // InternalFortXTrans.g:10050:2: ( RULE_DOTS )
            {
            // InternalFortXTrans.g:10050:2: ( RULE_DOTS )
            // InternalFortXTrans.g:10051:3: RULE_DOTS
            {
             before(grammarAccess.getQualifiedNameAccess().getDotsDOTSTerminalRuleCall_1_2_0()); 
            match(input,RULE_DOTS,FOLLOW_2); 
             after(grammarAccess.getQualifiedNameAccess().getDotsDOTSTerminalRuleCall_1_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedName__DotsAssignment_1_2"


    // $ANTLR start "rule__Qualified__QAssignment_0"
    // InternalFortXTrans.g:10060:1: rule__Qualified__QAssignment_0 : ( ruleQualifiedName ) ;
    public final void rule__Qualified__QAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10064:1: ( ( ruleQualifiedName ) )
            // InternalFortXTrans.g:10065:2: ( ruleQualifiedName )
            {
            // InternalFortXTrans.g:10065:2: ( ruleQualifiedName )
            // InternalFortXTrans.g:10066:3: ruleQualifiedName
            {
             before(grammarAccess.getQualifiedAccess().getQQualifiedNameParserRuleCall_0_0()); 
            pushFollow(FOLLOW_2);
            ruleQualifiedName();

            state._fsp--;

             after(grammarAccess.getQualifiedAccess().getQQualifiedNameParserRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Qualified__QAssignment_0"


    // $ANTLR start "rule__Qualified__QlistAssignment_1"
    // InternalFortXTrans.g:10075:1: rule__Qualified__QlistAssignment_1 : ( ruleQualifiedNameTuple ) ;
    public final void rule__Qualified__QlistAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10079:1: ( ( ruleQualifiedNameTuple ) )
            // InternalFortXTrans.g:10080:2: ( ruleQualifiedNameTuple )
            {
            // InternalFortXTrans.g:10080:2: ( ruleQualifiedNameTuple )
            // InternalFortXTrans.g:10081:3: ruleQualifiedNameTuple
            {
             before(grammarAccess.getQualifiedAccess().getQlistQualifiedNameTupleParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleQualifiedNameTuple();

            state._fsp--;

             after(grammarAccess.getQualifiedAccess().getQlistQualifiedNameTupleParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Qualified__QlistAssignment_1"


    // $ANTLR start "rule__QualifiedNameTuple__QlistAssignment_1"
    // InternalFortXTrans.g:10090:1: rule__QualifiedNameTuple__QlistAssignment_1 : ( ruleQualifiedName ) ;
    public final void rule__QualifiedNameTuple__QlistAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10094:1: ( ( ruleQualifiedName ) )
            // InternalFortXTrans.g:10095:2: ( ruleQualifiedName )
            {
            // InternalFortXTrans.g:10095:2: ( ruleQualifiedName )
            // InternalFortXTrans.g:10096:3: ruleQualifiedName
            {
             before(grammarAccess.getQualifiedNameTupleAccess().getQlistQualifiedNameParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleQualifiedName();

            state._fsp--;

             after(grammarAccess.getQualifiedNameTupleAccess().getQlistQualifiedNameParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedNameTuple__QlistAssignment_1"


    // $ANTLR start "rule__QualifiedNameTuple__QlistAssignment_2_1"
    // InternalFortXTrans.g:10105:1: rule__QualifiedNameTuple__QlistAssignment_2_1 : ( ruleQualifiedName ) ;
    public final void rule__QualifiedNameTuple__QlistAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10109:1: ( ( ruleQualifiedName ) )
            // InternalFortXTrans.g:10110:2: ( ruleQualifiedName )
            {
            // InternalFortXTrans.g:10110:2: ( ruleQualifiedName )
            // InternalFortXTrans.g:10111:3: ruleQualifiedName
            {
             before(grammarAccess.getQualifiedNameTupleAccess().getQlistQualifiedNameParserRuleCall_2_1_0()); 
            pushFollow(FOLLOW_2);
            ruleQualifiedName();

            state._fsp--;

             after(grammarAccess.getQualifiedNameTupleAccess().getQlistQualifiedNameParserRuleCall_2_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedNameTuple__QlistAssignment_2_1"


    // $ANTLR start "rule__SimpleNames__NameListAssignment_0"
    // InternalFortXTrans.g:10120:1: rule__SimpleNames__NameListAssignment_0 : ( ruleSimpleName ) ;
    public final void rule__SimpleNames__NameListAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10124:1: ( ( ruleSimpleName ) )
            // InternalFortXTrans.g:10125:2: ( ruleSimpleName )
            {
            // InternalFortXTrans.g:10125:2: ( ruleSimpleName )
            // InternalFortXTrans.g:10126:3: ruleSimpleName
            {
             before(grammarAccess.getSimpleNamesAccess().getNameListSimpleNameParserRuleCall_0_0()); 
            pushFollow(FOLLOW_2);
            ruleSimpleName();

            state._fsp--;

             after(grammarAccess.getSimpleNamesAccess().getNameListSimpleNameParserRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleNames__NameListAssignment_0"


    // $ANTLR start "rule__SimpleNames__BrackAssignment_1_0"
    // InternalFortXTrans.g:10135:1: rule__SimpleNames__BrackAssignment_1_0 : ( ( '{' ) ) ;
    public final void rule__SimpleNames__BrackAssignment_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10139:1: ( ( ( '{' ) ) )
            // InternalFortXTrans.g:10140:2: ( ( '{' ) )
            {
            // InternalFortXTrans.g:10140:2: ( ( '{' ) )
            // InternalFortXTrans.g:10141:3: ( '{' )
            {
             before(grammarAccess.getSimpleNamesAccess().getBrackLeftCurlyBracketKeyword_1_0_0()); 
            // InternalFortXTrans.g:10142:3: ( '{' )
            // InternalFortXTrans.g:10143:4: '{'
            {
             before(grammarAccess.getSimpleNamesAccess().getBrackLeftCurlyBracketKeyword_1_0_0()); 
            match(input,19,FOLLOW_2); 
             after(grammarAccess.getSimpleNamesAccess().getBrackLeftCurlyBracketKeyword_1_0_0()); 

            }

             after(grammarAccess.getSimpleNamesAccess().getBrackLeftCurlyBracketKeyword_1_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleNames__BrackAssignment_1_0"


    // $ANTLR start "rule__SimpleNames__NameListAssignment_1_1"
    // InternalFortXTrans.g:10154:1: rule__SimpleNames__NameListAssignment_1_1 : ( ruleSimpleName ) ;
    public final void rule__SimpleNames__NameListAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10158:1: ( ( ruleSimpleName ) )
            // InternalFortXTrans.g:10159:2: ( ruleSimpleName )
            {
            // InternalFortXTrans.g:10159:2: ( ruleSimpleName )
            // InternalFortXTrans.g:10160:3: ruleSimpleName
            {
             before(grammarAccess.getSimpleNamesAccess().getNameListSimpleNameParserRuleCall_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleSimpleName();

            state._fsp--;

             after(grammarAccess.getSimpleNamesAccess().getNameListSimpleNameParserRuleCall_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleNames__NameListAssignment_1_1"


    // $ANTLR start "rule__SimpleNames__NameListAssignment_1_2_1"
    // InternalFortXTrans.g:10169:1: rule__SimpleNames__NameListAssignment_1_2_1 : ( ruleSimpleName ) ;
    public final void rule__SimpleNames__NameListAssignment_1_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10173:1: ( ( ruleSimpleName ) )
            // InternalFortXTrans.g:10174:2: ( ruleSimpleName )
            {
            // InternalFortXTrans.g:10174:2: ( ruleSimpleName )
            // InternalFortXTrans.g:10175:3: ruleSimpleName
            {
             before(grammarAccess.getSimpleNamesAccess().getNameListSimpleNameParserRuleCall_1_2_1_0()); 
            pushFollow(FOLLOW_2);
            ruleSimpleName();

            state._fsp--;

             after(grammarAccess.getSimpleNamesAccess().getNameListSimpleNameParserRuleCall_1_2_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleNames__NameListAssignment_1_2_1"


    // $ANTLR start "rule__SimpleName__NameAssignment"
    // InternalFortXTrans.g:10184:1: rule__SimpleName__NameAssignment : ( RULE_ID ) ;
    public final void rule__SimpleName__NameAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10188:1: ( ( RULE_ID ) )
            // InternalFortXTrans.g:10189:2: ( RULE_ID )
            {
            // InternalFortXTrans.g:10189:2: ( RULE_ID )
            // InternalFortXTrans.g:10190:3: RULE_ID
            {
             before(grammarAccess.getSimpleNameAccess().getNameIDTerminalRuleCall_0()); 
            match(input,RULE_ID,FOLLOW_2); 
             after(grammarAccess.getSimpleNameAccess().getNameIDTerminalRuleCall_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleName__NameAssignment"


    // $ANTLR start "rule__AliasedSimpleName__OrigAssignment_0"
    // InternalFortXTrans.g:10199:1: rule__AliasedSimpleName__OrigAssignment_0 : ( RULE_ID ) ;
    public final void rule__AliasedSimpleName__OrigAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10203:1: ( ( RULE_ID ) )
            // InternalFortXTrans.g:10204:2: ( RULE_ID )
            {
            // InternalFortXTrans.g:10204:2: ( RULE_ID )
            // InternalFortXTrans.g:10205:3: RULE_ID
            {
             before(grammarAccess.getAliasedSimpleNameAccess().getOrigIDTerminalRuleCall_0_0()); 
            match(input,RULE_ID,FOLLOW_2); 
             after(grammarAccess.getAliasedSimpleNameAccess().getOrigIDTerminalRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedSimpleName__OrigAssignment_0"


    // $ANTLR start "rule__AliasedSimpleName__AsNameAssignment_1_1"
    // InternalFortXTrans.g:10214:1: rule__AliasedSimpleName__AsNameAssignment_1_1 : ( RULE_ID ) ;
    public final void rule__AliasedSimpleName__AsNameAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10218:1: ( ( RULE_ID ) )
            // InternalFortXTrans.g:10219:2: ( RULE_ID )
            {
            // InternalFortXTrans.g:10219:2: ( RULE_ID )
            // InternalFortXTrans.g:10220:3: RULE_ID
            {
             before(grammarAccess.getAliasedSimpleNameAccess().getAsNameIDTerminalRuleCall_1_1_0()); 
            match(input,RULE_ID,FOLLOW_2); 
             after(grammarAccess.getAliasedSimpleNameAccess().getAsNameIDTerminalRuleCall_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedSimpleName__AsNameAssignment_1_1"


    // $ANTLR start "rule__AliasedAPINames__NameListAssignment_0"
    // InternalFortXTrans.g:10229:1: rule__AliasedAPINames__NameListAssignment_0 : ( ruleAliasedAPIName ) ;
    public final void rule__AliasedAPINames__NameListAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10233:1: ( ( ruleAliasedAPIName ) )
            // InternalFortXTrans.g:10234:2: ( ruleAliasedAPIName )
            {
            // InternalFortXTrans.g:10234:2: ( ruleAliasedAPIName )
            // InternalFortXTrans.g:10235:3: ruleAliasedAPIName
            {
             before(grammarAccess.getAliasedAPINamesAccess().getNameListAliasedAPINameParserRuleCall_0_0()); 
            pushFollow(FOLLOW_2);
            ruleAliasedAPIName();

            state._fsp--;

             after(grammarAccess.getAliasedAPINamesAccess().getNameListAliasedAPINameParserRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedAPINames__NameListAssignment_0"


    // $ANTLR start "rule__AliasedAPINames__BrackAssignment_1_0"
    // InternalFortXTrans.g:10244:1: rule__AliasedAPINames__BrackAssignment_1_0 : ( ( '{' ) ) ;
    public final void rule__AliasedAPINames__BrackAssignment_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10248:1: ( ( ( '{' ) ) )
            // InternalFortXTrans.g:10249:2: ( ( '{' ) )
            {
            // InternalFortXTrans.g:10249:2: ( ( '{' ) )
            // InternalFortXTrans.g:10250:3: ( '{' )
            {
             before(grammarAccess.getAliasedAPINamesAccess().getBrackLeftCurlyBracketKeyword_1_0_0()); 
            // InternalFortXTrans.g:10251:3: ( '{' )
            // InternalFortXTrans.g:10252:4: '{'
            {
             before(grammarAccess.getAliasedAPINamesAccess().getBrackLeftCurlyBracketKeyword_1_0_0()); 
            match(input,19,FOLLOW_2); 
             after(grammarAccess.getAliasedAPINamesAccess().getBrackLeftCurlyBracketKeyword_1_0_0()); 

            }

             after(grammarAccess.getAliasedAPINamesAccess().getBrackLeftCurlyBracketKeyword_1_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedAPINames__BrackAssignment_1_0"


    // $ANTLR start "rule__AliasedAPINames__NameListAssignment_1_1"
    // InternalFortXTrans.g:10263:1: rule__AliasedAPINames__NameListAssignment_1_1 : ( ruleAliasedAPIName ) ;
    public final void rule__AliasedAPINames__NameListAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10267:1: ( ( ruleAliasedAPIName ) )
            // InternalFortXTrans.g:10268:2: ( ruleAliasedAPIName )
            {
            // InternalFortXTrans.g:10268:2: ( ruleAliasedAPIName )
            // InternalFortXTrans.g:10269:3: ruleAliasedAPIName
            {
             before(grammarAccess.getAliasedAPINamesAccess().getNameListAliasedAPINameParserRuleCall_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleAliasedAPIName();

            state._fsp--;

             after(grammarAccess.getAliasedAPINamesAccess().getNameListAliasedAPINameParserRuleCall_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedAPINames__NameListAssignment_1_1"


    // $ANTLR start "rule__AliasedAPINames__NameListAssignment_1_2_1"
    // InternalFortXTrans.g:10278:1: rule__AliasedAPINames__NameListAssignment_1_2_1 : ( ruleAliasedAPIName ) ;
    public final void rule__AliasedAPINames__NameListAssignment_1_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10282:1: ( ( ruleAliasedAPIName ) )
            // InternalFortXTrans.g:10283:2: ( ruleAliasedAPIName )
            {
            // InternalFortXTrans.g:10283:2: ( ruleAliasedAPIName )
            // InternalFortXTrans.g:10284:3: ruleAliasedAPIName
            {
             before(grammarAccess.getAliasedAPINamesAccess().getNameListAliasedAPINameParserRuleCall_1_2_1_0()); 
            pushFollow(FOLLOW_2);
            ruleAliasedAPIName();

            state._fsp--;

             after(grammarAccess.getAliasedAPINamesAccess().getNameListAliasedAPINameParserRuleCall_1_2_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedAPINames__NameListAssignment_1_2_1"


    // $ANTLR start "rule__AliasedAPIName__OrigAssignment_0"
    // InternalFortXTrans.g:10293:1: rule__AliasedAPIName__OrigAssignment_0 : ( ruleQualifiedName ) ;
    public final void rule__AliasedAPIName__OrigAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10297:1: ( ( ruleQualifiedName ) )
            // InternalFortXTrans.g:10298:2: ( ruleQualifiedName )
            {
            // InternalFortXTrans.g:10298:2: ( ruleQualifiedName )
            // InternalFortXTrans.g:10299:3: ruleQualifiedName
            {
             before(grammarAccess.getAliasedAPINameAccess().getOrigQualifiedNameParserRuleCall_0_0()); 
            pushFollow(FOLLOW_2);
            ruleQualifiedName();

            state._fsp--;

             after(grammarAccess.getAliasedAPINameAccess().getOrigQualifiedNameParserRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedAPIName__OrigAssignment_0"


    // $ANTLR start "rule__AliasedAPIName__AsNameAssignment_1_1"
    // InternalFortXTrans.g:10308:1: rule__AliasedAPIName__AsNameAssignment_1_1 : ( RULE_ID ) ;
    public final void rule__AliasedAPIName__AsNameAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10312:1: ( ( RULE_ID ) )
            // InternalFortXTrans.g:10313:2: ( RULE_ID )
            {
            // InternalFortXTrans.g:10313:2: ( RULE_ID )
            // InternalFortXTrans.g:10314:3: RULE_ID
            {
             before(grammarAccess.getAliasedAPINameAccess().getAsNameIDTerminalRuleCall_1_1_0()); 
            match(input,RULE_ID,FOLLOW_2); 
             after(grammarAccess.getAliasedAPINameAccess().getAsNameIDTerminalRuleCall_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedAPIName__AsNameAssignment_1_1"


    // $ANTLR start "rule__Decls__DeclsAssignment"
    // InternalFortXTrans.g:10323:1: rule__Decls__DeclsAssignment : ( ruleDecl ) ;
    public final void rule__Decls__DeclsAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10327:1: ( ( ruleDecl ) )
            // InternalFortXTrans.g:10328:2: ( ruleDecl )
            {
            // InternalFortXTrans.g:10328:2: ( ruleDecl )
            // InternalFortXTrans.g:10329:3: ruleDecl
            {
             before(grammarAccess.getDeclsAccess().getDeclsDeclParserRuleCall_0()); 
            pushFollow(FOLLOW_2);
            ruleDecl();

            state._fsp--;

             after(grammarAccess.getDeclsAccess().getDeclsDeclParserRuleCall_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Decls__DeclsAssignment"


    // $ANTLR start "rule__Decl__FunctionAssignment_0"
    // InternalFortXTrans.g:10338:1: rule__Decl__FunctionAssignment_0 : ( ruleFnDecl ) ;
    public final void rule__Decl__FunctionAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10342:1: ( ( ruleFnDecl ) )
            // InternalFortXTrans.g:10343:2: ( ruleFnDecl )
            {
            // InternalFortXTrans.g:10343:2: ( ruleFnDecl )
            // InternalFortXTrans.g:10344:3: ruleFnDecl
            {
             before(grammarAccess.getDeclAccess().getFunctionFnDeclParserRuleCall_0_0()); 
            pushFollow(FOLLOW_2);
            ruleFnDecl();

            state._fsp--;

             after(grammarAccess.getDeclAccess().getFunctionFnDeclParserRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Decl__FunctionAssignment_0"


    // $ANTLR start "rule__Decl__FieldAssignment_1"
    // InternalFortXTrans.g:10353:1: rule__Decl__FieldAssignment_1 : ( ruleFieldDecl ) ;
    public final void rule__Decl__FieldAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10357:1: ( ( ruleFieldDecl ) )
            // InternalFortXTrans.g:10358:2: ( ruleFieldDecl )
            {
            // InternalFortXTrans.g:10358:2: ( ruleFieldDecl )
            // InternalFortXTrans.g:10359:3: ruleFieldDecl
            {
             before(grammarAccess.getDeclAccess().getFieldFieldDeclParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleFieldDecl();

            state._fsp--;

             after(grammarAccess.getDeclAccess().getFieldFieldDeclParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Decl__FieldAssignment_1"


    // $ANTLR start "rule__FnMods__ModsAssignment"
    // InternalFortXTrans.g:10368:1: rule__FnMods__ModsAssignment : ( ruleFnMod ) ;
    public final void rule__FnMods__ModsAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10372:1: ( ( ruleFnMod ) )
            // InternalFortXTrans.g:10373:2: ( ruleFnMod )
            {
            // InternalFortXTrans.g:10373:2: ( ruleFnMod )
            // InternalFortXTrans.g:10374:3: ruleFnMod
            {
             before(grammarAccess.getFnModsAccess().getModsFnModParserRuleCall_0()); 
            pushFollow(FOLLOW_2);
            ruleFnMod();

            state._fsp--;

             after(grammarAccess.getFnModsAccess().getModsFnModParserRuleCall_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FnMods__ModsAssignment"


    // $ANTLR start "rule__FnMod__ModtypeAssignment_0"
    // InternalFortXTrans.g:10383:1: rule__FnMod__ModtypeAssignment_0 : ( ( 'private' ) ) ;
    public final void rule__FnMod__ModtypeAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10387:1: ( ( ( 'private' ) ) )
            // InternalFortXTrans.g:10388:2: ( ( 'private' ) )
            {
            // InternalFortXTrans.g:10388:2: ( ( 'private' ) )
            // InternalFortXTrans.g:10389:3: ( 'private' )
            {
             before(grammarAccess.getFnModAccess().getModtypePrivateKeyword_0_0()); 
            // InternalFortXTrans.g:10390:3: ( 'private' )
            // InternalFortXTrans.g:10391:4: 'private'
            {
             before(grammarAccess.getFnModAccess().getModtypePrivateKeyword_0_0()); 
            match(input,39,FOLLOW_2); 
             after(grammarAccess.getFnModAccess().getModtypePrivateKeyword_0_0()); 

            }

             after(grammarAccess.getFnModAccess().getModtypePrivateKeyword_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FnMod__ModtypeAssignment_0"


    // $ANTLR start "rule__FnMod__ModtypeAssignment_1"
    // InternalFortXTrans.g:10402:1: rule__FnMod__ModtypeAssignment_1 : ( ( 'test' ) ) ;
    public final void rule__FnMod__ModtypeAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10406:1: ( ( ( 'test' ) ) )
            // InternalFortXTrans.g:10407:2: ( ( 'test' ) )
            {
            // InternalFortXTrans.g:10407:2: ( ( 'test' ) )
            // InternalFortXTrans.g:10408:3: ( 'test' )
            {
             before(grammarAccess.getFnModAccess().getModtypeTestKeyword_1_0()); 
            // InternalFortXTrans.g:10409:3: ( 'test' )
            // InternalFortXTrans.g:10410:4: 'test'
            {
             before(grammarAccess.getFnModAccess().getModtypeTestKeyword_1_0()); 
            match(input,40,FOLLOW_2); 
             after(grammarAccess.getFnModAccess().getModtypeTestKeyword_1_0()); 

            }

             after(grammarAccess.getFnModAccess().getModtypeTestKeyword_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FnMod__ModtypeAssignment_1"


    // $ANTLR start "rule__FnMod__ModtypeAssignment_2"
    // InternalFortXTrans.g:10421:1: rule__FnMod__ModtypeAssignment_2 : ( ( 'atomic' ) ) ;
    public final void rule__FnMod__ModtypeAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10425:1: ( ( ( 'atomic' ) ) )
            // InternalFortXTrans.g:10426:2: ( ( 'atomic' ) )
            {
            // InternalFortXTrans.g:10426:2: ( ( 'atomic' ) )
            // InternalFortXTrans.g:10427:3: ( 'atomic' )
            {
             before(grammarAccess.getFnModAccess().getModtypeAtomicKeyword_2_0()); 
            // InternalFortXTrans.g:10428:3: ( 'atomic' )
            // InternalFortXTrans.g:10429:4: 'atomic'
            {
             before(grammarAccess.getFnModAccess().getModtypeAtomicKeyword_2_0()); 
            match(input,41,FOLLOW_2); 
             after(grammarAccess.getFnModAccess().getModtypeAtomicKeyword_2_0()); 

            }

             after(grammarAccess.getFnModAccess().getModtypeAtomicKeyword_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FnMod__ModtypeAssignment_2"


    // $ANTLR start "rule__FnMod__ModtypeAssignment_3"
    // InternalFortXTrans.g:10440:1: rule__FnMod__ModtypeAssignment_3 : ( ( 'io' ) ) ;
    public final void rule__FnMod__ModtypeAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10444:1: ( ( ( 'io' ) ) )
            // InternalFortXTrans.g:10445:2: ( ( 'io' ) )
            {
            // InternalFortXTrans.g:10445:2: ( ( 'io' ) )
            // InternalFortXTrans.g:10446:3: ( 'io' )
            {
             before(grammarAccess.getFnModAccess().getModtypeIoKeyword_3_0()); 
            // InternalFortXTrans.g:10447:3: ( 'io' )
            // InternalFortXTrans.g:10448:4: 'io'
            {
             before(grammarAccess.getFnModAccess().getModtypeIoKeyword_3_0()); 
            match(input,42,FOLLOW_2); 
             after(grammarAccess.getFnModAccess().getModtypeIoKeyword_3_0()); 

            }

             after(grammarAccess.getFnModAccess().getModtypeIoKeyword_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FnMod__ModtypeAssignment_3"


    // $ANTLR start "rule__ValParam__ParamsAssignment_0"
    // InternalFortXTrans.g:10459:1: rule__ValParam__ParamsAssignment_0 : ( ruleParam ) ;
    public final void rule__ValParam__ParamsAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10463:1: ( ( ruleParam ) )
            // InternalFortXTrans.g:10464:2: ( ruleParam )
            {
            // InternalFortXTrans.g:10464:2: ( ruleParam )
            // InternalFortXTrans.g:10465:3: ruleParam
            {
             before(grammarAccess.getValParamAccess().getParamsParamParserRuleCall_0_0()); 
            pushFollow(FOLLOW_2);
            ruleParam();

            state._fsp--;

             after(grammarAccess.getValParamAccess().getParamsParamParserRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValParam__ParamsAssignment_0"


    // $ANTLR start "rule__ValParam__BrackAssignment_1_0"
    // InternalFortXTrans.g:10474:1: rule__ValParam__BrackAssignment_1_0 : ( ( '(' ) ) ;
    public final void rule__ValParam__BrackAssignment_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10478:1: ( ( ( '(' ) ) )
            // InternalFortXTrans.g:10479:2: ( ( '(' ) )
            {
            // InternalFortXTrans.g:10479:2: ( ( '(' ) )
            // InternalFortXTrans.g:10480:3: ( '(' )
            {
             before(grammarAccess.getValParamAccess().getBrackLeftParenthesisKeyword_1_0_0()); 
            // InternalFortXTrans.g:10481:3: ( '(' )
            // InternalFortXTrans.g:10482:4: '('
            {
             before(grammarAccess.getValParamAccess().getBrackLeftParenthesisKeyword_1_0_0()); 
            match(input,21,FOLLOW_2); 
             after(grammarAccess.getValParamAccess().getBrackLeftParenthesisKeyword_1_0_0()); 

            }

             after(grammarAccess.getValParamAccess().getBrackLeftParenthesisKeyword_1_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValParam__BrackAssignment_1_0"


    // $ANTLR start "rule__ValParam__ParamsAssignment_1_1_0"
    // InternalFortXTrans.g:10493:1: rule__ValParam__ParamsAssignment_1_1_0 : ( ruleParam ) ;
    public final void rule__ValParam__ParamsAssignment_1_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10497:1: ( ( ruleParam ) )
            // InternalFortXTrans.g:10498:2: ( ruleParam )
            {
            // InternalFortXTrans.g:10498:2: ( ruleParam )
            // InternalFortXTrans.g:10499:3: ruleParam
            {
             before(grammarAccess.getValParamAccess().getParamsParamParserRuleCall_1_1_0_0()); 
            pushFollow(FOLLOW_2);
            ruleParam();

            state._fsp--;

             after(grammarAccess.getValParamAccess().getParamsParamParserRuleCall_1_1_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValParam__ParamsAssignment_1_1_0"


    // $ANTLR start "rule__ValParam__ParamsAssignment_1_1_1_1"
    // InternalFortXTrans.g:10508:1: rule__ValParam__ParamsAssignment_1_1_1_1 : ( ruleParam ) ;
    public final void rule__ValParam__ParamsAssignment_1_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10512:1: ( ( ruleParam ) )
            // InternalFortXTrans.g:10513:2: ( ruleParam )
            {
            // InternalFortXTrans.g:10513:2: ( ruleParam )
            // InternalFortXTrans.g:10514:3: ruleParam
            {
             before(grammarAccess.getValParamAccess().getParamsParamParserRuleCall_1_1_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleParam();

            state._fsp--;

             after(grammarAccess.getValParamAccess().getParamsParamParserRuleCall_1_1_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValParam__ParamsAssignment_1_1_1_1"


    // $ANTLR start "rule__Param__BIdAssignment_0"
    // InternalFortXTrans.g:10523:1: rule__Param__BIdAssignment_0 : ( ruleBindId ) ;
    public final void rule__Param__BIdAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10527:1: ( ( ruleBindId ) )
            // InternalFortXTrans.g:10528:2: ( ruleBindId )
            {
            // InternalFortXTrans.g:10528:2: ( ruleBindId )
            // InternalFortXTrans.g:10529:3: ruleBindId
            {
             before(grammarAccess.getParamAccess().getBIdBindIdParserRuleCall_0_0()); 
            pushFollow(FOLLOW_2);
            ruleBindId();

            state._fsp--;

             after(grammarAccess.getParamAccess().getBIdBindIdParserRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Param__BIdAssignment_0"


    // $ANTLR start "rule__Param__IstypeAssignment_1"
    // InternalFortXTrans.g:10538:1: rule__Param__IstypeAssignment_1 : ( ruleIsType ) ;
    public final void rule__Param__IstypeAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10542:1: ( ( ruleIsType ) )
            // InternalFortXTrans.g:10543:2: ( ruleIsType )
            {
            // InternalFortXTrans.g:10543:2: ( ruleIsType )
            // InternalFortXTrans.g:10544:3: ruleIsType
            {
             before(grammarAccess.getParamAccess().getIstypeIsTypeParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleIsType();

            state._fsp--;

             after(grammarAccess.getParamAccess().getIstypeIsTypeParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Param__IstypeAssignment_1"


    // $ANTLR start "rule__RetType__EmptyAssignment_0_1"
    // InternalFortXTrans.g:10553:1: rule__RetType__EmptyAssignment_0_1 : ( ( '(' ) ) ;
    public final void rule__RetType__EmptyAssignment_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10557:1: ( ( ( '(' ) ) )
            // InternalFortXTrans.g:10558:2: ( ( '(' ) )
            {
            // InternalFortXTrans.g:10558:2: ( ( '(' ) )
            // InternalFortXTrans.g:10559:3: ( '(' )
            {
             before(grammarAccess.getRetTypeAccess().getEmptyLeftParenthesisKeyword_0_1_0()); 
            // InternalFortXTrans.g:10560:3: ( '(' )
            // InternalFortXTrans.g:10561:4: '('
            {
             before(grammarAccess.getRetTypeAccess().getEmptyLeftParenthesisKeyword_0_1_0()); 
            match(input,21,FOLLOW_2); 
             after(grammarAccess.getRetTypeAccess().getEmptyLeftParenthesisKeyword_0_1_0()); 

            }

             after(grammarAccess.getRetTypeAccess().getEmptyLeftParenthesisKeyword_0_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RetType__EmptyAssignment_0_1"


    // $ANTLR start "rule__RetType__TypeAssignment_1_1"
    // InternalFortXTrans.g:10572:1: rule__RetType__TypeAssignment_1_1 : ( ruleSimpleName ) ;
    public final void rule__RetType__TypeAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10576:1: ( ( ruleSimpleName ) )
            // InternalFortXTrans.g:10577:2: ( ruleSimpleName )
            {
            // InternalFortXTrans.g:10577:2: ( ruleSimpleName )
            // InternalFortXTrans.g:10578:3: ruleSimpleName
            {
             before(grammarAccess.getRetTypeAccess().getTypeSimpleNameParserRuleCall_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleSimpleName();

            state._fsp--;

             after(grammarAccess.getRetTypeAccess().getTypeSimpleNameParserRuleCall_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RetType__TypeAssignment_1_1"


    // $ANTLR start "rule__TupleType__TypesAssignment_1"
    // InternalFortXTrans.g:10587:1: rule__TupleType__TypesAssignment_1 : ( ruleSimpleName ) ;
    public final void rule__TupleType__TypesAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10591:1: ( ( ruleSimpleName ) )
            // InternalFortXTrans.g:10592:2: ( ruleSimpleName )
            {
            // InternalFortXTrans.g:10592:2: ( ruleSimpleName )
            // InternalFortXTrans.g:10593:3: ruleSimpleName
            {
             before(grammarAccess.getTupleTypeAccess().getTypesSimpleNameParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleSimpleName();

            state._fsp--;

             after(grammarAccess.getTupleTypeAccess().getTypesSimpleNameParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TupleType__TypesAssignment_1"


    // $ANTLR start "rule__TupleType__TypesAssignment_2_1"
    // InternalFortXTrans.g:10602:1: rule__TupleType__TypesAssignment_2_1 : ( ruleSimpleName ) ;
    public final void rule__TupleType__TypesAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10606:1: ( ( ruleSimpleName ) )
            // InternalFortXTrans.g:10607:2: ( ruleSimpleName )
            {
            // InternalFortXTrans.g:10607:2: ( ruleSimpleName )
            // InternalFortXTrans.g:10608:3: ruleSimpleName
            {
             before(grammarAccess.getTupleTypeAccess().getTypesSimpleNameParserRuleCall_2_1_0()); 
            pushFollow(FOLLOW_2);
            ruleSimpleName();

            state._fsp--;

             after(grammarAccess.getTupleTypeAccess().getTypesSimpleNameParserRuleCall_2_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TupleType__TypesAssignment_2_1"


    // $ANTLR start "rule__FnDecl__ModsAssignment_0"
    // InternalFortXTrans.g:10617:1: rule__FnDecl__ModsAssignment_0 : ( ruleFnMods ) ;
    public final void rule__FnDecl__ModsAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10621:1: ( ( ruleFnMods ) )
            // InternalFortXTrans.g:10622:2: ( ruleFnMods )
            {
            // InternalFortXTrans.g:10622:2: ( ruleFnMods )
            // InternalFortXTrans.g:10623:3: ruleFnMods
            {
             before(grammarAccess.getFnDeclAccess().getModsFnModsParserRuleCall_0_0()); 
            pushFollow(FOLLOW_2);
            ruleFnMods();

            state._fsp--;

             after(grammarAccess.getFnDeclAccess().getModsFnModsParserRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FnDecl__ModsAssignment_0"


    // $ANTLR start "rule__FnDecl__NameAssignment_1"
    // InternalFortXTrans.g:10632:1: rule__FnDecl__NameAssignment_1 : ( RULE_ID ) ;
    public final void rule__FnDecl__NameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10636:1: ( ( RULE_ID ) )
            // InternalFortXTrans.g:10637:2: ( RULE_ID )
            {
            // InternalFortXTrans.g:10637:2: ( RULE_ID )
            // InternalFortXTrans.g:10638:3: RULE_ID
            {
             before(grammarAccess.getFnDeclAccess().getNameIDTerminalRuleCall_1_0()); 
            match(input,RULE_ID,FOLLOW_2); 
             after(grammarAccess.getFnDeclAccess().getNameIDTerminalRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FnDecl__NameAssignment_1"


    // $ANTLR start "rule__FnDecl__ParamsAssignment_2"
    // InternalFortXTrans.g:10647:1: rule__FnDecl__ParamsAssignment_2 : ( ruleValParam ) ;
    public final void rule__FnDecl__ParamsAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10651:1: ( ( ruleValParam ) )
            // InternalFortXTrans.g:10652:2: ( ruleValParam )
            {
            // InternalFortXTrans.g:10652:2: ( ruleValParam )
            // InternalFortXTrans.g:10653:3: ruleValParam
            {
             before(grammarAccess.getFnDeclAccess().getParamsValParamParserRuleCall_2_0()); 
            pushFollow(FOLLOW_2);
            ruleValParam();

            state._fsp--;

             after(grammarAccess.getFnDeclAccess().getParamsValParamParserRuleCall_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FnDecl__ParamsAssignment_2"


    // $ANTLR start "rule__FnDecl__RetValAssignment_3"
    // InternalFortXTrans.g:10662:1: rule__FnDecl__RetValAssignment_3 : ( ruleRetType ) ;
    public final void rule__FnDecl__RetValAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10666:1: ( ( ruleRetType ) )
            // InternalFortXTrans.g:10667:2: ( ruleRetType )
            {
            // InternalFortXTrans.g:10667:2: ( ruleRetType )
            // InternalFortXTrans.g:10668:3: ruleRetType
            {
             before(grammarAccess.getFnDeclAccess().getRetValRetTypeParserRuleCall_3_0()); 
            pushFollow(FOLLOW_2);
            ruleRetType();

            state._fsp--;

             after(grammarAccess.getFnDeclAccess().getRetValRetTypeParserRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FnDecl__RetValAssignment_3"


    // $ANTLR start "rule__FnDecl__BodyAssignment_4_0"
    // InternalFortXTrans.g:10677:1: rule__FnDecl__BodyAssignment_4_0 : ( ( '=' ) ) ;
    public final void rule__FnDecl__BodyAssignment_4_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10681:1: ( ( ( '=' ) ) )
            // InternalFortXTrans.g:10682:2: ( ( '=' ) )
            {
            // InternalFortXTrans.g:10682:2: ( ( '=' ) )
            // InternalFortXTrans.g:10683:3: ( '=' )
            {
             before(grammarAccess.getFnDeclAccess().getBodyEqualsSignKeyword_4_0_0()); 
            // InternalFortXTrans.g:10684:3: ( '=' )
            // InternalFortXTrans.g:10685:4: '='
            {
             before(grammarAccess.getFnDeclAccess().getBodyEqualsSignKeyword_4_0_0()); 
            match(input,35,FOLLOW_2); 
             after(grammarAccess.getFnDeclAccess().getBodyEqualsSignKeyword_4_0_0()); 

            }

             after(grammarAccess.getFnDeclAccess().getBodyEqualsSignKeyword_4_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FnDecl__BodyAssignment_4_0"


    // $ANTLR start "rule__FnDecl__FnItselfAssignment_4_1"
    // InternalFortXTrans.g:10696:1: rule__FnDecl__FnItselfAssignment_4_1 : ( ruleStmnts ) ;
    public final void rule__FnDecl__FnItselfAssignment_4_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10700:1: ( ( ruleStmnts ) )
            // InternalFortXTrans.g:10701:2: ( ruleStmnts )
            {
            // InternalFortXTrans.g:10701:2: ( ruleStmnts )
            // InternalFortXTrans.g:10702:3: ruleStmnts
            {
             before(grammarAccess.getFnDeclAccess().getFnItselfStmntsParserRuleCall_4_1_0()); 
            pushFollow(FOLLOW_2);
            ruleStmnts();

            state._fsp--;

             after(grammarAccess.getFnDeclAccess().getFnItselfStmntsParserRuleCall_4_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FnDecl__FnItselfAssignment_4_1"


    // $ANTLR start "rule__Stmnts__FrontAssignment_0"
    // InternalFortXTrans.g:10711:1: rule__Stmnts__FrontAssignment_0 : ( ruleStmnt ) ;
    public final void rule__Stmnts__FrontAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10715:1: ( ( ruleStmnt ) )
            // InternalFortXTrans.g:10716:2: ( ruleStmnt )
            {
            // InternalFortXTrans.g:10716:2: ( ruleStmnt )
            // InternalFortXTrans.g:10717:3: ruleStmnt
            {
             before(grammarAccess.getStmntsAccess().getFrontStmntParserRuleCall_0_0()); 
            pushFollow(FOLLOW_2);
            ruleStmnt();

            state._fsp--;

             after(grammarAccess.getStmntsAccess().getFrontStmntParserRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Stmnts__FrontAssignment_0"


    // $ANTLR start "rule__Stmnts__LocVarAssignment_1"
    // InternalFortXTrans.g:10726:1: rule__Stmnts__LocVarAssignment_1 : ( ruleLocalVarDecl ) ;
    public final void rule__Stmnts__LocVarAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10730:1: ( ( ruleLocalVarDecl ) )
            // InternalFortXTrans.g:10731:2: ( ruleLocalVarDecl )
            {
            // InternalFortXTrans.g:10731:2: ( ruleLocalVarDecl )
            // InternalFortXTrans.g:10732:3: ruleLocalVarDecl
            {
             before(grammarAccess.getStmntsAccess().getLocVarLocalVarDeclParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleLocalVarDecl();

            state._fsp--;

             after(grammarAccess.getStmntsAccess().getLocVarLocalVarDeclParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Stmnts__LocVarAssignment_1"


    // $ANTLR start "rule__Stmnts__ExpAssignment_2"
    // InternalFortXTrans.g:10741:1: rule__Stmnts__ExpAssignment_2 : ( ruleExpr ) ;
    public final void rule__Stmnts__ExpAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10745:1: ( ( ruleExpr ) )
            // InternalFortXTrans.g:10746:2: ( ruleExpr )
            {
            // InternalFortXTrans.g:10746:2: ( ruleExpr )
            // InternalFortXTrans.g:10747:3: ruleExpr
            {
             before(grammarAccess.getStmntsAccess().getExpExprParserRuleCall_2_0()); 
            pushFollow(FOLLOW_2);
            ruleExpr();

            state._fsp--;

             after(grammarAccess.getStmntsAccess().getExpExprParserRuleCall_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Stmnts__ExpAssignment_2"


    // $ANTLR start "rule__Stmnt__DelimAssignment_0"
    // InternalFortXTrans.g:10756:1: rule__Stmnt__DelimAssignment_0 : ( ruleDelimitedExpr ) ;
    public final void rule__Stmnt__DelimAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10760:1: ( ( ruleDelimitedExpr ) )
            // InternalFortXTrans.g:10761:2: ( ruleDelimitedExpr )
            {
            // InternalFortXTrans.g:10761:2: ( ruleDelimitedExpr )
            // InternalFortXTrans.g:10762:3: ruleDelimitedExpr
            {
             before(grammarAccess.getStmntAccess().getDelimDelimitedExprParserRuleCall_0_0()); 
            pushFollow(FOLLOW_2);
            ruleDelimitedExpr();

            state._fsp--;

             after(grammarAccess.getStmntAccess().getDelimDelimitedExprParserRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Stmnt__DelimAssignment_0"


    // $ANTLR start "rule__Stmnt__BrackAssignment_1_0"
    // InternalFortXTrans.g:10771:1: rule__Stmnt__BrackAssignment_1_0 : ( ( '(' ) ) ;
    public final void rule__Stmnt__BrackAssignment_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10775:1: ( ( ( '(' ) ) )
            // InternalFortXTrans.g:10776:2: ( ( '(' ) )
            {
            // InternalFortXTrans.g:10776:2: ( ( '(' ) )
            // InternalFortXTrans.g:10777:3: ( '(' )
            {
             before(grammarAccess.getStmntAccess().getBrackLeftParenthesisKeyword_1_0_0()); 
            // InternalFortXTrans.g:10778:3: ( '(' )
            // InternalFortXTrans.g:10779:4: '('
            {
             before(grammarAccess.getStmntAccess().getBrackLeftParenthesisKeyword_1_0_0()); 
            match(input,21,FOLLOW_2); 
             after(grammarAccess.getStmntAccess().getBrackLeftParenthesisKeyword_1_0_0()); 

            }

             after(grammarAccess.getStmntAccess().getBrackLeftParenthesisKeyword_1_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Stmnt__BrackAssignment_1_0"


    // $ANTLR start "rule__Stmnt__DelimListAssignment_1_1"
    // InternalFortXTrans.g:10790:1: rule__Stmnt__DelimListAssignment_1_1 : ( ruleDelimitedExprList ) ;
    public final void rule__Stmnt__DelimListAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10794:1: ( ( ruleDelimitedExprList ) )
            // InternalFortXTrans.g:10795:2: ( ruleDelimitedExprList )
            {
            // InternalFortXTrans.g:10795:2: ( ruleDelimitedExprList )
            // InternalFortXTrans.g:10796:3: ruleDelimitedExprList
            {
             before(grammarAccess.getStmntAccess().getDelimListDelimitedExprListParserRuleCall_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleDelimitedExprList();

            state._fsp--;

             after(grammarAccess.getStmntAccess().getDelimListDelimitedExprListParserRuleCall_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Stmnt__DelimListAssignment_1_1"


    // $ANTLR start "rule__DelimitedExprList__DelimAssignment_0"
    // InternalFortXTrans.g:10805:1: rule__DelimitedExprList__DelimAssignment_0 : ( ruleDelimitedExpr ) ;
    public final void rule__DelimitedExprList__DelimAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10809:1: ( ( ruleDelimitedExpr ) )
            // InternalFortXTrans.g:10810:2: ( ruleDelimitedExpr )
            {
            // InternalFortXTrans.g:10810:2: ( ruleDelimitedExpr )
            // InternalFortXTrans.g:10811:3: ruleDelimitedExpr
            {
             before(grammarAccess.getDelimitedExprListAccess().getDelimDelimitedExprParserRuleCall_0_0()); 
            pushFollow(FOLLOW_2);
            ruleDelimitedExpr();

            state._fsp--;

             after(grammarAccess.getDelimitedExprListAccess().getDelimDelimitedExprParserRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExprList__DelimAssignment_0"


    // $ANTLR start "rule__DelimitedExprList__DelimAssignment_1_1"
    // InternalFortXTrans.g:10820:1: rule__DelimitedExprList__DelimAssignment_1_1 : ( ruleDelimitedExpr ) ;
    public final void rule__DelimitedExprList__DelimAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10824:1: ( ( ruleDelimitedExpr ) )
            // InternalFortXTrans.g:10825:2: ( ruleDelimitedExpr )
            {
            // InternalFortXTrans.g:10825:2: ( ruleDelimitedExpr )
            // InternalFortXTrans.g:10826:3: ruleDelimitedExpr
            {
             before(grammarAccess.getDelimitedExprListAccess().getDelimDelimitedExprParserRuleCall_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleDelimitedExpr();

            state._fsp--;

             after(grammarAccess.getDelimitedExprListAccess().getDelimDelimitedExprParserRuleCall_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExprList__DelimAssignment_1_1"


    // $ANTLR start "rule__Expr__FrontAssignment_0"
    // InternalFortXTrans.g:10835:1: rule__Expr__FrontAssignment_0 : ( ruleExprFront ) ;
    public final void rule__Expr__FrontAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10839:1: ( ( ruleExprFront ) )
            // InternalFortXTrans.g:10840:2: ( ruleExprFront )
            {
            // InternalFortXTrans.g:10840:2: ( ruleExprFront )
            // InternalFortXTrans.g:10841:3: ruleExprFront
            {
             before(grammarAccess.getExprAccess().getFrontExprFrontParserRuleCall_0_0()); 
            pushFollow(FOLLOW_2);
            ruleExprFront();

            state._fsp--;

             after(grammarAccess.getExprAccess().getFrontExprFrontParserRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Expr__FrontAssignment_0"


    // $ANTLR start "rule__Expr__TailAssignment_1"
    // InternalFortXTrans.g:10850:1: rule__Expr__TailAssignment_1 : ( ruleExprTail ) ;
    public final void rule__Expr__TailAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10854:1: ( ( ruleExprTail ) )
            // InternalFortXTrans.g:10855:2: ( ruleExprTail )
            {
            // InternalFortXTrans.g:10855:2: ( ruleExprTail )
            // InternalFortXTrans.g:10856:3: ruleExprTail
            {
             before(grammarAccess.getExprAccess().getTailExprTailParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleExprTail();

            state._fsp--;

             after(grammarAccess.getExprAccess().getTailExprTailParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Expr__TailAssignment_1"


    // $ANTLR start "rule__ExprFront__AddAssignment"
    // InternalFortXTrans.g:10865:1: rule__ExprFront__AddAssignment : ( ruleCommaExpr ) ;
    public final void rule__ExprFront__AddAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10869:1: ( ( ruleCommaExpr ) )
            // InternalFortXTrans.g:10870:2: ( ruleCommaExpr )
            {
            // InternalFortXTrans.g:10870:2: ( ruleCommaExpr )
            // InternalFortXTrans.g:10871:3: ruleCommaExpr
            {
             before(grammarAccess.getExprFrontAccess().getAddCommaExprParserRuleCall_0()); 
            pushFollow(FOLLOW_2);
            ruleCommaExpr();

            state._fsp--;

             after(grammarAccess.getExprFrontAccess().getAddCommaExprParserRuleCall_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExprFront__AddAssignment"


    // $ANTLR start "rule__CommaExpr__RightAssignment_1_2"
    // InternalFortXTrans.g:10880:1: rule__CommaExpr__RightAssignment_1_2 : ( ruleAddExpr ) ;
    public final void rule__CommaExpr__RightAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10884:1: ( ( ruleAddExpr ) )
            // InternalFortXTrans.g:10885:2: ( ruleAddExpr )
            {
            // InternalFortXTrans.g:10885:2: ( ruleAddExpr )
            // InternalFortXTrans.g:10886:3: ruleAddExpr
            {
             before(grammarAccess.getCommaExprAccess().getRightAddExprParserRuleCall_1_2_0()); 
            pushFollow(FOLLOW_2);
            ruleAddExpr();

            state._fsp--;

             after(grammarAccess.getCommaExprAccess().getRightAddExprParserRuleCall_1_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CommaExpr__RightAssignment_1_2"


    // $ANTLR start "rule__AddExpr__RightAssignment_1_2"
    // InternalFortXTrans.g:10895:1: rule__AddExpr__RightAssignment_1_2 : ( ruleSubExpr ) ;
    public final void rule__AddExpr__RightAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10899:1: ( ( ruleSubExpr ) )
            // InternalFortXTrans.g:10900:2: ( ruleSubExpr )
            {
            // InternalFortXTrans.g:10900:2: ( ruleSubExpr )
            // InternalFortXTrans.g:10901:3: ruleSubExpr
            {
             before(grammarAccess.getAddExprAccess().getRightSubExprParserRuleCall_1_2_0()); 
            pushFollow(FOLLOW_2);
            ruleSubExpr();

            state._fsp--;

             after(grammarAccess.getAddExprAccess().getRightSubExprParserRuleCall_1_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AddExpr__RightAssignment_1_2"


    // $ANTLR start "rule__SubExpr__RightAssignment_1_2"
    // InternalFortXTrans.g:10910:1: rule__SubExpr__RightAssignment_1_2 : ( ruleDivExpr ) ;
    public final void rule__SubExpr__RightAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10914:1: ( ( ruleDivExpr ) )
            // InternalFortXTrans.g:10915:2: ( ruleDivExpr )
            {
            // InternalFortXTrans.g:10915:2: ( ruleDivExpr )
            // InternalFortXTrans.g:10916:3: ruleDivExpr
            {
             before(grammarAccess.getSubExprAccess().getRightDivExprParserRuleCall_1_2_0()); 
            pushFollow(FOLLOW_2);
            ruleDivExpr();

            state._fsp--;

             after(grammarAccess.getSubExprAccess().getRightDivExprParserRuleCall_1_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubExpr__RightAssignment_1_2"


    // $ANTLR start "rule__DivExpr__RightAssignment_1_2"
    // InternalFortXTrans.g:10925:1: rule__DivExpr__RightAssignment_1_2 : ( ruleMultExpr ) ;
    public final void rule__DivExpr__RightAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10929:1: ( ( ruleMultExpr ) )
            // InternalFortXTrans.g:10930:2: ( ruleMultExpr )
            {
            // InternalFortXTrans.g:10930:2: ( ruleMultExpr )
            // InternalFortXTrans.g:10931:3: ruleMultExpr
            {
             before(grammarAccess.getDivExprAccess().getRightMultExprParserRuleCall_1_2_0()); 
            pushFollow(FOLLOW_2);
            ruleMultExpr();

            state._fsp--;

             after(grammarAccess.getDivExprAccess().getRightMultExprParserRuleCall_1_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DivExpr__RightAssignment_1_2"


    // $ANTLR start "rule__MultExpr__RightAssignment_1_2"
    // InternalFortXTrans.g:10940:1: rule__MultExpr__RightAssignment_1_2 : ( rulePrimary ) ;
    public final void rule__MultExpr__RightAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10944:1: ( ( rulePrimary ) )
            // InternalFortXTrans.g:10945:2: ( rulePrimary )
            {
            // InternalFortXTrans.g:10945:2: ( rulePrimary )
            // InternalFortXTrans.g:10946:3: rulePrimary
            {
             before(grammarAccess.getMultExprAccess().getRightPrimaryParserRuleCall_1_2_0()); 
            pushFollow(FOLLOW_2);
            rulePrimary();

            state._fsp--;

             after(grammarAccess.getMultExprAccess().getRightPrimaryParserRuleCall_1_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultExpr__RightAssignment_1_2"


    // $ANTLR start "rule__Primary__ExpAssignment_0_1_2"
    // InternalFortXTrans.g:10955:1: rule__Primary__ExpAssignment_0_1_2 : ( ruleExpr ) ;
    public final void rule__Primary__ExpAssignment_0_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10959:1: ( ( ruleExpr ) )
            // InternalFortXTrans.g:10960:2: ( ruleExpr )
            {
            // InternalFortXTrans.g:10960:2: ( ruleExpr )
            // InternalFortXTrans.g:10961:3: ruleExpr
            {
             before(grammarAccess.getPrimaryAccess().getExpExprParserRuleCall_0_1_2_0()); 
            pushFollow(FOLLOW_2);
            ruleExpr();

            state._fsp--;

             after(grammarAccess.getPrimaryAccess().getExpExprParserRuleCall_0_1_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__ExpAssignment_0_1_2"


    // $ANTLR start "rule__Primary__FargsAssignment_0_2_2"
    // InternalFortXTrans.g:10970:1: rule__Primary__FargsAssignment_0_2_2 : ( ruleExpr ) ;
    public final void rule__Primary__FargsAssignment_0_2_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10974:1: ( ( ruleExpr ) )
            // InternalFortXTrans.g:10975:2: ( ruleExpr )
            {
            // InternalFortXTrans.g:10975:2: ( ruleExpr )
            // InternalFortXTrans.g:10976:3: ruleExpr
            {
             before(grammarAccess.getPrimaryAccess().getFargsExprParserRuleCall_0_2_2_0()); 
            pushFollow(FOLLOW_2);
            ruleExpr();

            state._fsp--;

             after(grammarAccess.getPrimaryAccess().getFargsExprParserRuleCall_0_2_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__FargsAssignment_0_2_2"


    // $ANTLR start "rule__Primary__ExpAssignment_2_1"
    // InternalFortXTrans.g:10985:1: rule__Primary__ExpAssignment_2_1 : ( ruleExpr ) ;
    public final void rule__Primary__ExpAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10989:1: ( ( ruleExpr ) )
            // InternalFortXTrans.g:10990:2: ( ruleExpr )
            {
            // InternalFortXTrans.g:10990:2: ( ruleExpr )
            // InternalFortXTrans.g:10991:3: ruleExpr
            {
             before(grammarAccess.getPrimaryAccess().getExpExprParserRuleCall_2_1_0()); 
            pushFollow(FOLLOW_2);
            ruleExpr();

            state._fsp--;

             after(grammarAccess.getPrimaryAccess().getExpExprParserRuleCall_2_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__ExpAssignment_2_1"


    // $ANTLR start "rule__ExprTail__TypeAssignment_1"
    // InternalFortXTrans.g:11000:1: rule__ExprTail__TypeAssignment_1 : ( ruleSimpleName ) ;
    public final void rule__ExprTail__TypeAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11004:1: ( ( ruleSimpleName ) )
            // InternalFortXTrans.g:11005:2: ( ruleSimpleName )
            {
            // InternalFortXTrans.g:11005:2: ( ruleSimpleName )
            // InternalFortXTrans.g:11006:3: ruleSimpleName
            {
             before(grammarAccess.getExprTailAccess().getTypeSimpleNameParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleSimpleName();

            state._fsp--;

             after(grammarAccess.getExprTailAccess().getTypeSimpleNameParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExprTail__TypeAssignment_1"


    // $ANTLR start "rule__DelimitedExpr__DodAssignment_0"
    // InternalFortXTrans.g:11015:1: rule__DelimitedExpr__DodAssignment_0 : ( ruleDo ) ;
    public final void rule__DelimitedExpr__DodAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11019:1: ( ( ruleDo ) )
            // InternalFortXTrans.g:11020:2: ( ruleDo )
            {
            // InternalFortXTrans.g:11020:2: ( ruleDo )
            // InternalFortXTrans.g:11021:3: ruleDo
            {
             before(grammarAccess.getDelimitedExprAccess().getDodDoParserRuleCall_0_0()); 
            pushFollow(FOLLOW_2);
            ruleDo();

            state._fsp--;

             after(grammarAccess.getDelimitedExprAccess().getDodDoParserRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__DodAssignment_0"


    // $ANTLR start "rule__DelimitedExpr__RetAssignment_1_0"
    // InternalFortXTrans.g:11030:1: rule__DelimitedExpr__RetAssignment_1_0 : ( ( 'return' ) ) ;
    public final void rule__DelimitedExpr__RetAssignment_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11034:1: ( ( ( 'return' ) ) )
            // InternalFortXTrans.g:11035:2: ( ( 'return' ) )
            {
            // InternalFortXTrans.g:11035:2: ( ( 'return' ) )
            // InternalFortXTrans.g:11036:3: ( 'return' )
            {
             before(grammarAccess.getDelimitedExprAccess().getRetReturnKeyword_1_0_0()); 
            // InternalFortXTrans.g:11037:3: ( 'return' )
            // InternalFortXTrans.g:11038:4: 'return'
            {
             before(grammarAccess.getDelimitedExprAccess().getRetReturnKeyword_1_0_0()); 
            match(input,43,FOLLOW_2); 
             after(grammarAccess.getDelimitedExprAccess().getRetReturnKeyword_1_0_0()); 

            }

             after(grammarAccess.getDelimitedExprAccess().getRetReturnKeyword_1_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__RetAssignment_1_0"


    // $ANTLR start "rule__DelimitedExpr__BlockAssignment_1_1"
    // InternalFortXTrans.g:11049:1: rule__DelimitedExpr__BlockAssignment_1_1 : ( ruleBlockElem ) ;
    public final void rule__DelimitedExpr__BlockAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11053:1: ( ( ruleBlockElem ) )
            // InternalFortXTrans.g:11054:2: ( ruleBlockElem )
            {
            // InternalFortXTrans.g:11054:2: ( ruleBlockElem )
            // InternalFortXTrans.g:11055:3: ruleBlockElem
            {
             before(grammarAccess.getDelimitedExprAccess().getBlockBlockElemParserRuleCall_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleBlockElem();

            state._fsp--;

             after(grammarAccess.getDelimitedExprAccess().getBlockBlockElemParserRuleCall_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__BlockAssignment_1_1"


    // $ANTLR start "rule__DelimitedExpr__AwhileAssignment_2_0"
    // InternalFortXTrans.g:11064:1: rule__DelimitedExpr__AwhileAssignment_2_0 : ( ( 'while' ) ) ;
    public final void rule__DelimitedExpr__AwhileAssignment_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11068:1: ( ( ( 'while' ) ) )
            // InternalFortXTrans.g:11069:2: ( ( 'while' ) )
            {
            // InternalFortXTrans.g:11069:2: ( ( 'while' ) )
            // InternalFortXTrans.g:11070:3: ( 'while' )
            {
             before(grammarAccess.getDelimitedExprAccess().getAwhileWhileKeyword_2_0_0()); 
            // InternalFortXTrans.g:11071:3: ( 'while' )
            // InternalFortXTrans.g:11072:4: 'while'
            {
             before(grammarAccess.getDelimitedExprAccess().getAwhileWhileKeyword_2_0_0()); 
            match(input,44,FOLLOW_2); 
             after(grammarAccess.getDelimitedExprAccess().getAwhileWhileKeyword_2_0_0()); 

            }

             after(grammarAccess.getDelimitedExprAccess().getAwhileWhileKeyword_2_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__AwhileAssignment_2_0"


    // $ANTLR start "rule__DelimitedExpr__ExprAssignment_2_1"
    // InternalFortXTrans.g:11083:1: rule__DelimitedExpr__ExprAssignment_2_1 : ( ruleExpr ) ;
    public final void rule__DelimitedExpr__ExprAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11087:1: ( ( ruleExpr ) )
            // InternalFortXTrans.g:11088:2: ( ruleExpr )
            {
            // InternalFortXTrans.g:11088:2: ( ruleExpr )
            // InternalFortXTrans.g:11089:3: ruleExpr
            {
             before(grammarAccess.getDelimitedExprAccess().getExprExprParserRuleCall_2_1_0()); 
            pushFollow(FOLLOW_2);
            ruleExpr();

            state._fsp--;

             after(grammarAccess.getDelimitedExprAccess().getExprExprParserRuleCall_2_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__ExprAssignment_2_1"


    // $ANTLR start "rule__DelimitedExpr__WhiledodAssignment_2_2"
    // InternalFortXTrans.g:11098:1: rule__DelimitedExpr__WhiledodAssignment_2_2 : ( ruleDo ) ;
    public final void rule__DelimitedExpr__WhiledodAssignment_2_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11102:1: ( ( ruleDo ) )
            // InternalFortXTrans.g:11103:2: ( ruleDo )
            {
            // InternalFortXTrans.g:11103:2: ( ruleDo )
            // InternalFortXTrans.g:11104:3: ruleDo
            {
             before(grammarAccess.getDelimitedExprAccess().getWhiledodDoParserRuleCall_2_2_0()); 
            pushFollow(FOLLOW_2);
            ruleDo();

            state._fsp--;

             after(grammarAccess.getDelimitedExprAccess().getWhiledodDoParserRuleCall_2_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__WhiledodAssignment_2_2"


    // $ANTLR start "rule__DelimitedExpr__AforAssignment_3_0"
    // InternalFortXTrans.g:11113:1: rule__DelimitedExpr__AforAssignment_3_0 : ( ( 'for' ) ) ;
    public final void rule__DelimitedExpr__AforAssignment_3_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11117:1: ( ( ( 'for' ) ) )
            // InternalFortXTrans.g:11118:2: ( ( 'for' ) )
            {
            // InternalFortXTrans.g:11118:2: ( ( 'for' ) )
            // InternalFortXTrans.g:11119:3: ( 'for' )
            {
             before(grammarAccess.getDelimitedExprAccess().getAforForKeyword_3_0_0()); 
            // InternalFortXTrans.g:11120:3: ( 'for' )
            // InternalFortXTrans.g:11121:4: 'for'
            {
             before(grammarAccess.getDelimitedExprAccess().getAforForKeyword_3_0_0()); 
            match(input,45,FOLLOW_2); 
             after(grammarAccess.getDelimitedExprAccess().getAforForKeyword_3_0_0()); 

            }

             after(grammarAccess.getDelimitedExprAccess().getAforForKeyword_3_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__AforAssignment_3_0"


    // $ANTLR start "rule__DelimitedExpr__GenAssignment_3_1"
    // InternalFortXTrans.g:11132:1: rule__DelimitedExpr__GenAssignment_3_1 : ( ruleGenerators ) ;
    public final void rule__DelimitedExpr__GenAssignment_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11136:1: ( ( ruleGenerators ) )
            // InternalFortXTrans.g:11137:2: ( ruleGenerators )
            {
            // InternalFortXTrans.g:11137:2: ( ruleGenerators )
            // InternalFortXTrans.g:11138:3: ruleGenerators
            {
             before(grammarAccess.getDelimitedExprAccess().getGenGeneratorsParserRuleCall_3_1_0()); 
            pushFollow(FOLLOW_2);
            ruleGenerators();

            state._fsp--;

             after(grammarAccess.getDelimitedExprAccess().getGenGeneratorsParserRuleCall_3_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__GenAssignment_3_1"


    // $ANTLR start "rule__DelimitedExpr__DofrontAssignment_3_2"
    // InternalFortXTrans.g:11147:1: rule__DelimitedExpr__DofrontAssignment_3_2 : ( ruleDoFront ) ;
    public final void rule__DelimitedExpr__DofrontAssignment_3_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11151:1: ( ( ruleDoFront ) )
            // InternalFortXTrans.g:11152:2: ( ruleDoFront )
            {
            // InternalFortXTrans.g:11152:2: ( ruleDoFront )
            // InternalFortXTrans.g:11153:3: ruleDoFront
            {
             before(grammarAccess.getDelimitedExprAccess().getDofrontDoFrontParserRuleCall_3_2_0()); 
            pushFollow(FOLLOW_2);
            ruleDoFront();

            state._fsp--;

             after(grammarAccess.getDelimitedExprAccess().getDofrontDoFrontParserRuleCall_3_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__DofrontAssignment_3_2"


    // $ANTLR start "rule__DelimitedExpr__AnifAssignment_4_0"
    // InternalFortXTrans.g:11162:1: rule__DelimitedExpr__AnifAssignment_4_0 : ( ( 'if' ) ) ;
    public final void rule__DelimitedExpr__AnifAssignment_4_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11166:1: ( ( ( 'if' ) ) )
            // InternalFortXTrans.g:11167:2: ( ( 'if' ) )
            {
            // InternalFortXTrans.g:11167:2: ( ( 'if' ) )
            // InternalFortXTrans.g:11168:3: ( 'if' )
            {
             before(grammarAccess.getDelimitedExprAccess().getAnifIfKeyword_4_0_0()); 
            // InternalFortXTrans.g:11169:3: ( 'if' )
            // InternalFortXTrans.g:11170:4: 'if'
            {
             before(grammarAccess.getDelimitedExprAccess().getAnifIfKeyword_4_0_0()); 
            match(input,46,FOLLOW_2); 
             after(grammarAccess.getDelimitedExprAccess().getAnifIfKeyword_4_0_0()); 

            }

             after(grammarAccess.getDelimitedExprAccess().getAnifIfKeyword_4_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__AnifAssignment_4_0"


    // $ANTLR start "rule__DelimitedExpr__CondAssignment_4_1"
    // InternalFortXTrans.g:11181:1: rule__DelimitedExpr__CondAssignment_4_1 : ( ruleExpr ) ;
    public final void rule__DelimitedExpr__CondAssignment_4_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11185:1: ( ( ruleExpr ) )
            // InternalFortXTrans.g:11186:2: ( ruleExpr )
            {
            // InternalFortXTrans.g:11186:2: ( ruleExpr )
            // InternalFortXTrans.g:11187:3: ruleExpr
            {
             before(grammarAccess.getDelimitedExprAccess().getCondExprParserRuleCall_4_1_0()); 
            pushFollow(FOLLOW_2);
            ruleExpr();

            state._fsp--;

             after(grammarAccess.getDelimitedExprAccess().getCondExprParserRuleCall_4_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__CondAssignment_4_1"


    // $ANTLR start "rule__DelimitedExpr__BlocksAssignment_4_3"
    // InternalFortXTrans.g:11196:1: rule__DelimitedExpr__BlocksAssignment_4_3 : ( ruleBlockElems ) ;
    public final void rule__DelimitedExpr__BlocksAssignment_4_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11200:1: ( ( ruleBlockElems ) )
            // InternalFortXTrans.g:11201:2: ( ruleBlockElems )
            {
            // InternalFortXTrans.g:11201:2: ( ruleBlockElems )
            // InternalFortXTrans.g:11202:3: ruleBlockElems
            {
             before(grammarAccess.getDelimitedExprAccess().getBlocksBlockElemsParserRuleCall_4_3_0()); 
            pushFollow(FOLLOW_2);
            ruleBlockElems();

            state._fsp--;

             after(grammarAccess.getDelimitedExprAccess().getBlocksBlockElemsParserRuleCall_4_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__BlocksAssignment_4_3"


    // $ANTLR start "rule__DelimitedExpr__ElifsAssignment_4_4"
    // InternalFortXTrans.g:11211:1: rule__DelimitedExpr__ElifsAssignment_4_4 : ( ruleElifs ) ;
    public final void rule__DelimitedExpr__ElifsAssignment_4_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11215:1: ( ( ruleElifs ) )
            // InternalFortXTrans.g:11216:2: ( ruleElifs )
            {
            // InternalFortXTrans.g:11216:2: ( ruleElifs )
            // InternalFortXTrans.g:11217:3: ruleElifs
            {
             before(grammarAccess.getDelimitedExprAccess().getElifsElifsParserRuleCall_4_4_0()); 
            pushFollow(FOLLOW_2);
            ruleElifs();

            state._fsp--;

             after(grammarAccess.getDelimitedExprAccess().getElifsElifsParserRuleCall_4_4_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__ElifsAssignment_4_4"


    // $ANTLR start "rule__DelimitedExpr__ElsAssignment_4_5"
    // InternalFortXTrans.g:11226:1: rule__DelimitedExpr__ElsAssignment_4_5 : ( ruleElse ) ;
    public final void rule__DelimitedExpr__ElsAssignment_4_5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11230:1: ( ( ruleElse ) )
            // InternalFortXTrans.g:11231:2: ( ruleElse )
            {
            // InternalFortXTrans.g:11231:2: ( ruleElse )
            // InternalFortXTrans.g:11232:3: ruleElse
            {
             before(grammarAccess.getDelimitedExprAccess().getElsElseParserRuleCall_4_5_0()); 
            pushFollow(FOLLOW_2);
            ruleElse();

            state._fsp--;

             after(grammarAccess.getDelimitedExprAccess().getElsElseParserRuleCall_4_5_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__ElsAssignment_4_5"


    // $ANTLR start "rule__Elifs__EAssignment_0"
    // InternalFortXTrans.g:11241:1: rule__Elifs__EAssignment_0 : ( ruleElif ) ;
    public final void rule__Elifs__EAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11245:1: ( ( ruleElif ) )
            // InternalFortXTrans.g:11246:2: ( ruleElif )
            {
            // InternalFortXTrans.g:11246:2: ( ruleElif )
            // InternalFortXTrans.g:11247:3: ruleElif
            {
             before(grammarAccess.getElifsAccess().getEElifParserRuleCall_0_0()); 
            pushFollow(FOLLOW_2);
            ruleElif();

            state._fsp--;

             after(grammarAccess.getElifsAccess().getEElifParserRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Elifs__EAssignment_0"


    // $ANTLR start "rule__Elifs__EAssignment_1"
    // InternalFortXTrans.g:11256:1: rule__Elifs__EAssignment_1 : ( ruleElif ) ;
    public final void rule__Elifs__EAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11260:1: ( ( ruleElif ) )
            // InternalFortXTrans.g:11261:2: ( ruleElif )
            {
            // InternalFortXTrans.g:11261:2: ( ruleElif )
            // InternalFortXTrans.g:11262:3: ruleElif
            {
             before(grammarAccess.getElifsAccess().getEElifParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleElif();

            state._fsp--;

             after(grammarAccess.getElifsAccess().getEElifParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Elifs__EAssignment_1"


    // $ANTLR start "rule__Elif__ExprAssignment_1"
    // InternalFortXTrans.g:11271:1: rule__Elif__ExprAssignment_1 : ( ruleExpr ) ;
    public final void rule__Elif__ExprAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11275:1: ( ( ruleExpr ) )
            // InternalFortXTrans.g:11276:2: ( ruleExpr )
            {
            // InternalFortXTrans.g:11276:2: ( ruleExpr )
            // InternalFortXTrans.g:11277:3: ruleExpr
            {
             before(grammarAccess.getElifAccess().getExprExprParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleExpr();

            state._fsp--;

             after(grammarAccess.getElifAccess().getExprExprParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Elif__ExprAssignment_1"


    // $ANTLR start "rule__Elif__BlockAssignment_3"
    // InternalFortXTrans.g:11286:1: rule__Elif__BlockAssignment_3 : ( ruleBlockElems ) ;
    public final void rule__Elif__BlockAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11290:1: ( ( ruleBlockElems ) )
            // InternalFortXTrans.g:11291:2: ( ruleBlockElems )
            {
            // InternalFortXTrans.g:11291:2: ( ruleBlockElems )
            // InternalFortXTrans.g:11292:3: ruleBlockElems
            {
             before(grammarAccess.getElifAccess().getBlockBlockElemsParserRuleCall_3_0()); 
            pushFollow(FOLLOW_2);
            ruleBlockElems();

            state._fsp--;

             after(grammarAccess.getElifAccess().getBlockBlockElemsParserRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Elif__BlockAssignment_3"


    // $ANTLR start "rule__Else__BlockAssignment_1"
    // InternalFortXTrans.g:11301:1: rule__Else__BlockAssignment_1 : ( ruleBlockElems ) ;
    public final void rule__Else__BlockAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11305:1: ( ( ruleBlockElems ) )
            // InternalFortXTrans.g:11306:2: ( ruleBlockElems )
            {
            // InternalFortXTrans.g:11306:2: ( ruleBlockElems )
            // InternalFortXTrans.g:11307:3: ruleBlockElems
            {
             before(grammarAccess.getElseAccess().getBlockBlockElemsParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleBlockElems();

            state._fsp--;

             after(grammarAccess.getElseAccess().getBlockBlockElemsParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Else__BlockAssignment_1"


    // $ANTLR start "rule__Generators__BindingAssignment_0"
    // InternalFortXTrans.g:11316:1: rule__Generators__BindingAssignment_0 : ( ruleBinding ) ;
    public final void rule__Generators__BindingAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11320:1: ( ( ruleBinding ) )
            // InternalFortXTrans.g:11321:2: ( ruleBinding )
            {
            // InternalFortXTrans.g:11321:2: ( ruleBinding )
            // InternalFortXTrans.g:11322:3: ruleBinding
            {
             before(grammarAccess.getGeneratorsAccess().getBindingBindingParserRuleCall_0_0()); 
            pushFollow(FOLLOW_2);
            ruleBinding();

            state._fsp--;

             after(grammarAccess.getGeneratorsAccess().getBindingBindingParserRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Generators__BindingAssignment_0"


    // $ANTLR start "rule__Generators__ClauseAssignment_1_1"
    // InternalFortXTrans.g:11331:1: rule__Generators__ClauseAssignment_1_1 : ( ruleGenClause ) ;
    public final void rule__Generators__ClauseAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11335:1: ( ( ruleGenClause ) )
            // InternalFortXTrans.g:11336:2: ( ruleGenClause )
            {
            // InternalFortXTrans.g:11336:2: ( ruleGenClause )
            // InternalFortXTrans.g:11337:3: ruleGenClause
            {
             before(grammarAccess.getGeneratorsAccess().getClauseGenClauseParserRuleCall_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleGenClause();

            state._fsp--;

             after(grammarAccess.getGeneratorsAccess().getClauseGenClauseParserRuleCall_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Generators__ClauseAssignment_1_1"


    // $ANTLR start "rule__Binding__IdtupAssignment_0_0"
    // InternalFortXTrans.g:11346:1: rule__Binding__IdtupAssignment_0_0 : ( ruleIdOrTuple ) ;
    public final void rule__Binding__IdtupAssignment_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11350:1: ( ( ruleIdOrTuple ) )
            // InternalFortXTrans.g:11351:2: ( ruleIdOrTuple )
            {
            // InternalFortXTrans.g:11351:2: ( ruleIdOrTuple )
            // InternalFortXTrans.g:11352:3: ruleIdOrTuple
            {
             before(grammarAccess.getBindingAccess().getIdtupIdOrTupleParserRuleCall_0_0_0()); 
            pushFollow(FOLLOW_2);
            ruleIdOrTuple();

            state._fsp--;

             after(grammarAccess.getBindingAccess().getIdtupIdOrTupleParserRuleCall_0_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Binding__IdtupAssignment_0_0"


    // $ANTLR start "rule__Binding__ExprAssignment_0_2"
    // InternalFortXTrans.g:11361:1: rule__Binding__ExprAssignment_0_2 : ( ruleExpr ) ;
    public final void rule__Binding__ExprAssignment_0_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11365:1: ( ( ruleExpr ) )
            // InternalFortXTrans.g:11366:2: ( ruleExpr )
            {
            // InternalFortXTrans.g:11366:2: ( ruleExpr )
            // InternalFortXTrans.g:11367:3: ruleExpr
            {
             before(grammarAccess.getBindingAccess().getExprExprParserRuleCall_0_2_0()); 
            pushFollow(FOLLOW_2);
            ruleExpr();

            state._fsp--;

             after(grammarAccess.getBindingAccess().getExprExprParserRuleCall_0_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Binding__ExprAssignment_0_2"


    // $ANTLR start "rule__Binding__IdtupAssignment_1_0"
    // InternalFortXTrans.g:11376:1: rule__Binding__IdtupAssignment_1_0 : ( ruleIdOrTuple ) ;
    public final void rule__Binding__IdtupAssignment_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11380:1: ( ( ruleIdOrTuple ) )
            // InternalFortXTrans.g:11381:2: ( ruleIdOrTuple )
            {
            // InternalFortXTrans.g:11381:2: ( ruleIdOrTuple )
            // InternalFortXTrans.g:11382:3: ruleIdOrTuple
            {
             before(grammarAccess.getBindingAccess().getIdtupIdOrTupleParserRuleCall_1_0_0()); 
            pushFollow(FOLLOW_2);
            ruleIdOrTuple();

            state._fsp--;

             after(grammarAccess.getBindingAccess().getIdtupIdOrTupleParserRuleCall_1_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Binding__IdtupAssignment_1_0"


    // $ANTLR start "rule__Binding__SeqAssignment_1_2"
    // InternalFortXTrans.g:11391:1: rule__Binding__SeqAssignment_1_2 : ( ( 'seq' ) ) ;
    public final void rule__Binding__SeqAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11395:1: ( ( ( 'seq' ) ) )
            // InternalFortXTrans.g:11396:2: ( ( 'seq' ) )
            {
            // InternalFortXTrans.g:11396:2: ( ( 'seq' ) )
            // InternalFortXTrans.g:11397:3: ( 'seq' )
            {
             before(grammarAccess.getBindingAccess().getSeqSeqKeyword_1_2_0()); 
            // InternalFortXTrans.g:11398:3: ( 'seq' )
            // InternalFortXTrans.g:11399:4: 'seq'
            {
             before(grammarAccess.getBindingAccess().getSeqSeqKeyword_1_2_0()); 
            match(input,47,FOLLOW_2); 
             after(grammarAccess.getBindingAccess().getSeqSeqKeyword_1_2_0()); 

            }

             after(grammarAccess.getBindingAccess().getSeqSeqKeyword_1_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Binding__SeqAssignment_1_2"


    // $ANTLR start "rule__Binding__ExprAssignment_1_4"
    // InternalFortXTrans.g:11410:1: rule__Binding__ExprAssignment_1_4 : ( ruleExpr ) ;
    public final void rule__Binding__ExprAssignment_1_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11414:1: ( ( ruleExpr ) )
            // InternalFortXTrans.g:11415:2: ( ruleExpr )
            {
            // InternalFortXTrans.g:11415:2: ( ruleExpr )
            // InternalFortXTrans.g:11416:3: ruleExpr
            {
             before(grammarAccess.getBindingAccess().getExprExprParserRuleCall_1_4_0()); 
            pushFollow(FOLLOW_2);
            ruleExpr();

            state._fsp--;

             after(grammarAccess.getBindingAccess().getExprExprParserRuleCall_1_4_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Binding__ExprAssignment_1_4"


    // $ANTLR start "rule__GenClause__BindingAssignment_0"
    // InternalFortXTrans.g:11425:1: rule__GenClause__BindingAssignment_0 : ( ruleBinding ) ;
    public final void rule__GenClause__BindingAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11429:1: ( ( ruleBinding ) )
            // InternalFortXTrans.g:11430:2: ( ruleBinding )
            {
            // InternalFortXTrans.g:11430:2: ( ruleBinding )
            // InternalFortXTrans.g:11431:3: ruleBinding
            {
             before(grammarAccess.getGenClauseAccess().getBindingBindingParserRuleCall_0_0()); 
            pushFollow(FOLLOW_2);
            ruleBinding();

            state._fsp--;

             after(grammarAccess.getGenClauseAccess().getBindingBindingParserRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GenClause__BindingAssignment_0"


    // $ANTLR start "rule__GenClause__ExprAssignment_1"
    // InternalFortXTrans.g:11440:1: rule__GenClause__ExprAssignment_1 : ( ruleExpr ) ;
    public final void rule__GenClause__ExprAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11444:1: ( ( ruleExpr ) )
            // InternalFortXTrans.g:11445:2: ( ruleExpr )
            {
            // InternalFortXTrans.g:11445:2: ( ruleExpr )
            // InternalFortXTrans.g:11446:3: ruleExpr
            {
             before(grammarAccess.getGenClauseAccess().getExprExprParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleExpr();

            state._fsp--;

             after(grammarAccess.getGenClauseAccess().getExprExprParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GenClause__ExprAssignment_1"


    // $ANTLR start "rule__BlockElems__BlockAssignment_0"
    // InternalFortXTrans.g:11455:1: rule__BlockElems__BlockAssignment_0 : ( ruleBlockElem ) ;
    public final void rule__BlockElems__BlockAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11459:1: ( ( ruleBlockElem ) )
            // InternalFortXTrans.g:11460:2: ( ruleBlockElem )
            {
            // InternalFortXTrans.g:11460:2: ( ruleBlockElem )
            // InternalFortXTrans.g:11461:3: ruleBlockElem
            {
             before(grammarAccess.getBlockElemsAccess().getBlockBlockElemParserRuleCall_0_0()); 
            pushFollow(FOLLOW_2);
            ruleBlockElem();

            state._fsp--;

             after(grammarAccess.getBlockElemsAccess().getBlockBlockElemParserRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BlockElems__BlockAssignment_0"


    // $ANTLR start "rule__BlockElems__BlockAssignment_1"
    // InternalFortXTrans.g:11470:1: rule__BlockElems__BlockAssignment_1 : ( ruleBlockElem ) ;
    public final void rule__BlockElems__BlockAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11474:1: ( ( ruleBlockElem ) )
            // InternalFortXTrans.g:11475:2: ( ruleBlockElem )
            {
            // InternalFortXTrans.g:11475:2: ( ruleBlockElem )
            // InternalFortXTrans.g:11476:3: ruleBlockElem
            {
             before(grammarAccess.getBlockElemsAccess().getBlockBlockElemParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleBlockElem();

            state._fsp--;

             after(grammarAccess.getBlockElemsAccess().getBlockBlockElemParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BlockElems__BlockAssignment_1"


    // $ANTLR start "rule__BlockElem__StAssignment"
    // InternalFortXTrans.g:11485:1: rule__BlockElem__StAssignment : ( ruleStmnts ) ;
    public final void rule__BlockElem__StAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11489:1: ( ( ruleStmnts ) )
            // InternalFortXTrans.g:11490:2: ( ruleStmnts )
            {
            // InternalFortXTrans.g:11490:2: ( ruleStmnts )
            // InternalFortXTrans.g:11491:3: ruleStmnts
            {
             before(grammarAccess.getBlockElemAccess().getStStmntsParserRuleCall_0()); 
            pushFollow(FOLLOW_2);
            ruleStmnts();

            state._fsp--;

             after(grammarAccess.getBlockElemAccess().getStStmntsParserRuleCall_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BlockElem__StAssignment"


    // $ANTLR start "rule__Do__DofsAssignment_0"
    // InternalFortXTrans.g:11500:1: rule__Do__DofsAssignment_0 : ( ruleDoFront ) ;
    public final void rule__Do__DofsAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11504:1: ( ( ruleDoFront ) )
            // InternalFortXTrans.g:11505:2: ( ruleDoFront )
            {
            // InternalFortXTrans.g:11505:2: ( ruleDoFront )
            // InternalFortXTrans.g:11506:3: ruleDoFront
            {
             before(grammarAccess.getDoAccess().getDofsDoFrontParserRuleCall_0_0()); 
            pushFollow(FOLLOW_2);
            ruleDoFront();

            state._fsp--;

             after(grammarAccess.getDoAccess().getDofsDoFrontParserRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Do__DofsAssignment_0"


    // $ANTLR start "rule__Do__DofsAssignment_1_1"
    // InternalFortXTrans.g:11515:1: rule__Do__DofsAssignment_1_1 : ( ruleDoFront ) ;
    public final void rule__Do__DofsAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11519:1: ( ( ruleDoFront ) )
            // InternalFortXTrans.g:11520:2: ( ruleDoFront )
            {
            // InternalFortXTrans.g:11520:2: ( ruleDoFront )
            // InternalFortXTrans.g:11521:3: ruleDoFront
            {
             before(grammarAccess.getDoAccess().getDofsDoFrontParserRuleCall_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleDoFront();

            state._fsp--;

             after(grammarAccess.getDoAccess().getDofsDoFrontParserRuleCall_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Do__DofsAssignment_1_1"


    // $ANTLR start "rule__DoFront__AtAssignment_0_0"
    // InternalFortXTrans.g:11530:1: rule__DoFront__AtAssignment_0_0 : ( ( 'at' ) ) ;
    public final void rule__DoFront__AtAssignment_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11534:1: ( ( ( 'at' ) ) )
            // InternalFortXTrans.g:11535:2: ( ( 'at' ) )
            {
            // InternalFortXTrans.g:11535:2: ( ( 'at' ) )
            // InternalFortXTrans.g:11536:3: ( 'at' )
            {
             before(grammarAccess.getDoFrontAccess().getAtAtKeyword_0_0_0()); 
            // InternalFortXTrans.g:11537:3: ( 'at' )
            // InternalFortXTrans.g:11538:4: 'at'
            {
             before(grammarAccess.getDoFrontAccess().getAtAtKeyword_0_0_0()); 
            match(input,48,FOLLOW_2); 
             after(grammarAccess.getDoFrontAccess().getAtAtKeyword_0_0_0()); 

            }

             after(grammarAccess.getDoFrontAccess().getAtAtKeyword_0_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DoFront__AtAssignment_0_0"


    // $ANTLR start "rule__DoFront__ExpAssignment_0_1"
    // InternalFortXTrans.g:11549:1: rule__DoFront__ExpAssignment_0_1 : ( ruleExpr ) ;
    public final void rule__DoFront__ExpAssignment_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11553:1: ( ( ruleExpr ) )
            // InternalFortXTrans.g:11554:2: ( ruleExpr )
            {
            // InternalFortXTrans.g:11554:2: ( ruleExpr )
            // InternalFortXTrans.g:11555:3: ruleExpr
            {
             before(grammarAccess.getDoFrontAccess().getExpExprParserRuleCall_0_1_0()); 
            pushFollow(FOLLOW_2);
            ruleExpr();

            state._fsp--;

             after(grammarAccess.getDoFrontAccess().getExpExprParserRuleCall_0_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DoFront__ExpAssignment_0_1"


    // $ANTLR start "rule__DoFront__AtomAssignment_1"
    // InternalFortXTrans.g:11564:1: rule__DoFront__AtomAssignment_1 : ( ( 'atomic' ) ) ;
    public final void rule__DoFront__AtomAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11568:1: ( ( ( 'atomic' ) ) )
            // InternalFortXTrans.g:11569:2: ( ( 'atomic' ) )
            {
            // InternalFortXTrans.g:11569:2: ( ( 'atomic' ) )
            // InternalFortXTrans.g:11570:3: ( 'atomic' )
            {
             before(grammarAccess.getDoFrontAccess().getAtomAtomicKeyword_1_0()); 
            // InternalFortXTrans.g:11571:3: ( 'atomic' )
            // InternalFortXTrans.g:11572:4: 'atomic'
            {
             before(grammarAccess.getDoFrontAccess().getAtomAtomicKeyword_1_0()); 
            match(input,41,FOLLOW_2); 
             after(grammarAccess.getDoFrontAccess().getAtomAtomicKeyword_1_0()); 

            }

             after(grammarAccess.getDoFrontAccess().getAtomAtomicKeyword_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DoFront__AtomAssignment_1"


    // $ANTLR start "rule__DoFront__BlockAssignment_3"
    // InternalFortXTrans.g:11583:1: rule__DoFront__BlockAssignment_3 : ( ruleBlockElems ) ;
    public final void rule__DoFront__BlockAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11587:1: ( ( ruleBlockElems ) )
            // InternalFortXTrans.g:11588:2: ( ruleBlockElems )
            {
            // InternalFortXTrans.g:11588:2: ( ruleBlockElems )
            // InternalFortXTrans.g:11589:3: ruleBlockElems
            {
             before(grammarAccess.getDoFrontAccess().getBlockBlockElemsParserRuleCall_3_0()); 
            pushFollow(FOLLOW_2);
            ruleBlockElems();

            state._fsp--;

             after(grammarAccess.getDoFrontAccess().getBlockBlockElemsParserRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DoFront__BlockAssignment_3"


    // $ANTLR start "rule__IdOrTuple__BidAssignment_0"
    // InternalFortXTrans.g:11598:1: rule__IdOrTuple__BidAssignment_0 : ( ruleBindId ) ;
    public final void rule__IdOrTuple__BidAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11602:1: ( ( ruleBindId ) )
            // InternalFortXTrans.g:11603:2: ( ruleBindId )
            {
            // InternalFortXTrans.g:11603:2: ( ruleBindId )
            // InternalFortXTrans.g:11604:3: ruleBindId
            {
             before(grammarAccess.getIdOrTupleAccess().getBidBindIdParserRuleCall_0_0()); 
            pushFollow(FOLLOW_2);
            ruleBindId();

            state._fsp--;

             after(grammarAccess.getIdOrTupleAccess().getBidBindIdParserRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IdOrTuple__BidAssignment_0"


    // $ANTLR start "rule__IdOrTuple__BidAssignment_1_1"
    // InternalFortXTrans.g:11613:1: rule__IdOrTuple__BidAssignment_1_1 : ( ruleBindId ) ;
    public final void rule__IdOrTuple__BidAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11617:1: ( ( ruleBindId ) )
            // InternalFortXTrans.g:11618:2: ( ruleBindId )
            {
            // InternalFortXTrans.g:11618:2: ( ruleBindId )
            // InternalFortXTrans.g:11619:3: ruleBindId
            {
             before(grammarAccess.getIdOrTupleAccess().getBidBindIdParserRuleCall_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleBindId();

            state._fsp--;

             after(grammarAccess.getIdOrTupleAccess().getBidBindIdParserRuleCall_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IdOrTuple__BidAssignment_1_1"


    // $ANTLR start "rule__IdOrTuple__BidAssignment_1_2_1"
    // InternalFortXTrans.g:11628:1: rule__IdOrTuple__BidAssignment_1_2_1 : ( ruleBindId ) ;
    public final void rule__IdOrTuple__BidAssignment_1_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11632:1: ( ( ruleBindId ) )
            // InternalFortXTrans.g:11633:2: ( ruleBindId )
            {
            // InternalFortXTrans.g:11633:2: ( ruleBindId )
            // InternalFortXTrans.g:11634:3: ruleBindId
            {
             before(grammarAccess.getIdOrTupleAccess().getBidBindIdParserRuleCall_1_2_1_0()); 
            pushFollow(FOLLOW_2);
            ruleBindId();

            state._fsp--;

             after(grammarAccess.getIdOrTupleAccess().getBidBindIdParserRuleCall_1_2_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IdOrTuple__BidAssignment_1_2_1"


    // $ANTLR start "rule__BindId__SAssignment_0"
    // InternalFortXTrans.g:11643:1: rule__BindId__SAssignment_0 : ( ruleSimpleName ) ;
    public final void rule__BindId__SAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11647:1: ( ( ruleSimpleName ) )
            // InternalFortXTrans.g:11648:2: ( ruleSimpleName )
            {
            // InternalFortXTrans.g:11648:2: ( ruleSimpleName )
            // InternalFortXTrans.g:11649:3: ruleSimpleName
            {
             before(grammarAccess.getBindIdAccess().getSSimpleNameParserRuleCall_0_0()); 
            pushFollow(FOLLOW_2);
            ruleSimpleName();

            state._fsp--;

             after(grammarAccess.getBindIdAccess().getSSimpleNameParserRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BindId__SAssignment_0"


    // $ANTLR start "rule__BindId__UndscAssignment_1"
    // InternalFortXTrans.g:11658:1: rule__BindId__UndscAssignment_1 : ( ( '_' ) ) ;
    public final void rule__BindId__UndscAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11662:1: ( ( ( '_' ) ) )
            // InternalFortXTrans.g:11663:2: ( ( '_' ) )
            {
            // InternalFortXTrans.g:11663:2: ( ( '_' ) )
            // InternalFortXTrans.g:11664:3: ( '_' )
            {
             before(grammarAccess.getBindIdAccess().getUndsc_Keyword_1_0()); 
            // InternalFortXTrans.g:11665:3: ( '_' )
            // InternalFortXTrans.g:11666:4: '_'
            {
             before(grammarAccess.getBindIdAccess().getUndsc_Keyword_1_0()); 
            match(input,49,FOLLOW_2); 
             after(grammarAccess.getBindIdAccess().getUndsc_Keyword_1_0()); 

            }

             after(grammarAccess.getBindIdAccess().getUndsc_Keyword_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BindId__UndscAssignment_1"


    // $ANTLR start "rule__IsType__TypeAssignment_1"
    // InternalFortXTrans.g:11677:1: rule__IsType__TypeAssignment_1 : ( ruleSimpleName ) ;
    public final void rule__IsType__TypeAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11681:1: ( ( ruleSimpleName ) )
            // InternalFortXTrans.g:11682:2: ( ruleSimpleName )
            {
            // InternalFortXTrans.g:11682:2: ( ruleSimpleName )
            // InternalFortXTrans.g:11683:3: ruleSimpleName
            {
             before(grammarAccess.getIsTypeAccess().getTypeSimpleNameParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleSimpleName();

            state._fsp--;

             after(grammarAccess.getIsTypeAccess().getTypeSimpleNameParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IsType__TypeAssignment_1"


    // $ANTLR start "rule__FieldDecl__PriAssignment_0_0"
    // InternalFortXTrans.g:11692:1: rule__FieldDecl__PriAssignment_0_0 : ( ( 'private' ) ) ;
    public final void rule__FieldDecl__PriAssignment_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11696:1: ( ( ( 'private' ) ) )
            // InternalFortXTrans.g:11697:2: ( ( 'private' ) )
            {
            // InternalFortXTrans.g:11697:2: ( ( 'private' ) )
            // InternalFortXTrans.g:11698:3: ( 'private' )
            {
             before(grammarAccess.getFieldDeclAccess().getPriPrivateKeyword_0_0_0()); 
            // InternalFortXTrans.g:11699:3: ( 'private' )
            // InternalFortXTrans.g:11700:4: 'private'
            {
             before(grammarAccess.getFieldDeclAccess().getPriPrivateKeyword_0_0_0()); 
            match(input,39,FOLLOW_2); 
             after(grammarAccess.getFieldDeclAccess().getPriPrivateKeyword_0_0_0()); 

            }

             after(grammarAccess.getFieldDeclAccess().getPriPrivateKeyword_0_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__PriAssignment_0_0"


    // $ANTLR start "rule__FieldDecl__MutAssignment_0_1"
    // InternalFortXTrans.g:11711:1: rule__FieldDecl__MutAssignment_0_1 : ( ( 'var' ) ) ;
    public final void rule__FieldDecl__MutAssignment_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11715:1: ( ( ( 'var' ) ) )
            // InternalFortXTrans.g:11716:2: ( ( 'var' ) )
            {
            // InternalFortXTrans.g:11716:2: ( ( 'var' ) )
            // InternalFortXTrans.g:11717:3: ( 'var' )
            {
             before(grammarAccess.getFieldDeclAccess().getMutVarKeyword_0_1_0()); 
            // InternalFortXTrans.g:11718:3: ( 'var' )
            // InternalFortXTrans.g:11719:4: 'var'
            {
             before(grammarAccess.getFieldDeclAccess().getMutVarKeyword_0_1_0()); 
            match(input,50,FOLLOW_2); 
             after(grammarAccess.getFieldDeclAccess().getMutVarKeyword_0_1_0()); 

            }

             after(grammarAccess.getFieldDeclAccess().getMutVarKeyword_0_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__MutAssignment_0_1"


    // $ANTLR start "rule__FieldDecl__VarsAssignment_0_2"
    // InternalFortXTrans.g:11730:1: rule__FieldDecl__VarsAssignment_0_2 : ( ruleNoNewlineVarWTypes ) ;
    public final void rule__FieldDecl__VarsAssignment_0_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11734:1: ( ( ruleNoNewlineVarWTypes ) )
            // InternalFortXTrans.g:11735:2: ( ruleNoNewlineVarWTypes )
            {
            // InternalFortXTrans.g:11735:2: ( ruleNoNewlineVarWTypes )
            // InternalFortXTrans.g:11736:3: ruleNoNewlineVarWTypes
            {
             before(grammarAccess.getFieldDeclAccess().getVarsNoNewlineVarWTypesParserRuleCall_0_2_0()); 
            pushFollow(FOLLOW_2);
            ruleNoNewlineVarWTypes();

            state._fsp--;

             after(grammarAccess.getFieldDeclAccess().getVarsNoNewlineVarWTypesParserRuleCall_0_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__VarsAssignment_0_2"


    // $ANTLR start "rule__FieldDecl__InitAssignment_0_3"
    // InternalFortXTrans.g:11745:1: rule__FieldDecl__InitAssignment_0_3 : ( ruleInitVal ) ;
    public final void rule__FieldDecl__InitAssignment_0_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11749:1: ( ( ruleInitVal ) )
            // InternalFortXTrans.g:11750:2: ( ruleInitVal )
            {
            // InternalFortXTrans.g:11750:2: ( ruleInitVal )
            // InternalFortXTrans.g:11751:3: ruleInitVal
            {
             before(grammarAccess.getFieldDeclAccess().getInitInitValParserRuleCall_0_3_0()); 
            pushFollow(FOLLOW_2);
            ruleInitVal();

            state._fsp--;

             after(grammarAccess.getFieldDeclAccess().getInitInitValParserRuleCall_0_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__InitAssignment_0_3"


    // $ANTLR start "rule__FieldDecl__PriAssignment_1_0"
    // InternalFortXTrans.g:11760:1: rule__FieldDecl__PriAssignment_1_0 : ( ( 'private' ) ) ;
    public final void rule__FieldDecl__PriAssignment_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11764:1: ( ( ( 'private' ) ) )
            // InternalFortXTrans.g:11765:2: ( ( 'private' ) )
            {
            // InternalFortXTrans.g:11765:2: ( ( 'private' ) )
            // InternalFortXTrans.g:11766:3: ( 'private' )
            {
             before(grammarAccess.getFieldDeclAccess().getPriPrivateKeyword_1_0_0()); 
            // InternalFortXTrans.g:11767:3: ( 'private' )
            // InternalFortXTrans.g:11768:4: 'private'
            {
             before(grammarAccess.getFieldDeclAccess().getPriPrivateKeyword_1_0_0()); 
            match(input,39,FOLLOW_2); 
             after(grammarAccess.getFieldDeclAccess().getPriPrivateKeyword_1_0_0()); 

            }

             after(grammarAccess.getFieldDeclAccess().getPriPrivateKeyword_1_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__PriAssignment_1_0"


    // $ANTLR start "rule__FieldDecl__IdtupAssignment_1_1"
    // InternalFortXTrans.g:11779:1: rule__FieldDecl__IdtupAssignment_1_1 : ( ruleIdOrTuple ) ;
    public final void rule__FieldDecl__IdtupAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11783:1: ( ( ruleIdOrTuple ) )
            // InternalFortXTrans.g:11784:2: ( ruleIdOrTuple )
            {
            // InternalFortXTrans.g:11784:2: ( ruleIdOrTuple )
            // InternalFortXTrans.g:11785:3: ruleIdOrTuple
            {
             before(grammarAccess.getFieldDeclAccess().getIdtupIdOrTupleParserRuleCall_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleIdOrTuple();

            state._fsp--;

             after(grammarAccess.getFieldDeclAccess().getIdtupIdOrTupleParserRuleCall_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__IdtupAssignment_1_1"


    // $ANTLR start "rule__FieldDecl__LitTupAssignment_1_3"
    // InternalFortXTrans.g:11794:1: rule__FieldDecl__LitTupAssignment_1_3 : ( ruleLiteralTuple ) ;
    public final void rule__FieldDecl__LitTupAssignment_1_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11798:1: ( ( ruleLiteralTuple ) )
            // InternalFortXTrans.g:11799:2: ( ruleLiteralTuple )
            {
            // InternalFortXTrans.g:11799:2: ( ruleLiteralTuple )
            // InternalFortXTrans.g:11800:3: ruleLiteralTuple
            {
             before(grammarAccess.getFieldDeclAccess().getLitTupLiteralTupleParserRuleCall_1_3_0()); 
            pushFollow(FOLLOW_2);
            ruleLiteralTuple();

            state._fsp--;

             after(grammarAccess.getFieldDeclAccess().getLitTupLiteralTupleParserRuleCall_1_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__LitTupAssignment_1_3"


    // $ANTLR start "rule__FieldDecl__PriAssignment_2_0"
    // InternalFortXTrans.g:11809:1: rule__FieldDecl__PriAssignment_2_0 : ( ( 'private' ) ) ;
    public final void rule__FieldDecl__PriAssignment_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11813:1: ( ( ( 'private' ) ) )
            // InternalFortXTrans.g:11814:2: ( ( 'private' ) )
            {
            // InternalFortXTrans.g:11814:2: ( ( 'private' ) )
            // InternalFortXTrans.g:11815:3: ( 'private' )
            {
             before(grammarAccess.getFieldDeclAccess().getPriPrivateKeyword_2_0_0()); 
            // InternalFortXTrans.g:11816:3: ( 'private' )
            // InternalFortXTrans.g:11817:4: 'private'
            {
             before(grammarAccess.getFieldDeclAccess().getPriPrivateKeyword_2_0_0()); 
            match(input,39,FOLLOW_2); 
             after(grammarAccess.getFieldDeclAccess().getPriPrivateKeyword_2_0_0()); 

            }

             after(grammarAccess.getFieldDeclAccess().getPriPrivateKeyword_2_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__PriAssignment_2_0"


    // $ANTLR start "rule__FieldDecl__MutAssignment_2_1"
    // InternalFortXTrans.g:11828:1: rule__FieldDecl__MutAssignment_2_1 : ( ( 'var' ) ) ;
    public final void rule__FieldDecl__MutAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11832:1: ( ( ( 'var' ) ) )
            // InternalFortXTrans.g:11833:2: ( ( 'var' ) )
            {
            // InternalFortXTrans.g:11833:2: ( ( 'var' ) )
            // InternalFortXTrans.g:11834:3: ( 'var' )
            {
             before(grammarAccess.getFieldDeclAccess().getMutVarKeyword_2_1_0()); 
            // InternalFortXTrans.g:11835:3: ( 'var' )
            // InternalFortXTrans.g:11836:4: 'var'
            {
             before(grammarAccess.getFieldDeclAccess().getMutVarKeyword_2_1_0()); 
            match(input,50,FOLLOW_2); 
             after(grammarAccess.getFieldDeclAccess().getMutVarKeyword_2_1_0()); 

            }

             after(grammarAccess.getFieldDeclAccess().getMutVarKeyword_2_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__MutAssignment_2_1"


    // $ANTLR start "rule__FieldDecl__IdtupAssignment_2_2"
    // InternalFortXTrans.g:11847:1: rule__FieldDecl__IdtupAssignment_2_2 : ( ruleIdOrTuple ) ;
    public final void rule__FieldDecl__IdtupAssignment_2_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11851:1: ( ( ruleIdOrTuple ) )
            // InternalFortXTrans.g:11852:2: ( ruleIdOrTuple )
            {
            // InternalFortXTrans.g:11852:2: ( ruleIdOrTuple )
            // InternalFortXTrans.g:11853:3: ruleIdOrTuple
            {
             before(grammarAccess.getFieldDeclAccess().getIdtupIdOrTupleParserRuleCall_2_2_0()); 
            pushFollow(FOLLOW_2);
            ruleIdOrTuple();

            state._fsp--;

             after(grammarAccess.getFieldDeclAccess().getIdtupIdOrTupleParserRuleCall_2_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__IdtupAssignment_2_2"


    // $ANTLR start "rule__FieldDecl__TypeAssignment_2_4"
    // InternalFortXTrans.g:11862:1: rule__FieldDecl__TypeAssignment_2_4 : ( ruleSimpleName ) ;
    public final void rule__FieldDecl__TypeAssignment_2_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11866:1: ( ( ruleSimpleName ) )
            // InternalFortXTrans.g:11867:2: ( ruleSimpleName )
            {
            // InternalFortXTrans.g:11867:2: ( ruleSimpleName )
            // InternalFortXTrans.g:11868:3: ruleSimpleName
            {
             before(grammarAccess.getFieldDeclAccess().getTypeSimpleNameParserRuleCall_2_4_0()); 
            pushFollow(FOLLOW_2);
            ruleSimpleName();

            state._fsp--;

             after(grammarAccess.getFieldDeclAccess().getTypeSimpleNameParserRuleCall_2_4_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__TypeAssignment_2_4"


    // $ANTLR start "rule__FieldDecl__InitAssignment_2_6"
    // InternalFortXTrans.g:11877:1: rule__FieldDecl__InitAssignment_2_6 : ( ruleInitVal ) ;
    public final void rule__FieldDecl__InitAssignment_2_6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11881:1: ( ( ruleInitVal ) )
            // InternalFortXTrans.g:11882:2: ( ruleInitVal )
            {
            // InternalFortXTrans.g:11882:2: ( ruleInitVal )
            // InternalFortXTrans.g:11883:3: ruleInitVal
            {
             before(grammarAccess.getFieldDeclAccess().getInitInitValParserRuleCall_2_6_0()); 
            pushFollow(FOLLOW_2);
            ruleInitVal();

            state._fsp--;

             after(grammarAccess.getFieldDeclAccess().getInitInitValParserRuleCall_2_6_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__InitAssignment_2_6"


    // $ANTLR start "rule__FieldDecl__PriAssignment_3_0"
    // InternalFortXTrans.g:11892:1: rule__FieldDecl__PriAssignment_3_0 : ( ( 'private' ) ) ;
    public final void rule__FieldDecl__PriAssignment_3_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11896:1: ( ( ( 'private' ) ) )
            // InternalFortXTrans.g:11897:2: ( ( 'private' ) )
            {
            // InternalFortXTrans.g:11897:2: ( ( 'private' ) )
            // InternalFortXTrans.g:11898:3: ( 'private' )
            {
             before(grammarAccess.getFieldDeclAccess().getPriPrivateKeyword_3_0_0()); 
            // InternalFortXTrans.g:11899:3: ( 'private' )
            // InternalFortXTrans.g:11900:4: 'private'
            {
             before(grammarAccess.getFieldDeclAccess().getPriPrivateKeyword_3_0_0()); 
            match(input,39,FOLLOW_2); 
             after(grammarAccess.getFieldDeclAccess().getPriPrivateKeyword_3_0_0()); 

            }

             after(grammarAccess.getFieldDeclAccess().getPriPrivateKeyword_3_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__PriAssignment_3_0"


    // $ANTLR start "rule__FieldDecl__MutAssignment_3_1"
    // InternalFortXTrans.g:11911:1: rule__FieldDecl__MutAssignment_3_1 : ( ( 'var' ) ) ;
    public final void rule__FieldDecl__MutAssignment_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11915:1: ( ( ( 'var' ) ) )
            // InternalFortXTrans.g:11916:2: ( ( 'var' ) )
            {
            // InternalFortXTrans.g:11916:2: ( ( 'var' ) )
            // InternalFortXTrans.g:11917:3: ( 'var' )
            {
             before(grammarAccess.getFieldDeclAccess().getMutVarKeyword_3_1_0()); 
            // InternalFortXTrans.g:11918:3: ( 'var' )
            // InternalFortXTrans.g:11919:4: 'var'
            {
             before(grammarAccess.getFieldDeclAccess().getMutVarKeyword_3_1_0()); 
            match(input,50,FOLLOW_2); 
             after(grammarAccess.getFieldDeclAccess().getMutVarKeyword_3_1_0()); 

            }

             after(grammarAccess.getFieldDeclAccess().getMutVarKeyword_3_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__MutAssignment_3_1"


    // $ANTLR start "rule__FieldDecl__IdtupAssignment_3_2"
    // InternalFortXTrans.g:11930:1: rule__FieldDecl__IdtupAssignment_3_2 : ( ruleIdOrTuple ) ;
    public final void rule__FieldDecl__IdtupAssignment_3_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11934:1: ( ( ruleIdOrTuple ) )
            // InternalFortXTrans.g:11935:2: ( ruleIdOrTuple )
            {
            // InternalFortXTrans.g:11935:2: ( ruleIdOrTuple )
            // InternalFortXTrans.g:11936:3: ruleIdOrTuple
            {
             before(grammarAccess.getFieldDeclAccess().getIdtupIdOrTupleParserRuleCall_3_2_0()); 
            pushFollow(FOLLOW_2);
            ruleIdOrTuple();

            state._fsp--;

             after(grammarAccess.getFieldDeclAccess().getIdtupIdOrTupleParserRuleCall_3_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__IdtupAssignment_3_2"


    // $ANTLR start "rule__FieldDecl__TuptypeAssignment_3_4"
    // InternalFortXTrans.g:11945:1: rule__FieldDecl__TuptypeAssignment_3_4 : ( ruleTupleType ) ;
    public final void rule__FieldDecl__TuptypeAssignment_3_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11949:1: ( ( ruleTupleType ) )
            // InternalFortXTrans.g:11950:2: ( ruleTupleType )
            {
            // InternalFortXTrans.g:11950:2: ( ruleTupleType )
            // InternalFortXTrans.g:11951:3: ruleTupleType
            {
             before(grammarAccess.getFieldDeclAccess().getTuptypeTupleTypeParserRuleCall_3_4_0()); 
            pushFollow(FOLLOW_2);
            ruleTupleType();

            state._fsp--;

             after(grammarAccess.getFieldDeclAccess().getTuptypeTupleTypeParserRuleCall_3_4_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__TuptypeAssignment_3_4"


    // $ANTLR start "rule__FieldDecl__InitAssignment_3_5"
    // InternalFortXTrans.g:11960:1: rule__FieldDecl__InitAssignment_3_5 : ( ruleInitVal ) ;
    public final void rule__FieldDecl__InitAssignment_3_5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11964:1: ( ( ruleInitVal ) )
            // InternalFortXTrans.g:11965:2: ( ruleInitVal )
            {
            // InternalFortXTrans.g:11965:2: ( ruleInitVal )
            // InternalFortXTrans.g:11966:3: ruleInitVal
            {
             before(grammarAccess.getFieldDeclAccess().getInitInitValParserRuleCall_3_5_0()); 
            pushFollow(FOLLOW_2);
            ruleInitVal();

            state._fsp--;

             after(grammarAccess.getFieldDeclAccess().getInitInitValParserRuleCall_3_5_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__InitAssignment_3_5"


    // $ANTLR start "rule__NoNewlineVarWTypes__SingleAssignment_0"
    // InternalFortXTrans.g:11975:1: rule__NoNewlineVarWTypes__SingleAssignment_0 : ( ruleNoNewlineVarWType ) ;
    public final void rule__NoNewlineVarWTypes__SingleAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11979:1: ( ( ruleNoNewlineVarWType ) )
            // InternalFortXTrans.g:11980:2: ( ruleNoNewlineVarWType )
            {
            // InternalFortXTrans.g:11980:2: ( ruleNoNewlineVarWType )
            // InternalFortXTrans.g:11981:3: ruleNoNewlineVarWType
            {
             before(grammarAccess.getNoNewlineVarWTypesAccess().getSingleNoNewlineVarWTypeParserRuleCall_0_0()); 
            pushFollow(FOLLOW_2);
            ruleNoNewlineVarWType();

            state._fsp--;

             after(grammarAccess.getNoNewlineVarWTypesAccess().getSingleNoNewlineVarWTypeParserRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NoNewlineVarWTypes__SingleAssignment_0"


    // $ANTLR start "rule__NoNewlineVarWTypes__MultipleAssignment_1_1"
    // InternalFortXTrans.g:11990:1: rule__NoNewlineVarWTypes__MultipleAssignment_1_1 : ( ruleNoNewlineVarWType ) ;
    public final void rule__NoNewlineVarWTypes__MultipleAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11994:1: ( ( ruleNoNewlineVarWType ) )
            // InternalFortXTrans.g:11995:2: ( ruleNoNewlineVarWType )
            {
            // InternalFortXTrans.g:11995:2: ( ruleNoNewlineVarWType )
            // InternalFortXTrans.g:11996:3: ruleNoNewlineVarWType
            {
             before(grammarAccess.getNoNewlineVarWTypesAccess().getMultipleNoNewlineVarWTypeParserRuleCall_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleNoNewlineVarWType();

            state._fsp--;

             after(grammarAccess.getNoNewlineVarWTypesAccess().getMultipleNoNewlineVarWTypeParserRuleCall_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NoNewlineVarWTypes__MultipleAssignment_1_1"


    // $ANTLR start "rule__NoNewlineVarWTypes__MultipleAssignment_1_2_1"
    // InternalFortXTrans.g:12005:1: rule__NoNewlineVarWTypes__MultipleAssignment_1_2_1 : ( ruleNoNewlineVarWType ) ;
    public final void rule__NoNewlineVarWTypes__MultipleAssignment_1_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12009:1: ( ( ruleNoNewlineVarWType ) )
            // InternalFortXTrans.g:12010:2: ( ruleNoNewlineVarWType )
            {
            // InternalFortXTrans.g:12010:2: ( ruleNoNewlineVarWType )
            // InternalFortXTrans.g:12011:3: ruleNoNewlineVarWType
            {
             before(grammarAccess.getNoNewlineVarWTypesAccess().getMultipleNoNewlineVarWTypeParserRuleCall_1_2_1_0()); 
            pushFollow(FOLLOW_2);
            ruleNoNewlineVarWType();

            state._fsp--;

             after(grammarAccess.getNoNewlineVarWTypesAccess().getMultipleNoNewlineVarWTypeParserRuleCall_1_2_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NoNewlineVarWTypes__MultipleAssignment_1_2_1"


    // $ANTLR start "rule__NoNewlineVarWType__BidAssignment_0"
    // InternalFortXTrans.g:12020:1: rule__NoNewlineVarWType__BidAssignment_0 : ( ruleBindId ) ;
    public final void rule__NoNewlineVarWType__BidAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12024:1: ( ( ruleBindId ) )
            // InternalFortXTrans.g:12025:2: ( ruleBindId )
            {
            // InternalFortXTrans.g:12025:2: ( ruleBindId )
            // InternalFortXTrans.g:12026:3: ruleBindId
            {
             before(grammarAccess.getNoNewlineVarWTypeAccess().getBidBindIdParserRuleCall_0_0()); 
            pushFollow(FOLLOW_2);
            ruleBindId();

            state._fsp--;

             after(grammarAccess.getNoNewlineVarWTypeAccess().getBidBindIdParserRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NoNewlineVarWType__BidAssignment_0"


    // $ANTLR start "rule__NoNewlineVarWType__IstypeAssignment_1"
    // InternalFortXTrans.g:12035:1: rule__NoNewlineVarWType__IstypeAssignment_1 : ( ruleIsType ) ;
    public final void rule__NoNewlineVarWType__IstypeAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12039:1: ( ( ruleIsType ) )
            // InternalFortXTrans.g:12040:2: ( ruleIsType )
            {
            // InternalFortXTrans.g:12040:2: ( ruleIsType )
            // InternalFortXTrans.g:12041:3: ruleIsType
            {
             before(grammarAccess.getNoNewlineVarWTypeAccess().getIstypeIsTypeParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleIsType();

            state._fsp--;

             after(grammarAccess.getNoNewlineVarWTypeAccess().getIstypeIsTypeParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NoNewlineVarWType__IstypeAssignment_1"


    // $ANTLR start "rule__InitVal__MutAssignment_0_0"
    // InternalFortXTrans.g:12050:1: rule__InitVal__MutAssignment_0_0 : ( ( ':=' ) ) ;
    public final void rule__InitVal__MutAssignment_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12054:1: ( ( ( ':=' ) ) )
            // InternalFortXTrans.g:12055:2: ( ( ':=' ) )
            {
            // InternalFortXTrans.g:12055:2: ( ( ':=' ) )
            // InternalFortXTrans.g:12056:3: ( ':=' )
            {
             before(grammarAccess.getInitValAccess().getMutColonEqualsSignKeyword_0_0_0()); 
            // InternalFortXTrans.g:12057:3: ( ':=' )
            // InternalFortXTrans.g:12058:4: ':='
            {
             before(grammarAccess.getInitValAccess().getMutColonEqualsSignKeyword_0_0_0()); 
            match(input,28,FOLLOW_2); 
             after(grammarAccess.getInitValAccess().getMutColonEqualsSignKeyword_0_0_0()); 

            }

             after(grammarAccess.getInitValAccess().getMutColonEqualsSignKeyword_0_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InitVal__MutAssignment_0_0"


    // $ANTLR start "rule__InitVal__LitAssignment_0_1"
    // InternalFortXTrans.g:12069:1: rule__InitVal__LitAssignment_0_1 : ( ruleLiteralTuple ) ;
    public final void rule__InitVal__LitAssignment_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12073:1: ( ( ruleLiteralTuple ) )
            // InternalFortXTrans.g:12074:2: ( ruleLiteralTuple )
            {
            // InternalFortXTrans.g:12074:2: ( ruleLiteralTuple )
            // InternalFortXTrans.g:12075:3: ruleLiteralTuple
            {
             before(grammarAccess.getInitValAccess().getLitLiteralTupleParserRuleCall_0_1_0()); 
            pushFollow(FOLLOW_2);
            ruleLiteralTuple();

            state._fsp--;

             after(grammarAccess.getInitValAccess().getLitLiteralTupleParserRuleCall_0_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InitVal__LitAssignment_0_1"


    // $ANTLR start "rule__InitVal__ImmutAssignment_1_0"
    // InternalFortXTrans.g:12084:1: rule__InitVal__ImmutAssignment_1_0 : ( ( '=' ) ) ;
    public final void rule__InitVal__ImmutAssignment_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12088:1: ( ( ( '=' ) ) )
            // InternalFortXTrans.g:12089:2: ( ( '=' ) )
            {
            // InternalFortXTrans.g:12089:2: ( ( '=' ) )
            // InternalFortXTrans.g:12090:3: ( '=' )
            {
             before(grammarAccess.getInitValAccess().getImmutEqualsSignKeyword_1_0_0()); 
            // InternalFortXTrans.g:12091:3: ( '=' )
            // InternalFortXTrans.g:12092:4: '='
            {
             before(grammarAccess.getInitValAccess().getImmutEqualsSignKeyword_1_0_0()); 
            match(input,35,FOLLOW_2); 
             after(grammarAccess.getInitValAccess().getImmutEqualsSignKeyword_1_0_0()); 

            }

             after(grammarAccess.getInitValAccess().getImmutEqualsSignKeyword_1_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InitVal__ImmutAssignment_1_0"


    // $ANTLR start "rule__InitVal__LitAssignment_1_1"
    // InternalFortXTrans.g:12103:1: rule__InitVal__LitAssignment_1_1 : ( ruleLiteralTuple ) ;
    public final void rule__InitVal__LitAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12107:1: ( ( ruleLiteralTuple ) )
            // InternalFortXTrans.g:12108:2: ( ruleLiteralTuple )
            {
            // InternalFortXTrans.g:12108:2: ( ruleLiteralTuple )
            // InternalFortXTrans.g:12109:3: ruleLiteralTuple
            {
             before(grammarAccess.getInitValAccess().getLitLiteralTupleParserRuleCall_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleLiteralTuple();

            state._fsp--;

             after(grammarAccess.getInitValAccess().getLitLiteralTupleParserRuleCall_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InitVal__LitAssignment_1_1"


    // $ANTLR start "rule__LiteralTuple__LitAssignment_0"
    // InternalFortXTrans.g:12118:1: rule__LiteralTuple__LitAssignment_0 : ( ruleLiteralTup ) ;
    public final void rule__LiteralTuple__LitAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12122:1: ( ( ruleLiteralTup ) )
            // InternalFortXTrans.g:12123:2: ( ruleLiteralTup )
            {
            // InternalFortXTrans.g:12123:2: ( ruleLiteralTup )
            // InternalFortXTrans.g:12124:3: ruleLiteralTup
            {
             before(grammarAccess.getLiteralTupleAccess().getLitLiteralTupParserRuleCall_0_0()); 
            pushFollow(FOLLOW_2);
            ruleLiteralTup();

            state._fsp--;

             after(grammarAccess.getLiteralTupleAccess().getLitLiteralTupParserRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralTuple__LitAssignment_0"


    // $ANTLR start "rule__LiteralTuple__QnameAssignment_1"
    // InternalFortXTrans.g:12133:1: rule__LiteralTuple__QnameAssignment_1 : ( ruleQualifiedName ) ;
    public final void rule__LiteralTuple__QnameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12137:1: ( ( ruleQualifiedName ) )
            // InternalFortXTrans.g:12138:2: ( ruleQualifiedName )
            {
            // InternalFortXTrans.g:12138:2: ( ruleQualifiedName )
            // InternalFortXTrans.g:12139:3: ruleQualifiedName
            {
             before(grammarAccess.getLiteralTupleAccess().getQnameQualifiedNameParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleQualifiedName();

            state._fsp--;

             after(grammarAccess.getLiteralTupleAccess().getQnameQualifiedNameParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralTuple__QnameAssignment_1"


    // $ANTLR start "rule__LiteralTuple__QlistAssignment_2"
    // InternalFortXTrans.g:12148:1: rule__LiteralTuple__QlistAssignment_2 : ( ruleQualifiedNameTuple ) ;
    public final void rule__LiteralTuple__QlistAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12152:1: ( ( ruleQualifiedNameTuple ) )
            // InternalFortXTrans.g:12153:2: ( ruleQualifiedNameTuple )
            {
            // InternalFortXTrans.g:12153:2: ( ruleQualifiedNameTuple )
            // InternalFortXTrans.g:12154:3: ruleQualifiedNameTuple
            {
             before(grammarAccess.getLiteralTupleAccess().getQlistQualifiedNameTupleParserRuleCall_2_0()); 
            pushFollow(FOLLOW_2);
            ruleQualifiedNameTuple();

            state._fsp--;

             after(grammarAccess.getLiteralTupleAccess().getQlistQualifiedNameTupleParserRuleCall_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralTuple__QlistAssignment_2"


    // $ANTLR start "rule__LiteralTup__LitAssignment_0"
    // InternalFortXTrans.g:12163:1: rule__LiteralTup__LitAssignment_0 : ( ruleLiteral ) ;
    public final void rule__LiteralTup__LitAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12167:1: ( ( ruleLiteral ) )
            // InternalFortXTrans.g:12168:2: ( ruleLiteral )
            {
            // InternalFortXTrans.g:12168:2: ( ruleLiteral )
            // InternalFortXTrans.g:12169:3: ruleLiteral
            {
             before(grammarAccess.getLiteralTupAccess().getLitLiteralParserRuleCall_0_0()); 
            pushFollow(FOLLOW_2);
            ruleLiteral();

            state._fsp--;

             after(grammarAccess.getLiteralTupAccess().getLitLiteralParserRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralTup__LitAssignment_0"


    // $ANTLR start "rule__LiteralTup__LitsAssignment_1_1"
    // InternalFortXTrans.g:12178:1: rule__LiteralTup__LitsAssignment_1_1 : ( ruleLiteral ) ;
    public final void rule__LiteralTup__LitsAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12182:1: ( ( ruleLiteral ) )
            // InternalFortXTrans.g:12183:2: ( ruleLiteral )
            {
            // InternalFortXTrans.g:12183:2: ( ruleLiteral )
            // InternalFortXTrans.g:12184:3: ruleLiteral
            {
             before(grammarAccess.getLiteralTupAccess().getLitsLiteralParserRuleCall_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleLiteral();

            state._fsp--;

             after(grammarAccess.getLiteralTupAccess().getLitsLiteralParserRuleCall_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralTup__LitsAssignment_1_1"


    // $ANTLR start "rule__LiteralTup__LitsAssignment_1_2_1"
    // InternalFortXTrans.g:12193:1: rule__LiteralTup__LitsAssignment_1_2_1 : ( ruleLiteral ) ;
    public final void rule__LiteralTup__LitsAssignment_1_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12197:1: ( ( ruleLiteral ) )
            // InternalFortXTrans.g:12198:2: ( ruleLiteral )
            {
            // InternalFortXTrans.g:12198:2: ( ruleLiteral )
            // InternalFortXTrans.g:12199:3: ruleLiteral
            {
             before(grammarAccess.getLiteralTupAccess().getLitsLiteralParserRuleCall_1_2_1_0()); 
            pushFollow(FOLLOW_2);
            ruleLiteral();

            state._fsp--;

             after(grammarAccess.getLiteralTupAccess().getLitsLiteralParserRuleCall_1_2_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralTup__LitsAssignment_1_2_1"


    // $ANTLR start "rule__Literal__IntgAssignment_0"
    // InternalFortXTrans.g:12208:1: rule__Literal__IntgAssignment_0 : ( RULE_INT ) ;
    public final void rule__Literal__IntgAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12212:1: ( ( RULE_INT ) )
            // InternalFortXTrans.g:12213:2: ( RULE_INT )
            {
            // InternalFortXTrans.g:12213:2: ( RULE_INT )
            // InternalFortXTrans.g:12214:3: RULE_INT
            {
             before(grammarAccess.getLiteralAccess().getIntgINTTerminalRuleCall_0_0()); 
            match(input,RULE_INT,FOLLOW_2); 
             after(grammarAccess.getLiteralAccess().getIntgINTTerminalRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Literal__IntgAssignment_0"


    // $ANTLR start "rule__Literal__FlotAssignment_1"
    // InternalFortXTrans.g:12223:1: rule__Literal__FlotAssignment_1 : ( RULE_FLOAT ) ;
    public final void rule__Literal__FlotAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12227:1: ( ( RULE_FLOAT ) )
            // InternalFortXTrans.g:12228:2: ( RULE_FLOAT )
            {
            // InternalFortXTrans.g:12228:2: ( RULE_FLOAT )
            // InternalFortXTrans.g:12229:3: RULE_FLOAT
            {
             before(grammarAccess.getLiteralAccess().getFlotFLOATTerminalRuleCall_1_0()); 
            match(input,RULE_FLOAT,FOLLOW_2); 
             after(grammarAccess.getLiteralAccess().getFlotFLOATTerminalRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Literal__FlotAssignment_1"


    // $ANTLR start "rule__Literal__StrAssignment_2"
    // InternalFortXTrans.g:12238:1: rule__Literal__StrAssignment_2 : ( RULE_STRING ) ;
    public final void rule__Literal__StrAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12242:1: ( ( RULE_STRING ) )
            // InternalFortXTrans.g:12243:2: ( RULE_STRING )
            {
            // InternalFortXTrans.g:12243:2: ( RULE_STRING )
            // InternalFortXTrans.g:12244:3: RULE_STRING
            {
             before(grammarAccess.getLiteralAccess().getStrSTRINGTerminalRuleCall_2_0()); 
            match(input,RULE_STRING,FOLLOW_2); 
             after(grammarAccess.getLiteralAccess().getStrSTRINGTerminalRuleCall_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Literal__StrAssignment_2"


    // $ANTLR start "rule__LocalVarDecl__MutAssignment_0_0"
    // InternalFortXTrans.g:12253:1: rule__LocalVarDecl__MutAssignment_0_0 : ( ( 'var' ) ) ;
    public final void rule__LocalVarDecl__MutAssignment_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12257:1: ( ( ( 'var' ) ) )
            // InternalFortXTrans.g:12258:2: ( ( 'var' ) )
            {
            // InternalFortXTrans.g:12258:2: ( ( 'var' ) )
            // InternalFortXTrans.g:12259:3: ( 'var' )
            {
             before(grammarAccess.getLocalVarDeclAccess().getMutVarKeyword_0_0_0()); 
            // InternalFortXTrans.g:12260:3: ( 'var' )
            // InternalFortXTrans.g:12261:4: 'var'
            {
             before(grammarAccess.getLocalVarDeclAccess().getMutVarKeyword_0_0_0()); 
            match(input,50,FOLLOW_2); 
             after(grammarAccess.getLocalVarDeclAccess().getMutVarKeyword_0_0_0()); 

            }

             after(grammarAccess.getLocalVarDeclAccess().getMutVarKeyword_0_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__MutAssignment_0_0"


    // $ANTLR start "rule__LocalVarDecl__VarsAssignment_0_1"
    // InternalFortXTrans.g:12272:1: rule__LocalVarDecl__VarsAssignment_0_1 : ( ruleNoNewlineVarWTypes ) ;
    public final void rule__LocalVarDecl__VarsAssignment_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12276:1: ( ( ruleNoNewlineVarWTypes ) )
            // InternalFortXTrans.g:12277:2: ( ruleNoNewlineVarWTypes )
            {
            // InternalFortXTrans.g:12277:2: ( ruleNoNewlineVarWTypes )
            // InternalFortXTrans.g:12278:3: ruleNoNewlineVarWTypes
            {
             before(grammarAccess.getLocalVarDeclAccess().getVarsNoNewlineVarWTypesParserRuleCall_0_1_0()); 
            pushFollow(FOLLOW_2);
            ruleNoNewlineVarWTypes();

            state._fsp--;

             after(grammarAccess.getLocalVarDeclAccess().getVarsNoNewlineVarWTypesParserRuleCall_0_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__VarsAssignment_0_1"


    // $ANTLR start "rule__LocalVarDecl__InitAssignment_0_3"
    // InternalFortXTrans.g:12287:1: rule__LocalVarDecl__InitAssignment_0_3 : ( ruleExpr ) ;
    public final void rule__LocalVarDecl__InitAssignment_0_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12291:1: ( ( ruleExpr ) )
            // InternalFortXTrans.g:12292:2: ( ruleExpr )
            {
            // InternalFortXTrans.g:12292:2: ( ruleExpr )
            // InternalFortXTrans.g:12293:3: ruleExpr
            {
             before(grammarAccess.getLocalVarDeclAccess().getInitExprParserRuleCall_0_3_0()); 
            pushFollow(FOLLOW_2);
            ruleExpr();

            state._fsp--;

             after(grammarAccess.getLocalVarDeclAccess().getInitExprParserRuleCall_0_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__InitAssignment_0_3"


    // $ANTLR start "rule__LocalVarDecl__IdtupAssignment_1_0"
    // InternalFortXTrans.g:12302:1: rule__LocalVarDecl__IdtupAssignment_1_0 : ( ruleIdOrTuple ) ;
    public final void rule__LocalVarDecl__IdtupAssignment_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12306:1: ( ( ruleIdOrTuple ) )
            // InternalFortXTrans.g:12307:2: ( ruleIdOrTuple )
            {
            // InternalFortXTrans.g:12307:2: ( ruleIdOrTuple )
            // InternalFortXTrans.g:12308:3: ruleIdOrTuple
            {
             before(grammarAccess.getLocalVarDeclAccess().getIdtupIdOrTupleParserRuleCall_1_0_0()); 
            pushFollow(FOLLOW_2);
            ruleIdOrTuple();

            state._fsp--;

             after(grammarAccess.getLocalVarDeclAccess().getIdtupIdOrTupleParserRuleCall_1_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__IdtupAssignment_1_0"


    // $ANTLR start "rule__LocalVarDecl__LitTupAssignment_1_2"
    // InternalFortXTrans.g:12317:1: rule__LocalVarDecl__LitTupAssignment_1_2 : ( ruleLiteralTuple ) ;
    public final void rule__LocalVarDecl__LitTupAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12321:1: ( ( ruleLiteralTuple ) )
            // InternalFortXTrans.g:12322:2: ( ruleLiteralTuple )
            {
            // InternalFortXTrans.g:12322:2: ( ruleLiteralTuple )
            // InternalFortXTrans.g:12323:3: ruleLiteralTuple
            {
             before(grammarAccess.getLocalVarDeclAccess().getLitTupLiteralTupleParserRuleCall_1_2_0()); 
            pushFollow(FOLLOW_2);
            ruleLiteralTuple();

            state._fsp--;

             after(grammarAccess.getLocalVarDeclAccess().getLitTupLiteralTupleParserRuleCall_1_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__LitTupAssignment_1_2"


    // $ANTLR start "rule__LocalVarDecl__MutAssignment_2_0"
    // InternalFortXTrans.g:12332:1: rule__LocalVarDecl__MutAssignment_2_0 : ( ( 'var' ) ) ;
    public final void rule__LocalVarDecl__MutAssignment_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12336:1: ( ( ( 'var' ) ) )
            // InternalFortXTrans.g:12337:2: ( ( 'var' ) )
            {
            // InternalFortXTrans.g:12337:2: ( ( 'var' ) )
            // InternalFortXTrans.g:12338:3: ( 'var' )
            {
             before(grammarAccess.getLocalVarDeclAccess().getMutVarKeyword_2_0_0()); 
            // InternalFortXTrans.g:12339:3: ( 'var' )
            // InternalFortXTrans.g:12340:4: 'var'
            {
             before(grammarAccess.getLocalVarDeclAccess().getMutVarKeyword_2_0_0()); 
            match(input,50,FOLLOW_2); 
             after(grammarAccess.getLocalVarDeclAccess().getMutVarKeyword_2_0_0()); 

            }

             after(grammarAccess.getLocalVarDeclAccess().getMutVarKeyword_2_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__MutAssignment_2_0"


    // $ANTLR start "rule__LocalVarDecl__IdtupAssignment_2_1"
    // InternalFortXTrans.g:12351:1: rule__LocalVarDecl__IdtupAssignment_2_1 : ( ruleIdOrTuple ) ;
    public final void rule__LocalVarDecl__IdtupAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12355:1: ( ( ruleIdOrTuple ) )
            // InternalFortXTrans.g:12356:2: ( ruleIdOrTuple )
            {
            // InternalFortXTrans.g:12356:2: ( ruleIdOrTuple )
            // InternalFortXTrans.g:12357:3: ruleIdOrTuple
            {
             before(grammarAccess.getLocalVarDeclAccess().getIdtupIdOrTupleParserRuleCall_2_1_0()); 
            pushFollow(FOLLOW_2);
            ruleIdOrTuple();

            state._fsp--;

             after(grammarAccess.getLocalVarDeclAccess().getIdtupIdOrTupleParserRuleCall_2_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__IdtupAssignment_2_1"


    // $ANTLR start "rule__LocalVarDecl__TypeAssignment_2_3"
    // InternalFortXTrans.g:12366:1: rule__LocalVarDecl__TypeAssignment_2_3 : ( ruleSimpleName ) ;
    public final void rule__LocalVarDecl__TypeAssignment_2_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12370:1: ( ( ruleSimpleName ) )
            // InternalFortXTrans.g:12371:2: ( ruleSimpleName )
            {
            // InternalFortXTrans.g:12371:2: ( ruleSimpleName )
            // InternalFortXTrans.g:12372:3: ruleSimpleName
            {
             before(grammarAccess.getLocalVarDeclAccess().getTypeSimpleNameParserRuleCall_2_3_0()); 
            pushFollow(FOLLOW_2);
            ruleSimpleName();

            state._fsp--;

             after(grammarAccess.getLocalVarDeclAccess().getTypeSimpleNameParserRuleCall_2_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__TypeAssignment_2_3"


    // $ANTLR start "rule__LocalVarDecl__InitAssignment_2_6"
    // InternalFortXTrans.g:12381:1: rule__LocalVarDecl__InitAssignment_2_6 : ( ruleExpr ) ;
    public final void rule__LocalVarDecl__InitAssignment_2_6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12385:1: ( ( ruleExpr ) )
            // InternalFortXTrans.g:12386:2: ( ruleExpr )
            {
            // InternalFortXTrans.g:12386:2: ( ruleExpr )
            // InternalFortXTrans.g:12387:3: ruleExpr
            {
             before(grammarAccess.getLocalVarDeclAccess().getInitExprParserRuleCall_2_6_0()); 
            pushFollow(FOLLOW_2);
            ruleExpr();

            state._fsp--;

             after(grammarAccess.getLocalVarDeclAccess().getInitExprParserRuleCall_2_6_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__InitAssignment_2_6"


    // $ANTLR start "rule__LocalVarDecl__MutAssignment_3_0"
    // InternalFortXTrans.g:12396:1: rule__LocalVarDecl__MutAssignment_3_0 : ( ( 'var' ) ) ;
    public final void rule__LocalVarDecl__MutAssignment_3_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12400:1: ( ( ( 'var' ) ) )
            // InternalFortXTrans.g:12401:2: ( ( 'var' ) )
            {
            // InternalFortXTrans.g:12401:2: ( ( 'var' ) )
            // InternalFortXTrans.g:12402:3: ( 'var' )
            {
             before(grammarAccess.getLocalVarDeclAccess().getMutVarKeyword_3_0_0()); 
            // InternalFortXTrans.g:12403:3: ( 'var' )
            // InternalFortXTrans.g:12404:4: 'var'
            {
             before(grammarAccess.getLocalVarDeclAccess().getMutVarKeyword_3_0_0()); 
            match(input,50,FOLLOW_2); 
             after(grammarAccess.getLocalVarDeclAccess().getMutVarKeyword_3_0_0()); 

            }

             after(grammarAccess.getLocalVarDeclAccess().getMutVarKeyword_3_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__MutAssignment_3_0"


    // $ANTLR start "rule__LocalVarDecl__IdtupAssignment_3_1"
    // InternalFortXTrans.g:12415:1: rule__LocalVarDecl__IdtupAssignment_3_1 : ( ruleIdOrTuple ) ;
    public final void rule__LocalVarDecl__IdtupAssignment_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12419:1: ( ( ruleIdOrTuple ) )
            // InternalFortXTrans.g:12420:2: ( ruleIdOrTuple )
            {
            // InternalFortXTrans.g:12420:2: ( ruleIdOrTuple )
            // InternalFortXTrans.g:12421:3: ruleIdOrTuple
            {
             before(grammarAccess.getLocalVarDeclAccess().getIdtupIdOrTupleParserRuleCall_3_1_0()); 
            pushFollow(FOLLOW_2);
            ruleIdOrTuple();

            state._fsp--;

             after(grammarAccess.getLocalVarDeclAccess().getIdtupIdOrTupleParserRuleCall_3_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__IdtupAssignment_3_1"


    // $ANTLR start "rule__LocalVarDecl__TuptypeAssignment_3_3"
    // InternalFortXTrans.g:12430:1: rule__LocalVarDecl__TuptypeAssignment_3_3 : ( ruleTupleType ) ;
    public final void rule__LocalVarDecl__TuptypeAssignment_3_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12434:1: ( ( ruleTupleType ) )
            // InternalFortXTrans.g:12435:2: ( ruleTupleType )
            {
            // InternalFortXTrans.g:12435:2: ( ruleTupleType )
            // InternalFortXTrans.g:12436:3: ruleTupleType
            {
             before(grammarAccess.getLocalVarDeclAccess().getTuptypeTupleTypeParserRuleCall_3_3_0()); 
            pushFollow(FOLLOW_2);
            ruleTupleType();

            state._fsp--;

             after(grammarAccess.getLocalVarDeclAccess().getTuptypeTupleTypeParserRuleCall_3_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__TuptypeAssignment_3_3"


    // $ANTLR start "rule__LocalVarDecl__InitAssignment_3_5"
    // InternalFortXTrans.g:12445:1: rule__LocalVarDecl__InitAssignment_3_5 : ( ruleExpr ) ;
    public final void rule__LocalVarDecl__InitAssignment_3_5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12449:1: ( ( ruleExpr ) )
            // InternalFortXTrans.g:12450:2: ( ruleExpr )
            {
            // InternalFortXTrans.g:12450:2: ( ruleExpr )
            // InternalFortXTrans.g:12451:3: ruleExpr
            {
             before(grammarAccess.getLocalVarDeclAccess().getInitExprParserRuleCall_3_5_0()); 
            pushFollow(FOLLOW_2);
            ruleExpr();

            state._fsp--;

             after(grammarAccess.getLocalVarDeclAccess().getInitExprParserRuleCall_3_5_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__InitAssignment_3_5"

    // Delegated rules


    protected DFA1 dfa1 = new DFA1(this);
    protected DFA6 dfa6 = new DFA6(this);
    protected DFA15 dfa15 = new DFA15(this);
    protected DFA17 dfa17 = new DFA17(this);
    protected DFA19 dfa19 = new DFA19(this);
    protected DFA20 dfa20 = new DFA20(this);
    protected DFA23 dfa23 = new DFA23(this);
    protected DFA29 dfa29 = new DFA29(this);
    static final String dfa_1s = "\u0132\uffff";
    static final String dfa_2s = "\1\1\u0131\uffff";
    static final String dfa_3s = "\1\5\1\uffff\6\5\1\27\7\5\2\27\2\5\2\27\1\5\2\21\3\uffff\1\5\1\uffff\1\5\2\27\1\uffff\1\4\1\5\2\21\2\5\1\27\3\21\1\4\1\uffff\1\5\1\34\2\5\1\21\1\5\1\27\3\21\1\5\1\6\1\5\1\21\1\5\1\uffff\1\21\2\5\3\uffff\1\5\4\uffff\1\5\1\uffff\1\5\1\34\2\21\1\5\1\4\3\21\2\4\1\5\3\uffff\1\5\4\uffff\1\5\1\uffff\1\4\3\21\1\4\4\21\2\5\2\27\1\6\1\uffff\1\5\1\21\1\5\1\21\2\27\1\4\3\21\1\4\4\21\1\5\1\uffff\1\5\1\6\1\21\1\5\1\uffff\1\5\1\6\3\uffff\1\5\4\uffff\1\5\1\uffff\1\5\3\21\2\4\1\5\1\21\1\5\1\uffff\1\5\1\6\1\21\1\5\1\uffff\1\5\1\6\2\4\3\21\2\4\6\21\1\4\3\21\1\4\1\21\1\5\2\21\2\4\3\21\2\4\3\21\1\5\1\21\1\5\1\21\1\6\1\uffff\1\5\1\21\1\5\1\21\1\6\1\uffff\1\6\1\5\1\21\1\5\1\uffff\1\6\1\5\1\21\1\5\1\uffff\1\5\1\34\1\4\1\5\1\21\1\5\1\21\1\6\1\uffff\1\5\1\21\1\5\1\21\1\6\1\uffff\2\4\3\21\2\4\6\21\2\4\3\21\2\4\2\27\2\4\3\21\2\4\3\21\1\5\1\21\1\5\1\21\1\6\1\uffff\1\5\1\21\1\5\1\21\1\6\1\uffff\1\5\2\21\3\5\1\21\1\5\1\21\2\4\3\21\2\4\3\21\2\4\1\21\2\4\1\5\1\21\1\5\1\21\2\4";
    static final String dfa_4s = "\1\62\1\uffff\1\62\3\52\2\61\1\43\1\61\4\52\1\61\1\25\2\27\1\61\1\25\2\27\1\61\2\27\3\uffff\1\10\1\uffff\1\5\2\27\1\uffff\1\43\1\5\2\27\1\5\1\61\1\43\3\21\1\26\1\uffff\1\5\1\43\2\25\1\26\1\61\1\27\1\21\2\26\1\25\1\10\1\5\1\26\1\5\1\uffff\1\26\2\25\3\uffff\1\10\4\uffff\1\10\1\uffff\1\5\1\43\2\26\1\61\1\4\5\26\1\61\3\uffff\1\10\4\uffff\1\10\1\uffff\1\26\3\21\1\26\3\21\1\26\2\25\2\27\1\10\1\uffff\1\5\1\26\1\5\1\26\2\27\1\26\3\21\1\26\3\21\1\26\1\5\1\uffff\1\5\1\10\1\26\1\5\1\uffff\1\5\1\10\3\uffff\1\10\4\uffff\1\10\1\uffff\1\5\5\26\1\5\1\26\1\5\1\uffff\1\5\1\10\1\26\1\5\1\uffff\1\5\1\10\12\26\3\21\1\26\3\21\2\26\1\5\14\26\1\5\1\26\1\5\1\26\1\10\1\uffff\1\5\1\26\1\5\1\26\1\10\1\uffff\1\10\1\5\1\26\1\5\1\uffff\1\10\1\5\1\26\1\5\1\uffff\1\61\1\43\1\26\1\5\1\26\1\5\1\26\1\10\1\uffff\1\5\1\26\1\5\1\26\1\10\1\uffff\24\26\2\27\12\26\1\5\1\26\1\5\1\26\1\10\1\uffff\1\5\1\26\1\5\1\26\1\10\1\uffff\1\5\2\26\3\5\1\26\1\5\20\26\1\5\1\26\1\5\3\26";
    static final String dfa_5s = "\1\uffff\1\2\27\uffff\3\1\1\uffff\1\1\3\uffff\1\1\13\uffff\1\1\17\uffff\1\1\3\uffff\3\1\1\uffff\4\1\1\uffff\1\1\14\uffff\3\1\1\uffff\4\1\1\uffff\1\1\16\uffff\1\1\20\uffff\1\1\4\uffff\1\1\2\uffff\3\1\1\uffff\4\1\1\uffff\1\1\11\uffff\1\1\4\uffff\1\1\47\uffff\1\1\5\uffff\1\1\4\uffff\1\1\4\uffff\1\1\10\uffff\1\1\5\uffff\1\1\45\uffff\1\1\5\uffff\1\1\36\uffff";
    static final String dfa_6s = "\u0132\uffff}>";
    static final String[] dfa_7s = {
            "\1\6\10\uffff\1\1\6\uffff\1\11\21\uffff\1\2\1\3\1\4\1\5\6\uffff\1\10\1\7",
            "",
            "\1\6\17\uffff\1\11\21\uffff\1\12\1\13\1\14\1\15\6\uffff\1\10\1\7",
            "\1\16\41\uffff\1\12\1\13\1\14\1\15",
            "\1\16\41\uffff\1\12\1\13\1\14\1\15",
            "\1\16\41\uffff\1\12\1\13\1\14\1\15",
            "\1\20\17\uffff\1\22\1\uffff\1\23\13\uffff\1\17\15\uffff\1\21",
            "\1\24\17\uffff\1\26\33\uffff\1\25",
            "\1\23\13\uffff\1\17",
            "\1\27\53\uffff\1\30",
            "\1\16\41\uffff\1\12\1\13\1\14\1\15",
            "\1\16\41\uffff\1\12\1\13\1\14\1\15",
            "\1\16\41\uffff\1\12\1\13\1\14\1\15",
            "\1\16\41\uffff\1\12\1\13\1\14\1\15",
            "\1\20\17\uffff\1\22\33\uffff\1\21",
            "\1\35\1\31\1\32\1\33\14\uffff\1\34",
            "\1\36",
            "\1\36",
            "\1\37\20\uffff\1\41\32\uffff\1\40",
            "\1\42\17\uffff\1\43",
            "\1\23",
            "\1\23",
            "\1\44\53\uffff\1\45",
            "\1\47\4\uffff\1\50\1\46",
            "\1\47\4\uffff\1\50\1\46",
            "",
            "",
            "",
            "\1\54\1\51\1\52\1\53",
            "",
            "\1\55",
            "\1\56",
            "\1\56",
            "",
            "\1\57\27\uffff\1\60\6\uffff\1\61",
            "\1\62",
            "\1\63\4\uffff\1\64\1\46",
            "\1\63\4\uffff\1\64\1\46",
            "\1\65",
            "\1\66\53\uffff\1\67",
            "\1\70\13\uffff\1\17",
            "\1\71",
            "\1\71",
            "\1\71",
            "\1\73\14\uffff\1\74\1\72\3\uffff\1\75",
            "",
            "\1\76",
            "\1\77\6\uffff\1\100",
            "\1\105\1\101\1\102\1\103\14\uffff\1\104",
            "\1\112\1\106\1\107\1\110\14\uffff\1\111",
            "\1\113\4\uffff\1\114",
            "\1\115\53\uffff\1\116",
            "\1\70",
            "\1\117",
            "\1\47\4\uffff\1\50",
            "\1\47\4\uffff\1\50",
            "\1\120\17\uffff\1\43",
            "\1\121\1\122\1\123",
            "\1\124",
            "\1\74\4\uffff\1\75",
            "\1\125",
            "",
            "\1\126\4\uffff\1\41",
            "\1\133\1\127\1\130\1\131\14\uffff\1\132",
            "\1\140\1\134\1\135\1\136\14\uffff\1\137",
            "",
            "",
            "",
            "\1\141\1\142\1\143\1\144",
            "",
            "",
            "",
            "",
            "\1\145\1\146\1\147\1\150",
            "",
            "\1\151",
            "\1\152\6\uffff\1\153",
            "\1\63\4\uffff\1\64",
            "\1\63\4\uffff\1\64",
            "\1\154\53\uffff\1\155",
            "\1\57",
            "\1\156\4\uffff\1\157",
            "\1\156\4\uffff\1\157",
            "\1\156\4\uffff\1\157",
            "\1\161\14\uffff\1\74\1\160\3\uffff\1\75",
            "\1\163\14\uffff\1\74\1\162\3\uffff\1\75",
            "\1\164\53\uffff\1\165",
            "",
            "",
            "",
            "\1\166\1\167\1\170\1\171",
            "",
            "",
            "",
            "",
            "\1\172\1\173\1\174\1\175",
            "",
            "\1\176\14\uffff\1\177\1\u0081\3\uffff\1\u0080",
            "\1\u0082",
            "\1\u0082",
            "\1\u0082",
            "\1\u0083\14\uffff\1\u0084\1\u0086\3\uffff\1\u0085",
            "\1\u0087",
            "\1\u0087",
            "\1\u0087",
            "\1\113\4\uffff\1\114",
            "\1\u008c\1\u0088\1\u0089\1\u008a\14\uffff\1\u008b",
            "\1\u0091\1\u008d\1\u008e\1\u008f\14\uffff\1\u0090",
            "\1\u0092",
            "\1\u0092",
            "\1\u0093\1\u0094\1\u0095",
            "",
            "\1\u0096",
            "\1\74\4\uffff\1\75",
            "\1\u0097",
            "\1\74\4\uffff\1\75",
            "\1\u0098",
            "\1\u0098",
            "\1\u0099\14\uffff\1\u009a\1\u009c\3\uffff\1\u009b",
            "\1\u009d",
            "\1\u009d",
            "\1\u009d",
            "\1\u009e\14\uffff\1\u009f\1\u00a1\3\uffff\1\u00a0",
            "\1\u00a2",
            "\1\u00a2",
            "\1\u00a2",
            "\1\177\4\uffff\1\u0080",
            "\1\u00a3",
            "",
            "\1\u00a4",
            "\1\u00a5\1\u00a6\1\u00a7",
            "\1\u0084\4\uffff\1\u0085",
            "\1\u00a8",
            "",
            "\1\u00a9",
            "\1\u00aa\1\u00ab\1\u00ac",
            "",
            "",
            "",
            "\1\u00b0\1\u00ad\1\u00ae\1\u00af",
            "",
            "",
            "",
            "",
            "\1\u00b4\1\u00b1\1\u00b2\1\u00b3",
            "",
            "\1\u00b5",
            "\1\156\4\uffff\1\157",
            "\1\156\4\uffff\1\157",
            "\1\156\4\uffff\1\157",
            "\1\161\14\uffff\1\74\1\160\3\uffff\1\75",
            "\1\u00b7\14\uffff\1\74\1\u00b6\3\uffff\1\75",
            "\1\u00b8",
            "\1\u009a\4\uffff\1\u009b",
            "\1\u00b9",
            "",
            "\1\u00ba",
            "\1\u00bb\1\u00bc\1\u00bd",
            "\1\u009f\4\uffff\1\u00a0",
            "\1\u00be",
            "",
            "\1\u00bf",
            "\1\u00c0\1\u00c1\1\u00c2",
            "\1\u00c4\14\uffff\1\177\1\u00c3\3\uffff\1\u0080",
            "\1\u00c6\14\uffff\1\177\1\u00c5\3\uffff\1\u0080",
            "\1\u00c7\4\uffff\1\u00c8",
            "\1\u00c7\4\uffff\1\u00c8",
            "\1\u00c7\4\uffff\1\u00c8",
            "\1\u00ca\14\uffff\1\u0084\1\u00c9\3\uffff\1\u0085",
            "\1\u00cc\14\uffff\1\u0084\1\u00cb\3\uffff\1\u0085",
            "\1\u00cd\4\uffff\1\u00ce",
            "\1\u00cd\4\uffff\1\u00ce",
            "\1\u00cd\4\uffff\1\u00ce",
            "\1\u00cf",
            "\1\u00cf",
            "\1\u00cf",
            "\1\u00d1\14\uffff\1\u00d2\1\u00d0\3\uffff\1\u00d3",
            "\1\u00d4",
            "\1\u00d4",
            "\1\u00d4",
            "\1\u00d6\14\uffff\1\u00d7\1\u00d5\3\uffff\1\u00d8",
            "\1\u00d9\4\uffff\1\u00da",
            "\1\u00db",
            "\1\74\4\uffff\1\75",
            "\1\126\4\uffff\1\41",
            "\1\u00dd\14\uffff\1\u009a\1\u00dc\3\uffff\1\u009b",
            "\1\u00df\14\uffff\1\u009a\1\u00de\3\uffff\1\u009b",
            "\1\u00e0\4\uffff\1\u00e1",
            "\1\u00e0\4\uffff\1\u00e1",
            "\1\u00e0\4\uffff\1\u00e1",
            "\1\u00e3\14\uffff\1\u009f\1\u00e2\3\uffff\1\u00a0",
            "\1\u00e5\14\uffff\1\u009f\1\u00e4\3\uffff\1\u00a0",
            "\1\u00e6\4\uffff\1\u00e7",
            "\1\u00e6\4\uffff\1\u00e7",
            "\1\u00e6\4\uffff\1\u00e7",
            "\1\u00e8",
            "\1\177\4\uffff\1\u0080",
            "\1\u00e9",
            "\1\177\4\uffff\1\u0080",
            "\1\u00ea\1\u00eb\1\u00ec",
            "",
            "\1\u00ed",
            "\1\u0084\4\uffff\1\u0085",
            "\1\u00ee",
            "\1\u0084\4\uffff\1\u0085",
            "\1\u00ef\1\u00f0\1\u00f1",
            "",
            "\1\u00f2\1\u00f3\1\u00f4",
            "\1\u00f5",
            "\1\u00d2\4\uffff\1\u00d3",
            "\1\u00f6",
            "",
            "\1\u00f7\1\u00f8\1\u00f9",
            "\1\u00fa",
            "\1\u00d7\4\uffff\1\u00d8",
            "\1\u00fb",
            "",
            "\1\u00fc\53\uffff\1\u00fd",
            "\1\60\6\uffff\1\61",
            "\1\u00b7\14\uffff\1\74\1\u00b6\3\uffff\1\75",
            "\1\u00fe",
            "\1\u009a\4\uffff\1\u009b",
            "\1\u00ff",
            "\1\u009a\4\uffff\1\u009b",
            "\1\u0100\1\u0101\1\u0102",
            "",
            "\1\u0103",
            "\1\u009f\4\uffff\1\u00a0",
            "\1\u0104",
            "\1\u009f\4\uffff\1\u00a0",
            "\1\u0105\1\u0106\1\u0107",
            "",
            "\1\u0109\14\uffff\1\177\1\u0108\3\uffff\1\u0080",
            "\1\u00c6\14\uffff\1\177\1\u00c5\3\uffff\1\u0080",
            "\1\u00c7\4\uffff\1\u00c8",
            "\1\u00c7\4\uffff\1\u00c8",
            "\1\u00c7\4\uffff\1\u00c8",
            "\1\u010b\14\uffff\1\u0084\1\u010a\3\uffff\1\u0085",
            "\1\u00cc\14\uffff\1\u0084\1\u00cb\3\uffff\1\u0085",
            "\1\u00cd\4\uffff\1\u00ce",
            "\1\u00cd\4\uffff\1\u00ce",
            "\1\u00cd\4\uffff\1\u00ce",
            "\1\u010c\4\uffff\1\u010d",
            "\1\u010c\4\uffff\1\u010d",
            "\1\u010c\4\uffff\1\u010d",
            "\1\u010f\14\uffff\1\u00d2\1\u010e\3\uffff\1\u00d3",
            "\1\u0111\14\uffff\1\u00d2\1\u0110\3\uffff\1\u00d3",
            "\1\u0112\4\uffff\1\u0113",
            "\1\u0112\4\uffff\1\u0113",
            "\1\u0112\4\uffff\1\u0113",
            "\1\u0115\14\uffff\1\u00d7\1\u0114\3\uffff\1\u00d8",
            "\1\u0116\14\uffff\1\u00d7\1\u0117\3\uffff\1\u00d8",
            "\1\u0118",
            "\1\u0118",
            "\1\u011a\14\uffff\1\u009a\1\u0119\3\uffff\1\u009b",
            "\1\u00df\14\uffff\1\u009a\1\u00de\3\uffff\1\u009b",
            "\1\u00e0\4\uffff\1\u00e1",
            "\1\u00e0\4\uffff\1\u00e1",
            "\1\u00e0\4\uffff\1\u00e1",
            "\1\u011c\14\uffff\1\u009f\1\u011b\3\uffff\1\u00a0",
            "\1\u00e5\14\uffff\1\u009f\1\u00e4\3\uffff\1\u00a0",
            "\1\u00e6\4\uffff\1\u00e7",
            "\1\u00e6\4\uffff\1\u00e7",
            "\1\u00e6\4\uffff\1\u00e7",
            "\1\u011d",
            "\1\177\4\uffff\1\u0080",
            "\1\u011e",
            "\1\u0084\4\uffff\1\u0085",
            "\1\u011f\1\u0120\1\u0121",
            "",
            "\1\u0122",
            "\1\u00d2\4\uffff\1\u00d3",
            "\1\u0123",
            "\1\u00d2\4\uffff\1\u00d3",
            "\1\u0124\1\u0125\1\u0126",
            "",
            "\1\u0127",
            "\1\u00d7\4\uffff\1\u00d8",
            "\1\u00d7\4\uffff\1\u00d8",
            "\1\u0128",
            "\1\u0129",
            "\1\u012a",
            "\1\u009a\4\uffff\1\u009b",
            "\1\u012b",
            "\1\u009f\4\uffff\1\u00a0",
            "\1\u0109\14\uffff\1\177\1\u0108\3\uffff\1\u0080",
            "\1\u010b\14\uffff\1\u0084\1\u010a\3\uffff\1\u0085",
            "\1\u010c\4\uffff\1\u010d",
            "\1\u010c\4\uffff\1\u010d",
            "\1\u010c\4\uffff\1\u010d",
            "\1\u010f\14\uffff\1\u00d2\1\u010e\3\uffff\1\u00d3",
            "\1\u012d\14\uffff\1\u00d2\1\u012c\3\uffff\1\u00d3",
            "\1\u0112\4\uffff\1\u0113",
            "\1\u0112\4\uffff\1\u0113",
            "\1\u0112\4\uffff\1\u0113",
            "\1\u0115\14\uffff\1\u00d7\1\u0114\3\uffff\1\u00d8",
            "\1\u012f\14\uffff\1\u00d7\1\u012e\3\uffff\1\u00d8",
            "\1\u00d9\4\uffff\1\u00da",
            "\1\u011a\14\uffff\1\u009a\1\u0119\3\uffff\1\u009b",
            "\1\u011c\14\uffff\1\u009f\1\u011b\3\uffff\1\u00a0",
            "\1\u0130",
            "\1\u00d2\4\uffff\1\u00d3",
            "\1\u0131",
            "\1\u00d7\4\uffff\1\u00d8",
            "\1\u012d\14\uffff\1\u00d2\1\u012c\3\uffff\1\u00d3",
            "\1\u012f\14\uffff\1\u00d7\1\u012e\3\uffff\1\u00d8"
    };

    static final short[] dfa_1 = DFA.unpackEncodedString(dfa_1s);
    static final short[] dfa_2 = DFA.unpackEncodedString(dfa_2s);
    static final char[] dfa_3 = DFA.unpackEncodedStringToUnsignedChars(dfa_3s);
    static final char[] dfa_4 = DFA.unpackEncodedStringToUnsignedChars(dfa_4s);
    static final short[] dfa_5 = DFA.unpackEncodedString(dfa_5s);
    static final short[] dfa_6 = DFA.unpackEncodedString(dfa_6s);
    static final short[][] dfa_7 = unpackEncodedStringArray(dfa_7s);

    class DFA1 extends DFA {

        public DFA1(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 1;
            this.eot = dfa_1;
            this.eof = dfa_2;
            this.min = dfa_3;
            this.max = dfa_4;
            this.accept = dfa_5;
            this.special = dfa_6;
            this.transition = dfa_7;
        }
        public String getDescription() {
            return "()* loopback of 425:4: ( rule__Decls__DeclsAssignment )*";
        }
    }
    static final String dfa_8s = "\15\uffff";
    static final String dfa_9s = "\1\uffff\2\3\4\uffff\1\3\3\uffff\2\3";
    static final String dfa_10s = "\1\5\1\4\1\16\1\uffff\1\5\1\23\2\4\2\uffff\1\5\1\16\1\4";
    static final String dfa_11s = "\1\5\2\45\1\uffff\2\23\1\5\1\45\2\uffff\1\23\2\45";
    static final String dfa_12s = "\3\uffff\1\3\4\uffff\1\1\1\2\3\uffff";
    static final String dfa_13s = "\15\uffff}>";
    static final String[] dfa_14s = {
            "\1\1",
            "\1\2\11\uffff\1\3\3\uffff\1\4\1\uffff\1\3\17\uffff\2\3",
            "\1\3\3\uffff\1\5\1\uffff\1\3\17\uffff\2\3",
            "",
            "\1\7\15\uffff\1\6",
            "\1\6",
            "\1\10\1\11",
            "\1\13\11\uffff\1\3\3\uffff\1\12\1\uffff\1\3\17\uffff\2\3",
            "",
            "",
            "\1\14\15\uffff\1\6",
            "\1\3\3\uffff\1\5\1\uffff\1\3\17\uffff\2\3",
            "\1\13\11\uffff\1\3\3\uffff\1\12\1\uffff\1\3\17\uffff\2\3"
    };

    static final short[] dfa_8 = DFA.unpackEncodedString(dfa_8s);
    static final short[] dfa_9 = DFA.unpackEncodedString(dfa_9s);
    static final char[] dfa_10 = DFA.unpackEncodedStringToUnsignedChars(dfa_10s);
    static final char[] dfa_11 = DFA.unpackEncodedStringToUnsignedChars(dfa_11s);
    static final short[] dfa_12 = DFA.unpackEncodedString(dfa_12s);
    static final short[] dfa_13 = DFA.unpackEncodedString(dfa_13s);
    static final short[][] dfa_14 = unpackEncodedStringArray(dfa_14s);

    class DFA6 extends DFA {

        public DFA6(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 6;
            this.eot = dfa_8;
            this.eof = dfa_9;
            this.min = dfa_10;
            this.max = dfa_11;
            this.accept = dfa_12;
            this.special = dfa_13;
            this.transition = dfa_14;
        }
        public String getDescription() {
            return "1554:1: rule__ImportedNames__Alternatives : ( ( ( rule__ImportedNames__Group_0__0 ) ) | ( ( rule__ImportedNames__Group_1__0 ) ) | ( ( rule__ImportedNames__Group_2__0 ) ) );";
        }
    }
    static final String dfa_15s = "\12\uffff";
    static final String dfa_16s = "\4\uffff\1\5\3\uffff\1\5\1\uffff";
    static final String dfa_17s = "\1\5\1\uffff\1\5\1\uffff\1\4\1\uffff\1\4\2\5\1\4";
    static final String dfa_18s = "\1\62\1\uffff\1\61\1\uffff\1\62\1\uffff\1\34\1\61\1\62\1\34";
    static final String dfa_19s = "\1\uffff\1\1\1\uffff\1\2\1\uffff\1\3\4\uffff";
    static final String dfa_20s = "\12\uffff}>";
    static final String[] dfa_21s = {
            "\1\4\3\5\14\uffff\1\2\14\uffff\1\1\6\uffff\1\1\1\uffff\4\1\1\uffff\1\1\2\3",
            "",
            "\1\6\3\5\14\uffff\1\5\14\uffff\1\1\6\uffff\1\1\1\uffff\4\1\1\uffff\1\1\1\3",
            "",
            "\5\5\5\uffff\1\5\2\uffff\2\5\1\uffff\3\5\1\3\5\5\1\uffff\2\5\1\uffff\2\5\1\3\3\uffff\10\5\1\uffff\3\5",
            "",
            "\1\5\14\uffff\1\7\1\5\1\uffff\2\5\1\10\1\3\5\5",
            "\1\11\3\5\14\uffff\1\5\33\uffff\1\3",
            "\4\5\5\uffff\1\5\2\uffff\1\5\2\uffff\3\5\1\3\5\5\1\uffff\2\5\1\uffff\2\5\1\3\3\uffff\10\5\1\uffff\3\5",
            "\1\5\14\uffff\1\7\1\5\1\uffff\2\5\1\10\1\uffff\5\5"
    };

    static final short[] dfa_15 = DFA.unpackEncodedString(dfa_15s);
    static final short[] dfa_16 = DFA.unpackEncodedString(dfa_16s);
    static final char[] dfa_17 = DFA.unpackEncodedStringToUnsignedChars(dfa_17s);
    static final char[] dfa_18 = DFA.unpackEncodedStringToUnsignedChars(dfa_18s);
    static final short[] dfa_19 = DFA.unpackEncodedString(dfa_19s);
    static final short[] dfa_20 = DFA.unpackEncodedString(dfa_20s);
    static final short[][] dfa_21 = unpackEncodedStringArray(dfa_21s);

    class DFA15 extends DFA {

        public DFA15(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 15;
            this.eot = dfa_15;
            this.eof = dfa_16;
            this.min = dfa_17;
            this.max = dfa_18;
            this.accept = dfa_19;
            this.special = dfa_20;
            this.transition = dfa_21;
        }
        public String getDescription() {
            return "1761:1: rule__Stmnts__Alternatives : ( ( ( rule__Stmnts__FrontAssignment_0 ) ) | ( ( rule__Stmnts__LocVarAssignment_1 ) ) | ( ( rule__Stmnts__ExpAssignment_2 ) ) );";
        }
    }
    static final String dfa_22s = "\41\uffff";
    static final String dfa_23s = "\1\5\1\uffff\1\5\1\uffff\1\4\3\21\1\uffff\1\5\1\21\1\5\1\uffff\1\5\2\4\3\21\1\5\1\21\1\5\1\21\1\uffff\1\5\2\4\3\21\1\5\1\21\1\4";
    static final String dfa_24s = "\1\25\1\uffff\1\25\1\uffff\1\34\3\33\1\uffff\1\5\1\34\1\25\1\uffff\1\25\2\34\3\33\1\5\1\34\1\5\1\34\1\uffff\1\25\2\34\3\33\1\5\2\34";
    static final String dfa_25s = "\1\uffff\1\1\1\uffff\1\2\4\uffff\1\3\3\uffff\1\1\12\uffff\1\2\11\uffff";
    static final String dfa_26s = "\41\uffff}>";
    static final String[] dfa_27s = {
            "\1\1\3\3\14\uffff\1\2",
            "",
            "\1\4\1\5\1\6\1\7\14\uffff\1\10",
            "",
            "\1\12\14\uffff\1\13\1\11\1\uffff\2\10\1\14\1\uffff\5\10",
            "\1\15\2\uffff\1\10\1\uffff\1\10\1\uffff\4\10",
            "\1\15\2\uffff\1\10\1\uffff\1\10\1\uffff\4\10",
            "\1\15\2\uffff\1\10\1\uffff\1\10\1\uffff\4\10",
            "",
            "\1\16",
            "\1\13\2\uffff\2\10\1\14\1\uffff\5\10",
            "\1\17\3\10\14\uffff\1\10",
            "",
            "\1\10\1\20\1\21\1\22\14\uffff\1\10",
            "\1\24\14\uffff\1\13\1\23\1\uffff\2\10\1\14\1\uffff\5\10",
            "\1\26\14\uffff\1\13\1\25\1\uffff\2\10\1\14\1\uffff\5\10",
            "\1\30\2\uffff\1\10\1\uffff\1\27\1\uffff\4\10",
            "\1\30\2\uffff\1\10\1\uffff\1\27\1\uffff\4\10",
            "\1\30\2\uffff\1\10\1\uffff\1\27\1\uffff\4\10",
            "\1\31",
            "\1\13\2\uffff\2\10\1\14\1\uffff\5\10",
            "\1\32",
            "\1\13\2\uffff\2\10\1\14\1\uffff\5\10",
            "",
            "\1\10\1\33\1\34\1\35\14\uffff\1\10",
            "\1\24\14\uffff\1\13\1\23\1\uffff\2\10\1\14\1\uffff\5\10",
            "\1\37\14\uffff\1\13\1\36\1\uffff\2\10\1\14\1\uffff\5\10",
            "\1\30\2\uffff\1\10\1\uffff\1\27\1\uffff\4\10",
            "\1\30\2\uffff\1\10\1\uffff\1\27\1\uffff\4\10",
            "\1\30\2\uffff\1\10\1\uffff\1\27\1\uffff\4\10",
            "\1\40",
            "\1\13\2\uffff\2\10\1\14\1\uffff\5\10",
            "\1\37\14\uffff\1\13\1\36\1\uffff\2\10\1\14\1\uffff\5\10"
    };

    static final short[] dfa_22 = DFA.unpackEncodedString(dfa_22s);
    static final char[] dfa_23 = DFA.unpackEncodedStringToUnsignedChars(dfa_23s);
    static final char[] dfa_24 = DFA.unpackEncodedStringToUnsignedChars(dfa_24s);
    static final short[] dfa_25 = DFA.unpackEncodedString(dfa_25s);
    static final short[] dfa_26 = DFA.unpackEncodedString(dfa_26s);
    static final short[][] dfa_27 = unpackEncodedStringArray(dfa_27s);

    class DFA17 extends DFA {

        public DFA17(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 17;
            this.eot = dfa_22;
            this.eof = dfa_22;
            this.min = dfa_23;
            this.max = dfa_24;
            this.accept = dfa_25;
            this.special = dfa_26;
            this.transition = dfa_27;
        }
        public String getDescription() {
            return "1809:1: rule__Primary__Alternatives : ( ( ( rule__Primary__Group_0__0 ) ) | ( ruleLiteralTuple ) | ( ( rule__Primary__Group_2__0 ) ) );";
        }
    }
    static final String dfa_28s = "\1\5\2\40\2\5\2\21\2\uffff\1\5\1\40\2\21";
    static final String dfa_29s = "\1\61\2\40\1\61\1\57\2\26\2\uffff\1\61\1\40\2\26";
    static final String dfa_30s = "\7\uffff\1\1\1\2\4\uffff";
    static final String[] dfa_31s = {
            "\1\1\17\uffff\1\3\33\uffff\1\2",
            "\1\4",
            "\1\4",
            "\1\5\53\uffff\1\6",
            "\4\7\14\uffff\1\7\31\uffff\1\10",
            "\1\11\4\uffff\1\12",
            "\1\11\4\uffff\1\12",
            "",
            "",
            "\1\13\53\uffff\1\14",
            "\1\4",
            "\1\11\4\uffff\1\12",
            "\1\11\4\uffff\1\12"
    };
    static final char[] dfa_28 = DFA.unpackEncodedStringToUnsignedChars(dfa_28s);
    static final char[] dfa_29 = DFA.unpackEncodedStringToUnsignedChars(dfa_29s);
    static final short[] dfa_30 = DFA.unpackEncodedString(dfa_30s);
    static final short[][] dfa_31 = unpackEncodedStringArray(dfa_31s);

    class DFA19 extends DFA {

        public DFA19(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 19;
            this.eot = dfa_8;
            this.eof = dfa_8;
            this.min = dfa_28;
            this.max = dfa_29;
            this.accept = dfa_30;
            this.special = dfa_13;
            this.transition = dfa_31;
        }
        public String getDescription() {
            return "1875:1: rule__Binding__Alternatives : ( ( ( rule__Binding__Group_0__0 ) ) | ( ( rule__Binding__Group_1__0 ) ) );";
        }
    }
    static final String dfa_32s = "\11\uffff";
    static final String dfa_33s = "\1\uffff\1\4\5\uffff\1\4\1\uffff";
    static final String dfa_34s = "\1\5\1\4\1\uffff\1\5\1\uffff\1\4\1\5\1\21\1\4";
    static final String dfa_35s = "\1\61\1\60\1\uffff\1\61\1\uffff\1\34\1\61\1\60\1\34";
    static final String dfa_36s = "\2\uffff\1\1\1\uffff\1\2\4\uffff";
    static final String dfa_37s = "\11\uffff}>";
    static final String[] dfa_38s = {
            "\1\1\3\4\14\uffff\1\3\33\uffff\1\2",
            "\1\4\14\uffff\2\4\1\uffff\2\4\2\uffff\5\4\3\uffff\1\2\1\uffff\1\4\6\uffff\1\4\6\uffff\1\4",
            "",
            "\1\5\3\4\14\uffff\1\4\33\uffff\1\2",
            "",
            "\1\4\14\uffff\1\6\1\4\1\uffff\2\4\1\7\1\uffff\5\4",
            "\1\10\3\4\14\uffff\1\4\33\uffff\1\2",
            "\1\4\2\uffff\2\4\2\uffff\5\4\3\uffff\1\2\1\uffff\1\4\6\uffff\1\4\6\uffff\1\4",
            "\1\4\14\uffff\1\6\1\4\1\uffff\2\4\1\7\1\uffff\5\4"
    };

    static final short[] dfa_32 = DFA.unpackEncodedString(dfa_32s);
    static final short[] dfa_33 = DFA.unpackEncodedString(dfa_33s);
    static final char[] dfa_34 = DFA.unpackEncodedStringToUnsignedChars(dfa_34s);
    static final char[] dfa_35 = DFA.unpackEncodedStringToUnsignedChars(dfa_35s);
    static final short[] dfa_36 = DFA.unpackEncodedString(dfa_36s);
    static final short[] dfa_37 = DFA.unpackEncodedString(dfa_37s);
    static final short[][] dfa_38 = unpackEncodedStringArray(dfa_38s);

    class DFA20 extends DFA {

        public DFA20(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 20;
            this.eot = dfa_32;
            this.eof = dfa_33;
            this.min = dfa_34;
            this.max = dfa_35;
            this.accept = dfa_36;
            this.special = dfa_37;
            this.transition = dfa_38;
        }
        public String getDescription() {
            return "1896:1: rule__GenClause__Alternatives : ( ( ( rule__GenClause__BindingAssignment_0 ) ) | ( ( rule__GenClause__ExprAssignment_1 ) ) );";
        }
    }
    static final String dfa_39s = "\34\uffff";
    static final String dfa_40s = "\3\5\2\27\1\5\2\27\2\5\1\uffff\4\21\1\4\1\uffff\1\5\1\27\1\uffff\1\5\1\27\1\uffff\2\21\1\5\2\21";
    static final String dfa_41s = "\2\62\1\61\2\43\1\61\2\27\1\61\1\25\1\uffff\4\27\1\43\1\uffff\1\61\1\43\1\uffff\1\61\1\27\1\uffff\2\26\1\25\2\26";
    static final String dfa_42s = "\12\uffff\1\2\5\uffff\1\4\2\uffff\1\1\2\uffff\1\3\5\uffff";
    static final String dfa_43s = "\34\uffff}>";
    static final String[] dfa_44s = {
            "\1\3\17\uffff\1\5\21\uffff\1\1\11\uffff\1\4\1\2",
            "\1\3\17\uffff\1\5\33\uffff\1\4\1\2",
            "\1\6\17\uffff\1\10\33\uffff\1\7",
            "\1\11\13\uffff\1\12",
            "\1\11\13\uffff\1\12",
            "\1\13\53\uffff\1\14",
            "\1\11",
            "\1\11",
            "\1\15\53\uffff\1\16",
            "\1\17\17\uffff\1\20",
            "",
            "\1\21\4\uffff\1\22\1\23",
            "\1\21\4\uffff\1\22\1\23",
            "\1\24\4\uffff\1\25\1\23",
            "\1\24\4\uffff\1\25\1\23",
            "\1\26\27\uffff\1\23\6\uffff\1\23",
            "",
            "\1\27\53\uffff\1\30",
            "\1\31\13\uffff\1\12",
            "",
            "\1\32\53\uffff\1\33",
            "\1\31",
            "",
            "\1\21\4\uffff\1\22",
            "\1\21\4\uffff\1\22",
            "\1\26\17\uffff\1\20",
            "\1\24\4\uffff\1\25",
            "\1\24\4\uffff\1\25"
    };

    static final short[] dfa_39 = DFA.unpackEncodedString(dfa_39s);
    static final char[] dfa_40 = DFA.unpackEncodedStringToUnsignedChars(dfa_40s);
    static final char[] dfa_41 = DFA.unpackEncodedStringToUnsignedChars(dfa_41s);
    static final short[] dfa_42 = DFA.unpackEncodedString(dfa_42s);
    static final short[] dfa_43 = DFA.unpackEncodedString(dfa_43s);
    static final short[][] dfa_44 = unpackEncodedStringArray(dfa_44s);

    class DFA23 extends DFA {

        public DFA23(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 23;
            this.eot = dfa_39;
            this.eof = dfa_39;
            this.min = dfa_40;
            this.max = dfa_41;
            this.accept = dfa_42;
            this.special = dfa_43;
            this.transition = dfa_44;
        }
        public String getDescription() {
            return "1959:1: rule__FieldDecl__Alternatives : ( ( ( rule__FieldDecl__Group_0__0 ) ) | ( ( rule__FieldDecl__Group_1__0 ) ) | ( ( rule__FieldDecl__Group_2__0 ) ) | ( ( rule__FieldDecl__Group_3__0 ) ) );";
        }
    }
    static final String dfa_45s = "\33\uffff";
    static final String dfa_46s = "\2\5\2\27\1\5\2\27\1\5\1\uffff\1\5\4\21\1\4\1\uffff\1\5\1\27\1\uffff\1\5\1\27\1\uffff\2\21\1\5\2\21";
    static final String dfa_47s = "\1\62\1\61\2\43\1\61\2\27\1\61\1\uffff\1\25\4\27\1\43\1\uffff\1\61\1\43\1\uffff\1\61\1\27\1\uffff\2\26\1\25\2\26";
    static final String dfa_48s = "\10\uffff\1\2\6\uffff\1\4\2\uffff\1\1\2\uffff\1\3\5\uffff";
    static final String dfa_49s = "\33\uffff}>";
    static final String[] dfa_50s = {
            "\1\2\17\uffff\1\4\33\uffff\1\3\1\1",
            "\1\5\17\uffff\1\7\33\uffff\1\6",
            "\1\11\13\uffff\1\10",
            "\1\11\13\uffff\1\10",
            "\1\12\53\uffff\1\13",
            "\1\11",
            "\1\11",
            "\1\14\53\uffff\1\15",
            "",
            "\1\16\17\uffff\1\17",
            "\1\20\4\uffff\1\21\1\22",
            "\1\20\4\uffff\1\21\1\22",
            "\1\23\4\uffff\1\24\1\22",
            "\1\23\4\uffff\1\24\1\22",
            "\1\25\36\uffff\1\22",
            "",
            "\1\26\53\uffff\1\27",
            "\1\30\13\uffff\1\10",
            "",
            "\1\31\53\uffff\1\32",
            "\1\30",
            "",
            "\1\20\4\uffff\1\21",
            "\1\20\4\uffff\1\21",
            "\1\25\17\uffff\1\17",
            "\1\23\4\uffff\1\24",
            "\1\23\4\uffff\1\24"
    };

    static final short[] dfa_45 = DFA.unpackEncodedString(dfa_45s);
    static final char[] dfa_46 = DFA.unpackEncodedStringToUnsignedChars(dfa_46s);
    static final char[] dfa_47 = DFA.unpackEncodedStringToUnsignedChars(dfa_47s);
    static final short[] dfa_48 = DFA.unpackEncodedString(dfa_48s);
    static final short[] dfa_49 = DFA.unpackEncodedString(dfa_49s);
    static final short[][] dfa_50 = unpackEncodedStringArray(dfa_50s);

    class DFA29 extends DFA {

        public DFA29(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 29;
            this.eot = dfa_45;
            this.eof = dfa_45;
            this.min = dfa_46;
            this.max = dfa_47;
            this.accept = dfa_48;
            this.special = dfa_49;
            this.transition = dfa_50;
        }
        public String getDescription() {
            return "2109:1: rule__LocalVarDecl__Alternatives : ( ( ( rule__LocalVarDecl__Group_0__0 ) ) | ( ( rule__LocalVarDecl__Group_1__0 ) ) | ( ( rule__LocalVarDecl__Group_2__0 ) ) | ( ( rule__LocalVarDecl__Group_3__0 ) ) );";
        }
    }
 

    public static final BitSet FOLLOW_1 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_2 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_3 = new BitSet(new long[]{0x0006078000200022L});
    public static final BitSet FOLLOW_4 = new BitSet(new long[]{0x0000078000000002L});
    public static final BitSet FOLLOW_5 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_6 = new BitSet(new long[]{0x0000003000000000L});
    public static final BitSet FOLLOW_7 = new BitSet(new long[]{0x0000001000000002L});
    public static final BitSet FOLLOW_8 = new BitSet(new long[]{0x0006078000204020L});
    public static final BitSet FOLLOW_9 = new BitSet(new long[]{0x0000003000000002L});
    public static final BitSet FOLLOW_10 = new BitSet(new long[]{0x0000001000004000L});
    public static final BitSet FOLLOW_11 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_12 = new BitSet(new long[]{0x0000000000080020L});
    public static final BitSet FOLLOW_13 = new BitSet(new long[]{0x0000000000080000L});
    public static final BitSet FOLLOW_14 = new BitSet(new long[]{0x0000000000030000L});
    public static final BitSet FOLLOW_15 = new BitSet(new long[]{0x0000000000020002L});
    public static final BitSet FOLLOW_16 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_17 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_18 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_19 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_20 = new BitSet(new long[]{0x0000000000100000L});
    public static final BitSet FOLLOW_21 = new BitSet(new long[]{0x0000000000040002L});
    public static final BitSet FOLLOW_22 = new BitSet(new long[]{0x0000000000420000L});
    public static final BitSet FOLLOW_23 = new BitSet(new long[]{0x0002000000400020L});
    public static final BitSet FOLLOW_24 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_25 = new BitSet(new long[]{0x0002000000000020L});
    public static final BitSet FOLLOW_26 = new BitSet(new long[]{0x0000000000800000L});
    public static final BitSet FOLLOW_27 = new BitSet(new long[]{0x0000000000200000L});
    public static final BitSet FOLLOW_28 = new BitSet(new long[]{0x0000000000400000L});
    public static final BitSet FOLLOW_29 = new BitSet(new long[]{0x0000078000000020L});
    public static final BitSet FOLLOW_30 = new BitSet(new long[]{0x0002000000200020L});
    public static final BitSet FOLLOW_31 = new BitSet(new long[]{0x0000000800800000L});
    public static final BitSet FOLLOW_32 = new BitSet(new long[]{0x00077A84002001E0L});
    public static final BitSet FOLLOW_33 = new BitSet(new long[]{0x00017A0400000000L});
    public static final BitSet FOLLOW_34 = new BitSet(new long[]{0x0000000000100002L});
    public static final BitSet FOLLOW_35 = new BitSet(new long[]{0x0000000001000000L});
    public static final BitSet FOLLOW_36 = new BitSet(new long[]{0x0000000001000002L});
    public static final BitSet FOLLOW_37 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_38 = new BitSet(new long[]{0x0000000002000002L});
    public static final BitSet FOLLOW_39 = new BitSet(new long[]{0x0000000004000000L});
    public static final BitSet FOLLOW_40 = new BitSet(new long[]{0x0000000004000002L});
    public static final BitSet FOLLOW_41 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_42 = new BitSet(new long[]{0x0000000008000002L});
    public static final BitSet FOLLOW_43 = new BitSet(new long[]{0x0000000010200000L});
    public static final BitSet FOLLOW_44 = new BitSet(new long[]{0x0000000010000000L});
    public static final BitSet FOLLOW_45 = new BitSet(new long[]{0x0001020400000000L});
    public static final BitSet FOLLOW_46 = new BitSet(new long[]{0x0002008000200020L});
    public static final BitSet FOLLOW_47 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_48 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_49 = new BitSet(new long[]{0x00000000C0004000L});
    public static final BitSet FOLLOW_50 = new BitSet(new long[]{0x0000000040000000L});
    public static final BitSet FOLLOW_51 = new BitSet(new long[]{0x0000000040000002L});
    public static final BitSet FOLLOW_52 = new BitSet(new long[]{0x0000000100000000L});
    public static final BitSet FOLLOW_53 = new BitSet(new long[]{0x0000800000000000L});
    public static final BitSet FOLLOW_54 = new BitSet(new long[]{0x00077A84002001E2L});
    public static final BitSet FOLLOW_55 = new BitSet(new long[]{0x0000000200004000L});
    public static final BitSet FOLLOW_56 = new BitSet(new long[]{0x0000000200000002L});
    public static final BitSet FOLLOW_57 = new BitSet(new long[]{0x0006008000200020L});
    public static final BitSet FOLLOW_58 = new BitSet(new long[]{0x0000000810000000L});
    public static final BitSet FOLLOW_59 = new BitSet(new long[]{0x0000000800000000L});
    public static final BitSet FOLLOW_60 = new BitSet(new long[]{0x00000000002001E0L});
    public static final BitSet FOLLOW_61 = new BitSet(new long[]{0x0006078000200020L});
    public static final BitSet FOLLOW_62 = new BitSet(new long[]{0x00000000000001C0L});

}