package srf.transpiler.fortxtrans.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import srf.transpiler.fortxtrans.services.FortXTransGrammarAccess;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;

@SuppressWarnings("all")
public class InternalFortXTransParser extends AbstractInternalContentAssistParser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "RULE_DOTS", "RULE_ID", "RULE_INT", "RULE_FLOAT", "RULE_STRING", "RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS", "RULE_ANY_OTHER", "'==='", "'=/='", "'EQ'", "'NE'", "'>='", "'<='", "'>'", "'<'", "'LT'", "'GT'", "'LE'", "'GE'", "'true'", "'false'", "'component'", "'end'", "'api'", "'}'", "','", "'.'", "'{'", "'as'", "'('", "')'", "':'", "'OR'", "'AND'", "'+'", "'-'", "'/'", "'*'", "'^'", "'then'", "'elif'", "'else'", "'<-'", "'#'", "'also'", "'do'", "'='", "'import'", "'export'", "'except'", "'private'", "'test'", "'atomic'", "'io'", "':='", "'return'", "'while'", "'for'", "'if'", "'seq'", "'at'", "'_'", "'var'"
    };
    public static final int T__50=50;
    public static final int RULE_DOTS=4;
    public static final int T__19=19;
    public static final int T__15=15;
    public static final int T__59=59;
    public static final int T__16=16;
    public static final int T__17=17;
    public static final int T__18=18;
    public static final int T__55=55;
    public static final int T__56=56;
    public static final int T__13=13;
    public static final int T__57=57;
    public static final int T__14=14;
    public static final int T__58=58;
    public static final int T__51=51;
    public static final int T__52=52;
    public static final int T__53=53;
    public static final int T__54=54;
    public static final int T__60=60;
    public static final int T__61=61;
    public static final int RULE_ID=5;
    public static final int T__26=26;
    public static final int T__27=27;
    public static final int T__28=28;
    public static final int RULE_INT=6;
    public static final int T__29=29;
    public static final int T__22=22;
    public static final int T__66=66;
    public static final int RULE_ML_COMMENT=9;
    public static final int T__23=23;
    public static final int T__67=67;
    public static final int T__24=24;
    public static final int T__68=68;
    public static final int T__25=25;
    public static final int T__62=62;
    public static final int T__63=63;
    public static final int T__20=20;
    public static final int T__64=64;
    public static final int T__21=21;
    public static final int T__65=65;
    public static final int RULE_STRING=8;
    public static final int RULE_SL_COMMENT=10;
    public static final int T__37=37;
    public static final int T__38=38;
    public static final int T__39=39;
    public static final int T__33=33;
    public static final int T__34=34;
    public static final int T__35=35;
    public static final int T__36=36;
    public static final int EOF=-1;
    public static final int T__30=30;
    public static final int T__31=31;
    public static final int T__32=32;
    public static final int RULE_WS=11;
    public static final int RULE_ANY_OTHER=12;
    public static final int T__48=48;
    public static final int T__49=49;
    public static final int T__44=44;
    public static final int T__45=45;
    public static final int RULE_FLOAT=7;
    public static final int T__46=46;
    public static final int T__47=47;
    public static final int T__40=40;
    public static final int T__41=41;
    public static final int T__42=42;
    public static final int T__43=43;

    // delegates
    // delegators


        public InternalFortXTransParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public InternalFortXTransParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
             
        }
        

    public String[] getTokenNames() { return InternalFortXTransParser.tokenNames; }
    public String getGrammarFileName() { return "InternalFortXTrans.g"; }


    	private FortXTransGrammarAccess grammarAccess;

    	public void setGrammarAccess(FortXTransGrammarAccess grammarAccess) {
    		this.grammarAccess = grammarAccess;
    	}

    	@Override
    	protected Grammar getGrammar() {
    		return grammarAccess.getGrammar();
    	}

    	@Override
    	protected String getValueForTokenName(String tokenName) {
    		return tokenName;
    	}



    // $ANTLR start "entryRuleModel"
    // InternalFortXTrans.g:53:1: entryRuleModel : ruleModel EOF ;
    public final void entryRuleModel() throws RecognitionException {
        try {
            // InternalFortXTrans.g:54:1: ( ruleModel EOF )
            // InternalFortXTrans.g:55:1: ruleModel EOF
            {
             before(grammarAccess.getModelRule()); 
            pushFollow(FOLLOW_1);
            ruleModel();

            state._fsp--;

             after(grammarAccess.getModelRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleModel"


    // $ANTLR start "ruleModel"
    // InternalFortXTrans.g:62:1: ruleModel : ( ( rule__Model__Alternatives ) ) ;
    public final void ruleModel() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:66:2: ( ( ( rule__Model__Alternatives ) ) )
            // InternalFortXTrans.g:67:2: ( ( rule__Model__Alternatives ) )
            {
            // InternalFortXTrans.g:67:2: ( ( rule__Model__Alternatives ) )
            // InternalFortXTrans.g:68:3: ( rule__Model__Alternatives )
            {
             before(grammarAccess.getModelAccess().getAlternatives()); 
            // InternalFortXTrans.g:69:3: ( rule__Model__Alternatives )
            // InternalFortXTrans.g:69:4: rule__Model__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__Model__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getModelAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleModel"


    // $ANTLR start "entryRuleComponent"
    // InternalFortXTrans.g:78:1: entryRuleComponent : ruleComponent EOF ;
    public final void entryRuleComponent() throws RecognitionException {
        try {
            // InternalFortXTrans.g:79:1: ( ruleComponent EOF )
            // InternalFortXTrans.g:80:1: ruleComponent EOF
            {
             before(grammarAccess.getComponentRule()); 
            pushFollow(FOLLOW_1);
            ruleComponent();

            state._fsp--;

             after(grammarAccess.getComponentRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleComponent"


    // $ANTLR start "ruleComponent"
    // InternalFortXTrans.g:87:1: ruleComponent : ( ( rule__Component__Group__0 ) ) ;
    public final void ruleComponent() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:91:2: ( ( ( rule__Component__Group__0 ) ) )
            // InternalFortXTrans.g:92:2: ( ( rule__Component__Group__0 ) )
            {
            // InternalFortXTrans.g:92:2: ( ( rule__Component__Group__0 ) )
            // InternalFortXTrans.g:93:3: ( rule__Component__Group__0 )
            {
             before(grammarAccess.getComponentAccess().getGroup()); 
            // InternalFortXTrans.g:94:3: ( rule__Component__Group__0 )
            // InternalFortXTrans.g:94:4: rule__Component__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Component__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getComponentAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleComponent"


    // $ANTLR start "entryRuleAPI"
    // InternalFortXTrans.g:103:1: entryRuleAPI : ruleAPI EOF ;
    public final void entryRuleAPI() throws RecognitionException {
        try {
            // InternalFortXTrans.g:104:1: ( ruleAPI EOF )
            // InternalFortXTrans.g:105:1: ruleAPI EOF
            {
             before(grammarAccess.getAPIRule()); 
            pushFollow(FOLLOW_1);
            ruleAPI();

            state._fsp--;

             after(grammarAccess.getAPIRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAPI"


    // $ANTLR start "ruleAPI"
    // InternalFortXTrans.g:112:1: ruleAPI : ( ( rule__API__Group__0 ) ) ;
    public final void ruleAPI() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:116:2: ( ( ( rule__API__Group__0 ) ) )
            // InternalFortXTrans.g:117:2: ( ( rule__API__Group__0 ) )
            {
            // InternalFortXTrans.g:117:2: ( ( rule__API__Group__0 ) )
            // InternalFortXTrans.g:118:3: ( rule__API__Group__0 )
            {
             before(grammarAccess.getAPIAccess().getGroup()); 
            // InternalFortXTrans.g:119:3: ( rule__API__Group__0 )
            // InternalFortXTrans.g:119:4: rule__API__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__API__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getAPIAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAPI"


    // $ANTLR start "entryRuleImport"
    // InternalFortXTrans.g:128:1: entryRuleImport : ruleImport EOF ;
    public final void entryRuleImport() throws RecognitionException {
        try {
            // InternalFortXTrans.g:129:1: ( ruleImport EOF )
            // InternalFortXTrans.g:130:1: ruleImport EOF
            {
             before(grammarAccess.getImportRule()); 
            pushFollow(FOLLOW_1);
            ruleImport();

            state._fsp--;

             after(grammarAccess.getImportRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleImport"


    // $ANTLR start "ruleImport"
    // InternalFortXTrans.g:137:1: ruleImport : ( ( rule__Import__Alternatives ) ) ;
    public final void ruleImport() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:141:2: ( ( ( rule__Import__Alternatives ) ) )
            // InternalFortXTrans.g:142:2: ( ( rule__Import__Alternatives ) )
            {
            // InternalFortXTrans.g:142:2: ( ( rule__Import__Alternatives ) )
            // InternalFortXTrans.g:143:3: ( rule__Import__Alternatives )
            {
             before(grammarAccess.getImportAccess().getAlternatives()); 
            // InternalFortXTrans.g:144:3: ( rule__Import__Alternatives )
            // InternalFortXTrans.g:144:4: rule__Import__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__Import__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getImportAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleImport"


    // $ANTLR start "entryRuleExport"
    // InternalFortXTrans.g:153:1: entryRuleExport : ruleExport EOF ;
    public final void entryRuleExport() throws RecognitionException {
        try {
            // InternalFortXTrans.g:154:1: ( ruleExport EOF )
            // InternalFortXTrans.g:155:1: ruleExport EOF
            {
             before(grammarAccess.getExportRule()); 
            pushFollow(FOLLOW_1);
            ruleExport();

            state._fsp--;

             after(grammarAccess.getExportRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleExport"


    // $ANTLR start "ruleExport"
    // InternalFortXTrans.g:162:1: ruleExport : ( ( rule__Export__Alternatives ) ) ;
    public final void ruleExport() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:166:2: ( ( ( rule__Export__Alternatives ) ) )
            // InternalFortXTrans.g:167:2: ( ( rule__Export__Alternatives ) )
            {
            // InternalFortXTrans.g:167:2: ( ( rule__Export__Alternatives ) )
            // InternalFortXTrans.g:168:3: ( rule__Export__Alternatives )
            {
             before(grammarAccess.getExportAccess().getAlternatives()); 
            // InternalFortXTrans.g:169:3: ( rule__Export__Alternatives )
            // InternalFortXTrans.g:169:4: rule__Export__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__Export__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getExportAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleExport"


    // $ANTLR start "entryRuleImportedNames"
    // InternalFortXTrans.g:178:1: entryRuleImportedNames : ruleImportedNames EOF ;
    public final void entryRuleImportedNames() throws RecognitionException {
        try {
            // InternalFortXTrans.g:179:1: ( ruleImportedNames EOF )
            // InternalFortXTrans.g:180:1: ruleImportedNames EOF
            {
             before(grammarAccess.getImportedNamesRule()); 
            pushFollow(FOLLOW_1);
            ruleImportedNames();

            state._fsp--;

             after(grammarAccess.getImportedNamesRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleImportedNames"


    // $ANTLR start "ruleImportedNames"
    // InternalFortXTrans.g:187:1: ruleImportedNames : ( ( rule__ImportedNames__Alternatives ) ) ;
    public final void ruleImportedNames() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:191:2: ( ( ( rule__ImportedNames__Alternatives ) ) )
            // InternalFortXTrans.g:192:2: ( ( rule__ImportedNames__Alternatives ) )
            {
            // InternalFortXTrans.g:192:2: ( ( rule__ImportedNames__Alternatives ) )
            // InternalFortXTrans.g:193:3: ( rule__ImportedNames__Alternatives )
            {
             before(grammarAccess.getImportedNamesAccess().getAlternatives()); 
            // InternalFortXTrans.g:194:3: ( rule__ImportedNames__Alternatives )
            // InternalFortXTrans.g:194:4: rule__ImportedNames__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__ImportedNames__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getImportedNamesAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleImportedNames"


    // $ANTLR start "entryRuleQualifiedName"
    // InternalFortXTrans.g:203:1: entryRuleQualifiedName : ruleQualifiedName EOF ;
    public final void entryRuleQualifiedName() throws RecognitionException {
        try {
            // InternalFortXTrans.g:204:1: ( ruleQualifiedName EOF )
            // InternalFortXTrans.g:205:1: ruleQualifiedName EOF
            {
             before(grammarAccess.getQualifiedNameRule()); 
            pushFollow(FOLLOW_1);
            ruleQualifiedName();

            state._fsp--;

             after(grammarAccess.getQualifiedNameRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleQualifiedName"


    // $ANTLR start "ruleQualifiedName"
    // InternalFortXTrans.g:212:1: ruleQualifiedName : ( ( rule__QualifiedName__Alternatives ) ) ;
    public final void ruleQualifiedName() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:216:2: ( ( ( rule__QualifiedName__Alternatives ) ) )
            // InternalFortXTrans.g:217:2: ( ( rule__QualifiedName__Alternatives ) )
            {
            // InternalFortXTrans.g:217:2: ( ( rule__QualifiedName__Alternatives ) )
            // InternalFortXTrans.g:218:3: ( rule__QualifiedName__Alternatives )
            {
             before(grammarAccess.getQualifiedNameAccess().getAlternatives()); 
            // InternalFortXTrans.g:219:3: ( rule__QualifiedName__Alternatives )
            // InternalFortXTrans.g:219:4: rule__QualifiedName__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__QualifiedName__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getQualifiedNameAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleQualifiedName"


    // $ANTLR start "entryRuleQualified"
    // InternalFortXTrans.g:228:1: entryRuleQualified : ruleQualified EOF ;
    public final void entryRuleQualified() throws RecognitionException {
        try {
            // InternalFortXTrans.g:229:1: ( ruleQualified EOF )
            // InternalFortXTrans.g:230:1: ruleQualified EOF
            {
             before(grammarAccess.getQualifiedRule()); 
            pushFollow(FOLLOW_1);
            ruleQualified();

            state._fsp--;

             after(grammarAccess.getQualifiedRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleQualified"


    // $ANTLR start "ruleQualified"
    // InternalFortXTrans.g:237:1: ruleQualified : ( ( rule__Qualified__Alternatives ) ) ;
    public final void ruleQualified() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:241:2: ( ( ( rule__Qualified__Alternatives ) ) )
            // InternalFortXTrans.g:242:2: ( ( rule__Qualified__Alternatives ) )
            {
            // InternalFortXTrans.g:242:2: ( ( rule__Qualified__Alternatives ) )
            // InternalFortXTrans.g:243:3: ( rule__Qualified__Alternatives )
            {
             before(grammarAccess.getQualifiedAccess().getAlternatives()); 
            // InternalFortXTrans.g:244:3: ( rule__Qualified__Alternatives )
            // InternalFortXTrans.g:244:4: rule__Qualified__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__Qualified__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getQualifiedAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleQualified"


    // $ANTLR start "entryRuleQualifiedNameTuple"
    // InternalFortXTrans.g:253:1: entryRuleQualifiedNameTuple : ruleQualifiedNameTuple EOF ;
    public final void entryRuleQualifiedNameTuple() throws RecognitionException {
        try {
            // InternalFortXTrans.g:254:1: ( ruleQualifiedNameTuple EOF )
            // InternalFortXTrans.g:255:1: ruleQualifiedNameTuple EOF
            {
             before(grammarAccess.getQualifiedNameTupleRule()); 
            pushFollow(FOLLOW_1);
            ruleQualifiedNameTuple();

            state._fsp--;

             after(grammarAccess.getQualifiedNameTupleRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleQualifiedNameTuple"


    // $ANTLR start "ruleQualifiedNameTuple"
    // InternalFortXTrans.g:262:1: ruleQualifiedNameTuple : ( ( rule__QualifiedNameTuple__Group__0 ) ) ;
    public final void ruleQualifiedNameTuple() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:266:2: ( ( ( rule__QualifiedNameTuple__Group__0 ) ) )
            // InternalFortXTrans.g:267:2: ( ( rule__QualifiedNameTuple__Group__0 ) )
            {
            // InternalFortXTrans.g:267:2: ( ( rule__QualifiedNameTuple__Group__0 ) )
            // InternalFortXTrans.g:268:3: ( rule__QualifiedNameTuple__Group__0 )
            {
             before(grammarAccess.getQualifiedNameTupleAccess().getGroup()); 
            // InternalFortXTrans.g:269:3: ( rule__QualifiedNameTuple__Group__0 )
            // InternalFortXTrans.g:269:4: rule__QualifiedNameTuple__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__QualifiedNameTuple__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getQualifiedNameTupleAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleQualifiedNameTuple"


    // $ANTLR start "entryRuleSimpleNames"
    // InternalFortXTrans.g:278:1: entryRuleSimpleNames : ruleSimpleNames EOF ;
    public final void entryRuleSimpleNames() throws RecognitionException {
        try {
            // InternalFortXTrans.g:279:1: ( ruleSimpleNames EOF )
            // InternalFortXTrans.g:280:1: ruleSimpleNames EOF
            {
             before(grammarAccess.getSimpleNamesRule()); 
            pushFollow(FOLLOW_1);
            ruleSimpleNames();

            state._fsp--;

             after(grammarAccess.getSimpleNamesRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSimpleNames"


    // $ANTLR start "ruleSimpleNames"
    // InternalFortXTrans.g:287:1: ruleSimpleNames : ( ( rule__SimpleNames__Alternatives ) ) ;
    public final void ruleSimpleNames() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:291:2: ( ( ( rule__SimpleNames__Alternatives ) ) )
            // InternalFortXTrans.g:292:2: ( ( rule__SimpleNames__Alternatives ) )
            {
            // InternalFortXTrans.g:292:2: ( ( rule__SimpleNames__Alternatives ) )
            // InternalFortXTrans.g:293:3: ( rule__SimpleNames__Alternatives )
            {
             before(grammarAccess.getSimpleNamesAccess().getAlternatives()); 
            // InternalFortXTrans.g:294:3: ( rule__SimpleNames__Alternatives )
            // InternalFortXTrans.g:294:4: rule__SimpleNames__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__SimpleNames__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getSimpleNamesAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSimpleNames"


    // $ANTLR start "entryRuleSimpleName"
    // InternalFortXTrans.g:303:1: entryRuleSimpleName : ruleSimpleName EOF ;
    public final void entryRuleSimpleName() throws RecognitionException {
        try {
            // InternalFortXTrans.g:304:1: ( ruleSimpleName EOF )
            // InternalFortXTrans.g:305:1: ruleSimpleName EOF
            {
             before(grammarAccess.getSimpleNameRule()); 
            pushFollow(FOLLOW_1);
            ruleSimpleName();

            state._fsp--;

             after(grammarAccess.getSimpleNameRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSimpleName"


    // $ANTLR start "ruleSimpleName"
    // InternalFortXTrans.g:312:1: ruleSimpleName : ( ( rule__SimpleName__NameAssignment ) ) ;
    public final void ruleSimpleName() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:316:2: ( ( ( rule__SimpleName__NameAssignment ) ) )
            // InternalFortXTrans.g:317:2: ( ( rule__SimpleName__NameAssignment ) )
            {
            // InternalFortXTrans.g:317:2: ( ( rule__SimpleName__NameAssignment ) )
            // InternalFortXTrans.g:318:3: ( rule__SimpleName__NameAssignment )
            {
             before(grammarAccess.getSimpleNameAccess().getNameAssignment()); 
            // InternalFortXTrans.g:319:3: ( rule__SimpleName__NameAssignment )
            // InternalFortXTrans.g:319:4: rule__SimpleName__NameAssignment
            {
            pushFollow(FOLLOW_2);
            rule__SimpleName__NameAssignment();

            state._fsp--;


            }

             after(grammarAccess.getSimpleNameAccess().getNameAssignment()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSimpleName"


    // $ANTLR start "entryRuleAliasedSimpleName"
    // InternalFortXTrans.g:328:1: entryRuleAliasedSimpleName : ruleAliasedSimpleName EOF ;
    public final void entryRuleAliasedSimpleName() throws RecognitionException {
        try {
            // InternalFortXTrans.g:329:1: ( ruleAliasedSimpleName EOF )
            // InternalFortXTrans.g:330:1: ruleAliasedSimpleName EOF
            {
             before(grammarAccess.getAliasedSimpleNameRule()); 
            pushFollow(FOLLOW_1);
            ruleAliasedSimpleName();

            state._fsp--;

             after(grammarAccess.getAliasedSimpleNameRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAliasedSimpleName"


    // $ANTLR start "ruleAliasedSimpleName"
    // InternalFortXTrans.g:337:1: ruleAliasedSimpleName : ( ( rule__AliasedSimpleName__Group__0 ) ) ;
    public final void ruleAliasedSimpleName() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:341:2: ( ( ( rule__AliasedSimpleName__Group__0 ) ) )
            // InternalFortXTrans.g:342:2: ( ( rule__AliasedSimpleName__Group__0 ) )
            {
            // InternalFortXTrans.g:342:2: ( ( rule__AliasedSimpleName__Group__0 ) )
            // InternalFortXTrans.g:343:3: ( rule__AliasedSimpleName__Group__0 )
            {
             before(grammarAccess.getAliasedSimpleNameAccess().getGroup()); 
            // InternalFortXTrans.g:344:3: ( rule__AliasedSimpleName__Group__0 )
            // InternalFortXTrans.g:344:4: rule__AliasedSimpleName__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__AliasedSimpleName__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getAliasedSimpleNameAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAliasedSimpleName"


    // $ANTLR start "entryRuleAliasedAPINames"
    // InternalFortXTrans.g:353:1: entryRuleAliasedAPINames : ruleAliasedAPINames EOF ;
    public final void entryRuleAliasedAPINames() throws RecognitionException {
        try {
            // InternalFortXTrans.g:354:1: ( ruleAliasedAPINames EOF )
            // InternalFortXTrans.g:355:1: ruleAliasedAPINames EOF
            {
             before(grammarAccess.getAliasedAPINamesRule()); 
            pushFollow(FOLLOW_1);
            ruleAliasedAPINames();

            state._fsp--;

             after(grammarAccess.getAliasedAPINamesRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAliasedAPINames"


    // $ANTLR start "ruleAliasedAPINames"
    // InternalFortXTrans.g:362:1: ruleAliasedAPINames : ( ( rule__AliasedAPINames__Alternatives ) ) ;
    public final void ruleAliasedAPINames() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:366:2: ( ( ( rule__AliasedAPINames__Alternatives ) ) )
            // InternalFortXTrans.g:367:2: ( ( rule__AliasedAPINames__Alternatives ) )
            {
            // InternalFortXTrans.g:367:2: ( ( rule__AliasedAPINames__Alternatives ) )
            // InternalFortXTrans.g:368:3: ( rule__AliasedAPINames__Alternatives )
            {
             before(grammarAccess.getAliasedAPINamesAccess().getAlternatives()); 
            // InternalFortXTrans.g:369:3: ( rule__AliasedAPINames__Alternatives )
            // InternalFortXTrans.g:369:4: rule__AliasedAPINames__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__AliasedAPINames__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getAliasedAPINamesAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAliasedAPINames"


    // $ANTLR start "entryRuleAliasedAPIName"
    // InternalFortXTrans.g:378:1: entryRuleAliasedAPIName : ruleAliasedAPIName EOF ;
    public final void entryRuleAliasedAPIName() throws RecognitionException {
        try {
            // InternalFortXTrans.g:379:1: ( ruleAliasedAPIName EOF )
            // InternalFortXTrans.g:380:1: ruleAliasedAPIName EOF
            {
             before(grammarAccess.getAliasedAPINameRule()); 
            pushFollow(FOLLOW_1);
            ruleAliasedAPIName();

            state._fsp--;

             after(grammarAccess.getAliasedAPINameRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAliasedAPIName"


    // $ANTLR start "ruleAliasedAPIName"
    // InternalFortXTrans.g:387:1: ruleAliasedAPIName : ( ( rule__AliasedAPIName__Group__0 ) ) ;
    public final void ruleAliasedAPIName() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:391:2: ( ( ( rule__AliasedAPIName__Group__0 ) ) )
            // InternalFortXTrans.g:392:2: ( ( rule__AliasedAPIName__Group__0 ) )
            {
            // InternalFortXTrans.g:392:2: ( ( rule__AliasedAPIName__Group__0 ) )
            // InternalFortXTrans.g:393:3: ( rule__AliasedAPIName__Group__0 )
            {
             before(grammarAccess.getAliasedAPINameAccess().getGroup()); 
            // InternalFortXTrans.g:394:3: ( rule__AliasedAPIName__Group__0 )
            // InternalFortXTrans.g:394:4: rule__AliasedAPIName__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__AliasedAPIName__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getAliasedAPINameAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAliasedAPIName"


    // $ANTLR start "entryRuleDecls"
    // InternalFortXTrans.g:403:1: entryRuleDecls : ruleDecls EOF ;
    public final void entryRuleDecls() throws RecognitionException {
        try {
            // InternalFortXTrans.g:404:1: ( ruleDecls EOF )
            // InternalFortXTrans.g:405:1: ruleDecls EOF
            {
             before(grammarAccess.getDeclsRule()); 
            pushFollow(FOLLOW_1);
            ruleDecls();

            state._fsp--;

             after(grammarAccess.getDeclsRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDecls"


    // $ANTLR start "ruleDecls"
    // InternalFortXTrans.g:412:1: ruleDecls : ( ( ( rule__Decls__DeclsAssignment ) ) ( ( rule__Decls__DeclsAssignment )* ) ) ;
    public final void ruleDecls() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:416:2: ( ( ( ( rule__Decls__DeclsAssignment ) ) ( ( rule__Decls__DeclsAssignment )* ) ) )
            // InternalFortXTrans.g:417:2: ( ( ( rule__Decls__DeclsAssignment ) ) ( ( rule__Decls__DeclsAssignment )* ) )
            {
            // InternalFortXTrans.g:417:2: ( ( ( rule__Decls__DeclsAssignment ) ) ( ( rule__Decls__DeclsAssignment )* ) )
            // InternalFortXTrans.g:418:3: ( ( rule__Decls__DeclsAssignment ) ) ( ( rule__Decls__DeclsAssignment )* )
            {
            // InternalFortXTrans.g:418:3: ( ( rule__Decls__DeclsAssignment ) )
            // InternalFortXTrans.g:419:4: ( rule__Decls__DeclsAssignment )
            {
             before(grammarAccess.getDeclsAccess().getDeclsAssignment()); 
            // InternalFortXTrans.g:420:4: ( rule__Decls__DeclsAssignment )
            // InternalFortXTrans.g:420:5: rule__Decls__DeclsAssignment
            {
            pushFollow(FOLLOW_3);
            rule__Decls__DeclsAssignment();

            state._fsp--;


            }

             after(grammarAccess.getDeclsAccess().getDeclsAssignment()); 

            }

            // InternalFortXTrans.g:423:3: ( ( rule__Decls__DeclsAssignment )* )
            // InternalFortXTrans.g:424:4: ( rule__Decls__DeclsAssignment )*
            {
             before(grammarAccess.getDeclsAccess().getDeclsAssignment()); 
            // InternalFortXTrans.g:425:4: ( rule__Decls__DeclsAssignment )*
            loop1:
            do {
                int alt1=2;
                alt1 = dfa1.predict(input);
                switch (alt1) {
            	case 1 :
            	    // InternalFortXTrans.g:425:5: rule__Decls__DeclsAssignment
            	    {
            	    pushFollow(FOLLOW_3);
            	    rule__Decls__DeclsAssignment();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop1;
                }
            } while (true);

             after(grammarAccess.getDeclsAccess().getDeclsAssignment()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDecls"


    // $ANTLR start "entryRuleDecl"
    // InternalFortXTrans.g:435:1: entryRuleDecl : ruleDecl EOF ;
    public final void entryRuleDecl() throws RecognitionException {
        try {
            // InternalFortXTrans.g:436:1: ( ruleDecl EOF )
            // InternalFortXTrans.g:437:1: ruleDecl EOF
            {
             before(grammarAccess.getDeclRule()); 
            pushFollow(FOLLOW_1);
            ruleDecl();

            state._fsp--;

             after(grammarAccess.getDeclRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDecl"


    // $ANTLR start "ruleDecl"
    // InternalFortXTrans.g:444:1: ruleDecl : ( ( rule__Decl__Alternatives ) ) ;
    public final void ruleDecl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:448:2: ( ( ( rule__Decl__Alternatives ) ) )
            // InternalFortXTrans.g:449:2: ( ( rule__Decl__Alternatives ) )
            {
            // InternalFortXTrans.g:449:2: ( ( rule__Decl__Alternatives ) )
            // InternalFortXTrans.g:450:3: ( rule__Decl__Alternatives )
            {
             before(grammarAccess.getDeclAccess().getAlternatives()); 
            // InternalFortXTrans.g:451:3: ( rule__Decl__Alternatives )
            // InternalFortXTrans.g:451:4: rule__Decl__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__Decl__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getDeclAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDecl"


    // $ANTLR start "entryRuleFnMods"
    // InternalFortXTrans.g:460:1: entryRuleFnMods : ruleFnMods EOF ;
    public final void entryRuleFnMods() throws RecognitionException {
        try {
            // InternalFortXTrans.g:461:1: ( ruleFnMods EOF )
            // InternalFortXTrans.g:462:1: ruleFnMods EOF
            {
             before(grammarAccess.getFnModsRule()); 
            pushFollow(FOLLOW_1);
            ruleFnMods();

            state._fsp--;

             after(grammarAccess.getFnModsRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleFnMods"


    // $ANTLR start "ruleFnMods"
    // InternalFortXTrans.g:469:1: ruleFnMods : ( ( ( rule__FnMods__ModsAssignment ) ) ( ( rule__FnMods__ModsAssignment )* ) ) ;
    public final void ruleFnMods() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:473:2: ( ( ( ( rule__FnMods__ModsAssignment ) ) ( ( rule__FnMods__ModsAssignment )* ) ) )
            // InternalFortXTrans.g:474:2: ( ( ( rule__FnMods__ModsAssignment ) ) ( ( rule__FnMods__ModsAssignment )* ) )
            {
            // InternalFortXTrans.g:474:2: ( ( ( rule__FnMods__ModsAssignment ) ) ( ( rule__FnMods__ModsAssignment )* ) )
            // InternalFortXTrans.g:475:3: ( ( rule__FnMods__ModsAssignment ) ) ( ( rule__FnMods__ModsAssignment )* )
            {
            // InternalFortXTrans.g:475:3: ( ( rule__FnMods__ModsAssignment ) )
            // InternalFortXTrans.g:476:4: ( rule__FnMods__ModsAssignment )
            {
             before(grammarAccess.getFnModsAccess().getModsAssignment()); 
            // InternalFortXTrans.g:477:4: ( rule__FnMods__ModsAssignment )
            // InternalFortXTrans.g:477:5: rule__FnMods__ModsAssignment
            {
            pushFollow(FOLLOW_4);
            rule__FnMods__ModsAssignment();

            state._fsp--;


            }

             after(grammarAccess.getFnModsAccess().getModsAssignment()); 

            }

            // InternalFortXTrans.g:480:3: ( ( rule__FnMods__ModsAssignment )* )
            // InternalFortXTrans.g:481:4: ( rule__FnMods__ModsAssignment )*
            {
             before(grammarAccess.getFnModsAccess().getModsAssignment()); 
            // InternalFortXTrans.g:482:4: ( rule__FnMods__ModsAssignment )*
            loop2:
            do {
                int alt2=2;
                int LA2_0 = input.LA(1);

                if ( ((LA2_0>=56 && LA2_0<=59)) ) {
                    alt2=1;
                }


                switch (alt2) {
            	case 1 :
            	    // InternalFortXTrans.g:482:5: rule__FnMods__ModsAssignment
            	    {
            	    pushFollow(FOLLOW_4);
            	    rule__FnMods__ModsAssignment();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop2;
                }
            } while (true);

             after(grammarAccess.getFnModsAccess().getModsAssignment()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFnMods"


    // $ANTLR start "entryRuleFnMod"
    // InternalFortXTrans.g:492:1: entryRuleFnMod : ruleFnMod EOF ;
    public final void entryRuleFnMod() throws RecognitionException {
        try {
            // InternalFortXTrans.g:493:1: ( ruleFnMod EOF )
            // InternalFortXTrans.g:494:1: ruleFnMod EOF
            {
             before(grammarAccess.getFnModRule()); 
            pushFollow(FOLLOW_1);
            ruleFnMod();

            state._fsp--;

             after(grammarAccess.getFnModRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleFnMod"


    // $ANTLR start "ruleFnMod"
    // InternalFortXTrans.g:501:1: ruleFnMod : ( ( rule__FnMod__Alternatives ) ) ;
    public final void ruleFnMod() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:505:2: ( ( ( rule__FnMod__Alternatives ) ) )
            // InternalFortXTrans.g:506:2: ( ( rule__FnMod__Alternatives ) )
            {
            // InternalFortXTrans.g:506:2: ( ( rule__FnMod__Alternatives ) )
            // InternalFortXTrans.g:507:3: ( rule__FnMod__Alternatives )
            {
             before(grammarAccess.getFnModAccess().getAlternatives()); 
            // InternalFortXTrans.g:508:3: ( rule__FnMod__Alternatives )
            // InternalFortXTrans.g:508:4: rule__FnMod__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__FnMod__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getFnModAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFnMod"


    // $ANTLR start "entryRuleValParam"
    // InternalFortXTrans.g:517:1: entryRuleValParam : ruleValParam EOF ;
    public final void entryRuleValParam() throws RecognitionException {
        try {
            // InternalFortXTrans.g:518:1: ( ruleValParam EOF )
            // InternalFortXTrans.g:519:1: ruleValParam EOF
            {
             before(grammarAccess.getValParamRule()); 
            pushFollow(FOLLOW_1);
            ruleValParam();

            state._fsp--;

             after(grammarAccess.getValParamRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleValParam"


    // $ANTLR start "ruleValParam"
    // InternalFortXTrans.g:526:1: ruleValParam : ( ( rule__ValParam__Alternatives ) ) ;
    public final void ruleValParam() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:530:2: ( ( ( rule__ValParam__Alternatives ) ) )
            // InternalFortXTrans.g:531:2: ( ( rule__ValParam__Alternatives ) )
            {
            // InternalFortXTrans.g:531:2: ( ( rule__ValParam__Alternatives ) )
            // InternalFortXTrans.g:532:3: ( rule__ValParam__Alternatives )
            {
             before(grammarAccess.getValParamAccess().getAlternatives()); 
            // InternalFortXTrans.g:533:3: ( rule__ValParam__Alternatives )
            // InternalFortXTrans.g:533:4: rule__ValParam__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__ValParam__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getValParamAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleValParam"


    // $ANTLR start "entryRuleParam"
    // InternalFortXTrans.g:542:1: entryRuleParam : ruleParam EOF ;
    public final void entryRuleParam() throws RecognitionException {
        try {
            // InternalFortXTrans.g:543:1: ( ruleParam EOF )
            // InternalFortXTrans.g:544:1: ruleParam EOF
            {
             before(grammarAccess.getParamRule()); 
            pushFollow(FOLLOW_1);
            ruleParam();

            state._fsp--;

             after(grammarAccess.getParamRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleParam"


    // $ANTLR start "ruleParam"
    // InternalFortXTrans.g:551:1: ruleParam : ( ( rule__Param__Group__0 ) ) ;
    public final void ruleParam() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:555:2: ( ( ( rule__Param__Group__0 ) ) )
            // InternalFortXTrans.g:556:2: ( ( rule__Param__Group__0 ) )
            {
            // InternalFortXTrans.g:556:2: ( ( rule__Param__Group__0 ) )
            // InternalFortXTrans.g:557:3: ( rule__Param__Group__0 )
            {
             before(grammarAccess.getParamAccess().getGroup()); 
            // InternalFortXTrans.g:558:3: ( rule__Param__Group__0 )
            // InternalFortXTrans.g:558:4: rule__Param__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Param__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getParamAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleParam"


    // $ANTLR start "entryRuleRetType"
    // InternalFortXTrans.g:567:1: entryRuleRetType : ruleRetType EOF ;
    public final void entryRuleRetType() throws RecognitionException {
        try {
            // InternalFortXTrans.g:568:1: ( ruleRetType EOF )
            // InternalFortXTrans.g:569:1: ruleRetType EOF
            {
             before(grammarAccess.getRetTypeRule()); 
            pushFollow(FOLLOW_1);
            ruleRetType();

            state._fsp--;

             after(grammarAccess.getRetTypeRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleRetType"


    // $ANTLR start "ruleRetType"
    // InternalFortXTrans.g:576:1: ruleRetType : ( ( rule__RetType__Alternatives ) ) ;
    public final void ruleRetType() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:580:2: ( ( ( rule__RetType__Alternatives ) ) )
            // InternalFortXTrans.g:581:2: ( ( rule__RetType__Alternatives ) )
            {
            // InternalFortXTrans.g:581:2: ( ( rule__RetType__Alternatives ) )
            // InternalFortXTrans.g:582:3: ( rule__RetType__Alternatives )
            {
             before(grammarAccess.getRetTypeAccess().getAlternatives()); 
            // InternalFortXTrans.g:583:3: ( rule__RetType__Alternatives )
            // InternalFortXTrans.g:583:4: rule__RetType__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__RetType__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getRetTypeAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleRetType"


    // $ANTLR start "entryRuleTupleType"
    // InternalFortXTrans.g:592:1: entryRuleTupleType : ruleTupleType EOF ;
    public final void entryRuleTupleType() throws RecognitionException {
        try {
            // InternalFortXTrans.g:593:1: ( ruleTupleType EOF )
            // InternalFortXTrans.g:594:1: ruleTupleType EOF
            {
             before(grammarAccess.getTupleTypeRule()); 
            pushFollow(FOLLOW_1);
            ruleTupleType();

            state._fsp--;

             after(grammarAccess.getTupleTypeRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTupleType"


    // $ANTLR start "ruleTupleType"
    // InternalFortXTrans.g:601:1: ruleTupleType : ( ( rule__TupleType__Group__0 ) ) ;
    public final void ruleTupleType() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:605:2: ( ( ( rule__TupleType__Group__0 ) ) )
            // InternalFortXTrans.g:606:2: ( ( rule__TupleType__Group__0 ) )
            {
            // InternalFortXTrans.g:606:2: ( ( rule__TupleType__Group__0 ) )
            // InternalFortXTrans.g:607:3: ( rule__TupleType__Group__0 )
            {
             before(grammarAccess.getTupleTypeAccess().getGroup()); 
            // InternalFortXTrans.g:608:3: ( rule__TupleType__Group__0 )
            // InternalFortXTrans.g:608:4: rule__TupleType__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__TupleType__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getTupleTypeAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTupleType"


    // $ANTLR start "entryRuleFnDecl"
    // InternalFortXTrans.g:617:1: entryRuleFnDecl : ruleFnDecl EOF ;
    public final void entryRuleFnDecl() throws RecognitionException {
        try {
            // InternalFortXTrans.g:618:1: ( ruleFnDecl EOF )
            // InternalFortXTrans.g:619:1: ruleFnDecl EOF
            {
             before(grammarAccess.getFnDeclRule()); 
            pushFollow(FOLLOW_1);
            ruleFnDecl();

            state._fsp--;

             after(grammarAccess.getFnDeclRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleFnDecl"


    // $ANTLR start "ruleFnDecl"
    // InternalFortXTrans.g:626:1: ruleFnDecl : ( ( rule__FnDecl__Group__0 ) ) ;
    public final void ruleFnDecl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:630:2: ( ( ( rule__FnDecl__Group__0 ) ) )
            // InternalFortXTrans.g:631:2: ( ( rule__FnDecl__Group__0 ) )
            {
            // InternalFortXTrans.g:631:2: ( ( rule__FnDecl__Group__0 ) )
            // InternalFortXTrans.g:632:3: ( rule__FnDecl__Group__0 )
            {
             before(grammarAccess.getFnDeclAccess().getGroup()); 
            // InternalFortXTrans.g:633:3: ( rule__FnDecl__Group__0 )
            // InternalFortXTrans.g:633:4: rule__FnDecl__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__FnDecl__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getFnDeclAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFnDecl"


    // $ANTLR start "entryRuleStmnts"
    // InternalFortXTrans.g:642:1: entryRuleStmnts : ruleStmnts EOF ;
    public final void entryRuleStmnts() throws RecognitionException {
        try {
            // InternalFortXTrans.g:643:1: ( ruleStmnts EOF )
            // InternalFortXTrans.g:644:1: ruleStmnts EOF
            {
             before(grammarAccess.getStmntsRule()); 
            pushFollow(FOLLOW_1);
            ruleStmnts();

            state._fsp--;

             after(grammarAccess.getStmntsRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleStmnts"


    // $ANTLR start "ruleStmnts"
    // InternalFortXTrans.g:651:1: ruleStmnts : ( ( rule__Stmnts__Alternatives ) ) ;
    public final void ruleStmnts() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:655:2: ( ( ( rule__Stmnts__Alternatives ) ) )
            // InternalFortXTrans.g:656:2: ( ( rule__Stmnts__Alternatives ) )
            {
            // InternalFortXTrans.g:656:2: ( ( rule__Stmnts__Alternatives ) )
            // InternalFortXTrans.g:657:3: ( rule__Stmnts__Alternatives )
            {
             before(grammarAccess.getStmntsAccess().getAlternatives()); 
            // InternalFortXTrans.g:658:3: ( rule__Stmnts__Alternatives )
            // InternalFortXTrans.g:658:4: rule__Stmnts__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__Stmnts__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getStmntsAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleStmnts"


    // $ANTLR start "entryRuleStmnt"
    // InternalFortXTrans.g:667:1: entryRuleStmnt : ruleStmnt EOF ;
    public final void entryRuleStmnt() throws RecognitionException {
        try {
            // InternalFortXTrans.g:668:1: ( ruleStmnt EOF )
            // InternalFortXTrans.g:669:1: ruleStmnt EOF
            {
             before(grammarAccess.getStmntRule()); 
            pushFollow(FOLLOW_1);
            ruleStmnt();

            state._fsp--;

             after(grammarAccess.getStmntRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleStmnt"


    // $ANTLR start "ruleStmnt"
    // InternalFortXTrans.g:676:1: ruleStmnt : ( ( rule__Stmnt__Alternatives ) ) ;
    public final void ruleStmnt() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:680:2: ( ( ( rule__Stmnt__Alternatives ) ) )
            // InternalFortXTrans.g:681:2: ( ( rule__Stmnt__Alternatives ) )
            {
            // InternalFortXTrans.g:681:2: ( ( rule__Stmnt__Alternatives ) )
            // InternalFortXTrans.g:682:3: ( rule__Stmnt__Alternatives )
            {
             before(grammarAccess.getStmntAccess().getAlternatives()); 
            // InternalFortXTrans.g:683:3: ( rule__Stmnt__Alternatives )
            // InternalFortXTrans.g:683:4: rule__Stmnt__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__Stmnt__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getStmntAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleStmnt"


    // $ANTLR start "entryRuleDelimitedExprList"
    // InternalFortXTrans.g:692:1: entryRuleDelimitedExprList : ruleDelimitedExprList EOF ;
    public final void entryRuleDelimitedExprList() throws RecognitionException {
        try {
            // InternalFortXTrans.g:693:1: ( ruleDelimitedExprList EOF )
            // InternalFortXTrans.g:694:1: ruleDelimitedExprList EOF
            {
             before(grammarAccess.getDelimitedExprListRule()); 
            pushFollow(FOLLOW_1);
            ruleDelimitedExprList();

            state._fsp--;

             after(grammarAccess.getDelimitedExprListRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDelimitedExprList"


    // $ANTLR start "ruleDelimitedExprList"
    // InternalFortXTrans.g:701:1: ruleDelimitedExprList : ( ( rule__DelimitedExprList__Group__0 ) ) ;
    public final void ruleDelimitedExprList() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:705:2: ( ( ( rule__DelimitedExprList__Group__0 ) ) )
            // InternalFortXTrans.g:706:2: ( ( rule__DelimitedExprList__Group__0 ) )
            {
            // InternalFortXTrans.g:706:2: ( ( rule__DelimitedExprList__Group__0 ) )
            // InternalFortXTrans.g:707:3: ( rule__DelimitedExprList__Group__0 )
            {
             before(grammarAccess.getDelimitedExprListAccess().getGroup()); 
            // InternalFortXTrans.g:708:3: ( rule__DelimitedExprList__Group__0 )
            // InternalFortXTrans.g:708:4: rule__DelimitedExprList__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__DelimitedExprList__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getDelimitedExprListAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDelimitedExprList"


    // $ANTLR start "entryRuleExpr"
    // InternalFortXTrans.g:717:1: entryRuleExpr : ruleExpr EOF ;
    public final void entryRuleExpr() throws RecognitionException {
        try {
            // InternalFortXTrans.g:718:1: ( ruleExpr EOF )
            // InternalFortXTrans.g:719:1: ruleExpr EOF
            {
             before(grammarAccess.getExprRule()); 
            pushFollow(FOLLOW_1);
            ruleExpr();

            state._fsp--;

             after(grammarAccess.getExprRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleExpr"


    // $ANTLR start "ruleExpr"
    // InternalFortXTrans.g:726:1: ruleExpr : ( ( rule__Expr__Group__0 ) ) ;
    public final void ruleExpr() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:730:2: ( ( ( rule__Expr__Group__0 ) ) )
            // InternalFortXTrans.g:731:2: ( ( rule__Expr__Group__0 ) )
            {
            // InternalFortXTrans.g:731:2: ( ( rule__Expr__Group__0 ) )
            // InternalFortXTrans.g:732:3: ( rule__Expr__Group__0 )
            {
             before(grammarAccess.getExprAccess().getGroup()); 
            // InternalFortXTrans.g:733:3: ( rule__Expr__Group__0 )
            // InternalFortXTrans.g:733:4: rule__Expr__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Expr__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getExprAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleExpr"


    // $ANTLR start "entryRuleOr"
    // InternalFortXTrans.g:742:1: entryRuleOr : ruleOr EOF ;
    public final void entryRuleOr() throws RecognitionException {
        try {
            // InternalFortXTrans.g:743:1: ( ruleOr EOF )
            // InternalFortXTrans.g:744:1: ruleOr EOF
            {
             before(grammarAccess.getOrRule()); 
            pushFollow(FOLLOW_1);
            ruleOr();

            state._fsp--;

             after(grammarAccess.getOrRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOr"


    // $ANTLR start "ruleOr"
    // InternalFortXTrans.g:751:1: ruleOr : ( ( rule__Or__Group__0 ) ) ;
    public final void ruleOr() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:755:2: ( ( ( rule__Or__Group__0 ) ) )
            // InternalFortXTrans.g:756:2: ( ( rule__Or__Group__0 ) )
            {
            // InternalFortXTrans.g:756:2: ( ( rule__Or__Group__0 ) )
            // InternalFortXTrans.g:757:3: ( rule__Or__Group__0 )
            {
             before(grammarAccess.getOrAccess().getGroup()); 
            // InternalFortXTrans.g:758:3: ( rule__Or__Group__0 )
            // InternalFortXTrans.g:758:4: rule__Or__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Or__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getOrAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOr"


    // $ANTLR start "entryRuleAnd"
    // InternalFortXTrans.g:767:1: entryRuleAnd : ruleAnd EOF ;
    public final void entryRuleAnd() throws RecognitionException {
        try {
            // InternalFortXTrans.g:768:1: ( ruleAnd EOF )
            // InternalFortXTrans.g:769:1: ruleAnd EOF
            {
             before(grammarAccess.getAndRule()); 
            pushFollow(FOLLOW_1);
            ruleAnd();

            state._fsp--;

             after(grammarAccess.getAndRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAnd"


    // $ANTLR start "ruleAnd"
    // InternalFortXTrans.g:776:1: ruleAnd : ( ( rule__And__Group__0 ) ) ;
    public final void ruleAnd() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:780:2: ( ( ( rule__And__Group__0 ) ) )
            // InternalFortXTrans.g:781:2: ( ( rule__And__Group__0 ) )
            {
            // InternalFortXTrans.g:781:2: ( ( rule__And__Group__0 ) )
            // InternalFortXTrans.g:782:3: ( rule__And__Group__0 )
            {
             before(grammarAccess.getAndAccess().getGroup()); 
            // InternalFortXTrans.g:783:3: ( rule__And__Group__0 )
            // InternalFortXTrans.g:783:4: rule__And__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__And__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getAndAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAnd"


    // $ANTLR start "entryRuleEquality"
    // InternalFortXTrans.g:792:1: entryRuleEquality : ruleEquality EOF ;
    public final void entryRuleEquality() throws RecognitionException {
        try {
            // InternalFortXTrans.g:793:1: ( ruleEquality EOF )
            // InternalFortXTrans.g:794:1: ruleEquality EOF
            {
             before(grammarAccess.getEqualityRule()); 
            pushFollow(FOLLOW_1);
            ruleEquality();

            state._fsp--;

             after(grammarAccess.getEqualityRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleEquality"


    // $ANTLR start "ruleEquality"
    // InternalFortXTrans.g:801:1: ruleEquality : ( ( rule__Equality__Group__0 ) ) ;
    public final void ruleEquality() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:805:2: ( ( ( rule__Equality__Group__0 ) ) )
            // InternalFortXTrans.g:806:2: ( ( rule__Equality__Group__0 ) )
            {
            // InternalFortXTrans.g:806:2: ( ( rule__Equality__Group__0 ) )
            // InternalFortXTrans.g:807:3: ( rule__Equality__Group__0 )
            {
             before(grammarAccess.getEqualityAccess().getGroup()); 
            // InternalFortXTrans.g:808:3: ( rule__Equality__Group__0 )
            // InternalFortXTrans.g:808:4: rule__Equality__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Equality__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getEqualityAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleEquality"


    // $ANTLR start "entryRuleComparison"
    // InternalFortXTrans.g:817:1: entryRuleComparison : ruleComparison EOF ;
    public final void entryRuleComparison() throws RecognitionException {
        try {
            // InternalFortXTrans.g:818:1: ( ruleComparison EOF )
            // InternalFortXTrans.g:819:1: ruleComparison EOF
            {
             before(grammarAccess.getComparisonRule()); 
            pushFollow(FOLLOW_1);
            ruleComparison();

            state._fsp--;

             after(grammarAccess.getComparisonRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleComparison"


    // $ANTLR start "ruleComparison"
    // InternalFortXTrans.g:826:1: ruleComparison : ( ( rule__Comparison__Group__0 ) ) ;
    public final void ruleComparison() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:830:2: ( ( ( rule__Comparison__Group__0 ) ) )
            // InternalFortXTrans.g:831:2: ( ( rule__Comparison__Group__0 ) )
            {
            // InternalFortXTrans.g:831:2: ( ( rule__Comparison__Group__0 ) )
            // InternalFortXTrans.g:832:3: ( rule__Comparison__Group__0 )
            {
             before(grammarAccess.getComparisonAccess().getGroup()); 
            // InternalFortXTrans.g:833:3: ( rule__Comparison__Group__0 )
            // InternalFortXTrans.g:833:4: rule__Comparison__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Comparison__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getComparisonAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleComparison"


    // $ANTLR start "entryRuleAddExpr"
    // InternalFortXTrans.g:842:1: entryRuleAddExpr : ruleAddExpr EOF ;
    public final void entryRuleAddExpr() throws RecognitionException {
        try {
            // InternalFortXTrans.g:843:1: ( ruleAddExpr EOF )
            // InternalFortXTrans.g:844:1: ruleAddExpr EOF
            {
             before(grammarAccess.getAddExprRule()); 
            pushFollow(FOLLOW_1);
            ruleAddExpr();

            state._fsp--;

             after(grammarAccess.getAddExprRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAddExpr"


    // $ANTLR start "ruleAddExpr"
    // InternalFortXTrans.g:851:1: ruleAddExpr : ( ( rule__AddExpr__Group__0 ) ) ;
    public final void ruleAddExpr() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:855:2: ( ( ( rule__AddExpr__Group__0 ) ) )
            // InternalFortXTrans.g:856:2: ( ( rule__AddExpr__Group__0 ) )
            {
            // InternalFortXTrans.g:856:2: ( ( rule__AddExpr__Group__0 ) )
            // InternalFortXTrans.g:857:3: ( rule__AddExpr__Group__0 )
            {
             before(grammarAccess.getAddExprAccess().getGroup()); 
            // InternalFortXTrans.g:858:3: ( rule__AddExpr__Group__0 )
            // InternalFortXTrans.g:858:4: rule__AddExpr__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__AddExpr__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getAddExprAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAddExpr"


    // $ANTLR start "entryRuleSubExpr"
    // InternalFortXTrans.g:867:1: entryRuleSubExpr : ruleSubExpr EOF ;
    public final void entryRuleSubExpr() throws RecognitionException {
        try {
            // InternalFortXTrans.g:868:1: ( ruleSubExpr EOF )
            // InternalFortXTrans.g:869:1: ruleSubExpr EOF
            {
             before(grammarAccess.getSubExprRule()); 
            pushFollow(FOLLOW_1);
            ruleSubExpr();

            state._fsp--;

             after(grammarAccess.getSubExprRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSubExpr"


    // $ANTLR start "ruleSubExpr"
    // InternalFortXTrans.g:876:1: ruleSubExpr : ( ( rule__SubExpr__Group__0 ) ) ;
    public final void ruleSubExpr() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:880:2: ( ( ( rule__SubExpr__Group__0 ) ) )
            // InternalFortXTrans.g:881:2: ( ( rule__SubExpr__Group__0 ) )
            {
            // InternalFortXTrans.g:881:2: ( ( rule__SubExpr__Group__0 ) )
            // InternalFortXTrans.g:882:3: ( rule__SubExpr__Group__0 )
            {
             before(grammarAccess.getSubExprAccess().getGroup()); 
            // InternalFortXTrans.g:883:3: ( rule__SubExpr__Group__0 )
            // InternalFortXTrans.g:883:4: rule__SubExpr__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__SubExpr__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getSubExprAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSubExpr"


    // $ANTLR start "entryRuleDivExpr"
    // InternalFortXTrans.g:892:1: entryRuleDivExpr : ruleDivExpr EOF ;
    public final void entryRuleDivExpr() throws RecognitionException {
        try {
            // InternalFortXTrans.g:893:1: ( ruleDivExpr EOF )
            // InternalFortXTrans.g:894:1: ruleDivExpr EOF
            {
             before(grammarAccess.getDivExprRule()); 
            pushFollow(FOLLOW_1);
            ruleDivExpr();

            state._fsp--;

             after(grammarAccess.getDivExprRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDivExpr"


    // $ANTLR start "ruleDivExpr"
    // InternalFortXTrans.g:901:1: ruleDivExpr : ( ( rule__DivExpr__Group__0 ) ) ;
    public final void ruleDivExpr() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:905:2: ( ( ( rule__DivExpr__Group__0 ) ) )
            // InternalFortXTrans.g:906:2: ( ( rule__DivExpr__Group__0 ) )
            {
            // InternalFortXTrans.g:906:2: ( ( rule__DivExpr__Group__0 ) )
            // InternalFortXTrans.g:907:3: ( rule__DivExpr__Group__0 )
            {
             before(grammarAccess.getDivExprAccess().getGroup()); 
            // InternalFortXTrans.g:908:3: ( rule__DivExpr__Group__0 )
            // InternalFortXTrans.g:908:4: rule__DivExpr__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__DivExpr__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getDivExprAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDivExpr"


    // $ANTLR start "entryRuleMultExpr"
    // InternalFortXTrans.g:917:1: entryRuleMultExpr : ruleMultExpr EOF ;
    public final void entryRuleMultExpr() throws RecognitionException {
        try {
            // InternalFortXTrans.g:918:1: ( ruleMultExpr EOF )
            // InternalFortXTrans.g:919:1: ruleMultExpr EOF
            {
             before(grammarAccess.getMultExprRule()); 
            pushFollow(FOLLOW_1);
            ruleMultExpr();

            state._fsp--;

             after(grammarAccess.getMultExprRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleMultExpr"


    // $ANTLR start "ruleMultExpr"
    // InternalFortXTrans.g:926:1: ruleMultExpr : ( ( rule__MultExpr__Group__0 ) ) ;
    public final void ruleMultExpr() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:930:2: ( ( ( rule__MultExpr__Group__0 ) ) )
            // InternalFortXTrans.g:931:2: ( ( rule__MultExpr__Group__0 ) )
            {
            // InternalFortXTrans.g:931:2: ( ( rule__MultExpr__Group__0 ) )
            // InternalFortXTrans.g:932:3: ( rule__MultExpr__Group__0 )
            {
             before(grammarAccess.getMultExprAccess().getGroup()); 
            // InternalFortXTrans.g:933:3: ( rule__MultExpr__Group__0 )
            // InternalFortXTrans.g:933:4: rule__MultExpr__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__MultExpr__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getMultExprAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleMultExpr"


    // $ANTLR start "entryRuleExponentExpr"
    // InternalFortXTrans.g:942:1: entryRuleExponentExpr : ruleExponentExpr EOF ;
    public final void entryRuleExponentExpr() throws RecognitionException {
        try {
            // InternalFortXTrans.g:943:1: ( ruleExponentExpr EOF )
            // InternalFortXTrans.g:944:1: ruleExponentExpr EOF
            {
             before(grammarAccess.getExponentExprRule()); 
            pushFollow(FOLLOW_1);
            ruleExponentExpr();

            state._fsp--;

             after(grammarAccess.getExponentExprRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleExponentExpr"


    // $ANTLR start "ruleExponentExpr"
    // InternalFortXTrans.g:951:1: ruleExponentExpr : ( ( rule__ExponentExpr__Group__0 ) ) ;
    public final void ruleExponentExpr() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:955:2: ( ( ( rule__ExponentExpr__Group__0 ) ) )
            // InternalFortXTrans.g:956:2: ( ( rule__ExponentExpr__Group__0 ) )
            {
            // InternalFortXTrans.g:956:2: ( ( rule__ExponentExpr__Group__0 ) )
            // InternalFortXTrans.g:957:3: ( rule__ExponentExpr__Group__0 )
            {
             before(grammarAccess.getExponentExprAccess().getGroup()); 
            // InternalFortXTrans.g:958:3: ( rule__ExponentExpr__Group__0 )
            // InternalFortXTrans.g:958:4: rule__ExponentExpr__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__ExponentExpr__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getExponentExprAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleExponentExpr"


    // $ANTLR start "entryRulePrimary"
    // InternalFortXTrans.g:967:1: entryRulePrimary : rulePrimary EOF ;
    public final void entryRulePrimary() throws RecognitionException {
        try {
            // InternalFortXTrans.g:968:1: ( rulePrimary EOF )
            // InternalFortXTrans.g:969:1: rulePrimary EOF
            {
             before(grammarAccess.getPrimaryRule()); 
            pushFollow(FOLLOW_1);
            rulePrimary();

            state._fsp--;

             after(grammarAccess.getPrimaryRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulePrimary"


    // $ANTLR start "rulePrimary"
    // InternalFortXTrans.g:976:1: rulePrimary : ( ( rule__Primary__Alternatives ) ) ;
    public final void rulePrimary() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:980:2: ( ( ( rule__Primary__Alternatives ) ) )
            // InternalFortXTrans.g:981:2: ( ( rule__Primary__Alternatives ) )
            {
            // InternalFortXTrans.g:981:2: ( ( rule__Primary__Alternatives ) )
            // InternalFortXTrans.g:982:3: ( rule__Primary__Alternatives )
            {
             before(grammarAccess.getPrimaryAccess().getAlternatives()); 
            // InternalFortXTrans.g:983:3: ( rule__Primary__Alternatives )
            // InternalFortXTrans.g:983:4: rule__Primary__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__Primary__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getPrimaryAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePrimary"


    // $ANTLR start "entryRuleExprList"
    // InternalFortXTrans.g:992:1: entryRuleExprList : ruleExprList EOF ;
    public final void entryRuleExprList() throws RecognitionException {
        try {
            // InternalFortXTrans.g:993:1: ( ruleExprList EOF )
            // InternalFortXTrans.g:994:1: ruleExprList EOF
            {
             before(grammarAccess.getExprListRule()); 
            pushFollow(FOLLOW_1);
            ruleExprList();

            state._fsp--;

             after(grammarAccess.getExprListRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleExprList"


    // $ANTLR start "ruleExprList"
    // InternalFortXTrans.g:1001:1: ruleExprList : ( ( rule__ExprList__Group__0 ) ) ;
    public final void ruleExprList() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1005:2: ( ( ( rule__ExprList__Group__0 ) ) )
            // InternalFortXTrans.g:1006:2: ( ( rule__ExprList__Group__0 ) )
            {
            // InternalFortXTrans.g:1006:2: ( ( rule__ExprList__Group__0 ) )
            // InternalFortXTrans.g:1007:3: ( rule__ExprList__Group__0 )
            {
             before(grammarAccess.getExprListAccess().getGroup()); 
            // InternalFortXTrans.g:1008:3: ( rule__ExprList__Group__0 )
            // InternalFortXTrans.g:1008:4: rule__ExprList__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__ExprList__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getExprListAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleExprList"


    // $ANTLR start "entryRuleExprTail"
    // InternalFortXTrans.g:1017:1: entryRuleExprTail : ruleExprTail EOF ;
    public final void entryRuleExprTail() throws RecognitionException {
        try {
            // InternalFortXTrans.g:1018:1: ( ruleExprTail EOF )
            // InternalFortXTrans.g:1019:1: ruleExprTail EOF
            {
             before(grammarAccess.getExprTailRule()); 
            pushFollow(FOLLOW_1);
            ruleExprTail();

            state._fsp--;

             after(grammarAccess.getExprTailRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleExprTail"


    // $ANTLR start "ruleExprTail"
    // InternalFortXTrans.g:1026:1: ruleExprTail : ( ( rule__ExprTail__Group__0 ) ) ;
    public final void ruleExprTail() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1030:2: ( ( ( rule__ExprTail__Group__0 ) ) )
            // InternalFortXTrans.g:1031:2: ( ( rule__ExprTail__Group__0 ) )
            {
            // InternalFortXTrans.g:1031:2: ( ( rule__ExprTail__Group__0 ) )
            // InternalFortXTrans.g:1032:3: ( rule__ExprTail__Group__0 )
            {
             before(grammarAccess.getExprTailAccess().getGroup()); 
            // InternalFortXTrans.g:1033:3: ( rule__ExprTail__Group__0 )
            // InternalFortXTrans.g:1033:4: rule__ExprTail__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__ExprTail__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getExprTailAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleExprTail"


    // $ANTLR start "entryRuleDelimitedExpr"
    // InternalFortXTrans.g:1042:1: entryRuleDelimitedExpr : ruleDelimitedExpr EOF ;
    public final void entryRuleDelimitedExpr() throws RecognitionException {
        try {
            // InternalFortXTrans.g:1043:1: ( ruleDelimitedExpr EOF )
            // InternalFortXTrans.g:1044:1: ruleDelimitedExpr EOF
            {
             before(grammarAccess.getDelimitedExprRule()); 
            pushFollow(FOLLOW_1);
            ruleDelimitedExpr();

            state._fsp--;

             after(grammarAccess.getDelimitedExprRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDelimitedExpr"


    // $ANTLR start "ruleDelimitedExpr"
    // InternalFortXTrans.g:1051:1: ruleDelimitedExpr : ( ( rule__DelimitedExpr__Alternatives ) ) ;
    public final void ruleDelimitedExpr() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1055:2: ( ( ( rule__DelimitedExpr__Alternatives ) ) )
            // InternalFortXTrans.g:1056:2: ( ( rule__DelimitedExpr__Alternatives ) )
            {
            // InternalFortXTrans.g:1056:2: ( ( rule__DelimitedExpr__Alternatives ) )
            // InternalFortXTrans.g:1057:3: ( rule__DelimitedExpr__Alternatives )
            {
             before(grammarAccess.getDelimitedExprAccess().getAlternatives()); 
            // InternalFortXTrans.g:1058:3: ( rule__DelimitedExpr__Alternatives )
            // InternalFortXTrans.g:1058:4: rule__DelimitedExpr__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__DelimitedExpr__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getDelimitedExprAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDelimitedExpr"


    // $ANTLR start "entryRuleElifs"
    // InternalFortXTrans.g:1067:1: entryRuleElifs : ruleElifs EOF ;
    public final void entryRuleElifs() throws RecognitionException {
        try {
            // InternalFortXTrans.g:1068:1: ( ruleElifs EOF )
            // InternalFortXTrans.g:1069:1: ruleElifs EOF
            {
             before(grammarAccess.getElifsRule()); 
            pushFollow(FOLLOW_1);
            ruleElifs();

            state._fsp--;

             after(grammarAccess.getElifsRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleElifs"


    // $ANTLR start "ruleElifs"
    // InternalFortXTrans.g:1076:1: ruleElifs : ( ( rule__Elifs__Group__0 ) ) ;
    public final void ruleElifs() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1080:2: ( ( ( rule__Elifs__Group__0 ) ) )
            // InternalFortXTrans.g:1081:2: ( ( rule__Elifs__Group__0 ) )
            {
            // InternalFortXTrans.g:1081:2: ( ( rule__Elifs__Group__0 ) )
            // InternalFortXTrans.g:1082:3: ( rule__Elifs__Group__0 )
            {
             before(grammarAccess.getElifsAccess().getGroup()); 
            // InternalFortXTrans.g:1083:3: ( rule__Elifs__Group__0 )
            // InternalFortXTrans.g:1083:4: rule__Elifs__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Elifs__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getElifsAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleElifs"


    // $ANTLR start "entryRuleElif"
    // InternalFortXTrans.g:1092:1: entryRuleElif : ruleElif EOF ;
    public final void entryRuleElif() throws RecognitionException {
        try {
            // InternalFortXTrans.g:1093:1: ( ruleElif EOF )
            // InternalFortXTrans.g:1094:1: ruleElif EOF
            {
             before(grammarAccess.getElifRule()); 
            pushFollow(FOLLOW_1);
            ruleElif();

            state._fsp--;

             after(grammarAccess.getElifRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleElif"


    // $ANTLR start "ruleElif"
    // InternalFortXTrans.g:1101:1: ruleElif : ( ( rule__Elif__Group__0 ) ) ;
    public final void ruleElif() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1105:2: ( ( ( rule__Elif__Group__0 ) ) )
            // InternalFortXTrans.g:1106:2: ( ( rule__Elif__Group__0 ) )
            {
            // InternalFortXTrans.g:1106:2: ( ( rule__Elif__Group__0 ) )
            // InternalFortXTrans.g:1107:3: ( rule__Elif__Group__0 )
            {
             before(grammarAccess.getElifAccess().getGroup()); 
            // InternalFortXTrans.g:1108:3: ( rule__Elif__Group__0 )
            // InternalFortXTrans.g:1108:4: rule__Elif__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Elif__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getElifAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleElif"


    // $ANTLR start "entryRuleElse"
    // InternalFortXTrans.g:1117:1: entryRuleElse : ruleElse EOF ;
    public final void entryRuleElse() throws RecognitionException {
        try {
            // InternalFortXTrans.g:1118:1: ( ruleElse EOF )
            // InternalFortXTrans.g:1119:1: ruleElse EOF
            {
             before(grammarAccess.getElseRule()); 
            pushFollow(FOLLOW_1);
            ruleElse();

            state._fsp--;

             after(grammarAccess.getElseRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleElse"


    // $ANTLR start "ruleElse"
    // InternalFortXTrans.g:1126:1: ruleElse : ( ( rule__Else__Group__0 ) ) ;
    public final void ruleElse() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1130:2: ( ( ( rule__Else__Group__0 ) ) )
            // InternalFortXTrans.g:1131:2: ( ( rule__Else__Group__0 ) )
            {
            // InternalFortXTrans.g:1131:2: ( ( rule__Else__Group__0 ) )
            // InternalFortXTrans.g:1132:3: ( rule__Else__Group__0 )
            {
             before(grammarAccess.getElseAccess().getGroup()); 
            // InternalFortXTrans.g:1133:3: ( rule__Else__Group__0 )
            // InternalFortXTrans.g:1133:4: rule__Else__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Else__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getElseAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleElse"


    // $ANTLR start "entryRuleGenerators"
    // InternalFortXTrans.g:1142:1: entryRuleGenerators : ruleGenerators EOF ;
    public final void entryRuleGenerators() throws RecognitionException {
        try {
            // InternalFortXTrans.g:1143:1: ( ruleGenerators EOF )
            // InternalFortXTrans.g:1144:1: ruleGenerators EOF
            {
             before(grammarAccess.getGeneratorsRule()); 
            pushFollow(FOLLOW_1);
            ruleGenerators();

            state._fsp--;

             after(grammarAccess.getGeneratorsRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleGenerators"


    // $ANTLR start "ruleGenerators"
    // InternalFortXTrans.g:1151:1: ruleGenerators : ( ( rule__Generators__Group__0 ) ) ;
    public final void ruleGenerators() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1155:2: ( ( ( rule__Generators__Group__0 ) ) )
            // InternalFortXTrans.g:1156:2: ( ( rule__Generators__Group__0 ) )
            {
            // InternalFortXTrans.g:1156:2: ( ( rule__Generators__Group__0 ) )
            // InternalFortXTrans.g:1157:3: ( rule__Generators__Group__0 )
            {
             before(grammarAccess.getGeneratorsAccess().getGroup()); 
            // InternalFortXTrans.g:1158:3: ( rule__Generators__Group__0 )
            // InternalFortXTrans.g:1158:4: rule__Generators__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Generators__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getGeneratorsAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleGenerators"


    // $ANTLR start "entryRuleBinding"
    // InternalFortXTrans.g:1167:1: entryRuleBinding : ruleBinding EOF ;
    public final void entryRuleBinding() throws RecognitionException {
        try {
            // InternalFortXTrans.g:1168:1: ( ruleBinding EOF )
            // InternalFortXTrans.g:1169:1: ruleBinding EOF
            {
             before(grammarAccess.getBindingRule()); 
            pushFollow(FOLLOW_1);
            ruleBinding();

            state._fsp--;

             after(grammarAccess.getBindingRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleBinding"


    // $ANTLR start "ruleBinding"
    // InternalFortXTrans.g:1176:1: ruleBinding : ( ( rule__Binding__Alternatives ) ) ;
    public final void ruleBinding() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1180:2: ( ( ( rule__Binding__Alternatives ) ) )
            // InternalFortXTrans.g:1181:2: ( ( rule__Binding__Alternatives ) )
            {
            // InternalFortXTrans.g:1181:2: ( ( rule__Binding__Alternatives ) )
            // InternalFortXTrans.g:1182:3: ( rule__Binding__Alternatives )
            {
             before(grammarAccess.getBindingAccess().getAlternatives()); 
            // InternalFortXTrans.g:1183:3: ( rule__Binding__Alternatives )
            // InternalFortXTrans.g:1183:4: rule__Binding__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__Binding__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getBindingAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleBinding"


    // $ANTLR start "entryRuleGenSource"
    // InternalFortXTrans.g:1192:1: entryRuleGenSource : ruleGenSource EOF ;
    public final void entryRuleGenSource() throws RecognitionException {
        try {
            // InternalFortXTrans.g:1193:1: ( ruleGenSource EOF )
            // InternalFortXTrans.g:1194:1: ruleGenSource EOF
            {
             before(grammarAccess.getGenSourceRule()); 
            pushFollow(FOLLOW_1);
            ruleGenSource();

            state._fsp--;

             after(grammarAccess.getGenSourceRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleGenSource"


    // $ANTLR start "ruleGenSource"
    // InternalFortXTrans.g:1201:1: ruleGenSource : ( ( rule__GenSource__Group__0 ) ) ;
    public final void ruleGenSource() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1205:2: ( ( ( rule__GenSource__Group__0 ) ) )
            // InternalFortXTrans.g:1206:2: ( ( rule__GenSource__Group__0 ) )
            {
            // InternalFortXTrans.g:1206:2: ( ( rule__GenSource__Group__0 ) )
            // InternalFortXTrans.g:1207:3: ( rule__GenSource__Group__0 )
            {
             before(grammarAccess.getGenSourceAccess().getGroup()); 
            // InternalFortXTrans.g:1208:3: ( rule__GenSource__Group__0 )
            // InternalFortXTrans.g:1208:4: rule__GenSource__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__GenSource__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getGenSourceAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleGenSource"


    // $ANTLR start "entryRuleGenClause"
    // InternalFortXTrans.g:1217:1: entryRuleGenClause : ruleGenClause EOF ;
    public final void entryRuleGenClause() throws RecognitionException {
        try {
            // InternalFortXTrans.g:1218:1: ( ruleGenClause EOF )
            // InternalFortXTrans.g:1219:1: ruleGenClause EOF
            {
             before(grammarAccess.getGenClauseRule()); 
            pushFollow(FOLLOW_1);
            ruleGenClause();

            state._fsp--;

             after(grammarAccess.getGenClauseRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleGenClause"


    // $ANTLR start "ruleGenClause"
    // InternalFortXTrans.g:1226:1: ruleGenClause : ( ( rule__GenClause__Alternatives ) ) ;
    public final void ruleGenClause() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1230:2: ( ( ( rule__GenClause__Alternatives ) ) )
            // InternalFortXTrans.g:1231:2: ( ( rule__GenClause__Alternatives ) )
            {
            // InternalFortXTrans.g:1231:2: ( ( rule__GenClause__Alternatives ) )
            // InternalFortXTrans.g:1232:3: ( rule__GenClause__Alternatives )
            {
             before(grammarAccess.getGenClauseAccess().getAlternatives()); 
            // InternalFortXTrans.g:1233:3: ( rule__GenClause__Alternatives )
            // InternalFortXTrans.g:1233:4: rule__GenClause__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__GenClause__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getGenClauseAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleGenClause"


    // $ANTLR start "entryRuleBlockElems"
    // InternalFortXTrans.g:1242:1: entryRuleBlockElems : ruleBlockElems EOF ;
    public final void entryRuleBlockElems() throws RecognitionException {
        try {
            // InternalFortXTrans.g:1243:1: ( ruleBlockElems EOF )
            // InternalFortXTrans.g:1244:1: ruleBlockElems EOF
            {
             before(grammarAccess.getBlockElemsRule()); 
            pushFollow(FOLLOW_1);
            ruleBlockElems();

            state._fsp--;

             after(grammarAccess.getBlockElemsRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleBlockElems"


    // $ANTLR start "ruleBlockElems"
    // InternalFortXTrans.g:1251:1: ruleBlockElems : ( ( rule__BlockElems__Group__0 ) ) ;
    public final void ruleBlockElems() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1255:2: ( ( ( rule__BlockElems__Group__0 ) ) )
            // InternalFortXTrans.g:1256:2: ( ( rule__BlockElems__Group__0 ) )
            {
            // InternalFortXTrans.g:1256:2: ( ( rule__BlockElems__Group__0 ) )
            // InternalFortXTrans.g:1257:3: ( rule__BlockElems__Group__0 )
            {
             before(grammarAccess.getBlockElemsAccess().getGroup()); 
            // InternalFortXTrans.g:1258:3: ( rule__BlockElems__Group__0 )
            // InternalFortXTrans.g:1258:4: rule__BlockElems__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__BlockElems__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getBlockElemsAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleBlockElems"


    // $ANTLR start "entryRuleBlockElem"
    // InternalFortXTrans.g:1267:1: entryRuleBlockElem : ruleBlockElem EOF ;
    public final void entryRuleBlockElem() throws RecognitionException {
        try {
            // InternalFortXTrans.g:1268:1: ( ruleBlockElem EOF )
            // InternalFortXTrans.g:1269:1: ruleBlockElem EOF
            {
             before(grammarAccess.getBlockElemRule()); 
            pushFollow(FOLLOW_1);
            ruleBlockElem();

            state._fsp--;

             after(grammarAccess.getBlockElemRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleBlockElem"


    // $ANTLR start "ruleBlockElem"
    // InternalFortXTrans.g:1276:1: ruleBlockElem : ( ( rule__BlockElem__StAssignment ) ) ;
    public final void ruleBlockElem() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1280:2: ( ( ( rule__BlockElem__StAssignment ) ) )
            // InternalFortXTrans.g:1281:2: ( ( rule__BlockElem__StAssignment ) )
            {
            // InternalFortXTrans.g:1281:2: ( ( rule__BlockElem__StAssignment ) )
            // InternalFortXTrans.g:1282:3: ( rule__BlockElem__StAssignment )
            {
             before(grammarAccess.getBlockElemAccess().getStAssignment()); 
            // InternalFortXTrans.g:1283:3: ( rule__BlockElem__StAssignment )
            // InternalFortXTrans.g:1283:4: rule__BlockElem__StAssignment
            {
            pushFollow(FOLLOW_2);
            rule__BlockElem__StAssignment();

            state._fsp--;


            }

             after(grammarAccess.getBlockElemAccess().getStAssignment()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleBlockElem"


    // $ANTLR start "entryRuleDo"
    // InternalFortXTrans.g:1292:1: entryRuleDo : ruleDo EOF ;
    public final void entryRuleDo() throws RecognitionException {
        try {
            // InternalFortXTrans.g:1293:1: ( ruleDo EOF )
            // InternalFortXTrans.g:1294:1: ruleDo EOF
            {
             before(grammarAccess.getDoRule()); 
            pushFollow(FOLLOW_1);
            ruleDo();

            state._fsp--;

             after(grammarAccess.getDoRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDo"


    // $ANTLR start "ruleDo"
    // InternalFortXTrans.g:1301:1: ruleDo : ( ( rule__Do__Group__0 ) ) ;
    public final void ruleDo() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1305:2: ( ( ( rule__Do__Group__0 ) ) )
            // InternalFortXTrans.g:1306:2: ( ( rule__Do__Group__0 ) )
            {
            // InternalFortXTrans.g:1306:2: ( ( rule__Do__Group__0 ) )
            // InternalFortXTrans.g:1307:3: ( rule__Do__Group__0 )
            {
             before(grammarAccess.getDoAccess().getGroup()); 
            // InternalFortXTrans.g:1308:3: ( rule__Do__Group__0 )
            // InternalFortXTrans.g:1308:4: rule__Do__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Do__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getDoAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDo"


    // $ANTLR start "entryRuleDoFront"
    // InternalFortXTrans.g:1317:1: entryRuleDoFront : ruleDoFront EOF ;
    public final void entryRuleDoFront() throws RecognitionException {
        try {
            // InternalFortXTrans.g:1318:1: ( ruleDoFront EOF )
            // InternalFortXTrans.g:1319:1: ruleDoFront EOF
            {
             before(grammarAccess.getDoFrontRule()); 
            pushFollow(FOLLOW_1);
            ruleDoFront();

            state._fsp--;

             after(grammarAccess.getDoFrontRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDoFront"


    // $ANTLR start "ruleDoFront"
    // InternalFortXTrans.g:1326:1: ruleDoFront : ( ( rule__DoFront__Group__0 ) ) ;
    public final void ruleDoFront() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1330:2: ( ( ( rule__DoFront__Group__0 ) ) )
            // InternalFortXTrans.g:1331:2: ( ( rule__DoFront__Group__0 ) )
            {
            // InternalFortXTrans.g:1331:2: ( ( rule__DoFront__Group__0 ) )
            // InternalFortXTrans.g:1332:3: ( rule__DoFront__Group__0 )
            {
             before(grammarAccess.getDoFrontAccess().getGroup()); 
            // InternalFortXTrans.g:1333:3: ( rule__DoFront__Group__0 )
            // InternalFortXTrans.g:1333:4: rule__DoFront__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__DoFront__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getDoFrontAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDoFront"


    // $ANTLR start "entryRuleIdOrTuple"
    // InternalFortXTrans.g:1342:1: entryRuleIdOrTuple : ruleIdOrTuple EOF ;
    public final void entryRuleIdOrTuple() throws RecognitionException {
        try {
            // InternalFortXTrans.g:1343:1: ( ruleIdOrTuple EOF )
            // InternalFortXTrans.g:1344:1: ruleIdOrTuple EOF
            {
             before(grammarAccess.getIdOrTupleRule()); 
            pushFollow(FOLLOW_1);
            ruleIdOrTuple();

            state._fsp--;

             after(grammarAccess.getIdOrTupleRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleIdOrTuple"


    // $ANTLR start "ruleIdOrTuple"
    // InternalFortXTrans.g:1351:1: ruleIdOrTuple : ( ( rule__IdOrTuple__Alternatives ) ) ;
    public final void ruleIdOrTuple() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1355:2: ( ( ( rule__IdOrTuple__Alternatives ) ) )
            // InternalFortXTrans.g:1356:2: ( ( rule__IdOrTuple__Alternatives ) )
            {
            // InternalFortXTrans.g:1356:2: ( ( rule__IdOrTuple__Alternatives ) )
            // InternalFortXTrans.g:1357:3: ( rule__IdOrTuple__Alternatives )
            {
             before(grammarAccess.getIdOrTupleAccess().getAlternatives()); 
            // InternalFortXTrans.g:1358:3: ( rule__IdOrTuple__Alternatives )
            // InternalFortXTrans.g:1358:4: rule__IdOrTuple__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__IdOrTuple__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getIdOrTupleAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleIdOrTuple"


    // $ANTLR start "entryRuleBindId"
    // InternalFortXTrans.g:1367:1: entryRuleBindId : ruleBindId EOF ;
    public final void entryRuleBindId() throws RecognitionException {
        try {
            // InternalFortXTrans.g:1368:1: ( ruleBindId EOF )
            // InternalFortXTrans.g:1369:1: ruleBindId EOF
            {
             before(grammarAccess.getBindIdRule()); 
            pushFollow(FOLLOW_1);
            ruleBindId();

            state._fsp--;

             after(grammarAccess.getBindIdRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleBindId"


    // $ANTLR start "ruleBindId"
    // InternalFortXTrans.g:1376:1: ruleBindId : ( ( rule__BindId__Alternatives ) ) ;
    public final void ruleBindId() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1380:2: ( ( ( rule__BindId__Alternatives ) ) )
            // InternalFortXTrans.g:1381:2: ( ( rule__BindId__Alternatives ) )
            {
            // InternalFortXTrans.g:1381:2: ( ( rule__BindId__Alternatives ) )
            // InternalFortXTrans.g:1382:3: ( rule__BindId__Alternatives )
            {
             before(grammarAccess.getBindIdAccess().getAlternatives()); 
            // InternalFortXTrans.g:1383:3: ( rule__BindId__Alternatives )
            // InternalFortXTrans.g:1383:4: rule__BindId__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__BindId__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getBindIdAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleBindId"


    // $ANTLR start "entryRuleIsType"
    // InternalFortXTrans.g:1392:1: entryRuleIsType : ruleIsType EOF ;
    public final void entryRuleIsType() throws RecognitionException {
        try {
            // InternalFortXTrans.g:1393:1: ( ruleIsType EOF )
            // InternalFortXTrans.g:1394:1: ruleIsType EOF
            {
             before(grammarAccess.getIsTypeRule()); 
            pushFollow(FOLLOW_1);
            ruleIsType();

            state._fsp--;

             after(grammarAccess.getIsTypeRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleIsType"


    // $ANTLR start "ruleIsType"
    // InternalFortXTrans.g:1401:1: ruleIsType : ( ( rule__IsType__Group__0 ) ) ;
    public final void ruleIsType() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1405:2: ( ( ( rule__IsType__Group__0 ) ) )
            // InternalFortXTrans.g:1406:2: ( ( rule__IsType__Group__0 ) )
            {
            // InternalFortXTrans.g:1406:2: ( ( rule__IsType__Group__0 ) )
            // InternalFortXTrans.g:1407:3: ( rule__IsType__Group__0 )
            {
             before(grammarAccess.getIsTypeAccess().getGroup()); 
            // InternalFortXTrans.g:1408:3: ( rule__IsType__Group__0 )
            // InternalFortXTrans.g:1408:4: rule__IsType__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__IsType__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getIsTypeAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleIsType"


    // $ANTLR start "entryRuleFieldDecl"
    // InternalFortXTrans.g:1417:1: entryRuleFieldDecl : ruleFieldDecl EOF ;
    public final void entryRuleFieldDecl() throws RecognitionException {
        try {
            // InternalFortXTrans.g:1418:1: ( ruleFieldDecl EOF )
            // InternalFortXTrans.g:1419:1: ruleFieldDecl EOF
            {
             before(grammarAccess.getFieldDeclRule()); 
            pushFollow(FOLLOW_1);
            ruleFieldDecl();

            state._fsp--;

             after(grammarAccess.getFieldDeclRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleFieldDecl"


    // $ANTLR start "ruleFieldDecl"
    // InternalFortXTrans.g:1426:1: ruleFieldDecl : ( ( rule__FieldDecl__Alternatives ) ) ;
    public final void ruleFieldDecl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1430:2: ( ( ( rule__FieldDecl__Alternatives ) ) )
            // InternalFortXTrans.g:1431:2: ( ( rule__FieldDecl__Alternatives ) )
            {
            // InternalFortXTrans.g:1431:2: ( ( rule__FieldDecl__Alternatives ) )
            // InternalFortXTrans.g:1432:3: ( rule__FieldDecl__Alternatives )
            {
             before(grammarAccess.getFieldDeclAccess().getAlternatives()); 
            // InternalFortXTrans.g:1433:3: ( rule__FieldDecl__Alternatives )
            // InternalFortXTrans.g:1433:4: rule__FieldDecl__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__FieldDecl__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getFieldDeclAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFieldDecl"


    // $ANTLR start "entryRuleNoNewlineVarWTypes"
    // InternalFortXTrans.g:1442:1: entryRuleNoNewlineVarWTypes : ruleNoNewlineVarWTypes EOF ;
    public final void entryRuleNoNewlineVarWTypes() throws RecognitionException {
        try {
            // InternalFortXTrans.g:1443:1: ( ruleNoNewlineVarWTypes EOF )
            // InternalFortXTrans.g:1444:1: ruleNoNewlineVarWTypes EOF
            {
             before(grammarAccess.getNoNewlineVarWTypesRule()); 
            pushFollow(FOLLOW_1);
            ruleNoNewlineVarWTypes();

            state._fsp--;

             after(grammarAccess.getNoNewlineVarWTypesRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleNoNewlineVarWTypes"


    // $ANTLR start "ruleNoNewlineVarWTypes"
    // InternalFortXTrans.g:1451:1: ruleNoNewlineVarWTypes : ( ( rule__NoNewlineVarWTypes__Alternatives ) ) ;
    public final void ruleNoNewlineVarWTypes() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1455:2: ( ( ( rule__NoNewlineVarWTypes__Alternatives ) ) )
            // InternalFortXTrans.g:1456:2: ( ( rule__NoNewlineVarWTypes__Alternatives ) )
            {
            // InternalFortXTrans.g:1456:2: ( ( rule__NoNewlineVarWTypes__Alternatives ) )
            // InternalFortXTrans.g:1457:3: ( rule__NoNewlineVarWTypes__Alternatives )
            {
             before(grammarAccess.getNoNewlineVarWTypesAccess().getAlternatives()); 
            // InternalFortXTrans.g:1458:3: ( rule__NoNewlineVarWTypes__Alternatives )
            // InternalFortXTrans.g:1458:4: rule__NoNewlineVarWTypes__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__NoNewlineVarWTypes__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getNoNewlineVarWTypesAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleNoNewlineVarWTypes"


    // $ANTLR start "entryRuleNoNewlineVarWType"
    // InternalFortXTrans.g:1467:1: entryRuleNoNewlineVarWType : ruleNoNewlineVarWType EOF ;
    public final void entryRuleNoNewlineVarWType() throws RecognitionException {
        try {
            // InternalFortXTrans.g:1468:1: ( ruleNoNewlineVarWType EOF )
            // InternalFortXTrans.g:1469:1: ruleNoNewlineVarWType EOF
            {
             before(grammarAccess.getNoNewlineVarWTypeRule()); 
            pushFollow(FOLLOW_1);
            ruleNoNewlineVarWType();

            state._fsp--;

             after(grammarAccess.getNoNewlineVarWTypeRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleNoNewlineVarWType"


    // $ANTLR start "ruleNoNewlineVarWType"
    // InternalFortXTrans.g:1476:1: ruleNoNewlineVarWType : ( ( rule__NoNewlineVarWType__Group__0 ) ) ;
    public final void ruleNoNewlineVarWType() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1480:2: ( ( ( rule__NoNewlineVarWType__Group__0 ) ) )
            // InternalFortXTrans.g:1481:2: ( ( rule__NoNewlineVarWType__Group__0 ) )
            {
            // InternalFortXTrans.g:1481:2: ( ( rule__NoNewlineVarWType__Group__0 ) )
            // InternalFortXTrans.g:1482:3: ( rule__NoNewlineVarWType__Group__0 )
            {
             before(grammarAccess.getNoNewlineVarWTypeAccess().getGroup()); 
            // InternalFortXTrans.g:1483:3: ( rule__NoNewlineVarWType__Group__0 )
            // InternalFortXTrans.g:1483:4: rule__NoNewlineVarWType__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__NoNewlineVarWType__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getNoNewlineVarWTypeAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleNoNewlineVarWType"


    // $ANTLR start "entryRuleInitVal"
    // InternalFortXTrans.g:1492:1: entryRuleInitVal : ruleInitVal EOF ;
    public final void entryRuleInitVal() throws RecognitionException {
        try {
            // InternalFortXTrans.g:1493:1: ( ruleInitVal EOF )
            // InternalFortXTrans.g:1494:1: ruleInitVal EOF
            {
             before(grammarAccess.getInitValRule()); 
            pushFollow(FOLLOW_1);
            ruleInitVal();

            state._fsp--;

             after(grammarAccess.getInitValRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleInitVal"


    // $ANTLR start "ruleInitVal"
    // InternalFortXTrans.g:1501:1: ruleInitVal : ( ( rule__InitVal__Alternatives ) ) ;
    public final void ruleInitVal() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1505:2: ( ( ( rule__InitVal__Alternatives ) ) )
            // InternalFortXTrans.g:1506:2: ( ( rule__InitVal__Alternatives ) )
            {
            // InternalFortXTrans.g:1506:2: ( ( rule__InitVal__Alternatives ) )
            // InternalFortXTrans.g:1507:3: ( rule__InitVal__Alternatives )
            {
             before(grammarAccess.getInitValAccess().getAlternatives()); 
            // InternalFortXTrans.g:1508:3: ( rule__InitVal__Alternatives )
            // InternalFortXTrans.g:1508:4: rule__InitVal__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__InitVal__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getInitValAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleInitVal"


    // $ANTLR start "entryRuleLiteralTuple"
    // InternalFortXTrans.g:1517:1: entryRuleLiteralTuple : ruleLiteralTuple EOF ;
    public final void entryRuleLiteralTuple() throws RecognitionException {
        try {
            // InternalFortXTrans.g:1518:1: ( ruleLiteralTuple EOF )
            // InternalFortXTrans.g:1519:1: ruleLiteralTuple EOF
            {
             before(grammarAccess.getLiteralTupleRule()); 
            pushFollow(FOLLOW_1);
            ruleLiteralTuple();

            state._fsp--;

             after(grammarAccess.getLiteralTupleRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleLiteralTuple"


    // $ANTLR start "ruleLiteralTuple"
    // InternalFortXTrans.g:1526:1: ruleLiteralTuple : ( ( rule__LiteralTuple__Alternatives ) ) ;
    public final void ruleLiteralTuple() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1530:2: ( ( ( rule__LiteralTuple__Alternatives ) ) )
            // InternalFortXTrans.g:1531:2: ( ( rule__LiteralTuple__Alternatives ) )
            {
            // InternalFortXTrans.g:1531:2: ( ( rule__LiteralTuple__Alternatives ) )
            // InternalFortXTrans.g:1532:3: ( rule__LiteralTuple__Alternatives )
            {
             before(grammarAccess.getLiteralTupleAccess().getAlternatives()); 
            // InternalFortXTrans.g:1533:3: ( rule__LiteralTuple__Alternatives )
            // InternalFortXTrans.g:1533:4: rule__LiteralTuple__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__LiteralTuple__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getLiteralTupleAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleLiteralTuple"


    // $ANTLR start "entryRuleLiteralTup"
    // InternalFortXTrans.g:1542:1: entryRuleLiteralTup : ruleLiteralTup EOF ;
    public final void entryRuleLiteralTup() throws RecognitionException {
        try {
            // InternalFortXTrans.g:1543:1: ( ruleLiteralTup EOF )
            // InternalFortXTrans.g:1544:1: ruleLiteralTup EOF
            {
             before(grammarAccess.getLiteralTupRule()); 
            pushFollow(FOLLOW_1);
            ruleLiteralTup();

            state._fsp--;

             after(grammarAccess.getLiteralTupRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleLiteralTup"


    // $ANTLR start "ruleLiteralTup"
    // InternalFortXTrans.g:1551:1: ruleLiteralTup : ( ( rule__LiteralTup__Alternatives ) ) ;
    public final void ruleLiteralTup() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1555:2: ( ( ( rule__LiteralTup__Alternatives ) ) )
            // InternalFortXTrans.g:1556:2: ( ( rule__LiteralTup__Alternatives ) )
            {
            // InternalFortXTrans.g:1556:2: ( ( rule__LiteralTup__Alternatives ) )
            // InternalFortXTrans.g:1557:3: ( rule__LiteralTup__Alternatives )
            {
             before(grammarAccess.getLiteralTupAccess().getAlternatives()); 
            // InternalFortXTrans.g:1558:3: ( rule__LiteralTup__Alternatives )
            // InternalFortXTrans.g:1558:4: rule__LiteralTup__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__LiteralTup__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getLiteralTupAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleLiteralTup"


    // $ANTLR start "entryRuleLiteralList"
    // InternalFortXTrans.g:1567:1: entryRuleLiteralList : ruleLiteralList EOF ;
    public final void entryRuleLiteralList() throws RecognitionException {
        try {
            // InternalFortXTrans.g:1568:1: ( ruleLiteralList EOF )
            // InternalFortXTrans.g:1569:1: ruleLiteralList EOF
            {
             before(grammarAccess.getLiteralListRule()); 
            pushFollow(FOLLOW_1);
            ruleLiteralList();

            state._fsp--;

             after(grammarAccess.getLiteralListRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleLiteralList"


    // $ANTLR start "ruleLiteralList"
    // InternalFortXTrans.g:1576:1: ruleLiteralList : ( ( rule__LiteralList__Group__0 ) ) ;
    public final void ruleLiteralList() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1580:2: ( ( ( rule__LiteralList__Group__0 ) ) )
            // InternalFortXTrans.g:1581:2: ( ( rule__LiteralList__Group__0 ) )
            {
            // InternalFortXTrans.g:1581:2: ( ( rule__LiteralList__Group__0 ) )
            // InternalFortXTrans.g:1582:3: ( rule__LiteralList__Group__0 )
            {
             before(grammarAccess.getLiteralListAccess().getGroup()); 
            // InternalFortXTrans.g:1583:3: ( rule__LiteralList__Group__0 )
            // InternalFortXTrans.g:1583:4: rule__LiteralList__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__LiteralList__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getLiteralListAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleLiteralList"


    // $ANTLR start "entryRuleLiteral"
    // InternalFortXTrans.g:1592:1: entryRuleLiteral : ruleLiteral EOF ;
    public final void entryRuleLiteral() throws RecognitionException {
        try {
            // InternalFortXTrans.g:1593:1: ( ruleLiteral EOF )
            // InternalFortXTrans.g:1594:1: ruleLiteral EOF
            {
             before(grammarAccess.getLiteralRule()); 
            pushFollow(FOLLOW_1);
            ruleLiteral();

            state._fsp--;

             after(grammarAccess.getLiteralRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleLiteral"


    // $ANTLR start "ruleLiteral"
    // InternalFortXTrans.g:1601:1: ruleLiteral : ( ( rule__Literal__Alternatives ) ) ;
    public final void ruleLiteral() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1605:2: ( ( ( rule__Literal__Alternatives ) ) )
            // InternalFortXTrans.g:1606:2: ( ( rule__Literal__Alternatives ) )
            {
            // InternalFortXTrans.g:1606:2: ( ( rule__Literal__Alternatives ) )
            // InternalFortXTrans.g:1607:3: ( rule__Literal__Alternatives )
            {
             before(grammarAccess.getLiteralAccess().getAlternatives()); 
            // InternalFortXTrans.g:1608:3: ( rule__Literal__Alternatives )
            // InternalFortXTrans.g:1608:4: rule__Literal__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__Literal__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getLiteralAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleLiteral"


    // $ANTLR start "entryRuleLocalVarDecl"
    // InternalFortXTrans.g:1617:1: entryRuleLocalVarDecl : ruleLocalVarDecl EOF ;
    public final void entryRuleLocalVarDecl() throws RecognitionException {
        try {
            // InternalFortXTrans.g:1618:1: ( ruleLocalVarDecl EOF )
            // InternalFortXTrans.g:1619:1: ruleLocalVarDecl EOF
            {
             before(grammarAccess.getLocalVarDeclRule()); 
            pushFollow(FOLLOW_1);
            ruleLocalVarDecl();

            state._fsp--;

             after(grammarAccess.getLocalVarDeclRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleLocalVarDecl"


    // $ANTLR start "ruleLocalVarDecl"
    // InternalFortXTrans.g:1626:1: ruleLocalVarDecl : ( ( rule__LocalVarDecl__Alternatives ) ) ;
    public final void ruleLocalVarDecl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1630:2: ( ( ( rule__LocalVarDecl__Alternatives ) ) )
            // InternalFortXTrans.g:1631:2: ( ( rule__LocalVarDecl__Alternatives ) )
            {
            // InternalFortXTrans.g:1631:2: ( ( rule__LocalVarDecl__Alternatives ) )
            // InternalFortXTrans.g:1632:3: ( rule__LocalVarDecl__Alternatives )
            {
             before(grammarAccess.getLocalVarDeclAccess().getAlternatives()); 
            // InternalFortXTrans.g:1633:3: ( rule__LocalVarDecl__Alternatives )
            // InternalFortXTrans.g:1633:4: rule__LocalVarDecl__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__LocalVarDecl__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getLocalVarDeclAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleLocalVarDecl"


    // $ANTLR start "rule__Model__Alternatives"
    // InternalFortXTrans.g:1641:1: rule__Model__Alternatives : ( ( ruleComponent ) | ( ruleAPI ) );
    public final void rule__Model__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1645:1: ( ( ruleComponent ) | ( ruleAPI ) )
            int alt3=2;
            int LA3_0 = input.LA(1);

            if ( (LA3_0==27) ) {
                alt3=1;
            }
            else if ( (LA3_0==29) ) {
                alt3=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 3, 0, input);

                throw nvae;
            }
            switch (alt3) {
                case 1 :
                    // InternalFortXTrans.g:1646:2: ( ruleComponent )
                    {
                    // InternalFortXTrans.g:1646:2: ( ruleComponent )
                    // InternalFortXTrans.g:1647:3: ruleComponent
                    {
                     before(grammarAccess.getModelAccess().getComponentParserRuleCall_0()); 
                    pushFollow(FOLLOW_2);
                    ruleComponent();

                    state._fsp--;

                     after(grammarAccess.getModelAccess().getComponentParserRuleCall_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalFortXTrans.g:1652:2: ( ruleAPI )
                    {
                    // InternalFortXTrans.g:1652:2: ( ruleAPI )
                    // InternalFortXTrans.g:1653:3: ruleAPI
                    {
                     before(grammarAccess.getModelAccess().getAPIParserRuleCall_1()); 
                    pushFollow(FOLLOW_2);
                    ruleAPI();

                    state._fsp--;

                     after(grammarAccess.getModelAccess().getAPIParserRuleCall_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Model__Alternatives"


    // $ANTLR start "rule__Import__Alternatives"
    // InternalFortXTrans.g:1662:1: rule__Import__Alternatives : ( ( ( rule__Import__Group_0__0 ) ) | ( ( rule__Import__Group_1__0 ) ) );
    public final void rule__Import__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1666:1: ( ( ( rule__Import__Group_0__0 ) ) | ( ( rule__Import__Group_1__0 ) ) )
            int alt4=2;
            int LA4_0 = input.LA(1);

            if ( (LA4_0==53) ) {
                int LA4_1 = input.LA(2);

                if ( (LA4_1==RULE_ID) ) {
                    alt4=1;
                }
                else if ( (LA4_1==29) ) {
                    alt4=2;
                }
                else {
                    NoViableAltException nvae =
                        new NoViableAltException("", 4, 1, input);

                    throw nvae;
                }
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 4, 0, input);

                throw nvae;
            }
            switch (alt4) {
                case 1 :
                    // InternalFortXTrans.g:1667:2: ( ( rule__Import__Group_0__0 ) )
                    {
                    // InternalFortXTrans.g:1667:2: ( ( rule__Import__Group_0__0 ) )
                    // InternalFortXTrans.g:1668:3: ( rule__Import__Group_0__0 )
                    {
                     before(grammarAccess.getImportAccess().getGroup_0()); 
                    // InternalFortXTrans.g:1669:3: ( rule__Import__Group_0__0 )
                    // InternalFortXTrans.g:1669:4: rule__Import__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Import__Group_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getImportAccess().getGroup_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalFortXTrans.g:1673:2: ( ( rule__Import__Group_1__0 ) )
                    {
                    // InternalFortXTrans.g:1673:2: ( ( rule__Import__Group_1__0 ) )
                    // InternalFortXTrans.g:1674:3: ( rule__Import__Group_1__0 )
                    {
                     before(grammarAccess.getImportAccess().getGroup_1()); 
                    // InternalFortXTrans.g:1675:3: ( rule__Import__Group_1__0 )
                    // InternalFortXTrans.g:1675:4: rule__Import__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Import__Group_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getImportAccess().getGroup_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Import__Alternatives"


    // $ANTLR start "rule__Export__Alternatives"
    // InternalFortXTrans.g:1683:1: rule__Export__Alternatives : ( ( ( rule__Export__Group_0__0 ) ) | ( ( rule__Export__Group_1__0 ) ) );
    public final void rule__Export__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1687:1: ( ( ( rule__Export__Group_0__0 ) ) | ( ( rule__Export__Group_1__0 ) ) )
            int alt5=2;
            int LA5_0 = input.LA(1);

            if ( (LA5_0==54) ) {
                int LA5_1 = input.LA(2);

                if ( (LA5_1==RULE_ID) ) {
                    alt5=1;
                }
                else if ( (LA5_1==33) ) {
                    alt5=2;
                }
                else {
                    NoViableAltException nvae =
                        new NoViableAltException("", 5, 1, input);

                    throw nvae;
                }
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 5, 0, input);

                throw nvae;
            }
            switch (alt5) {
                case 1 :
                    // InternalFortXTrans.g:1688:2: ( ( rule__Export__Group_0__0 ) )
                    {
                    // InternalFortXTrans.g:1688:2: ( ( rule__Export__Group_0__0 ) )
                    // InternalFortXTrans.g:1689:3: ( rule__Export__Group_0__0 )
                    {
                     before(grammarAccess.getExportAccess().getGroup_0()); 
                    // InternalFortXTrans.g:1690:3: ( rule__Export__Group_0__0 )
                    // InternalFortXTrans.g:1690:4: rule__Export__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Export__Group_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getExportAccess().getGroup_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalFortXTrans.g:1694:2: ( ( rule__Export__Group_1__0 ) )
                    {
                    // InternalFortXTrans.g:1694:2: ( ( rule__Export__Group_1__0 ) )
                    // InternalFortXTrans.g:1695:3: ( rule__Export__Group_1__0 )
                    {
                     before(grammarAccess.getExportAccess().getGroup_1()); 
                    // InternalFortXTrans.g:1696:3: ( rule__Export__Group_1__0 )
                    // InternalFortXTrans.g:1696:4: rule__Export__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Export__Group_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getExportAccess().getGroup_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Export__Alternatives"


    // $ANTLR start "rule__ImportedNames__Alternatives"
    // InternalFortXTrans.g:1704:1: rule__ImportedNames__Alternatives : ( ( ( rule__ImportedNames__Group_0__0 ) ) | ( ( rule__ImportedNames__Group_1__0 ) ) | ( ( rule__ImportedNames__Group_2__0 ) ) );
    public final void rule__ImportedNames__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1708:1: ( ( ( rule__ImportedNames__Group_0__0 ) ) | ( ( rule__ImportedNames__Group_1__0 ) ) | ( ( rule__ImportedNames__Group_2__0 ) ) )
            int alt6=3;
            alt6 = dfa6.predict(input);
            switch (alt6) {
                case 1 :
                    // InternalFortXTrans.g:1709:2: ( ( rule__ImportedNames__Group_0__0 ) )
                    {
                    // InternalFortXTrans.g:1709:2: ( ( rule__ImportedNames__Group_0__0 ) )
                    // InternalFortXTrans.g:1710:3: ( rule__ImportedNames__Group_0__0 )
                    {
                     before(grammarAccess.getImportedNamesAccess().getGroup_0()); 
                    // InternalFortXTrans.g:1711:3: ( rule__ImportedNames__Group_0__0 )
                    // InternalFortXTrans.g:1711:4: rule__ImportedNames__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ImportedNames__Group_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getImportedNamesAccess().getGroup_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalFortXTrans.g:1715:2: ( ( rule__ImportedNames__Group_1__0 ) )
                    {
                    // InternalFortXTrans.g:1715:2: ( ( rule__ImportedNames__Group_1__0 ) )
                    // InternalFortXTrans.g:1716:3: ( rule__ImportedNames__Group_1__0 )
                    {
                     before(grammarAccess.getImportedNamesAccess().getGroup_1()); 
                    // InternalFortXTrans.g:1717:3: ( rule__ImportedNames__Group_1__0 )
                    // InternalFortXTrans.g:1717:4: rule__ImportedNames__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ImportedNames__Group_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getImportedNamesAccess().getGroup_1()); 

                    }


                    }
                    break;
                case 3 :
                    // InternalFortXTrans.g:1721:2: ( ( rule__ImportedNames__Group_2__0 ) )
                    {
                    // InternalFortXTrans.g:1721:2: ( ( rule__ImportedNames__Group_2__0 ) )
                    // InternalFortXTrans.g:1722:3: ( rule__ImportedNames__Group_2__0 )
                    {
                     before(grammarAccess.getImportedNamesAccess().getGroup_2()); 
                    // InternalFortXTrans.g:1723:3: ( rule__ImportedNames__Group_2__0 )
                    // InternalFortXTrans.g:1723:4: rule__ImportedNames__Group_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ImportedNames__Group_2__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getImportedNamesAccess().getGroup_2()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Alternatives"


    // $ANTLR start "rule__QualifiedName__Alternatives"
    // InternalFortXTrans.g:1731:1: rule__QualifiedName__Alternatives : ( ( ( rule__QualifiedName__Group_0__0 ) ) | ( ( rule__QualifiedName__Group_1__0 ) ) );
    public final void rule__QualifiedName__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1735:1: ( ( ( rule__QualifiedName__Group_0__0 ) ) | ( ( rule__QualifiedName__Group_1__0 ) ) )
            int alt7=2;
            int LA7_0 = input.LA(1);

            if ( (LA7_0==RULE_ID) ) {
                int LA7_1 = input.LA(2);

                if ( (LA7_1==EOF||(LA7_1>=RULE_DOTS && LA7_1<=RULE_STRING)||(LA7_1>=13 && LA7_1<=26)||LA7_1==28||(LA7_1>=30 && LA7_1<=31)||(LA7_1>=34 && LA7_1<=36)||(LA7_1>=38 && LA7_1<=47)||(LA7_1>=49 && LA7_1<=51)||(LA7_1>=53 && LA7_1<=54)||(LA7_1>=56 && LA7_1<=64)||(LA7_1>=66 && LA7_1<=68)) ) {
                    alt7=1;
                }
                else if ( (LA7_1==32) ) {
                    int LA7_3 = input.LA(3);

                    if ( (LA7_3==33) ) {
                        alt7=1;
                    }
                    else if ( (LA7_3==RULE_ID) ) {
                        alt7=2;
                    }
                    else {
                        NoViableAltException nvae =
                            new NoViableAltException("", 7, 3, input);

                        throw nvae;
                    }
                }
                else {
                    NoViableAltException nvae =
                        new NoViableAltException("", 7, 1, input);

                    throw nvae;
                }
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 7, 0, input);

                throw nvae;
            }
            switch (alt7) {
                case 1 :
                    // InternalFortXTrans.g:1736:2: ( ( rule__QualifiedName__Group_0__0 ) )
                    {
                    // InternalFortXTrans.g:1736:2: ( ( rule__QualifiedName__Group_0__0 ) )
                    // InternalFortXTrans.g:1737:3: ( rule__QualifiedName__Group_0__0 )
                    {
                     before(grammarAccess.getQualifiedNameAccess().getGroup_0()); 
                    // InternalFortXTrans.g:1738:3: ( rule__QualifiedName__Group_0__0 )
                    // InternalFortXTrans.g:1738:4: rule__QualifiedName__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__QualifiedName__Group_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getQualifiedNameAccess().getGroup_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalFortXTrans.g:1742:2: ( ( rule__QualifiedName__Group_1__0 ) )
                    {
                    // InternalFortXTrans.g:1742:2: ( ( rule__QualifiedName__Group_1__0 ) )
                    // InternalFortXTrans.g:1743:3: ( rule__QualifiedName__Group_1__0 )
                    {
                     before(grammarAccess.getQualifiedNameAccess().getGroup_1()); 
                    // InternalFortXTrans.g:1744:3: ( rule__QualifiedName__Group_1__0 )
                    // InternalFortXTrans.g:1744:4: rule__QualifiedName__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__QualifiedName__Group_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getQualifiedNameAccess().getGroup_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedName__Alternatives"


    // $ANTLR start "rule__Qualified__Alternatives"
    // InternalFortXTrans.g:1752:1: rule__Qualified__Alternatives : ( ( ruleQualifiedName ) | ( ruleQualifiedNameTuple ) );
    public final void rule__Qualified__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1756:1: ( ( ruleQualifiedName ) | ( ruleQualifiedNameTuple ) )
            int alt8=2;
            int LA8_0 = input.LA(1);

            if ( (LA8_0==RULE_ID) ) {
                alt8=1;
            }
            else if ( (LA8_0==35) ) {
                alt8=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 8, 0, input);

                throw nvae;
            }
            switch (alt8) {
                case 1 :
                    // InternalFortXTrans.g:1757:2: ( ruleQualifiedName )
                    {
                    // InternalFortXTrans.g:1757:2: ( ruleQualifiedName )
                    // InternalFortXTrans.g:1758:3: ruleQualifiedName
                    {
                     before(grammarAccess.getQualifiedAccess().getQualifiedNameParserRuleCall_0()); 
                    pushFollow(FOLLOW_2);
                    ruleQualifiedName();

                    state._fsp--;

                     after(grammarAccess.getQualifiedAccess().getQualifiedNameParserRuleCall_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalFortXTrans.g:1763:2: ( ruleQualifiedNameTuple )
                    {
                    // InternalFortXTrans.g:1763:2: ( ruleQualifiedNameTuple )
                    // InternalFortXTrans.g:1764:3: ruleQualifiedNameTuple
                    {
                     before(grammarAccess.getQualifiedAccess().getQualifiedNameTupleParserRuleCall_1()); 
                    pushFollow(FOLLOW_2);
                    ruleQualifiedNameTuple();

                    state._fsp--;

                     after(grammarAccess.getQualifiedAccess().getQualifiedNameTupleParserRuleCall_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Qualified__Alternatives"


    // $ANTLR start "rule__SimpleNames__Alternatives"
    // InternalFortXTrans.g:1773:1: rule__SimpleNames__Alternatives : ( ( ( rule__SimpleNames__NameListAssignment_0 ) ) | ( ( rule__SimpleNames__Group_1__0 ) ) );
    public final void rule__SimpleNames__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1777:1: ( ( ( rule__SimpleNames__NameListAssignment_0 ) ) | ( ( rule__SimpleNames__Group_1__0 ) ) )
            int alt9=2;
            int LA9_0 = input.LA(1);

            if ( (LA9_0==RULE_ID) ) {
                alt9=1;
            }
            else if ( (LA9_0==33) ) {
                alt9=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 9, 0, input);

                throw nvae;
            }
            switch (alt9) {
                case 1 :
                    // InternalFortXTrans.g:1778:2: ( ( rule__SimpleNames__NameListAssignment_0 ) )
                    {
                    // InternalFortXTrans.g:1778:2: ( ( rule__SimpleNames__NameListAssignment_0 ) )
                    // InternalFortXTrans.g:1779:3: ( rule__SimpleNames__NameListAssignment_0 )
                    {
                     before(grammarAccess.getSimpleNamesAccess().getNameListAssignment_0()); 
                    // InternalFortXTrans.g:1780:3: ( rule__SimpleNames__NameListAssignment_0 )
                    // InternalFortXTrans.g:1780:4: rule__SimpleNames__NameListAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__SimpleNames__NameListAssignment_0();

                    state._fsp--;


                    }

                     after(grammarAccess.getSimpleNamesAccess().getNameListAssignment_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalFortXTrans.g:1784:2: ( ( rule__SimpleNames__Group_1__0 ) )
                    {
                    // InternalFortXTrans.g:1784:2: ( ( rule__SimpleNames__Group_1__0 ) )
                    // InternalFortXTrans.g:1785:3: ( rule__SimpleNames__Group_1__0 )
                    {
                     before(grammarAccess.getSimpleNamesAccess().getGroup_1()); 
                    // InternalFortXTrans.g:1786:3: ( rule__SimpleNames__Group_1__0 )
                    // InternalFortXTrans.g:1786:4: rule__SimpleNames__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__SimpleNames__Group_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getSimpleNamesAccess().getGroup_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleNames__Alternatives"


    // $ANTLR start "rule__AliasedAPINames__Alternatives"
    // InternalFortXTrans.g:1794:1: rule__AliasedAPINames__Alternatives : ( ( ( rule__AliasedAPINames__NameListAssignment_0 ) ) | ( ( rule__AliasedAPINames__Group_1__0 ) ) );
    public final void rule__AliasedAPINames__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1798:1: ( ( ( rule__AliasedAPINames__NameListAssignment_0 ) ) | ( ( rule__AliasedAPINames__Group_1__0 ) ) )
            int alt10=2;
            int LA10_0 = input.LA(1);

            if ( (LA10_0==RULE_ID) ) {
                alt10=1;
            }
            else if ( (LA10_0==33) ) {
                alt10=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 10, 0, input);

                throw nvae;
            }
            switch (alt10) {
                case 1 :
                    // InternalFortXTrans.g:1799:2: ( ( rule__AliasedAPINames__NameListAssignment_0 ) )
                    {
                    // InternalFortXTrans.g:1799:2: ( ( rule__AliasedAPINames__NameListAssignment_0 ) )
                    // InternalFortXTrans.g:1800:3: ( rule__AliasedAPINames__NameListAssignment_0 )
                    {
                     before(grammarAccess.getAliasedAPINamesAccess().getNameListAssignment_0()); 
                    // InternalFortXTrans.g:1801:3: ( rule__AliasedAPINames__NameListAssignment_0 )
                    // InternalFortXTrans.g:1801:4: rule__AliasedAPINames__NameListAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__AliasedAPINames__NameListAssignment_0();

                    state._fsp--;


                    }

                     after(grammarAccess.getAliasedAPINamesAccess().getNameListAssignment_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalFortXTrans.g:1805:2: ( ( rule__AliasedAPINames__Group_1__0 ) )
                    {
                    // InternalFortXTrans.g:1805:2: ( ( rule__AliasedAPINames__Group_1__0 ) )
                    // InternalFortXTrans.g:1806:3: ( rule__AliasedAPINames__Group_1__0 )
                    {
                     before(grammarAccess.getAliasedAPINamesAccess().getGroup_1()); 
                    // InternalFortXTrans.g:1807:3: ( rule__AliasedAPINames__Group_1__0 )
                    // InternalFortXTrans.g:1807:4: rule__AliasedAPINames__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__AliasedAPINames__Group_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getAliasedAPINamesAccess().getGroup_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedAPINames__Alternatives"


    // $ANTLR start "rule__Decl__Alternatives"
    // InternalFortXTrans.g:1815:1: rule__Decl__Alternatives : ( ( ( rule__Decl__FunctionAssignment_0 ) ) | ( ( rule__Decl__FieldAssignment_1 ) ) );
    public final void rule__Decl__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1819:1: ( ( ( rule__Decl__FunctionAssignment_0 ) ) | ( ( rule__Decl__FieldAssignment_1 ) ) )
            int alt11=2;
            switch ( input.LA(1) ) {
            case 56:
                {
                switch ( input.LA(2) ) {
                case 35:
                case 67:
                case 68:
                    {
                    alt11=2;
                    }
                    break;
                case RULE_ID:
                    {
                    int LA11_3 = input.LA(3);

                    if ( (LA11_3==37||LA11_3==52) ) {
                        alt11=2;
                    }
                    else if ( (LA11_3==RULE_ID||LA11_3==35||LA11_3==67) ) {
                        alt11=1;
                    }
                    else {
                        NoViableAltException nvae =
                            new NoViableAltException("", 11, 3, input);

                        throw nvae;
                    }
                    }
                    break;
                case 56:
                case 57:
                case 58:
                case 59:
                    {
                    alt11=1;
                    }
                    break;
                default:
                    NoViableAltException nvae =
                        new NoViableAltException("", 11, 1, input);

                    throw nvae;
                }

                }
                break;
            case 57:
            case 58:
            case 59:
                {
                alt11=1;
                }
                break;
            case RULE_ID:
                {
                int LA11_3 = input.LA(2);

                if ( (LA11_3==37||LA11_3==52) ) {
                    alt11=2;
                }
                else if ( (LA11_3==RULE_ID||LA11_3==35||LA11_3==67) ) {
                    alt11=1;
                }
                else {
                    NoViableAltException nvae =
                        new NoViableAltException("", 11, 3, input);

                    throw nvae;
                }
                }
                break;
            case 35:
            case 67:
            case 68:
                {
                alt11=2;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 11, 0, input);

                throw nvae;
            }

            switch (alt11) {
                case 1 :
                    // InternalFortXTrans.g:1820:2: ( ( rule__Decl__FunctionAssignment_0 ) )
                    {
                    // InternalFortXTrans.g:1820:2: ( ( rule__Decl__FunctionAssignment_0 ) )
                    // InternalFortXTrans.g:1821:3: ( rule__Decl__FunctionAssignment_0 )
                    {
                     before(grammarAccess.getDeclAccess().getFunctionAssignment_0()); 
                    // InternalFortXTrans.g:1822:3: ( rule__Decl__FunctionAssignment_0 )
                    // InternalFortXTrans.g:1822:4: rule__Decl__FunctionAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Decl__FunctionAssignment_0();

                    state._fsp--;


                    }

                     after(grammarAccess.getDeclAccess().getFunctionAssignment_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalFortXTrans.g:1826:2: ( ( rule__Decl__FieldAssignment_1 ) )
                    {
                    // InternalFortXTrans.g:1826:2: ( ( rule__Decl__FieldAssignment_1 ) )
                    // InternalFortXTrans.g:1827:3: ( rule__Decl__FieldAssignment_1 )
                    {
                     before(grammarAccess.getDeclAccess().getFieldAssignment_1()); 
                    // InternalFortXTrans.g:1828:3: ( rule__Decl__FieldAssignment_1 )
                    // InternalFortXTrans.g:1828:4: rule__Decl__FieldAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__Decl__FieldAssignment_1();

                    state._fsp--;


                    }

                     after(grammarAccess.getDeclAccess().getFieldAssignment_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Decl__Alternatives"


    // $ANTLR start "rule__FnMod__Alternatives"
    // InternalFortXTrans.g:1836:1: rule__FnMod__Alternatives : ( ( ( rule__FnMod__ModtypeAssignment_0 ) ) | ( ( rule__FnMod__ModtypeAssignment_1 ) ) | ( ( rule__FnMod__ModtypeAssignment_2 ) ) | ( ( rule__FnMod__ModtypeAssignment_3 ) ) );
    public final void rule__FnMod__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1840:1: ( ( ( rule__FnMod__ModtypeAssignment_0 ) ) | ( ( rule__FnMod__ModtypeAssignment_1 ) ) | ( ( rule__FnMod__ModtypeAssignment_2 ) ) | ( ( rule__FnMod__ModtypeAssignment_3 ) ) )
            int alt12=4;
            switch ( input.LA(1) ) {
            case 56:
                {
                alt12=1;
                }
                break;
            case 57:
                {
                alt12=2;
                }
                break;
            case 58:
                {
                alt12=3;
                }
                break;
            case 59:
                {
                alt12=4;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 12, 0, input);

                throw nvae;
            }

            switch (alt12) {
                case 1 :
                    // InternalFortXTrans.g:1841:2: ( ( rule__FnMod__ModtypeAssignment_0 ) )
                    {
                    // InternalFortXTrans.g:1841:2: ( ( rule__FnMod__ModtypeAssignment_0 ) )
                    // InternalFortXTrans.g:1842:3: ( rule__FnMod__ModtypeAssignment_0 )
                    {
                     before(grammarAccess.getFnModAccess().getModtypeAssignment_0()); 
                    // InternalFortXTrans.g:1843:3: ( rule__FnMod__ModtypeAssignment_0 )
                    // InternalFortXTrans.g:1843:4: rule__FnMod__ModtypeAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__FnMod__ModtypeAssignment_0();

                    state._fsp--;


                    }

                     after(grammarAccess.getFnModAccess().getModtypeAssignment_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalFortXTrans.g:1847:2: ( ( rule__FnMod__ModtypeAssignment_1 ) )
                    {
                    // InternalFortXTrans.g:1847:2: ( ( rule__FnMod__ModtypeAssignment_1 ) )
                    // InternalFortXTrans.g:1848:3: ( rule__FnMod__ModtypeAssignment_1 )
                    {
                     before(grammarAccess.getFnModAccess().getModtypeAssignment_1()); 
                    // InternalFortXTrans.g:1849:3: ( rule__FnMod__ModtypeAssignment_1 )
                    // InternalFortXTrans.g:1849:4: rule__FnMod__ModtypeAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__FnMod__ModtypeAssignment_1();

                    state._fsp--;


                    }

                     after(grammarAccess.getFnModAccess().getModtypeAssignment_1()); 

                    }


                    }
                    break;
                case 3 :
                    // InternalFortXTrans.g:1853:2: ( ( rule__FnMod__ModtypeAssignment_2 ) )
                    {
                    // InternalFortXTrans.g:1853:2: ( ( rule__FnMod__ModtypeAssignment_2 ) )
                    // InternalFortXTrans.g:1854:3: ( rule__FnMod__ModtypeAssignment_2 )
                    {
                     before(grammarAccess.getFnModAccess().getModtypeAssignment_2()); 
                    // InternalFortXTrans.g:1855:3: ( rule__FnMod__ModtypeAssignment_2 )
                    // InternalFortXTrans.g:1855:4: rule__FnMod__ModtypeAssignment_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__FnMod__ModtypeAssignment_2();

                    state._fsp--;


                    }

                     after(grammarAccess.getFnModAccess().getModtypeAssignment_2()); 

                    }


                    }
                    break;
                case 4 :
                    // InternalFortXTrans.g:1859:2: ( ( rule__FnMod__ModtypeAssignment_3 ) )
                    {
                    // InternalFortXTrans.g:1859:2: ( ( rule__FnMod__ModtypeAssignment_3 ) )
                    // InternalFortXTrans.g:1860:3: ( rule__FnMod__ModtypeAssignment_3 )
                    {
                     before(grammarAccess.getFnModAccess().getModtypeAssignment_3()); 
                    // InternalFortXTrans.g:1861:3: ( rule__FnMod__ModtypeAssignment_3 )
                    // InternalFortXTrans.g:1861:4: rule__FnMod__ModtypeAssignment_3
                    {
                    pushFollow(FOLLOW_2);
                    rule__FnMod__ModtypeAssignment_3();

                    state._fsp--;


                    }

                     after(grammarAccess.getFnModAccess().getModtypeAssignment_3()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FnMod__Alternatives"


    // $ANTLR start "rule__ValParam__Alternatives"
    // InternalFortXTrans.g:1869:1: rule__ValParam__Alternatives : ( ( ( rule__ValParam__ParamsAssignment_0 ) ) | ( ( rule__ValParam__Group_1__0 ) ) );
    public final void rule__ValParam__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1873:1: ( ( ( rule__ValParam__ParamsAssignment_0 ) ) | ( ( rule__ValParam__Group_1__0 ) ) )
            int alt13=2;
            int LA13_0 = input.LA(1);

            if ( (LA13_0==RULE_ID||LA13_0==67) ) {
                alt13=1;
            }
            else if ( (LA13_0==35) ) {
                alt13=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 13, 0, input);

                throw nvae;
            }
            switch (alt13) {
                case 1 :
                    // InternalFortXTrans.g:1874:2: ( ( rule__ValParam__ParamsAssignment_0 ) )
                    {
                    // InternalFortXTrans.g:1874:2: ( ( rule__ValParam__ParamsAssignment_0 ) )
                    // InternalFortXTrans.g:1875:3: ( rule__ValParam__ParamsAssignment_0 )
                    {
                     before(grammarAccess.getValParamAccess().getParamsAssignment_0()); 
                    // InternalFortXTrans.g:1876:3: ( rule__ValParam__ParamsAssignment_0 )
                    // InternalFortXTrans.g:1876:4: rule__ValParam__ParamsAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ValParam__ParamsAssignment_0();

                    state._fsp--;


                    }

                     after(grammarAccess.getValParamAccess().getParamsAssignment_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalFortXTrans.g:1880:2: ( ( rule__ValParam__Group_1__0 ) )
                    {
                    // InternalFortXTrans.g:1880:2: ( ( rule__ValParam__Group_1__0 ) )
                    // InternalFortXTrans.g:1881:3: ( rule__ValParam__Group_1__0 )
                    {
                     before(grammarAccess.getValParamAccess().getGroup_1()); 
                    // InternalFortXTrans.g:1882:3: ( rule__ValParam__Group_1__0 )
                    // InternalFortXTrans.g:1882:4: rule__ValParam__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ValParam__Group_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getValParamAccess().getGroup_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValParam__Alternatives"


    // $ANTLR start "rule__RetType__Alternatives"
    // InternalFortXTrans.g:1890:1: rule__RetType__Alternatives : ( ( ( rule__RetType__Group_0__0 ) ) | ( ( rule__RetType__Group_1__0 ) ) );
    public final void rule__RetType__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1894:1: ( ( ( rule__RetType__Group_0__0 ) ) | ( ( rule__RetType__Group_1__0 ) ) )
            int alt14=2;
            int LA14_0 = input.LA(1);

            if ( (LA14_0==37) ) {
                int LA14_1 = input.LA(2);

                if ( (LA14_1==RULE_ID) ) {
                    alt14=2;
                }
                else if ( (LA14_1==35) ) {
                    alt14=1;
                }
                else {
                    NoViableAltException nvae =
                        new NoViableAltException("", 14, 1, input);

                    throw nvae;
                }
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 14, 0, input);

                throw nvae;
            }
            switch (alt14) {
                case 1 :
                    // InternalFortXTrans.g:1895:2: ( ( rule__RetType__Group_0__0 ) )
                    {
                    // InternalFortXTrans.g:1895:2: ( ( rule__RetType__Group_0__0 ) )
                    // InternalFortXTrans.g:1896:3: ( rule__RetType__Group_0__0 )
                    {
                     before(grammarAccess.getRetTypeAccess().getGroup_0()); 
                    // InternalFortXTrans.g:1897:3: ( rule__RetType__Group_0__0 )
                    // InternalFortXTrans.g:1897:4: rule__RetType__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__RetType__Group_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getRetTypeAccess().getGroup_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalFortXTrans.g:1901:2: ( ( rule__RetType__Group_1__0 ) )
                    {
                    // InternalFortXTrans.g:1901:2: ( ( rule__RetType__Group_1__0 ) )
                    // InternalFortXTrans.g:1902:3: ( rule__RetType__Group_1__0 )
                    {
                     before(grammarAccess.getRetTypeAccess().getGroup_1()); 
                    // InternalFortXTrans.g:1903:3: ( rule__RetType__Group_1__0 )
                    // InternalFortXTrans.g:1903:4: rule__RetType__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__RetType__Group_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getRetTypeAccess().getGroup_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RetType__Alternatives"


    // $ANTLR start "rule__Stmnts__Alternatives"
    // InternalFortXTrans.g:1911:1: rule__Stmnts__Alternatives : ( ( ( rule__Stmnts__FrontAssignment_0 ) ) | ( ( rule__Stmnts__LocVarAssignment_1 ) ) | ( ( rule__Stmnts__ExpAssignment_2 ) ) );
    public final void rule__Stmnts__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1915:1: ( ( ( rule__Stmnts__FrontAssignment_0 ) ) | ( ( rule__Stmnts__LocVarAssignment_1 ) ) | ( ( rule__Stmnts__ExpAssignment_2 ) ) )
            int alt15=3;
            alt15 = dfa15.predict(input);
            switch (alt15) {
                case 1 :
                    // InternalFortXTrans.g:1916:2: ( ( rule__Stmnts__FrontAssignment_0 ) )
                    {
                    // InternalFortXTrans.g:1916:2: ( ( rule__Stmnts__FrontAssignment_0 ) )
                    // InternalFortXTrans.g:1917:3: ( rule__Stmnts__FrontAssignment_0 )
                    {
                     before(grammarAccess.getStmntsAccess().getFrontAssignment_0()); 
                    // InternalFortXTrans.g:1918:3: ( rule__Stmnts__FrontAssignment_0 )
                    // InternalFortXTrans.g:1918:4: rule__Stmnts__FrontAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Stmnts__FrontAssignment_0();

                    state._fsp--;


                    }

                     after(grammarAccess.getStmntsAccess().getFrontAssignment_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalFortXTrans.g:1922:2: ( ( rule__Stmnts__LocVarAssignment_1 ) )
                    {
                    // InternalFortXTrans.g:1922:2: ( ( rule__Stmnts__LocVarAssignment_1 ) )
                    // InternalFortXTrans.g:1923:3: ( rule__Stmnts__LocVarAssignment_1 )
                    {
                     before(grammarAccess.getStmntsAccess().getLocVarAssignment_1()); 
                    // InternalFortXTrans.g:1924:3: ( rule__Stmnts__LocVarAssignment_1 )
                    // InternalFortXTrans.g:1924:4: rule__Stmnts__LocVarAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__Stmnts__LocVarAssignment_1();

                    state._fsp--;


                    }

                     after(grammarAccess.getStmntsAccess().getLocVarAssignment_1()); 

                    }


                    }
                    break;
                case 3 :
                    // InternalFortXTrans.g:1928:2: ( ( rule__Stmnts__ExpAssignment_2 ) )
                    {
                    // InternalFortXTrans.g:1928:2: ( ( rule__Stmnts__ExpAssignment_2 ) )
                    // InternalFortXTrans.g:1929:3: ( rule__Stmnts__ExpAssignment_2 )
                    {
                     before(grammarAccess.getStmntsAccess().getExpAssignment_2()); 
                    // InternalFortXTrans.g:1930:3: ( rule__Stmnts__ExpAssignment_2 )
                    // InternalFortXTrans.g:1930:4: rule__Stmnts__ExpAssignment_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__Stmnts__ExpAssignment_2();

                    state._fsp--;


                    }

                     after(grammarAccess.getStmntsAccess().getExpAssignment_2()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Stmnts__Alternatives"


    // $ANTLR start "rule__Stmnt__Alternatives"
    // InternalFortXTrans.g:1938:1: rule__Stmnt__Alternatives : ( ( ( rule__Stmnt__DelimAssignment_0 ) ) | ( ( rule__Stmnt__Group_1__0 ) ) );
    public final void rule__Stmnt__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1942:1: ( ( ( rule__Stmnt__DelimAssignment_0 ) ) | ( ( rule__Stmnt__Group_1__0 ) ) )
            int alt16=2;
            int LA16_0 = input.LA(1);

            if ( (LA16_0==51||LA16_0==58||(LA16_0>=61 && LA16_0<=64)||LA16_0==66) ) {
                alt16=1;
            }
            else if ( (LA16_0==35) ) {
                alt16=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 16, 0, input);

                throw nvae;
            }
            switch (alt16) {
                case 1 :
                    // InternalFortXTrans.g:1943:2: ( ( rule__Stmnt__DelimAssignment_0 ) )
                    {
                    // InternalFortXTrans.g:1943:2: ( ( rule__Stmnt__DelimAssignment_0 ) )
                    // InternalFortXTrans.g:1944:3: ( rule__Stmnt__DelimAssignment_0 )
                    {
                     before(grammarAccess.getStmntAccess().getDelimAssignment_0()); 
                    // InternalFortXTrans.g:1945:3: ( rule__Stmnt__DelimAssignment_0 )
                    // InternalFortXTrans.g:1945:4: rule__Stmnt__DelimAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Stmnt__DelimAssignment_0();

                    state._fsp--;


                    }

                     after(grammarAccess.getStmntAccess().getDelimAssignment_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalFortXTrans.g:1949:2: ( ( rule__Stmnt__Group_1__0 ) )
                    {
                    // InternalFortXTrans.g:1949:2: ( ( rule__Stmnt__Group_1__0 ) )
                    // InternalFortXTrans.g:1950:3: ( rule__Stmnt__Group_1__0 )
                    {
                     before(grammarAccess.getStmntAccess().getGroup_1()); 
                    // InternalFortXTrans.g:1951:3: ( rule__Stmnt__Group_1__0 )
                    // InternalFortXTrans.g:1951:4: rule__Stmnt__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Stmnt__Group_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getStmntAccess().getGroup_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Stmnt__Alternatives"


    // $ANTLR start "rule__Equality__OpAlternatives_1_1_0"
    // InternalFortXTrans.g:1959:1: rule__Equality__OpAlternatives_1_1_0 : ( ( '===' ) | ( '=/=' ) | ( 'EQ' ) | ( 'NE' ) );
    public final void rule__Equality__OpAlternatives_1_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1963:1: ( ( '===' ) | ( '=/=' ) | ( 'EQ' ) | ( 'NE' ) )
            int alt17=4;
            switch ( input.LA(1) ) {
            case 13:
                {
                alt17=1;
                }
                break;
            case 14:
                {
                alt17=2;
                }
                break;
            case 15:
                {
                alt17=3;
                }
                break;
            case 16:
                {
                alt17=4;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 17, 0, input);

                throw nvae;
            }

            switch (alt17) {
                case 1 :
                    // InternalFortXTrans.g:1964:2: ( '===' )
                    {
                    // InternalFortXTrans.g:1964:2: ( '===' )
                    // InternalFortXTrans.g:1965:3: '==='
                    {
                     before(grammarAccess.getEqualityAccess().getOpEqualsSignEqualsSignEqualsSignKeyword_1_1_0_0()); 
                    match(input,13,FOLLOW_2); 
                     after(grammarAccess.getEqualityAccess().getOpEqualsSignEqualsSignEqualsSignKeyword_1_1_0_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalFortXTrans.g:1970:2: ( '=/=' )
                    {
                    // InternalFortXTrans.g:1970:2: ( '=/=' )
                    // InternalFortXTrans.g:1971:3: '=/='
                    {
                     before(grammarAccess.getEqualityAccess().getOpEqualsSignSolidusEqualsSignKeyword_1_1_0_1()); 
                    match(input,14,FOLLOW_2); 
                     after(grammarAccess.getEqualityAccess().getOpEqualsSignSolidusEqualsSignKeyword_1_1_0_1()); 

                    }


                    }
                    break;
                case 3 :
                    // InternalFortXTrans.g:1976:2: ( 'EQ' )
                    {
                    // InternalFortXTrans.g:1976:2: ( 'EQ' )
                    // InternalFortXTrans.g:1977:3: 'EQ'
                    {
                     before(grammarAccess.getEqualityAccess().getOpEQKeyword_1_1_0_2()); 
                    match(input,15,FOLLOW_2); 
                     after(grammarAccess.getEqualityAccess().getOpEQKeyword_1_1_0_2()); 

                    }


                    }
                    break;
                case 4 :
                    // InternalFortXTrans.g:1982:2: ( 'NE' )
                    {
                    // InternalFortXTrans.g:1982:2: ( 'NE' )
                    // InternalFortXTrans.g:1983:3: 'NE'
                    {
                     before(grammarAccess.getEqualityAccess().getOpNEKeyword_1_1_0_3()); 
                    match(input,16,FOLLOW_2); 
                     after(grammarAccess.getEqualityAccess().getOpNEKeyword_1_1_0_3()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equality__OpAlternatives_1_1_0"


    // $ANTLR start "rule__Comparison__OpAlternatives_1_1_0"
    // InternalFortXTrans.g:1992:1: rule__Comparison__OpAlternatives_1_1_0 : ( ( '>=' ) | ( '<=' ) | ( '>' ) | ( '<' ) | ( 'LT' ) | ( 'GT' ) | ( 'LE' ) | ( 'GE' ) );
    public final void rule__Comparison__OpAlternatives_1_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1996:1: ( ( '>=' ) | ( '<=' ) | ( '>' ) | ( '<' ) | ( 'LT' ) | ( 'GT' ) | ( 'LE' ) | ( 'GE' ) )
            int alt18=8;
            switch ( input.LA(1) ) {
            case 17:
                {
                alt18=1;
                }
                break;
            case 18:
                {
                alt18=2;
                }
                break;
            case 19:
                {
                alt18=3;
                }
                break;
            case 20:
                {
                alt18=4;
                }
                break;
            case 21:
                {
                alt18=5;
                }
                break;
            case 22:
                {
                alt18=6;
                }
                break;
            case 23:
                {
                alt18=7;
                }
                break;
            case 24:
                {
                alt18=8;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 18, 0, input);

                throw nvae;
            }

            switch (alt18) {
                case 1 :
                    // InternalFortXTrans.g:1997:2: ( '>=' )
                    {
                    // InternalFortXTrans.g:1997:2: ( '>=' )
                    // InternalFortXTrans.g:1998:3: '>='
                    {
                     before(grammarAccess.getComparisonAccess().getOpGreaterThanSignEqualsSignKeyword_1_1_0_0()); 
                    match(input,17,FOLLOW_2); 
                     after(grammarAccess.getComparisonAccess().getOpGreaterThanSignEqualsSignKeyword_1_1_0_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalFortXTrans.g:2003:2: ( '<=' )
                    {
                    // InternalFortXTrans.g:2003:2: ( '<=' )
                    // InternalFortXTrans.g:2004:3: '<='
                    {
                     before(grammarAccess.getComparisonAccess().getOpLessThanSignEqualsSignKeyword_1_1_0_1()); 
                    match(input,18,FOLLOW_2); 
                     after(grammarAccess.getComparisonAccess().getOpLessThanSignEqualsSignKeyword_1_1_0_1()); 

                    }


                    }
                    break;
                case 3 :
                    // InternalFortXTrans.g:2009:2: ( '>' )
                    {
                    // InternalFortXTrans.g:2009:2: ( '>' )
                    // InternalFortXTrans.g:2010:3: '>'
                    {
                     before(grammarAccess.getComparisonAccess().getOpGreaterThanSignKeyword_1_1_0_2()); 
                    match(input,19,FOLLOW_2); 
                     after(grammarAccess.getComparisonAccess().getOpGreaterThanSignKeyword_1_1_0_2()); 

                    }


                    }
                    break;
                case 4 :
                    // InternalFortXTrans.g:2015:2: ( '<' )
                    {
                    // InternalFortXTrans.g:2015:2: ( '<' )
                    // InternalFortXTrans.g:2016:3: '<'
                    {
                     before(grammarAccess.getComparisonAccess().getOpLessThanSignKeyword_1_1_0_3()); 
                    match(input,20,FOLLOW_2); 
                     after(grammarAccess.getComparisonAccess().getOpLessThanSignKeyword_1_1_0_3()); 

                    }


                    }
                    break;
                case 5 :
                    // InternalFortXTrans.g:2021:2: ( 'LT' )
                    {
                    // InternalFortXTrans.g:2021:2: ( 'LT' )
                    // InternalFortXTrans.g:2022:3: 'LT'
                    {
                     before(grammarAccess.getComparisonAccess().getOpLTKeyword_1_1_0_4()); 
                    match(input,21,FOLLOW_2); 
                     after(grammarAccess.getComparisonAccess().getOpLTKeyword_1_1_0_4()); 

                    }


                    }
                    break;
                case 6 :
                    // InternalFortXTrans.g:2027:2: ( 'GT' )
                    {
                    // InternalFortXTrans.g:2027:2: ( 'GT' )
                    // InternalFortXTrans.g:2028:3: 'GT'
                    {
                     before(grammarAccess.getComparisonAccess().getOpGTKeyword_1_1_0_5()); 
                    match(input,22,FOLLOW_2); 
                     after(grammarAccess.getComparisonAccess().getOpGTKeyword_1_1_0_5()); 

                    }


                    }
                    break;
                case 7 :
                    // InternalFortXTrans.g:2033:2: ( 'LE' )
                    {
                    // InternalFortXTrans.g:2033:2: ( 'LE' )
                    // InternalFortXTrans.g:2034:3: 'LE'
                    {
                     before(grammarAccess.getComparisonAccess().getOpLEKeyword_1_1_0_6()); 
                    match(input,23,FOLLOW_2); 
                     after(grammarAccess.getComparisonAccess().getOpLEKeyword_1_1_0_6()); 

                    }


                    }
                    break;
                case 8 :
                    // InternalFortXTrans.g:2039:2: ( 'GE' )
                    {
                    // InternalFortXTrans.g:2039:2: ( 'GE' )
                    // InternalFortXTrans.g:2040:3: 'GE'
                    {
                     before(grammarAccess.getComparisonAccess().getOpGEKeyword_1_1_0_7()); 
                    match(input,24,FOLLOW_2); 
                     after(grammarAccess.getComparisonAccess().getOpGEKeyword_1_1_0_7()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__OpAlternatives_1_1_0"


    // $ANTLR start "rule__Primary__Alternatives"
    // InternalFortXTrans.g:2049:1: rule__Primary__Alternatives : ( ( ( rule__Primary__Group_0__0 ) ) | ( ( rule__Primary__Group_1__0 ) ) );
    public final void rule__Primary__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2053:1: ( ( ( rule__Primary__Group_0__0 ) ) | ( ( rule__Primary__Group_1__0 ) ) )
            int alt19=2;
            alt19 = dfa19.predict(input);
            switch (alt19) {
                case 1 :
                    // InternalFortXTrans.g:2054:2: ( ( rule__Primary__Group_0__0 ) )
                    {
                    // InternalFortXTrans.g:2054:2: ( ( rule__Primary__Group_0__0 ) )
                    // InternalFortXTrans.g:2055:3: ( rule__Primary__Group_0__0 )
                    {
                     before(grammarAccess.getPrimaryAccess().getGroup_0()); 
                    // InternalFortXTrans.g:2056:3: ( rule__Primary__Group_0__0 )
                    // InternalFortXTrans.g:2056:4: rule__Primary__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Primary__Group_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getPrimaryAccess().getGroup_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalFortXTrans.g:2060:2: ( ( rule__Primary__Group_1__0 ) )
                    {
                    // InternalFortXTrans.g:2060:2: ( ( rule__Primary__Group_1__0 ) )
                    // InternalFortXTrans.g:2061:3: ( rule__Primary__Group_1__0 )
                    {
                     before(grammarAccess.getPrimaryAccess().getGroup_1()); 
                    // InternalFortXTrans.g:2062:3: ( rule__Primary__Group_1__0 )
                    // InternalFortXTrans.g:2062:4: rule__Primary__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Primary__Group_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getPrimaryAccess().getGroup_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Alternatives"


    // $ANTLR start "rule__DelimitedExpr__Alternatives"
    // InternalFortXTrans.g:2070:1: rule__DelimitedExpr__Alternatives : ( ( ( rule__DelimitedExpr__DodAssignment_0 ) ) | ( ( rule__DelimitedExpr__Group_1__0 ) ) | ( ( rule__DelimitedExpr__Group_2__0 ) ) | ( ( rule__DelimitedExpr__Group_3__0 ) ) | ( ( rule__DelimitedExpr__Group_4__0 ) ) );
    public final void rule__DelimitedExpr__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2074:1: ( ( ( rule__DelimitedExpr__DodAssignment_0 ) ) | ( ( rule__DelimitedExpr__Group_1__0 ) ) | ( ( rule__DelimitedExpr__Group_2__0 ) ) | ( ( rule__DelimitedExpr__Group_3__0 ) ) | ( ( rule__DelimitedExpr__Group_4__0 ) ) )
            int alt20=5;
            switch ( input.LA(1) ) {
            case 51:
            case 58:
            case 66:
                {
                alt20=1;
                }
                break;
            case 61:
                {
                alt20=2;
                }
                break;
            case 62:
                {
                alt20=3;
                }
                break;
            case 63:
                {
                alt20=4;
                }
                break;
            case 64:
                {
                alt20=5;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 20, 0, input);

                throw nvae;
            }

            switch (alt20) {
                case 1 :
                    // InternalFortXTrans.g:2075:2: ( ( rule__DelimitedExpr__DodAssignment_0 ) )
                    {
                    // InternalFortXTrans.g:2075:2: ( ( rule__DelimitedExpr__DodAssignment_0 ) )
                    // InternalFortXTrans.g:2076:3: ( rule__DelimitedExpr__DodAssignment_0 )
                    {
                     before(grammarAccess.getDelimitedExprAccess().getDodAssignment_0()); 
                    // InternalFortXTrans.g:2077:3: ( rule__DelimitedExpr__DodAssignment_0 )
                    // InternalFortXTrans.g:2077:4: rule__DelimitedExpr__DodAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__DelimitedExpr__DodAssignment_0();

                    state._fsp--;


                    }

                     after(grammarAccess.getDelimitedExprAccess().getDodAssignment_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalFortXTrans.g:2081:2: ( ( rule__DelimitedExpr__Group_1__0 ) )
                    {
                    // InternalFortXTrans.g:2081:2: ( ( rule__DelimitedExpr__Group_1__0 ) )
                    // InternalFortXTrans.g:2082:3: ( rule__DelimitedExpr__Group_1__0 )
                    {
                     before(grammarAccess.getDelimitedExprAccess().getGroup_1()); 
                    // InternalFortXTrans.g:2083:3: ( rule__DelimitedExpr__Group_1__0 )
                    // InternalFortXTrans.g:2083:4: rule__DelimitedExpr__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__DelimitedExpr__Group_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getDelimitedExprAccess().getGroup_1()); 

                    }


                    }
                    break;
                case 3 :
                    // InternalFortXTrans.g:2087:2: ( ( rule__DelimitedExpr__Group_2__0 ) )
                    {
                    // InternalFortXTrans.g:2087:2: ( ( rule__DelimitedExpr__Group_2__0 ) )
                    // InternalFortXTrans.g:2088:3: ( rule__DelimitedExpr__Group_2__0 )
                    {
                     before(grammarAccess.getDelimitedExprAccess().getGroup_2()); 
                    // InternalFortXTrans.g:2089:3: ( rule__DelimitedExpr__Group_2__0 )
                    // InternalFortXTrans.g:2089:4: rule__DelimitedExpr__Group_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__DelimitedExpr__Group_2__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getDelimitedExprAccess().getGroup_2()); 

                    }


                    }
                    break;
                case 4 :
                    // InternalFortXTrans.g:2093:2: ( ( rule__DelimitedExpr__Group_3__0 ) )
                    {
                    // InternalFortXTrans.g:2093:2: ( ( rule__DelimitedExpr__Group_3__0 ) )
                    // InternalFortXTrans.g:2094:3: ( rule__DelimitedExpr__Group_3__0 )
                    {
                     before(grammarAccess.getDelimitedExprAccess().getGroup_3()); 
                    // InternalFortXTrans.g:2095:3: ( rule__DelimitedExpr__Group_3__0 )
                    // InternalFortXTrans.g:2095:4: rule__DelimitedExpr__Group_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__DelimitedExpr__Group_3__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getDelimitedExprAccess().getGroup_3()); 

                    }


                    }
                    break;
                case 5 :
                    // InternalFortXTrans.g:2099:2: ( ( rule__DelimitedExpr__Group_4__0 ) )
                    {
                    // InternalFortXTrans.g:2099:2: ( ( rule__DelimitedExpr__Group_4__0 ) )
                    // InternalFortXTrans.g:2100:3: ( rule__DelimitedExpr__Group_4__0 )
                    {
                     before(grammarAccess.getDelimitedExprAccess().getGroup_4()); 
                    // InternalFortXTrans.g:2101:3: ( rule__DelimitedExpr__Group_4__0 )
                    // InternalFortXTrans.g:2101:4: rule__DelimitedExpr__Group_4__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__DelimitedExpr__Group_4__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getDelimitedExprAccess().getGroup_4()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Alternatives"


    // $ANTLR start "rule__Binding__Alternatives"
    // InternalFortXTrans.g:2109:1: rule__Binding__Alternatives : ( ( ( rule__Binding__Group_0__0 ) ) | ( ( rule__Binding__Group_1__0 ) ) );
    public final void rule__Binding__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2113:1: ( ( ( rule__Binding__Group_0__0 ) ) | ( ( rule__Binding__Group_1__0 ) ) )
            int alt21=2;
            alt21 = dfa21.predict(input);
            switch (alt21) {
                case 1 :
                    // InternalFortXTrans.g:2114:2: ( ( rule__Binding__Group_0__0 ) )
                    {
                    // InternalFortXTrans.g:2114:2: ( ( rule__Binding__Group_0__0 ) )
                    // InternalFortXTrans.g:2115:3: ( rule__Binding__Group_0__0 )
                    {
                     before(grammarAccess.getBindingAccess().getGroup_0()); 
                    // InternalFortXTrans.g:2116:3: ( rule__Binding__Group_0__0 )
                    // InternalFortXTrans.g:2116:4: rule__Binding__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Binding__Group_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getBindingAccess().getGroup_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalFortXTrans.g:2120:2: ( ( rule__Binding__Group_1__0 ) )
                    {
                    // InternalFortXTrans.g:2120:2: ( ( rule__Binding__Group_1__0 ) )
                    // InternalFortXTrans.g:2121:3: ( rule__Binding__Group_1__0 )
                    {
                     before(grammarAccess.getBindingAccess().getGroup_1()); 
                    // InternalFortXTrans.g:2122:3: ( rule__Binding__Group_1__0 )
                    // InternalFortXTrans.g:2122:4: rule__Binding__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Binding__Group_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getBindingAccess().getGroup_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Binding__Alternatives"


    // $ANTLR start "rule__GenClause__Alternatives"
    // InternalFortXTrans.g:2130:1: rule__GenClause__Alternatives : ( ( ( rule__GenClause__BindingAssignment_0 ) ) | ( ( rule__GenClause__ExprAssignment_1 ) ) );
    public final void rule__GenClause__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2134:1: ( ( ( rule__GenClause__BindingAssignment_0 ) ) | ( ( rule__GenClause__ExprAssignment_1 ) ) )
            int alt22=2;
            alt22 = dfa22.predict(input);
            switch (alt22) {
                case 1 :
                    // InternalFortXTrans.g:2135:2: ( ( rule__GenClause__BindingAssignment_0 ) )
                    {
                    // InternalFortXTrans.g:2135:2: ( ( rule__GenClause__BindingAssignment_0 ) )
                    // InternalFortXTrans.g:2136:3: ( rule__GenClause__BindingAssignment_0 )
                    {
                     before(grammarAccess.getGenClauseAccess().getBindingAssignment_0()); 
                    // InternalFortXTrans.g:2137:3: ( rule__GenClause__BindingAssignment_0 )
                    // InternalFortXTrans.g:2137:4: rule__GenClause__BindingAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__GenClause__BindingAssignment_0();

                    state._fsp--;


                    }

                     after(grammarAccess.getGenClauseAccess().getBindingAssignment_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalFortXTrans.g:2141:2: ( ( rule__GenClause__ExprAssignment_1 ) )
                    {
                    // InternalFortXTrans.g:2141:2: ( ( rule__GenClause__ExprAssignment_1 ) )
                    // InternalFortXTrans.g:2142:3: ( rule__GenClause__ExprAssignment_1 )
                    {
                     before(grammarAccess.getGenClauseAccess().getExprAssignment_1()); 
                    // InternalFortXTrans.g:2143:3: ( rule__GenClause__ExprAssignment_1 )
                    // InternalFortXTrans.g:2143:4: rule__GenClause__ExprAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__GenClause__ExprAssignment_1();

                    state._fsp--;


                    }

                     after(grammarAccess.getGenClauseAccess().getExprAssignment_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GenClause__Alternatives"


    // $ANTLR start "rule__IdOrTuple__Alternatives"
    // InternalFortXTrans.g:2151:1: rule__IdOrTuple__Alternatives : ( ( ( rule__IdOrTuple__BidAssignment_0 ) ) | ( ( rule__IdOrTuple__Group_1__0 ) ) );
    public final void rule__IdOrTuple__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2155:1: ( ( ( rule__IdOrTuple__BidAssignment_0 ) ) | ( ( rule__IdOrTuple__Group_1__0 ) ) )
            int alt23=2;
            int LA23_0 = input.LA(1);

            if ( (LA23_0==RULE_ID||LA23_0==67) ) {
                alt23=1;
            }
            else if ( (LA23_0==35) ) {
                alt23=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 23, 0, input);

                throw nvae;
            }
            switch (alt23) {
                case 1 :
                    // InternalFortXTrans.g:2156:2: ( ( rule__IdOrTuple__BidAssignment_0 ) )
                    {
                    // InternalFortXTrans.g:2156:2: ( ( rule__IdOrTuple__BidAssignment_0 ) )
                    // InternalFortXTrans.g:2157:3: ( rule__IdOrTuple__BidAssignment_0 )
                    {
                     before(grammarAccess.getIdOrTupleAccess().getBidAssignment_0()); 
                    // InternalFortXTrans.g:2158:3: ( rule__IdOrTuple__BidAssignment_0 )
                    // InternalFortXTrans.g:2158:4: rule__IdOrTuple__BidAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__IdOrTuple__BidAssignment_0();

                    state._fsp--;


                    }

                     after(grammarAccess.getIdOrTupleAccess().getBidAssignment_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalFortXTrans.g:2162:2: ( ( rule__IdOrTuple__Group_1__0 ) )
                    {
                    // InternalFortXTrans.g:2162:2: ( ( rule__IdOrTuple__Group_1__0 ) )
                    // InternalFortXTrans.g:2163:3: ( rule__IdOrTuple__Group_1__0 )
                    {
                     before(grammarAccess.getIdOrTupleAccess().getGroup_1()); 
                    // InternalFortXTrans.g:2164:3: ( rule__IdOrTuple__Group_1__0 )
                    // InternalFortXTrans.g:2164:4: rule__IdOrTuple__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__IdOrTuple__Group_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getIdOrTupleAccess().getGroup_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IdOrTuple__Alternatives"


    // $ANTLR start "rule__BindId__Alternatives"
    // InternalFortXTrans.g:2172:1: rule__BindId__Alternatives : ( ( ( rule__BindId__SAssignment_0 ) ) | ( ( rule__BindId__UndscAssignment_1 ) ) );
    public final void rule__BindId__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2176:1: ( ( ( rule__BindId__SAssignment_0 ) ) | ( ( rule__BindId__UndscAssignment_1 ) ) )
            int alt24=2;
            int LA24_0 = input.LA(1);

            if ( (LA24_0==RULE_ID) ) {
                alt24=1;
            }
            else if ( (LA24_0==67) ) {
                alt24=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 24, 0, input);

                throw nvae;
            }
            switch (alt24) {
                case 1 :
                    // InternalFortXTrans.g:2177:2: ( ( rule__BindId__SAssignment_0 ) )
                    {
                    // InternalFortXTrans.g:2177:2: ( ( rule__BindId__SAssignment_0 ) )
                    // InternalFortXTrans.g:2178:3: ( rule__BindId__SAssignment_0 )
                    {
                     before(grammarAccess.getBindIdAccess().getSAssignment_0()); 
                    // InternalFortXTrans.g:2179:3: ( rule__BindId__SAssignment_0 )
                    // InternalFortXTrans.g:2179:4: rule__BindId__SAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__BindId__SAssignment_0();

                    state._fsp--;


                    }

                     after(grammarAccess.getBindIdAccess().getSAssignment_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalFortXTrans.g:2183:2: ( ( rule__BindId__UndscAssignment_1 ) )
                    {
                    // InternalFortXTrans.g:2183:2: ( ( rule__BindId__UndscAssignment_1 ) )
                    // InternalFortXTrans.g:2184:3: ( rule__BindId__UndscAssignment_1 )
                    {
                     before(grammarAccess.getBindIdAccess().getUndscAssignment_1()); 
                    // InternalFortXTrans.g:2185:3: ( rule__BindId__UndscAssignment_1 )
                    // InternalFortXTrans.g:2185:4: rule__BindId__UndscAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__BindId__UndscAssignment_1();

                    state._fsp--;


                    }

                     after(grammarAccess.getBindIdAccess().getUndscAssignment_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BindId__Alternatives"


    // $ANTLR start "rule__FieldDecl__Alternatives"
    // InternalFortXTrans.g:2193:1: rule__FieldDecl__Alternatives : ( ( ( rule__FieldDecl__Group_0__0 ) ) | ( ( rule__FieldDecl__Group_1__0 ) ) | ( ( rule__FieldDecl__Group_2__0 ) ) | ( ( rule__FieldDecl__Group_3__0 ) ) );
    public final void rule__FieldDecl__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2197:1: ( ( ( rule__FieldDecl__Group_0__0 ) ) | ( ( rule__FieldDecl__Group_1__0 ) ) | ( ( rule__FieldDecl__Group_2__0 ) ) | ( ( rule__FieldDecl__Group_3__0 ) ) )
            int alt25=4;
            alt25 = dfa25.predict(input);
            switch (alt25) {
                case 1 :
                    // InternalFortXTrans.g:2198:2: ( ( rule__FieldDecl__Group_0__0 ) )
                    {
                    // InternalFortXTrans.g:2198:2: ( ( rule__FieldDecl__Group_0__0 ) )
                    // InternalFortXTrans.g:2199:3: ( rule__FieldDecl__Group_0__0 )
                    {
                     before(grammarAccess.getFieldDeclAccess().getGroup_0()); 
                    // InternalFortXTrans.g:2200:3: ( rule__FieldDecl__Group_0__0 )
                    // InternalFortXTrans.g:2200:4: rule__FieldDecl__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__FieldDecl__Group_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getFieldDeclAccess().getGroup_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalFortXTrans.g:2204:2: ( ( rule__FieldDecl__Group_1__0 ) )
                    {
                    // InternalFortXTrans.g:2204:2: ( ( rule__FieldDecl__Group_1__0 ) )
                    // InternalFortXTrans.g:2205:3: ( rule__FieldDecl__Group_1__0 )
                    {
                     before(grammarAccess.getFieldDeclAccess().getGroup_1()); 
                    // InternalFortXTrans.g:2206:3: ( rule__FieldDecl__Group_1__0 )
                    // InternalFortXTrans.g:2206:4: rule__FieldDecl__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__FieldDecl__Group_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getFieldDeclAccess().getGroup_1()); 

                    }


                    }
                    break;
                case 3 :
                    // InternalFortXTrans.g:2210:2: ( ( rule__FieldDecl__Group_2__0 ) )
                    {
                    // InternalFortXTrans.g:2210:2: ( ( rule__FieldDecl__Group_2__0 ) )
                    // InternalFortXTrans.g:2211:3: ( rule__FieldDecl__Group_2__0 )
                    {
                     before(grammarAccess.getFieldDeclAccess().getGroup_2()); 
                    // InternalFortXTrans.g:2212:3: ( rule__FieldDecl__Group_2__0 )
                    // InternalFortXTrans.g:2212:4: rule__FieldDecl__Group_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__FieldDecl__Group_2__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getFieldDeclAccess().getGroup_2()); 

                    }


                    }
                    break;
                case 4 :
                    // InternalFortXTrans.g:2216:2: ( ( rule__FieldDecl__Group_3__0 ) )
                    {
                    // InternalFortXTrans.g:2216:2: ( ( rule__FieldDecl__Group_3__0 ) )
                    // InternalFortXTrans.g:2217:3: ( rule__FieldDecl__Group_3__0 )
                    {
                     before(grammarAccess.getFieldDeclAccess().getGroup_3()); 
                    // InternalFortXTrans.g:2218:3: ( rule__FieldDecl__Group_3__0 )
                    // InternalFortXTrans.g:2218:4: rule__FieldDecl__Group_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__FieldDecl__Group_3__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getFieldDeclAccess().getGroup_3()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Alternatives"


    // $ANTLR start "rule__NoNewlineVarWTypes__Alternatives"
    // InternalFortXTrans.g:2226:1: rule__NoNewlineVarWTypes__Alternatives : ( ( ( rule__NoNewlineVarWTypes__SingleAssignment_0 ) ) | ( ( rule__NoNewlineVarWTypes__Group_1__0 ) ) );
    public final void rule__NoNewlineVarWTypes__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2230:1: ( ( ( rule__NoNewlineVarWTypes__SingleAssignment_0 ) ) | ( ( rule__NoNewlineVarWTypes__Group_1__0 ) ) )
            int alt26=2;
            int LA26_0 = input.LA(1);

            if ( (LA26_0==RULE_ID||LA26_0==67) ) {
                alt26=1;
            }
            else if ( (LA26_0==35) ) {
                alt26=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 26, 0, input);

                throw nvae;
            }
            switch (alt26) {
                case 1 :
                    // InternalFortXTrans.g:2231:2: ( ( rule__NoNewlineVarWTypes__SingleAssignment_0 ) )
                    {
                    // InternalFortXTrans.g:2231:2: ( ( rule__NoNewlineVarWTypes__SingleAssignment_0 ) )
                    // InternalFortXTrans.g:2232:3: ( rule__NoNewlineVarWTypes__SingleAssignment_0 )
                    {
                     before(grammarAccess.getNoNewlineVarWTypesAccess().getSingleAssignment_0()); 
                    // InternalFortXTrans.g:2233:3: ( rule__NoNewlineVarWTypes__SingleAssignment_0 )
                    // InternalFortXTrans.g:2233:4: rule__NoNewlineVarWTypes__SingleAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__NoNewlineVarWTypes__SingleAssignment_0();

                    state._fsp--;


                    }

                     after(grammarAccess.getNoNewlineVarWTypesAccess().getSingleAssignment_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalFortXTrans.g:2237:2: ( ( rule__NoNewlineVarWTypes__Group_1__0 ) )
                    {
                    // InternalFortXTrans.g:2237:2: ( ( rule__NoNewlineVarWTypes__Group_1__0 ) )
                    // InternalFortXTrans.g:2238:3: ( rule__NoNewlineVarWTypes__Group_1__0 )
                    {
                     before(grammarAccess.getNoNewlineVarWTypesAccess().getGroup_1()); 
                    // InternalFortXTrans.g:2239:3: ( rule__NoNewlineVarWTypes__Group_1__0 )
                    // InternalFortXTrans.g:2239:4: rule__NoNewlineVarWTypes__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__NoNewlineVarWTypes__Group_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getNoNewlineVarWTypesAccess().getGroup_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NoNewlineVarWTypes__Alternatives"


    // $ANTLR start "rule__InitVal__Alternatives"
    // InternalFortXTrans.g:2247:1: rule__InitVal__Alternatives : ( ( ( rule__InitVal__Group_0__0 ) ) | ( ( rule__InitVal__Group_1__0 ) ) );
    public final void rule__InitVal__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2251:1: ( ( ( rule__InitVal__Group_0__0 ) ) | ( ( rule__InitVal__Group_1__0 ) ) )
            int alt27=2;
            int LA27_0 = input.LA(1);

            if ( (LA27_0==60) ) {
                alt27=1;
            }
            else if ( (LA27_0==52) ) {
                alt27=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 27, 0, input);

                throw nvae;
            }
            switch (alt27) {
                case 1 :
                    // InternalFortXTrans.g:2252:2: ( ( rule__InitVal__Group_0__0 ) )
                    {
                    // InternalFortXTrans.g:2252:2: ( ( rule__InitVal__Group_0__0 ) )
                    // InternalFortXTrans.g:2253:3: ( rule__InitVal__Group_0__0 )
                    {
                     before(grammarAccess.getInitValAccess().getGroup_0()); 
                    // InternalFortXTrans.g:2254:3: ( rule__InitVal__Group_0__0 )
                    // InternalFortXTrans.g:2254:4: rule__InitVal__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__InitVal__Group_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getInitValAccess().getGroup_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalFortXTrans.g:2258:2: ( ( rule__InitVal__Group_1__0 ) )
                    {
                    // InternalFortXTrans.g:2258:2: ( ( rule__InitVal__Group_1__0 ) )
                    // InternalFortXTrans.g:2259:3: ( rule__InitVal__Group_1__0 )
                    {
                     before(grammarAccess.getInitValAccess().getGroup_1()); 
                    // InternalFortXTrans.g:2260:3: ( rule__InitVal__Group_1__0 )
                    // InternalFortXTrans.g:2260:4: rule__InitVal__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__InitVal__Group_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getInitValAccess().getGroup_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InitVal__Alternatives"


    // $ANTLR start "rule__LiteralTuple__Alternatives"
    // InternalFortXTrans.g:2268:1: rule__LiteralTuple__Alternatives : ( ( ruleLiteralTup ) | ( ruleQualified ) );
    public final void rule__LiteralTuple__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2272:1: ( ( ruleLiteralTup ) | ( ruleQualified ) )
            int alt28=2;
            switch ( input.LA(1) ) {
            case RULE_INT:
            case RULE_FLOAT:
            case RULE_STRING:
            case 25:
            case 26:
                {
                alt28=1;
                }
                break;
            case 35:
                {
                int LA28_2 = input.LA(2);

                if ( ((LA28_2>=RULE_INT && LA28_2<=RULE_STRING)||(LA28_2>=25 && LA28_2<=26)) ) {
                    alt28=1;
                }
                else if ( (LA28_2==RULE_ID) ) {
                    alt28=2;
                }
                else {
                    NoViableAltException nvae =
                        new NoViableAltException("", 28, 2, input);

                    throw nvae;
                }
                }
                break;
            case RULE_ID:
                {
                alt28=2;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 28, 0, input);

                throw nvae;
            }

            switch (alt28) {
                case 1 :
                    // InternalFortXTrans.g:2273:2: ( ruleLiteralTup )
                    {
                    // InternalFortXTrans.g:2273:2: ( ruleLiteralTup )
                    // InternalFortXTrans.g:2274:3: ruleLiteralTup
                    {
                     before(grammarAccess.getLiteralTupleAccess().getLiteralTupParserRuleCall_0()); 
                    pushFollow(FOLLOW_2);
                    ruleLiteralTup();

                    state._fsp--;

                     after(grammarAccess.getLiteralTupleAccess().getLiteralTupParserRuleCall_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalFortXTrans.g:2279:2: ( ruleQualified )
                    {
                    // InternalFortXTrans.g:2279:2: ( ruleQualified )
                    // InternalFortXTrans.g:2280:3: ruleQualified
                    {
                     before(grammarAccess.getLiteralTupleAccess().getQualifiedParserRuleCall_1()); 
                    pushFollow(FOLLOW_2);
                    ruleQualified();

                    state._fsp--;

                     after(grammarAccess.getLiteralTupleAccess().getQualifiedParserRuleCall_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralTuple__Alternatives"


    // $ANTLR start "rule__LiteralTup__Alternatives"
    // InternalFortXTrans.g:2289:1: rule__LiteralTup__Alternatives : ( ( ruleLiteral ) | ( ruleLiteralList ) );
    public final void rule__LiteralTup__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2293:1: ( ( ruleLiteral ) | ( ruleLiteralList ) )
            int alt29=2;
            int LA29_0 = input.LA(1);

            if ( ((LA29_0>=RULE_INT && LA29_0<=RULE_STRING)||(LA29_0>=25 && LA29_0<=26)) ) {
                alt29=1;
            }
            else if ( (LA29_0==35) ) {
                alt29=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 29, 0, input);

                throw nvae;
            }
            switch (alt29) {
                case 1 :
                    // InternalFortXTrans.g:2294:2: ( ruleLiteral )
                    {
                    // InternalFortXTrans.g:2294:2: ( ruleLiteral )
                    // InternalFortXTrans.g:2295:3: ruleLiteral
                    {
                     before(grammarAccess.getLiteralTupAccess().getLiteralParserRuleCall_0()); 
                    pushFollow(FOLLOW_2);
                    ruleLiteral();

                    state._fsp--;

                     after(grammarAccess.getLiteralTupAccess().getLiteralParserRuleCall_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalFortXTrans.g:2300:2: ( ruleLiteralList )
                    {
                    // InternalFortXTrans.g:2300:2: ( ruleLiteralList )
                    // InternalFortXTrans.g:2301:3: ruleLiteralList
                    {
                     before(grammarAccess.getLiteralTupAccess().getLiteralListParserRuleCall_1()); 
                    pushFollow(FOLLOW_2);
                    ruleLiteralList();

                    state._fsp--;

                     after(grammarAccess.getLiteralTupAccess().getLiteralListParserRuleCall_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralTup__Alternatives"


    // $ANTLR start "rule__Literal__Alternatives"
    // InternalFortXTrans.g:2310:1: rule__Literal__Alternatives : ( ( ( rule__Literal__Group_0__0 ) ) | ( ( rule__Literal__Group_1__0 ) ) | ( ( rule__Literal__Group_2__0 ) ) | ( ( rule__Literal__Group_3__0 ) ) );
    public final void rule__Literal__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2314:1: ( ( ( rule__Literal__Group_0__0 ) ) | ( ( rule__Literal__Group_1__0 ) ) | ( ( rule__Literal__Group_2__0 ) ) | ( ( rule__Literal__Group_3__0 ) ) )
            int alt30=4;
            switch ( input.LA(1) ) {
            case RULE_INT:
                {
                alt30=1;
                }
                break;
            case RULE_FLOAT:
                {
                alt30=2;
                }
                break;
            case RULE_STRING:
                {
                alt30=3;
                }
                break;
            case 25:
            case 26:
                {
                alt30=4;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 30, 0, input);

                throw nvae;
            }

            switch (alt30) {
                case 1 :
                    // InternalFortXTrans.g:2315:2: ( ( rule__Literal__Group_0__0 ) )
                    {
                    // InternalFortXTrans.g:2315:2: ( ( rule__Literal__Group_0__0 ) )
                    // InternalFortXTrans.g:2316:3: ( rule__Literal__Group_0__0 )
                    {
                     before(grammarAccess.getLiteralAccess().getGroup_0()); 
                    // InternalFortXTrans.g:2317:3: ( rule__Literal__Group_0__0 )
                    // InternalFortXTrans.g:2317:4: rule__Literal__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Literal__Group_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getLiteralAccess().getGroup_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalFortXTrans.g:2321:2: ( ( rule__Literal__Group_1__0 ) )
                    {
                    // InternalFortXTrans.g:2321:2: ( ( rule__Literal__Group_1__0 ) )
                    // InternalFortXTrans.g:2322:3: ( rule__Literal__Group_1__0 )
                    {
                     before(grammarAccess.getLiteralAccess().getGroup_1()); 
                    // InternalFortXTrans.g:2323:3: ( rule__Literal__Group_1__0 )
                    // InternalFortXTrans.g:2323:4: rule__Literal__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Literal__Group_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getLiteralAccess().getGroup_1()); 

                    }


                    }
                    break;
                case 3 :
                    // InternalFortXTrans.g:2327:2: ( ( rule__Literal__Group_2__0 ) )
                    {
                    // InternalFortXTrans.g:2327:2: ( ( rule__Literal__Group_2__0 ) )
                    // InternalFortXTrans.g:2328:3: ( rule__Literal__Group_2__0 )
                    {
                     before(grammarAccess.getLiteralAccess().getGroup_2()); 
                    // InternalFortXTrans.g:2329:3: ( rule__Literal__Group_2__0 )
                    // InternalFortXTrans.g:2329:4: rule__Literal__Group_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Literal__Group_2__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getLiteralAccess().getGroup_2()); 

                    }


                    }
                    break;
                case 4 :
                    // InternalFortXTrans.g:2333:2: ( ( rule__Literal__Group_3__0 ) )
                    {
                    // InternalFortXTrans.g:2333:2: ( ( rule__Literal__Group_3__0 ) )
                    // InternalFortXTrans.g:2334:3: ( rule__Literal__Group_3__0 )
                    {
                     before(grammarAccess.getLiteralAccess().getGroup_3()); 
                    // InternalFortXTrans.g:2335:3: ( rule__Literal__Group_3__0 )
                    // InternalFortXTrans.g:2335:4: rule__Literal__Group_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Literal__Group_3__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getLiteralAccess().getGroup_3()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Literal__Alternatives"


    // $ANTLR start "rule__Literal__ValueAlternatives_3_1_0"
    // InternalFortXTrans.g:2343:1: rule__Literal__ValueAlternatives_3_1_0 : ( ( 'true' ) | ( 'false' ) );
    public final void rule__Literal__ValueAlternatives_3_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2347:1: ( ( 'true' ) | ( 'false' ) )
            int alt31=2;
            int LA31_0 = input.LA(1);

            if ( (LA31_0==25) ) {
                alt31=1;
            }
            else if ( (LA31_0==26) ) {
                alt31=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 31, 0, input);

                throw nvae;
            }
            switch (alt31) {
                case 1 :
                    // InternalFortXTrans.g:2348:2: ( 'true' )
                    {
                    // InternalFortXTrans.g:2348:2: ( 'true' )
                    // InternalFortXTrans.g:2349:3: 'true'
                    {
                     before(grammarAccess.getLiteralAccess().getValueTrueKeyword_3_1_0_0()); 
                    match(input,25,FOLLOW_2); 
                     after(grammarAccess.getLiteralAccess().getValueTrueKeyword_3_1_0_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalFortXTrans.g:2354:2: ( 'false' )
                    {
                    // InternalFortXTrans.g:2354:2: ( 'false' )
                    // InternalFortXTrans.g:2355:3: 'false'
                    {
                     before(grammarAccess.getLiteralAccess().getValueFalseKeyword_3_1_0_1()); 
                    match(input,26,FOLLOW_2); 
                     after(grammarAccess.getLiteralAccess().getValueFalseKeyword_3_1_0_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Literal__ValueAlternatives_3_1_0"


    // $ANTLR start "rule__LocalVarDecl__Alternatives"
    // InternalFortXTrans.g:2364:1: rule__LocalVarDecl__Alternatives : ( ( ( rule__LocalVarDecl__Group_0__0 ) ) | ( ( rule__LocalVarDecl__Group_1__0 ) ) | ( ( rule__LocalVarDecl__Group_2__0 ) ) | ( ( rule__LocalVarDecl__Group_3__0 ) ) );
    public final void rule__LocalVarDecl__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2368:1: ( ( ( rule__LocalVarDecl__Group_0__0 ) ) | ( ( rule__LocalVarDecl__Group_1__0 ) ) | ( ( rule__LocalVarDecl__Group_2__0 ) ) | ( ( rule__LocalVarDecl__Group_3__0 ) ) )
            int alt32=4;
            alt32 = dfa32.predict(input);
            switch (alt32) {
                case 1 :
                    // InternalFortXTrans.g:2369:2: ( ( rule__LocalVarDecl__Group_0__0 ) )
                    {
                    // InternalFortXTrans.g:2369:2: ( ( rule__LocalVarDecl__Group_0__0 ) )
                    // InternalFortXTrans.g:2370:3: ( rule__LocalVarDecl__Group_0__0 )
                    {
                     before(grammarAccess.getLocalVarDeclAccess().getGroup_0()); 
                    // InternalFortXTrans.g:2371:3: ( rule__LocalVarDecl__Group_0__0 )
                    // InternalFortXTrans.g:2371:4: rule__LocalVarDecl__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__LocalVarDecl__Group_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getLocalVarDeclAccess().getGroup_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalFortXTrans.g:2375:2: ( ( rule__LocalVarDecl__Group_1__0 ) )
                    {
                    // InternalFortXTrans.g:2375:2: ( ( rule__LocalVarDecl__Group_1__0 ) )
                    // InternalFortXTrans.g:2376:3: ( rule__LocalVarDecl__Group_1__0 )
                    {
                     before(grammarAccess.getLocalVarDeclAccess().getGroup_1()); 
                    // InternalFortXTrans.g:2377:3: ( rule__LocalVarDecl__Group_1__0 )
                    // InternalFortXTrans.g:2377:4: rule__LocalVarDecl__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__LocalVarDecl__Group_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getLocalVarDeclAccess().getGroup_1()); 

                    }


                    }
                    break;
                case 3 :
                    // InternalFortXTrans.g:2381:2: ( ( rule__LocalVarDecl__Group_2__0 ) )
                    {
                    // InternalFortXTrans.g:2381:2: ( ( rule__LocalVarDecl__Group_2__0 ) )
                    // InternalFortXTrans.g:2382:3: ( rule__LocalVarDecl__Group_2__0 )
                    {
                     before(grammarAccess.getLocalVarDeclAccess().getGroup_2()); 
                    // InternalFortXTrans.g:2383:3: ( rule__LocalVarDecl__Group_2__0 )
                    // InternalFortXTrans.g:2383:4: rule__LocalVarDecl__Group_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__LocalVarDecl__Group_2__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getLocalVarDeclAccess().getGroup_2()); 

                    }


                    }
                    break;
                case 4 :
                    // InternalFortXTrans.g:2387:2: ( ( rule__LocalVarDecl__Group_3__0 ) )
                    {
                    // InternalFortXTrans.g:2387:2: ( ( rule__LocalVarDecl__Group_3__0 ) )
                    // InternalFortXTrans.g:2388:3: ( rule__LocalVarDecl__Group_3__0 )
                    {
                     before(grammarAccess.getLocalVarDeclAccess().getGroup_3()); 
                    // InternalFortXTrans.g:2389:3: ( rule__LocalVarDecl__Group_3__0 )
                    // InternalFortXTrans.g:2389:4: rule__LocalVarDecl__Group_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__LocalVarDecl__Group_3__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getLocalVarDeclAccess().getGroup_3()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Alternatives"


    // $ANTLR start "rule__Component__Group__0"
    // InternalFortXTrans.g:2397:1: rule__Component__Group__0 : rule__Component__Group__0__Impl rule__Component__Group__1 ;
    public final void rule__Component__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2401:1: ( rule__Component__Group__0__Impl rule__Component__Group__1 )
            // InternalFortXTrans.g:2402:2: rule__Component__Group__0__Impl rule__Component__Group__1
            {
            pushFollow(FOLLOW_5);
            rule__Component__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Component__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Component__Group__0"


    // $ANTLR start "rule__Component__Group__0__Impl"
    // InternalFortXTrans.g:2409:1: rule__Component__Group__0__Impl : ( 'component' ) ;
    public final void rule__Component__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2413:1: ( ( 'component' ) )
            // InternalFortXTrans.g:2414:1: ( 'component' )
            {
            // InternalFortXTrans.g:2414:1: ( 'component' )
            // InternalFortXTrans.g:2415:2: 'component'
            {
             before(grammarAccess.getComponentAccess().getComponentKeyword_0()); 
            match(input,27,FOLLOW_2); 
             after(grammarAccess.getComponentAccess().getComponentKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Component__Group__0__Impl"


    // $ANTLR start "rule__Component__Group__1"
    // InternalFortXTrans.g:2424:1: rule__Component__Group__1 : rule__Component__Group__1__Impl rule__Component__Group__2 ;
    public final void rule__Component__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2428:1: ( rule__Component__Group__1__Impl rule__Component__Group__2 )
            // InternalFortXTrans.g:2429:2: rule__Component__Group__1__Impl rule__Component__Group__2
            {
            pushFollow(FOLLOW_6);
            rule__Component__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Component__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Component__Group__1"


    // $ANTLR start "rule__Component__Group__1__Impl"
    // InternalFortXTrans.g:2436:1: rule__Component__Group__1__Impl : ( ( rule__Component__NameAssignment_1 ) ) ;
    public final void rule__Component__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2440:1: ( ( ( rule__Component__NameAssignment_1 ) ) )
            // InternalFortXTrans.g:2441:1: ( ( rule__Component__NameAssignment_1 ) )
            {
            // InternalFortXTrans.g:2441:1: ( ( rule__Component__NameAssignment_1 ) )
            // InternalFortXTrans.g:2442:2: ( rule__Component__NameAssignment_1 )
            {
             before(grammarAccess.getComponentAccess().getNameAssignment_1()); 
            // InternalFortXTrans.g:2443:2: ( rule__Component__NameAssignment_1 )
            // InternalFortXTrans.g:2443:3: rule__Component__NameAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__Component__NameAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getComponentAccess().getNameAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Component__Group__1__Impl"


    // $ANTLR start "rule__Component__Group__2"
    // InternalFortXTrans.g:2451:1: rule__Component__Group__2 : rule__Component__Group__2__Impl rule__Component__Group__3 ;
    public final void rule__Component__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2455:1: ( rule__Component__Group__2__Impl rule__Component__Group__3 )
            // InternalFortXTrans.g:2456:2: rule__Component__Group__2__Impl rule__Component__Group__3
            {
            pushFollow(FOLLOW_6);
            rule__Component__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Component__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Component__Group__2"


    // $ANTLR start "rule__Component__Group__2__Impl"
    // InternalFortXTrans.g:2463:1: rule__Component__Group__2__Impl : ( ( rule__Component__ImportsAssignment_2 )* ) ;
    public final void rule__Component__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2467:1: ( ( ( rule__Component__ImportsAssignment_2 )* ) )
            // InternalFortXTrans.g:2468:1: ( ( rule__Component__ImportsAssignment_2 )* )
            {
            // InternalFortXTrans.g:2468:1: ( ( rule__Component__ImportsAssignment_2 )* )
            // InternalFortXTrans.g:2469:2: ( rule__Component__ImportsAssignment_2 )*
            {
             before(grammarAccess.getComponentAccess().getImportsAssignment_2()); 
            // InternalFortXTrans.g:2470:2: ( rule__Component__ImportsAssignment_2 )*
            loop33:
            do {
                int alt33=2;
                int LA33_0 = input.LA(1);

                if ( (LA33_0==53) ) {
                    alt33=1;
                }


                switch (alt33) {
            	case 1 :
            	    // InternalFortXTrans.g:2470:3: rule__Component__ImportsAssignment_2
            	    {
            	    pushFollow(FOLLOW_7);
            	    rule__Component__ImportsAssignment_2();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop33;
                }
            } while (true);

             after(grammarAccess.getComponentAccess().getImportsAssignment_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Component__Group__2__Impl"


    // $ANTLR start "rule__Component__Group__3"
    // InternalFortXTrans.g:2478:1: rule__Component__Group__3 : rule__Component__Group__3__Impl rule__Component__Group__4 ;
    public final void rule__Component__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2482:1: ( rule__Component__Group__3__Impl rule__Component__Group__4 )
            // InternalFortXTrans.g:2483:2: rule__Component__Group__3__Impl rule__Component__Group__4
            {
            pushFollow(FOLLOW_8);
            rule__Component__Group__3__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Component__Group__4();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Component__Group__3"


    // $ANTLR start "rule__Component__Group__3__Impl"
    // InternalFortXTrans.g:2490:1: rule__Component__Group__3__Impl : ( ( ( rule__Component__ExportsAssignment_3 ) ) ( ( rule__Component__ExportsAssignment_3 )* ) ) ;
    public final void rule__Component__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2494:1: ( ( ( ( rule__Component__ExportsAssignment_3 ) ) ( ( rule__Component__ExportsAssignment_3 )* ) ) )
            // InternalFortXTrans.g:2495:1: ( ( ( rule__Component__ExportsAssignment_3 ) ) ( ( rule__Component__ExportsAssignment_3 )* ) )
            {
            // InternalFortXTrans.g:2495:1: ( ( ( rule__Component__ExportsAssignment_3 ) ) ( ( rule__Component__ExportsAssignment_3 )* ) )
            // InternalFortXTrans.g:2496:2: ( ( rule__Component__ExportsAssignment_3 ) ) ( ( rule__Component__ExportsAssignment_3 )* )
            {
            // InternalFortXTrans.g:2496:2: ( ( rule__Component__ExportsAssignment_3 ) )
            // InternalFortXTrans.g:2497:3: ( rule__Component__ExportsAssignment_3 )
            {
             before(grammarAccess.getComponentAccess().getExportsAssignment_3()); 
            // InternalFortXTrans.g:2498:3: ( rule__Component__ExportsAssignment_3 )
            // InternalFortXTrans.g:2498:4: rule__Component__ExportsAssignment_3
            {
            pushFollow(FOLLOW_9);
            rule__Component__ExportsAssignment_3();

            state._fsp--;


            }

             after(grammarAccess.getComponentAccess().getExportsAssignment_3()); 

            }

            // InternalFortXTrans.g:2501:2: ( ( rule__Component__ExportsAssignment_3 )* )
            // InternalFortXTrans.g:2502:3: ( rule__Component__ExportsAssignment_3 )*
            {
             before(grammarAccess.getComponentAccess().getExportsAssignment_3()); 
            // InternalFortXTrans.g:2503:3: ( rule__Component__ExportsAssignment_3 )*
            loop34:
            do {
                int alt34=2;
                int LA34_0 = input.LA(1);

                if ( (LA34_0==54) ) {
                    alt34=1;
                }


                switch (alt34) {
            	case 1 :
            	    // InternalFortXTrans.g:2503:4: rule__Component__ExportsAssignment_3
            	    {
            	    pushFollow(FOLLOW_9);
            	    rule__Component__ExportsAssignment_3();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop34;
                }
            } while (true);

             after(grammarAccess.getComponentAccess().getExportsAssignment_3()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Component__Group__3__Impl"


    // $ANTLR start "rule__Component__Group__4"
    // InternalFortXTrans.g:2512:1: rule__Component__Group__4 : rule__Component__Group__4__Impl rule__Component__Group__5 ;
    public final void rule__Component__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2516:1: ( rule__Component__Group__4__Impl rule__Component__Group__5 )
            // InternalFortXTrans.g:2517:2: rule__Component__Group__4__Impl rule__Component__Group__5
            {
            pushFollow(FOLLOW_8);
            rule__Component__Group__4__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Component__Group__5();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Component__Group__4"


    // $ANTLR start "rule__Component__Group__4__Impl"
    // InternalFortXTrans.g:2524:1: rule__Component__Group__4__Impl : ( ( rule__Component__DeclsAssignment_4 )* ) ;
    public final void rule__Component__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2528:1: ( ( ( rule__Component__DeclsAssignment_4 )* ) )
            // InternalFortXTrans.g:2529:1: ( ( rule__Component__DeclsAssignment_4 )* )
            {
            // InternalFortXTrans.g:2529:1: ( ( rule__Component__DeclsAssignment_4 )* )
            // InternalFortXTrans.g:2530:2: ( rule__Component__DeclsAssignment_4 )*
            {
             before(grammarAccess.getComponentAccess().getDeclsAssignment_4()); 
            // InternalFortXTrans.g:2531:2: ( rule__Component__DeclsAssignment_4 )*
            loop35:
            do {
                int alt35=2;
                int LA35_0 = input.LA(1);

                if ( (LA35_0==RULE_ID||LA35_0==35||(LA35_0>=56 && LA35_0<=59)||(LA35_0>=67 && LA35_0<=68)) ) {
                    alt35=1;
                }


                switch (alt35) {
            	case 1 :
            	    // InternalFortXTrans.g:2531:3: rule__Component__DeclsAssignment_4
            	    {
            	    pushFollow(FOLLOW_3);
            	    rule__Component__DeclsAssignment_4();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop35;
                }
            } while (true);

             after(grammarAccess.getComponentAccess().getDeclsAssignment_4()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Component__Group__4__Impl"


    // $ANTLR start "rule__Component__Group__5"
    // InternalFortXTrans.g:2539:1: rule__Component__Group__5 : rule__Component__Group__5__Impl ;
    public final void rule__Component__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2543:1: ( rule__Component__Group__5__Impl )
            // InternalFortXTrans.g:2544:2: rule__Component__Group__5__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Component__Group__5__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Component__Group__5"


    // $ANTLR start "rule__Component__Group__5__Impl"
    // InternalFortXTrans.g:2550:1: rule__Component__Group__5__Impl : ( 'end' ) ;
    public final void rule__Component__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2554:1: ( ( 'end' ) )
            // InternalFortXTrans.g:2555:1: ( 'end' )
            {
            // InternalFortXTrans.g:2555:1: ( 'end' )
            // InternalFortXTrans.g:2556:2: 'end'
            {
             before(grammarAccess.getComponentAccess().getEndKeyword_5()); 
            match(input,28,FOLLOW_2); 
             after(grammarAccess.getComponentAccess().getEndKeyword_5()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Component__Group__5__Impl"


    // $ANTLR start "rule__API__Group__0"
    // InternalFortXTrans.g:2566:1: rule__API__Group__0 : rule__API__Group__0__Impl rule__API__Group__1 ;
    public final void rule__API__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2570:1: ( rule__API__Group__0__Impl rule__API__Group__1 )
            // InternalFortXTrans.g:2571:2: rule__API__Group__0__Impl rule__API__Group__1
            {
            pushFollow(FOLLOW_5);
            rule__API__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__API__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__API__Group__0"


    // $ANTLR start "rule__API__Group__0__Impl"
    // InternalFortXTrans.g:2578:1: rule__API__Group__0__Impl : ( 'api' ) ;
    public final void rule__API__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2582:1: ( ( 'api' ) )
            // InternalFortXTrans.g:2583:1: ( 'api' )
            {
            // InternalFortXTrans.g:2583:1: ( 'api' )
            // InternalFortXTrans.g:2584:2: 'api'
            {
             before(grammarAccess.getAPIAccess().getApiKeyword_0()); 
            match(input,29,FOLLOW_2); 
             after(grammarAccess.getAPIAccess().getApiKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__API__Group__0__Impl"


    // $ANTLR start "rule__API__Group__1"
    // InternalFortXTrans.g:2593:1: rule__API__Group__1 : rule__API__Group__1__Impl rule__API__Group__2 ;
    public final void rule__API__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2597:1: ( rule__API__Group__1__Impl rule__API__Group__2 )
            // InternalFortXTrans.g:2598:2: rule__API__Group__1__Impl rule__API__Group__2
            {
            pushFollow(FOLLOW_10);
            rule__API__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__API__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__API__Group__1"


    // $ANTLR start "rule__API__Group__1__Impl"
    // InternalFortXTrans.g:2605:1: rule__API__Group__1__Impl : ( ( rule__API__NameAssignment_1 ) ) ;
    public final void rule__API__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2609:1: ( ( ( rule__API__NameAssignment_1 ) ) )
            // InternalFortXTrans.g:2610:1: ( ( rule__API__NameAssignment_1 ) )
            {
            // InternalFortXTrans.g:2610:1: ( ( rule__API__NameAssignment_1 ) )
            // InternalFortXTrans.g:2611:2: ( rule__API__NameAssignment_1 )
            {
             before(grammarAccess.getAPIAccess().getNameAssignment_1()); 
            // InternalFortXTrans.g:2612:2: ( rule__API__NameAssignment_1 )
            // InternalFortXTrans.g:2612:3: rule__API__NameAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__API__NameAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getAPIAccess().getNameAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__API__Group__1__Impl"


    // $ANTLR start "rule__API__Group__2"
    // InternalFortXTrans.g:2620:1: rule__API__Group__2 : rule__API__Group__2__Impl rule__API__Group__3 ;
    public final void rule__API__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2624:1: ( rule__API__Group__2__Impl rule__API__Group__3 )
            // InternalFortXTrans.g:2625:2: rule__API__Group__2__Impl rule__API__Group__3
            {
            pushFollow(FOLLOW_10);
            rule__API__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__API__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__API__Group__2"


    // $ANTLR start "rule__API__Group__2__Impl"
    // InternalFortXTrans.g:2632:1: rule__API__Group__2__Impl : ( ( rule__API__ImportsAssignment_2 )* ) ;
    public final void rule__API__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2636:1: ( ( ( rule__API__ImportsAssignment_2 )* ) )
            // InternalFortXTrans.g:2637:1: ( ( rule__API__ImportsAssignment_2 )* )
            {
            // InternalFortXTrans.g:2637:1: ( ( rule__API__ImportsAssignment_2 )* )
            // InternalFortXTrans.g:2638:2: ( rule__API__ImportsAssignment_2 )*
            {
             before(grammarAccess.getAPIAccess().getImportsAssignment_2()); 
            // InternalFortXTrans.g:2639:2: ( rule__API__ImportsAssignment_2 )*
            loop36:
            do {
                int alt36=2;
                int LA36_0 = input.LA(1);

                if ( (LA36_0==53) ) {
                    alt36=1;
                }


                switch (alt36) {
            	case 1 :
            	    // InternalFortXTrans.g:2639:3: rule__API__ImportsAssignment_2
            	    {
            	    pushFollow(FOLLOW_7);
            	    rule__API__ImportsAssignment_2();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop36;
                }
            } while (true);

             after(grammarAccess.getAPIAccess().getImportsAssignment_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__API__Group__2__Impl"


    // $ANTLR start "rule__API__Group__3"
    // InternalFortXTrans.g:2647:1: rule__API__Group__3 : rule__API__Group__3__Impl ;
    public final void rule__API__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2651:1: ( rule__API__Group__3__Impl )
            // InternalFortXTrans.g:2652:2: rule__API__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__API__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__API__Group__3"


    // $ANTLR start "rule__API__Group__3__Impl"
    // InternalFortXTrans.g:2658:1: rule__API__Group__3__Impl : ( 'end' ) ;
    public final void rule__API__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2662:1: ( ( 'end' ) )
            // InternalFortXTrans.g:2663:1: ( 'end' )
            {
            // InternalFortXTrans.g:2663:1: ( 'end' )
            // InternalFortXTrans.g:2664:2: 'end'
            {
             before(grammarAccess.getAPIAccess().getEndKeyword_3()); 
            match(input,28,FOLLOW_2); 
             after(grammarAccess.getAPIAccess().getEndKeyword_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__API__Group__3__Impl"


    // $ANTLR start "rule__Import__Group_0__0"
    // InternalFortXTrans.g:2674:1: rule__Import__Group_0__0 : rule__Import__Group_0__0__Impl rule__Import__Group_0__1 ;
    public final void rule__Import__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2678:1: ( rule__Import__Group_0__0__Impl rule__Import__Group_0__1 )
            // InternalFortXTrans.g:2679:2: rule__Import__Group_0__0__Impl rule__Import__Group_0__1
            {
            pushFollow(FOLLOW_5);
            rule__Import__Group_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Import__Group_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Import__Group_0__0"


    // $ANTLR start "rule__Import__Group_0__0__Impl"
    // InternalFortXTrans.g:2686:1: rule__Import__Group_0__0__Impl : ( ( rule__Import__ImpsAssignment_0_0 ) ) ;
    public final void rule__Import__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2690:1: ( ( ( rule__Import__ImpsAssignment_0_0 ) ) )
            // InternalFortXTrans.g:2691:1: ( ( rule__Import__ImpsAssignment_0_0 ) )
            {
            // InternalFortXTrans.g:2691:1: ( ( rule__Import__ImpsAssignment_0_0 ) )
            // InternalFortXTrans.g:2692:2: ( rule__Import__ImpsAssignment_0_0 )
            {
             before(grammarAccess.getImportAccess().getImpsAssignment_0_0()); 
            // InternalFortXTrans.g:2693:2: ( rule__Import__ImpsAssignment_0_0 )
            // InternalFortXTrans.g:2693:3: rule__Import__ImpsAssignment_0_0
            {
            pushFollow(FOLLOW_2);
            rule__Import__ImpsAssignment_0_0();

            state._fsp--;


            }

             after(grammarAccess.getImportAccess().getImpsAssignment_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Import__Group_0__0__Impl"


    // $ANTLR start "rule__Import__Group_0__1"
    // InternalFortXTrans.g:2701:1: rule__Import__Group_0__1 : rule__Import__Group_0__1__Impl ;
    public final void rule__Import__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2705:1: ( rule__Import__Group_0__1__Impl )
            // InternalFortXTrans.g:2706:2: rule__Import__Group_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Import__Group_0__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Import__Group_0__1"


    // $ANTLR start "rule__Import__Group_0__1__Impl"
    // InternalFortXTrans.g:2712:1: rule__Import__Group_0__1__Impl : ( ( rule__Import__ImportedNamesAssignment_0_1 ) ) ;
    public final void rule__Import__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2716:1: ( ( ( rule__Import__ImportedNamesAssignment_0_1 ) ) )
            // InternalFortXTrans.g:2717:1: ( ( rule__Import__ImportedNamesAssignment_0_1 ) )
            {
            // InternalFortXTrans.g:2717:1: ( ( rule__Import__ImportedNamesAssignment_0_1 ) )
            // InternalFortXTrans.g:2718:2: ( rule__Import__ImportedNamesAssignment_0_1 )
            {
             before(grammarAccess.getImportAccess().getImportedNamesAssignment_0_1()); 
            // InternalFortXTrans.g:2719:2: ( rule__Import__ImportedNamesAssignment_0_1 )
            // InternalFortXTrans.g:2719:3: rule__Import__ImportedNamesAssignment_0_1
            {
            pushFollow(FOLLOW_2);
            rule__Import__ImportedNamesAssignment_0_1();

            state._fsp--;


            }

             after(grammarAccess.getImportAccess().getImportedNamesAssignment_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Import__Group_0__1__Impl"


    // $ANTLR start "rule__Import__Group_1__0"
    // InternalFortXTrans.g:2728:1: rule__Import__Group_1__0 : rule__Import__Group_1__0__Impl rule__Import__Group_1__1 ;
    public final void rule__Import__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2732:1: ( rule__Import__Group_1__0__Impl rule__Import__Group_1__1 )
            // InternalFortXTrans.g:2733:2: rule__Import__Group_1__0__Impl rule__Import__Group_1__1
            {
            pushFollow(FOLLOW_11);
            rule__Import__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Import__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Import__Group_1__0"


    // $ANTLR start "rule__Import__Group_1__0__Impl"
    // InternalFortXTrans.g:2740:1: rule__Import__Group_1__0__Impl : ( ( rule__Import__ImpsAssignment_1_0 ) ) ;
    public final void rule__Import__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2744:1: ( ( ( rule__Import__ImpsAssignment_1_0 ) ) )
            // InternalFortXTrans.g:2745:1: ( ( rule__Import__ImpsAssignment_1_0 ) )
            {
            // InternalFortXTrans.g:2745:1: ( ( rule__Import__ImpsAssignment_1_0 ) )
            // InternalFortXTrans.g:2746:2: ( rule__Import__ImpsAssignment_1_0 )
            {
             before(grammarAccess.getImportAccess().getImpsAssignment_1_0()); 
            // InternalFortXTrans.g:2747:2: ( rule__Import__ImpsAssignment_1_0 )
            // InternalFortXTrans.g:2747:3: rule__Import__ImpsAssignment_1_0
            {
            pushFollow(FOLLOW_2);
            rule__Import__ImpsAssignment_1_0();

            state._fsp--;


            }

             after(grammarAccess.getImportAccess().getImpsAssignment_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Import__Group_1__0__Impl"


    // $ANTLR start "rule__Import__Group_1__1"
    // InternalFortXTrans.g:2755:1: rule__Import__Group_1__1 : rule__Import__Group_1__1__Impl rule__Import__Group_1__2 ;
    public final void rule__Import__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2759:1: ( rule__Import__Group_1__1__Impl rule__Import__Group_1__2 )
            // InternalFortXTrans.g:2760:2: rule__Import__Group_1__1__Impl rule__Import__Group_1__2
            {
            pushFollow(FOLLOW_12);
            rule__Import__Group_1__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Import__Group_1__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Import__Group_1__1"


    // $ANTLR start "rule__Import__Group_1__1__Impl"
    // InternalFortXTrans.g:2767:1: rule__Import__Group_1__1__Impl : ( ( rule__Import__ApiAssignment_1_1 ) ) ;
    public final void rule__Import__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2771:1: ( ( ( rule__Import__ApiAssignment_1_1 ) ) )
            // InternalFortXTrans.g:2772:1: ( ( rule__Import__ApiAssignment_1_1 ) )
            {
            // InternalFortXTrans.g:2772:1: ( ( rule__Import__ApiAssignment_1_1 ) )
            // InternalFortXTrans.g:2773:2: ( rule__Import__ApiAssignment_1_1 )
            {
             before(grammarAccess.getImportAccess().getApiAssignment_1_1()); 
            // InternalFortXTrans.g:2774:2: ( rule__Import__ApiAssignment_1_1 )
            // InternalFortXTrans.g:2774:3: rule__Import__ApiAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Import__ApiAssignment_1_1();

            state._fsp--;


            }

             after(grammarAccess.getImportAccess().getApiAssignment_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Import__Group_1__1__Impl"


    // $ANTLR start "rule__Import__Group_1__2"
    // InternalFortXTrans.g:2782:1: rule__Import__Group_1__2 : rule__Import__Group_1__2__Impl ;
    public final void rule__Import__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2786:1: ( rule__Import__Group_1__2__Impl )
            // InternalFortXTrans.g:2787:2: rule__Import__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Import__Group_1__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Import__Group_1__2"


    // $ANTLR start "rule__Import__Group_1__2__Impl"
    // InternalFortXTrans.g:2793:1: rule__Import__Group_1__2__Impl : ( ( rule__Import__AliasedimportedNamesAssignment_1_2 ) ) ;
    public final void rule__Import__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2797:1: ( ( ( rule__Import__AliasedimportedNamesAssignment_1_2 ) ) )
            // InternalFortXTrans.g:2798:1: ( ( rule__Import__AliasedimportedNamesAssignment_1_2 ) )
            {
            // InternalFortXTrans.g:2798:1: ( ( rule__Import__AliasedimportedNamesAssignment_1_2 ) )
            // InternalFortXTrans.g:2799:2: ( rule__Import__AliasedimportedNamesAssignment_1_2 )
            {
             before(grammarAccess.getImportAccess().getAliasedimportedNamesAssignment_1_2()); 
            // InternalFortXTrans.g:2800:2: ( rule__Import__AliasedimportedNamesAssignment_1_2 )
            // InternalFortXTrans.g:2800:3: rule__Import__AliasedimportedNamesAssignment_1_2
            {
            pushFollow(FOLLOW_2);
            rule__Import__AliasedimportedNamesAssignment_1_2();

            state._fsp--;


            }

             after(grammarAccess.getImportAccess().getAliasedimportedNamesAssignment_1_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Import__Group_1__2__Impl"


    // $ANTLR start "rule__Export__Group_0__0"
    // InternalFortXTrans.g:2809:1: rule__Export__Group_0__0 : rule__Export__Group_0__0__Impl rule__Export__Group_0__1 ;
    public final void rule__Export__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2813:1: ( rule__Export__Group_0__0__Impl rule__Export__Group_0__1 )
            // InternalFortXTrans.g:2814:2: rule__Export__Group_0__0__Impl rule__Export__Group_0__1
            {
            pushFollow(FOLLOW_5);
            rule__Export__Group_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Export__Group_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Export__Group_0__0"


    // $ANTLR start "rule__Export__Group_0__0__Impl"
    // InternalFortXTrans.g:2821:1: rule__Export__Group_0__0__Impl : ( ( rule__Export__ExpAssignment_0_0 ) ) ;
    public final void rule__Export__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2825:1: ( ( ( rule__Export__ExpAssignment_0_0 ) ) )
            // InternalFortXTrans.g:2826:1: ( ( rule__Export__ExpAssignment_0_0 ) )
            {
            // InternalFortXTrans.g:2826:1: ( ( rule__Export__ExpAssignment_0_0 ) )
            // InternalFortXTrans.g:2827:2: ( rule__Export__ExpAssignment_0_0 )
            {
             before(grammarAccess.getExportAccess().getExpAssignment_0_0()); 
            // InternalFortXTrans.g:2828:2: ( rule__Export__ExpAssignment_0_0 )
            // InternalFortXTrans.g:2828:3: rule__Export__ExpAssignment_0_0
            {
            pushFollow(FOLLOW_2);
            rule__Export__ExpAssignment_0_0();

            state._fsp--;


            }

             after(grammarAccess.getExportAccess().getExpAssignment_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Export__Group_0__0__Impl"


    // $ANTLR start "rule__Export__Group_0__1"
    // InternalFortXTrans.g:2836:1: rule__Export__Group_0__1 : rule__Export__Group_0__1__Impl ;
    public final void rule__Export__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2840:1: ( rule__Export__Group_0__1__Impl )
            // InternalFortXTrans.g:2841:2: rule__Export__Group_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Export__Group_0__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Export__Group_0__1"


    // $ANTLR start "rule__Export__Group_0__1__Impl"
    // InternalFortXTrans.g:2847:1: rule__Export__Group_0__1__Impl : ( ( rule__Export__ExportedNameAssignment_0_1 ) ) ;
    public final void rule__Export__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2851:1: ( ( ( rule__Export__ExportedNameAssignment_0_1 ) ) )
            // InternalFortXTrans.g:2852:1: ( ( rule__Export__ExportedNameAssignment_0_1 ) )
            {
            // InternalFortXTrans.g:2852:1: ( ( rule__Export__ExportedNameAssignment_0_1 ) )
            // InternalFortXTrans.g:2853:2: ( rule__Export__ExportedNameAssignment_0_1 )
            {
             before(grammarAccess.getExportAccess().getExportedNameAssignment_0_1()); 
            // InternalFortXTrans.g:2854:2: ( rule__Export__ExportedNameAssignment_0_1 )
            // InternalFortXTrans.g:2854:3: rule__Export__ExportedNameAssignment_0_1
            {
            pushFollow(FOLLOW_2);
            rule__Export__ExportedNameAssignment_0_1();

            state._fsp--;


            }

             after(grammarAccess.getExportAccess().getExportedNameAssignment_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Export__Group_0__1__Impl"


    // $ANTLR start "rule__Export__Group_1__0"
    // InternalFortXTrans.g:2863:1: rule__Export__Group_1__0 : rule__Export__Group_1__0__Impl rule__Export__Group_1__1 ;
    public final void rule__Export__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2867:1: ( rule__Export__Group_1__0__Impl rule__Export__Group_1__1 )
            // InternalFortXTrans.g:2868:2: rule__Export__Group_1__0__Impl rule__Export__Group_1__1
            {
            pushFollow(FOLLOW_13);
            rule__Export__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Export__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Export__Group_1__0"


    // $ANTLR start "rule__Export__Group_1__0__Impl"
    // InternalFortXTrans.g:2875:1: rule__Export__Group_1__0__Impl : ( ( rule__Export__ExpAssignment_1_0 ) ) ;
    public final void rule__Export__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2879:1: ( ( ( rule__Export__ExpAssignment_1_0 ) ) )
            // InternalFortXTrans.g:2880:1: ( ( rule__Export__ExpAssignment_1_0 ) )
            {
            // InternalFortXTrans.g:2880:1: ( ( rule__Export__ExpAssignment_1_0 ) )
            // InternalFortXTrans.g:2881:2: ( rule__Export__ExpAssignment_1_0 )
            {
             before(grammarAccess.getExportAccess().getExpAssignment_1_0()); 
            // InternalFortXTrans.g:2882:2: ( rule__Export__ExpAssignment_1_0 )
            // InternalFortXTrans.g:2882:3: rule__Export__ExpAssignment_1_0
            {
            pushFollow(FOLLOW_2);
            rule__Export__ExpAssignment_1_0();

            state._fsp--;


            }

             after(grammarAccess.getExportAccess().getExpAssignment_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Export__Group_1__0__Impl"


    // $ANTLR start "rule__Export__Group_1__1"
    // InternalFortXTrans.g:2890:1: rule__Export__Group_1__1 : rule__Export__Group_1__1__Impl rule__Export__Group_1__2 ;
    public final void rule__Export__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2894:1: ( rule__Export__Group_1__1__Impl rule__Export__Group_1__2 )
            // InternalFortXTrans.g:2895:2: rule__Export__Group_1__1__Impl rule__Export__Group_1__2
            {
            pushFollow(FOLLOW_5);
            rule__Export__Group_1__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Export__Group_1__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Export__Group_1__1"


    // $ANTLR start "rule__Export__Group_1__1__Impl"
    // InternalFortXTrans.g:2902:1: rule__Export__Group_1__1__Impl : ( ( rule__Export__BrackAssignment_1_1 ) ) ;
    public final void rule__Export__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2906:1: ( ( ( rule__Export__BrackAssignment_1_1 ) ) )
            // InternalFortXTrans.g:2907:1: ( ( rule__Export__BrackAssignment_1_1 ) )
            {
            // InternalFortXTrans.g:2907:1: ( ( rule__Export__BrackAssignment_1_1 ) )
            // InternalFortXTrans.g:2908:2: ( rule__Export__BrackAssignment_1_1 )
            {
             before(grammarAccess.getExportAccess().getBrackAssignment_1_1()); 
            // InternalFortXTrans.g:2909:2: ( rule__Export__BrackAssignment_1_1 )
            // InternalFortXTrans.g:2909:3: rule__Export__BrackAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Export__BrackAssignment_1_1();

            state._fsp--;


            }

             after(grammarAccess.getExportAccess().getBrackAssignment_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Export__Group_1__1__Impl"


    // $ANTLR start "rule__Export__Group_1__2"
    // InternalFortXTrans.g:2917:1: rule__Export__Group_1__2 : rule__Export__Group_1__2__Impl rule__Export__Group_1__3 ;
    public final void rule__Export__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2921:1: ( rule__Export__Group_1__2__Impl rule__Export__Group_1__3 )
            // InternalFortXTrans.g:2922:2: rule__Export__Group_1__2__Impl rule__Export__Group_1__3
            {
            pushFollow(FOLLOW_14);
            rule__Export__Group_1__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Export__Group_1__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Export__Group_1__2"


    // $ANTLR start "rule__Export__Group_1__2__Impl"
    // InternalFortXTrans.g:2929:1: rule__Export__Group_1__2__Impl : ( ( rule__Export__ExportedNameAssignment_1_2 ) ) ;
    public final void rule__Export__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2933:1: ( ( ( rule__Export__ExportedNameAssignment_1_2 ) ) )
            // InternalFortXTrans.g:2934:1: ( ( rule__Export__ExportedNameAssignment_1_2 ) )
            {
            // InternalFortXTrans.g:2934:1: ( ( rule__Export__ExportedNameAssignment_1_2 ) )
            // InternalFortXTrans.g:2935:2: ( rule__Export__ExportedNameAssignment_1_2 )
            {
             before(grammarAccess.getExportAccess().getExportedNameAssignment_1_2()); 
            // InternalFortXTrans.g:2936:2: ( rule__Export__ExportedNameAssignment_1_2 )
            // InternalFortXTrans.g:2936:3: rule__Export__ExportedNameAssignment_1_2
            {
            pushFollow(FOLLOW_2);
            rule__Export__ExportedNameAssignment_1_2();

            state._fsp--;


            }

             after(grammarAccess.getExportAccess().getExportedNameAssignment_1_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Export__Group_1__2__Impl"


    // $ANTLR start "rule__Export__Group_1__3"
    // InternalFortXTrans.g:2944:1: rule__Export__Group_1__3 : rule__Export__Group_1__3__Impl rule__Export__Group_1__4 ;
    public final void rule__Export__Group_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2948:1: ( rule__Export__Group_1__3__Impl rule__Export__Group_1__4 )
            // InternalFortXTrans.g:2949:2: rule__Export__Group_1__3__Impl rule__Export__Group_1__4
            {
            pushFollow(FOLLOW_14);
            rule__Export__Group_1__3__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Export__Group_1__4();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Export__Group_1__3"


    // $ANTLR start "rule__Export__Group_1__3__Impl"
    // InternalFortXTrans.g:2956:1: rule__Export__Group_1__3__Impl : ( ( rule__Export__Group_1_3__0 )* ) ;
    public final void rule__Export__Group_1__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2960:1: ( ( ( rule__Export__Group_1_3__0 )* ) )
            // InternalFortXTrans.g:2961:1: ( ( rule__Export__Group_1_3__0 )* )
            {
            // InternalFortXTrans.g:2961:1: ( ( rule__Export__Group_1_3__0 )* )
            // InternalFortXTrans.g:2962:2: ( rule__Export__Group_1_3__0 )*
            {
             before(grammarAccess.getExportAccess().getGroup_1_3()); 
            // InternalFortXTrans.g:2963:2: ( rule__Export__Group_1_3__0 )*
            loop37:
            do {
                int alt37=2;
                int LA37_0 = input.LA(1);

                if ( (LA37_0==31) ) {
                    alt37=1;
                }


                switch (alt37) {
            	case 1 :
            	    // InternalFortXTrans.g:2963:3: rule__Export__Group_1_3__0
            	    {
            	    pushFollow(FOLLOW_15);
            	    rule__Export__Group_1_3__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop37;
                }
            } while (true);

             after(grammarAccess.getExportAccess().getGroup_1_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Export__Group_1__3__Impl"


    // $ANTLR start "rule__Export__Group_1__4"
    // InternalFortXTrans.g:2971:1: rule__Export__Group_1__4 : rule__Export__Group_1__4__Impl ;
    public final void rule__Export__Group_1__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2975:1: ( rule__Export__Group_1__4__Impl )
            // InternalFortXTrans.g:2976:2: rule__Export__Group_1__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Export__Group_1__4__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Export__Group_1__4"


    // $ANTLR start "rule__Export__Group_1__4__Impl"
    // InternalFortXTrans.g:2982:1: rule__Export__Group_1__4__Impl : ( '}' ) ;
    public final void rule__Export__Group_1__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2986:1: ( ( '}' ) )
            // InternalFortXTrans.g:2987:1: ( '}' )
            {
            // InternalFortXTrans.g:2987:1: ( '}' )
            // InternalFortXTrans.g:2988:2: '}'
            {
             before(grammarAccess.getExportAccess().getRightCurlyBracketKeyword_1_4()); 
            match(input,30,FOLLOW_2); 
             after(grammarAccess.getExportAccess().getRightCurlyBracketKeyword_1_4()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Export__Group_1__4__Impl"


    // $ANTLR start "rule__Export__Group_1_3__0"
    // InternalFortXTrans.g:2998:1: rule__Export__Group_1_3__0 : rule__Export__Group_1_3__0__Impl rule__Export__Group_1_3__1 ;
    public final void rule__Export__Group_1_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3002:1: ( rule__Export__Group_1_3__0__Impl rule__Export__Group_1_3__1 )
            // InternalFortXTrans.g:3003:2: rule__Export__Group_1_3__0__Impl rule__Export__Group_1_3__1
            {
            pushFollow(FOLLOW_5);
            rule__Export__Group_1_3__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Export__Group_1_3__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Export__Group_1_3__0"


    // $ANTLR start "rule__Export__Group_1_3__0__Impl"
    // InternalFortXTrans.g:3010:1: rule__Export__Group_1_3__0__Impl : ( ',' ) ;
    public final void rule__Export__Group_1_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3014:1: ( ( ',' ) )
            // InternalFortXTrans.g:3015:1: ( ',' )
            {
            // InternalFortXTrans.g:3015:1: ( ',' )
            // InternalFortXTrans.g:3016:2: ','
            {
             before(grammarAccess.getExportAccess().getCommaKeyword_1_3_0()); 
            match(input,31,FOLLOW_2); 
             after(grammarAccess.getExportAccess().getCommaKeyword_1_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Export__Group_1_3__0__Impl"


    // $ANTLR start "rule__Export__Group_1_3__1"
    // InternalFortXTrans.g:3025:1: rule__Export__Group_1_3__1 : rule__Export__Group_1_3__1__Impl ;
    public final void rule__Export__Group_1_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3029:1: ( rule__Export__Group_1_3__1__Impl )
            // InternalFortXTrans.g:3030:2: rule__Export__Group_1_3__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Export__Group_1_3__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Export__Group_1_3__1"


    // $ANTLR start "rule__Export__Group_1_3__1__Impl"
    // InternalFortXTrans.g:3036:1: rule__Export__Group_1_3__1__Impl : ( ( rule__Export__ExportedNameAssignment_1_3_1 ) ) ;
    public final void rule__Export__Group_1_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3040:1: ( ( ( rule__Export__ExportedNameAssignment_1_3_1 ) ) )
            // InternalFortXTrans.g:3041:1: ( ( rule__Export__ExportedNameAssignment_1_3_1 ) )
            {
            // InternalFortXTrans.g:3041:1: ( ( rule__Export__ExportedNameAssignment_1_3_1 ) )
            // InternalFortXTrans.g:3042:2: ( rule__Export__ExportedNameAssignment_1_3_1 )
            {
             before(grammarAccess.getExportAccess().getExportedNameAssignment_1_3_1()); 
            // InternalFortXTrans.g:3043:2: ( rule__Export__ExportedNameAssignment_1_3_1 )
            // InternalFortXTrans.g:3043:3: rule__Export__ExportedNameAssignment_1_3_1
            {
            pushFollow(FOLLOW_2);
            rule__Export__ExportedNameAssignment_1_3_1();

            state._fsp--;


            }

             after(grammarAccess.getExportAccess().getExportedNameAssignment_1_3_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Export__Group_1_3__1__Impl"


    // $ANTLR start "rule__ImportedNames__Group_0__0"
    // InternalFortXTrans.g:3052:1: rule__ImportedNames__Group_0__0 : rule__ImportedNames__Group_0__0__Impl rule__ImportedNames__Group_0__1 ;
    public final void rule__ImportedNames__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3056:1: ( rule__ImportedNames__Group_0__0__Impl rule__ImportedNames__Group_0__1 )
            // InternalFortXTrans.g:3057:2: rule__ImportedNames__Group_0__0__Impl rule__ImportedNames__Group_0__1
            {
            pushFollow(FOLLOW_16);
            rule__ImportedNames__Group_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ImportedNames__Group_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_0__0"


    // $ANTLR start "rule__ImportedNames__Group_0__0__Impl"
    // InternalFortXTrans.g:3064:1: rule__ImportedNames__Group_0__0__Impl : ( ( rule__ImportedNames__ImpnameAssignment_0_0 ) ) ;
    public final void rule__ImportedNames__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3068:1: ( ( ( rule__ImportedNames__ImpnameAssignment_0_0 ) ) )
            // InternalFortXTrans.g:3069:1: ( ( rule__ImportedNames__ImpnameAssignment_0_0 ) )
            {
            // InternalFortXTrans.g:3069:1: ( ( rule__ImportedNames__ImpnameAssignment_0_0 ) )
            // InternalFortXTrans.g:3070:2: ( rule__ImportedNames__ImpnameAssignment_0_0 )
            {
             before(grammarAccess.getImportedNamesAccess().getImpnameAssignment_0_0()); 
            // InternalFortXTrans.g:3071:2: ( rule__ImportedNames__ImpnameAssignment_0_0 )
            // InternalFortXTrans.g:3071:3: rule__ImportedNames__ImpnameAssignment_0_0
            {
            pushFollow(FOLLOW_2);
            rule__ImportedNames__ImpnameAssignment_0_0();

            state._fsp--;


            }

             after(grammarAccess.getImportedNamesAccess().getImpnameAssignment_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_0__0__Impl"


    // $ANTLR start "rule__ImportedNames__Group_0__1"
    // InternalFortXTrans.g:3079:1: rule__ImportedNames__Group_0__1 : rule__ImportedNames__Group_0__1__Impl rule__ImportedNames__Group_0__2 ;
    public final void rule__ImportedNames__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3083:1: ( rule__ImportedNames__Group_0__1__Impl rule__ImportedNames__Group_0__2 )
            // InternalFortXTrans.g:3084:2: rule__ImportedNames__Group_0__1__Impl rule__ImportedNames__Group_0__2
            {
            pushFollow(FOLLOW_13);
            rule__ImportedNames__Group_0__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ImportedNames__Group_0__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_0__1"


    // $ANTLR start "rule__ImportedNames__Group_0__1__Impl"
    // InternalFortXTrans.g:3091:1: rule__ImportedNames__Group_0__1__Impl : ( '.' ) ;
    public final void rule__ImportedNames__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3095:1: ( ( '.' ) )
            // InternalFortXTrans.g:3096:1: ( '.' )
            {
            // InternalFortXTrans.g:3096:1: ( '.' )
            // InternalFortXTrans.g:3097:2: '.'
            {
             before(grammarAccess.getImportedNamesAccess().getFullStopKeyword_0_1()); 
            match(input,32,FOLLOW_2); 
             after(grammarAccess.getImportedNamesAccess().getFullStopKeyword_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_0__1__Impl"


    // $ANTLR start "rule__ImportedNames__Group_0__2"
    // InternalFortXTrans.g:3106:1: rule__ImportedNames__Group_0__2 : rule__ImportedNames__Group_0__2__Impl rule__ImportedNames__Group_0__3 ;
    public final void rule__ImportedNames__Group_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3110:1: ( rule__ImportedNames__Group_0__2__Impl rule__ImportedNames__Group_0__3 )
            // InternalFortXTrans.g:3111:2: rule__ImportedNames__Group_0__2__Impl rule__ImportedNames__Group_0__3
            {
            pushFollow(FOLLOW_17);
            rule__ImportedNames__Group_0__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ImportedNames__Group_0__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_0__2"


    // $ANTLR start "rule__ImportedNames__Group_0__2__Impl"
    // InternalFortXTrans.g:3118:1: rule__ImportedNames__Group_0__2__Impl : ( '{' ) ;
    public final void rule__ImportedNames__Group_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3122:1: ( ( '{' ) )
            // InternalFortXTrans.g:3123:1: ( '{' )
            {
            // InternalFortXTrans.g:3123:1: ( '{' )
            // InternalFortXTrans.g:3124:2: '{'
            {
             before(grammarAccess.getImportedNamesAccess().getLeftCurlyBracketKeyword_0_2()); 
            match(input,33,FOLLOW_2); 
             after(grammarAccess.getImportedNamesAccess().getLeftCurlyBracketKeyword_0_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_0__2__Impl"


    // $ANTLR start "rule__ImportedNames__Group_0__3"
    // InternalFortXTrans.g:3133:1: rule__ImportedNames__Group_0__3 : rule__ImportedNames__Group_0__3__Impl rule__ImportedNames__Group_0__4 ;
    public final void rule__ImportedNames__Group_0__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3137:1: ( rule__ImportedNames__Group_0__3__Impl rule__ImportedNames__Group_0__4 )
            // InternalFortXTrans.g:3138:2: rule__ImportedNames__Group_0__3__Impl rule__ImportedNames__Group_0__4
            {
            pushFollow(FOLLOW_18);
            rule__ImportedNames__Group_0__3__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ImportedNames__Group_0__4();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_0__3"


    // $ANTLR start "rule__ImportedNames__Group_0__3__Impl"
    // InternalFortXTrans.g:3145:1: rule__ImportedNames__Group_0__3__Impl : ( RULE_DOTS ) ;
    public final void rule__ImportedNames__Group_0__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3149:1: ( ( RULE_DOTS ) )
            // InternalFortXTrans.g:3150:1: ( RULE_DOTS )
            {
            // InternalFortXTrans.g:3150:1: ( RULE_DOTS )
            // InternalFortXTrans.g:3151:2: RULE_DOTS
            {
             before(grammarAccess.getImportedNamesAccess().getDOTSTerminalRuleCall_0_3()); 
            match(input,RULE_DOTS,FOLLOW_2); 
             after(grammarAccess.getImportedNamesAccess().getDOTSTerminalRuleCall_0_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_0__3__Impl"


    // $ANTLR start "rule__ImportedNames__Group_0__4"
    // InternalFortXTrans.g:3160:1: rule__ImportedNames__Group_0__4 : rule__ImportedNames__Group_0__4__Impl rule__ImportedNames__Group_0__5 ;
    public final void rule__ImportedNames__Group_0__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3164:1: ( rule__ImportedNames__Group_0__4__Impl rule__ImportedNames__Group_0__5 )
            // InternalFortXTrans.g:3165:2: rule__ImportedNames__Group_0__4__Impl rule__ImportedNames__Group_0__5
            {
            pushFollow(FOLLOW_19);
            rule__ImportedNames__Group_0__4__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ImportedNames__Group_0__5();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_0__4"


    // $ANTLR start "rule__ImportedNames__Group_0__4__Impl"
    // InternalFortXTrans.g:3172:1: rule__ImportedNames__Group_0__4__Impl : ( '}' ) ;
    public final void rule__ImportedNames__Group_0__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3176:1: ( ( '}' ) )
            // InternalFortXTrans.g:3177:1: ( '}' )
            {
            // InternalFortXTrans.g:3177:1: ( '}' )
            // InternalFortXTrans.g:3178:2: '}'
            {
             before(grammarAccess.getImportedNamesAccess().getRightCurlyBracketKeyword_0_4()); 
            match(input,30,FOLLOW_2); 
             after(grammarAccess.getImportedNamesAccess().getRightCurlyBracketKeyword_0_4()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_0__4__Impl"


    // $ANTLR start "rule__ImportedNames__Group_0__5"
    // InternalFortXTrans.g:3187:1: rule__ImportedNames__Group_0__5 : rule__ImportedNames__Group_0__5__Impl ;
    public final void rule__ImportedNames__Group_0__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3191:1: ( rule__ImportedNames__Group_0__5__Impl )
            // InternalFortXTrans.g:3192:2: rule__ImportedNames__Group_0__5__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ImportedNames__Group_0__5__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_0__5"


    // $ANTLR start "rule__ImportedNames__Group_0__5__Impl"
    // InternalFortXTrans.g:3198:1: rule__ImportedNames__Group_0__5__Impl : ( ( rule__ImportedNames__Group_0_5__0 )? ) ;
    public final void rule__ImportedNames__Group_0__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3202:1: ( ( ( rule__ImportedNames__Group_0_5__0 )? ) )
            // InternalFortXTrans.g:3203:1: ( ( rule__ImportedNames__Group_0_5__0 )? )
            {
            // InternalFortXTrans.g:3203:1: ( ( rule__ImportedNames__Group_0_5__0 )? )
            // InternalFortXTrans.g:3204:2: ( rule__ImportedNames__Group_0_5__0 )?
            {
             before(grammarAccess.getImportedNamesAccess().getGroup_0_5()); 
            // InternalFortXTrans.g:3205:2: ( rule__ImportedNames__Group_0_5__0 )?
            int alt38=2;
            int LA38_0 = input.LA(1);

            if ( (LA38_0==55) ) {
                alt38=1;
            }
            switch (alt38) {
                case 1 :
                    // InternalFortXTrans.g:3205:3: rule__ImportedNames__Group_0_5__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ImportedNames__Group_0_5__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getImportedNamesAccess().getGroup_0_5()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_0__5__Impl"


    // $ANTLR start "rule__ImportedNames__Group_0_5__0"
    // InternalFortXTrans.g:3214:1: rule__ImportedNames__Group_0_5__0 : rule__ImportedNames__Group_0_5__0__Impl rule__ImportedNames__Group_0_5__1 ;
    public final void rule__ImportedNames__Group_0_5__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3218:1: ( rule__ImportedNames__Group_0_5__0__Impl rule__ImportedNames__Group_0_5__1 )
            // InternalFortXTrans.g:3219:2: rule__ImportedNames__Group_0_5__0__Impl rule__ImportedNames__Group_0_5__1
            {
            pushFollow(FOLLOW_12);
            rule__ImportedNames__Group_0_5__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ImportedNames__Group_0_5__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_0_5__0"


    // $ANTLR start "rule__ImportedNames__Group_0_5__0__Impl"
    // InternalFortXTrans.g:3226:1: rule__ImportedNames__Group_0_5__0__Impl : ( ( rule__ImportedNames__ExceptAssignment_0_5_0 ) ) ;
    public final void rule__ImportedNames__Group_0_5__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3230:1: ( ( ( rule__ImportedNames__ExceptAssignment_0_5_0 ) ) )
            // InternalFortXTrans.g:3231:1: ( ( rule__ImportedNames__ExceptAssignment_0_5_0 ) )
            {
            // InternalFortXTrans.g:3231:1: ( ( rule__ImportedNames__ExceptAssignment_0_5_0 ) )
            // InternalFortXTrans.g:3232:2: ( rule__ImportedNames__ExceptAssignment_0_5_0 )
            {
             before(grammarAccess.getImportedNamesAccess().getExceptAssignment_0_5_0()); 
            // InternalFortXTrans.g:3233:2: ( rule__ImportedNames__ExceptAssignment_0_5_0 )
            // InternalFortXTrans.g:3233:3: rule__ImportedNames__ExceptAssignment_0_5_0
            {
            pushFollow(FOLLOW_2);
            rule__ImportedNames__ExceptAssignment_0_5_0();

            state._fsp--;


            }

             after(grammarAccess.getImportedNamesAccess().getExceptAssignment_0_5_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_0_5__0__Impl"


    // $ANTLR start "rule__ImportedNames__Group_0_5__1"
    // InternalFortXTrans.g:3241:1: rule__ImportedNames__Group_0_5__1 : rule__ImportedNames__Group_0_5__1__Impl ;
    public final void rule__ImportedNames__Group_0_5__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3245:1: ( rule__ImportedNames__Group_0_5__1__Impl )
            // InternalFortXTrans.g:3246:2: rule__ImportedNames__Group_0_5__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ImportedNames__Group_0_5__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_0_5__1"


    // $ANTLR start "rule__ImportedNames__Group_0_5__1__Impl"
    // InternalFortXTrans.g:3252:1: rule__ImportedNames__Group_0_5__1__Impl : ( ( rule__ImportedNames__SimpAssignment_0_5_1 ) ) ;
    public final void rule__ImportedNames__Group_0_5__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3256:1: ( ( ( rule__ImportedNames__SimpAssignment_0_5_1 ) ) )
            // InternalFortXTrans.g:3257:1: ( ( rule__ImportedNames__SimpAssignment_0_5_1 ) )
            {
            // InternalFortXTrans.g:3257:1: ( ( rule__ImportedNames__SimpAssignment_0_5_1 ) )
            // InternalFortXTrans.g:3258:2: ( rule__ImportedNames__SimpAssignment_0_5_1 )
            {
             before(grammarAccess.getImportedNamesAccess().getSimpAssignment_0_5_1()); 
            // InternalFortXTrans.g:3259:2: ( rule__ImportedNames__SimpAssignment_0_5_1 )
            // InternalFortXTrans.g:3259:3: rule__ImportedNames__SimpAssignment_0_5_1
            {
            pushFollow(FOLLOW_2);
            rule__ImportedNames__SimpAssignment_0_5_1();

            state._fsp--;


            }

             after(grammarAccess.getImportedNamesAccess().getSimpAssignment_0_5_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_0_5__1__Impl"


    // $ANTLR start "rule__ImportedNames__Group_1__0"
    // InternalFortXTrans.g:3268:1: rule__ImportedNames__Group_1__0 : rule__ImportedNames__Group_1__0__Impl rule__ImportedNames__Group_1__1 ;
    public final void rule__ImportedNames__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3272:1: ( rule__ImportedNames__Group_1__0__Impl rule__ImportedNames__Group_1__1 )
            // InternalFortXTrans.g:3273:2: rule__ImportedNames__Group_1__0__Impl rule__ImportedNames__Group_1__1
            {
            pushFollow(FOLLOW_16);
            rule__ImportedNames__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ImportedNames__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_1__0"


    // $ANTLR start "rule__ImportedNames__Group_1__0__Impl"
    // InternalFortXTrans.g:3280:1: rule__ImportedNames__Group_1__0__Impl : ( ( rule__ImportedNames__ImpnameAssignment_1_0 ) ) ;
    public final void rule__ImportedNames__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3284:1: ( ( ( rule__ImportedNames__ImpnameAssignment_1_0 ) ) )
            // InternalFortXTrans.g:3285:1: ( ( rule__ImportedNames__ImpnameAssignment_1_0 ) )
            {
            // InternalFortXTrans.g:3285:1: ( ( rule__ImportedNames__ImpnameAssignment_1_0 ) )
            // InternalFortXTrans.g:3286:2: ( rule__ImportedNames__ImpnameAssignment_1_0 )
            {
             before(grammarAccess.getImportedNamesAccess().getImpnameAssignment_1_0()); 
            // InternalFortXTrans.g:3287:2: ( rule__ImportedNames__ImpnameAssignment_1_0 )
            // InternalFortXTrans.g:3287:3: rule__ImportedNames__ImpnameAssignment_1_0
            {
            pushFollow(FOLLOW_2);
            rule__ImportedNames__ImpnameAssignment_1_0();

            state._fsp--;


            }

             after(grammarAccess.getImportedNamesAccess().getImpnameAssignment_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_1__0__Impl"


    // $ANTLR start "rule__ImportedNames__Group_1__1"
    // InternalFortXTrans.g:3295:1: rule__ImportedNames__Group_1__1 : rule__ImportedNames__Group_1__1__Impl rule__ImportedNames__Group_1__2 ;
    public final void rule__ImportedNames__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3299:1: ( rule__ImportedNames__Group_1__1__Impl rule__ImportedNames__Group_1__2 )
            // InternalFortXTrans.g:3300:2: rule__ImportedNames__Group_1__1__Impl rule__ImportedNames__Group_1__2
            {
            pushFollow(FOLLOW_13);
            rule__ImportedNames__Group_1__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ImportedNames__Group_1__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_1__1"


    // $ANTLR start "rule__ImportedNames__Group_1__1__Impl"
    // InternalFortXTrans.g:3307:1: rule__ImportedNames__Group_1__1__Impl : ( '.' ) ;
    public final void rule__ImportedNames__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3311:1: ( ( '.' ) )
            // InternalFortXTrans.g:3312:1: ( '.' )
            {
            // InternalFortXTrans.g:3312:1: ( '.' )
            // InternalFortXTrans.g:3313:2: '.'
            {
             before(grammarAccess.getImportedNamesAccess().getFullStopKeyword_1_1()); 
            match(input,32,FOLLOW_2); 
             after(grammarAccess.getImportedNamesAccess().getFullStopKeyword_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_1__1__Impl"


    // $ANTLR start "rule__ImportedNames__Group_1__2"
    // InternalFortXTrans.g:3322:1: rule__ImportedNames__Group_1__2 : rule__ImportedNames__Group_1__2__Impl rule__ImportedNames__Group_1__3 ;
    public final void rule__ImportedNames__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3326:1: ( rule__ImportedNames__Group_1__2__Impl rule__ImportedNames__Group_1__3 )
            // InternalFortXTrans.g:3327:2: rule__ImportedNames__Group_1__2__Impl rule__ImportedNames__Group_1__3
            {
            pushFollow(FOLLOW_5);
            rule__ImportedNames__Group_1__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ImportedNames__Group_1__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_1__2"


    // $ANTLR start "rule__ImportedNames__Group_1__2__Impl"
    // InternalFortXTrans.g:3334:1: rule__ImportedNames__Group_1__2__Impl : ( '{' ) ;
    public final void rule__ImportedNames__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3338:1: ( ( '{' ) )
            // InternalFortXTrans.g:3339:1: ( '{' )
            {
            // InternalFortXTrans.g:3339:1: ( '{' )
            // InternalFortXTrans.g:3340:2: '{'
            {
             before(grammarAccess.getImportedNamesAccess().getLeftCurlyBracketKeyword_1_2()); 
            match(input,33,FOLLOW_2); 
             after(grammarAccess.getImportedNamesAccess().getLeftCurlyBracketKeyword_1_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_1__2__Impl"


    // $ANTLR start "rule__ImportedNames__Group_1__3"
    // InternalFortXTrans.g:3349:1: rule__ImportedNames__Group_1__3 : rule__ImportedNames__Group_1__3__Impl rule__ImportedNames__Group_1__4 ;
    public final void rule__ImportedNames__Group_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3353:1: ( rule__ImportedNames__Group_1__3__Impl rule__ImportedNames__Group_1__4 )
            // InternalFortXTrans.g:3354:2: rule__ImportedNames__Group_1__3__Impl rule__ImportedNames__Group_1__4
            {
            pushFollow(FOLLOW_14);
            rule__ImportedNames__Group_1__3__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ImportedNames__Group_1__4();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_1__3"


    // $ANTLR start "rule__ImportedNames__Group_1__3__Impl"
    // InternalFortXTrans.g:3361:1: rule__ImportedNames__Group_1__3__Impl : ( ( rule__ImportedNames__SimpListAssignment_1_3 ) ) ;
    public final void rule__ImportedNames__Group_1__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3365:1: ( ( ( rule__ImportedNames__SimpListAssignment_1_3 ) ) )
            // InternalFortXTrans.g:3366:1: ( ( rule__ImportedNames__SimpListAssignment_1_3 ) )
            {
            // InternalFortXTrans.g:3366:1: ( ( rule__ImportedNames__SimpListAssignment_1_3 ) )
            // InternalFortXTrans.g:3367:2: ( rule__ImportedNames__SimpListAssignment_1_3 )
            {
             before(grammarAccess.getImportedNamesAccess().getSimpListAssignment_1_3()); 
            // InternalFortXTrans.g:3368:2: ( rule__ImportedNames__SimpListAssignment_1_3 )
            // InternalFortXTrans.g:3368:3: rule__ImportedNames__SimpListAssignment_1_3
            {
            pushFollow(FOLLOW_2);
            rule__ImportedNames__SimpListAssignment_1_3();

            state._fsp--;


            }

             after(grammarAccess.getImportedNamesAccess().getSimpListAssignment_1_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_1__3__Impl"


    // $ANTLR start "rule__ImportedNames__Group_1__4"
    // InternalFortXTrans.g:3376:1: rule__ImportedNames__Group_1__4 : rule__ImportedNames__Group_1__4__Impl rule__ImportedNames__Group_1__5 ;
    public final void rule__ImportedNames__Group_1__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3380:1: ( rule__ImportedNames__Group_1__4__Impl rule__ImportedNames__Group_1__5 )
            // InternalFortXTrans.g:3381:2: rule__ImportedNames__Group_1__4__Impl rule__ImportedNames__Group_1__5
            {
            pushFollow(FOLLOW_14);
            rule__ImportedNames__Group_1__4__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ImportedNames__Group_1__5();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_1__4"


    // $ANTLR start "rule__ImportedNames__Group_1__4__Impl"
    // InternalFortXTrans.g:3388:1: rule__ImportedNames__Group_1__4__Impl : ( ( rule__ImportedNames__Group_1_4__0 )* ) ;
    public final void rule__ImportedNames__Group_1__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3392:1: ( ( ( rule__ImportedNames__Group_1_4__0 )* ) )
            // InternalFortXTrans.g:3393:1: ( ( rule__ImportedNames__Group_1_4__0 )* )
            {
            // InternalFortXTrans.g:3393:1: ( ( rule__ImportedNames__Group_1_4__0 )* )
            // InternalFortXTrans.g:3394:2: ( rule__ImportedNames__Group_1_4__0 )*
            {
             before(grammarAccess.getImportedNamesAccess().getGroup_1_4()); 
            // InternalFortXTrans.g:3395:2: ( rule__ImportedNames__Group_1_4__0 )*
            loop39:
            do {
                int alt39=2;
                int LA39_0 = input.LA(1);

                if ( (LA39_0==31) ) {
                    int LA39_1 = input.LA(2);

                    if ( (LA39_1==RULE_ID) ) {
                        alt39=1;
                    }


                }


                switch (alt39) {
            	case 1 :
            	    // InternalFortXTrans.g:3395:3: rule__ImportedNames__Group_1_4__0
            	    {
            	    pushFollow(FOLLOW_15);
            	    rule__ImportedNames__Group_1_4__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop39;
                }
            } while (true);

             after(grammarAccess.getImportedNamesAccess().getGroup_1_4()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_1__4__Impl"


    // $ANTLR start "rule__ImportedNames__Group_1__5"
    // InternalFortXTrans.g:3403:1: rule__ImportedNames__Group_1__5 : rule__ImportedNames__Group_1__5__Impl rule__ImportedNames__Group_1__6 ;
    public final void rule__ImportedNames__Group_1__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3407:1: ( rule__ImportedNames__Group_1__5__Impl rule__ImportedNames__Group_1__6 )
            // InternalFortXTrans.g:3408:2: rule__ImportedNames__Group_1__5__Impl rule__ImportedNames__Group_1__6
            {
            pushFollow(FOLLOW_14);
            rule__ImportedNames__Group_1__5__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ImportedNames__Group_1__6();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_1__5"


    // $ANTLR start "rule__ImportedNames__Group_1__5__Impl"
    // InternalFortXTrans.g:3415:1: rule__ImportedNames__Group_1__5__Impl : ( ( rule__ImportedNames__Group_1_5__0 )? ) ;
    public final void rule__ImportedNames__Group_1__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3419:1: ( ( ( rule__ImportedNames__Group_1_5__0 )? ) )
            // InternalFortXTrans.g:3420:1: ( ( rule__ImportedNames__Group_1_5__0 )? )
            {
            // InternalFortXTrans.g:3420:1: ( ( rule__ImportedNames__Group_1_5__0 )? )
            // InternalFortXTrans.g:3421:2: ( rule__ImportedNames__Group_1_5__0 )?
            {
             before(grammarAccess.getImportedNamesAccess().getGroup_1_5()); 
            // InternalFortXTrans.g:3422:2: ( rule__ImportedNames__Group_1_5__0 )?
            int alt40=2;
            int LA40_0 = input.LA(1);

            if ( (LA40_0==31) ) {
                alt40=1;
            }
            switch (alt40) {
                case 1 :
                    // InternalFortXTrans.g:3422:3: rule__ImportedNames__Group_1_5__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ImportedNames__Group_1_5__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getImportedNamesAccess().getGroup_1_5()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_1__5__Impl"


    // $ANTLR start "rule__ImportedNames__Group_1__6"
    // InternalFortXTrans.g:3430:1: rule__ImportedNames__Group_1__6 : rule__ImportedNames__Group_1__6__Impl ;
    public final void rule__ImportedNames__Group_1__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3434:1: ( rule__ImportedNames__Group_1__6__Impl )
            // InternalFortXTrans.g:3435:2: rule__ImportedNames__Group_1__6__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ImportedNames__Group_1__6__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_1__6"


    // $ANTLR start "rule__ImportedNames__Group_1__6__Impl"
    // InternalFortXTrans.g:3441:1: rule__ImportedNames__Group_1__6__Impl : ( '}' ) ;
    public final void rule__ImportedNames__Group_1__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3445:1: ( ( '}' ) )
            // InternalFortXTrans.g:3446:1: ( '}' )
            {
            // InternalFortXTrans.g:3446:1: ( '}' )
            // InternalFortXTrans.g:3447:2: '}'
            {
             before(grammarAccess.getImportedNamesAccess().getRightCurlyBracketKeyword_1_6()); 
            match(input,30,FOLLOW_2); 
             after(grammarAccess.getImportedNamesAccess().getRightCurlyBracketKeyword_1_6()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_1__6__Impl"


    // $ANTLR start "rule__ImportedNames__Group_1_4__0"
    // InternalFortXTrans.g:3457:1: rule__ImportedNames__Group_1_4__0 : rule__ImportedNames__Group_1_4__0__Impl rule__ImportedNames__Group_1_4__1 ;
    public final void rule__ImportedNames__Group_1_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3461:1: ( rule__ImportedNames__Group_1_4__0__Impl rule__ImportedNames__Group_1_4__1 )
            // InternalFortXTrans.g:3462:2: rule__ImportedNames__Group_1_4__0__Impl rule__ImportedNames__Group_1_4__1
            {
            pushFollow(FOLLOW_5);
            rule__ImportedNames__Group_1_4__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ImportedNames__Group_1_4__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_1_4__0"


    // $ANTLR start "rule__ImportedNames__Group_1_4__0__Impl"
    // InternalFortXTrans.g:3469:1: rule__ImportedNames__Group_1_4__0__Impl : ( ',' ) ;
    public final void rule__ImportedNames__Group_1_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3473:1: ( ( ',' ) )
            // InternalFortXTrans.g:3474:1: ( ',' )
            {
            // InternalFortXTrans.g:3474:1: ( ',' )
            // InternalFortXTrans.g:3475:2: ','
            {
             before(grammarAccess.getImportedNamesAccess().getCommaKeyword_1_4_0()); 
            match(input,31,FOLLOW_2); 
             after(grammarAccess.getImportedNamesAccess().getCommaKeyword_1_4_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_1_4__0__Impl"


    // $ANTLR start "rule__ImportedNames__Group_1_4__1"
    // InternalFortXTrans.g:3484:1: rule__ImportedNames__Group_1_4__1 : rule__ImportedNames__Group_1_4__1__Impl ;
    public final void rule__ImportedNames__Group_1_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3488:1: ( rule__ImportedNames__Group_1_4__1__Impl )
            // InternalFortXTrans.g:3489:2: rule__ImportedNames__Group_1_4__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ImportedNames__Group_1_4__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_1_4__1"


    // $ANTLR start "rule__ImportedNames__Group_1_4__1__Impl"
    // InternalFortXTrans.g:3495:1: rule__ImportedNames__Group_1_4__1__Impl : ( ( rule__ImportedNames__SimpListAssignment_1_4_1 ) ) ;
    public final void rule__ImportedNames__Group_1_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3499:1: ( ( ( rule__ImportedNames__SimpListAssignment_1_4_1 ) ) )
            // InternalFortXTrans.g:3500:1: ( ( rule__ImportedNames__SimpListAssignment_1_4_1 ) )
            {
            // InternalFortXTrans.g:3500:1: ( ( rule__ImportedNames__SimpListAssignment_1_4_1 ) )
            // InternalFortXTrans.g:3501:2: ( rule__ImportedNames__SimpListAssignment_1_4_1 )
            {
             before(grammarAccess.getImportedNamesAccess().getSimpListAssignment_1_4_1()); 
            // InternalFortXTrans.g:3502:2: ( rule__ImportedNames__SimpListAssignment_1_4_1 )
            // InternalFortXTrans.g:3502:3: rule__ImportedNames__SimpListAssignment_1_4_1
            {
            pushFollow(FOLLOW_2);
            rule__ImportedNames__SimpListAssignment_1_4_1();

            state._fsp--;


            }

             after(grammarAccess.getImportedNamesAccess().getSimpListAssignment_1_4_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_1_4__1__Impl"


    // $ANTLR start "rule__ImportedNames__Group_1_5__0"
    // InternalFortXTrans.g:3511:1: rule__ImportedNames__Group_1_5__0 : rule__ImportedNames__Group_1_5__0__Impl rule__ImportedNames__Group_1_5__1 ;
    public final void rule__ImportedNames__Group_1_5__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3515:1: ( rule__ImportedNames__Group_1_5__0__Impl rule__ImportedNames__Group_1_5__1 )
            // InternalFortXTrans.g:3516:2: rule__ImportedNames__Group_1_5__0__Impl rule__ImportedNames__Group_1_5__1
            {
            pushFollow(FOLLOW_17);
            rule__ImportedNames__Group_1_5__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ImportedNames__Group_1_5__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_1_5__0"


    // $ANTLR start "rule__ImportedNames__Group_1_5__0__Impl"
    // InternalFortXTrans.g:3523:1: rule__ImportedNames__Group_1_5__0__Impl : ( ( rule__ImportedNames__CommaAssignment_1_5_0 ) ) ;
    public final void rule__ImportedNames__Group_1_5__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3527:1: ( ( ( rule__ImportedNames__CommaAssignment_1_5_0 ) ) )
            // InternalFortXTrans.g:3528:1: ( ( rule__ImportedNames__CommaAssignment_1_5_0 ) )
            {
            // InternalFortXTrans.g:3528:1: ( ( rule__ImportedNames__CommaAssignment_1_5_0 ) )
            // InternalFortXTrans.g:3529:2: ( rule__ImportedNames__CommaAssignment_1_5_0 )
            {
             before(grammarAccess.getImportedNamesAccess().getCommaAssignment_1_5_0()); 
            // InternalFortXTrans.g:3530:2: ( rule__ImportedNames__CommaAssignment_1_5_0 )
            // InternalFortXTrans.g:3530:3: rule__ImportedNames__CommaAssignment_1_5_0
            {
            pushFollow(FOLLOW_2);
            rule__ImportedNames__CommaAssignment_1_5_0();

            state._fsp--;


            }

             after(grammarAccess.getImportedNamesAccess().getCommaAssignment_1_5_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_1_5__0__Impl"


    // $ANTLR start "rule__ImportedNames__Group_1_5__1"
    // InternalFortXTrans.g:3538:1: rule__ImportedNames__Group_1_5__1 : rule__ImportedNames__Group_1_5__1__Impl ;
    public final void rule__ImportedNames__Group_1_5__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3542:1: ( rule__ImportedNames__Group_1_5__1__Impl )
            // InternalFortXTrans.g:3543:2: rule__ImportedNames__Group_1_5__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ImportedNames__Group_1_5__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_1_5__1"


    // $ANTLR start "rule__ImportedNames__Group_1_5__1__Impl"
    // InternalFortXTrans.g:3549:1: rule__ImportedNames__Group_1_5__1__Impl : ( ( rule__ImportedNames__DotsAssignment_1_5_1 ) ) ;
    public final void rule__ImportedNames__Group_1_5__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3553:1: ( ( ( rule__ImportedNames__DotsAssignment_1_5_1 ) ) )
            // InternalFortXTrans.g:3554:1: ( ( rule__ImportedNames__DotsAssignment_1_5_1 ) )
            {
            // InternalFortXTrans.g:3554:1: ( ( rule__ImportedNames__DotsAssignment_1_5_1 ) )
            // InternalFortXTrans.g:3555:2: ( rule__ImportedNames__DotsAssignment_1_5_1 )
            {
             before(grammarAccess.getImportedNamesAccess().getDotsAssignment_1_5_1()); 
            // InternalFortXTrans.g:3556:2: ( rule__ImportedNames__DotsAssignment_1_5_1 )
            // InternalFortXTrans.g:3556:3: rule__ImportedNames__DotsAssignment_1_5_1
            {
            pushFollow(FOLLOW_2);
            rule__ImportedNames__DotsAssignment_1_5_1();

            state._fsp--;


            }

             after(grammarAccess.getImportedNamesAccess().getDotsAssignment_1_5_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_1_5__1__Impl"


    // $ANTLR start "rule__ImportedNames__Group_2__0"
    // InternalFortXTrans.g:3565:1: rule__ImportedNames__Group_2__0 : rule__ImportedNames__Group_2__0__Impl rule__ImportedNames__Group_2__1 ;
    public final void rule__ImportedNames__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3569:1: ( rule__ImportedNames__Group_2__0__Impl rule__ImportedNames__Group_2__1 )
            // InternalFortXTrans.g:3570:2: rule__ImportedNames__Group_2__0__Impl rule__ImportedNames__Group_2__1
            {
            pushFollow(FOLLOW_20);
            rule__ImportedNames__Group_2__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ImportedNames__Group_2__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_2__0"


    // $ANTLR start "rule__ImportedNames__Group_2__0__Impl"
    // InternalFortXTrans.g:3577:1: rule__ImportedNames__Group_2__0__Impl : ( ( rule__ImportedNames__ImpnameAssignment_2_0 ) ) ;
    public final void rule__ImportedNames__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3581:1: ( ( ( rule__ImportedNames__ImpnameAssignment_2_0 ) ) )
            // InternalFortXTrans.g:3582:1: ( ( rule__ImportedNames__ImpnameAssignment_2_0 ) )
            {
            // InternalFortXTrans.g:3582:1: ( ( rule__ImportedNames__ImpnameAssignment_2_0 ) )
            // InternalFortXTrans.g:3583:2: ( rule__ImportedNames__ImpnameAssignment_2_0 )
            {
             before(grammarAccess.getImportedNamesAccess().getImpnameAssignment_2_0()); 
            // InternalFortXTrans.g:3584:2: ( rule__ImportedNames__ImpnameAssignment_2_0 )
            // InternalFortXTrans.g:3584:3: rule__ImportedNames__ImpnameAssignment_2_0
            {
            pushFollow(FOLLOW_2);
            rule__ImportedNames__ImpnameAssignment_2_0();

            state._fsp--;


            }

             after(grammarAccess.getImportedNamesAccess().getImpnameAssignment_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_2__0__Impl"


    // $ANTLR start "rule__ImportedNames__Group_2__1"
    // InternalFortXTrans.g:3592:1: rule__ImportedNames__Group_2__1 : rule__ImportedNames__Group_2__1__Impl ;
    public final void rule__ImportedNames__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3596:1: ( rule__ImportedNames__Group_2__1__Impl )
            // InternalFortXTrans.g:3597:2: rule__ImportedNames__Group_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ImportedNames__Group_2__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_2__1"


    // $ANTLR start "rule__ImportedNames__Group_2__1__Impl"
    // InternalFortXTrans.g:3603:1: rule__ImportedNames__Group_2__1__Impl : ( ( rule__ImportedNames__Group_2_1__0 )? ) ;
    public final void rule__ImportedNames__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3607:1: ( ( ( rule__ImportedNames__Group_2_1__0 )? ) )
            // InternalFortXTrans.g:3608:1: ( ( rule__ImportedNames__Group_2_1__0 )? )
            {
            // InternalFortXTrans.g:3608:1: ( ( rule__ImportedNames__Group_2_1__0 )? )
            // InternalFortXTrans.g:3609:2: ( rule__ImportedNames__Group_2_1__0 )?
            {
             before(grammarAccess.getImportedNamesAccess().getGroup_2_1()); 
            // InternalFortXTrans.g:3610:2: ( rule__ImportedNames__Group_2_1__0 )?
            int alt41=2;
            int LA41_0 = input.LA(1);

            if ( (LA41_0==34) ) {
                alt41=1;
            }
            switch (alt41) {
                case 1 :
                    // InternalFortXTrans.g:3610:3: rule__ImportedNames__Group_2_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ImportedNames__Group_2_1__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getImportedNamesAccess().getGroup_2_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_2__1__Impl"


    // $ANTLR start "rule__ImportedNames__Group_2_1__0"
    // InternalFortXTrans.g:3619:1: rule__ImportedNames__Group_2_1__0 : rule__ImportedNames__Group_2_1__0__Impl rule__ImportedNames__Group_2_1__1 ;
    public final void rule__ImportedNames__Group_2_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3623:1: ( rule__ImportedNames__Group_2_1__0__Impl rule__ImportedNames__Group_2_1__1 )
            // InternalFortXTrans.g:3624:2: rule__ImportedNames__Group_2_1__0__Impl rule__ImportedNames__Group_2_1__1
            {
            pushFollow(FOLLOW_5);
            rule__ImportedNames__Group_2_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ImportedNames__Group_2_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_2_1__0"


    // $ANTLR start "rule__ImportedNames__Group_2_1__0__Impl"
    // InternalFortXTrans.g:3631:1: rule__ImportedNames__Group_2_1__0__Impl : ( 'as' ) ;
    public final void rule__ImportedNames__Group_2_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3635:1: ( ( 'as' ) )
            // InternalFortXTrans.g:3636:1: ( 'as' )
            {
            // InternalFortXTrans.g:3636:1: ( 'as' )
            // InternalFortXTrans.g:3637:2: 'as'
            {
             before(grammarAccess.getImportedNamesAccess().getAsKeyword_2_1_0()); 
            match(input,34,FOLLOW_2); 
             after(grammarAccess.getImportedNamesAccess().getAsKeyword_2_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_2_1__0__Impl"


    // $ANTLR start "rule__ImportedNames__Group_2_1__1"
    // InternalFortXTrans.g:3646:1: rule__ImportedNames__Group_2_1__1 : rule__ImportedNames__Group_2_1__1__Impl ;
    public final void rule__ImportedNames__Group_2_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3650:1: ( rule__ImportedNames__Group_2_1__1__Impl )
            // InternalFortXTrans.g:3651:2: rule__ImportedNames__Group_2_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ImportedNames__Group_2_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_2_1__1"


    // $ANTLR start "rule__ImportedNames__Group_2_1__1__Impl"
    // InternalFortXTrans.g:3657:1: rule__ImportedNames__Group_2_1__1__Impl : ( ( rule__ImportedNames__AsnameAssignment_2_1_1 ) ) ;
    public final void rule__ImportedNames__Group_2_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3661:1: ( ( ( rule__ImportedNames__AsnameAssignment_2_1_1 ) ) )
            // InternalFortXTrans.g:3662:1: ( ( rule__ImportedNames__AsnameAssignment_2_1_1 ) )
            {
            // InternalFortXTrans.g:3662:1: ( ( rule__ImportedNames__AsnameAssignment_2_1_1 ) )
            // InternalFortXTrans.g:3663:2: ( rule__ImportedNames__AsnameAssignment_2_1_1 )
            {
             before(grammarAccess.getImportedNamesAccess().getAsnameAssignment_2_1_1()); 
            // InternalFortXTrans.g:3664:2: ( rule__ImportedNames__AsnameAssignment_2_1_1 )
            // InternalFortXTrans.g:3664:3: rule__ImportedNames__AsnameAssignment_2_1_1
            {
            pushFollow(FOLLOW_2);
            rule__ImportedNames__AsnameAssignment_2_1_1();

            state._fsp--;


            }

             after(grammarAccess.getImportedNamesAccess().getAsnameAssignment_2_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_2_1__1__Impl"


    // $ANTLR start "rule__QualifiedName__Group_0__0"
    // InternalFortXTrans.g:3673:1: rule__QualifiedName__Group_0__0 : rule__QualifiedName__Group_0__0__Impl rule__QualifiedName__Group_0__1 ;
    public final void rule__QualifiedName__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3677:1: ( rule__QualifiedName__Group_0__0__Impl rule__QualifiedName__Group_0__1 )
            // InternalFortXTrans.g:3678:2: rule__QualifiedName__Group_0__0__Impl rule__QualifiedName__Group_0__1
            {
            pushFollow(FOLLOW_17);
            rule__QualifiedName__Group_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__QualifiedName__Group_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedName__Group_0__0"


    // $ANTLR start "rule__QualifiedName__Group_0__0__Impl"
    // InternalFortXTrans.g:3685:1: rule__QualifiedName__Group_0__0__Impl : ( ( rule__QualifiedName__SAssignment_0_0 ) ) ;
    public final void rule__QualifiedName__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3689:1: ( ( ( rule__QualifiedName__SAssignment_0_0 ) ) )
            // InternalFortXTrans.g:3690:1: ( ( rule__QualifiedName__SAssignment_0_0 ) )
            {
            // InternalFortXTrans.g:3690:1: ( ( rule__QualifiedName__SAssignment_0_0 ) )
            // InternalFortXTrans.g:3691:2: ( rule__QualifiedName__SAssignment_0_0 )
            {
             before(grammarAccess.getQualifiedNameAccess().getSAssignment_0_0()); 
            // InternalFortXTrans.g:3692:2: ( rule__QualifiedName__SAssignment_0_0 )
            // InternalFortXTrans.g:3692:3: rule__QualifiedName__SAssignment_0_0
            {
            pushFollow(FOLLOW_2);
            rule__QualifiedName__SAssignment_0_0();

            state._fsp--;


            }

             after(grammarAccess.getQualifiedNameAccess().getSAssignment_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedName__Group_0__0__Impl"


    // $ANTLR start "rule__QualifiedName__Group_0__1"
    // InternalFortXTrans.g:3700:1: rule__QualifiedName__Group_0__1 : rule__QualifiedName__Group_0__1__Impl ;
    public final void rule__QualifiedName__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3704:1: ( rule__QualifiedName__Group_0__1__Impl )
            // InternalFortXTrans.g:3705:2: rule__QualifiedName__Group_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__QualifiedName__Group_0__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedName__Group_0__1"


    // $ANTLR start "rule__QualifiedName__Group_0__1__Impl"
    // InternalFortXTrans.g:3711:1: rule__QualifiedName__Group_0__1__Impl : ( ( rule__QualifiedName__DotsAssignment_0_1 )? ) ;
    public final void rule__QualifiedName__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3715:1: ( ( ( rule__QualifiedName__DotsAssignment_0_1 )? ) )
            // InternalFortXTrans.g:3716:1: ( ( rule__QualifiedName__DotsAssignment_0_1 )? )
            {
            // InternalFortXTrans.g:3716:1: ( ( rule__QualifiedName__DotsAssignment_0_1 )? )
            // InternalFortXTrans.g:3717:2: ( rule__QualifiedName__DotsAssignment_0_1 )?
            {
             before(grammarAccess.getQualifiedNameAccess().getDotsAssignment_0_1()); 
            // InternalFortXTrans.g:3718:2: ( rule__QualifiedName__DotsAssignment_0_1 )?
            int alt42=2;
            int LA42_0 = input.LA(1);

            if ( (LA42_0==RULE_DOTS) ) {
                alt42=1;
            }
            switch (alt42) {
                case 1 :
                    // InternalFortXTrans.g:3718:3: rule__QualifiedName__DotsAssignment_0_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__QualifiedName__DotsAssignment_0_1();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getQualifiedNameAccess().getDotsAssignment_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedName__Group_0__1__Impl"


    // $ANTLR start "rule__QualifiedName__Group_1__0"
    // InternalFortXTrans.g:3727:1: rule__QualifiedName__Group_1__0 : rule__QualifiedName__Group_1__0__Impl rule__QualifiedName__Group_1__1 ;
    public final void rule__QualifiedName__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3731:1: ( rule__QualifiedName__Group_1__0__Impl rule__QualifiedName__Group_1__1 )
            // InternalFortXTrans.g:3732:2: rule__QualifiedName__Group_1__0__Impl rule__QualifiedName__Group_1__1
            {
            pushFollow(FOLLOW_16);
            rule__QualifiedName__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__QualifiedName__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedName__Group_1__0"


    // $ANTLR start "rule__QualifiedName__Group_1__0__Impl"
    // InternalFortXTrans.g:3739:1: rule__QualifiedName__Group_1__0__Impl : ( ( rule__QualifiedName__SAssignment_1_0 ) ) ;
    public final void rule__QualifiedName__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3743:1: ( ( ( rule__QualifiedName__SAssignment_1_0 ) ) )
            // InternalFortXTrans.g:3744:1: ( ( rule__QualifiedName__SAssignment_1_0 ) )
            {
            // InternalFortXTrans.g:3744:1: ( ( rule__QualifiedName__SAssignment_1_0 ) )
            // InternalFortXTrans.g:3745:2: ( rule__QualifiedName__SAssignment_1_0 )
            {
             before(grammarAccess.getQualifiedNameAccess().getSAssignment_1_0()); 
            // InternalFortXTrans.g:3746:2: ( rule__QualifiedName__SAssignment_1_0 )
            // InternalFortXTrans.g:3746:3: rule__QualifiedName__SAssignment_1_0
            {
            pushFollow(FOLLOW_2);
            rule__QualifiedName__SAssignment_1_0();

            state._fsp--;


            }

             after(grammarAccess.getQualifiedNameAccess().getSAssignment_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedName__Group_1__0__Impl"


    // $ANTLR start "rule__QualifiedName__Group_1__1"
    // InternalFortXTrans.g:3754:1: rule__QualifiedName__Group_1__1 : rule__QualifiedName__Group_1__1__Impl rule__QualifiedName__Group_1__2 ;
    public final void rule__QualifiedName__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3758:1: ( rule__QualifiedName__Group_1__1__Impl rule__QualifiedName__Group_1__2 )
            // InternalFortXTrans.g:3759:2: rule__QualifiedName__Group_1__1__Impl rule__QualifiedName__Group_1__2
            {
            pushFollow(FOLLOW_17);
            rule__QualifiedName__Group_1__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__QualifiedName__Group_1__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedName__Group_1__1"


    // $ANTLR start "rule__QualifiedName__Group_1__1__Impl"
    // InternalFortXTrans.g:3766:1: rule__QualifiedName__Group_1__1__Impl : ( ( ( rule__QualifiedName__Group_1_1__0 ) ) ( ( rule__QualifiedName__Group_1_1__0 )* ) ) ;
    public final void rule__QualifiedName__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3770:1: ( ( ( ( rule__QualifiedName__Group_1_1__0 ) ) ( ( rule__QualifiedName__Group_1_1__0 )* ) ) )
            // InternalFortXTrans.g:3771:1: ( ( ( rule__QualifiedName__Group_1_1__0 ) ) ( ( rule__QualifiedName__Group_1_1__0 )* ) )
            {
            // InternalFortXTrans.g:3771:1: ( ( ( rule__QualifiedName__Group_1_1__0 ) ) ( ( rule__QualifiedName__Group_1_1__0 )* ) )
            // InternalFortXTrans.g:3772:2: ( ( rule__QualifiedName__Group_1_1__0 ) ) ( ( rule__QualifiedName__Group_1_1__0 )* )
            {
            // InternalFortXTrans.g:3772:2: ( ( rule__QualifiedName__Group_1_1__0 ) )
            // InternalFortXTrans.g:3773:3: ( rule__QualifiedName__Group_1_1__0 )
            {
             before(grammarAccess.getQualifiedNameAccess().getGroup_1_1()); 
            // InternalFortXTrans.g:3774:3: ( rule__QualifiedName__Group_1_1__0 )
            // InternalFortXTrans.g:3774:4: rule__QualifiedName__Group_1_1__0
            {
            pushFollow(FOLLOW_21);
            rule__QualifiedName__Group_1_1__0();

            state._fsp--;


            }

             after(grammarAccess.getQualifiedNameAccess().getGroup_1_1()); 

            }

            // InternalFortXTrans.g:3777:2: ( ( rule__QualifiedName__Group_1_1__0 )* )
            // InternalFortXTrans.g:3778:3: ( rule__QualifiedName__Group_1_1__0 )*
            {
             before(grammarAccess.getQualifiedNameAccess().getGroup_1_1()); 
            // InternalFortXTrans.g:3779:3: ( rule__QualifiedName__Group_1_1__0 )*
            loop43:
            do {
                int alt43=2;
                int LA43_0 = input.LA(1);

                if ( (LA43_0==32) ) {
                    int LA43_2 = input.LA(2);

                    if ( (LA43_2==RULE_ID) ) {
                        alt43=1;
                    }


                }


                switch (alt43) {
            	case 1 :
            	    // InternalFortXTrans.g:3779:4: rule__QualifiedName__Group_1_1__0
            	    {
            	    pushFollow(FOLLOW_21);
            	    rule__QualifiedName__Group_1_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop43;
                }
            } while (true);

             after(grammarAccess.getQualifiedNameAccess().getGroup_1_1()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedName__Group_1__1__Impl"


    // $ANTLR start "rule__QualifiedName__Group_1__2"
    // InternalFortXTrans.g:3788:1: rule__QualifiedName__Group_1__2 : rule__QualifiedName__Group_1__2__Impl ;
    public final void rule__QualifiedName__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3792:1: ( rule__QualifiedName__Group_1__2__Impl )
            // InternalFortXTrans.g:3793:2: rule__QualifiedName__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__QualifiedName__Group_1__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedName__Group_1__2"


    // $ANTLR start "rule__QualifiedName__Group_1__2__Impl"
    // InternalFortXTrans.g:3799:1: rule__QualifiedName__Group_1__2__Impl : ( ( rule__QualifiedName__DotsAssignment_1_2 )? ) ;
    public final void rule__QualifiedName__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3803:1: ( ( ( rule__QualifiedName__DotsAssignment_1_2 )? ) )
            // InternalFortXTrans.g:3804:1: ( ( rule__QualifiedName__DotsAssignment_1_2 )? )
            {
            // InternalFortXTrans.g:3804:1: ( ( rule__QualifiedName__DotsAssignment_1_2 )? )
            // InternalFortXTrans.g:3805:2: ( rule__QualifiedName__DotsAssignment_1_2 )?
            {
             before(grammarAccess.getQualifiedNameAccess().getDotsAssignment_1_2()); 
            // InternalFortXTrans.g:3806:2: ( rule__QualifiedName__DotsAssignment_1_2 )?
            int alt44=2;
            int LA44_0 = input.LA(1);

            if ( (LA44_0==RULE_DOTS) ) {
                alt44=1;
            }
            switch (alt44) {
                case 1 :
                    // InternalFortXTrans.g:3806:3: rule__QualifiedName__DotsAssignment_1_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__QualifiedName__DotsAssignment_1_2();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getQualifiedNameAccess().getDotsAssignment_1_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedName__Group_1__2__Impl"


    // $ANTLR start "rule__QualifiedName__Group_1_1__0"
    // InternalFortXTrans.g:3815:1: rule__QualifiedName__Group_1_1__0 : rule__QualifiedName__Group_1_1__0__Impl rule__QualifiedName__Group_1_1__1 ;
    public final void rule__QualifiedName__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3819:1: ( rule__QualifiedName__Group_1_1__0__Impl rule__QualifiedName__Group_1_1__1 )
            // InternalFortXTrans.g:3820:2: rule__QualifiedName__Group_1_1__0__Impl rule__QualifiedName__Group_1_1__1
            {
            pushFollow(FOLLOW_5);
            rule__QualifiedName__Group_1_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__QualifiedName__Group_1_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedName__Group_1_1__0"


    // $ANTLR start "rule__QualifiedName__Group_1_1__0__Impl"
    // InternalFortXTrans.g:3827:1: rule__QualifiedName__Group_1_1__0__Impl : ( '.' ) ;
    public final void rule__QualifiedName__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3831:1: ( ( '.' ) )
            // InternalFortXTrans.g:3832:1: ( '.' )
            {
            // InternalFortXTrans.g:3832:1: ( '.' )
            // InternalFortXTrans.g:3833:2: '.'
            {
             before(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_1_0()); 
            match(input,32,FOLLOW_2); 
             after(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedName__Group_1_1__0__Impl"


    // $ANTLR start "rule__QualifiedName__Group_1_1__1"
    // InternalFortXTrans.g:3842:1: rule__QualifiedName__Group_1_1__1 : rule__QualifiedName__Group_1_1__1__Impl ;
    public final void rule__QualifiedName__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3846:1: ( rule__QualifiedName__Group_1_1__1__Impl )
            // InternalFortXTrans.g:3847:2: rule__QualifiedName__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__QualifiedName__Group_1_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedName__Group_1_1__1"


    // $ANTLR start "rule__QualifiedName__Group_1_1__1__Impl"
    // InternalFortXTrans.g:3853:1: rule__QualifiedName__Group_1_1__1__Impl : ( ( rule__QualifiedName__SAssignment_1_1_1 ) ) ;
    public final void rule__QualifiedName__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3857:1: ( ( ( rule__QualifiedName__SAssignment_1_1_1 ) ) )
            // InternalFortXTrans.g:3858:1: ( ( rule__QualifiedName__SAssignment_1_1_1 ) )
            {
            // InternalFortXTrans.g:3858:1: ( ( rule__QualifiedName__SAssignment_1_1_1 ) )
            // InternalFortXTrans.g:3859:2: ( rule__QualifiedName__SAssignment_1_1_1 )
            {
             before(grammarAccess.getQualifiedNameAccess().getSAssignment_1_1_1()); 
            // InternalFortXTrans.g:3860:2: ( rule__QualifiedName__SAssignment_1_1_1 )
            // InternalFortXTrans.g:3860:3: rule__QualifiedName__SAssignment_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__QualifiedName__SAssignment_1_1_1();

            state._fsp--;


            }

             after(grammarAccess.getQualifiedNameAccess().getSAssignment_1_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedName__Group_1_1__1__Impl"


    // $ANTLR start "rule__QualifiedNameTuple__Group__0"
    // InternalFortXTrans.g:3869:1: rule__QualifiedNameTuple__Group__0 : rule__QualifiedNameTuple__Group__0__Impl rule__QualifiedNameTuple__Group__1 ;
    public final void rule__QualifiedNameTuple__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3873:1: ( rule__QualifiedNameTuple__Group__0__Impl rule__QualifiedNameTuple__Group__1 )
            // InternalFortXTrans.g:3874:2: rule__QualifiedNameTuple__Group__0__Impl rule__QualifiedNameTuple__Group__1
            {
            pushFollow(FOLLOW_5);
            rule__QualifiedNameTuple__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__QualifiedNameTuple__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedNameTuple__Group__0"


    // $ANTLR start "rule__QualifiedNameTuple__Group__0__Impl"
    // InternalFortXTrans.g:3881:1: rule__QualifiedNameTuple__Group__0__Impl : ( '(' ) ;
    public final void rule__QualifiedNameTuple__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3885:1: ( ( '(' ) )
            // InternalFortXTrans.g:3886:1: ( '(' )
            {
            // InternalFortXTrans.g:3886:1: ( '(' )
            // InternalFortXTrans.g:3887:2: '('
            {
             before(grammarAccess.getQualifiedNameTupleAccess().getLeftParenthesisKeyword_0()); 
            match(input,35,FOLLOW_2); 
             after(grammarAccess.getQualifiedNameTupleAccess().getLeftParenthesisKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedNameTuple__Group__0__Impl"


    // $ANTLR start "rule__QualifiedNameTuple__Group__1"
    // InternalFortXTrans.g:3896:1: rule__QualifiedNameTuple__Group__1 : rule__QualifiedNameTuple__Group__1__Impl rule__QualifiedNameTuple__Group__2 ;
    public final void rule__QualifiedNameTuple__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3900:1: ( rule__QualifiedNameTuple__Group__1__Impl rule__QualifiedNameTuple__Group__2 )
            // InternalFortXTrans.g:3901:2: rule__QualifiedNameTuple__Group__1__Impl rule__QualifiedNameTuple__Group__2
            {
            pushFollow(FOLLOW_22);
            rule__QualifiedNameTuple__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__QualifiedNameTuple__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedNameTuple__Group__1"


    // $ANTLR start "rule__QualifiedNameTuple__Group__1__Impl"
    // InternalFortXTrans.g:3908:1: rule__QualifiedNameTuple__Group__1__Impl : ( ( rule__QualifiedNameTuple__QlistAssignment_1 ) ) ;
    public final void rule__QualifiedNameTuple__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3912:1: ( ( ( rule__QualifiedNameTuple__QlistAssignment_1 ) ) )
            // InternalFortXTrans.g:3913:1: ( ( rule__QualifiedNameTuple__QlistAssignment_1 ) )
            {
            // InternalFortXTrans.g:3913:1: ( ( rule__QualifiedNameTuple__QlistAssignment_1 ) )
            // InternalFortXTrans.g:3914:2: ( rule__QualifiedNameTuple__QlistAssignment_1 )
            {
             before(grammarAccess.getQualifiedNameTupleAccess().getQlistAssignment_1()); 
            // InternalFortXTrans.g:3915:2: ( rule__QualifiedNameTuple__QlistAssignment_1 )
            // InternalFortXTrans.g:3915:3: rule__QualifiedNameTuple__QlistAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__QualifiedNameTuple__QlistAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getQualifiedNameTupleAccess().getQlistAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedNameTuple__Group__1__Impl"


    // $ANTLR start "rule__QualifiedNameTuple__Group__2"
    // InternalFortXTrans.g:3923:1: rule__QualifiedNameTuple__Group__2 : rule__QualifiedNameTuple__Group__2__Impl rule__QualifiedNameTuple__Group__3 ;
    public final void rule__QualifiedNameTuple__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3927:1: ( rule__QualifiedNameTuple__Group__2__Impl rule__QualifiedNameTuple__Group__3 )
            // InternalFortXTrans.g:3928:2: rule__QualifiedNameTuple__Group__2__Impl rule__QualifiedNameTuple__Group__3
            {
            pushFollow(FOLLOW_22);
            rule__QualifiedNameTuple__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__QualifiedNameTuple__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedNameTuple__Group__2"


    // $ANTLR start "rule__QualifiedNameTuple__Group__2__Impl"
    // InternalFortXTrans.g:3935:1: rule__QualifiedNameTuple__Group__2__Impl : ( ( rule__QualifiedNameTuple__Group_2__0 )* ) ;
    public final void rule__QualifiedNameTuple__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3939:1: ( ( ( rule__QualifiedNameTuple__Group_2__0 )* ) )
            // InternalFortXTrans.g:3940:1: ( ( rule__QualifiedNameTuple__Group_2__0 )* )
            {
            // InternalFortXTrans.g:3940:1: ( ( rule__QualifiedNameTuple__Group_2__0 )* )
            // InternalFortXTrans.g:3941:2: ( rule__QualifiedNameTuple__Group_2__0 )*
            {
             before(grammarAccess.getQualifiedNameTupleAccess().getGroup_2()); 
            // InternalFortXTrans.g:3942:2: ( rule__QualifiedNameTuple__Group_2__0 )*
            loop45:
            do {
                int alt45=2;
                int LA45_0 = input.LA(1);

                if ( (LA45_0==31) ) {
                    alt45=1;
                }


                switch (alt45) {
            	case 1 :
            	    // InternalFortXTrans.g:3942:3: rule__QualifiedNameTuple__Group_2__0
            	    {
            	    pushFollow(FOLLOW_15);
            	    rule__QualifiedNameTuple__Group_2__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop45;
                }
            } while (true);

             after(grammarAccess.getQualifiedNameTupleAccess().getGroup_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedNameTuple__Group__2__Impl"


    // $ANTLR start "rule__QualifiedNameTuple__Group__3"
    // InternalFortXTrans.g:3950:1: rule__QualifiedNameTuple__Group__3 : rule__QualifiedNameTuple__Group__3__Impl ;
    public final void rule__QualifiedNameTuple__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3954:1: ( rule__QualifiedNameTuple__Group__3__Impl )
            // InternalFortXTrans.g:3955:2: rule__QualifiedNameTuple__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__QualifiedNameTuple__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedNameTuple__Group__3"


    // $ANTLR start "rule__QualifiedNameTuple__Group__3__Impl"
    // InternalFortXTrans.g:3961:1: rule__QualifiedNameTuple__Group__3__Impl : ( ')' ) ;
    public final void rule__QualifiedNameTuple__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3965:1: ( ( ')' ) )
            // InternalFortXTrans.g:3966:1: ( ')' )
            {
            // InternalFortXTrans.g:3966:1: ( ')' )
            // InternalFortXTrans.g:3967:2: ')'
            {
             before(grammarAccess.getQualifiedNameTupleAccess().getRightParenthesisKeyword_3()); 
            match(input,36,FOLLOW_2); 
             after(grammarAccess.getQualifiedNameTupleAccess().getRightParenthesisKeyword_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedNameTuple__Group__3__Impl"


    // $ANTLR start "rule__QualifiedNameTuple__Group_2__0"
    // InternalFortXTrans.g:3977:1: rule__QualifiedNameTuple__Group_2__0 : rule__QualifiedNameTuple__Group_2__0__Impl rule__QualifiedNameTuple__Group_2__1 ;
    public final void rule__QualifiedNameTuple__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3981:1: ( rule__QualifiedNameTuple__Group_2__0__Impl rule__QualifiedNameTuple__Group_2__1 )
            // InternalFortXTrans.g:3982:2: rule__QualifiedNameTuple__Group_2__0__Impl rule__QualifiedNameTuple__Group_2__1
            {
            pushFollow(FOLLOW_5);
            rule__QualifiedNameTuple__Group_2__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__QualifiedNameTuple__Group_2__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedNameTuple__Group_2__0"


    // $ANTLR start "rule__QualifiedNameTuple__Group_2__0__Impl"
    // InternalFortXTrans.g:3989:1: rule__QualifiedNameTuple__Group_2__0__Impl : ( ',' ) ;
    public final void rule__QualifiedNameTuple__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3993:1: ( ( ',' ) )
            // InternalFortXTrans.g:3994:1: ( ',' )
            {
            // InternalFortXTrans.g:3994:1: ( ',' )
            // InternalFortXTrans.g:3995:2: ','
            {
             before(grammarAccess.getQualifiedNameTupleAccess().getCommaKeyword_2_0()); 
            match(input,31,FOLLOW_2); 
             after(grammarAccess.getQualifiedNameTupleAccess().getCommaKeyword_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedNameTuple__Group_2__0__Impl"


    // $ANTLR start "rule__QualifiedNameTuple__Group_2__1"
    // InternalFortXTrans.g:4004:1: rule__QualifiedNameTuple__Group_2__1 : rule__QualifiedNameTuple__Group_2__1__Impl ;
    public final void rule__QualifiedNameTuple__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4008:1: ( rule__QualifiedNameTuple__Group_2__1__Impl )
            // InternalFortXTrans.g:4009:2: rule__QualifiedNameTuple__Group_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__QualifiedNameTuple__Group_2__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedNameTuple__Group_2__1"


    // $ANTLR start "rule__QualifiedNameTuple__Group_2__1__Impl"
    // InternalFortXTrans.g:4015:1: rule__QualifiedNameTuple__Group_2__1__Impl : ( ( rule__QualifiedNameTuple__QlistAssignment_2_1 ) ) ;
    public final void rule__QualifiedNameTuple__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4019:1: ( ( ( rule__QualifiedNameTuple__QlistAssignment_2_1 ) ) )
            // InternalFortXTrans.g:4020:1: ( ( rule__QualifiedNameTuple__QlistAssignment_2_1 ) )
            {
            // InternalFortXTrans.g:4020:1: ( ( rule__QualifiedNameTuple__QlistAssignment_2_1 ) )
            // InternalFortXTrans.g:4021:2: ( rule__QualifiedNameTuple__QlistAssignment_2_1 )
            {
             before(grammarAccess.getQualifiedNameTupleAccess().getQlistAssignment_2_1()); 
            // InternalFortXTrans.g:4022:2: ( rule__QualifiedNameTuple__QlistAssignment_2_1 )
            // InternalFortXTrans.g:4022:3: rule__QualifiedNameTuple__QlistAssignment_2_1
            {
            pushFollow(FOLLOW_2);
            rule__QualifiedNameTuple__QlistAssignment_2_1();

            state._fsp--;


            }

             after(grammarAccess.getQualifiedNameTupleAccess().getQlistAssignment_2_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedNameTuple__Group_2__1__Impl"


    // $ANTLR start "rule__SimpleNames__Group_1__0"
    // InternalFortXTrans.g:4031:1: rule__SimpleNames__Group_1__0 : rule__SimpleNames__Group_1__0__Impl rule__SimpleNames__Group_1__1 ;
    public final void rule__SimpleNames__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4035:1: ( rule__SimpleNames__Group_1__0__Impl rule__SimpleNames__Group_1__1 )
            // InternalFortXTrans.g:4036:2: rule__SimpleNames__Group_1__0__Impl rule__SimpleNames__Group_1__1
            {
            pushFollow(FOLLOW_5);
            rule__SimpleNames__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__SimpleNames__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleNames__Group_1__0"


    // $ANTLR start "rule__SimpleNames__Group_1__0__Impl"
    // InternalFortXTrans.g:4043:1: rule__SimpleNames__Group_1__0__Impl : ( ( rule__SimpleNames__BrackAssignment_1_0 ) ) ;
    public final void rule__SimpleNames__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4047:1: ( ( ( rule__SimpleNames__BrackAssignment_1_0 ) ) )
            // InternalFortXTrans.g:4048:1: ( ( rule__SimpleNames__BrackAssignment_1_0 ) )
            {
            // InternalFortXTrans.g:4048:1: ( ( rule__SimpleNames__BrackAssignment_1_0 ) )
            // InternalFortXTrans.g:4049:2: ( rule__SimpleNames__BrackAssignment_1_0 )
            {
             before(grammarAccess.getSimpleNamesAccess().getBrackAssignment_1_0()); 
            // InternalFortXTrans.g:4050:2: ( rule__SimpleNames__BrackAssignment_1_0 )
            // InternalFortXTrans.g:4050:3: rule__SimpleNames__BrackAssignment_1_0
            {
            pushFollow(FOLLOW_2);
            rule__SimpleNames__BrackAssignment_1_0();

            state._fsp--;


            }

             after(grammarAccess.getSimpleNamesAccess().getBrackAssignment_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleNames__Group_1__0__Impl"


    // $ANTLR start "rule__SimpleNames__Group_1__1"
    // InternalFortXTrans.g:4058:1: rule__SimpleNames__Group_1__1 : rule__SimpleNames__Group_1__1__Impl rule__SimpleNames__Group_1__2 ;
    public final void rule__SimpleNames__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4062:1: ( rule__SimpleNames__Group_1__1__Impl rule__SimpleNames__Group_1__2 )
            // InternalFortXTrans.g:4063:2: rule__SimpleNames__Group_1__1__Impl rule__SimpleNames__Group_1__2
            {
            pushFollow(FOLLOW_14);
            rule__SimpleNames__Group_1__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__SimpleNames__Group_1__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleNames__Group_1__1"


    // $ANTLR start "rule__SimpleNames__Group_1__1__Impl"
    // InternalFortXTrans.g:4070:1: rule__SimpleNames__Group_1__1__Impl : ( ( rule__SimpleNames__NameListAssignment_1_1 ) ) ;
    public final void rule__SimpleNames__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4074:1: ( ( ( rule__SimpleNames__NameListAssignment_1_1 ) ) )
            // InternalFortXTrans.g:4075:1: ( ( rule__SimpleNames__NameListAssignment_1_1 ) )
            {
            // InternalFortXTrans.g:4075:1: ( ( rule__SimpleNames__NameListAssignment_1_1 ) )
            // InternalFortXTrans.g:4076:2: ( rule__SimpleNames__NameListAssignment_1_1 )
            {
             before(grammarAccess.getSimpleNamesAccess().getNameListAssignment_1_1()); 
            // InternalFortXTrans.g:4077:2: ( rule__SimpleNames__NameListAssignment_1_1 )
            // InternalFortXTrans.g:4077:3: rule__SimpleNames__NameListAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__SimpleNames__NameListAssignment_1_1();

            state._fsp--;


            }

             after(grammarAccess.getSimpleNamesAccess().getNameListAssignment_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleNames__Group_1__1__Impl"


    // $ANTLR start "rule__SimpleNames__Group_1__2"
    // InternalFortXTrans.g:4085:1: rule__SimpleNames__Group_1__2 : rule__SimpleNames__Group_1__2__Impl rule__SimpleNames__Group_1__3 ;
    public final void rule__SimpleNames__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4089:1: ( rule__SimpleNames__Group_1__2__Impl rule__SimpleNames__Group_1__3 )
            // InternalFortXTrans.g:4090:2: rule__SimpleNames__Group_1__2__Impl rule__SimpleNames__Group_1__3
            {
            pushFollow(FOLLOW_14);
            rule__SimpleNames__Group_1__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__SimpleNames__Group_1__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleNames__Group_1__2"


    // $ANTLR start "rule__SimpleNames__Group_1__2__Impl"
    // InternalFortXTrans.g:4097:1: rule__SimpleNames__Group_1__2__Impl : ( ( rule__SimpleNames__Group_1_2__0 )* ) ;
    public final void rule__SimpleNames__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4101:1: ( ( ( rule__SimpleNames__Group_1_2__0 )* ) )
            // InternalFortXTrans.g:4102:1: ( ( rule__SimpleNames__Group_1_2__0 )* )
            {
            // InternalFortXTrans.g:4102:1: ( ( rule__SimpleNames__Group_1_2__0 )* )
            // InternalFortXTrans.g:4103:2: ( rule__SimpleNames__Group_1_2__0 )*
            {
             before(grammarAccess.getSimpleNamesAccess().getGroup_1_2()); 
            // InternalFortXTrans.g:4104:2: ( rule__SimpleNames__Group_1_2__0 )*
            loop46:
            do {
                int alt46=2;
                int LA46_0 = input.LA(1);

                if ( (LA46_0==31) ) {
                    alt46=1;
                }


                switch (alt46) {
            	case 1 :
            	    // InternalFortXTrans.g:4104:3: rule__SimpleNames__Group_1_2__0
            	    {
            	    pushFollow(FOLLOW_15);
            	    rule__SimpleNames__Group_1_2__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop46;
                }
            } while (true);

             after(grammarAccess.getSimpleNamesAccess().getGroup_1_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleNames__Group_1__2__Impl"


    // $ANTLR start "rule__SimpleNames__Group_1__3"
    // InternalFortXTrans.g:4112:1: rule__SimpleNames__Group_1__3 : rule__SimpleNames__Group_1__3__Impl ;
    public final void rule__SimpleNames__Group_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4116:1: ( rule__SimpleNames__Group_1__3__Impl )
            // InternalFortXTrans.g:4117:2: rule__SimpleNames__Group_1__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__SimpleNames__Group_1__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleNames__Group_1__3"


    // $ANTLR start "rule__SimpleNames__Group_1__3__Impl"
    // InternalFortXTrans.g:4123:1: rule__SimpleNames__Group_1__3__Impl : ( '}' ) ;
    public final void rule__SimpleNames__Group_1__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4127:1: ( ( '}' ) )
            // InternalFortXTrans.g:4128:1: ( '}' )
            {
            // InternalFortXTrans.g:4128:1: ( '}' )
            // InternalFortXTrans.g:4129:2: '}'
            {
             before(grammarAccess.getSimpleNamesAccess().getRightCurlyBracketKeyword_1_3()); 
            match(input,30,FOLLOW_2); 
             after(grammarAccess.getSimpleNamesAccess().getRightCurlyBracketKeyword_1_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleNames__Group_1__3__Impl"


    // $ANTLR start "rule__SimpleNames__Group_1_2__0"
    // InternalFortXTrans.g:4139:1: rule__SimpleNames__Group_1_2__0 : rule__SimpleNames__Group_1_2__0__Impl rule__SimpleNames__Group_1_2__1 ;
    public final void rule__SimpleNames__Group_1_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4143:1: ( rule__SimpleNames__Group_1_2__0__Impl rule__SimpleNames__Group_1_2__1 )
            // InternalFortXTrans.g:4144:2: rule__SimpleNames__Group_1_2__0__Impl rule__SimpleNames__Group_1_2__1
            {
            pushFollow(FOLLOW_5);
            rule__SimpleNames__Group_1_2__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__SimpleNames__Group_1_2__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleNames__Group_1_2__0"


    // $ANTLR start "rule__SimpleNames__Group_1_2__0__Impl"
    // InternalFortXTrans.g:4151:1: rule__SimpleNames__Group_1_2__0__Impl : ( ',' ) ;
    public final void rule__SimpleNames__Group_1_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4155:1: ( ( ',' ) )
            // InternalFortXTrans.g:4156:1: ( ',' )
            {
            // InternalFortXTrans.g:4156:1: ( ',' )
            // InternalFortXTrans.g:4157:2: ','
            {
             before(grammarAccess.getSimpleNamesAccess().getCommaKeyword_1_2_0()); 
            match(input,31,FOLLOW_2); 
             after(grammarAccess.getSimpleNamesAccess().getCommaKeyword_1_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleNames__Group_1_2__0__Impl"


    // $ANTLR start "rule__SimpleNames__Group_1_2__1"
    // InternalFortXTrans.g:4166:1: rule__SimpleNames__Group_1_2__1 : rule__SimpleNames__Group_1_2__1__Impl ;
    public final void rule__SimpleNames__Group_1_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4170:1: ( rule__SimpleNames__Group_1_2__1__Impl )
            // InternalFortXTrans.g:4171:2: rule__SimpleNames__Group_1_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__SimpleNames__Group_1_2__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleNames__Group_1_2__1"


    // $ANTLR start "rule__SimpleNames__Group_1_2__1__Impl"
    // InternalFortXTrans.g:4177:1: rule__SimpleNames__Group_1_2__1__Impl : ( ( rule__SimpleNames__NameListAssignment_1_2_1 ) ) ;
    public final void rule__SimpleNames__Group_1_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4181:1: ( ( ( rule__SimpleNames__NameListAssignment_1_2_1 ) ) )
            // InternalFortXTrans.g:4182:1: ( ( rule__SimpleNames__NameListAssignment_1_2_1 ) )
            {
            // InternalFortXTrans.g:4182:1: ( ( rule__SimpleNames__NameListAssignment_1_2_1 ) )
            // InternalFortXTrans.g:4183:2: ( rule__SimpleNames__NameListAssignment_1_2_1 )
            {
             before(grammarAccess.getSimpleNamesAccess().getNameListAssignment_1_2_1()); 
            // InternalFortXTrans.g:4184:2: ( rule__SimpleNames__NameListAssignment_1_2_1 )
            // InternalFortXTrans.g:4184:3: rule__SimpleNames__NameListAssignment_1_2_1
            {
            pushFollow(FOLLOW_2);
            rule__SimpleNames__NameListAssignment_1_2_1();

            state._fsp--;


            }

             after(grammarAccess.getSimpleNamesAccess().getNameListAssignment_1_2_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleNames__Group_1_2__1__Impl"


    // $ANTLR start "rule__AliasedSimpleName__Group__0"
    // InternalFortXTrans.g:4193:1: rule__AliasedSimpleName__Group__0 : rule__AliasedSimpleName__Group__0__Impl rule__AliasedSimpleName__Group__1 ;
    public final void rule__AliasedSimpleName__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4197:1: ( rule__AliasedSimpleName__Group__0__Impl rule__AliasedSimpleName__Group__1 )
            // InternalFortXTrans.g:4198:2: rule__AliasedSimpleName__Group__0__Impl rule__AliasedSimpleName__Group__1
            {
            pushFollow(FOLLOW_20);
            rule__AliasedSimpleName__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__AliasedSimpleName__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedSimpleName__Group__0"


    // $ANTLR start "rule__AliasedSimpleName__Group__0__Impl"
    // InternalFortXTrans.g:4205:1: rule__AliasedSimpleName__Group__0__Impl : ( ( rule__AliasedSimpleName__OrigAssignment_0 ) ) ;
    public final void rule__AliasedSimpleName__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4209:1: ( ( ( rule__AliasedSimpleName__OrigAssignment_0 ) ) )
            // InternalFortXTrans.g:4210:1: ( ( rule__AliasedSimpleName__OrigAssignment_0 ) )
            {
            // InternalFortXTrans.g:4210:1: ( ( rule__AliasedSimpleName__OrigAssignment_0 ) )
            // InternalFortXTrans.g:4211:2: ( rule__AliasedSimpleName__OrigAssignment_0 )
            {
             before(grammarAccess.getAliasedSimpleNameAccess().getOrigAssignment_0()); 
            // InternalFortXTrans.g:4212:2: ( rule__AliasedSimpleName__OrigAssignment_0 )
            // InternalFortXTrans.g:4212:3: rule__AliasedSimpleName__OrigAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__AliasedSimpleName__OrigAssignment_0();

            state._fsp--;


            }

             after(grammarAccess.getAliasedSimpleNameAccess().getOrigAssignment_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedSimpleName__Group__0__Impl"


    // $ANTLR start "rule__AliasedSimpleName__Group__1"
    // InternalFortXTrans.g:4220:1: rule__AliasedSimpleName__Group__1 : rule__AliasedSimpleName__Group__1__Impl ;
    public final void rule__AliasedSimpleName__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4224:1: ( rule__AliasedSimpleName__Group__1__Impl )
            // InternalFortXTrans.g:4225:2: rule__AliasedSimpleName__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AliasedSimpleName__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedSimpleName__Group__1"


    // $ANTLR start "rule__AliasedSimpleName__Group__1__Impl"
    // InternalFortXTrans.g:4231:1: rule__AliasedSimpleName__Group__1__Impl : ( ( rule__AliasedSimpleName__Group_1__0 )? ) ;
    public final void rule__AliasedSimpleName__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4235:1: ( ( ( rule__AliasedSimpleName__Group_1__0 )? ) )
            // InternalFortXTrans.g:4236:1: ( ( rule__AliasedSimpleName__Group_1__0 )? )
            {
            // InternalFortXTrans.g:4236:1: ( ( rule__AliasedSimpleName__Group_1__0 )? )
            // InternalFortXTrans.g:4237:2: ( rule__AliasedSimpleName__Group_1__0 )?
            {
             before(grammarAccess.getAliasedSimpleNameAccess().getGroup_1()); 
            // InternalFortXTrans.g:4238:2: ( rule__AliasedSimpleName__Group_1__0 )?
            int alt47=2;
            int LA47_0 = input.LA(1);

            if ( (LA47_0==34) ) {
                alt47=1;
            }
            switch (alt47) {
                case 1 :
                    // InternalFortXTrans.g:4238:3: rule__AliasedSimpleName__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__AliasedSimpleName__Group_1__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getAliasedSimpleNameAccess().getGroup_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedSimpleName__Group__1__Impl"


    // $ANTLR start "rule__AliasedSimpleName__Group_1__0"
    // InternalFortXTrans.g:4247:1: rule__AliasedSimpleName__Group_1__0 : rule__AliasedSimpleName__Group_1__0__Impl rule__AliasedSimpleName__Group_1__1 ;
    public final void rule__AliasedSimpleName__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4251:1: ( rule__AliasedSimpleName__Group_1__0__Impl rule__AliasedSimpleName__Group_1__1 )
            // InternalFortXTrans.g:4252:2: rule__AliasedSimpleName__Group_1__0__Impl rule__AliasedSimpleName__Group_1__1
            {
            pushFollow(FOLLOW_5);
            rule__AliasedSimpleName__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__AliasedSimpleName__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedSimpleName__Group_1__0"


    // $ANTLR start "rule__AliasedSimpleName__Group_1__0__Impl"
    // InternalFortXTrans.g:4259:1: rule__AliasedSimpleName__Group_1__0__Impl : ( 'as' ) ;
    public final void rule__AliasedSimpleName__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4263:1: ( ( 'as' ) )
            // InternalFortXTrans.g:4264:1: ( 'as' )
            {
            // InternalFortXTrans.g:4264:1: ( 'as' )
            // InternalFortXTrans.g:4265:2: 'as'
            {
             before(grammarAccess.getAliasedSimpleNameAccess().getAsKeyword_1_0()); 
            match(input,34,FOLLOW_2); 
             after(grammarAccess.getAliasedSimpleNameAccess().getAsKeyword_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedSimpleName__Group_1__0__Impl"


    // $ANTLR start "rule__AliasedSimpleName__Group_1__1"
    // InternalFortXTrans.g:4274:1: rule__AliasedSimpleName__Group_1__1 : rule__AliasedSimpleName__Group_1__1__Impl ;
    public final void rule__AliasedSimpleName__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4278:1: ( rule__AliasedSimpleName__Group_1__1__Impl )
            // InternalFortXTrans.g:4279:2: rule__AliasedSimpleName__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AliasedSimpleName__Group_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedSimpleName__Group_1__1"


    // $ANTLR start "rule__AliasedSimpleName__Group_1__1__Impl"
    // InternalFortXTrans.g:4285:1: rule__AliasedSimpleName__Group_1__1__Impl : ( ( rule__AliasedSimpleName__AsNameAssignment_1_1 ) ) ;
    public final void rule__AliasedSimpleName__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4289:1: ( ( ( rule__AliasedSimpleName__AsNameAssignment_1_1 ) ) )
            // InternalFortXTrans.g:4290:1: ( ( rule__AliasedSimpleName__AsNameAssignment_1_1 ) )
            {
            // InternalFortXTrans.g:4290:1: ( ( rule__AliasedSimpleName__AsNameAssignment_1_1 ) )
            // InternalFortXTrans.g:4291:2: ( rule__AliasedSimpleName__AsNameAssignment_1_1 )
            {
             before(grammarAccess.getAliasedSimpleNameAccess().getAsNameAssignment_1_1()); 
            // InternalFortXTrans.g:4292:2: ( rule__AliasedSimpleName__AsNameAssignment_1_1 )
            // InternalFortXTrans.g:4292:3: rule__AliasedSimpleName__AsNameAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__AliasedSimpleName__AsNameAssignment_1_1();

            state._fsp--;


            }

             after(grammarAccess.getAliasedSimpleNameAccess().getAsNameAssignment_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedSimpleName__Group_1__1__Impl"


    // $ANTLR start "rule__AliasedAPINames__Group_1__0"
    // InternalFortXTrans.g:4301:1: rule__AliasedAPINames__Group_1__0 : rule__AliasedAPINames__Group_1__0__Impl rule__AliasedAPINames__Group_1__1 ;
    public final void rule__AliasedAPINames__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4305:1: ( rule__AliasedAPINames__Group_1__0__Impl rule__AliasedAPINames__Group_1__1 )
            // InternalFortXTrans.g:4306:2: rule__AliasedAPINames__Group_1__0__Impl rule__AliasedAPINames__Group_1__1
            {
            pushFollow(FOLLOW_5);
            rule__AliasedAPINames__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__AliasedAPINames__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedAPINames__Group_1__0"


    // $ANTLR start "rule__AliasedAPINames__Group_1__0__Impl"
    // InternalFortXTrans.g:4313:1: rule__AliasedAPINames__Group_1__0__Impl : ( ( rule__AliasedAPINames__BrackAssignment_1_0 ) ) ;
    public final void rule__AliasedAPINames__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4317:1: ( ( ( rule__AliasedAPINames__BrackAssignment_1_0 ) ) )
            // InternalFortXTrans.g:4318:1: ( ( rule__AliasedAPINames__BrackAssignment_1_0 ) )
            {
            // InternalFortXTrans.g:4318:1: ( ( rule__AliasedAPINames__BrackAssignment_1_0 ) )
            // InternalFortXTrans.g:4319:2: ( rule__AliasedAPINames__BrackAssignment_1_0 )
            {
             before(grammarAccess.getAliasedAPINamesAccess().getBrackAssignment_1_0()); 
            // InternalFortXTrans.g:4320:2: ( rule__AliasedAPINames__BrackAssignment_1_0 )
            // InternalFortXTrans.g:4320:3: rule__AliasedAPINames__BrackAssignment_1_0
            {
            pushFollow(FOLLOW_2);
            rule__AliasedAPINames__BrackAssignment_1_0();

            state._fsp--;


            }

             after(grammarAccess.getAliasedAPINamesAccess().getBrackAssignment_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedAPINames__Group_1__0__Impl"


    // $ANTLR start "rule__AliasedAPINames__Group_1__1"
    // InternalFortXTrans.g:4328:1: rule__AliasedAPINames__Group_1__1 : rule__AliasedAPINames__Group_1__1__Impl rule__AliasedAPINames__Group_1__2 ;
    public final void rule__AliasedAPINames__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4332:1: ( rule__AliasedAPINames__Group_1__1__Impl rule__AliasedAPINames__Group_1__2 )
            // InternalFortXTrans.g:4333:2: rule__AliasedAPINames__Group_1__1__Impl rule__AliasedAPINames__Group_1__2
            {
            pushFollow(FOLLOW_14);
            rule__AliasedAPINames__Group_1__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__AliasedAPINames__Group_1__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedAPINames__Group_1__1"


    // $ANTLR start "rule__AliasedAPINames__Group_1__1__Impl"
    // InternalFortXTrans.g:4340:1: rule__AliasedAPINames__Group_1__1__Impl : ( ( rule__AliasedAPINames__NameListAssignment_1_1 ) ) ;
    public final void rule__AliasedAPINames__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4344:1: ( ( ( rule__AliasedAPINames__NameListAssignment_1_1 ) ) )
            // InternalFortXTrans.g:4345:1: ( ( rule__AliasedAPINames__NameListAssignment_1_1 ) )
            {
            // InternalFortXTrans.g:4345:1: ( ( rule__AliasedAPINames__NameListAssignment_1_1 ) )
            // InternalFortXTrans.g:4346:2: ( rule__AliasedAPINames__NameListAssignment_1_1 )
            {
             before(grammarAccess.getAliasedAPINamesAccess().getNameListAssignment_1_1()); 
            // InternalFortXTrans.g:4347:2: ( rule__AliasedAPINames__NameListAssignment_1_1 )
            // InternalFortXTrans.g:4347:3: rule__AliasedAPINames__NameListAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__AliasedAPINames__NameListAssignment_1_1();

            state._fsp--;


            }

             after(grammarAccess.getAliasedAPINamesAccess().getNameListAssignment_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedAPINames__Group_1__1__Impl"


    // $ANTLR start "rule__AliasedAPINames__Group_1__2"
    // InternalFortXTrans.g:4355:1: rule__AliasedAPINames__Group_1__2 : rule__AliasedAPINames__Group_1__2__Impl rule__AliasedAPINames__Group_1__3 ;
    public final void rule__AliasedAPINames__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4359:1: ( rule__AliasedAPINames__Group_1__2__Impl rule__AliasedAPINames__Group_1__3 )
            // InternalFortXTrans.g:4360:2: rule__AliasedAPINames__Group_1__2__Impl rule__AliasedAPINames__Group_1__3
            {
            pushFollow(FOLLOW_14);
            rule__AliasedAPINames__Group_1__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__AliasedAPINames__Group_1__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedAPINames__Group_1__2"


    // $ANTLR start "rule__AliasedAPINames__Group_1__2__Impl"
    // InternalFortXTrans.g:4367:1: rule__AliasedAPINames__Group_1__2__Impl : ( ( rule__AliasedAPINames__Group_1_2__0 )* ) ;
    public final void rule__AliasedAPINames__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4371:1: ( ( ( rule__AliasedAPINames__Group_1_2__0 )* ) )
            // InternalFortXTrans.g:4372:1: ( ( rule__AliasedAPINames__Group_1_2__0 )* )
            {
            // InternalFortXTrans.g:4372:1: ( ( rule__AliasedAPINames__Group_1_2__0 )* )
            // InternalFortXTrans.g:4373:2: ( rule__AliasedAPINames__Group_1_2__0 )*
            {
             before(grammarAccess.getAliasedAPINamesAccess().getGroup_1_2()); 
            // InternalFortXTrans.g:4374:2: ( rule__AliasedAPINames__Group_1_2__0 )*
            loop48:
            do {
                int alt48=2;
                int LA48_0 = input.LA(1);

                if ( (LA48_0==31) ) {
                    alt48=1;
                }


                switch (alt48) {
            	case 1 :
            	    // InternalFortXTrans.g:4374:3: rule__AliasedAPINames__Group_1_2__0
            	    {
            	    pushFollow(FOLLOW_15);
            	    rule__AliasedAPINames__Group_1_2__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop48;
                }
            } while (true);

             after(grammarAccess.getAliasedAPINamesAccess().getGroup_1_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedAPINames__Group_1__2__Impl"


    // $ANTLR start "rule__AliasedAPINames__Group_1__3"
    // InternalFortXTrans.g:4382:1: rule__AliasedAPINames__Group_1__3 : rule__AliasedAPINames__Group_1__3__Impl ;
    public final void rule__AliasedAPINames__Group_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4386:1: ( rule__AliasedAPINames__Group_1__3__Impl )
            // InternalFortXTrans.g:4387:2: rule__AliasedAPINames__Group_1__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AliasedAPINames__Group_1__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedAPINames__Group_1__3"


    // $ANTLR start "rule__AliasedAPINames__Group_1__3__Impl"
    // InternalFortXTrans.g:4393:1: rule__AliasedAPINames__Group_1__3__Impl : ( '}' ) ;
    public final void rule__AliasedAPINames__Group_1__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4397:1: ( ( '}' ) )
            // InternalFortXTrans.g:4398:1: ( '}' )
            {
            // InternalFortXTrans.g:4398:1: ( '}' )
            // InternalFortXTrans.g:4399:2: '}'
            {
             before(grammarAccess.getAliasedAPINamesAccess().getRightCurlyBracketKeyword_1_3()); 
            match(input,30,FOLLOW_2); 
             after(grammarAccess.getAliasedAPINamesAccess().getRightCurlyBracketKeyword_1_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedAPINames__Group_1__3__Impl"


    // $ANTLR start "rule__AliasedAPINames__Group_1_2__0"
    // InternalFortXTrans.g:4409:1: rule__AliasedAPINames__Group_1_2__0 : rule__AliasedAPINames__Group_1_2__0__Impl rule__AliasedAPINames__Group_1_2__1 ;
    public final void rule__AliasedAPINames__Group_1_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4413:1: ( rule__AliasedAPINames__Group_1_2__0__Impl rule__AliasedAPINames__Group_1_2__1 )
            // InternalFortXTrans.g:4414:2: rule__AliasedAPINames__Group_1_2__0__Impl rule__AliasedAPINames__Group_1_2__1
            {
            pushFollow(FOLLOW_5);
            rule__AliasedAPINames__Group_1_2__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__AliasedAPINames__Group_1_2__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedAPINames__Group_1_2__0"


    // $ANTLR start "rule__AliasedAPINames__Group_1_2__0__Impl"
    // InternalFortXTrans.g:4421:1: rule__AliasedAPINames__Group_1_2__0__Impl : ( ',' ) ;
    public final void rule__AliasedAPINames__Group_1_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4425:1: ( ( ',' ) )
            // InternalFortXTrans.g:4426:1: ( ',' )
            {
            // InternalFortXTrans.g:4426:1: ( ',' )
            // InternalFortXTrans.g:4427:2: ','
            {
             before(grammarAccess.getAliasedAPINamesAccess().getCommaKeyword_1_2_0()); 
            match(input,31,FOLLOW_2); 
             after(grammarAccess.getAliasedAPINamesAccess().getCommaKeyword_1_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedAPINames__Group_1_2__0__Impl"


    // $ANTLR start "rule__AliasedAPINames__Group_1_2__1"
    // InternalFortXTrans.g:4436:1: rule__AliasedAPINames__Group_1_2__1 : rule__AliasedAPINames__Group_1_2__1__Impl ;
    public final void rule__AliasedAPINames__Group_1_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4440:1: ( rule__AliasedAPINames__Group_1_2__1__Impl )
            // InternalFortXTrans.g:4441:2: rule__AliasedAPINames__Group_1_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AliasedAPINames__Group_1_2__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedAPINames__Group_1_2__1"


    // $ANTLR start "rule__AliasedAPINames__Group_1_2__1__Impl"
    // InternalFortXTrans.g:4447:1: rule__AliasedAPINames__Group_1_2__1__Impl : ( ( rule__AliasedAPINames__NameListAssignment_1_2_1 ) ) ;
    public final void rule__AliasedAPINames__Group_1_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4451:1: ( ( ( rule__AliasedAPINames__NameListAssignment_1_2_1 ) ) )
            // InternalFortXTrans.g:4452:1: ( ( rule__AliasedAPINames__NameListAssignment_1_2_1 ) )
            {
            // InternalFortXTrans.g:4452:1: ( ( rule__AliasedAPINames__NameListAssignment_1_2_1 ) )
            // InternalFortXTrans.g:4453:2: ( rule__AliasedAPINames__NameListAssignment_1_2_1 )
            {
             before(grammarAccess.getAliasedAPINamesAccess().getNameListAssignment_1_2_1()); 
            // InternalFortXTrans.g:4454:2: ( rule__AliasedAPINames__NameListAssignment_1_2_1 )
            // InternalFortXTrans.g:4454:3: rule__AliasedAPINames__NameListAssignment_1_2_1
            {
            pushFollow(FOLLOW_2);
            rule__AliasedAPINames__NameListAssignment_1_2_1();

            state._fsp--;


            }

             after(grammarAccess.getAliasedAPINamesAccess().getNameListAssignment_1_2_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedAPINames__Group_1_2__1__Impl"


    // $ANTLR start "rule__AliasedAPIName__Group__0"
    // InternalFortXTrans.g:4463:1: rule__AliasedAPIName__Group__0 : rule__AliasedAPIName__Group__0__Impl rule__AliasedAPIName__Group__1 ;
    public final void rule__AliasedAPIName__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4467:1: ( rule__AliasedAPIName__Group__0__Impl rule__AliasedAPIName__Group__1 )
            // InternalFortXTrans.g:4468:2: rule__AliasedAPIName__Group__0__Impl rule__AliasedAPIName__Group__1
            {
            pushFollow(FOLLOW_20);
            rule__AliasedAPIName__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__AliasedAPIName__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedAPIName__Group__0"


    // $ANTLR start "rule__AliasedAPIName__Group__0__Impl"
    // InternalFortXTrans.g:4475:1: rule__AliasedAPIName__Group__0__Impl : ( ( rule__AliasedAPIName__OrigAssignment_0 ) ) ;
    public final void rule__AliasedAPIName__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4479:1: ( ( ( rule__AliasedAPIName__OrigAssignment_0 ) ) )
            // InternalFortXTrans.g:4480:1: ( ( rule__AliasedAPIName__OrigAssignment_0 ) )
            {
            // InternalFortXTrans.g:4480:1: ( ( rule__AliasedAPIName__OrigAssignment_0 ) )
            // InternalFortXTrans.g:4481:2: ( rule__AliasedAPIName__OrigAssignment_0 )
            {
             before(grammarAccess.getAliasedAPINameAccess().getOrigAssignment_0()); 
            // InternalFortXTrans.g:4482:2: ( rule__AliasedAPIName__OrigAssignment_0 )
            // InternalFortXTrans.g:4482:3: rule__AliasedAPIName__OrigAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__AliasedAPIName__OrigAssignment_0();

            state._fsp--;


            }

             after(grammarAccess.getAliasedAPINameAccess().getOrigAssignment_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedAPIName__Group__0__Impl"


    // $ANTLR start "rule__AliasedAPIName__Group__1"
    // InternalFortXTrans.g:4490:1: rule__AliasedAPIName__Group__1 : rule__AliasedAPIName__Group__1__Impl ;
    public final void rule__AliasedAPIName__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4494:1: ( rule__AliasedAPIName__Group__1__Impl )
            // InternalFortXTrans.g:4495:2: rule__AliasedAPIName__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AliasedAPIName__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedAPIName__Group__1"


    // $ANTLR start "rule__AliasedAPIName__Group__1__Impl"
    // InternalFortXTrans.g:4501:1: rule__AliasedAPIName__Group__1__Impl : ( ( rule__AliasedAPIName__Group_1__0 )? ) ;
    public final void rule__AliasedAPIName__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4505:1: ( ( ( rule__AliasedAPIName__Group_1__0 )? ) )
            // InternalFortXTrans.g:4506:1: ( ( rule__AliasedAPIName__Group_1__0 )? )
            {
            // InternalFortXTrans.g:4506:1: ( ( rule__AliasedAPIName__Group_1__0 )? )
            // InternalFortXTrans.g:4507:2: ( rule__AliasedAPIName__Group_1__0 )?
            {
             before(grammarAccess.getAliasedAPINameAccess().getGroup_1()); 
            // InternalFortXTrans.g:4508:2: ( rule__AliasedAPIName__Group_1__0 )?
            int alt49=2;
            int LA49_0 = input.LA(1);

            if ( (LA49_0==34) ) {
                alt49=1;
            }
            switch (alt49) {
                case 1 :
                    // InternalFortXTrans.g:4508:3: rule__AliasedAPIName__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__AliasedAPIName__Group_1__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getAliasedAPINameAccess().getGroup_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedAPIName__Group__1__Impl"


    // $ANTLR start "rule__AliasedAPIName__Group_1__0"
    // InternalFortXTrans.g:4517:1: rule__AliasedAPIName__Group_1__0 : rule__AliasedAPIName__Group_1__0__Impl rule__AliasedAPIName__Group_1__1 ;
    public final void rule__AliasedAPIName__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4521:1: ( rule__AliasedAPIName__Group_1__0__Impl rule__AliasedAPIName__Group_1__1 )
            // InternalFortXTrans.g:4522:2: rule__AliasedAPIName__Group_1__0__Impl rule__AliasedAPIName__Group_1__1
            {
            pushFollow(FOLLOW_5);
            rule__AliasedAPIName__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__AliasedAPIName__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedAPIName__Group_1__0"


    // $ANTLR start "rule__AliasedAPIName__Group_1__0__Impl"
    // InternalFortXTrans.g:4529:1: rule__AliasedAPIName__Group_1__0__Impl : ( 'as' ) ;
    public final void rule__AliasedAPIName__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4533:1: ( ( 'as' ) )
            // InternalFortXTrans.g:4534:1: ( 'as' )
            {
            // InternalFortXTrans.g:4534:1: ( 'as' )
            // InternalFortXTrans.g:4535:2: 'as'
            {
             before(grammarAccess.getAliasedAPINameAccess().getAsKeyword_1_0()); 
            match(input,34,FOLLOW_2); 
             after(grammarAccess.getAliasedAPINameAccess().getAsKeyword_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedAPIName__Group_1__0__Impl"


    // $ANTLR start "rule__AliasedAPIName__Group_1__1"
    // InternalFortXTrans.g:4544:1: rule__AliasedAPIName__Group_1__1 : rule__AliasedAPIName__Group_1__1__Impl ;
    public final void rule__AliasedAPIName__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4548:1: ( rule__AliasedAPIName__Group_1__1__Impl )
            // InternalFortXTrans.g:4549:2: rule__AliasedAPIName__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AliasedAPIName__Group_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedAPIName__Group_1__1"


    // $ANTLR start "rule__AliasedAPIName__Group_1__1__Impl"
    // InternalFortXTrans.g:4555:1: rule__AliasedAPIName__Group_1__1__Impl : ( ( rule__AliasedAPIName__AsNameAssignment_1_1 ) ) ;
    public final void rule__AliasedAPIName__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4559:1: ( ( ( rule__AliasedAPIName__AsNameAssignment_1_1 ) ) )
            // InternalFortXTrans.g:4560:1: ( ( rule__AliasedAPIName__AsNameAssignment_1_1 ) )
            {
            // InternalFortXTrans.g:4560:1: ( ( rule__AliasedAPIName__AsNameAssignment_1_1 ) )
            // InternalFortXTrans.g:4561:2: ( rule__AliasedAPIName__AsNameAssignment_1_1 )
            {
             before(grammarAccess.getAliasedAPINameAccess().getAsNameAssignment_1_1()); 
            // InternalFortXTrans.g:4562:2: ( rule__AliasedAPIName__AsNameAssignment_1_1 )
            // InternalFortXTrans.g:4562:3: rule__AliasedAPIName__AsNameAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__AliasedAPIName__AsNameAssignment_1_1();

            state._fsp--;


            }

             after(grammarAccess.getAliasedAPINameAccess().getAsNameAssignment_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedAPIName__Group_1__1__Impl"


    // $ANTLR start "rule__ValParam__Group_1__0"
    // InternalFortXTrans.g:4571:1: rule__ValParam__Group_1__0 : rule__ValParam__Group_1__0__Impl rule__ValParam__Group_1__1 ;
    public final void rule__ValParam__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4575:1: ( rule__ValParam__Group_1__0__Impl rule__ValParam__Group_1__1 )
            // InternalFortXTrans.g:4576:2: rule__ValParam__Group_1__0__Impl rule__ValParam__Group_1__1
            {
            pushFollow(FOLLOW_23);
            rule__ValParam__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ValParam__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValParam__Group_1__0"


    // $ANTLR start "rule__ValParam__Group_1__0__Impl"
    // InternalFortXTrans.g:4583:1: rule__ValParam__Group_1__0__Impl : ( ( rule__ValParam__BrackAssignment_1_0 ) ) ;
    public final void rule__ValParam__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4587:1: ( ( ( rule__ValParam__BrackAssignment_1_0 ) ) )
            // InternalFortXTrans.g:4588:1: ( ( rule__ValParam__BrackAssignment_1_0 ) )
            {
            // InternalFortXTrans.g:4588:1: ( ( rule__ValParam__BrackAssignment_1_0 ) )
            // InternalFortXTrans.g:4589:2: ( rule__ValParam__BrackAssignment_1_0 )
            {
             before(grammarAccess.getValParamAccess().getBrackAssignment_1_0()); 
            // InternalFortXTrans.g:4590:2: ( rule__ValParam__BrackAssignment_1_0 )
            // InternalFortXTrans.g:4590:3: rule__ValParam__BrackAssignment_1_0
            {
            pushFollow(FOLLOW_2);
            rule__ValParam__BrackAssignment_1_0();

            state._fsp--;


            }

             after(grammarAccess.getValParamAccess().getBrackAssignment_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValParam__Group_1__0__Impl"


    // $ANTLR start "rule__ValParam__Group_1__1"
    // InternalFortXTrans.g:4598:1: rule__ValParam__Group_1__1 : rule__ValParam__Group_1__1__Impl rule__ValParam__Group_1__2 ;
    public final void rule__ValParam__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4602:1: ( rule__ValParam__Group_1__1__Impl rule__ValParam__Group_1__2 )
            // InternalFortXTrans.g:4603:2: rule__ValParam__Group_1__1__Impl rule__ValParam__Group_1__2
            {
            pushFollow(FOLLOW_23);
            rule__ValParam__Group_1__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ValParam__Group_1__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValParam__Group_1__1"


    // $ANTLR start "rule__ValParam__Group_1__1__Impl"
    // InternalFortXTrans.g:4610:1: rule__ValParam__Group_1__1__Impl : ( ( rule__ValParam__Group_1_1__0 )? ) ;
    public final void rule__ValParam__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4614:1: ( ( ( rule__ValParam__Group_1_1__0 )? ) )
            // InternalFortXTrans.g:4615:1: ( ( rule__ValParam__Group_1_1__0 )? )
            {
            // InternalFortXTrans.g:4615:1: ( ( rule__ValParam__Group_1_1__0 )? )
            // InternalFortXTrans.g:4616:2: ( rule__ValParam__Group_1_1__0 )?
            {
             before(grammarAccess.getValParamAccess().getGroup_1_1()); 
            // InternalFortXTrans.g:4617:2: ( rule__ValParam__Group_1_1__0 )?
            int alt50=2;
            int LA50_0 = input.LA(1);

            if ( (LA50_0==RULE_ID||LA50_0==67) ) {
                alt50=1;
            }
            switch (alt50) {
                case 1 :
                    // InternalFortXTrans.g:4617:3: rule__ValParam__Group_1_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ValParam__Group_1_1__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getValParamAccess().getGroup_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValParam__Group_1__1__Impl"


    // $ANTLR start "rule__ValParam__Group_1__2"
    // InternalFortXTrans.g:4625:1: rule__ValParam__Group_1__2 : rule__ValParam__Group_1__2__Impl ;
    public final void rule__ValParam__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4629:1: ( rule__ValParam__Group_1__2__Impl )
            // InternalFortXTrans.g:4630:2: rule__ValParam__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ValParam__Group_1__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValParam__Group_1__2"


    // $ANTLR start "rule__ValParam__Group_1__2__Impl"
    // InternalFortXTrans.g:4636:1: rule__ValParam__Group_1__2__Impl : ( ')' ) ;
    public final void rule__ValParam__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4640:1: ( ( ')' ) )
            // InternalFortXTrans.g:4641:1: ( ')' )
            {
            // InternalFortXTrans.g:4641:1: ( ')' )
            // InternalFortXTrans.g:4642:2: ')'
            {
             before(grammarAccess.getValParamAccess().getRightParenthesisKeyword_1_2()); 
            match(input,36,FOLLOW_2); 
             after(grammarAccess.getValParamAccess().getRightParenthesisKeyword_1_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValParam__Group_1__2__Impl"


    // $ANTLR start "rule__ValParam__Group_1_1__0"
    // InternalFortXTrans.g:4652:1: rule__ValParam__Group_1_1__0 : rule__ValParam__Group_1_1__0__Impl rule__ValParam__Group_1_1__1 ;
    public final void rule__ValParam__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4656:1: ( rule__ValParam__Group_1_1__0__Impl rule__ValParam__Group_1_1__1 )
            // InternalFortXTrans.g:4657:2: rule__ValParam__Group_1_1__0__Impl rule__ValParam__Group_1_1__1
            {
            pushFollow(FOLLOW_24);
            rule__ValParam__Group_1_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ValParam__Group_1_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValParam__Group_1_1__0"


    // $ANTLR start "rule__ValParam__Group_1_1__0__Impl"
    // InternalFortXTrans.g:4664:1: rule__ValParam__Group_1_1__0__Impl : ( ( rule__ValParam__ParamsAssignment_1_1_0 ) ) ;
    public final void rule__ValParam__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4668:1: ( ( ( rule__ValParam__ParamsAssignment_1_1_0 ) ) )
            // InternalFortXTrans.g:4669:1: ( ( rule__ValParam__ParamsAssignment_1_1_0 ) )
            {
            // InternalFortXTrans.g:4669:1: ( ( rule__ValParam__ParamsAssignment_1_1_0 ) )
            // InternalFortXTrans.g:4670:2: ( rule__ValParam__ParamsAssignment_1_1_0 )
            {
             before(grammarAccess.getValParamAccess().getParamsAssignment_1_1_0()); 
            // InternalFortXTrans.g:4671:2: ( rule__ValParam__ParamsAssignment_1_1_0 )
            // InternalFortXTrans.g:4671:3: rule__ValParam__ParamsAssignment_1_1_0
            {
            pushFollow(FOLLOW_2);
            rule__ValParam__ParamsAssignment_1_1_0();

            state._fsp--;


            }

             after(grammarAccess.getValParamAccess().getParamsAssignment_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValParam__Group_1_1__0__Impl"


    // $ANTLR start "rule__ValParam__Group_1_1__1"
    // InternalFortXTrans.g:4679:1: rule__ValParam__Group_1_1__1 : rule__ValParam__Group_1_1__1__Impl ;
    public final void rule__ValParam__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4683:1: ( rule__ValParam__Group_1_1__1__Impl )
            // InternalFortXTrans.g:4684:2: rule__ValParam__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ValParam__Group_1_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValParam__Group_1_1__1"


    // $ANTLR start "rule__ValParam__Group_1_1__1__Impl"
    // InternalFortXTrans.g:4690:1: rule__ValParam__Group_1_1__1__Impl : ( ( rule__ValParam__Group_1_1_1__0 )* ) ;
    public final void rule__ValParam__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4694:1: ( ( ( rule__ValParam__Group_1_1_1__0 )* ) )
            // InternalFortXTrans.g:4695:1: ( ( rule__ValParam__Group_1_1_1__0 )* )
            {
            // InternalFortXTrans.g:4695:1: ( ( rule__ValParam__Group_1_1_1__0 )* )
            // InternalFortXTrans.g:4696:2: ( rule__ValParam__Group_1_1_1__0 )*
            {
             before(grammarAccess.getValParamAccess().getGroup_1_1_1()); 
            // InternalFortXTrans.g:4697:2: ( rule__ValParam__Group_1_1_1__0 )*
            loop51:
            do {
                int alt51=2;
                int LA51_0 = input.LA(1);

                if ( (LA51_0==31) ) {
                    alt51=1;
                }


                switch (alt51) {
            	case 1 :
            	    // InternalFortXTrans.g:4697:3: rule__ValParam__Group_1_1_1__0
            	    {
            	    pushFollow(FOLLOW_15);
            	    rule__ValParam__Group_1_1_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop51;
                }
            } while (true);

             after(grammarAccess.getValParamAccess().getGroup_1_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValParam__Group_1_1__1__Impl"


    // $ANTLR start "rule__ValParam__Group_1_1_1__0"
    // InternalFortXTrans.g:4706:1: rule__ValParam__Group_1_1_1__0 : rule__ValParam__Group_1_1_1__0__Impl rule__ValParam__Group_1_1_1__1 ;
    public final void rule__ValParam__Group_1_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4710:1: ( rule__ValParam__Group_1_1_1__0__Impl rule__ValParam__Group_1_1_1__1 )
            // InternalFortXTrans.g:4711:2: rule__ValParam__Group_1_1_1__0__Impl rule__ValParam__Group_1_1_1__1
            {
            pushFollow(FOLLOW_25);
            rule__ValParam__Group_1_1_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ValParam__Group_1_1_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValParam__Group_1_1_1__0"


    // $ANTLR start "rule__ValParam__Group_1_1_1__0__Impl"
    // InternalFortXTrans.g:4718:1: rule__ValParam__Group_1_1_1__0__Impl : ( ',' ) ;
    public final void rule__ValParam__Group_1_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4722:1: ( ( ',' ) )
            // InternalFortXTrans.g:4723:1: ( ',' )
            {
            // InternalFortXTrans.g:4723:1: ( ',' )
            // InternalFortXTrans.g:4724:2: ','
            {
             before(grammarAccess.getValParamAccess().getCommaKeyword_1_1_1_0()); 
            match(input,31,FOLLOW_2); 
             after(grammarAccess.getValParamAccess().getCommaKeyword_1_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValParam__Group_1_1_1__0__Impl"


    // $ANTLR start "rule__ValParam__Group_1_1_1__1"
    // InternalFortXTrans.g:4733:1: rule__ValParam__Group_1_1_1__1 : rule__ValParam__Group_1_1_1__1__Impl ;
    public final void rule__ValParam__Group_1_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4737:1: ( rule__ValParam__Group_1_1_1__1__Impl )
            // InternalFortXTrans.g:4738:2: rule__ValParam__Group_1_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ValParam__Group_1_1_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValParam__Group_1_1_1__1"


    // $ANTLR start "rule__ValParam__Group_1_1_1__1__Impl"
    // InternalFortXTrans.g:4744:1: rule__ValParam__Group_1_1_1__1__Impl : ( ( rule__ValParam__ParamsAssignment_1_1_1_1 ) ) ;
    public final void rule__ValParam__Group_1_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4748:1: ( ( ( rule__ValParam__ParamsAssignment_1_1_1_1 ) ) )
            // InternalFortXTrans.g:4749:1: ( ( rule__ValParam__ParamsAssignment_1_1_1_1 ) )
            {
            // InternalFortXTrans.g:4749:1: ( ( rule__ValParam__ParamsAssignment_1_1_1_1 ) )
            // InternalFortXTrans.g:4750:2: ( rule__ValParam__ParamsAssignment_1_1_1_1 )
            {
             before(grammarAccess.getValParamAccess().getParamsAssignment_1_1_1_1()); 
            // InternalFortXTrans.g:4751:2: ( rule__ValParam__ParamsAssignment_1_1_1_1 )
            // InternalFortXTrans.g:4751:3: rule__ValParam__ParamsAssignment_1_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__ValParam__ParamsAssignment_1_1_1_1();

            state._fsp--;


            }

             after(grammarAccess.getValParamAccess().getParamsAssignment_1_1_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValParam__Group_1_1_1__1__Impl"


    // $ANTLR start "rule__Param__Group__0"
    // InternalFortXTrans.g:4760:1: rule__Param__Group__0 : rule__Param__Group__0__Impl rule__Param__Group__1 ;
    public final void rule__Param__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4764:1: ( rule__Param__Group__0__Impl rule__Param__Group__1 )
            // InternalFortXTrans.g:4765:2: rule__Param__Group__0__Impl rule__Param__Group__1
            {
            pushFollow(FOLLOW_26);
            rule__Param__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Param__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Param__Group__0"


    // $ANTLR start "rule__Param__Group__0__Impl"
    // InternalFortXTrans.g:4772:1: rule__Param__Group__0__Impl : ( ( rule__Param__BIdAssignment_0 ) ) ;
    public final void rule__Param__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4776:1: ( ( ( rule__Param__BIdAssignment_0 ) ) )
            // InternalFortXTrans.g:4777:1: ( ( rule__Param__BIdAssignment_0 ) )
            {
            // InternalFortXTrans.g:4777:1: ( ( rule__Param__BIdAssignment_0 ) )
            // InternalFortXTrans.g:4778:2: ( rule__Param__BIdAssignment_0 )
            {
             before(grammarAccess.getParamAccess().getBIdAssignment_0()); 
            // InternalFortXTrans.g:4779:2: ( rule__Param__BIdAssignment_0 )
            // InternalFortXTrans.g:4779:3: rule__Param__BIdAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__Param__BIdAssignment_0();

            state._fsp--;


            }

             after(grammarAccess.getParamAccess().getBIdAssignment_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Param__Group__0__Impl"


    // $ANTLR start "rule__Param__Group__1"
    // InternalFortXTrans.g:4787:1: rule__Param__Group__1 : rule__Param__Group__1__Impl ;
    public final void rule__Param__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4791:1: ( rule__Param__Group__1__Impl )
            // InternalFortXTrans.g:4792:2: rule__Param__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Param__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Param__Group__1"


    // $ANTLR start "rule__Param__Group__1__Impl"
    // InternalFortXTrans.g:4798:1: rule__Param__Group__1__Impl : ( ( rule__Param__IstypeAssignment_1 ) ) ;
    public final void rule__Param__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4802:1: ( ( ( rule__Param__IstypeAssignment_1 ) ) )
            // InternalFortXTrans.g:4803:1: ( ( rule__Param__IstypeAssignment_1 ) )
            {
            // InternalFortXTrans.g:4803:1: ( ( rule__Param__IstypeAssignment_1 ) )
            // InternalFortXTrans.g:4804:2: ( rule__Param__IstypeAssignment_1 )
            {
             before(grammarAccess.getParamAccess().getIstypeAssignment_1()); 
            // InternalFortXTrans.g:4805:2: ( rule__Param__IstypeAssignment_1 )
            // InternalFortXTrans.g:4805:3: rule__Param__IstypeAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__Param__IstypeAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getParamAccess().getIstypeAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Param__Group__1__Impl"


    // $ANTLR start "rule__RetType__Group_0__0"
    // InternalFortXTrans.g:4814:1: rule__RetType__Group_0__0 : rule__RetType__Group_0__0__Impl rule__RetType__Group_0__1 ;
    public final void rule__RetType__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4818:1: ( rule__RetType__Group_0__0__Impl rule__RetType__Group_0__1 )
            // InternalFortXTrans.g:4819:2: rule__RetType__Group_0__0__Impl rule__RetType__Group_0__1
            {
            pushFollow(FOLLOW_27);
            rule__RetType__Group_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__RetType__Group_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RetType__Group_0__0"


    // $ANTLR start "rule__RetType__Group_0__0__Impl"
    // InternalFortXTrans.g:4826:1: rule__RetType__Group_0__0__Impl : ( ':' ) ;
    public final void rule__RetType__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4830:1: ( ( ':' ) )
            // InternalFortXTrans.g:4831:1: ( ':' )
            {
            // InternalFortXTrans.g:4831:1: ( ':' )
            // InternalFortXTrans.g:4832:2: ':'
            {
             before(grammarAccess.getRetTypeAccess().getColonKeyword_0_0()); 
            match(input,37,FOLLOW_2); 
             after(grammarAccess.getRetTypeAccess().getColonKeyword_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RetType__Group_0__0__Impl"


    // $ANTLR start "rule__RetType__Group_0__1"
    // InternalFortXTrans.g:4841:1: rule__RetType__Group_0__1 : rule__RetType__Group_0__1__Impl rule__RetType__Group_0__2 ;
    public final void rule__RetType__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4845:1: ( rule__RetType__Group_0__1__Impl rule__RetType__Group_0__2 )
            // InternalFortXTrans.g:4846:2: rule__RetType__Group_0__1__Impl rule__RetType__Group_0__2
            {
            pushFollow(FOLLOW_28);
            rule__RetType__Group_0__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__RetType__Group_0__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RetType__Group_0__1"


    // $ANTLR start "rule__RetType__Group_0__1__Impl"
    // InternalFortXTrans.g:4853:1: rule__RetType__Group_0__1__Impl : ( ( rule__RetType__EmptyAssignment_0_1 ) ) ;
    public final void rule__RetType__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4857:1: ( ( ( rule__RetType__EmptyAssignment_0_1 ) ) )
            // InternalFortXTrans.g:4858:1: ( ( rule__RetType__EmptyAssignment_0_1 ) )
            {
            // InternalFortXTrans.g:4858:1: ( ( rule__RetType__EmptyAssignment_0_1 ) )
            // InternalFortXTrans.g:4859:2: ( rule__RetType__EmptyAssignment_0_1 )
            {
             before(grammarAccess.getRetTypeAccess().getEmptyAssignment_0_1()); 
            // InternalFortXTrans.g:4860:2: ( rule__RetType__EmptyAssignment_0_1 )
            // InternalFortXTrans.g:4860:3: rule__RetType__EmptyAssignment_0_1
            {
            pushFollow(FOLLOW_2);
            rule__RetType__EmptyAssignment_0_1();

            state._fsp--;


            }

             after(grammarAccess.getRetTypeAccess().getEmptyAssignment_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RetType__Group_0__1__Impl"


    // $ANTLR start "rule__RetType__Group_0__2"
    // InternalFortXTrans.g:4868:1: rule__RetType__Group_0__2 : rule__RetType__Group_0__2__Impl ;
    public final void rule__RetType__Group_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4872:1: ( rule__RetType__Group_0__2__Impl )
            // InternalFortXTrans.g:4873:2: rule__RetType__Group_0__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__RetType__Group_0__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RetType__Group_0__2"


    // $ANTLR start "rule__RetType__Group_0__2__Impl"
    // InternalFortXTrans.g:4879:1: rule__RetType__Group_0__2__Impl : ( ')' ) ;
    public final void rule__RetType__Group_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4883:1: ( ( ')' ) )
            // InternalFortXTrans.g:4884:1: ( ')' )
            {
            // InternalFortXTrans.g:4884:1: ( ')' )
            // InternalFortXTrans.g:4885:2: ')'
            {
             before(grammarAccess.getRetTypeAccess().getRightParenthesisKeyword_0_2()); 
            match(input,36,FOLLOW_2); 
             after(grammarAccess.getRetTypeAccess().getRightParenthesisKeyword_0_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RetType__Group_0__2__Impl"


    // $ANTLR start "rule__RetType__Group_1__0"
    // InternalFortXTrans.g:4895:1: rule__RetType__Group_1__0 : rule__RetType__Group_1__0__Impl rule__RetType__Group_1__1 ;
    public final void rule__RetType__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4899:1: ( rule__RetType__Group_1__0__Impl rule__RetType__Group_1__1 )
            // InternalFortXTrans.g:4900:2: rule__RetType__Group_1__0__Impl rule__RetType__Group_1__1
            {
            pushFollow(FOLLOW_5);
            rule__RetType__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__RetType__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RetType__Group_1__0"


    // $ANTLR start "rule__RetType__Group_1__0__Impl"
    // InternalFortXTrans.g:4907:1: rule__RetType__Group_1__0__Impl : ( ':' ) ;
    public final void rule__RetType__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4911:1: ( ( ':' ) )
            // InternalFortXTrans.g:4912:1: ( ':' )
            {
            // InternalFortXTrans.g:4912:1: ( ':' )
            // InternalFortXTrans.g:4913:2: ':'
            {
             before(grammarAccess.getRetTypeAccess().getColonKeyword_1_0()); 
            match(input,37,FOLLOW_2); 
             after(grammarAccess.getRetTypeAccess().getColonKeyword_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RetType__Group_1__0__Impl"


    // $ANTLR start "rule__RetType__Group_1__1"
    // InternalFortXTrans.g:4922:1: rule__RetType__Group_1__1 : rule__RetType__Group_1__1__Impl ;
    public final void rule__RetType__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4926:1: ( rule__RetType__Group_1__1__Impl )
            // InternalFortXTrans.g:4927:2: rule__RetType__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__RetType__Group_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RetType__Group_1__1"


    // $ANTLR start "rule__RetType__Group_1__1__Impl"
    // InternalFortXTrans.g:4933:1: rule__RetType__Group_1__1__Impl : ( ( rule__RetType__TypeAssignment_1_1 ) ) ;
    public final void rule__RetType__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4937:1: ( ( ( rule__RetType__TypeAssignment_1_1 ) ) )
            // InternalFortXTrans.g:4938:1: ( ( rule__RetType__TypeAssignment_1_1 ) )
            {
            // InternalFortXTrans.g:4938:1: ( ( rule__RetType__TypeAssignment_1_1 ) )
            // InternalFortXTrans.g:4939:2: ( rule__RetType__TypeAssignment_1_1 )
            {
             before(grammarAccess.getRetTypeAccess().getTypeAssignment_1_1()); 
            // InternalFortXTrans.g:4940:2: ( rule__RetType__TypeAssignment_1_1 )
            // InternalFortXTrans.g:4940:3: rule__RetType__TypeAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__RetType__TypeAssignment_1_1();

            state._fsp--;


            }

             after(grammarAccess.getRetTypeAccess().getTypeAssignment_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RetType__Group_1__1__Impl"


    // $ANTLR start "rule__TupleType__Group__0"
    // InternalFortXTrans.g:4949:1: rule__TupleType__Group__0 : rule__TupleType__Group__0__Impl rule__TupleType__Group__1 ;
    public final void rule__TupleType__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4953:1: ( rule__TupleType__Group__0__Impl rule__TupleType__Group__1 )
            // InternalFortXTrans.g:4954:2: rule__TupleType__Group__0__Impl rule__TupleType__Group__1
            {
            pushFollow(FOLLOW_5);
            rule__TupleType__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__TupleType__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TupleType__Group__0"


    // $ANTLR start "rule__TupleType__Group__0__Impl"
    // InternalFortXTrans.g:4961:1: rule__TupleType__Group__0__Impl : ( '(' ) ;
    public final void rule__TupleType__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4965:1: ( ( '(' ) )
            // InternalFortXTrans.g:4966:1: ( '(' )
            {
            // InternalFortXTrans.g:4966:1: ( '(' )
            // InternalFortXTrans.g:4967:2: '('
            {
             before(grammarAccess.getTupleTypeAccess().getLeftParenthesisKeyword_0()); 
            match(input,35,FOLLOW_2); 
             after(grammarAccess.getTupleTypeAccess().getLeftParenthesisKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TupleType__Group__0__Impl"


    // $ANTLR start "rule__TupleType__Group__1"
    // InternalFortXTrans.g:4976:1: rule__TupleType__Group__1 : rule__TupleType__Group__1__Impl rule__TupleType__Group__2 ;
    public final void rule__TupleType__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4980:1: ( rule__TupleType__Group__1__Impl rule__TupleType__Group__2 )
            // InternalFortXTrans.g:4981:2: rule__TupleType__Group__1__Impl rule__TupleType__Group__2
            {
            pushFollow(FOLLOW_22);
            rule__TupleType__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__TupleType__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TupleType__Group__1"


    // $ANTLR start "rule__TupleType__Group__1__Impl"
    // InternalFortXTrans.g:4988:1: rule__TupleType__Group__1__Impl : ( ( rule__TupleType__TypesAssignment_1 ) ) ;
    public final void rule__TupleType__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4992:1: ( ( ( rule__TupleType__TypesAssignment_1 ) ) )
            // InternalFortXTrans.g:4993:1: ( ( rule__TupleType__TypesAssignment_1 ) )
            {
            // InternalFortXTrans.g:4993:1: ( ( rule__TupleType__TypesAssignment_1 ) )
            // InternalFortXTrans.g:4994:2: ( rule__TupleType__TypesAssignment_1 )
            {
             before(grammarAccess.getTupleTypeAccess().getTypesAssignment_1()); 
            // InternalFortXTrans.g:4995:2: ( rule__TupleType__TypesAssignment_1 )
            // InternalFortXTrans.g:4995:3: rule__TupleType__TypesAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__TupleType__TypesAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getTupleTypeAccess().getTypesAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TupleType__Group__1__Impl"


    // $ANTLR start "rule__TupleType__Group__2"
    // InternalFortXTrans.g:5003:1: rule__TupleType__Group__2 : rule__TupleType__Group__2__Impl rule__TupleType__Group__3 ;
    public final void rule__TupleType__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5007:1: ( rule__TupleType__Group__2__Impl rule__TupleType__Group__3 )
            // InternalFortXTrans.g:5008:2: rule__TupleType__Group__2__Impl rule__TupleType__Group__3
            {
            pushFollow(FOLLOW_22);
            rule__TupleType__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__TupleType__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TupleType__Group__2"


    // $ANTLR start "rule__TupleType__Group__2__Impl"
    // InternalFortXTrans.g:5015:1: rule__TupleType__Group__2__Impl : ( ( rule__TupleType__Group_2__0 )* ) ;
    public final void rule__TupleType__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5019:1: ( ( ( rule__TupleType__Group_2__0 )* ) )
            // InternalFortXTrans.g:5020:1: ( ( rule__TupleType__Group_2__0 )* )
            {
            // InternalFortXTrans.g:5020:1: ( ( rule__TupleType__Group_2__0 )* )
            // InternalFortXTrans.g:5021:2: ( rule__TupleType__Group_2__0 )*
            {
             before(grammarAccess.getTupleTypeAccess().getGroup_2()); 
            // InternalFortXTrans.g:5022:2: ( rule__TupleType__Group_2__0 )*
            loop52:
            do {
                int alt52=2;
                int LA52_0 = input.LA(1);

                if ( (LA52_0==31) ) {
                    alt52=1;
                }


                switch (alt52) {
            	case 1 :
            	    // InternalFortXTrans.g:5022:3: rule__TupleType__Group_2__0
            	    {
            	    pushFollow(FOLLOW_15);
            	    rule__TupleType__Group_2__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop52;
                }
            } while (true);

             after(grammarAccess.getTupleTypeAccess().getGroup_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TupleType__Group__2__Impl"


    // $ANTLR start "rule__TupleType__Group__3"
    // InternalFortXTrans.g:5030:1: rule__TupleType__Group__3 : rule__TupleType__Group__3__Impl ;
    public final void rule__TupleType__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5034:1: ( rule__TupleType__Group__3__Impl )
            // InternalFortXTrans.g:5035:2: rule__TupleType__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__TupleType__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TupleType__Group__3"


    // $ANTLR start "rule__TupleType__Group__3__Impl"
    // InternalFortXTrans.g:5041:1: rule__TupleType__Group__3__Impl : ( ')' ) ;
    public final void rule__TupleType__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5045:1: ( ( ')' ) )
            // InternalFortXTrans.g:5046:1: ( ')' )
            {
            // InternalFortXTrans.g:5046:1: ( ')' )
            // InternalFortXTrans.g:5047:2: ')'
            {
             before(grammarAccess.getTupleTypeAccess().getRightParenthesisKeyword_3()); 
            match(input,36,FOLLOW_2); 
             after(grammarAccess.getTupleTypeAccess().getRightParenthesisKeyword_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TupleType__Group__3__Impl"


    // $ANTLR start "rule__TupleType__Group_2__0"
    // InternalFortXTrans.g:5057:1: rule__TupleType__Group_2__0 : rule__TupleType__Group_2__0__Impl rule__TupleType__Group_2__1 ;
    public final void rule__TupleType__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5061:1: ( rule__TupleType__Group_2__0__Impl rule__TupleType__Group_2__1 )
            // InternalFortXTrans.g:5062:2: rule__TupleType__Group_2__0__Impl rule__TupleType__Group_2__1
            {
            pushFollow(FOLLOW_5);
            rule__TupleType__Group_2__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__TupleType__Group_2__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TupleType__Group_2__0"


    // $ANTLR start "rule__TupleType__Group_2__0__Impl"
    // InternalFortXTrans.g:5069:1: rule__TupleType__Group_2__0__Impl : ( ',' ) ;
    public final void rule__TupleType__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5073:1: ( ( ',' ) )
            // InternalFortXTrans.g:5074:1: ( ',' )
            {
            // InternalFortXTrans.g:5074:1: ( ',' )
            // InternalFortXTrans.g:5075:2: ','
            {
             before(grammarAccess.getTupleTypeAccess().getCommaKeyword_2_0()); 
            match(input,31,FOLLOW_2); 
             after(grammarAccess.getTupleTypeAccess().getCommaKeyword_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TupleType__Group_2__0__Impl"


    // $ANTLR start "rule__TupleType__Group_2__1"
    // InternalFortXTrans.g:5084:1: rule__TupleType__Group_2__1 : rule__TupleType__Group_2__1__Impl ;
    public final void rule__TupleType__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5088:1: ( rule__TupleType__Group_2__1__Impl )
            // InternalFortXTrans.g:5089:2: rule__TupleType__Group_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__TupleType__Group_2__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TupleType__Group_2__1"


    // $ANTLR start "rule__TupleType__Group_2__1__Impl"
    // InternalFortXTrans.g:5095:1: rule__TupleType__Group_2__1__Impl : ( ( rule__TupleType__TypesAssignment_2_1 ) ) ;
    public final void rule__TupleType__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5099:1: ( ( ( rule__TupleType__TypesAssignment_2_1 ) ) )
            // InternalFortXTrans.g:5100:1: ( ( rule__TupleType__TypesAssignment_2_1 ) )
            {
            // InternalFortXTrans.g:5100:1: ( ( rule__TupleType__TypesAssignment_2_1 ) )
            // InternalFortXTrans.g:5101:2: ( rule__TupleType__TypesAssignment_2_1 )
            {
             before(grammarAccess.getTupleTypeAccess().getTypesAssignment_2_1()); 
            // InternalFortXTrans.g:5102:2: ( rule__TupleType__TypesAssignment_2_1 )
            // InternalFortXTrans.g:5102:3: rule__TupleType__TypesAssignment_2_1
            {
            pushFollow(FOLLOW_2);
            rule__TupleType__TypesAssignment_2_1();

            state._fsp--;


            }

             after(grammarAccess.getTupleTypeAccess().getTypesAssignment_2_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TupleType__Group_2__1__Impl"


    // $ANTLR start "rule__FnDecl__Group__0"
    // InternalFortXTrans.g:5111:1: rule__FnDecl__Group__0 : rule__FnDecl__Group__0__Impl rule__FnDecl__Group__1 ;
    public final void rule__FnDecl__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5115:1: ( rule__FnDecl__Group__0__Impl rule__FnDecl__Group__1 )
            // InternalFortXTrans.g:5116:2: rule__FnDecl__Group__0__Impl rule__FnDecl__Group__1
            {
            pushFollow(FOLLOW_29);
            rule__FnDecl__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__FnDecl__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FnDecl__Group__0"


    // $ANTLR start "rule__FnDecl__Group__0__Impl"
    // InternalFortXTrans.g:5123:1: rule__FnDecl__Group__0__Impl : ( ( rule__FnDecl__ModsAssignment_0 )? ) ;
    public final void rule__FnDecl__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5127:1: ( ( ( rule__FnDecl__ModsAssignment_0 )? ) )
            // InternalFortXTrans.g:5128:1: ( ( rule__FnDecl__ModsAssignment_0 )? )
            {
            // InternalFortXTrans.g:5128:1: ( ( rule__FnDecl__ModsAssignment_0 )? )
            // InternalFortXTrans.g:5129:2: ( rule__FnDecl__ModsAssignment_0 )?
            {
             before(grammarAccess.getFnDeclAccess().getModsAssignment_0()); 
            // InternalFortXTrans.g:5130:2: ( rule__FnDecl__ModsAssignment_0 )?
            int alt53=2;
            int LA53_0 = input.LA(1);

            if ( ((LA53_0>=56 && LA53_0<=59)) ) {
                alt53=1;
            }
            switch (alt53) {
                case 1 :
                    // InternalFortXTrans.g:5130:3: rule__FnDecl__ModsAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__FnDecl__ModsAssignment_0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getFnDeclAccess().getModsAssignment_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FnDecl__Group__0__Impl"


    // $ANTLR start "rule__FnDecl__Group__1"
    // InternalFortXTrans.g:5138:1: rule__FnDecl__Group__1 : rule__FnDecl__Group__1__Impl rule__FnDecl__Group__2 ;
    public final void rule__FnDecl__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5142:1: ( rule__FnDecl__Group__1__Impl rule__FnDecl__Group__2 )
            // InternalFortXTrans.g:5143:2: rule__FnDecl__Group__1__Impl rule__FnDecl__Group__2
            {
            pushFollow(FOLLOW_30);
            rule__FnDecl__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__FnDecl__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FnDecl__Group__1"


    // $ANTLR start "rule__FnDecl__Group__1__Impl"
    // InternalFortXTrans.g:5150:1: rule__FnDecl__Group__1__Impl : ( ( rule__FnDecl__NameAssignment_1 ) ) ;
    public final void rule__FnDecl__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5154:1: ( ( ( rule__FnDecl__NameAssignment_1 ) ) )
            // InternalFortXTrans.g:5155:1: ( ( rule__FnDecl__NameAssignment_1 ) )
            {
            // InternalFortXTrans.g:5155:1: ( ( rule__FnDecl__NameAssignment_1 ) )
            // InternalFortXTrans.g:5156:2: ( rule__FnDecl__NameAssignment_1 )
            {
             before(grammarAccess.getFnDeclAccess().getNameAssignment_1()); 
            // InternalFortXTrans.g:5157:2: ( rule__FnDecl__NameAssignment_1 )
            // InternalFortXTrans.g:5157:3: rule__FnDecl__NameAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__FnDecl__NameAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getFnDeclAccess().getNameAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FnDecl__Group__1__Impl"


    // $ANTLR start "rule__FnDecl__Group__2"
    // InternalFortXTrans.g:5165:1: rule__FnDecl__Group__2 : rule__FnDecl__Group__2__Impl rule__FnDecl__Group__3 ;
    public final void rule__FnDecl__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5169:1: ( rule__FnDecl__Group__2__Impl rule__FnDecl__Group__3 )
            // InternalFortXTrans.g:5170:2: rule__FnDecl__Group__2__Impl rule__FnDecl__Group__3
            {
            pushFollow(FOLLOW_31);
            rule__FnDecl__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__FnDecl__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FnDecl__Group__2"


    // $ANTLR start "rule__FnDecl__Group__2__Impl"
    // InternalFortXTrans.g:5177:1: rule__FnDecl__Group__2__Impl : ( ( rule__FnDecl__ParamsAssignment_2 ) ) ;
    public final void rule__FnDecl__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5181:1: ( ( ( rule__FnDecl__ParamsAssignment_2 ) ) )
            // InternalFortXTrans.g:5182:1: ( ( rule__FnDecl__ParamsAssignment_2 ) )
            {
            // InternalFortXTrans.g:5182:1: ( ( rule__FnDecl__ParamsAssignment_2 ) )
            // InternalFortXTrans.g:5183:2: ( rule__FnDecl__ParamsAssignment_2 )
            {
             before(grammarAccess.getFnDeclAccess().getParamsAssignment_2()); 
            // InternalFortXTrans.g:5184:2: ( rule__FnDecl__ParamsAssignment_2 )
            // InternalFortXTrans.g:5184:3: rule__FnDecl__ParamsAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__FnDecl__ParamsAssignment_2();

            state._fsp--;


            }

             after(grammarAccess.getFnDeclAccess().getParamsAssignment_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FnDecl__Group__2__Impl"


    // $ANTLR start "rule__FnDecl__Group__3"
    // InternalFortXTrans.g:5192:1: rule__FnDecl__Group__3 : rule__FnDecl__Group__3__Impl rule__FnDecl__Group__4 ;
    public final void rule__FnDecl__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5196:1: ( rule__FnDecl__Group__3__Impl rule__FnDecl__Group__4 )
            // InternalFortXTrans.g:5197:2: rule__FnDecl__Group__3__Impl rule__FnDecl__Group__4
            {
            pushFollow(FOLLOW_31);
            rule__FnDecl__Group__3__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__FnDecl__Group__4();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FnDecl__Group__3"


    // $ANTLR start "rule__FnDecl__Group__3__Impl"
    // InternalFortXTrans.g:5204:1: rule__FnDecl__Group__3__Impl : ( ( rule__FnDecl__RetValAssignment_3 )? ) ;
    public final void rule__FnDecl__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5208:1: ( ( ( rule__FnDecl__RetValAssignment_3 )? ) )
            // InternalFortXTrans.g:5209:1: ( ( rule__FnDecl__RetValAssignment_3 )? )
            {
            // InternalFortXTrans.g:5209:1: ( ( rule__FnDecl__RetValAssignment_3 )? )
            // InternalFortXTrans.g:5210:2: ( rule__FnDecl__RetValAssignment_3 )?
            {
             before(grammarAccess.getFnDeclAccess().getRetValAssignment_3()); 
            // InternalFortXTrans.g:5211:2: ( rule__FnDecl__RetValAssignment_3 )?
            int alt54=2;
            int LA54_0 = input.LA(1);

            if ( (LA54_0==37) ) {
                alt54=1;
            }
            switch (alt54) {
                case 1 :
                    // InternalFortXTrans.g:5211:3: rule__FnDecl__RetValAssignment_3
                    {
                    pushFollow(FOLLOW_2);
                    rule__FnDecl__RetValAssignment_3();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getFnDeclAccess().getRetValAssignment_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FnDecl__Group__3__Impl"


    // $ANTLR start "rule__FnDecl__Group__4"
    // InternalFortXTrans.g:5219:1: rule__FnDecl__Group__4 : rule__FnDecl__Group__4__Impl ;
    public final void rule__FnDecl__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5223:1: ( rule__FnDecl__Group__4__Impl )
            // InternalFortXTrans.g:5224:2: rule__FnDecl__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FnDecl__Group__4__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FnDecl__Group__4"


    // $ANTLR start "rule__FnDecl__Group__4__Impl"
    // InternalFortXTrans.g:5230:1: rule__FnDecl__Group__4__Impl : ( ( rule__FnDecl__Group_4__0 )? ) ;
    public final void rule__FnDecl__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5234:1: ( ( ( rule__FnDecl__Group_4__0 )? ) )
            // InternalFortXTrans.g:5235:1: ( ( rule__FnDecl__Group_4__0 )? )
            {
            // InternalFortXTrans.g:5235:1: ( ( rule__FnDecl__Group_4__0 )? )
            // InternalFortXTrans.g:5236:2: ( rule__FnDecl__Group_4__0 )?
            {
             before(grammarAccess.getFnDeclAccess().getGroup_4()); 
            // InternalFortXTrans.g:5237:2: ( rule__FnDecl__Group_4__0 )?
            int alt55=2;
            int LA55_0 = input.LA(1);

            if ( (LA55_0==52) ) {
                alt55=1;
            }
            switch (alt55) {
                case 1 :
                    // InternalFortXTrans.g:5237:3: rule__FnDecl__Group_4__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__FnDecl__Group_4__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getFnDeclAccess().getGroup_4()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FnDecl__Group__4__Impl"


    // $ANTLR start "rule__FnDecl__Group_4__0"
    // InternalFortXTrans.g:5246:1: rule__FnDecl__Group_4__0 : rule__FnDecl__Group_4__0__Impl rule__FnDecl__Group_4__1 ;
    public final void rule__FnDecl__Group_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5250:1: ( rule__FnDecl__Group_4__0__Impl rule__FnDecl__Group_4__1 )
            // InternalFortXTrans.g:5251:2: rule__FnDecl__Group_4__0__Impl rule__FnDecl__Group_4__1
            {
            pushFollow(FOLLOW_32);
            rule__FnDecl__Group_4__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__FnDecl__Group_4__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FnDecl__Group_4__0"


    // $ANTLR start "rule__FnDecl__Group_4__0__Impl"
    // InternalFortXTrans.g:5258:1: rule__FnDecl__Group_4__0__Impl : ( ( rule__FnDecl__BodyAssignment_4_0 ) ) ;
    public final void rule__FnDecl__Group_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5262:1: ( ( ( rule__FnDecl__BodyAssignment_4_0 ) ) )
            // InternalFortXTrans.g:5263:1: ( ( rule__FnDecl__BodyAssignment_4_0 ) )
            {
            // InternalFortXTrans.g:5263:1: ( ( rule__FnDecl__BodyAssignment_4_0 ) )
            // InternalFortXTrans.g:5264:2: ( rule__FnDecl__BodyAssignment_4_0 )
            {
             before(grammarAccess.getFnDeclAccess().getBodyAssignment_4_0()); 
            // InternalFortXTrans.g:5265:2: ( rule__FnDecl__BodyAssignment_4_0 )
            // InternalFortXTrans.g:5265:3: rule__FnDecl__BodyAssignment_4_0
            {
            pushFollow(FOLLOW_2);
            rule__FnDecl__BodyAssignment_4_0();

            state._fsp--;


            }

             after(grammarAccess.getFnDeclAccess().getBodyAssignment_4_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FnDecl__Group_4__0__Impl"


    // $ANTLR start "rule__FnDecl__Group_4__1"
    // InternalFortXTrans.g:5273:1: rule__FnDecl__Group_4__1 : rule__FnDecl__Group_4__1__Impl ;
    public final void rule__FnDecl__Group_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5277:1: ( rule__FnDecl__Group_4__1__Impl )
            // InternalFortXTrans.g:5278:2: rule__FnDecl__Group_4__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FnDecl__Group_4__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FnDecl__Group_4__1"


    // $ANTLR start "rule__FnDecl__Group_4__1__Impl"
    // InternalFortXTrans.g:5284:1: rule__FnDecl__Group_4__1__Impl : ( ( rule__FnDecl__FnItselfAssignment_4_1 ) ) ;
    public final void rule__FnDecl__Group_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5288:1: ( ( ( rule__FnDecl__FnItselfAssignment_4_1 ) ) )
            // InternalFortXTrans.g:5289:1: ( ( rule__FnDecl__FnItselfAssignment_4_1 ) )
            {
            // InternalFortXTrans.g:5289:1: ( ( rule__FnDecl__FnItselfAssignment_4_1 ) )
            // InternalFortXTrans.g:5290:2: ( rule__FnDecl__FnItselfAssignment_4_1 )
            {
             before(grammarAccess.getFnDeclAccess().getFnItselfAssignment_4_1()); 
            // InternalFortXTrans.g:5291:2: ( rule__FnDecl__FnItselfAssignment_4_1 )
            // InternalFortXTrans.g:5291:3: rule__FnDecl__FnItselfAssignment_4_1
            {
            pushFollow(FOLLOW_2);
            rule__FnDecl__FnItselfAssignment_4_1();

            state._fsp--;


            }

             after(grammarAccess.getFnDeclAccess().getFnItselfAssignment_4_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FnDecl__Group_4__1__Impl"


    // $ANTLR start "rule__Stmnt__Group_1__0"
    // InternalFortXTrans.g:5300:1: rule__Stmnt__Group_1__0 : rule__Stmnt__Group_1__0__Impl rule__Stmnt__Group_1__1 ;
    public final void rule__Stmnt__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5304:1: ( rule__Stmnt__Group_1__0__Impl rule__Stmnt__Group_1__1 )
            // InternalFortXTrans.g:5305:2: rule__Stmnt__Group_1__0__Impl rule__Stmnt__Group_1__1
            {
            pushFollow(FOLLOW_33);
            rule__Stmnt__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Stmnt__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Stmnt__Group_1__0"


    // $ANTLR start "rule__Stmnt__Group_1__0__Impl"
    // InternalFortXTrans.g:5312:1: rule__Stmnt__Group_1__0__Impl : ( ( rule__Stmnt__BrackAssignment_1_0 ) ) ;
    public final void rule__Stmnt__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5316:1: ( ( ( rule__Stmnt__BrackAssignment_1_0 ) ) )
            // InternalFortXTrans.g:5317:1: ( ( rule__Stmnt__BrackAssignment_1_0 ) )
            {
            // InternalFortXTrans.g:5317:1: ( ( rule__Stmnt__BrackAssignment_1_0 ) )
            // InternalFortXTrans.g:5318:2: ( rule__Stmnt__BrackAssignment_1_0 )
            {
             before(grammarAccess.getStmntAccess().getBrackAssignment_1_0()); 
            // InternalFortXTrans.g:5319:2: ( rule__Stmnt__BrackAssignment_1_0 )
            // InternalFortXTrans.g:5319:3: rule__Stmnt__BrackAssignment_1_0
            {
            pushFollow(FOLLOW_2);
            rule__Stmnt__BrackAssignment_1_0();

            state._fsp--;


            }

             after(grammarAccess.getStmntAccess().getBrackAssignment_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Stmnt__Group_1__0__Impl"


    // $ANTLR start "rule__Stmnt__Group_1__1"
    // InternalFortXTrans.g:5327:1: rule__Stmnt__Group_1__1 : rule__Stmnt__Group_1__1__Impl rule__Stmnt__Group_1__2 ;
    public final void rule__Stmnt__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5331:1: ( rule__Stmnt__Group_1__1__Impl rule__Stmnt__Group_1__2 )
            // InternalFortXTrans.g:5332:2: rule__Stmnt__Group_1__1__Impl rule__Stmnt__Group_1__2
            {
            pushFollow(FOLLOW_28);
            rule__Stmnt__Group_1__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Stmnt__Group_1__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Stmnt__Group_1__1"


    // $ANTLR start "rule__Stmnt__Group_1__1__Impl"
    // InternalFortXTrans.g:5339:1: rule__Stmnt__Group_1__1__Impl : ( ( rule__Stmnt__DelimListAssignment_1_1 ) ) ;
    public final void rule__Stmnt__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5343:1: ( ( ( rule__Stmnt__DelimListAssignment_1_1 ) ) )
            // InternalFortXTrans.g:5344:1: ( ( rule__Stmnt__DelimListAssignment_1_1 ) )
            {
            // InternalFortXTrans.g:5344:1: ( ( rule__Stmnt__DelimListAssignment_1_1 ) )
            // InternalFortXTrans.g:5345:2: ( rule__Stmnt__DelimListAssignment_1_1 )
            {
             before(grammarAccess.getStmntAccess().getDelimListAssignment_1_1()); 
            // InternalFortXTrans.g:5346:2: ( rule__Stmnt__DelimListAssignment_1_1 )
            // InternalFortXTrans.g:5346:3: rule__Stmnt__DelimListAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Stmnt__DelimListAssignment_1_1();

            state._fsp--;


            }

             after(grammarAccess.getStmntAccess().getDelimListAssignment_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Stmnt__Group_1__1__Impl"


    // $ANTLR start "rule__Stmnt__Group_1__2"
    // InternalFortXTrans.g:5354:1: rule__Stmnt__Group_1__2 : rule__Stmnt__Group_1__2__Impl ;
    public final void rule__Stmnt__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5358:1: ( rule__Stmnt__Group_1__2__Impl )
            // InternalFortXTrans.g:5359:2: rule__Stmnt__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Stmnt__Group_1__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Stmnt__Group_1__2"


    // $ANTLR start "rule__Stmnt__Group_1__2__Impl"
    // InternalFortXTrans.g:5365:1: rule__Stmnt__Group_1__2__Impl : ( ')' ) ;
    public final void rule__Stmnt__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5369:1: ( ( ')' ) )
            // InternalFortXTrans.g:5370:1: ( ')' )
            {
            // InternalFortXTrans.g:5370:1: ( ')' )
            // InternalFortXTrans.g:5371:2: ')'
            {
             before(grammarAccess.getStmntAccess().getRightParenthesisKeyword_1_2()); 
            match(input,36,FOLLOW_2); 
             after(grammarAccess.getStmntAccess().getRightParenthesisKeyword_1_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Stmnt__Group_1__2__Impl"


    // $ANTLR start "rule__DelimitedExprList__Group__0"
    // InternalFortXTrans.g:5381:1: rule__DelimitedExprList__Group__0 : rule__DelimitedExprList__Group__0__Impl rule__DelimitedExprList__Group__1 ;
    public final void rule__DelimitedExprList__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5385:1: ( rule__DelimitedExprList__Group__0__Impl rule__DelimitedExprList__Group__1 )
            // InternalFortXTrans.g:5386:2: rule__DelimitedExprList__Group__0__Impl rule__DelimitedExprList__Group__1
            {
            pushFollow(FOLLOW_24);
            rule__DelimitedExprList__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DelimitedExprList__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExprList__Group__0"


    // $ANTLR start "rule__DelimitedExprList__Group__0__Impl"
    // InternalFortXTrans.g:5393:1: rule__DelimitedExprList__Group__0__Impl : ( ( rule__DelimitedExprList__DelimAssignment_0 ) ) ;
    public final void rule__DelimitedExprList__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5397:1: ( ( ( rule__DelimitedExprList__DelimAssignment_0 ) ) )
            // InternalFortXTrans.g:5398:1: ( ( rule__DelimitedExprList__DelimAssignment_0 ) )
            {
            // InternalFortXTrans.g:5398:1: ( ( rule__DelimitedExprList__DelimAssignment_0 ) )
            // InternalFortXTrans.g:5399:2: ( rule__DelimitedExprList__DelimAssignment_0 )
            {
             before(grammarAccess.getDelimitedExprListAccess().getDelimAssignment_0()); 
            // InternalFortXTrans.g:5400:2: ( rule__DelimitedExprList__DelimAssignment_0 )
            // InternalFortXTrans.g:5400:3: rule__DelimitedExprList__DelimAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__DelimitedExprList__DelimAssignment_0();

            state._fsp--;


            }

             after(grammarAccess.getDelimitedExprListAccess().getDelimAssignment_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExprList__Group__0__Impl"


    // $ANTLR start "rule__DelimitedExprList__Group__1"
    // InternalFortXTrans.g:5408:1: rule__DelimitedExprList__Group__1 : rule__DelimitedExprList__Group__1__Impl ;
    public final void rule__DelimitedExprList__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5412:1: ( rule__DelimitedExprList__Group__1__Impl )
            // InternalFortXTrans.g:5413:2: rule__DelimitedExprList__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__DelimitedExprList__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExprList__Group__1"


    // $ANTLR start "rule__DelimitedExprList__Group__1__Impl"
    // InternalFortXTrans.g:5419:1: rule__DelimitedExprList__Group__1__Impl : ( ( ( rule__DelimitedExprList__Group_1__0 ) ) ( ( rule__DelimitedExprList__Group_1__0 )* ) ) ;
    public final void rule__DelimitedExprList__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5423:1: ( ( ( ( rule__DelimitedExprList__Group_1__0 ) ) ( ( rule__DelimitedExprList__Group_1__0 )* ) ) )
            // InternalFortXTrans.g:5424:1: ( ( ( rule__DelimitedExprList__Group_1__0 ) ) ( ( rule__DelimitedExprList__Group_1__0 )* ) )
            {
            // InternalFortXTrans.g:5424:1: ( ( ( rule__DelimitedExprList__Group_1__0 ) ) ( ( rule__DelimitedExprList__Group_1__0 )* ) )
            // InternalFortXTrans.g:5425:2: ( ( rule__DelimitedExprList__Group_1__0 ) ) ( ( rule__DelimitedExprList__Group_1__0 )* )
            {
            // InternalFortXTrans.g:5425:2: ( ( rule__DelimitedExprList__Group_1__0 ) )
            // InternalFortXTrans.g:5426:3: ( rule__DelimitedExprList__Group_1__0 )
            {
             before(grammarAccess.getDelimitedExprListAccess().getGroup_1()); 
            // InternalFortXTrans.g:5427:3: ( rule__DelimitedExprList__Group_1__0 )
            // InternalFortXTrans.g:5427:4: rule__DelimitedExprList__Group_1__0
            {
            pushFollow(FOLLOW_15);
            rule__DelimitedExprList__Group_1__0();

            state._fsp--;


            }

             after(grammarAccess.getDelimitedExprListAccess().getGroup_1()); 

            }

            // InternalFortXTrans.g:5430:2: ( ( rule__DelimitedExprList__Group_1__0 )* )
            // InternalFortXTrans.g:5431:3: ( rule__DelimitedExprList__Group_1__0 )*
            {
             before(grammarAccess.getDelimitedExprListAccess().getGroup_1()); 
            // InternalFortXTrans.g:5432:3: ( rule__DelimitedExprList__Group_1__0 )*
            loop56:
            do {
                int alt56=2;
                int LA56_0 = input.LA(1);

                if ( (LA56_0==31) ) {
                    alt56=1;
                }


                switch (alt56) {
            	case 1 :
            	    // InternalFortXTrans.g:5432:4: rule__DelimitedExprList__Group_1__0
            	    {
            	    pushFollow(FOLLOW_15);
            	    rule__DelimitedExprList__Group_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop56;
                }
            } while (true);

             after(grammarAccess.getDelimitedExprListAccess().getGroup_1()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExprList__Group__1__Impl"


    // $ANTLR start "rule__DelimitedExprList__Group_1__0"
    // InternalFortXTrans.g:5442:1: rule__DelimitedExprList__Group_1__0 : rule__DelimitedExprList__Group_1__0__Impl rule__DelimitedExprList__Group_1__1 ;
    public final void rule__DelimitedExprList__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5446:1: ( rule__DelimitedExprList__Group_1__0__Impl rule__DelimitedExprList__Group_1__1 )
            // InternalFortXTrans.g:5447:2: rule__DelimitedExprList__Group_1__0__Impl rule__DelimitedExprList__Group_1__1
            {
            pushFollow(FOLLOW_33);
            rule__DelimitedExprList__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DelimitedExprList__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExprList__Group_1__0"


    // $ANTLR start "rule__DelimitedExprList__Group_1__0__Impl"
    // InternalFortXTrans.g:5454:1: rule__DelimitedExprList__Group_1__0__Impl : ( ',' ) ;
    public final void rule__DelimitedExprList__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5458:1: ( ( ',' ) )
            // InternalFortXTrans.g:5459:1: ( ',' )
            {
            // InternalFortXTrans.g:5459:1: ( ',' )
            // InternalFortXTrans.g:5460:2: ','
            {
             before(grammarAccess.getDelimitedExprListAccess().getCommaKeyword_1_0()); 
            match(input,31,FOLLOW_2); 
             after(grammarAccess.getDelimitedExprListAccess().getCommaKeyword_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExprList__Group_1__0__Impl"


    // $ANTLR start "rule__DelimitedExprList__Group_1__1"
    // InternalFortXTrans.g:5469:1: rule__DelimitedExprList__Group_1__1 : rule__DelimitedExprList__Group_1__1__Impl ;
    public final void rule__DelimitedExprList__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5473:1: ( rule__DelimitedExprList__Group_1__1__Impl )
            // InternalFortXTrans.g:5474:2: rule__DelimitedExprList__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__DelimitedExprList__Group_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExprList__Group_1__1"


    // $ANTLR start "rule__DelimitedExprList__Group_1__1__Impl"
    // InternalFortXTrans.g:5480:1: rule__DelimitedExprList__Group_1__1__Impl : ( ( rule__DelimitedExprList__DelimAssignment_1_1 ) ) ;
    public final void rule__DelimitedExprList__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5484:1: ( ( ( rule__DelimitedExprList__DelimAssignment_1_1 ) ) )
            // InternalFortXTrans.g:5485:1: ( ( rule__DelimitedExprList__DelimAssignment_1_1 ) )
            {
            // InternalFortXTrans.g:5485:1: ( ( rule__DelimitedExprList__DelimAssignment_1_1 ) )
            // InternalFortXTrans.g:5486:2: ( rule__DelimitedExprList__DelimAssignment_1_1 )
            {
             before(grammarAccess.getDelimitedExprListAccess().getDelimAssignment_1_1()); 
            // InternalFortXTrans.g:5487:2: ( rule__DelimitedExprList__DelimAssignment_1_1 )
            // InternalFortXTrans.g:5487:3: rule__DelimitedExprList__DelimAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__DelimitedExprList__DelimAssignment_1_1();

            state._fsp--;


            }

             after(grammarAccess.getDelimitedExprListAccess().getDelimAssignment_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExprList__Group_1__1__Impl"


    // $ANTLR start "rule__Expr__Group__0"
    // InternalFortXTrans.g:5496:1: rule__Expr__Group__0 : rule__Expr__Group__0__Impl rule__Expr__Group__1 ;
    public final void rule__Expr__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5500:1: ( rule__Expr__Group__0__Impl rule__Expr__Group__1 )
            // InternalFortXTrans.g:5501:2: rule__Expr__Group__0__Impl rule__Expr__Group__1
            {
            pushFollow(FOLLOW_20);
            rule__Expr__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Expr__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Expr__Group__0"


    // $ANTLR start "rule__Expr__Group__0__Impl"
    // InternalFortXTrans.g:5508:1: rule__Expr__Group__0__Impl : ( ruleOr ) ;
    public final void rule__Expr__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5512:1: ( ( ruleOr ) )
            // InternalFortXTrans.g:5513:1: ( ruleOr )
            {
            // InternalFortXTrans.g:5513:1: ( ruleOr )
            // InternalFortXTrans.g:5514:2: ruleOr
            {
             before(grammarAccess.getExprAccess().getOrParserRuleCall_0()); 
            pushFollow(FOLLOW_2);
            ruleOr();

            state._fsp--;

             after(grammarAccess.getExprAccess().getOrParserRuleCall_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Expr__Group__0__Impl"


    // $ANTLR start "rule__Expr__Group__1"
    // InternalFortXTrans.g:5523:1: rule__Expr__Group__1 : rule__Expr__Group__1__Impl ;
    public final void rule__Expr__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5527:1: ( rule__Expr__Group__1__Impl )
            // InternalFortXTrans.g:5528:2: rule__Expr__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Expr__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Expr__Group__1"


    // $ANTLR start "rule__Expr__Group__1__Impl"
    // InternalFortXTrans.g:5534:1: rule__Expr__Group__1__Impl : ( ( rule__Expr__TailAssignment_1 )* ) ;
    public final void rule__Expr__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5538:1: ( ( ( rule__Expr__TailAssignment_1 )* ) )
            // InternalFortXTrans.g:5539:1: ( ( rule__Expr__TailAssignment_1 )* )
            {
            // InternalFortXTrans.g:5539:1: ( ( rule__Expr__TailAssignment_1 )* )
            // InternalFortXTrans.g:5540:2: ( rule__Expr__TailAssignment_1 )*
            {
             before(grammarAccess.getExprAccess().getTailAssignment_1()); 
            // InternalFortXTrans.g:5541:2: ( rule__Expr__TailAssignment_1 )*
            loop57:
            do {
                int alt57=2;
                int LA57_0 = input.LA(1);

                if ( (LA57_0==34) ) {
                    alt57=1;
                }


                switch (alt57) {
            	case 1 :
            	    // InternalFortXTrans.g:5541:3: rule__Expr__TailAssignment_1
            	    {
            	    pushFollow(FOLLOW_34);
            	    rule__Expr__TailAssignment_1();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop57;
                }
            } while (true);

             after(grammarAccess.getExprAccess().getTailAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Expr__Group__1__Impl"


    // $ANTLR start "rule__Or__Group__0"
    // InternalFortXTrans.g:5550:1: rule__Or__Group__0 : rule__Or__Group__0__Impl rule__Or__Group__1 ;
    public final void rule__Or__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5554:1: ( rule__Or__Group__0__Impl rule__Or__Group__1 )
            // InternalFortXTrans.g:5555:2: rule__Or__Group__0__Impl rule__Or__Group__1
            {
            pushFollow(FOLLOW_35);
            rule__Or__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Or__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Or__Group__0"


    // $ANTLR start "rule__Or__Group__0__Impl"
    // InternalFortXTrans.g:5562:1: rule__Or__Group__0__Impl : ( ruleAnd ) ;
    public final void rule__Or__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5566:1: ( ( ruleAnd ) )
            // InternalFortXTrans.g:5567:1: ( ruleAnd )
            {
            // InternalFortXTrans.g:5567:1: ( ruleAnd )
            // InternalFortXTrans.g:5568:2: ruleAnd
            {
             before(grammarAccess.getOrAccess().getAndParserRuleCall_0()); 
            pushFollow(FOLLOW_2);
            ruleAnd();

            state._fsp--;

             after(grammarAccess.getOrAccess().getAndParserRuleCall_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Or__Group__0__Impl"


    // $ANTLR start "rule__Or__Group__1"
    // InternalFortXTrans.g:5577:1: rule__Or__Group__1 : rule__Or__Group__1__Impl ;
    public final void rule__Or__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5581:1: ( rule__Or__Group__1__Impl )
            // InternalFortXTrans.g:5582:2: rule__Or__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Or__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Or__Group__1"


    // $ANTLR start "rule__Or__Group__1__Impl"
    // InternalFortXTrans.g:5588:1: rule__Or__Group__1__Impl : ( ( rule__Or__Group_1__0 )* ) ;
    public final void rule__Or__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5592:1: ( ( ( rule__Or__Group_1__0 )* ) )
            // InternalFortXTrans.g:5593:1: ( ( rule__Or__Group_1__0 )* )
            {
            // InternalFortXTrans.g:5593:1: ( ( rule__Or__Group_1__0 )* )
            // InternalFortXTrans.g:5594:2: ( rule__Or__Group_1__0 )*
            {
             before(grammarAccess.getOrAccess().getGroup_1()); 
            // InternalFortXTrans.g:5595:2: ( rule__Or__Group_1__0 )*
            loop58:
            do {
                int alt58=2;
                int LA58_0 = input.LA(1);

                if ( (LA58_0==38) ) {
                    alt58=1;
                }


                switch (alt58) {
            	case 1 :
            	    // InternalFortXTrans.g:5595:3: rule__Or__Group_1__0
            	    {
            	    pushFollow(FOLLOW_36);
            	    rule__Or__Group_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop58;
                }
            } while (true);

             after(grammarAccess.getOrAccess().getGroup_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Or__Group__1__Impl"


    // $ANTLR start "rule__Or__Group_1__0"
    // InternalFortXTrans.g:5604:1: rule__Or__Group_1__0 : rule__Or__Group_1__0__Impl rule__Or__Group_1__1 ;
    public final void rule__Or__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5608:1: ( rule__Or__Group_1__0__Impl rule__Or__Group_1__1 )
            // InternalFortXTrans.g:5609:2: rule__Or__Group_1__0__Impl rule__Or__Group_1__1
            {
            pushFollow(FOLLOW_35);
            rule__Or__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Or__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Or__Group_1__0"


    // $ANTLR start "rule__Or__Group_1__0__Impl"
    // InternalFortXTrans.g:5616:1: rule__Or__Group_1__0__Impl : ( () ) ;
    public final void rule__Or__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5620:1: ( ( () ) )
            // InternalFortXTrans.g:5621:1: ( () )
            {
            // InternalFortXTrans.g:5621:1: ( () )
            // InternalFortXTrans.g:5622:2: ()
            {
             before(grammarAccess.getOrAccess().getOrLeftAction_1_0()); 
            // InternalFortXTrans.g:5623:2: ()
            // InternalFortXTrans.g:5623:3: 
            {
            }

             after(grammarAccess.getOrAccess().getOrLeftAction_1_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Or__Group_1__0__Impl"


    // $ANTLR start "rule__Or__Group_1__1"
    // InternalFortXTrans.g:5631:1: rule__Or__Group_1__1 : rule__Or__Group_1__1__Impl rule__Or__Group_1__2 ;
    public final void rule__Or__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5635:1: ( rule__Or__Group_1__1__Impl rule__Or__Group_1__2 )
            // InternalFortXTrans.g:5636:2: rule__Or__Group_1__1__Impl rule__Or__Group_1__2
            {
            pushFollow(FOLLOW_32);
            rule__Or__Group_1__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Or__Group_1__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Or__Group_1__1"


    // $ANTLR start "rule__Or__Group_1__1__Impl"
    // InternalFortXTrans.g:5643:1: rule__Or__Group_1__1__Impl : ( 'OR' ) ;
    public final void rule__Or__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5647:1: ( ( 'OR' ) )
            // InternalFortXTrans.g:5648:1: ( 'OR' )
            {
            // InternalFortXTrans.g:5648:1: ( 'OR' )
            // InternalFortXTrans.g:5649:2: 'OR'
            {
             before(grammarAccess.getOrAccess().getORKeyword_1_1()); 
            match(input,38,FOLLOW_2); 
             after(grammarAccess.getOrAccess().getORKeyword_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Or__Group_1__1__Impl"


    // $ANTLR start "rule__Or__Group_1__2"
    // InternalFortXTrans.g:5658:1: rule__Or__Group_1__2 : rule__Or__Group_1__2__Impl ;
    public final void rule__Or__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5662:1: ( rule__Or__Group_1__2__Impl )
            // InternalFortXTrans.g:5663:2: rule__Or__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Or__Group_1__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Or__Group_1__2"


    // $ANTLR start "rule__Or__Group_1__2__Impl"
    // InternalFortXTrans.g:5669:1: rule__Or__Group_1__2__Impl : ( ( rule__Or__RightAssignment_1_2 ) ) ;
    public final void rule__Or__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5673:1: ( ( ( rule__Or__RightAssignment_1_2 ) ) )
            // InternalFortXTrans.g:5674:1: ( ( rule__Or__RightAssignment_1_2 ) )
            {
            // InternalFortXTrans.g:5674:1: ( ( rule__Or__RightAssignment_1_2 ) )
            // InternalFortXTrans.g:5675:2: ( rule__Or__RightAssignment_1_2 )
            {
             before(grammarAccess.getOrAccess().getRightAssignment_1_2()); 
            // InternalFortXTrans.g:5676:2: ( rule__Or__RightAssignment_1_2 )
            // InternalFortXTrans.g:5676:3: rule__Or__RightAssignment_1_2
            {
            pushFollow(FOLLOW_2);
            rule__Or__RightAssignment_1_2();

            state._fsp--;


            }

             after(grammarAccess.getOrAccess().getRightAssignment_1_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Or__Group_1__2__Impl"


    // $ANTLR start "rule__And__Group__0"
    // InternalFortXTrans.g:5685:1: rule__And__Group__0 : rule__And__Group__0__Impl rule__And__Group__1 ;
    public final void rule__And__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5689:1: ( rule__And__Group__0__Impl rule__And__Group__1 )
            // InternalFortXTrans.g:5690:2: rule__And__Group__0__Impl rule__And__Group__1
            {
            pushFollow(FOLLOW_37);
            rule__And__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__And__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__And__Group__0"


    // $ANTLR start "rule__And__Group__0__Impl"
    // InternalFortXTrans.g:5697:1: rule__And__Group__0__Impl : ( ruleEquality ) ;
    public final void rule__And__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5701:1: ( ( ruleEquality ) )
            // InternalFortXTrans.g:5702:1: ( ruleEquality )
            {
            // InternalFortXTrans.g:5702:1: ( ruleEquality )
            // InternalFortXTrans.g:5703:2: ruleEquality
            {
             before(grammarAccess.getAndAccess().getEqualityParserRuleCall_0()); 
            pushFollow(FOLLOW_2);
            ruleEquality();

            state._fsp--;

             after(grammarAccess.getAndAccess().getEqualityParserRuleCall_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__And__Group__0__Impl"


    // $ANTLR start "rule__And__Group__1"
    // InternalFortXTrans.g:5712:1: rule__And__Group__1 : rule__And__Group__1__Impl ;
    public final void rule__And__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5716:1: ( rule__And__Group__1__Impl )
            // InternalFortXTrans.g:5717:2: rule__And__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__And__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__And__Group__1"


    // $ANTLR start "rule__And__Group__1__Impl"
    // InternalFortXTrans.g:5723:1: rule__And__Group__1__Impl : ( ( rule__And__Group_1__0 )* ) ;
    public final void rule__And__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5727:1: ( ( ( rule__And__Group_1__0 )* ) )
            // InternalFortXTrans.g:5728:1: ( ( rule__And__Group_1__0 )* )
            {
            // InternalFortXTrans.g:5728:1: ( ( rule__And__Group_1__0 )* )
            // InternalFortXTrans.g:5729:2: ( rule__And__Group_1__0 )*
            {
             before(grammarAccess.getAndAccess().getGroup_1()); 
            // InternalFortXTrans.g:5730:2: ( rule__And__Group_1__0 )*
            loop59:
            do {
                int alt59=2;
                int LA59_0 = input.LA(1);

                if ( (LA59_0==39) ) {
                    alt59=1;
                }


                switch (alt59) {
            	case 1 :
            	    // InternalFortXTrans.g:5730:3: rule__And__Group_1__0
            	    {
            	    pushFollow(FOLLOW_38);
            	    rule__And__Group_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop59;
                }
            } while (true);

             after(grammarAccess.getAndAccess().getGroup_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__And__Group__1__Impl"


    // $ANTLR start "rule__And__Group_1__0"
    // InternalFortXTrans.g:5739:1: rule__And__Group_1__0 : rule__And__Group_1__0__Impl rule__And__Group_1__1 ;
    public final void rule__And__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5743:1: ( rule__And__Group_1__0__Impl rule__And__Group_1__1 )
            // InternalFortXTrans.g:5744:2: rule__And__Group_1__0__Impl rule__And__Group_1__1
            {
            pushFollow(FOLLOW_37);
            rule__And__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__And__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__And__Group_1__0"


    // $ANTLR start "rule__And__Group_1__0__Impl"
    // InternalFortXTrans.g:5751:1: rule__And__Group_1__0__Impl : ( () ) ;
    public final void rule__And__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5755:1: ( ( () ) )
            // InternalFortXTrans.g:5756:1: ( () )
            {
            // InternalFortXTrans.g:5756:1: ( () )
            // InternalFortXTrans.g:5757:2: ()
            {
             before(grammarAccess.getAndAccess().getAndLeftAction_1_0()); 
            // InternalFortXTrans.g:5758:2: ()
            // InternalFortXTrans.g:5758:3: 
            {
            }

             after(grammarAccess.getAndAccess().getAndLeftAction_1_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__And__Group_1__0__Impl"


    // $ANTLR start "rule__And__Group_1__1"
    // InternalFortXTrans.g:5766:1: rule__And__Group_1__1 : rule__And__Group_1__1__Impl rule__And__Group_1__2 ;
    public final void rule__And__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5770:1: ( rule__And__Group_1__1__Impl rule__And__Group_1__2 )
            // InternalFortXTrans.g:5771:2: rule__And__Group_1__1__Impl rule__And__Group_1__2
            {
            pushFollow(FOLLOW_32);
            rule__And__Group_1__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__And__Group_1__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__And__Group_1__1"


    // $ANTLR start "rule__And__Group_1__1__Impl"
    // InternalFortXTrans.g:5778:1: rule__And__Group_1__1__Impl : ( 'AND' ) ;
    public final void rule__And__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5782:1: ( ( 'AND' ) )
            // InternalFortXTrans.g:5783:1: ( 'AND' )
            {
            // InternalFortXTrans.g:5783:1: ( 'AND' )
            // InternalFortXTrans.g:5784:2: 'AND'
            {
             before(grammarAccess.getAndAccess().getANDKeyword_1_1()); 
            match(input,39,FOLLOW_2); 
             after(grammarAccess.getAndAccess().getANDKeyword_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__And__Group_1__1__Impl"


    // $ANTLR start "rule__And__Group_1__2"
    // InternalFortXTrans.g:5793:1: rule__And__Group_1__2 : rule__And__Group_1__2__Impl ;
    public final void rule__And__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5797:1: ( rule__And__Group_1__2__Impl )
            // InternalFortXTrans.g:5798:2: rule__And__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__And__Group_1__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__And__Group_1__2"


    // $ANTLR start "rule__And__Group_1__2__Impl"
    // InternalFortXTrans.g:5804:1: rule__And__Group_1__2__Impl : ( ( rule__And__RightAssignment_1_2 ) ) ;
    public final void rule__And__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5808:1: ( ( ( rule__And__RightAssignment_1_2 ) ) )
            // InternalFortXTrans.g:5809:1: ( ( rule__And__RightAssignment_1_2 ) )
            {
            // InternalFortXTrans.g:5809:1: ( ( rule__And__RightAssignment_1_2 ) )
            // InternalFortXTrans.g:5810:2: ( rule__And__RightAssignment_1_2 )
            {
             before(grammarAccess.getAndAccess().getRightAssignment_1_2()); 
            // InternalFortXTrans.g:5811:2: ( rule__And__RightAssignment_1_2 )
            // InternalFortXTrans.g:5811:3: rule__And__RightAssignment_1_2
            {
            pushFollow(FOLLOW_2);
            rule__And__RightAssignment_1_2();

            state._fsp--;


            }

             after(grammarAccess.getAndAccess().getRightAssignment_1_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__And__Group_1__2__Impl"


    // $ANTLR start "rule__Equality__Group__0"
    // InternalFortXTrans.g:5820:1: rule__Equality__Group__0 : rule__Equality__Group__0__Impl rule__Equality__Group__1 ;
    public final void rule__Equality__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5824:1: ( rule__Equality__Group__0__Impl rule__Equality__Group__1 )
            // InternalFortXTrans.g:5825:2: rule__Equality__Group__0__Impl rule__Equality__Group__1
            {
            pushFollow(FOLLOW_39);
            rule__Equality__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Equality__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equality__Group__0"


    // $ANTLR start "rule__Equality__Group__0__Impl"
    // InternalFortXTrans.g:5832:1: rule__Equality__Group__0__Impl : ( ruleComparison ) ;
    public final void rule__Equality__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5836:1: ( ( ruleComparison ) )
            // InternalFortXTrans.g:5837:1: ( ruleComparison )
            {
            // InternalFortXTrans.g:5837:1: ( ruleComparison )
            // InternalFortXTrans.g:5838:2: ruleComparison
            {
             before(grammarAccess.getEqualityAccess().getComparisonParserRuleCall_0()); 
            pushFollow(FOLLOW_2);
            ruleComparison();

            state._fsp--;

             after(grammarAccess.getEqualityAccess().getComparisonParserRuleCall_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equality__Group__0__Impl"


    // $ANTLR start "rule__Equality__Group__1"
    // InternalFortXTrans.g:5847:1: rule__Equality__Group__1 : rule__Equality__Group__1__Impl ;
    public final void rule__Equality__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5851:1: ( rule__Equality__Group__1__Impl )
            // InternalFortXTrans.g:5852:2: rule__Equality__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Equality__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equality__Group__1"


    // $ANTLR start "rule__Equality__Group__1__Impl"
    // InternalFortXTrans.g:5858:1: rule__Equality__Group__1__Impl : ( ( rule__Equality__Group_1__0 )* ) ;
    public final void rule__Equality__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5862:1: ( ( ( rule__Equality__Group_1__0 )* ) )
            // InternalFortXTrans.g:5863:1: ( ( rule__Equality__Group_1__0 )* )
            {
            // InternalFortXTrans.g:5863:1: ( ( rule__Equality__Group_1__0 )* )
            // InternalFortXTrans.g:5864:2: ( rule__Equality__Group_1__0 )*
            {
             before(grammarAccess.getEqualityAccess().getGroup_1()); 
            // InternalFortXTrans.g:5865:2: ( rule__Equality__Group_1__0 )*
            loop60:
            do {
                int alt60=2;
                switch ( input.LA(1) ) {
                case 13:
                    {
                    alt60=1;
                    }
                    break;
                case 14:
                    {
                    alt60=1;
                    }
                    break;
                case 15:
                    {
                    alt60=1;
                    }
                    break;
                case 16:
                    {
                    alt60=1;
                    }
                    break;

                }

                switch (alt60) {
            	case 1 :
            	    // InternalFortXTrans.g:5865:3: rule__Equality__Group_1__0
            	    {
            	    pushFollow(FOLLOW_40);
            	    rule__Equality__Group_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop60;
                }
            } while (true);

             after(grammarAccess.getEqualityAccess().getGroup_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equality__Group__1__Impl"


    // $ANTLR start "rule__Equality__Group_1__0"
    // InternalFortXTrans.g:5874:1: rule__Equality__Group_1__0 : rule__Equality__Group_1__0__Impl rule__Equality__Group_1__1 ;
    public final void rule__Equality__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5878:1: ( rule__Equality__Group_1__0__Impl rule__Equality__Group_1__1 )
            // InternalFortXTrans.g:5879:2: rule__Equality__Group_1__0__Impl rule__Equality__Group_1__1
            {
            pushFollow(FOLLOW_39);
            rule__Equality__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Equality__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equality__Group_1__0"


    // $ANTLR start "rule__Equality__Group_1__0__Impl"
    // InternalFortXTrans.g:5886:1: rule__Equality__Group_1__0__Impl : ( () ) ;
    public final void rule__Equality__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5890:1: ( ( () ) )
            // InternalFortXTrans.g:5891:1: ( () )
            {
            // InternalFortXTrans.g:5891:1: ( () )
            // InternalFortXTrans.g:5892:2: ()
            {
             before(grammarAccess.getEqualityAccess().getEqualityLeftAction_1_0()); 
            // InternalFortXTrans.g:5893:2: ()
            // InternalFortXTrans.g:5893:3: 
            {
            }

             after(grammarAccess.getEqualityAccess().getEqualityLeftAction_1_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equality__Group_1__0__Impl"


    // $ANTLR start "rule__Equality__Group_1__1"
    // InternalFortXTrans.g:5901:1: rule__Equality__Group_1__1 : rule__Equality__Group_1__1__Impl rule__Equality__Group_1__2 ;
    public final void rule__Equality__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5905:1: ( rule__Equality__Group_1__1__Impl rule__Equality__Group_1__2 )
            // InternalFortXTrans.g:5906:2: rule__Equality__Group_1__1__Impl rule__Equality__Group_1__2
            {
            pushFollow(FOLLOW_32);
            rule__Equality__Group_1__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Equality__Group_1__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equality__Group_1__1"


    // $ANTLR start "rule__Equality__Group_1__1__Impl"
    // InternalFortXTrans.g:5913:1: rule__Equality__Group_1__1__Impl : ( ( rule__Equality__OpAssignment_1_1 ) ) ;
    public final void rule__Equality__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5917:1: ( ( ( rule__Equality__OpAssignment_1_1 ) ) )
            // InternalFortXTrans.g:5918:1: ( ( rule__Equality__OpAssignment_1_1 ) )
            {
            // InternalFortXTrans.g:5918:1: ( ( rule__Equality__OpAssignment_1_1 ) )
            // InternalFortXTrans.g:5919:2: ( rule__Equality__OpAssignment_1_1 )
            {
             before(grammarAccess.getEqualityAccess().getOpAssignment_1_1()); 
            // InternalFortXTrans.g:5920:2: ( rule__Equality__OpAssignment_1_1 )
            // InternalFortXTrans.g:5920:3: rule__Equality__OpAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Equality__OpAssignment_1_1();

            state._fsp--;


            }

             after(grammarAccess.getEqualityAccess().getOpAssignment_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equality__Group_1__1__Impl"


    // $ANTLR start "rule__Equality__Group_1__2"
    // InternalFortXTrans.g:5928:1: rule__Equality__Group_1__2 : rule__Equality__Group_1__2__Impl ;
    public final void rule__Equality__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5932:1: ( rule__Equality__Group_1__2__Impl )
            // InternalFortXTrans.g:5933:2: rule__Equality__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Equality__Group_1__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equality__Group_1__2"


    // $ANTLR start "rule__Equality__Group_1__2__Impl"
    // InternalFortXTrans.g:5939:1: rule__Equality__Group_1__2__Impl : ( ( rule__Equality__RightAssignment_1_2 ) ) ;
    public final void rule__Equality__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5943:1: ( ( ( rule__Equality__RightAssignment_1_2 ) ) )
            // InternalFortXTrans.g:5944:1: ( ( rule__Equality__RightAssignment_1_2 ) )
            {
            // InternalFortXTrans.g:5944:1: ( ( rule__Equality__RightAssignment_1_2 ) )
            // InternalFortXTrans.g:5945:2: ( rule__Equality__RightAssignment_1_2 )
            {
             before(grammarAccess.getEqualityAccess().getRightAssignment_1_2()); 
            // InternalFortXTrans.g:5946:2: ( rule__Equality__RightAssignment_1_2 )
            // InternalFortXTrans.g:5946:3: rule__Equality__RightAssignment_1_2
            {
            pushFollow(FOLLOW_2);
            rule__Equality__RightAssignment_1_2();

            state._fsp--;


            }

             after(grammarAccess.getEqualityAccess().getRightAssignment_1_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equality__Group_1__2__Impl"


    // $ANTLR start "rule__Comparison__Group__0"
    // InternalFortXTrans.g:5955:1: rule__Comparison__Group__0 : rule__Comparison__Group__0__Impl rule__Comparison__Group__1 ;
    public final void rule__Comparison__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5959:1: ( rule__Comparison__Group__0__Impl rule__Comparison__Group__1 )
            // InternalFortXTrans.g:5960:2: rule__Comparison__Group__0__Impl rule__Comparison__Group__1
            {
            pushFollow(FOLLOW_41);
            rule__Comparison__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Comparison__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Group__0"


    // $ANTLR start "rule__Comparison__Group__0__Impl"
    // InternalFortXTrans.g:5967:1: rule__Comparison__Group__0__Impl : ( ruleAddExpr ) ;
    public final void rule__Comparison__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5971:1: ( ( ruleAddExpr ) )
            // InternalFortXTrans.g:5972:1: ( ruleAddExpr )
            {
            // InternalFortXTrans.g:5972:1: ( ruleAddExpr )
            // InternalFortXTrans.g:5973:2: ruleAddExpr
            {
             before(grammarAccess.getComparisonAccess().getAddExprParserRuleCall_0()); 
            pushFollow(FOLLOW_2);
            ruleAddExpr();

            state._fsp--;

             after(grammarAccess.getComparisonAccess().getAddExprParserRuleCall_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Group__0__Impl"


    // $ANTLR start "rule__Comparison__Group__1"
    // InternalFortXTrans.g:5982:1: rule__Comparison__Group__1 : rule__Comparison__Group__1__Impl ;
    public final void rule__Comparison__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5986:1: ( rule__Comparison__Group__1__Impl )
            // InternalFortXTrans.g:5987:2: rule__Comparison__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Comparison__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Group__1"


    // $ANTLR start "rule__Comparison__Group__1__Impl"
    // InternalFortXTrans.g:5993:1: rule__Comparison__Group__1__Impl : ( ( rule__Comparison__Group_1__0 )* ) ;
    public final void rule__Comparison__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5997:1: ( ( ( rule__Comparison__Group_1__0 )* ) )
            // InternalFortXTrans.g:5998:1: ( ( rule__Comparison__Group_1__0 )* )
            {
            // InternalFortXTrans.g:5998:1: ( ( rule__Comparison__Group_1__0 )* )
            // InternalFortXTrans.g:5999:2: ( rule__Comparison__Group_1__0 )*
            {
             before(grammarAccess.getComparisonAccess().getGroup_1()); 
            // InternalFortXTrans.g:6000:2: ( rule__Comparison__Group_1__0 )*
            loop61:
            do {
                int alt61=2;
                alt61 = dfa61.predict(input);
                switch (alt61) {
            	case 1 :
            	    // InternalFortXTrans.g:6000:3: rule__Comparison__Group_1__0
            	    {
            	    pushFollow(FOLLOW_42);
            	    rule__Comparison__Group_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop61;
                }
            } while (true);

             after(grammarAccess.getComparisonAccess().getGroup_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Group__1__Impl"


    // $ANTLR start "rule__Comparison__Group_1__0"
    // InternalFortXTrans.g:6009:1: rule__Comparison__Group_1__0 : rule__Comparison__Group_1__0__Impl rule__Comparison__Group_1__1 ;
    public final void rule__Comparison__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6013:1: ( rule__Comparison__Group_1__0__Impl rule__Comparison__Group_1__1 )
            // InternalFortXTrans.g:6014:2: rule__Comparison__Group_1__0__Impl rule__Comparison__Group_1__1
            {
            pushFollow(FOLLOW_41);
            rule__Comparison__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Comparison__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Group_1__0"


    // $ANTLR start "rule__Comparison__Group_1__0__Impl"
    // InternalFortXTrans.g:6021:1: rule__Comparison__Group_1__0__Impl : ( () ) ;
    public final void rule__Comparison__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6025:1: ( ( () ) )
            // InternalFortXTrans.g:6026:1: ( () )
            {
            // InternalFortXTrans.g:6026:1: ( () )
            // InternalFortXTrans.g:6027:2: ()
            {
             before(grammarAccess.getComparisonAccess().getComparisonLeftAction_1_0()); 
            // InternalFortXTrans.g:6028:2: ()
            // InternalFortXTrans.g:6028:3: 
            {
            }

             after(grammarAccess.getComparisonAccess().getComparisonLeftAction_1_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Group_1__0__Impl"


    // $ANTLR start "rule__Comparison__Group_1__1"
    // InternalFortXTrans.g:6036:1: rule__Comparison__Group_1__1 : rule__Comparison__Group_1__1__Impl rule__Comparison__Group_1__2 ;
    public final void rule__Comparison__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6040:1: ( rule__Comparison__Group_1__1__Impl rule__Comparison__Group_1__2 )
            // InternalFortXTrans.g:6041:2: rule__Comparison__Group_1__1__Impl rule__Comparison__Group_1__2
            {
            pushFollow(FOLLOW_32);
            rule__Comparison__Group_1__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Comparison__Group_1__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Group_1__1"


    // $ANTLR start "rule__Comparison__Group_1__1__Impl"
    // InternalFortXTrans.g:6048:1: rule__Comparison__Group_1__1__Impl : ( ( rule__Comparison__OpAssignment_1_1 ) ) ;
    public final void rule__Comparison__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6052:1: ( ( ( rule__Comparison__OpAssignment_1_1 ) ) )
            // InternalFortXTrans.g:6053:1: ( ( rule__Comparison__OpAssignment_1_1 ) )
            {
            // InternalFortXTrans.g:6053:1: ( ( rule__Comparison__OpAssignment_1_1 ) )
            // InternalFortXTrans.g:6054:2: ( rule__Comparison__OpAssignment_1_1 )
            {
             before(grammarAccess.getComparisonAccess().getOpAssignment_1_1()); 
            // InternalFortXTrans.g:6055:2: ( rule__Comparison__OpAssignment_1_1 )
            // InternalFortXTrans.g:6055:3: rule__Comparison__OpAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Comparison__OpAssignment_1_1();

            state._fsp--;


            }

             after(grammarAccess.getComparisonAccess().getOpAssignment_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Group_1__1__Impl"


    // $ANTLR start "rule__Comparison__Group_1__2"
    // InternalFortXTrans.g:6063:1: rule__Comparison__Group_1__2 : rule__Comparison__Group_1__2__Impl ;
    public final void rule__Comparison__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6067:1: ( rule__Comparison__Group_1__2__Impl )
            // InternalFortXTrans.g:6068:2: rule__Comparison__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Comparison__Group_1__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Group_1__2"


    // $ANTLR start "rule__Comparison__Group_1__2__Impl"
    // InternalFortXTrans.g:6074:1: rule__Comparison__Group_1__2__Impl : ( ( rule__Comparison__RightAssignment_1_2 ) ) ;
    public final void rule__Comparison__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6078:1: ( ( ( rule__Comparison__RightAssignment_1_2 ) ) )
            // InternalFortXTrans.g:6079:1: ( ( rule__Comparison__RightAssignment_1_2 ) )
            {
            // InternalFortXTrans.g:6079:1: ( ( rule__Comparison__RightAssignment_1_2 ) )
            // InternalFortXTrans.g:6080:2: ( rule__Comparison__RightAssignment_1_2 )
            {
             before(grammarAccess.getComparisonAccess().getRightAssignment_1_2()); 
            // InternalFortXTrans.g:6081:2: ( rule__Comparison__RightAssignment_1_2 )
            // InternalFortXTrans.g:6081:3: rule__Comparison__RightAssignment_1_2
            {
            pushFollow(FOLLOW_2);
            rule__Comparison__RightAssignment_1_2();

            state._fsp--;


            }

             after(grammarAccess.getComparisonAccess().getRightAssignment_1_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Group_1__2__Impl"


    // $ANTLR start "rule__AddExpr__Group__0"
    // InternalFortXTrans.g:6090:1: rule__AddExpr__Group__0 : rule__AddExpr__Group__0__Impl rule__AddExpr__Group__1 ;
    public final void rule__AddExpr__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6094:1: ( rule__AddExpr__Group__0__Impl rule__AddExpr__Group__1 )
            // InternalFortXTrans.g:6095:2: rule__AddExpr__Group__0__Impl rule__AddExpr__Group__1
            {
            pushFollow(FOLLOW_43);
            rule__AddExpr__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__AddExpr__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AddExpr__Group__0"


    // $ANTLR start "rule__AddExpr__Group__0__Impl"
    // InternalFortXTrans.g:6102:1: rule__AddExpr__Group__0__Impl : ( ruleSubExpr ) ;
    public final void rule__AddExpr__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6106:1: ( ( ruleSubExpr ) )
            // InternalFortXTrans.g:6107:1: ( ruleSubExpr )
            {
            // InternalFortXTrans.g:6107:1: ( ruleSubExpr )
            // InternalFortXTrans.g:6108:2: ruleSubExpr
            {
             before(grammarAccess.getAddExprAccess().getSubExprParserRuleCall_0()); 
            pushFollow(FOLLOW_2);
            ruleSubExpr();

            state._fsp--;

             after(grammarAccess.getAddExprAccess().getSubExprParserRuleCall_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AddExpr__Group__0__Impl"


    // $ANTLR start "rule__AddExpr__Group__1"
    // InternalFortXTrans.g:6117:1: rule__AddExpr__Group__1 : rule__AddExpr__Group__1__Impl ;
    public final void rule__AddExpr__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6121:1: ( rule__AddExpr__Group__1__Impl )
            // InternalFortXTrans.g:6122:2: rule__AddExpr__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AddExpr__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AddExpr__Group__1"


    // $ANTLR start "rule__AddExpr__Group__1__Impl"
    // InternalFortXTrans.g:6128:1: rule__AddExpr__Group__1__Impl : ( ( rule__AddExpr__Group_1__0 )* ) ;
    public final void rule__AddExpr__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6132:1: ( ( ( rule__AddExpr__Group_1__0 )* ) )
            // InternalFortXTrans.g:6133:1: ( ( rule__AddExpr__Group_1__0 )* )
            {
            // InternalFortXTrans.g:6133:1: ( ( rule__AddExpr__Group_1__0 )* )
            // InternalFortXTrans.g:6134:2: ( rule__AddExpr__Group_1__0 )*
            {
             before(grammarAccess.getAddExprAccess().getGroup_1()); 
            // InternalFortXTrans.g:6135:2: ( rule__AddExpr__Group_1__0 )*
            loop62:
            do {
                int alt62=2;
                int LA62_0 = input.LA(1);

                if ( (LA62_0==40) ) {
                    alt62=1;
                }


                switch (alt62) {
            	case 1 :
            	    // InternalFortXTrans.g:6135:3: rule__AddExpr__Group_1__0
            	    {
            	    pushFollow(FOLLOW_44);
            	    rule__AddExpr__Group_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop62;
                }
            } while (true);

             after(grammarAccess.getAddExprAccess().getGroup_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AddExpr__Group__1__Impl"


    // $ANTLR start "rule__AddExpr__Group_1__0"
    // InternalFortXTrans.g:6144:1: rule__AddExpr__Group_1__0 : rule__AddExpr__Group_1__0__Impl rule__AddExpr__Group_1__1 ;
    public final void rule__AddExpr__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6148:1: ( rule__AddExpr__Group_1__0__Impl rule__AddExpr__Group_1__1 )
            // InternalFortXTrans.g:6149:2: rule__AddExpr__Group_1__0__Impl rule__AddExpr__Group_1__1
            {
            pushFollow(FOLLOW_43);
            rule__AddExpr__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__AddExpr__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AddExpr__Group_1__0"


    // $ANTLR start "rule__AddExpr__Group_1__0__Impl"
    // InternalFortXTrans.g:6156:1: rule__AddExpr__Group_1__0__Impl : ( () ) ;
    public final void rule__AddExpr__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6160:1: ( ( () ) )
            // InternalFortXTrans.g:6161:1: ( () )
            {
            // InternalFortXTrans.g:6161:1: ( () )
            // InternalFortXTrans.g:6162:2: ()
            {
             before(grammarAccess.getAddExprAccess().getAddExprLeftAction_1_0()); 
            // InternalFortXTrans.g:6163:2: ()
            // InternalFortXTrans.g:6163:3: 
            {
            }

             after(grammarAccess.getAddExprAccess().getAddExprLeftAction_1_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AddExpr__Group_1__0__Impl"


    // $ANTLR start "rule__AddExpr__Group_1__1"
    // InternalFortXTrans.g:6171:1: rule__AddExpr__Group_1__1 : rule__AddExpr__Group_1__1__Impl rule__AddExpr__Group_1__2 ;
    public final void rule__AddExpr__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6175:1: ( rule__AddExpr__Group_1__1__Impl rule__AddExpr__Group_1__2 )
            // InternalFortXTrans.g:6176:2: rule__AddExpr__Group_1__1__Impl rule__AddExpr__Group_1__2
            {
            pushFollow(FOLLOW_32);
            rule__AddExpr__Group_1__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__AddExpr__Group_1__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AddExpr__Group_1__1"


    // $ANTLR start "rule__AddExpr__Group_1__1__Impl"
    // InternalFortXTrans.g:6183:1: rule__AddExpr__Group_1__1__Impl : ( '+' ) ;
    public final void rule__AddExpr__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6187:1: ( ( '+' ) )
            // InternalFortXTrans.g:6188:1: ( '+' )
            {
            // InternalFortXTrans.g:6188:1: ( '+' )
            // InternalFortXTrans.g:6189:2: '+'
            {
             before(grammarAccess.getAddExprAccess().getPlusSignKeyword_1_1()); 
            match(input,40,FOLLOW_2); 
             after(grammarAccess.getAddExprAccess().getPlusSignKeyword_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AddExpr__Group_1__1__Impl"


    // $ANTLR start "rule__AddExpr__Group_1__2"
    // InternalFortXTrans.g:6198:1: rule__AddExpr__Group_1__2 : rule__AddExpr__Group_1__2__Impl ;
    public final void rule__AddExpr__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6202:1: ( rule__AddExpr__Group_1__2__Impl )
            // InternalFortXTrans.g:6203:2: rule__AddExpr__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AddExpr__Group_1__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AddExpr__Group_1__2"


    // $ANTLR start "rule__AddExpr__Group_1__2__Impl"
    // InternalFortXTrans.g:6209:1: rule__AddExpr__Group_1__2__Impl : ( ( rule__AddExpr__RightAssignment_1_2 ) ) ;
    public final void rule__AddExpr__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6213:1: ( ( ( rule__AddExpr__RightAssignment_1_2 ) ) )
            // InternalFortXTrans.g:6214:1: ( ( rule__AddExpr__RightAssignment_1_2 ) )
            {
            // InternalFortXTrans.g:6214:1: ( ( rule__AddExpr__RightAssignment_1_2 ) )
            // InternalFortXTrans.g:6215:2: ( rule__AddExpr__RightAssignment_1_2 )
            {
             before(grammarAccess.getAddExprAccess().getRightAssignment_1_2()); 
            // InternalFortXTrans.g:6216:2: ( rule__AddExpr__RightAssignment_1_2 )
            // InternalFortXTrans.g:6216:3: rule__AddExpr__RightAssignment_1_2
            {
            pushFollow(FOLLOW_2);
            rule__AddExpr__RightAssignment_1_2();

            state._fsp--;


            }

             after(grammarAccess.getAddExprAccess().getRightAssignment_1_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AddExpr__Group_1__2__Impl"


    // $ANTLR start "rule__SubExpr__Group__0"
    // InternalFortXTrans.g:6225:1: rule__SubExpr__Group__0 : rule__SubExpr__Group__0__Impl rule__SubExpr__Group__1 ;
    public final void rule__SubExpr__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6229:1: ( rule__SubExpr__Group__0__Impl rule__SubExpr__Group__1 )
            // InternalFortXTrans.g:6230:2: rule__SubExpr__Group__0__Impl rule__SubExpr__Group__1
            {
            pushFollow(FOLLOW_45);
            rule__SubExpr__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__SubExpr__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubExpr__Group__0"


    // $ANTLR start "rule__SubExpr__Group__0__Impl"
    // InternalFortXTrans.g:6237:1: rule__SubExpr__Group__0__Impl : ( ruleDivExpr ) ;
    public final void rule__SubExpr__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6241:1: ( ( ruleDivExpr ) )
            // InternalFortXTrans.g:6242:1: ( ruleDivExpr )
            {
            // InternalFortXTrans.g:6242:1: ( ruleDivExpr )
            // InternalFortXTrans.g:6243:2: ruleDivExpr
            {
             before(grammarAccess.getSubExprAccess().getDivExprParserRuleCall_0()); 
            pushFollow(FOLLOW_2);
            ruleDivExpr();

            state._fsp--;

             after(grammarAccess.getSubExprAccess().getDivExprParserRuleCall_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubExpr__Group__0__Impl"


    // $ANTLR start "rule__SubExpr__Group__1"
    // InternalFortXTrans.g:6252:1: rule__SubExpr__Group__1 : rule__SubExpr__Group__1__Impl ;
    public final void rule__SubExpr__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6256:1: ( rule__SubExpr__Group__1__Impl )
            // InternalFortXTrans.g:6257:2: rule__SubExpr__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__SubExpr__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubExpr__Group__1"


    // $ANTLR start "rule__SubExpr__Group__1__Impl"
    // InternalFortXTrans.g:6263:1: rule__SubExpr__Group__1__Impl : ( ( rule__SubExpr__Group_1__0 )* ) ;
    public final void rule__SubExpr__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6267:1: ( ( ( rule__SubExpr__Group_1__0 )* ) )
            // InternalFortXTrans.g:6268:1: ( ( rule__SubExpr__Group_1__0 )* )
            {
            // InternalFortXTrans.g:6268:1: ( ( rule__SubExpr__Group_1__0 )* )
            // InternalFortXTrans.g:6269:2: ( rule__SubExpr__Group_1__0 )*
            {
             before(grammarAccess.getSubExprAccess().getGroup_1()); 
            // InternalFortXTrans.g:6270:2: ( rule__SubExpr__Group_1__0 )*
            loop63:
            do {
                int alt63=2;
                int LA63_0 = input.LA(1);

                if ( (LA63_0==41) ) {
                    alt63=1;
                }


                switch (alt63) {
            	case 1 :
            	    // InternalFortXTrans.g:6270:3: rule__SubExpr__Group_1__0
            	    {
            	    pushFollow(FOLLOW_46);
            	    rule__SubExpr__Group_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop63;
                }
            } while (true);

             after(grammarAccess.getSubExprAccess().getGroup_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubExpr__Group__1__Impl"


    // $ANTLR start "rule__SubExpr__Group_1__0"
    // InternalFortXTrans.g:6279:1: rule__SubExpr__Group_1__0 : rule__SubExpr__Group_1__0__Impl rule__SubExpr__Group_1__1 ;
    public final void rule__SubExpr__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6283:1: ( rule__SubExpr__Group_1__0__Impl rule__SubExpr__Group_1__1 )
            // InternalFortXTrans.g:6284:2: rule__SubExpr__Group_1__0__Impl rule__SubExpr__Group_1__1
            {
            pushFollow(FOLLOW_45);
            rule__SubExpr__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__SubExpr__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubExpr__Group_1__0"


    // $ANTLR start "rule__SubExpr__Group_1__0__Impl"
    // InternalFortXTrans.g:6291:1: rule__SubExpr__Group_1__0__Impl : ( () ) ;
    public final void rule__SubExpr__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6295:1: ( ( () ) )
            // InternalFortXTrans.g:6296:1: ( () )
            {
            // InternalFortXTrans.g:6296:1: ( () )
            // InternalFortXTrans.g:6297:2: ()
            {
             before(grammarAccess.getSubExprAccess().getSubExprLeftAction_1_0()); 
            // InternalFortXTrans.g:6298:2: ()
            // InternalFortXTrans.g:6298:3: 
            {
            }

             after(grammarAccess.getSubExprAccess().getSubExprLeftAction_1_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubExpr__Group_1__0__Impl"


    // $ANTLR start "rule__SubExpr__Group_1__1"
    // InternalFortXTrans.g:6306:1: rule__SubExpr__Group_1__1 : rule__SubExpr__Group_1__1__Impl rule__SubExpr__Group_1__2 ;
    public final void rule__SubExpr__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6310:1: ( rule__SubExpr__Group_1__1__Impl rule__SubExpr__Group_1__2 )
            // InternalFortXTrans.g:6311:2: rule__SubExpr__Group_1__1__Impl rule__SubExpr__Group_1__2
            {
            pushFollow(FOLLOW_32);
            rule__SubExpr__Group_1__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__SubExpr__Group_1__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubExpr__Group_1__1"


    // $ANTLR start "rule__SubExpr__Group_1__1__Impl"
    // InternalFortXTrans.g:6318:1: rule__SubExpr__Group_1__1__Impl : ( '-' ) ;
    public final void rule__SubExpr__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6322:1: ( ( '-' ) )
            // InternalFortXTrans.g:6323:1: ( '-' )
            {
            // InternalFortXTrans.g:6323:1: ( '-' )
            // InternalFortXTrans.g:6324:2: '-'
            {
             before(grammarAccess.getSubExprAccess().getHyphenMinusKeyword_1_1()); 
            match(input,41,FOLLOW_2); 
             after(grammarAccess.getSubExprAccess().getHyphenMinusKeyword_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubExpr__Group_1__1__Impl"


    // $ANTLR start "rule__SubExpr__Group_1__2"
    // InternalFortXTrans.g:6333:1: rule__SubExpr__Group_1__2 : rule__SubExpr__Group_1__2__Impl ;
    public final void rule__SubExpr__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6337:1: ( rule__SubExpr__Group_1__2__Impl )
            // InternalFortXTrans.g:6338:2: rule__SubExpr__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__SubExpr__Group_1__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubExpr__Group_1__2"


    // $ANTLR start "rule__SubExpr__Group_1__2__Impl"
    // InternalFortXTrans.g:6344:1: rule__SubExpr__Group_1__2__Impl : ( ( rule__SubExpr__RightAssignment_1_2 ) ) ;
    public final void rule__SubExpr__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6348:1: ( ( ( rule__SubExpr__RightAssignment_1_2 ) ) )
            // InternalFortXTrans.g:6349:1: ( ( rule__SubExpr__RightAssignment_1_2 ) )
            {
            // InternalFortXTrans.g:6349:1: ( ( rule__SubExpr__RightAssignment_1_2 ) )
            // InternalFortXTrans.g:6350:2: ( rule__SubExpr__RightAssignment_1_2 )
            {
             before(grammarAccess.getSubExprAccess().getRightAssignment_1_2()); 
            // InternalFortXTrans.g:6351:2: ( rule__SubExpr__RightAssignment_1_2 )
            // InternalFortXTrans.g:6351:3: rule__SubExpr__RightAssignment_1_2
            {
            pushFollow(FOLLOW_2);
            rule__SubExpr__RightAssignment_1_2();

            state._fsp--;


            }

             after(grammarAccess.getSubExprAccess().getRightAssignment_1_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubExpr__Group_1__2__Impl"


    // $ANTLR start "rule__DivExpr__Group__0"
    // InternalFortXTrans.g:6360:1: rule__DivExpr__Group__0 : rule__DivExpr__Group__0__Impl rule__DivExpr__Group__1 ;
    public final void rule__DivExpr__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6364:1: ( rule__DivExpr__Group__0__Impl rule__DivExpr__Group__1 )
            // InternalFortXTrans.g:6365:2: rule__DivExpr__Group__0__Impl rule__DivExpr__Group__1
            {
            pushFollow(FOLLOW_47);
            rule__DivExpr__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DivExpr__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DivExpr__Group__0"


    // $ANTLR start "rule__DivExpr__Group__0__Impl"
    // InternalFortXTrans.g:6372:1: rule__DivExpr__Group__0__Impl : ( ruleMultExpr ) ;
    public final void rule__DivExpr__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6376:1: ( ( ruleMultExpr ) )
            // InternalFortXTrans.g:6377:1: ( ruleMultExpr )
            {
            // InternalFortXTrans.g:6377:1: ( ruleMultExpr )
            // InternalFortXTrans.g:6378:2: ruleMultExpr
            {
             before(grammarAccess.getDivExprAccess().getMultExprParserRuleCall_0()); 
            pushFollow(FOLLOW_2);
            ruleMultExpr();

            state._fsp--;

             after(grammarAccess.getDivExprAccess().getMultExprParserRuleCall_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DivExpr__Group__0__Impl"


    // $ANTLR start "rule__DivExpr__Group__1"
    // InternalFortXTrans.g:6387:1: rule__DivExpr__Group__1 : rule__DivExpr__Group__1__Impl ;
    public final void rule__DivExpr__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6391:1: ( rule__DivExpr__Group__1__Impl )
            // InternalFortXTrans.g:6392:2: rule__DivExpr__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__DivExpr__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DivExpr__Group__1"


    // $ANTLR start "rule__DivExpr__Group__1__Impl"
    // InternalFortXTrans.g:6398:1: rule__DivExpr__Group__1__Impl : ( ( rule__DivExpr__Group_1__0 )* ) ;
    public final void rule__DivExpr__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6402:1: ( ( ( rule__DivExpr__Group_1__0 )* ) )
            // InternalFortXTrans.g:6403:1: ( ( rule__DivExpr__Group_1__0 )* )
            {
            // InternalFortXTrans.g:6403:1: ( ( rule__DivExpr__Group_1__0 )* )
            // InternalFortXTrans.g:6404:2: ( rule__DivExpr__Group_1__0 )*
            {
             before(grammarAccess.getDivExprAccess().getGroup_1()); 
            // InternalFortXTrans.g:6405:2: ( rule__DivExpr__Group_1__0 )*
            loop64:
            do {
                int alt64=2;
                int LA64_0 = input.LA(1);

                if ( (LA64_0==42) ) {
                    alt64=1;
                }


                switch (alt64) {
            	case 1 :
            	    // InternalFortXTrans.g:6405:3: rule__DivExpr__Group_1__0
            	    {
            	    pushFollow(FOLLOW_48);
            	    rule__DivExpr__Group_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop64;
                }
            } while (true);

             after(grammarAccess.getDivExprAccess().getGroup_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DivExpr__Group__1__Impl"


    // $ANTLR start "rule__DivExpr__Group_1__0"
    // InternalFortXTrans.g:6414:1: rule__DivExpr__Group_1__0 : rule__DivExpr__Group_1__0__Impl rule__DivExpr__Group_1__1 ;
    public final void rule__DivExpr__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6418:1: ( rule__DivExpr__Group_1__0__Impl rule__DivExpr__Group_1__1 )
            // InternalFortXTrans.g:6419:2: rule__DivExpr__Group_1__0__Impl rule__DivExpr__Group_1__1
            {
            pushFollow(FOLLOW_47);
            rule__DivExpr__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DivExpr__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DivExpr__Group_1__0"


    // $ANTLR start "rule__DivExpr__Group_1__0__Impl"
    // InternalFortXTrans.g:6426:1: rule__DivExpr__Group_1__0__Impl : ( () ) ;
    public final void rule__DivExpr__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6430:1: ( ( () ) )
            // InternalFortXTrans.g:6431:1: ( () )
            {
            // InternalFortXTrans.g:6431:1: ( () )
            // InternalFortXTrans.g:6432:2: ()
            {
             before(grammarAccess.getDivExprAccess().getDivExprLeftAction_1_0()); 
            // InternalFortXTrans.g:6433:2: ()
            // InternalFortXTrans.g:6433:3: 
            {
            }

             after(grammarAccess.getDivExprAccess().getDivExprLeftAction_1_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DivExpr__Group_1__0__Impl"


    // $ANTLR start "rule__DivExpr__Group_1__1"
    // InternalFortXTrans.g:6441:1: rule__DivExpr__Group_1__1 : rule__DivExpr__Group_1__1__Impl rule__DivExpr__Group_1__2 ;
    public final void rule__DivExpr__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6445:1: ( rule__DivExpr__Group_1__1__Impl rule__DivExpr__Group_1__2 )
            // InternalFortXTrans.g:6446:2: rule__DivExpr__Group_1__1__Impl rule__DivExpr__Group_1__2
            {
            pushFollow(FOLLOW_32);
            rule__DivExpr__Group_1__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DivExpr__Group_1__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DivExpr__Group_1__1"


    // $ANTLR start "rule__DivExpr__Group_1__1__Impl"
    // InternalFortXTrans.g:6453:1: rule__DivExpr__Group_1__1__Impl : ( '/' ) ;
    public final void rule__DivExpr__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6457:1: ( ( '/' ) )
            // InternalFortXTrans.g:6458:1: ( '/' )
            {
            // InternalFortXTrans.g:6458:1: ( '/' )
            // InternalFortXTrans.g:6459:2: '/'
            {
             before(grammarAccess.getDivExprAccess().getSolidusKeyword_1_1()); 
            match(input,42,FOLLOW_2); 
             after(grammarAccess.getDivExprAccess().getSolidusKeyword_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DivExpr__Group_1__1__Impl"


    // $ANTLR start "rule__DivExpr__Group_1__2"
    // InternalFortXTrans.g:6468:1: rule__DivExpr__Group_1__2 : rule__DivExpr__Group_1__2__Impl ;
    public final void rule__DivExpr__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6472:1: ( rule__DivExpr__Group_1__2__Impl )
            // InternalFortXTrans.g:6473:2: rule__DivExpr__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__DivExpr__Group_1__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DivExpr__Group_1__2"


    // $ANTLR start "rule__DivExpr__Group_1__2__Impl"
    // InternalFortXTrans.g:6479:1: rule__DivExpr__Group_1__2__Impl : ( ( rule__DivExpr__RightAssignment_1_2 ) ) ;
    public final void rule__DivExpr__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6483:1: ( ( ( rule__DivExpr__RightAssignment_1_2 ) ) )
            // InternalFortXTrans.g:6484:1: ( ( rule__DivExpr__RightAssignment_1_2 ) )
            {
            // InternalFortXTrans.g:6484:1: ( ( rule__DivExpr__RightAssignment_1_2 ) )
            // InternalFortXTrans.g:6485:2: ( rule__DivExpr__RightAssignment_1_2 )
            {
             before(grammarAccess.getDivExprAccess().getRightAssignment_1_2()); 
            // InternalFortXTrans.g:6486:2: ( rule__DivExpr__RightAssignment_1_2 )
            // InternalFortXTrans.g:6486:3: rule__DivExpr__RightAssignment_1_2
            {
            pushFollow(FOLLOW_2);
            rule__DivExpr__RightAssignment_1_2();

            state._fsp--;


            }

             after(grammarAccess.getDivExprAccess().getRightAssignment_1_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DivExpr__Group_1__2__Impl"


    // $ANTLR start "rule__MultExpr__Group__0"
    // InternalFortXTrans.g:6495:1: rule__MultExpr__Group__0 : rule__MultExpr__Group__0__Impl rule__MultExpr__Group__1 ;
    public final void rule__MultExpr__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6499:1: ( rule__MultExpr__Group__0__Impl rule__MultExpr__Group__1 )
            // InternalFortXTrans.g:6500:2: rule__MultExpr__Group__0__Impl rule__MultExpr__Group__1
            {
            pushFollow(FOLLOW_49);
            rule__MultExpr__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__MultExpr__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultExpr__Group__0"


    // $ANTLR start "rule__MultExpr__Group__0__Impl"
    // InternalFortXTrans.g:6507:1: rule__MultExpr__Group__0__Impl : ( ruleExponentExpr ) ;
    public final void rule__MultExpr__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6511:1: ( ( ruleExponentExpr ) )
            // InternalFortXTrans.g:6512:1: ( ruleExponentExpr )
            {
            // InternalFortXTrans.g:6512:1: ( ruleExponentExpr )
            // InternalFortXTrans.g:6513:2: ruleExponentExpr
            {
             before(grammarAccess.getMultExprAccess().getExponentExprParserRuleCall_0()); 
            pushFollow(FOLLOW_2);
            ruleExponentExpr();

            state._fsp--;

             after(grammarAccess.getMultExprAccess().getExponentExprParserRuleCall_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultExpr__Group__0__Impl"


    // $ANTLR start "rule__MultExpr__Group__1"
    // InternalFortXTrans.g:6522:1: rule__MultExpr__Group__1 : rule__MultExpr__Group__1__Impl ;
    public final void rule__MultExpr__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6526:1: ( rule__MultExpr__Group__1__Impl )
            // InternalFortXTrans.g:6527:2: rule__MultExpr__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__MultExpr__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultExpr__Group__1"


    // $ANTLR start "rule__MultExpr__Group__1__Impl"
    // InternalFortXTrans.g:6533:1: rule__MultExpr__Group__1__Impl : ( ( rule__MultExpr__Group_1__0 )* ) ;
    public final void rule__MultExpr__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6537:1: ( ( ( rule__MultExpr__Group_1__0 )* ) )
            // InternalFortXTrans.g:6538:1: ( ( rule__MultExpr__Group_1__0 )* )
            {
            // InternalFortXTrans.g:6538:1: ( ( rule__MultExpr__Group_1__0 )* )
            // InternalFortXTrans.g:6539:2: ( rule__MultExpr__Group_1__0 )*
            {
             before(grammarAccess.getMultExprAccess().getGroup_1()); 
            // InternalFortXTrans.g:6540:2: ( rule__MultExpr__Group_1__0 )*
            loop65:
            do {
                int alt65=2;
                int LA65_0 = input.LA(1);

                if ( (LA65_0==43) ) {
                    alt65=1;
                }


                switch (alt65) {
            	case 1 :
            	    // InternalFortXTrans.g:6540:3: rule__MultExpr__Group_1__0
            	    {
            	    pushFollow(FOLLOW_50);
            	    rule__MultExpr__Group_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop65;
                }
            } while (true);

             after(grammarAccess.getMultExprAccess().getGroup_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultExpr__Group__1__Impl"


    // $ANTLR start "rule__MultExpr__Group_1__0"
    // InternalFortXTrans.g:6549:1: rule__MultExpr__Group_1__0 : rule__MultExpr__Group_1__0__Impl rule__MultExpr__Group_1__1 ;
    public final void rule__MultExpr__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6553:1: ( rule__MultExpr__Group_1__0__Impl rule__MultExpr__Group_1__1 )
            // InternalFortXTrans.g:6554:2: rule__MultExpr__Group_1__0__Impl rule__MultExpr__Group_1__1
            {
            pushFollow(FOLLOW_49);
            rule__MultExpr__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__MultExpr__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultExpr__Group_1__0"


    // $ANTLR start "rule__MultExpr__Group_1__0__Impl"
    // InternalFortXTrans.g:6561:1: rule__MultExpr__Group_1__0__Impl : ( () ) ;
    public final void rule__MultExpr__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6565:1: ( ( () ) )
            // InternalFortXTrans.g:6566:1: ( () )
            {
            // InternalFortXTrans.g:6566:1: ( () )
            // InternalFortXTrans.g:6567:2: ()
            {
             before(grammarAccess.getMultExprAccess().getMultExprLeftAction_1_0()); 
            // InternalFortXTrans.g:6568:2: ()
            // InternalFortXTrans.g:6568:3: 
            {
            }

             after(grammarAccess.getMultExprAccess().getMultExprLeftAction_1_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultExpr__Group_1__0__Impl"


    // $ANTLR start "rule__MultExpr__Group_1__1"
    // InternalFortXTrans.g:6576:1: rule__MultExpr__Group_1__1 : rule__MultExpr__Group_1__1__Impl rule__MultExpr__Group_1__2 ;
    public final void rule__MultExpr__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6580:1: ( rule__MultExpr__Group_1__1__Impl rule__MultExpr__Group_1__2 )
            // InternalFortXTrans.g:6581:2: rule__MultExpr__Group_1__1__Impl rule__MultExpr__Group_1__2
            {
            pushFollow(FOLLOW_32);
            rule__MultExpr__Group_1__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__MultExpr__Group_1__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultExpr__Group_1__1"


    // $ANTLR start "rule__MultExpr__Group_1__1__Impl"
    // InternalFortXTrans.g:6588:1: rule__MultExpr__Group_1__1__Impl : ( '*' ) ;
    public final void rule__MultExpr__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6592:1: ( ( '*' ) )
            // InternalFortXTrans.g:6593:1: ( '*' )
            {
            // InternalFortXTrans.g:6593:1: ( '*' )
            // InternalFortXTrans.g:6594:2: '*'
            {
             before(grammarAccess.getMultExprAccess().getAsteriskKeyword_1_1()); 
            match(input,43,FOLLOW_2); 
             after(grammarAccess.getMultExprAccess().getAsteriskKeyword_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultExpr__Group_1__1__Impl"


    // $ANTLR start "rule__MultExpr__Group_1__2"
    // InternalFortXTrans.g:6603:1: rule__MultExpr__Group_1__2 : rule__MultExpr__Group_1__2__Impl ;
    public final void rule__MultExpr__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6607:1: ( rule__MultExpr__Group_1__2__Impl )
            // InternalFortXTrans.g:6608:2: rule__MultExpr__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__MultExpr__Group_1__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultExpr__Group_1__2"


    // $ANTLR start "rule__MultExpr__Group_1__2__Impl"
    // InternalFortXTrans.g:6614:1: rule__MultExpr__Group_1__2__Impl : ( ( rule__MultExpr__RightAssignment_1_2 ) ) ;
    public final void rule__MultExpr__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6618:1: ( ( ( rule__MultExpr__RightAssignment_1_2 ) ) )
            // InternalFortXTrans.g:6619:1: ( ( rule__MultExpr__RightAssignment_1_2 ) )
            {
            // InternalFortXTrans.g:6619:1: ( ( rule__MultExpr__RightAssignment_1_2 ) )
            // InternalFortXTrans.g:6620:2: ( rule__MultExpr__RightAssignment_1_2 )
            {
             before(grammarAccess.getMultExprAccess().getRightAssignment_1_2()); 
            // InternalFortXTrans.g:6621:2: ( rule__MultExpr__RightAssignment_1_2 )
            // InternalFortXTrans.g:6621:3: rule__MultExpr__RightAssignment_1_2
            {
            pushFollow(FOLLOW_2);
            rule__MultExpr__RightAssignment_1_2();

            state._fsp--;


            }

             after(grammarAccess.getMultExprAccess().getRightAssignment_1_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultExpr__Group_1__2__Impl"


    // $ANTLR start "rule__ExponentExpr__Group__0"
    // InternalFortXTrans.g:6630:1: rule__ExponentExpr__Group__0 : rule__ExponentExpr__Group__0__Impl rule__ExponentExpr__Group__1 ;
    public final void rule__ExponentExpr__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6634:1: ( rule__ExponentExpr__Group__0__Impl rule__ExponentExpr__Group__1 )
            // InternalFortXTrans.g:6635:2: rule__ExponentExpr__Group__0__Impl rule__ExponentExpr__Group__1
            {
            pushFollow(FOLLOW_51);
            rule__ExponentExpr__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ExponentExpr__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExponentExpr__Group__0"


    // $ANTLR start "rule__ExponentExpr__Group__0__Impl"
    // InternalFortXTrans.g:6642:1: rule__ExponentExpr__Group__0__Impl : ( rulePrimary ) ;
    public final void rule__ExponentExpr__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6646:1: ( ( rulePrimary ) )
            // InternalFortXTrans.g:6647:1: ( rulePrimary )
            {
            // InternalFortXTrans.g:6647:1: ( rulePrimary )
            // InternalFortXTrans.g:6648:2: rulePrimary
            {
             before(grammarAccess.getExponentExprAccess().getPrimaryParserRuleCall_0()); 
            pushFollow(FOLLOW_2);
            rulePrimary();

            state._fsp--;

             after(grammarAccess.getExponentExprAccess().getPrimaryParserRuleCall_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExponentExpr__Group__0__Impl"


    // $ANTLR start "rule__ExponentExpr__Group__1"
    // InternalFortXTrans.g:6657:1: rule__ExponentExpr__Group__1 : rule__ExponentExpr__Group__1__Impl ;
    public final void rule__ExponentExpr__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6661:1: ( rule__ExponentExpr__Group__1__Impl )
            // InternalFortXTrans.g:6662:2: rule__ExponentExpr__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ExponentExpr__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExponentExpr__Group__1"


    // $ANTLR start "rule__ExponentExpr__Group__1__Impl"
    // InternalFortXTrans.g:6668:1: rule__ExponentExpr__Group__1__Impl : ( ( rule__ExponentExpr__Group_1__0 )* ) ;
    public final void rule__ExponentExpr__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6672:1: ( ( ( rule__ExponentExpr__Group_1__0 )* ) )
            // InternalFortXTrans.g:6673:1: ( ( rule__ExponentExpr__Group_1__0 )* )
            {
            // InternalFortXTrans.g:6673:1: ( ( rule__ExponentExpr__Group_1__0 )* )
            // InternalFortXTrans.g:6674:2: ( rule__ExponentExpr__Group_1__0 )*
            {
             before(grammarAccess.getExponentExprAccess().getGroup_1()); 
            // InternalFortXTrans.g:6675:2: ( rule__ExponentExpr__Group_1__0 )*
            loop66:
            do {
                int alt66=2;
                int LA66_0 = input.LA(1);

                if ( (LA66_0==44) ) {
                    alt66=1;
                }


                switch (alt66) {
            	case 1 :
            	    // InternalFortXTrans.g:6675:3: rule__ExponentExpr__Group_1__0
            	    {
            	    pushFollow(FOLLOW_52);
            	    rule__ExponentExpr__Group_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop66;
                }
            } while (true);

             after(grammarAccess.getExponentExprAccess().getGroup_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExponentExpr__Group__1__Impl"


    // $ANTLR start "rule__ExponentExpr__Group_1__0"
    // InternalFortXTrans.g:6684:1: rule__ExponentExpr__Group_1__0 : rule__ExponentExpr__Group_1__0__Impl rule__ExponentExpr__Group_1__1 ;
    public final void rule__ExponentExpr__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6688:1: ( rule__ExponentExpr__Group_1__0__Impl rule__ExponentExpr__Group_1__1 )
            // InternalFortXTrans.g:6689:2: rule__ExponentExpr__Group_1__0__Impl rule__ExponentExpr__Group_1__1
            {
            pushFollow(FOLLOW_51);
            rule__ExponentExpr__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ExponentExpr__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExponentExpr__Group_1__0"


    // $ANTLR start "rule__ExponentExpr__Group_1__0__Impl"
    // InternalFortXTrans.g:6696:1: rule__ExponentExpr__Group_1__0__Impl : ( () ) ;
    public final void rule__ExponentExpr__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6700:1: ( ( () ) )
            // InternalFortXTrans.g:6701:1: ( () )
            {
            // InternalFortXTrans.g:6701:1: ( () )
            // InternalFortXTrans.g:6702:2: ()
            {
             before(grammarAccess.getExponentExprAccess().getExponentExprLeftAction_1_0()); 
            // InternalFortXTrans.g:6703:2: ()
            // InternalFortXTrans.g:6703:3: 
            {
            }

             after(grammarAccess.getExponentExprAccess().getExponentExprLeftAction_1_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExponentExpr__Group_1__0__Impl"


    // $ANTLR start "rule__ExponentExpr__Group_1__1"
    // InternalFortXTrans.g:6711:1: rule__ExponentExpr__Group_1__1 : rule__ExponentExpr__Group_1__1__Impl rule__ExponentExpr__Group_1__2 ;
    public final void rule__ExponentExpr__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6715:1: ( rule__ExponentExpr__Group_1__1__Impl rule__ExponentExpr__Group_1__2 )
            // InternalFortXTrans.g:6716:2: rule__ExponentExpr__Group_1__1__Impl rule__ExponentExpr__Group_1__2
            {
            pushFollow(FOLLOW_32);
            rule__ExponentExpr__Group_1__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ExponentExpr__Group_1__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExponentExpr__Group_1__1"


    // $ANTLR start "rule__ExponentExpr__Group_1__1__Impl"
    // InternalFortXTrans.g:6723:1: rule__ExponentExpr__Group_1__1__Impl : ( '^' ) ;
    public final void rule__ExponentExpr__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6727:1: ( ( '^' ) )
            // InternalFortXTrans.g:6728:1: ( '^' )
            {
            // InternalFortXTrans.g:6728:1: ( '^' )
            // InternalFortXTrans.g:6729:2: '^'
            {
             before(grammarAccess.getExponentExprAccess().getCircumflexAccentKeyword_1_1()); 
            match(input,44,FOLLOW_2); 
             after(grammarAccess.getExponentExprAccess().getCircumflexAccentKeyword_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExponentExpr__Group_1__1__Impl"


    // $ANTLR start "rule__ExponentExpr__Group_1__2"
    // InternalFortXTrans.g:6738:1: rule__ExponentExpr__Group_1__2 : rule__ExponentExpr__Group_1__2__Impl ;
    public final void rule__ExponentExpr__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6742:1: ( rule__ExponentExpr__Group_1__2__Impl )
            // InternalFortXTrans.g:6743:2: rule__ExponentExpr__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ExponentExpr__Group_1__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExponentExpr__Group_1__2"


    // $ANTLR start "rule__ExponentExpr__Group_1__2__Impl"
    // InternalFortXTrans.g:6749:1: rule__ExponentExpr__Group_1__2__Impl : ( ( rule__ExponentExpr__RightAssignment_1_2 ) ) ;
    public final void rule__ExponentExpr__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6753:1: ( ( ( rule__ExponentExpr__RightAssignment_1_2 ) ) )
            // InternalFortXTrans.g:6754:1: ( ( rule__ExponentExpr__RightAssignment_1_2 ) )
            {
            // InternalFortXTrans.g:6754:1: ( ( rule__ExponentExpr__RightAssignment_1_2 ) )
            // InternalFortXTrans.g:6755:2: ( rule__ExponentExpr__RightAssignment_1_2 )
            {
             before(grammarAccess.getExponentExprAccess().getRightAssignment_1_2()); 
            // InternalFortXTrans.g:6756:2: ( rule__ExponentExpr__RightAssignment_1_2 )
            // InternalFortXTrans.g:6756:3: rule__ExponentExpr__RightAssignment_1_2
            {
            pushFollow(FOLLOW_2);
            rule__ExponentExpr__RightAssignment_1_2();

            state._fsp--;


            }

             after(grammarAccess.getExponentExprAccess().getRightAssignment_1_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExponentExpr__Group_1__2__Impl"


    // $ANTLR start "rule__Primary__Group_0__0"
    // InternalFortXTrans.g:6765:1: rule__Primary__Group_0__0 : rule__Primary__Group_0__0__Impl rule__Primary__Group_0__1 ;
    public final void rule__Primary__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6769:1: ( rule__Primary__Group_0__0__Impl rule__Primary__Group_0__1 )
            // InternalFortXTrans.g:6770:2: rule__Primary__Group_0__0__Impl rule__Primary__Group_0__1
            {
            pushFollow(FOLLOW_53);
            rule__Primary__Group_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Primary__Group_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0__0"


    // $ANTLR start "rule__Primary__Group_0__0__Impl"
    // InternalFortXTrans.g:6777:1: rule__Primary__Group_0__0__Impl : ( ruleLiteralTuple ) ;
    public final void rule__Primary__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6781:1: ( ( ruleLiteralTuple ) )
            // InternalFortXTrans.g:6782:1: ( ruleLiteralTuple )
            {
            // InternalFortXTrans.g:6782:1: ( ruleLiteralTuple )
            // InternalFortXTrans.g:6783:2: ruleLiteralTuple
            {
             before(grammarAccess.getPrimaryAccess().getLiteralTupleParserRuleCall_0_0()); 
            pushFollow(FOLLOW_2);
            ruleLiteralTuple();

            state._fsp--;

             after(grammarAccess.getPrimaryAccess().getLiteralTupleParserRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0__0__Impl"


    // $ANTLR start "rule__Primary__Group_0__1"
    // InternalFortXTrans.g:6792:1: rule__Primary__Group_0__1 : rule__Primary__Group_0__1__Impl rule__Primary__Group_0__2 ;
    public final void rule__Primary__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6796:1: ( rule__Primary__Group_0__1__Impl rule__Primary__Group_0__2 )
            // InternalFortXTrans.g:6797:2: rule__Primary__Group_0__1__Impl rule__Primary__Group_0__2
            {
            pushFollow(FOLLOW_53);
            rule__Primary__Group_0__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Primary__Group_0__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0__1"


    // $ANTLR start "rule__Primary__Group_0__1__Impl"
    // InternalFortXTrans.g:6804:1: rule__Primary__Group_0__1__Impl : ( ( rule__Primary__Group_0_1__0 )? ) ;
    public final void rule__Primary__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6808:1: ( ( ( rule__Primary__Group_0_1__0 )? ) )
            // InternalFortXTrans.g:6809:1: ( ( rule__Primary__Group_0_1__0 )? )
            {
            // InternalFortXTrans.g:6809:1: ( ( rule__Primary__Group_0_1__0 )? )
            // InternalFortXTrans.g:6810:2: ( rule__Primary__Group_0_1__0 )?
            {
             before(grammarAccess.getPrimaryAccess().getGroup_0_1()); 
            // InternalFortXTrans.g:6811:2: ( rule__Primary__Group_0_1__0 )?
            int alt67=2;
            int LA67_0 = input.LA(1);

            if ( (LA67_0==60) ) {
                alt67=1;
            }
            switch (alt67) {
                case 1 :
                    // InternalFortXTrans.g:6811:3: rule__Primary__Group_0_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Primary__Group_0_1__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getPrimaryAccess().getGroup_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0__1__Impl"


    // $ANTLR start "rule__Primary__Group_0__2"
    // InternalFortXTrans.g:6819:1: rule__Primary__Group_0__2 : rule__Primary__Group_0__2__Impl ;
    public final void rule__Primary__Group_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6823:1: ( rule__Primary__Group_0__2__Impl )
            // InternalFortXTrans.g:6824:2: rule__Primary__Group_0__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Primary__Group_0__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0__2"


    // $ANTLR start "rule__Primary__Group_0__2__Impl"
    // InternalFortXTrans.g:6830:1: rule__Primary__Group_0__2__Impl : ( ( rule__Primary__Group_0_2__0 )? ) ;
    public final void rule__Primary__Group_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6834:1: ( ( ( rule__Primary__Group_0_2__0 )? ) )
            // InternalFortXTrans.g:6835:1: ( ( rule__Primary__Group_0_2__0 )? )
            {
            // InternalFortXTrans.g:6835:1: ( ( rule__Primary__Group_0_2__0 )? )
            // InternalFortXTrans.g:6836:2: ( rule__Primary__Group_0_2__0 )?
            {
             before(grammarAccess.getPrimaryAccess().getGroup_0_2()); 
            // InternalFortXTrans.g:6837:2: ( rule__Primary__Group_0_2__0 )?
            int alt68=2;
            int LA68_0 = input.LA(1);

            if ( (LA68_0==35) ) {
                alt68=1;
            }
            switch (alt68) {
                case 1 :
                    // InternalFortXTrans.g:6837:3: rule__Primary__Group_0_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Primary__Group_0_2__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getPrimaryAccess().getGroup_0_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0__2__Impl"


    // $ANTLR start "rule__Primary__Group_0_1__0"
    // InternalFortXTrans.g:6846:1: rule__Primary__Group_0_1__0 : rule__Primary__Group_0_1__0__Impl rule__Primary__Group_0_1__1 ;
    public final void rule__Primary__Group_0_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6850:1: ( rule__Primary__Group_0_1__0__Impl rule__Primary__Group_0_1__1 )
            // InternalFortXTrans.g:6851:2: rule__Primary__Group_0_1__0__Impl rule__Primary__Group_0_1__1
            {
            pushFollow(FOLLOW_54);
            rule__Primary__Group_0_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Primary__Group_0_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0_1__0"


    // $ANTLR start "rule__Primary__Group_0_1__0__Impl"
    // InternalFortXTrans.g:6858:1: rule__Primary__Group_0_1__0__Impl : ( () ) ;
    public final void rule__Primary__Group_0_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6862:1: ( ( () ) )
            // InternalFortXTrans.g:6863:1: ( () )
            {
            // InternalFortXTrans.g:6863:1: ( () )
            // InternalFortXTrans.g:6864:2: ()
            {
             before(grammarAccess.getPrimaryAccess().getAssopLeftAction_0_1_0()); 
            // InternalFortXTrans.g:6865:2: ()
            // InternalFortXTrans.g:6865:3: 
            {
            }

             after(grammarAccess.getPrimaryAccess().getAssopLeftAction_0_1_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0_1__0__Impl"


    // $ANTLR start "rule__Primary__Group_0_1__1"
    // InternalFortXTrans.g:6873:1: rule__Primary__Group_0_1__1 : rule__Primary__Group_0_1__1__Impl ;
    public final void rule__Primary__Group_0_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6877:1: ( rule__Primary__Group_0_1__1__Impl )
            // InternalFortXTrans.g:6878:2: rule__Primary__Group_0_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Primary__Group_0_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0_1__1"


    // $ANTLR start "rule__Primary__Group_0_1__1__Impl"
    // InternalFortXTrans.g:6884:1: rule__Primary__Group_0_1__1__Impl : ( ( rule__Primary__Group_0_1_1__0 ) ) ;
    public final void rule__Primary__Group_0_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6888:1: ( ( ( rule__Primary__Group_0_1_1__0 ) ) )
            // InternalFortXTrans.g:6889:1: ( ( rule__Primary__Group_0_1_1__0 ) )
            {
            // InternalFortXTrans.g:6889:1: ( ( rule__Primary__Group_0_1_1__0 ) )
            // InternalFortXTrans.g:6890:2: ( rule__Primary__Group_0_1_1__0 )
            {
             before(grammarAccess.getPrimaryAccess().getGroup_0_1_1()); 
            // InternalFortXTrans.g:6891:2: ( rule__Primary__Group_0_1_1__0 )
            // InternalFortXTrans.g:6891:3: rule__Primary__Group_0_1_1__0
            {
            pushFollow(FOLLOW_2);
            rule__Primary__Group_0_1_1__0();

            state._fsp--;


            }

             after(grammarAccess.getPrimaryAccess().getGroup_0_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0_1__1__Impl"


    // $ANTLR start "rule__Primary__Group_0_1_1__0"
    // InternalFortXTrans.g:6900:1: rule__Primary__Group_0_1_1__0 : rule__Primary__Group_0_1_1__0__Impl rule__Primary__Group_0_1_1__1 ;
    public final void rule__Primary__Group_0_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6904:1: ( rule__Primary__Group_0_1_1__0__Impl rule__Primary__Group_0_1_1__1 )
            // InternalFortXTrans.g:6905:2: rule__Primary__Group_0_1_1__0__Impl rule__Primary__Group_0_1_1__1
            {
            pushFollow(FOLLOW_32);
            rule__Primary__Group_0_1_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Primary__Group_0_1_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0_1_1__0"


    // $ANTLR start "rule__Primary__Group_0_1_1__0__Impl"
    // InternalFortXTrans.g:6912:1: rule__Primary__Group_0_1_1__0__Impl : ( ( rule__Primary__OpAssignment_0_1_1_0 ) ) ;
    public final void rule__Primary__Group_0_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6916:1: ( ( ( rule__Primary__OpAssignment_0_1_1_0 ) ) )
            // InternalFortXTrans.g:6917:1: ( ( rule__Primary__OpAssignment_0_1_1_0 ) )
            {
            // InternalFortXTrans.g:6917:1: ( ( rule__Primary__OpAssignment_0_1_1_0 ) )
            // InternalFortXTrans.g:6918:2: ( rule__Primary__OpAssignment_0_1_1_0 )
            {
             before(grammarAccess.getPrimaryAccess().getOpAssignment_0_1_1_0()); 
            // InternalFortXTrans.g:6919:2: ( rule__Primary__OpAssignment_0_1_1_0 )
            // InternalFortXTrans.g:6919:3: rule__Primary__OpAssignment_0_1_1_0
            {
            pushFollow(FOLLOW_2);
            rule__Primary__OpAssignment_0_1_1_0();

            state._fsp--;


            }

             after(grammarAccess.getPrimaryAccess().getOpAssignment_0_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0_1_1__0__Impl"


    // $ANTLR start "rule__Primary__Group_0_1_1__1"
    // InternalFortXTrans.g:6927:1: rule__Primary__Group_0_1_1__1 : rule__Primary__Group_0_1_1__1__Impl ;
    public final void rule__Primary__Group_0_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6931:1: ( rule__Primary__Group_0_1_1__1__Impl )
            // InternalFortXTrans.g:6932:2: rule__Primary__Group_0_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Primary__Group_0_1_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0_1_1__1"


    // $ANTLR start "rule__Primary__Group_0_1_1__1__Impl"
    // InternalFortXTrans.g:6938:1: rule__Primary__Group_0_1_1__1__Impl : ( ( rule__Primary__RightAssignment_0_1_1_1 ) ) ;
    public final void rule__Primary__Group_0_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6942:1: ( ( ( rule__Primary__RightAssignment_0_1_1_1 ) ) )
            // InternalFortXTrans.g:6943:1: ( ( rule__Primary__RightAssignment_0_1_1_1 ) )
            {
            // InternalFortXTrans.g:6943:1: ( ( rule__Primary__RightAssignment_0_1_1_1 ) )
            // InternalFortXTrans.g:6944:2: ( rule__Primary__RightAssignment_0_1_1_1 )
            {
             before(grammarAccess.getPrimaryAccess().getRightAssignment_0_1_1_1()); 
            // InternalFortXTrans.g:6945:2: ( rule__Primary__RightAssignment_0_1_1_1 )
            // InternalFortXTrans.g:6945:3: rule__Primary__RightAssignment_0_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Primary__RightAssignment_0_1_1_1();

            state._fsp--;


            }

             after(grammarAccess.getPrimaryAccess().getRightAssignment_0_1_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0_1_1__1__Impl"


    // $ANTLR start "rule__Primary__Group_0_2__0"
    // InternalFortXTrans.g:6954:1: rule__Primary__Group_0_2__0 : rule__Primary__Group_0_2__0__Impl rule__Primary__Group_0_2__1 ;
    public final void rule__Primary__Group_0_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6958:1: ( rule__Primary__Group_0_2__0__Impl rule__Primary__Group_0_2__1 )
            // InternalFortXTrans.g:6959:2: rule__Primary__Group_0_2__0__Impl rule__Primary__Group_0_2__1
            {
            pushFollow(FOLLOW_27);
            rule__Primary__Group_0_2__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Primary__Group_0_2__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0_2__0"


    // $ANTLR start "rule__Primary__Group_0_2__0__Impl"
    // InternalFortXTrans.g:6966:1: rule__Primary__Group_0_2__0__Impl : ( () ) ;
    public final void rule__Primary__Group_0_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6970:1: ( ( () ) )
            // InternalFortXTrans.g:6971:1: ( () )
            {
            // InternalFortXTrans.g:6971:1: ( () )
            // InternalFortXTrans.g:6972:2: ()
            {
             before(grammarAccess.getPrimaryAccess().getFCallLeftAction_0_2_0()); 
            // InternalFortXTrans.g:6973:2: ()
            // InternalFortXTrans.g:6973:3: 
            {
            }

             after(grammarAccess.getPrimaryAccess().getFCallLeftAction_0_2_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0_2__0__Impl"


    // $ANTLR start "rule__Primary__Group_0_2__1"
    // InternalFortXTrans.g:6981:1: rule__Primary__Group_0_2__1 : rule__Primary__Group_0_2__1__Impl rule__Primary__Group_0_2__2 ;
    public final void rule__Primary__Group_0_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6985:1: ( rule__Primary__Group_0_2__1__Impl rule__Primary__Group_0_2__2 )
            // InternalFortXTrans.g:6986:2: rule__Primary__Group_0_2__1__Impl rule__Primary__Group_0_2__2
            {
            pushFollow(FOLLOW_32);
            rule__Primary__Group_0_2__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Primary__Group_0_2__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0_2__1"


    // $ANTLR start "rule__Primary__Group_0_2__1__Impl"
    // InternalFortXTrans.g:6993:1: rule__Primary__Group_0_2__1__Impl : ( '(' ) ;
    public final void rule__Primary__Group_0_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6997:1: ( ( '(' ) )
            // InternalFortXTrans.g:6998:1: ( '(' )
            {
            // InternalFortXTrans.g:6998:1: ( '(' )
            // InternalFortXTrans.g:6999:2: '('
            {
             before(grammarAccess.getPrimaryAccess().getLeftParenthesisKeyword_0_2_1()); 
            match(input,35,FOLLOW_2); 
             after(grammarAccess.getPrimaryAccess().getLeftParenthesisKeyword_0_2_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0_2__1__Impl"


    // $ANTLR start "rule__Primary__Group_0_2__2"
    // InternalFortXTrans.g:7008:1: rule__Primary__Group_0_2__2 : rule__Primary__Group_0_2__2__Impl rule__Primary__Group_0_2__3 ;
    public final void rule__Primary__Group_0_2__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7012:1: ( rule__Primary__Group_0_2__2__Impl rule__Primary__Group_0_2__3 )
            // InternalFortXTrans.g:7013:2: rule__Primary__Group_0_2__2__Impl rule__Primary__Group_0_2__3
            {
            pushFollow(FOLLOW_28);
            rule__Primary__Group_0_2__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Primary__Group_0_2__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0_2__2"


    // $ANTLR start "rule__Primary__Group_0_2__2__Impl"
    // InternalFortXTrans.g:7020:1: rule__Primary__Group_0_2__2__Impl : ( ( rule__Primary__RightAssignment_0_2_2 ) ) ;
    public final void rule__Primary__Group_0_2__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7024:1: ( ( ( rule__Primary__RightAssignment_0_2_2 ) ) )
            // InternalFortXTrans.g:7025:1: ( ( rule__Primary__RightAssignment_0_2_2 ) )
            {
            // InternalFortXTrans.g:7025:1: ( ( rule__Primary__RightAssignment_0_2_2 ) )
            // InternalFortXTrans.g:7026:2: ( rule__Primary__RightAssignment_0_2_2 )
            {
             before(grammarAccess.getPrimaryAccess().getRightAssignment_0_2_2()); 
            // InternalFortXTrans.g:7027:2: ( rule__Primary__RightAssignment_0_2_2 )
            // InternalFortXTrans.g:7027:3: rule__Primary__RightAssignment_0_2_2
            {
            pushFollow(FOLLOW_2);
            rule__Primary__RightAssignment_0_2_2();

            state._fsp--;


            }

             after(grammarAccess.getPrimaryAccess().getRightAssignment_0_2_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0_2__2__Impl"


    // $ANTLR start "rule__Primary__Group_0_2__3"
    // InternalFortXTrans.g:7035:1: rule__Primary__Group_0_2__3 : rule__Primary__Group_0_2__3__Impl ;
    public final void rule__Primary__Group_0_2__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7039:1: ( rule__Primary__Group_0_2__3__Impl )
            // InternalFortXTrans.g:7040:2: rule__Primary__Group_0_2__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Primary__Group_0_2__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0_2__3"


    // $ANTLR start "rule__Primary__Group_0_2__3__Impl"
    // InternalFortXTrans.g:7046:1: rule__Primary__Group_0_2__3__Impl : ( ')' ) ;
    public final void rule__Primary__Group_0_2__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7050:1: ( ( ')' ) )
            // InternalFortXTrans.g:7051:1: ( ')' )
            {
            // InternalFortXTrans.g:7051:1: ( ')' )
            // InternalFortXTrans.g:7052:2: ')'
            {
             before(grammarAccess.getPrimaryAccess().getRightParenthesisKeyword_0_2_3()); 
            match(input,36,FOLLOW_2); 
             after(grammarAccess.getPrimaryAccess().getRightParenthesisKeyword_0_2_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0_2__3__Impl"


    // $ANTLR start "rule__Primary__Group_1__0"
    // InternalFortXTrans.g:7062:1: rule__Primary__Group_1__0 : rule__Primary__Group_1__0__Impl rule__Primary__Group_1__1 ;
    public final void rule__Primary__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7066:1: ( rule__Primary__Group_1__0__Impl rule__Primary__Group_1__1 )
            // InternalFortXTrans.g:7067:2: rule__Primary__Group_1__0__Impl rule__Primary__Group_1__1
            {
            pushFollow(FOLLOW_32);
            rule__Primary__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Primary__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_1__0"


    // $ANTLR start "rule__Primary__Group_1__0__Impl"
    // InternalFortXTrans.g:7074:1: rule__Primary__Group_1__0__Impl : ( '(' ) ;
    public final void rule__Primary__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7078:1: ( ( '(' ) )
            // InternalFortXTrans.g:7079:1: ( '(' )
            {
            // InternalFortXTrans.g:7079:1: ( '(' )
            // InternalFortXTrans.g:7080:2: '('
            {
             before(grammarAccess.getPrimaryAccess().getLeftParenthesisKeyword_1_0()); 
            match(input,35,FOLLOW_2); 
             after(grammarAccess.getPrimaryAccess().getLeftParenthesisKeyword_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_1__0__Impl"


    // $ANTLR start "rule__Primary__Group_1__1"
    // InternalFortXTrans.g:7089:1: rule__Primary__Group_1__1 : rule__Primary__Group_1__1__Impl rule__Primary__Group_1__2 ;
    public final void rule__Primary__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7093:1: ( rule__Primary__Group_1__1__Impl rule__Primary__Group_1__2 )
            // InternalFortXTrans.g:7094:2: rule__Primary__Group_1__1__Impl rule__Primary__Group_1__2
            {
            pushFollow(FOLLOW_28);
            rule__Primary__Group_1__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Primary__Group_1__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_1__1"


    // $ANTLR start "rule__Primary__Group_1__1__Impl"
    // InternalFortXTrans.g:7101:1: rule__Primary__Group_1__1__Impl : ( ruleExpr ) ;
    public final void rule__Primary__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7105:1: ( ( ruleExpr ) )
            // InternalFortXTrans.g:7106:1: ( ruleExpr )
            {
            // InternalFortXTrans.g:7106:1: ( ruleExpr )
            // InternalFortXTrans.g:7107:2: ruleExpr
            {
             before(grammarAccess.getPrimaryAccess().getExprParserRuleCall_1_1()); 
            pushFollow(FOLLOW_2);
            ruleExpr();

            state._fsp--;

             after(grammarAccess.getPrimaryAccess().getExprParserRuleCall_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_1__1__Impl"


    // $ANTLR start "rule__Primary__Group_1__2"
    // InternalFortXTrans.g:7116:1: rule__Primary__Group_1__2 : rule__Primary__Group_1__2__Impl ;
    public final void rule__Primary__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7120:1: ( rule__Primary__Group_1__2__Impl )
            // InternalFortXTrans.g:7121:2: rule__Primary__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Primary__Group_1__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_1__2"


    // $ANTLR start "rule__Primary__Group_1__2__Impl"
    // InternalFortXTrans.g:7127:1: rule__Primary__Group_1__2__Impl : ( ')' ) ;
    public final void rule__Primary__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7131:1: ( ( ')' ) )
            // InternalFortXTrans.g:7132:1: ( ')' )
            {
            // InternalFortXTrans.g:7132:1: ( ')' )
            // InternalFortXTrans.g:7133:2: ')'
            {
             before(grammarAccess.getPrimaryAccess().getRightParenthesisKeyword_1_2()); 
            match(input,36,FOLLOW_2); 
             after(grammarAccess.getPrimaryAccess().getRightParenthesisKeyword_1_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_1__2__Impl"


    // $ANTLR start "rule__ExprList__Group__0"
    // InternalFortXTrans.g:7143:1: rule__ExprList__Group__0 : rule__ExprList__Group__0__Impl rule__ExprList__Group__1 ;
    public final void rule__ExprList__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7147:1: ( rule__ExprList__Group__0__Impl rule__ExprList__Group__1 )
            // InternalFortXTrans.g:7148:2: rule__ExprList__Group__0__Impl rule__ExprList__Group__1
            {
            pushFollow(FOLLOW_24);
            rule__ExprList__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ExprList__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExprList__Group__0"


    // $ANTLR start "rule__ExprList__Group__0__Impl"
    // InternalFortXTrans.g:7155:1: rule__ExprList__Group__0__Impl : ( ( rule__ExprList__ExpsAssignment_0 ) ) ;
    public final void rule__ExprList__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7159:1: ( ( ( rule__ExprList__ExpsAssignment_0 ) ) )
            // InternalFortXTrans.g:7160:1: ( ( rule__ExprList__ExpsAssignment_0 ) )
            {
            // InternalFortXTrans.g:7160:1: ( ( rule__ExprList__ExpsAssignment_0 ) )
            // InternalFortXTrans.g:7161:2: ( rule__ExprList__ExpsAssignment_0 )
            {
             before(grammarAccess.getExprListAccess().getExpsAssignment_0()); 
            // InternalFortXTrans.g:7162:2: ( rule__ExprList__ExpsAssignment_0 )
            // InternalFortXTrans.g:7162:3: rule__ExprList__ExpsAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__ExprList__ExpsAssignment_0();

            state._fsp--;


            }

             after(grammarAccess.getExprListAccess().getExpsAssignment_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExprList__Group__0__Impl"


    // $ANTLR start "rule__ExprList__Group__1"
    // InternalFortXTrans.g:7170:1: rule__ExprList__Group__1 : rule__ExprList__Group__1__Impl ;
    public final void rule__ExprList__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7174:1: ( rule__ExprList__Group__1__Impl )
            // InternalFortXTrans.g:7175:2: rule__ExprList__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ExprList__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExprList__Group__1"


    // $ANTLR start "rule__ExprList__Group__1__Impl"
    // InternalFortXTrans.g:7181:1: rule__ExprList__Group__1__Impl : ( ( rule__ExprList__Group_1__0 )* ) ;
    public final void rule__ExprList__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7185:1: ( ( ( rule__ExprList__Group_1__0 )* ) )
            // InternalFortXTrans.g:7186:1: ( ( rule__ExprList__Group_1__0 )* )
            {
            // InternalFortXTrans.g:7186:1: ( ( rule__ExprList__Group_1__0 )* )
            // InternalFortXTrans.g:7187:2: ( rule__ExprList__Group_1__0 )*
            {
             before(grammarAccess.getExprListAccess().getGroup_1()); 
            // InternalFortXTrans.g:7188:2: ( rule__ExprList__Group_1__0 )*
            loop69:
            do {
                int alt69=2;
                int LA69_0 = input.LA(1);

                if ( (LA69_0==31) ) {
                    alt69=1;
                }


                switch (alt69) {
            	case 1 :
            	    // InternalFortXTrans.g:7188:3: rule__ExprList__Group_1__0
            	    {
            	    pushFollow(FOLLOW_15);
            	    rule__ExprList__Group_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop69;
                }
            } while (true);

             after(grammarAccess.getExprListAccess().getGroup_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExprList__Group__1__Impl"


    // $ANTLR start "rule__ExprList__Group_1__0"
    // InternalFortXTrans.g:7197:1: rule__ExprList__Group_1__0 : rule__ExprList__Group_1__0__Impl rule__ExprList__Group_1__1 ;
    public final void rule__ExprList__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7201:1: ( rule__ExprList__Group_1__0__Impl rule__ExprList__Group_1__1 )
            // InternalFortXTrans.g:7202:2: rule__ExprList__Group_1__0__Impl rule__ExprList__Group_1__1
            {
            pushFollow(FOLLOW_32);
            rule__ExprList__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ExprList__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExprList__Group_1__0"


    // $ANTLR start "rule__ExprList__Group_1__0__Impl"
    // InternalFortXTrans.g:7209:1: rule__ExprList__Group_1__0__Impl : ( ',' ) ;
    public final void rule__ExprList__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7213:1: ( ( ',' ) )
            // InternalFortXTrans.g:7214:1: ( ',' )
            {
            // InternalFortXTrans.g:7214:1: ( ',' )
            // InternalFortXTrans.g:7215:2: ','
            {
             before(grammarAccess.getExprListAccess().getCommaKeyword_1_0()); 
            match(input,31,FOLLOW_2); 
             after(grammarAccess.getExprListAccess().getCommaKeyword_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExprList__Group_1__0__Impl"


    // $ANTLR start "rule__ExprList__Group_1__1"
    // InternalFortXTrans.g:7224:1: rule__ExprList__Group_1__1 : rule__ExprList__Group_1__1__Impl ;
    public final void rule__ExprList__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7228:1: ( rule__ExprList__Group_1__1__Impl )
            // InternalFortXTrans.g:7229:2: rule__ExprList__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ExprList__Group_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExprList__Group_1__1"


    // $ANTLR start "rule__ExprList__Group_1__1__Impl"
    // InternalFortXTrans.g:7235:1: rule__ExprList__Group_1__1__Impl : ( ( rule__ExprList__ExpAssignment_1_1 ) ) ;
    public final void rule__ExprList__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7239:1: ( ( ( rule__ExprList__ExpAssignment_1_1 ) ) )
            // InternalFortXTrans.g:7240:1: ( ( rule__ExprList__ExpAssignment_1_1 ) )
            {
            // InternalFortXTrans.g:7240:1: ( ( rule__ExprList__ExpAssignment_1_1 ) )
            // InternalFortXTrans.g:7241:2: ( rule__ExprList__ExpAssignment_1_1 )
            {
             before(grammarAccess.getExprListAccess().getExpAssignment_1_1()); 
            // InternalFortXTrans.g:7242:2: ( rule__ExprList__ExpAssignment_1_1 )
            // InternalFortXTrans.g:7242:3: rule__ExprList__ExpAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__ExprList__ExpAssignment_1_1();

            state._fsp--;


            }

             after(grammarAccess.getExprListAccess().getExpAssignment_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExprList__Group_1__1__Impl"


    // $ANTLR start "rule__ExprTail__Group__0"
    // InternalFortXTrans.g:7251:1: rule__ExprTail__Group__0 : rule__ExprTail__Group__0__Impl rule__ExprTail__Group__1 ;
    public final void rule__ExprTail__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7255:1: ( rule__ExprTail__Group__0__Impl rule__ExprTail__Group__1 )
            // InternalFortXTrans.g:7256:2: rule__ExprTail__Group__0__Impl rule__ExprTail__Group__1
            {
            pushFollow(FOLLOW_5);
            rule__ExprTail__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ExprTail__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExprTail__Group__0"


    // $ANTLR start "rule__ExprTail__Group__0__Impl"
    // InternalFortXTrans.g:7263:1: rule__ExprTail__Group__0__Impl : ( 'as' ) ;
    public final void rule__ExprTail__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7267:1: ( ( 'as' ) )
            // InternalFortXTrans.g:7268:1: ( 'as' )
            {
            // InternalFortXTrans.g:7268:1: ( 'as' )
            // InternalFortXTrans.g:7269:2: 'as'
            {
             before(grammarAccess.getExprTailAccess().getAsKeyword_0()); 
            match(input,34,FOLLOW_2); 
             after(grammarAccess.getExprTailAccess().getAsKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExprTail__Group__0__Impl"


    // $ANTLR start "rule__ExprTail__Group__1"
    // InternalFortXTrans.g:7278:1: rule__ExprTail__Group__1 : rule__ExprTail__Group__1__Impl ;
    public final void rule__ExprTail__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7282:1: ( rule__ExprTail__Group__1__Impl )
            // InternalFortXTrans.g:7283:2: rule__ExprTail__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ExprTail__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExprTail__Group__1"


    // $ANTLR start "rule__ExprTail__Group__1__Impl"
    // InternalFortXTrans.g:7289:1: rule__ExprTail__Group__1__Impl : ( ( rule__ExprTail__TypeAssignment_1 ) ) ;
    public final void rule__ExprTail__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7293:1: ( ( ( rule__ExprTail__TypeAssignment_1 ) ) )
            // InternalFortXTrans.g:7294:1: ( ( rule__ExprTail__TypeAssignment_1 ) )
            {
            // InternalFortXTrans.g:7294:1: ( ( rule__ExprTail__TypeAssignment_1 ) )
            // InternalFortXTrans.g:7295:2: ( rule__ExprTail__TypeAssignment_1 )
            {
             before(grammarAccess.getExprTailAccess().getTypeAssignment_1()); 
            // InternalFortXTrans.g:7296:2: ( rule__ExprTail__TypeAssignment_1 )
            // InternalFortXTrans.g:7296:3: rule__ExprTail__TypeAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__ExprTail__TypeAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getExprTailAccess().getTypeAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExprTail__Group__1__Impl"


    // $ANTLR start "rule__DelimitedExpr__Group_1__0"
    // InternalFortXTrans.g:7305:1: rule__DelimitedExpr__Group_1__0 : rule__DelimitedExpr__Group_1__0__Impl rule__DelimitedExpr__Group_1__1 ;
    public final void rule__DelimitedExpr__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7309:1: ( rule__DelimitedExpr__Group_1__0__Impl rule__DelimitedExpr__Group_1__1 )
            // InternalFortXTrans.g:7310:2: rule__DelimitedExpr__Group_1__0__Impl rule__DelimitedExpr__Group_1__1
            {
            pushFollow(FOLLOW_32);
            rule__DelimitedExpr__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DelimitedExpr__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Group_1__0"


    // $ANTLR start "rule__DelimitedExpr__Group_1__0__Impl"
    // InternalFortXTrans.g:7317:1: rule__DelimitedExpr__Group_1__0__Impl : ( ( rule__DelimitedExpr__RetAssignment_1_0 ) ) ;
    public final void rule__DelimitedExpr__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7321:1: ( ( ( rule__DelimitedExpr__RetAssignment_1_0 ) ) )
            // InternalFortXTrans.g:7322:1: ( ( rule__DelimitedExpr__RetAssignment_1_0 ) )
            {
            // InternalFortXTrans.g:7322:1: ( ( rule__DelimitedExpr__RetAssignment_1_0 ) )
            // InternalFortXTrans.g:7323:2: ( rule__DelimitedExpr__RetAssignment_1_0 )
            {
             before(grammarAccess.getDelimitedExprAccess().getRetAssignment_1_0()); 
            // InternalFortXTrans.g:7324:2: ( rule__DelimitedExpr__RetAssignment_1_0 )
            // InternalFortXTrans.g:7324:3: rule__DelimitedExpr__RetAssignment_1_0
            {
            pushFollow(FOLLOW_2);
            rule__DelimitedExpr__RetAssignment_1_0();

            state._fsp--;


            }

             after(grammarAccess.getDelimitedExprAccess().getRetAssignment_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Group_1__0__Impl"


    // $ANTLR start "rule__DelimitedExpr__Group_1__1"
    // InternalFortXTrans.g:7332:1: rule__DelimitedExpr__Group_1__1 : rule__DelimitedExpr__Group_1__1__Impl ;
    public final void rule__DelimitedExpr__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7336:1: ( rule__DelimitedExpr__Group_1__1__Impl )
            // InternalFortXTrans.g:7337:2: rule__DelimitedExpr__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__DelimitedExpr__Group_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Group_1__1"


    // $ANTLR start "rule__DelimitedExpr__Group_1__1__Impl"
    // InternalFortXTrans.g:7343:1: rule__DelimitedExpr__Group_1__1__Impl : ( ( rule__DelimitedExpr__BlockAssignment_1_1 ) ) ;
    public final void rule__DelimitedExpr__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7347:1: ( ( ( rule__DelimitedExpr__BlockAssignment_1_1 ) ) )
            // InternalFortXTrans.g:7348:1: ( ( rule__DelimitedExpr__BlockAssignment_1_1 ) )
            {
            // InternalFortXTrans.g:7348:1: ( ( rule__DelimitedExpr__BlockAssignment_1_1 ) )
            // InternalFortXTrans.g:7349:2: ( rule__DelimitedExpr__BlockAssignment_1_1 )
            {
             before(grammarAccess.getDelimitedExprAccess().getBlockAssignment_1_1()); 
            // InternalFortXTrans.g:7350:2: ( rule__DelimitedExpr__BlockAssignment_1_1 )
            // InternalFortXTrans.g:7350:3: rule__DelimitedExpr__BlockAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__DelimitedExpr__BlockAssignment_1_1();

            state._fsp--;


            }

             after(grammarAccess.getDelimitedExprAccess().getBlockAssignment_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Group_1__1__Impl"


    // $ANTLR start "rule__DelimitedExpr__Group_2__0"
    // InternalFortXTrans.g:7359:1: rule__DelimitedExpr__Group_2__0 : rule__DelimitedExpr__Group_2__0__Impl rule__DelimitedExpr__Group_2__1 ;
    public final void rule__DelimitedExpr__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7363:1: ( rule__DelimitedExpr__Group_2__0__Impl rule__DelimitedExpr__Group_2__1 )
            // InternalFortXTrans.g:7364:2: rule__DelimitedExpr__Group_2__0__Impl rule__DelimitedExpr__Group_2__1
            {
            pushFollow(FOLLOW_32);
            rule__DelimitedExpr__Group_2__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DelimitedExpr__Group_2__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Group_2__0"


    // $ANTLR start "rule__DelimitedExpr__Group_2__0__Impl"
    // InternalFortXTrans.g:7371:1: rule__DelimitedExpr__Group_2__0__Impl : ( ( rule__DelimitedExpr__AwhileAssignment_2_0 ) ) ;
    public final void rule__DelimitedExpr__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7375:1: ( ( ( rule__DelimitedExpr__AwhileAssignment_2_0 ) ) )
            // InternalFortXTrans.g:7376:1: ( ( rule__DelimitedExpr__AwhileAssignment_2_0 ) )
            {
            // InternalFortXTrans.g:7376:1: ( ( rule__DelimitedExpr__AwhileAssignment_2_0 ) )
            // InternalFortXTrans.g:7377:2: ( rule__DelimitedExpr__AwhileAssignment_2_0 )
            {
             before(grammarAccess.getDelimitedExprAccess().getAwhileAssignment_2_0()); 
            // InternalFortXTrans.g:7378:2: ( rule__DelimitedExpr__AwhileAssignment_2_0 )
            // InternalFortXTrans.g:7378:3: rule__DelimitedExpr__AwhileAssignment_2_0
            {
            pushFollow(FOLLOW_2);
            rule__DelimitedExpr__AwhileAssignment_2_0();

            state._fsp--;


            }

             after(grammarAccess.getDelimitedExprAccess().getAwhileAssignment_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Group_2__0__Impl"


    // $ANTLR start "rule__DelimitedExpr__Group_2__1"
    // InternalFortXTrans.g:7386:1: rule__DelimitedExpr__Group_2__1 : rule__DelimitedExpr__Group_2__1__Impl rule__DelimitedExpr__Group_2__2 ;
    public final void rule__DelimitedExpr__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7390:1: ( rule__DelimitedExpr__Group_2__1__Impl rule__DelimitedExpr__Group_2__2 )
            // InternalFortXTrans.g:7391:2: rule__DelimitedExpr__Group_2__1__Impl rule__DelimitedExpr__Group_2__2
            {
            pushFollow(FOLLOW_55);
            rule__DelimitedExpr__Group_2__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DelimitedExpr__Group_2__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Group_2__1"


    // $ANTLR start "rule__DelimitedExpr__Group_2__1__Impl"
    // InternalFortXTrans.g:7398:1: rule__DelimitedExpr__Group_2__1__Impl : ( ( rule__DelimitedExpr__ExprAssignment_2_1 ) ) ;
    public final void rule__DelimitedExpr__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7402:1: ( ( ( rule__DelimitedExpr__ExprAssignment_2_1 ) ) )
            // InternalFortXTrans.g:7403:1: ( ( rule__DelimitedExpr__ExprAssignment_2_1 ) )
            {
            // InternalFortXTrans.g:7403:1: ( ( rule__DelimitedExpr__ExprAssignment_2_1 ) )
            // InternalFortXTrans.g:7404:2: ( rule__DelimitedExpr__ExprAssignment_2_1 )
            {
             before(grammarAccess.getDelimitedExprAccess().getExprAssignment_2_1()); 
            // InternalFortXTrans.g:7405:2: ( rule__DelimitedExpr__ExprAssignment_2_1 )
            // InternalFortXTrans.g:7405:3: rule__DelimitedExpr__ExprAssignment_2_1
            {
            pushFollow(FOLLOW_2);
            rule__DelimitedExpr__ExprAssignment_2_1();

            state._fsp--;


            }

             after(grammarAccess.getDelimitedExprAccess().getExprAssignment_2_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Group_2__1__Impl"


    // $ANTLR start "rule__DelimitedExpr__Group_2__2"
    // InternalFortXTrans.g:7413:1: rule__DelimitedExpr__Group_2__2 : rule__DelimitedExpr__Group_2__2__Impl ;
    public final void rule__DelimitedExpr__Group_2__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7417:1: ( rule__DelimitedExpr__Group_2__2__Impl )
            // InternalFortXTrans.g:7418:2: rule__DelimitedExpr__Group_2__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__DelimitedExpr__Group_2__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Group_2__2"


    // $ANTLR start "rule__DelimitedExpr__Group_2__2__Impl"
    // InternalFortXTrans.g:7424:1: rule__DelimitedExpr__Group_2__2__Impl : ( ( rule__DelimitedExpr__WhiledodAssignment_2_2 ) ) ;
    public final void rule__DelimitedExpr__Group_2__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7428:1: ( ( ( rule__DelimitedExpr__WhiledodAssignment_2_2 ) ) )
            // InternalFortXTrans.g:7429:1: ( ( rule__DelimitedExpr__WhiledodAssignment_2_2 ) )
            {
            // InternalFortXTrans.g:7429:1: ( ( rule__DelimitedExpr__WhiledodAssignment_2_2 ) )
            // InternalFortXTrans.g:7430:2: ( rule__DelimitedExpr__WhiledodAssignment_2_2 )
            {
             before(grammarAccess.getDelimitedExprAccess().getWhiledodAssignment_2_2()); 
            // InternalFortXTrans.g:7431:2: ( rule__DelimitedExpr__WhiledodAssignment_2_2 )
            // InternalFortXTrans.g:7431:3: rule__DelimitedExpr__WhiledodAssignment_2_2
            {
            pushFollow(FOLLOW_2);
            rule__DelimitedExpr__WhiledodAssignment_2_2();

            state._fsp--;


            }

             after(grammarAccess.getDelimitedExprAccess().getWhiledodAssignment_2_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Group_2__2__Impl"


    // $ANTLR start "rule__DelimitedExpr__Group_3__0"
    // InternalFortXTrans.g:7440:1: rule__DelimitedExpr__Group_3__0 : rule__DelimitedExpr__Group_3__0__Impl rule__DelimitedExpr__Group_3__1 ;
    public final void rule__DelimitedExpr__Group_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7444:1: ( rule__DelimitedExpr__Group_3__0__Impl rule__DelimitedExpr__Group_3__1 )
            // InternalFortXTrans.g:7445:2: rule__DelimitedExpr__Group_3__0__Impl rule__DelimitedExpr__Group_3__1
            {
            pushFollow(FOLLOW_56);
            rule__DelimitedExpr__Group_3__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DelimitedExpr__Group_3__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Group_3__0"


    // $ANTLR start "rule__DelimitedExpr__Group_3__0__Impl"
    // InternalFortXTrans.g:7452:1: rule__DelimitedExpr__Group_3__0__Impl : ( ( rule__DelimitedExpr__AforAssignment_3_0 ) ) ;
    public final void rule__DelimitedExpr__Group_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7456:1: ( ( ( rule__DelimitedExpr__AforAssignment_3_0 ) ) )
            // InternalFortXTrans.g:7457:1: ( ( rule__DelimitedExpr__AforAssignment_3_0 ) )
            {
            // InternalFortXTrans.g:7457:1: ( ( rule__DelimitedExpr__AforAssignment_3_0 ) )
            // InternalFortXTrans.g:7458:2: ( rule__DelimitedExpr__AforAssignment_3_0 )
            {
             before(grammarAccess.getDelimitedExprAccess().getAforAssignment_3_0()); 
            // InternalFortXTrans.g:7459:2: ( rule__DelimitedExpr__AforAssignment_3_0 )
            // InternalFortXTrans.g:7459:3: rule__DelimitedExpr__AforAssignment_3_0
            {
            pushFollow(FOLLOW_2);
            rule__DelimitedExpr__AforAssignment_3_0();

            state._fsp--;


            }

             after(grammarAccess.getDelimitedExprAccess().getAforAssignment_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Group_3__0__Impl"


    // $ANTLR start "rule__DelimitedExpr__Group_3__1"
    // InternalFortXTrans.g:7467:1: rule__DelimitedExpr__Group_3__1 : rule__DelimitedExpr__Group_3__1__Impl rule__DelimitedExpr__Group_3__2 ;
    public final void rule__DelimitedExpr__Group_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7471:1: ( rule__DelimitedExpr__Group_3__1__Impl rule__DelimitedExpr__Group_3__2 )
            // InternalFortXTrans.g:7472:2: rule__DelimitedExpr__Group_3__1__Impl rule__DelimitedExpr__Group_3__2
            {
            pushFollow(FOLLOW_55);
            rule__DelimitedExpr__Group_3__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DelimitedExpr__Group_3__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Group_3__1"


    // $ANTLR start "rule__DelimitedExpr__Group_3__1__Impl"
    // InternalFortXTrans.g:7479:1: rule__DelimitedExpr__Group_3__1__Impl : ( ( rule__DelimitedExpr__GenAssignment_3_1 ) ) ;
    public final void rule__DelimitedExpr__Group_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7483:1: ( ( ( rule__DelimitedExpr__GenAssignment_3_1 ) ) )
            // InternalFortXTrans.g:7484:1: ( ( rule__DelimitedExpr__GenAssignment_3_1 ) )
            {
            // InternalFortXTrans.g:7484:1: ( ( rule__DelimitedExpr__GenAssignment_3_1 ) )
            // InternalFortXTrans.g:7485:2: ( rule__DelimitedExpr__GenAssignment_3_1 )
            {
             before(grammarAccess.getDelimitedExprAccess().getGenAssignment_3_1()); 
            // InternalFortXTrans.g:7486:2: ( rule__DelimitedExpr__GenAssignment_3_1 )
            // InternalFortXTrans.g:7486:3: rule__DelimitedExpr__GenAssignment_3_1
            {
            pushFollow(FOLLOW_2);
            rule__DelimitedExpr__GenAssignment_3_1();

            state._fsp--;


            }

             after(grammarAccess.getDelimitedExprAccess().getGenAssignment_3_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Group_3__1__Impl"


    // $ANTLR start "rule__DelimitedExpr__Group_3__2"
    // InternalFortXTrans.g:7494:1: rule__DelimitedExpr__Group_3__2 : rule__DelimitedExpr__Group_3__2__Impl rule__DelimitedExpr__Group_3__3 ;
    public final void rule__DelimitedExpr__Group_3__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7498:1: ( rule__DelimitedExpr__Group_3__2__Impl rule__DelimitedExpr__Group_3__3 )
            // InternalFortXTrans.g:7499:2: rule__DelimitedExpr__Group_3__2__Impl rule__DelimitedExpr__Group_3__3
            {
            pushFollow(FOLLOW_57);
            rule__DelimitedExpr__Group_3__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DelimitedExpr__Group_3__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Group_3__2"


    // $ANTLR start "rule__DelimitedExpr__Group_3__2__Impl"
    // InternalFortXTrans.g:7506:1: rule__DelimitedExpr__Group_3__2__Impl : ( ( rule__DelimitedExpr__DofrontAssignment_3_2 ) ) ;
    public final void rule__DelimitedExpr__Group_3__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7510:1: ( ( ( rule__DelimitedExpr__DofrontAssignment_3_2 ) ) )
            // InternalFortXTrans.g:7511:1: ( ( rule__DelimitedExpr__DofrontAssignment_3_2 ) )
            {
            // InternalFortXTrans.g:7511:1: ( ( rule__DelimitedExpr__DofrontAssignment_3_2 ) )
            // InternalFortXTrans.g:7512:2: ( rule__DelimitedExpr__DofrontAssignment_3_2 )
            {
             before(grammarAccess.getDelimitedExprAccess().getDofrontAssignment_3_2()); 
            // InternalFortXTrans.g:7513:2: ( rule__DelimitedExpr__DofrontAssignment_3_2 )
            // InternalFortXTrans.g:7513:3: rule__DelimitedExpr__DofrontAssignment_3_2
            {
            pushFollow(FOLLOW_2);
            rule__DelimitedExpr__DofrontAssignment_3_2();

            state._fsp--;


            }

             after(grammarAccess.getDelimitedExprAccess().getDofrontAssignment_3_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Group_3__2__Impl"


    // $ANTLR start "rule__DelimitedExpr__Group_3__3"
    // InternalFortXTrans.g:7521:1: rule__DelimitedExpr__Group_3__3 : rule__DelimitedExpr__Group_3__3__Impl ;
    public final void rule__DelimitedExpr__Group_3__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7525:1: ( rule__DelimitedExpr__Group_3__3__Impl )
            // InternalFortXTrans.g:7526:2: rule__DelimitedExpr__Group_3__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__DelimitedExpr__Group_3__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Group_3__3"


    // $ANTLR start "rule__DelimitedExpr__Group_3__3__Impl"
    // InternalFortXTrans.g:7532:1: rule__DelimitedExpr__Group_3__3__Impl : ( 'end' ) ;
    public final void rule__DelimitedExpr__Group_3__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7536:1: ( ( 'end' ) )
            // InternalFortXTrans.g:7537:1: ( 'end' )
            {
            // InternalFortXTrans.g:7537:1: ( 'end' )
            // InternalFortXTrans.g:7538:2: 'end'
            {
             before(grammarAccess.getDelimitedExprAccess().getEndKeyword_3_3()); 
            match(input,28,FOLLOW_2); 
             after(grammarAccess.getDelimitedExprAccess().getEndKeyword_3_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Group_3__3__Impl"


    // $ANTLR start "rule__DelimitedExpr__Group_4__0"
    // InternalFortXTrans.g:7548:1: rule__DelimitedExpr__Group_4__0 : rule__DelimitedExpr__Group_4__0__Impl rule__DelimitedExpr__Group_4__1 ;
    public final void rule__DelimitedExpr__Group_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7552:1: ( rule__DelimitedExpr__Group_4__0__Impl rule__DelimitedExpr__Group_4__1 )
            // InternalFortXTrans.g:7553:2: rule__DelimitedExpr__Group_4__0__Impl rule__DelimitedExpr__Group_4__1
            {
            pushFollow(FOLLOW_32);
            rule__DelimitedExpr__Group_4__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DelimitedExpr__Group_4__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Group_4__0"


    // $ANTLR start "rule__DelimitedExpr__Group_4__0__Impl"
    // InternalFortXTrans.g:7560:1: rule__DelimitedExpr__Group_4__0__Impl : ( ( rule__DelimitedExpr__AnifAssignment_4_0 ) ) ;
    public final void rule__DelimitedExpr__Group_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7564:1: ( ( ( rule__DelimitedExpr__AnifAssignment_4_0 ) ) )
            // InternalFortXTrans.g:7565:1: ( ( rule__DelimitedExpr__AnifAssignment_4_0 ) )
            {
            // InternalFortXTrans.g:7565:1: ( ( rule__DelimitedExpr__AnifAssignment_4_0 ) )
            // InternalFortXTrans.g:7566:2: ( rule__DelimitedExpr__AnifAssignment_4_0 )
            {
             before(grammarAccess.getDelimitedExprAccess().getAnifAssignment_4_0()); 
            // InternalFortXTrans.g:7567:2: ( rule__DelimitedExpr__AnifAssignment_4_0 )
            // InternalFortXTrans.g:7567:3: rule__DelimitedExpr__AnifAssignment_4_0
            {
            pushFollow(FOLLOW_2);
            rule__DelimitedExpr__AnifAssignment_4_0();

            state._fsp--;


            }

             after(grammarAccess.getDelimitedExprAccess().getAnifAssignment_4_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Group_4__0__Impl"


    // $ANTLR start "rule__DelimitedExpr__Group_4__1"
    // InternalFortXTrans.g:7575:1: rule__DelimitedExpr__Group_4__1 : rule__DelimitedExpr__Group_4__1__Impl rule__DelimitedExpr__Group_4__2 ;
    public final void rule__DelimitedExpr__Group_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7579:1: ( rule__DelimitedExpr__Group_4__1__Impl rule__DelimitedExpr__Group_4__2 )
            // InternalFortXTrans.g:7580:2: rule__DelimitedExpr__Group_4__1__Impl rule__DelimitedExpr__Group_4__2
            {
            pushFollow(FOLLOW_58);
            rule__DelimitedExpr__Group_4__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DelimitedExpr__Group_4__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Group_4__1"


    // $ANTLR start "rule__DelimitedExpr__Group_4__1__Impl"
    // InternalFortXTrans.g:7587:1: rule__DelimitedExpr__Group_4__1__Impl : ( ( rule__DelimitedExpr__CondAssignment_4_1 ) ) ;
    public final void rule__DelimitedExpr__Group_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7591:1: ( ( ( rule__DelimitedExpr__CondAssignment_4_1 ) ) )
            // InternalFortXTrans.g:7592:1: ( ( rule__DelimitedExpr__CondAssignment_4_1 ) )
            {
            // InternalFortXTrans.g:7592:1: ( ( rule__DelimitedExpr__CondAssignment_4_1 ) )
            // InternalFortXTrans.g:7593:2: ( rule__DelimitedExpr__CondAssignment_4_1 )
            {
             before(grammarAccess.getDelimitedExprAccess().getCondAssignment_4_1()); 
            // InternalFortXTrans.g:7594:2: ( rule__DelimitedExpr__CondAssignment_4_1 )
            // InternalFortXTrans.g:7594:3: rule__DelimitedExpr__CondAssignment_4_1
            {
            pushFollow(FOLLOW_2);
            rule__DelimitedExpr__CondAssignment_4_1();

            state._fsp--;


            }

             after(grammarAccess.getDelimitedExprAccess().getCondAssignment_4_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Group_4__1__Impl"


    // $ANTLR start "rule__DelimitedExpr__Group_4__2"
    // InternalFortXTrans.g:7602:1: rule__DelimitedExpr__Group_4__2 : rule__DelimitedExpr__Group_4__2__Impl rule__DelimitedExpr__Group_4__3 ;
    public final void rule__DelimitedExpr__Group_4__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7606:1: ( rule__DelimitedExpr__Group_4__2__Impl rule__DelimitedExpr__Group_4__3 )
            // InternalFortXTrans.g:7607:2: rule__DelimitedExpr__Group_4__2__Impl rule__DelimitedExpr__Group_4__3
            {
            pushFollow(FOLLOW_32);
            rule__DelimitedExpr__Group_4__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DelimitedExpr__Group_4__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Group_4__2"


    // $ANTLR start "rule__DelimitedExpr__Group_4__2__Impl"
    // InternalFortXTrans.g:7614:1: rule__DelimitedExpr__Group_4__2__Impl : ( 'then' ) ;
    public final void rule__DelimitedExpr__Group_4__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7618:1: ( ( 'then' ) )
            // InternalFortXTrans.g:7619:1: ( 'then' )
            {
            // InternalFortXTrans.g:7619:1: ( 'then' )
            // InternalFortXTrans.g:7620:2: 'then'
            {
             before(grammarAccess.getDelimitedExprAccess().getThenKeyword_4_2()); 
            match(input,45,FOLLOW_2); 
             after(grammarAccess.getDelimitedExprAccess().getThenKeyword_4_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Group_4__2__Impl"


    // $ANTLR start "rule__DelimitedExpr__Group_4__3"
    // InternalFortXTrans.g:7629:1: rule__DelimitedExpr__Group_4__3 : rule__DelimitedExpr__Group_4__3__Impl rule__DelimitedExpr__Group_4__4 ;
    public final void rule__DelimitedExpr__Group_4__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7633:1: ( rule__DelimitedExpr__Group_4__3__Impl rule__DelimitedExpr__Group_4__4 )
            // InternalFortXTrans.g:7634:2: rule__DelimitedExpr__Group_4__3__Impl rule__DelimitedExpr__Group_4__4
            {
            pushFollow(FOLLOW_59);
            rule__DelimitedExpr__Group_4__3__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DelimitedExpr__Group_4__4();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Group_4__3"


    // $ANTLR start "rule__DelimitedExpr__Group_4__3__Impl"
    // InternalFortXTrans.g:7641:1: rule__DelimitedExpr__Group_4__3__Impl : ( ( rule__DelimitedExpr__BlocksAssignment_4_3 ) ) ;
    public final void rule__DelimitedExpr__Group_4__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7645:1: ( ( ( rule__DelimitedExpr__BlocksAssignment_4_3 ) ) )
            // InternalFortXTrans.g:7646:1: ( ( rule__DelimitedExpr__BlocksAssignment_4_3 ) )
            {
            // InternalFortXTrans.g:7646:1: ( ( rule__DelimitedExpr__BlocksAssignment_4_3 ) )
            // InternalFortXTrans.g:7647:2: ( rule__DelimitedExpr__BlocksAssignment_4_3 )
            {
             before(grammarAccess.getDelimitedExprAccess().getBlocksAssignment_4_3()); 
            // InternalFortXTrans.g:7648:2: ( rule__DelimitedExpr__BlocksAssignment_4_3 )
            // InternalFortXTrans.g:7648:3: rule__DelimitedExpr__BlocksAssignment_4_3
            {
            pushFollow(FOLLOW_2);
            rule__DelimitedExpr__BlocksAssignment_4_3();

            state._fsp--;


            }

             after(grammarAccess.getDelimitedExprAccess().getBlocksAssignment_4_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Group_4__3__Impl"


    // $ANTLR start "rule__DelimitedExpr__Group_4__4"
    // InternalFortXTrans.g:7656:1: rule__DelimitedExpr__Group_4__4 : rule__DelimitedExpr__Group_4__4__Impl rule__DelimitedExpr__Group_4__5 ;
    public final void rule__DelimitedExpr__Group_4__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7660:1: ( rule__DelimitedExpr__Group_4__4__Impl rule__DelimitedExpr__Group_4__5 )
            // InternalFortXTrans.g:7661:2: rule__DelimitedExpr__Group_4__4__Impl rule__DelimitedExpr__Group_4__5
            {
            pushFollow(FOLLOW_59);
            rule__DelimitedExpr__Group_4__4__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DelimitedExpr__Group_4__5();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Group_4__4"


    // $ANTLR start "rule__DelimitedExpr__Group_4__4__Impl"
    // InternalFortXTrans.g:7668:1: rule__DelimitedExpr__Group_4__4__Impl : ( ( rule__DelimitedExpr__ElifsAssignment_4_4 )? ) ;
    public final void rule__DelimitedExpr__Group_4__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7672:1: ( ( ( rule__DelimitedExpr__ElifsAssignment_4_4 )? ) )
            // InternalFortXTrans.g:7673:1: ( ( rule__DelimitedExpr__ElifsAssignment_4_4 )? )
            {
            // InternalFortXTrans.g:7673:1: ( ( rule__DelimitedExpr__ElifsAssignment_4_4 )? )
            // InternalFortXTrans.g:7674:2: ( rule__DelimitedExpr__ElifsAssignment_4_4 )?
            {
             before(grammarAccess.getDelimitedExprAccess().getElifsAssignment_4_4()); 
            // InternalFortXTrans.g:7675:2: ( rule__DelimitedExpr__ElifsAssignment_4_4 )?
            int alt70=2;
            int LA70_0 = input.LA(1);

            if ( (LA70_0==46) ) {
                alt70=1;
            }
            switch (alt70) {
                case 1 :
                    // InternalFortXTrans.g:7675:3: rule__DelimitedExpr__ElifsAssignment_4_4
                    {
                    pushFollow(FOLLOW_2);
                    rule__DelimitedExpr__ElifsAssignment_4_4();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getDelimitedExprAccess().getElifsAssignment_4_4()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Group_4__4__Impl"


    // $ANTLR start "rule__DelimitedExpr__Group_4__5"
    // InternalFortXTrans.g:7683:1: rule__DelimitedExpr__Group_4__5 : rule__DelimitedExpr__Group_4__5__Impl rule__DelimitedExpr__Group_4__6 ;
    public final void rule__DelimitedExpr__Group_4__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7687:1: ( rule__DelimitedExpr__Group_4__5__Impl rule__DelimitedExpr__Group_4__6 )
            // InternalFortXTrans.g:7688:2: rule__DelimitedExpr__Group_4__5__Impl rule__DelimitedExpr__Group_4__6
            {
            pushFollow(FOLLOW_59);
            rule__DelimitedExpr__Group_4__5__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DelimitedExpr__Group_4__6();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Group_4__5"


    // $ANTLR start "rule__DelimitedExpr__Group_4__5__Impl"
    // InternalFortXTrans.g:7695:1: rule__DelimitedExpr__Group_4__5__Impl : ( ( rule__DelimitedExpr__ElsAssignment_4_5 )? ) ;
    public final void rule__DelimitedExpr__Group_4__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7699:1: ( ( ( rule__DelimitedExpr__ElsAssignment_4_5 )? ) )
            // InternalFortXTrans.g:7700:1: ( ( rule__DelimitedExpr__ElsAssignment_4_5 )? )
            {
            // InternalFortXTrans.g:7700:1: ( ( rule__DelimitedExpr__ElsAssignment_4_5 )? )
            // InternalFortXTrans.g:7701:2: ( rule__DelimitedExpr__ElsAssignment_4_5 )?
            {
             before(grammarAccess.getDelimitedExprAccess().getElsAssignment_4_5()); 
            // InternalFortXTrans.g:7702:2: ( rule__DelimitedExpr__ElsAssignment_4_5 )?
            int alt71=2;
            int LA71_0 = input.LA(1);

            if ( (LA71_0==47) ) {
                alt71=1;
            }
            switch (alt71) {
                case 1 :
                    // InternalFortXTrans.g:7702:3: rule__DelimitedExpr__ElsAssignment_4_5
                    {
                    pushFollow(FOLLOW_2);
                    rule__DelimitedExpr__ElsAssignment_4_5();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getDelimitedExprAccess().getElsAssignment_4_5()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Group_4__5__Impl"


    // $ANTLR start "rule__DelimitedExpr__Group_4__6"
    // InternalFortXTrans.g:7710:1: rule__DelimitedExpr__Group_4__6 : rule__DelimitedExpr__Group_4__6__Impl ;
    public final void rule__DelimitedExpr__Group_4__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7714:1: ( rule__DelimitedExpr__Group_4__6__Impl )
            // InternalFortXTrans.g:7715:2: rule__DelimitedExpr__Group_4__6__Impl
            {
            pushFollow(FOLLOW_2);
            rule__DelimitedExpr__Group_4__6__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Group_4__6"


    // $ANTLR start "rule__DelimitedExpr__Group_4__6__Impl"
    // InternalFortXTrans.g:7721:1: rule__DelimitedExpr__Group_4__6__Impl : ( 'end' ) ;
    public final void rule__DelimitedExpr__Group_4__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7725:1: ( ( 'end' ) )
            // InternalFortXTrans.g:7726:1: ( 'end' )
            {
            // InternalFortXTrans.g:7726:1: ( 'end' )
            // InternalFortXTrans.g:7727:2: 'end'
            {
             before(grammarAccess.getDelimitedExprAccess().getEndKeyword_4_6()); 
            match(input,28,FOLLOW_2); 
             after(grammarAccess.getDelimitedExprAccess().getEndKeyword_4_6()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Group_4__6__Impl"


    // $ANTLR start "rule__Elifs__Group__0"
    // InternalFortXTrans.g:7737:1: rule__Elifs__Group__0 : rule__Elifs__Group__0__Impl rule__Elifs__Group__1 ;
    public final void rule__Elifs__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7741:1: ( rule__Elifs__Group__0__Impl rule__Elifs__Group__1 )
            // InternalFortXTrans.g:7742:2: rule__Elifs__Group__0__Impl rule__Elifs__Group__1
            {
            pushFollow(FOLLOW_60);
            rule__Elifs__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Elifs__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Elifs__Group__0"


    // $ANTLR start "rule__Elifs__Group__0__Impl"
    // InternalFortXTrans.g:7749:1: rule__Elifs__Group__0__Impl : ( ( rule__Elifs__EAssignment_0 ) ) ;
    public final void rule__Elifs__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7753:1: ( ( ( rule__Elifs__EAssignment_0 ) ) )
            // InternalFortXTrans.g:7754:1: ( ( rule__Elifs__EAssignment_0 ) )
            {
            // InternalFortXTrans.g:7754:1: ( ( rule__Elifs__EAssignment_0 ) )
            // InternalFortXTrans.g:7755:2: ( rule__Elifs__EAssignment_0 )
            {
             before(grammarAccess.getElifsAccess().getEAssignment_0()); 
            // InternalFortXTrans.g:7756:2: ( rule__Elifs__EAssignment_0 )
            // InternalFortXTrans.g:7756:3: rule__Elifs__EAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__Elifs__EAssignment_0();

            state._fsp--;


            }

             after(grammarAccess.getElifsAccess().getEAssignment_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Elifs__Group__0__Impl"


    // $ANTLR start "rule__Elifs__Group__1"
    // InternalFortXTrans.g:7764:1: rule__Elifs__Group__1 : rule__Elifs__Group__1__Impl ;
    public final void rule__Elifs__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7768:1: ( rule__Elifs__Group__1__Impl )
            // InternalFortXTrans.g:7769:2: rule__Elifs__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Elifs__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Elifs__Group__1"


    // $ANTLR start "rule__Elifs__Group__1__Impl"
    // InternalFortXTrans.g:7775:1: rule__Elifs__Group__1__Impl : ( ( rule__Elifs__EAssignment_1 )* ) ;
    public final void rule__Elifs__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7779:1: ( ( ( rule__Elifs__EAssignment_1 )* ) )
            // InternalFortXTrans.g:7780:1: ( ( rule__Elifs__EAssignment_1 )* )
            {
            // InternalFortXTrans.g:7780:1: ( ( rule__Elifs__EAssignment_1 )* )
            // InternalFortXTrans.g:7781:2: ( rule__Elifs__EAssignment_1 )*
            {
             before(grammarAccess.getElifsAccess().getEAssignment_1()); 
            // InternalFortXTrans.g:7782:2: ( rule__Elifs__EAssignment_1 )*
            loop72:
            do {
                int alt72=2;
                int LA72_0 = input.LA(1);

                if ( (LA72_0==46) ) {
                    alt72=1;
                }


                switch (alt72) {
            	case 1 :
            	    // InternalFortXTrans.g:7782:3: rule__Elifs__EAssignment_1
            	    {
            	    pushFollow(FOLLOW_61);
            	    rule__Elifs__EAssignment_1();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop72;
                }
            } while (true);

             after(grammarAccess.getElifsAccess().getEAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Elifs__Group__1__Impl"


    // $ANTLR start "rule__Elif__Group__0"
    // InternalFortXTrans.g:7791:1: rule__Elif__Group__0 : rule__Elif__Group__0__Impl rule__Elif__Group__1 ;
    public final void rule__Elif__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7795:1: ( rule__Elif__Group__0__Impl rule__Elif__Group__1 )
            // InternalFortXTrans.g:7796:2: rule__Elif__Group__0__Impl rule__Elif__Group__1
            {
            pushFollow(FOLLOW_32);
            rule__Elif__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Elif__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Elif__Group__0"


    // $ANTLR start "rule__Elif__Group__0__Impl"
    // InternalFortXTrans.g:7803:1: rule__Elif__Group__0__Impl : ( 'elif' ) ;
    public final void rule__Elif__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7807:1: ( ( 'elif' ) )
            // InternalFortXTrans.g:7808:1: ( 'elif' )
            {
            // InternalFortXTrans.g:7808:1: ( 'elif' )
            // InternalFortXTrans.g:7809:2: 'elif'
            {
             before(grammarAccess.getElifAccess().getElifKeyword_0()); 
            match(input,46,FOLLOW_2); 
             after(grammarAccess.getElifAccess().getElifKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Elif__Group__0__Impl"


    // $ANTLR start "rule__Elif__Group__1"
    // InternalFortXTrans.g:7818:1: rule__Elif__Group__1 : rule__Elif__Group__1__Impl rule__Elif__Group__2 ;
    public final void rule__Elif__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7822:1: ( rule__Elif__Group__1__Impl rule__Elif__Group__2 )
            // InternalFortXTrans.g:7823:2: rule__Elif__Group__1__Impl rule__Elif__Group__2
            {
            pushFollow(FOLLOW_58);
            rule__Elif__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Elif__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Elif__Group__1"


    // $ANTLR start "rule__Elif__Group__1__Impl"
    // InternalFortXTrans.g:7830:1: rule__Elif__Group__1__Impl : ( ( rule__Elif__ExprAssignment_1 ) ) ;
    public final void rule__Elif__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7834:1: ( ( ( rule__Elif__ExprAssignment_1 ) ) )
            // InternalFortXTrans.g:7835:1: ( ( rule__Elif__ExprAssignment_1 ) )
            {
            // InternalFortXTrans.g:7835:1: ( ( rule__Elif__ExprAssignment_1 ) )
            // InternalFortXTrans.g:7836:2: ( rule__Elif__ExprAssignment_1 )
            {
             before(grammarAccess.getElifAccess().getExprAssignment_1()); 
            // InternalFortXTrans.g:7837:2: ( rule__Elif__ExprAssignment_1 )
            // InternalFortXTrans.g:7837:3: rule__Elif__ExprAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__Elif__ExprAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getElifAccess().getExprAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Elif__Group__1__Impl"


    // $ANTLR start "rule__Elif__Group__2"
    // InternalFortXTrans.g:7845:1: rule__Elif__Group__2 : rule__Elif__Group__2__Impl rule__Elif__Group__3 ;
    public final void rule__Elif__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7849:1: ( rule__Elif__Group__2__Impl rule__Elif__Group__3 )
            // InternalFortXTrans.g:7850:2: rule__Elif__Group__2__Impl rule__Elif__Group__3
            {
            pushFollow(FOLLOW_32);
            rule__Elif__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Elif__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Elif__Group__2"


    // $ANTLR start "rule__Elif__Group__2__Impl"
    // InternalFortXTrans.g:7857:1: rule__Elif__Group__2__Impl : ( 'then' ) ;
    public final void rule__Elif__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7861:1: ( ( 'then' ) )
            // InternalFortXTrans.g:7862:1: ( 'then' )
            {
            // InternalFortXTrans.g:7862:1: ( 'then' )
            // InternalFortXTrans.g:7863:2: 'then'
            {
             before(grammarAccess.getElifAccess().getThenKeyword_2()); 
            match(input,45,FOLLOW_2); 
             after(grammarAccess.getElifAccess().getThenKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Elif__Group__2__Impl"


    // $ANTLR start "rule__Elif__Group__3"
    // InternalFortXTrans.g:7872:1: rule__Elif__Group__3 : rule__Elif__Group__3__Impl ;
    public final void rule__Elif__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7876:1: ( rule__Elif__Group__3__Impl )
            // InternalFortXTrans.g:7877:2: rule__Elif__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Elif__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Elif__Group__3"


    // $ANTLR start "rule__Elif__Group__3__Impl"
    // InternalFortXTrans.g:7883:1: rule__Elif__Group__3__Impl : ( ( rule__Elif__BlockAssignment_3 ) ) ;
    public final void rule__Elif__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7887:1: ( ( ( rule__Elif__BlockAssignment_3 ) ) )
            // InternalFortXTrans.g:7888:1: ( ( rule__Elif__BlockAssignment_3 ) )
            {
            // InternalFortXTrans.g:7888:1: ( ( rule__Elif__BlockAssignment_3 ) )
            // InternalFortXTrans.g:7889:2: ( rule__Elif__BlockAssignment_3 )
            {
             before(grammarAccess.getElifAccess().getBlockAssignment_3()); 
            // InternalFortXTrans.g:7890:2: ( rule__Elif__BlockAssignment_3 )
            // InternalFortXTrans.g:7890:3: rule__Elif__BlockAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__Elif__BlockAssignment_3();

            state._fsp--;


            }

             after(grammarAccess.getElifAccess().getBlockAssignment_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Elif__Group__3__Impl"


    // $ANTLR start "rule__Else__Group__0"
    // InternalFortXTrans.g:7899:1: rule__Else__Group__0 : rule__Else__Group__0__Impl rule__Else__Group__1 ;
    public final void rule__Else__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7903:1: ( rule__Else__Group__0__Impl rule__Else__Group__1 )
            // InternalFortXTrans.g:7904:2: rule__Else__Group__0__Impl rule__Else__Group__1
            {
            pushFollow(FOLLOW_32);
            rule__Else__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Else__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Else__Group__0"


    // $ANTLR start "rule__Else__Group__0__Impl"
    // InternalFortXTrans.g:7911:1: rule__Else__Group__0__Impl : ( 'else' ) ;
    public final void rule__Else__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7915:1: ( ( 'else' ) )
            // InternalFortXTrans.g:7916:1: ( 'else' )
            {
            // InternalFortXTrans.g:7916:1: ( 'else' )
            // InternalFortXTrans.g:7917:2: 'else'
            {
             before(grammarAccess.getElseAccess().getElseKeyword_0()); 
            match(input,47,FOLLOW_2); 
             after(grammarAccess.getElseAccess().getElseKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Else__Group__0__Impl"


    // $ANTLR start "rule__Else__Group__1"
    // InternalFortXTrans.g:7926:1: rule__Else__Group__1 : rule__Else__Group__1__Impl ;
    public final void rule__Else__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7930:1: ( rule__Else__Group__1__Impl )
            // InternalFortXTrans.g:7931:2: rule__Else__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Else__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Else__Group__1"


    // $ANTLR start "rule__Else__Group__1__Impl"
    // InternalFortXTrans.g:7937:1: rule__Else__Group__1__Impl : ( ( rule__Else__BlockAssignment_1 ) ) ;
    public final void rule__Else__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7941:1: ( ( ( rule__Else__BlockAssignment_1 ) ) )
            // InternalFortXTrans.g:7942:1: ( ( rule__Else__BlockAssignment_1 ) )
            {
            // InternalFortXTrans.g:7942:1: ( ( rule__Else__BlockAssignment_1 ) )
            // InternalFortXTrans.g:7943:2: ( rule__Else__BlockAssignment_1 )
            {
             before(grammarAccess.getElseAccess().getBlockAssignment_1()); 
            // InternalFortXTrans.g:7944:2: ( rule__Else__BlockAssignment_1 )
            // InternalFortXTrans.g:7944:3: rule__Else__BlockAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__Else__BlockAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getElseAccess().getBlockAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Else__Group__1__Impl"


    // $ANTLR start "rule__Generators__Group__0"
    // InternalFortXTrans.g:7953:1: rule__Generators__Group__0 : rule__Generators__Group__0__Impl rule__Generators__Group__1 ;
    public final void rule__Generators__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7957:1: ( rule__Generators__Group__0__Impl rule__Generators__Group__1 )
            // InternalFortXTrans.g:7958:2: rule__Generators__Group__0__Impl rule__Generators__Group__1
            {
            pushFollow(FOLLOW_24);
            rule__Generators__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Generators__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Generators__Group__0"


    // $ANTLR start "rule__Generators__Group__0__Impl"
    // InternalFortXTrans.g:7965:1: rule__Generators__Group__0__Impl : ( ( rule__Generators__BindingAssignment_0 ) ) ;
    public final void rule__Generators__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7969:1: ( ( ( rule__Generators__BindingAssignment_0 ) ) )
            // InternalFortXTrans.g:7970:1: ( ( rule__Generators__BindingAssignment_0 ) )
            {
            // InternalFortXTrans.g:7970:1: ( ( rule__Generators__BindingAssignment_0 ) )
            // InternalFortXTrans.g:7971:2: ( rule__Generators__BindingAssignment_0 )
            {
             before(grammarAccess.getGeneratorsAccess().getBindingAssignment_0()); 
            // InternalFortXTrans.g:7972:2: ( rule__Generators__BindingAssignment_0 )
            // InternalFortXTrans.g:7972:3: rule__Generators__BindingAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__Generators__BindingAssignment_0();

            state._fsp--;


            }

             after(grammarAccess.getGeneratorsAccess().getBindingAssignment_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Generators__Group__0__Impl"


    // $ANTLR start "rule__Generators__Group__1"
    // InternalFortXTrans.g:7980:1: rule__Generators__Group__1 : rule__Generators__Group__1__Impl ;
    public final void rule__Generators__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7984:1: ( rule__Generators__Group__1__Impl )
            // InternalFortXTrans.g:7985:2: rule__Generators__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Generators__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Generators__Group__1"


    // $ANTLR start "rule__Generators__Group__1__Impl"
    // InternalFortXTrans.g:7991:1: rule__Generators__Group__1__Impl : ( ( rule__Generators__Group_1__0 )* ) ;
    public final void rule__Generators__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7995:1: ( ( ( rule__Generators__Group_1__0 )* ) )
            // InternalFortXTrans.g:7996:1: ( ( rule__Generators__Group_1__0 )* )
            {
            // InternalFortXTrans.g:7996:1: ( ( rule__Generators__Group_1__0 )* )
            // InternalFortXTrans.g:7997:2: ( rule__Generators__Group_1__0 )*
            {
             before(grammarAccess.getGeneratorsAccess().getGroup_1()); 
            // InternalFortXTrans.g:7998:2: ( rule__Generators__Group_1__0 )*
            loop73:
            do {
                int alt73=2;
                int LA73_0 = input.LA(1);

                if ( (LA73_0==31) ) {
                    alt73=1;
                }


                switch (alt73) {
            	case 1 :
            	    // InternalFortXTrans.g:7998:3: rule__Generators__Group_1__0
            	    {
            	    pushFollow(FOLLOW_15);
            	    rule__Generators__Group_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop73;
                }
            } while (true);

             after(grammarAccess.getGeneratorsAccess().getGroup_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Generators__Group__1__Impl"


    // $ANTLR start "rule__Generators__Group_1__0"
    // InternalFortXTrans.g:8007:1: rule__Generators__Group_1__0 : rule__Generators__Group_1__0__Impl rule__Generators__Group_1__1 ;
    public final void rule__Generators__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8011:1: ( rule__Generators__Group_1__0__Impl rule__Generators__Group_1__1 )
            // InternalFortXTrans.g:8012:2: rule__Generators__Group_1__0__Impl rule__Generators__Group_1__1
            {
            pushFollow(FOLLOW_32);
            rule__Generators__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Generators__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Generators__Group_1__0"


    // $ANTLR start "rule__Generators__Group_1__0__Impl"
    // InternalFortXTrans.g:8019:1: rule__Generators__Group_1__0__Impl : ( ',' ) ;
    public final void rule__Generators__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8023:1: ( ( ',' ) )
            // InternalFortXTrans.g:8024:1: ( ',' )
            {
            // InternalFortXTrans.g:8024:1: ( ',' )
            // InternalFortXTrans.g:8025:2: ','
            {
             before(grammarAccess.getGeneratorsAccess().getCommaKeyword_1_0()); 
            match(input,31,FOLLOW_2); 
             after(grammarAccess.getGeneratorsAccess().getCommaKeyword_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Generators__Group_1__0__Impl"


    // $ANTLR start "rule__Generators__Group_1__1"
    // InternalFortXTrans.g:8034:1: rule__Generators__Group_1__1 : rule__Generators__Group_1__1__Impl ;
    public final void rule__Generators__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8038:1: ( rule__Generators__Group_1__1__Impl )
            // InternalFortXTrans.g:8039:2: rule__Generators__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Generators__Group_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Generators__Group_1__1"


    // $ANTLR start "rule__Generators__Group_1__1__Impl"
    // InternalFortXTrans.g:8045:1: rule__Generators__Group_1__1__Impl : ( ( rule__Generators__ClauseAssignment_1_1 ) ) ;
    public final void rule__Generators__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8049:1: ( ( ( rule__Generators__ClauseAssignment_1_1 ) ) )
            // InternalFortXTrans.g:8050:1: ( ( rule__Generators__ClauseAssignment_1_1 ) )
            {
            // InternalFortXTrans.g:8050:1: ( ( rule__Generators__ClauseAssignment_1_1 ) )
            // InternalFortXTrans.g:8051:2: ( rule__Generators__ClauseAssignment_1_1 )
            {
             before(grammarAccess.getGeneratorsAccess().getClauseAssignment_1_1()); 
            // InternalFortXTrans.g:8052:2: ( rule__Generators__ClauseAssignment_1_1 )
            // InternalFortXTrans.g:8052:3: rule__Generators__ClauseAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Generators__ClauseAssignment_1_1();

            state._fsp--;


            }

             after(grammarAccess.getGeneratorsAccess().getClauseAssignment_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Generators__Group_1__1__Impl"


    // $ANTLR start "rule__Binding__Group_0__0"
    // InternalFortXTrans.g:8061:1: rule__Binding__Group_0__0 : rule__Binding__Group_0__0__Impl rule__Binding__Group_0__1 ;
    public final void rule__Binding__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8065:1: ( rule__Binding__Group_0__0__Impl rule__Binding__Group_0__1 )
            // InternalFortXTrans.g:8066:2: rule__Binding__Group_0__0__Impl rule__Binding__Group_0__1
            {
            pushFollow(FOLLOW_62);
            rule__Binding__Group_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Binding__Group_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Binding__Group_0__0"


    // $ANTLR start "rule__Binding__Group_0__0__Impl"
    // InternalFortXTrans.g:8073:1: rule__Binding__Group_0__0__Impl : ( ( rule__Binding__IdtupAssignment_0_0 ) ) ;
    public final void rule__Binding__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8077:1: ( ( ( rule__Binding__IdtupAssignment_0_0 ) ) )
            // InternalFortXTrans.g:8078:1: ( ( rule__Binding__IdtupAssignment_0_0 ) )
            {
            // InternalFortXTrans.g:8078:1: ( ( rule__Binding__IdtupAssignment_0_0 ) )
            // InternalFortXTrans.g:8079:2: ( rule__Binding__IdtupAssignment_0_0 )
            {
             before(grammarAccess.getBindingAccess().getIdtupAssignment_0_0()); 
            // InternalFortXTrans.g:8080:2: ( rule__Binding__IdtupAssignment_0_0 )
            // InternalFortXTrans.g:8080:3: rule__Binding__IdtupAssignment_0_0
            {
            pushFollow(FOLLOW_2);
            rule__Binding__IdtupAssignment_0_0();

            state._fsp--;


            }

             after(grammarAccess.getBindingAccess().getIdtupAssignment_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Binding__Group_0__0__Impl"


    // $ANTLR start "rule__Binding__Group_0__1"
    // InternalFortXTrans.g:8088:1: rule__Binding__Group_0__1 : rule__Binding__Group_0__1__Impl rule__Binding__Group_0__2 ;
    public final void rule__Binding__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8092:1: ( rule__Binding__Group_0__1__Impl rule__Binding__Group_0__2 )
            // InternalFortXTrans.g:8093:2: rule__Binding__Group_0__1__Impl rule__Binding__Group_0__2
            {
            pushFollow(FOLLOW_32);
            rule__Binding__Group_0__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Binding__Group_0__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Binding__Group_0__1"


    // $ANTLR start "rule__Binding__Group_0__1__Impl"
    // InternalFortXTrans.g:8100:1: rule__Binding__Group_0__1__Impl : ( '<-' ) ;
    public final void rule__Binding__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8104:1: ( ( '<-' ) )
            // InternalFortXTrans.g:8105:1: ( '<-' )
            {
            // InternalFortXTrans.g:8105:1: ( '<-' )
            // InternalFortXTrans.g:8106:2: '<-'
            {
             before(grammarAccess.getBindingAccess().getLessThanSignHyphenMinusKeyword_0_1()); 
            match(input,48,FOLLOW_2); 
             after(grammarAccess.getBindingAccess().getLessThanSignHyphenMinusKeyword_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Binding__Group_0__1__Impl"


    // $ANTLR start "rule__Binding__Group_0__2"
    // InternalFortXTrans.g:8115:1: rule__Binding__Group_0__2 : rule__Binding__Group_0__2__Impl ;
    public final void rule__Binding__Group_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8119:1: ( rule__Binding__Group_0__2__Impl )
            // InternalFortXTrans.g:8120:2: rule__Binding__Group_0__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Binding__Group_0__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Binding__Group_0__2"


    // $ANTLR start "rule__Binding__Group_0__2__Impl"
    // InternalFortXTrans.g:8126:1: rule__Binding__Group_0__2__Impl : ( ( rule__Binding__GAssignment_0_2 ) ) ;
    public final void rule__Binding__Group_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8130:1: ( ( ( rule__Binding__GAssignment_0_2 ) ) )
            // InternalFortXTrans.g:8131:1: ( ( rule__Binding__GAssignment_0_2 ) )
            {
            // InternalFortXTrans.g:8131:1: ( ( rule__Binding__GAssignment_0_2 ) )
            // InternalFortXTrans.g:8132:2: ( rule__Binding__GAssignment_0_2 )
            {
             before(grammarAccess.getBindingAccess().getGAssignment_0_2()); 
            // InternalFortXTrans.g:8133:2: ( rule__Binding__GAssignment_0_2 )
            // InternalFortXTrans.g:8133:3: rule__Binding__GAssignment_0_2
            {
            pushFollow(FOLLOW_2);
            rule__Binding__GAssignment_0_2();

            state._fsp--;


            }

             after(grammarAccess.getBindingAccess().getGAssignment_0_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Binding__Group_0__2__Impl"


    // $ANTLR start "rule__Binding__Group_1__0"
    // InternalFortXTrans.g:8142:1: rule__Binding__Group_1__0 : rule__Binding__Group_1__0__Impl rule__Binding__Group_1__1 ;
    public final void rule__Binding__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8146:1: ( rule__Binding__Group_1__0__Impl rule__Binding__Group_1__1 )
            // InternalFortXTrans.g:8147:2: rule__Binding__Group_1__0__Impl rule__Binding__Group_1__1
            {
            pushFollow(FOLLOW_62);
            rule__Binding__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Binding__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Binding__Group_1__0"


    // $ANTLR start "rule__Binding__Group_1__0__Impl"
    // InternalFortXTrans.g:8154:1: rule__Binding__Group_1__0__Impl : ( ( rule__Binding__IdtupAssignment_1_0 ) ) ;
    public final void rule__Binding__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8158:1: ( ( ( rule__Binding__IdtupAssignment_1_0 ) ) )
            // InternalFortXTrans.g:8159:1: ( ( rule__Binding__IdtupAssignment_1_0 ) )
            {
            // InternalFortXTrans.g:8159:1: ( ( rule__Binding__IdtupAssignment_1_0 ) )
            // InternalFortXTrans.g:8160:2: ( rule__Binding__IdtupAssignment_1_0 )
            {
             before(grammarAccess.getBindingAccess().getIdtupAssignment_1_0()); 
            // InternalFortXTrans.g:8161:2: ( rule__Binding__IdtupAssignment_1_0 )
            // InternalFortXTrans.g:8161:3: rule__Binding__IdtupAssignment_1_0
            {
            pushFollow(FOLLOW_2);
            rule__Binding__IdtupAssignment_1_0();

            state._fsp--;


            }

             after(grammarAccess.getBindingAccess().getIdtupAssignment_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Binding__Group_1__0__Impl"


    // $ANTLR start "rule__Binding__Group_1__1"
    // InternalFortXTrans.g:8169:1: rule__Binding__Group_1__1 : rule__Binding__Group_1__1__Impl rule__Binding__Group_1__2 ;
    public final void rule__Binding__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8173:1: ( rule__Binding__Group_1__1__Impl rule__Binding__Group_1__2 )
            // InternalFortXTrans.g:8174:2: rule__Binding__Group_1__1__Impl rule__Binding__Group_1__2
            {
            pushFollow(FOLLOW_63);
            rule__Binding__Group_1__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Binding__Group_1__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Binding__Group_1__1"


    // $ANTLR start "rule__Binding__Group_1__1__Impl"
    // InternalFortXTrans.g:8181:1: rule__Binding__Group_1__1__Impl : ( '<-' ) ;
    public final void rule__Binding__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8185:1: ( ( '<-' ) )
            // InternalFortXTrans.g:8186:1: ( '<-' )
            {
            // InternalFortXTrans.g:8186:1: ( '<-' )
            // InternalFortXTrans.g:8187:2: '<-'
            {
             before(grammarAccess.getBindingAccess().getLessThanSignHyphenMinusKeyword_1_1()); 
            match(input,48,FOLLOW_2); 
             after(grammarAccess.getBindingAccess().getLessThanSignHyphenMinusKeyword_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Binding__Group_1__1__Impl"


    // $ANTLR start "rule__Binding__Group_1__2"
    // InternalFortXTrans.g:8196:1: rule__Binding__Group_1__2 : rule__Binding__Group_1__2__Impl rule__Binding__Group_1__3 ;
    public final void rule__Binding__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8200:1: ( rule__Binding__Group_1__2__Impl rule__Binding__Group_1__3 )
            // InternalFortXTrans.g:8201:2: rule__Binding__Group_1__2__Impl rule__Binding__Group_1__3
            {
            pushFollow(FOLLOW_27);
            rule__Binding__Group_1__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Binding__Group_1__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Binding__Group_1__2"


    // $ANTLR start "rule__Binding__Group_1__2__Impl"
    // InternalFortXTrans.g:8208:1: rule__Binding__Group_1__2__Impl : ( ( rule__Binding__SeqAssignment_1_2 ) ) ;
    public final void rule__Binding__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8212:1: ( ( ( rule__Binding__SeqAssignment_1_2 ) ) )
            // InternalFortXTrans.g:8213:1: ( ( rule__Binding__SeqAssignment_1_2 ) )
            {
            // InternalFortXTrans.g:8213:1: ( ( rule__Binding__SeqAssignment_1_2 ) )
            // InternalFortXTrans.g:8214:2: ( rule__Binding__SeqAssignment_1_2 )
            {
             before(grammarAccess.getBindingAccess().getSeqAssignment_1_2()); 
            // InternalFortXTrans.g:8215:2: ( rule__Binding__SeqAssignment_1_2 )
            // InternalFortXTrans.g:8215:3: rule__Binding__SeqAssignment_1_2
            {
            pushFollow(FOLLOW_2);
            rule__Binding__SeqAssignment_1_2();

            state._fsp--;


            }

             after(grammarAccess.getBindingAccess().getSeqAssignment_1_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Binding__Group_1__2__Impl"


    // $ANTLR start "rule__Binding__Group_1__3"
    // InternalFortXTrans.g:8223:1: rule__Binding__Group_1__3 : rule__Binding__Group_1__3__Impl rule__Binding__Group_1__4 ;
    public final void rule__Binding__Group_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8227:1: ( rule__Binding__Group_1__3__Impl rule__Binding__Group_1__4 )
            // InternalFortXTrans.g:8228:2: rule__Binding__Group_1__3__Impl rule__Binding__Group_1__4
            {
            pushFollow(FOLLOW_32);
            rule__Binding__Group_1__3__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Binding__Group_1__4();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Binding__Group_1__3"


    // $ANTLR start "rule__Binding__Group_1__3__Impl"
    // InternalFortXTrans.g:8235:1: rule__Binding__Group_1__3__Impl : ( '(' ) ;
    public final void rule__Binding__Group_1__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8239:1: ( ( '(' ) )
            // InternalFortXTrans.g:8240:1: ( '(' )
            {
            // InternalFortXTrans.g:8240:1: ( '(' )
            // InternalFortXTrans.g:8241:2: '('
            {
             before(grammarAccess.getBindingAccess().getLeftParenthesisKeyword_1_3()); 
            match(input,35,FOLLOW_2); 
             after(grammarAccess.getBindingAccess().getLeftParenthesisKeyword_1_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Binding__Group_1__3__Impl"


    // $ANTLR start "rule__Binding__Group_1__4"
    // InternalFortXTrans.g:8250:1: rule__Binding__Group_1__4 : rule__Binding__Group_1__4__Impl rule__Binding__Group_1__5 ;
    public final void rule__Binding__Group_1__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8254:1: ( rule__Binding__Group_1__4__Impl rule__Binding__Group_1__5 )
            // InternalFortXTrans.g:8255:2: rule__Binding__Group_1__4__Impl rule__Binding__Group_1__5
            {
            pushFollow(FOLLOW_28);
            rule__Binding__Group_1__4__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Binding__Group_1__5();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Binding__Group_1__4"


    // $ANTLR start "rule__Binding__Group_1__4__Impl"
    // InternalFortXTrans.g:8262:1: rule__Binding__Group_1__4__Impl : ( ( rule__Binding__GAssignment_1_4 ) ) ;
    public final void rule__Binding__Group_1__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8266:1: ( ( ( rule__Binding__GAssignment_1_4 ) ) )
            // InternalFortXTrans.g:8267:1: ( ( rule__Binding__GAssignment_1_4 ) )
            {
            // InternalFortXTrans.g:8267:1: ( ( rule__Binding__GAssignment_1_4 ) )
            // InternalFortXTrans.g:8268:2: ( rule__Binding__GAssignment_1_4 )
            {
             before(grammarAccess.getBindingAccess().getGAssignment_1_4()); 
            // InternalFortXTrans.g:8269:2: ( rule__Binding__GAssignment_1_4 )
            // InternalFortXTrans.g:8269:3: rule__Binding__GAssignment_1_4
            {
            pushFollow(FOLLOW_2);
            rule__Binding__GAssignment_1_4();

            state._fsp--;


            }

             after(grammarAccess.getBindingAccess().getGAssignment_1_4()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Binding__Group_1__4__Impl"


    // $ANTLR start "rule__Binding__Group_1__5"
    // InternalFortXTrans.g:8277:1: rule__Binding__Group_1__5 : rule__Binding__Group_1__5__Impl ;
    public final void rule__Binding__Group_1__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8281:1: ( rule__Binding__Group_1__5__Impl )
            // InternalFortXTrans.g:8282:2: rule__Binding__Group_1__5__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Binding__Group_1__5__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Binding__Group_1__5"


    // $ANTLR start "rule__Binding__Group_1__5__Impl"
    // InternalFortXTrans.g:8288:1: rule__Binding__Group_1__5__Impl : ( ')' ) ;
    public final void rule__Binding__Group_1__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8292:1: ( ( ')' ) )
            // InternalFortXTrans.g:8293:1: ( ')' )
            {
            // InternalFortXTrans.g:8293:1: ( ')' )
            // InternalFortXTrans.g:8294:2: ')'
            {
             before(grammarAccess.getBindingAccess().getRightParenthesisKeyword_1_5()); 
            match(input,36,FOLLOW_2); 
             after(grammarAccess.getBindingAccess().getRightParenthesisKeyword_1_5()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Binding__Group_1__5__Impl"


    // $ANTLR start "rule__GenSource__Group__0"
    // InternalFortXTrans.g:8304:1: rule__GenSource__Group__0 : rule__GenSource__Group__0__Impl rule__GenSource__Group__1 ;
    public final void rule__GenSource__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8308:1: ( rule__GenSource__Group__0__Impl rule__GenSource__Group__1 )
            // InternalFortXTrans.g:8309:2: rule__GenSource__Group__0__Impl rule__GenSource__Group__1
            {
            pushFollow(FOLLOW_64);
            rule__GenSource__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__GenSource__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GenSource__Group__0"


    // $ANTLR start "rule__GenSource__Group__0__Impl"
    // InternalFortXTrans.g:8316:1: rule__GenSource__Group__0__Impl : ( ruleExpr ) ;
    public final void rule__GenSource__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8320:1: ( ( ruleExpr ) )
            // InternalFortXTrans.g:8321:1: ( ruleExpr )
            {
            // InternalFortXTrans.g:8321:1: ( ruleExpr )
            // InternalFortXTrans.g:8322:2: ruleExpr
            {
             before(grammarAccess.getGenSourceAccess().getExprParserRuleCall_0()); 
            pushFollow(FOLLOW_2);
            ruleExpr();

            state._fsp--;

             after(grammarAccess.getGenSourceAccess().getExprParserRuleCall_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GenSource__Group__0__Impl"


    // $ANTLR start "rule__GenSource__Group__1"
    // InternalFortXTrans.g:8331:1: rule__GenSource__Group__1 : rule__GenSource__Group__1__Impl ;
    public final void rule__GenSource__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8335:1: ( rule__GenSource__Group__1__Impl )
            // InternalFortXTrans.g:8336:2: rule__GenSource__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__GenSource__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GenSource__Group__1"


    // $ANTLR start "rule__GenSource__Group__1__Impl"
    // InternalFortXTrans.g:8342:1: rule__GenSource__Group__1__Impl : ( ( rule__GenSource__Group_1__0 )? ) ;
    public final void rule__GenSource__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8346:1: ( ( ( rule__GenSource__Group_1__0 )? ) )
            // InternalFortXTrans.g:8347:1: ( ( rule__GenSource__Group_1__0 )? )
            {
            // InternalFortXTrans.g:8347:1: ( ( rule__GenSource__Group_1__0 )? )
            // InternalFortXTrans.g:8348:2: ( rule__GenSource__Group_1__0 )?
            {
             before(grammarAccess.getGenSourceAccess().getGroup_1()); 
            // InternalFortXTrans.g:8349:2: ( rule__GenSource__Group_1__0 )?
            int alt74=2;
            int LA74_0 = input.LA(1);

            if ( (LA74_0==49) ) {
                alt74=1;
            }
            switch (alt74) {
                case 1 :
                    // InternalFortXTrans.g:8349:3: rule__GenSource__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__GenSource__Group_1__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getGenSourceAccess().getGroup_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GenSource__Group__1__Impl"


    // $ANTLR start "rule__GenSource__Group_1__0"
    // InternalFortXTrans.g:8358:1: rule__GenSource__Group_1__0 : rule__GenSource__Group_1__0__Impl rule__GenSource__Group_1__1 ;
    public final void rule__GenSource__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8362:1: ( rule__GenSource__Group_1__0__Impl rule__GenSource__Group_1__1 )
            // InternalFortXTrans.g:8363:2: rule__GenSource__Group_1__0__Impl rule__GenSource__Group_1__1
            {
            pushFollow(FOLLOW_64);
            rule__GenSource__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__GenSource__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GenSource__Group_1__0"


    // $ANTLR start "rule__GenSource__Group_1__0__Impl"
    // InternalFortXTrans.g:8370:1: rule__GenSource__Group_1__0__Impl : ( () ) ;
    public final void rule__GenSource__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8374:1: ( ( () ) )
            // InternalFortXTrans.g:8375:1: ( () )
            {
            // InternalFortXTrans.g:8375:1: ( () )
            // InternalFortXTrans.g:8376:2: ()
            {
             before(grammarAccess.getGenSourceAccess().getGenSourceStartAction_1_0()); 
            // InternalFortXTrans.g:8377:2: ()
            // InternalFortXTrans.g:8377:3: 
            {
            }

             after(grammarAccess.getGenSourceAccess().getGenSourceStartAction_1_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GenSource__Group_1__0__Impl"


    // $ANTLR start "rule__GenSource__Group_1__1"
    // InternalFortXTrans.g:8385:1: rule__GenSource__Group_1__1 : rule__GenSource__Group_1__1__Impl rule__GenSource__Group_1__2 ;
    public final void rule__GenSource__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8389:1: ( rule__GenSource__Group_1__1__Impl rule__GenSource__Group_1__2 )
            // InternalFortXTrans.g:8390:2: rule__GenSource__Group_1__1__Impl rule__GenSource__Group_1__2
            {
            pushFollow(FOLLOW_32);
            rule__GenSource__Group_1__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__GenSource__Group_1__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GenSource__Group_1__1"


    // $ANTLR start "rule__GenSource__Group_1__1__Impl"
    // InternalFortXTrans.g:8397:1: rule__GenSource__Group_1__1__Impl : ( '#' ) ;
    public final void rule__GenSource__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8401:1: ( ( '#' ) )
            // InternalFortXTrans.g:8402:1: ( '#' )
            {
            // InternalFortXTrans.g:8402:1: ( '#' )
            // InternalFortXTrans.g:8403:2: '#'
            {
             before(grammarAccess.getGenSourceAccess().getNumberSignKeyword_1_1()); 
            match(input,49,FOLLOW_2); 
             after(grammarAccess.getGenSourceAccess().getNumberSignKeyword_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GenSource__Group_1__1__Impl"


    // $ANTLR start "rule__GenSource__Group_1__2"
    // InternalFortXTrans.g:8412:1: rule__GenSource__Group_1__2 : rule__GenSource__Group_1__2__Impl ;
    public final void rule__GenSource__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8416:1: ( rule__GenSource__Group_1__2__Impl )
            // InternalFortXTrans.g:8417:2: rule__GenSource__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__GenSource__Group_1__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GenSource__Group_1__2"


    // $ANTLR start "rule__GenSource__Group_1__2__Impl"
    // InternalFortXTrans.g:8423:1: rule__GenSource__Group_1__2__Impl : ( ( rule__GenSource__EndAssignment_1_2 ) ) ;
    public final void rule__GenSource__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8427:1: ( ( ( rule__GenSource__EndAssignment_1_2 ) ) )
            // InternalFortXTrans.g:8428:1: ( ( rule__GenSource__EndAssignment_1_2 ) )
            {
            // InternalFortXTrans.g:8428:1: ( ( rule__GenSource__EndAssignment_1_2 ) )
            // InternalFortXTrans.g:8429:2: ( rule__GenSource__EndAssignment_1_2 )
            {
             before(grammarAccess.getGenSourceAccess().getEndAssignment_1_2()); 
            // InternalFortXTrans.g:8430:2: ( rule__GenSource__EndAssignment_1_2 )
            // InternalFortXTrans.g:8430:3: rule__GenSource__EndAssignment_1_2
            {
            pushFollow(FOLLOW_2);
            rule__GenSource__EndAssignment_1_2();

            state._fsp--;


            }

             after(grammarAccess.getGenSourceAccess().getEndAssignment_1_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GenSource__Group_1__2__Impl"


    // $ANTLR start "rule__BlockElems__Group__0"
    // InternalFortXTrans.g:8439:1: rule__BlockElems__Group__0 : rule__BlockElems__Group__0__Impl rule__BlockElems__Group__1 ;
    public final void rule__BlockElems__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8443:1: ( rule__BlockElems__Group__0__Impl rule__BlockElems__Group__1 )
            // InternalFortXTrans.g:8444:2: rule__BlockElems__Group__0__Impl rule__BlockElems__Group__1
            {
            pushFollow(FOLLOW_32);
            rule__BlockElems__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__BlockElems__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BlockElems__Group__0"


    // $ANTLR start "rule__BlockElems__Group__0__Impl"
    // InternalFortXTrans.g:8451:1: rule__BlockElems__Group__0__Impl : ( ( rule__BlockElems__BlockAssignment_0 ) ) ;
    public final void rule__BlockElems__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8455:1: ( ( ( rule__BlockElems__BlockAssignment_0 ) ) )
            // InternalFortXTrans.g:8456:1: ( ( rule__BlockElems__BlockAssignment_0 ) )
            {
            // InternalFortXTrans.g:8456:1: ( ( rule__BlockElems__BlockAssignment_0 ) )
            // InternalFortXTrans.g:8457:2: ( rule__BlockElems__BlockAssignment_0 )
            {
             before(grammarAccess.getBlockElemsAccess().getBlockAssignment_0()); 
            // InternalFortXTrans.g:8458:2: ( rule__BlockElems__BlockAssignment_0 )
            // InternalFortXTrans.g:8458:3: rule__BlockElems__BlockAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__BlockElems__BlockAssignment_0();

            state._fsp--;


            }

             after(grammarAccess.getBlockElemsAccess().getBlockAssignment_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BlockElems__Group__0__Impl"


    // $ANTLR start "rule__BlockElems__Group__1"
    // InternalFortXTrans.g:8466:1: rule__BlockElems__Group__1 : rule__BlockElems__Group__1__Impl ;
    public final void rule__BlockElems__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8470:1: ( rule__BlockElems__Group__1__Impl )
            // InternalFortXTrans.g:8471:2: rule__BlockElems__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__BlockElems__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BlockElems__Group__1"


    // $ANTLR start "rule__BlockElems__Group__1__Impl"
    // InternalFortXTrans.g:8477:1: rule__BlockElems__Group__1__Impl : ( ( rule__BlockElems__BlockAssignment_1 )* ) ;
    public final void rule__BlockElems__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8481:1: ( ( ( rule__BlockElems__BlockAssignment_1 )* ) )
            // InternalFortXTrans.g:8482:1: ( ( rule__BlockElems__BlockAssignment_1 )* )
            {
            // InternalFortXTrans.g:8482:1: ( ( rule__BlockElems__BlockAssignment_1 )* )
            // InternalFortXTrans.g:8483:2: ( rule__BlockElems__BlockAssignment_1 )*
            {
             before(grammarAccess.getBlockElemsAccess().getBlockAssignment_1()); 
            // InternalFortXTrans.g:8484:2: ( rule__BlockElems__BlockAssignment_1 )*
            loop75:
            do {
                int alt75=2;
                int LA75_0 = input.LA(1);

                if ( ((LA75_0>=RULE_ID && LA75_0<=RULE_STRING)||(LA75_0>=25 && LA75_0<=26)||LA75_0==35||LA75_0==51||LA75_0==58||(LA75_0>=61 && LA75_0<=64)||(LA75_0>=66 && LA75_0<=68)) ) {
                    alt75=1;
                }


                switch (alt75) {
            	case 1 :
            	    // InternalFortXTrans.g:8484:3: rule__BlockElems__BlockAssignment_1
            	    {
            	    pushFollow(FOLLOW_65);
            	    rule__BlockElems__BlockAssignment_1();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop75;
                }
            } while (true);

             after(grammarAccess.getBlockElemsAccess().getBlockAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BlockElems__Group__1__Impl"


    // $ANTLR start "rule__Do__Group__0"
    // InternalFortXTrans.g:8493:1: rule__Do__Group__0 : rule__Do__Group__0__Impl rule__Do__Group__1 ;
    public final void rule__Do__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8497:1: ( rule__Do__Group__0__Impl rule__Do__Group__1 )
            // InternalFortXTrans.g:8498:2: rule__Do__Group__0__Impl rule__Do__Group__1
            {
            pushFollow(FOLLOW_66);
            rule__Do__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Do__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Do__Group__0"


    // $ANTLR start "rule__Do__Group__0__Impl"
    // InternalFortXTrans.g:8505:1: rule__Do__Group__0__Impl : ( ( rule__Do__DofsAssignment_0 ) ) ;
    public final void rule__Do__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8509:1: ( ( ( rule__Do__DofsAssignment_0 ) ) )
            // InternalFortXTrans.g:8510:1: ( ( rule__Do__DofsAssignment_0 ) )
            {
            // InternalFortXTrans.g:8510:1: ( ( rule__Do__DofsAssignment_0 ) )
            // InternalFortXTrans.g:8511:2: ( rule__Do__DofsAssignment_0 )
            {
             before(grammarAccess.getDoAccess().getDofsAssignment_0()); 
            // InternalFortXTrans.g:8512:2: ( rule__Do__DofsAssignment_0 )
            // InternalFortXTrans.g:8512:3: rule__Do__DofsAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__Do__DofsAssignment_0();

            state._fsp--;


            }

             after(grammarAccess.getDoAccess().getDofsAssignment_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Do__Group__0__Impl"


    // $ANTLR start "rule__Do__Group__1"
    // InternalFortXTrans.g:8520:1: rule__Do__Group__1 : rule__Do__Group__1__Impl rule__Do__Group__2 ;
    public final void rule__Do__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8524:1: ( rule__Do__Group__1__Impl rule__Do__Group__2 )
            // InternalFortXTrans.g:8525:2: rule__Do__Group__1__Impl rule__Do__Group__2
            {
            pushFollow(FOLLOW_66);
            rule__Do__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Do__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Do__Group__1"


    // $ANTLR start "rule__Do__Group__1__Impl"
    // InternalFortXTrans.g:8532:1: rule__Do__Group__1__Impl : ( ( rule__Do__Group_1__0 )* ) ;
    public final void rule__Do__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8536:1: ( ( ( rule__Do__Group_1__0 )* ) )
            // InternalFortXTrans.g:8537:1: ( ( rule__Do__Group_1__0 )* )
            {
            // InternalFortXTrans.g:8537:1: ( ( rule__Do__Group_1__0 )* )
            // InternalFortXTrans.g:8538:2: ( rule__Do__Group_1__0 )*
            {
             before(grammarAccess.getDoAccess().getGroup_1()); 
            // InternalFortXTrans.g:8539:2: ( rule__Do__Group_1__0 )*
            loop76:
            do {
                int alt76=2;
                int LA76_0 = input.LA(1);

                if ( (LA76_0==50) ) {
                    alt76=1;
                }


                switch (alt76) {
            	case 1 :
            	    // InternalFortXTrans.g:8539:3: rule__Do__Group_1__0
            	    {
            	    pushFollow(FOLLOW_67);
            	    rule__Do__Group_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop76;
                }
            } while (true);

             after(grammarAccess.getDoAccess().getGroup_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Do__Group__1__Impl"


    // $ANTLR start "rule__Do__Group__2"
    // InternalFortXTrans.g:8547:1: rule__Do__Group__2 : rule__Do__Group__2__Impl ;
    public final void rule__Do__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8551:1: ( rule__Do__Group__2__Impl )
            // InternalFortXTrans.g:8552:2: rule__Do__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Do__Group__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Do__Group__2"


    // $ANTLR start "rule__Do__Group__2__Impl"
    // InternalFortXTrans.g:8558:1: rule__Do__Group__2__Impl : ( 'end' ) ;
    public final void rule__Do__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8562:1: ( ( 'end' ) )
            // InternalFortXTrans.g:8563:1: ( 'end' )
            {
            // InternalFortXTrans.g:8563:1: ( 'end' )
            // InternalFortXTrans.g:8564:2: 'end'
            {
             before(grammarAccess.getDoAccess().getEndKeyword_2()); 
            match(input,28,FOLLOW_2); 
             after(grammarAccess.getDoAccess().getEndKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Do__Group__2__Impl"


    // $ANTLR start "rule__Do__Group_1__0"
    // InternalFortXTrans.g:8574:1: rule__Do__Group_1__0 : rule__Do__Group_1__0__Impl rule__Do__Group_1__1 ;
    public final void rule__Do__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8578:1: ( rule__Do__Group_1__0__Impl rule__Do__Group_1__1 )
            // InternalFortXTrans.g:8579:2: rule__Do__Group_1__0__Impl rule__Do__Group_1__1
            {
            pushFollow(FOLLOW_55);
            rule__Do__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Do__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Do__Group_1__0"


    // $ANTLR start "rule__Do__Group_1__0__Impl"
    // InternalFortXTrans.g:8586:1: rule__Do__Group_1__0__Impl : ( 'also' ) ;
    public final void rule__Do__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8590:1: ( ( 'also' ) )
            // InternalFortXTrans.g:8591:1: ( 'also' )
            {
            // InternalFortXTrans.g:8591:1: ( 'also' )
            // InternalFortXTrans.g:8592:2: 'also'
            {
             before(grammarAccess.getDoAccess().getAlsoKeyword_1_0()); 
            match(input,50,FOLLOW_2); 
             after(grammarAccess.getDoAccess().getAlsoKeyword_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Do__Group_1__0__Impl"


    // $ANTLR start "rule__Do__Group_1__1"
    // InternalFortXTrans.g:8601:1: rule__Do__Group_1__1 : rule__Do__Group_1__1__Impl ;
    public final void rule__Do__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8605:1: ( rule__Do__Group_1__1__Impl )
            // InternalFortXTrans.g:8606:2: rule__Do__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Do__Group_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Do__Group_1__1"


    // $ANTLR start "rule__Do__Group_1__1__Impl"
    // InternalFortXTrans.g:8612:1: rule__Do__Group_1__1__Impl : ( ( rule__Do__DofsAssignment_1_1 ) ) ;
    public final void rule__Do__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8616:1: ( ( ( rule__Do__DofsAssignment_1_1 ) ) )
            // InternalFortXTrans.g:8617:1: ( ( rule__Do__DofsAssignment_1_1 ) )
            {
            // InternalFortXTrans.g:8617:1: ( ( rule__Do__DofsAssignment_1_1 ) )
            // InternalFortXTrans.g:8618:2: ( rule__Do__DofsAssignment_1_1 )
            {
             before(grammarAccess.getDoAccess().getDofsAssignment_1_1()); 
            // InternalFortXTrans.g:8619:2: ( rule__Do__DofsAssignment_1_1 )
            // InternalFortXTrans.g:8619:3: rule__Do__DofsAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Do__DofsAssignment_1_1();

            state._fsp--;


            }

             after(grammarAccess.getDoAccess().getDofsAssignment_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Do__Group_1__1__Impl"


    // $ANTLR start "rule__DoFront__Group__0"
    // InternalFortXTrans.g:8628:1: rule__DoFront__Group__0 : rule__DoFront__Group__0__Impl rule__DoFront__Group__1 ;
    public final void rule__DoFront__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8632:1: ( rule__DoFront__Group__0__Impl rule__DoFront__Group__1 )
            // InternalFortXTrans.g:8633:2: rule__DoFront__Group__0__Impl rule__DoFront__Group__1
            {
            pushFollow(FOLLOW_55);
            rule__DoFront__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DoFront__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DoFront__Group__0"


    // $ANTLR start "rule__DoFront__Group__0__Impl"
    // InternalFortXTrans.g:8640:1: rule__DoFront__Group__0__Impl : ( ( rule__DoFront__Group_0__0 )? ) ;
    public final void rule__DoFront__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8644:1: ( ( ( rule__DoFront__Group_0__0 )? ) )
            // InternalFortXTrans.g:8645:1: ( ( rule__DoFront__Group_0__0 )? )
            {
            // InternalFortXTrans.g:8645:1: ( ( rule__DoFront__Group_0__0 )? )
            // InternalFortXTrans.g:8646:2: ( rule__DoFront__Group_0__0 )?
            {
             before(grammarAccess.getDoFrontAccess().getGroup_0()); 
            // InternalFortXTrans.g:8647:2: ( rule__DoFront__Group_0__0 )?
            int alt77=2;
            int LA77_0 = input.LA(1);

            if ( (LA77_0==66) ) {
                alt77=1;
            }
            switch (alt77) {
                case 1 :
                    // InternalFortXTrans.g:8647:3: rule__DoFront__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__DoFront__Group_0__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getDoFrontAccess().getGroup_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DoFront__Group__0__Impl"


    // $ANTLR start "rule__DoFront__Group__1"
    // InternalFortXTrans.g:8655:1: rule__DoFront__Group__1 : rule__DoFront__Group__1__Impl rule__DoFront__Group__2 ;
    public final void rule__DoFront__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8659:1: ( rule__DoFront__Group__1__Impl rule__DoFront__Group__2 )
            // InternalFortXTrans.g:8660:2: rule__DoFront__Group__1__Impl rule__DoFront__Group__2
            {
            pushFollow(FOLLOW_55);
            rule__DoFront__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DoFront__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DoFront__Group__1"


    // $ANTLR start "rule__DoFront__Group__1__Impl"
    // InternalFortXTrans.g:8667:1: rule__DoFront__Group__1__Impl : ( ( rule__DoFront__AtomAssignment_1 )? ) ;
    public final void rule__DoFront__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8671:1: ( ( ( rule__DoFront__AtomAssignment_1 )? ) )
            // InternalFortXTrans.g:8672:1: ( ( rule__DoFront__AtomAssignment_1 )? )
            {
            // InternalFortXTrans.g:8672:1: ( ( rule__DoFront__AtomAssignment_1 )? )
            // InternalFortXTrans.g:8673:2: ( rule__DoFront__AtomAssignment_1 )?
            {
             before(grammarAccess.getDoFrontAccess().getAtomAssignment_1()); 
            // InternalFortXTrans.g:8674:2: ( rule__DoFront__AtomAssignment_1 )?
            int alt78=2;
            int LA78_0 = input.LA(1);

            if ( (LA78_0==58) ) {
                alt78=1;
            }
            switch (alt78) {
                case 1 :
                    // InternalFortXTrans.g:8674:3: rule__DoFront__AtomAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__DoFront__AtomAssignment_1();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getDoFrontAccess().getAtomAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DoFront__Group__1__Impl"


    // $ANTLR start "rule__DoFront__Group__2"
    // InternalFortXTrans.g:8682:1: rule__DoFront__Group__2 : rule__DoFront__Group__2__Impl rule__DoFront__Group__3 ;
    public final void rule__DoFront__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8686:1: ( rule__DoFront__Group__2__Impl rule__DoFront__Group__3 )
            // InternalFortXTrans.g:8687:2: rule__DoFront__Group__2__Impl rule__DoFront__Group__3
            {
            pushFollow(FOLLOW_32);
            rule__DoFront__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DoFront__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DoFront__Group__2"


    // $ANTLR start "rule__DoFront__Group__2__Impl"
    // InternalFortXTrans.g:8694:1: rule__DoFront__Group__2__Impl : ( 'do' ) ;
    public final void rule__DoFront__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8698:1: ( ( 'do' ) )
            // InternalFortXTrans.g:8699:1: ( 'do' )
            {
            // InternalFortXTrans.g:8699:1: ( 'do' )
            // InternalFortXTrans.g:8700:2: 'do'
            {
             before(grammarAccess.getDoFrontAccess().getDoKeyword_2()); 
            match(input,51,FOLLOW_2); 
             after(grammarAccess.getDoFrontAccess().getDoKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DoFront__Group__2__Impl"


    // $ANTLR start "rule__DoFront__Group__3"
    // InternalFortXTrans.g:8709:1: rule__DoFront__Group__3 : rule__DoFront__Group__3__Impl ;
    public final void rule__DoFront__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8713:1: ( rule__DoFront__Group__3__Impl )
            // InternalFortXTrans.g:8714:2: rule__DoFront__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__DoFront__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DoFront__Group__3"


    // $ANTLR start "rule__DoFront__Group__3__Impl"
    // InternalFortXTrans.g:8720:1: rule__DoFront__Group__3__Impl : ( ( rule__DoFront__BlockAssignment_3 ) ) ;
    public final void rule__DoFront__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8724:1: ( ( ( rule__DoFront__BlockAssignment_3 ) ) )
            // InternalFortXTrans.g:8725:1: ( ( rule__DoFront__BlockAssignment_3 ) )
            {
            // InternalFortXTrans.g:8725:1: ( ( rule__DoFront__BlockAssignment_3 ) )
            // InternalFortXTrans.g:8726:2: ( rule__DoFront__BlockAssignment_3 )
            {
             before(grammarAccess.getDoFrontAccess().getBlockAssignment_3()); 
            // InternalFortXTrans.g:8727:2: ( rule__DoFront__BlockAssignment_3 )
            // InternalFortXTrans.g:8727:3: rule__DoFront__BlockAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__DoFront__BlockAssignment_3();

            state._fsp--;


            }

             after(grammarAccess.getDoFrontAccess().getBlockAssignment_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DoFront__Group__3__Impl"


    // $ANTLR start "rule__DoFront__Group_0__0"
    // InternalFortXTrans.g:8736:1: rule__DoFront__Group_0__0 : rule__DoFront__Group_0__0__Impl rule__DoFront__Group_0__1 ;
    public final void rule__DoFront__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8740:1: ( rule__DoFront__Group_0__0__Impl rule__DoFront__Group_0__1 )
            // InternalFortXTrans.g:8741:2: rule__DoFront__Group_0__0__Impl rule__DoFront__Group_0__1
            {
            pushFollow(FOLLOW_32);
            rule__DoFront__Group_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DoFront__Group_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DoFront__Group_0__0"


    // $ANTLR start "rule__DoFront__Group_0__0__Impl"
    // InternalFortXTrans.g:8748:1: rule__DoFront__Group_0__0__Impl : ( ( rule__DoFront__AtAssignment_0_0 ) ) ;
    public final void rule__DoFront__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8752:1: ( ( ( rule__DoFront__AtAssignment_0_0 ) ) )
            // InternalFortXTrans.g:8753:1: ( ( rule__DoFront__AtAssignment_0_0 ) )
            {
            // InternalFortXTrans.g:8753:1: ( ( rule__DoFront__AtAssignment_0_0 ) )
            // InternalFortXTrans.g:8754:2: ( rule__DoFront__AtAssignment_0_0 )
            {
             before(grammarAccess.getDoFrontAccess().getAtAssignment_0_0()); 
            // InternalFortXTrans.g:8755:2: ( rule__DoFront__AtAssignment_0_0 )
            // InternalFortXTrans.g:8755:3: rule__DoFront__AtAssignment_0_0
            {
            pushFollow(FOLLOW_2);
            rule__DoFront__AtAssignment_0_0();

            state._fsp--;


            }

             after(grammarAccess.getDoFrontAccess().getAtAssignment_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DoFront__Group_0__0__Impl"


    // $ANTLR start "rule__DoFront__Group_0__1"
    // InternalFortXTrans.g:8763:1: rule__DoFront__Group_0__1 : rule__DoFront__Group_0__1__Impl ;
    public final void rule__DoFront__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8767:1: ( rule__DoFront__Group_0__1__Impl )
            // InternalFortXTrans.g:8768:2: rule__DoFront__Group_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__DoFront__Group_0__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DoFront__Group_0__1"


    // $ANTLR start "rule__DoFront__Group_0__1__Impl"
    // InternalFortXTrans.g:8774:1: rule__DoFront__Group_0__1__Impl : ( ( rule__DoFront__ExpAssignment_0_1 ) ) ;
    public final void rule__DoFront__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8778:1: ( ( ( rule__DoFront__ExpAssignment_0_1 ) ) )
            // InternalFortXTrans.g:8779:1: ( ( rule__DoFront__ExpAssignment_0_1 ) )
            {
            // InternalFortXTrans.g:8779:1: ( ( rule__DoFront__ExpAssignment_0_1 ) )
            // InternalFortXTrans.g:8780:2: ( rule__DoFront__ExpAssignment_0_1 )
            {
             before(grammarAccess.getDoFrontAccess().getExpAssignment_0_1()); 
            // InternalFortXTrans.g:8781:2: ( rule__DoFront__ExpAssignment_0_1 )
            // InternalFortXTrans.g:8781:3: rule__DoFront__ExpAssignment_0_1
            {
            pushFollow(FOLLOW_2);
            rule__DoFront__ExpAssignment_0_1();

            state._fsp--;


            }

             after(grammarAccess.getDoFrontAccess().getExpAssignment_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DoFront__Group_0__1__Impl"


    // $ANTLR start "rule__IdOrTuple__Group_1__0"
    // InternalFortXTrans.g:8790:1: rule__IdOrTuple__Group_1__0 : rule__IdOrTuple__Group_1__0__Impl rule__IdOrTuple__Group_1__1 ;
    public final void rule__IdOrTuple__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8794:1: ( rule__IdOrTuple__Group_1__0__Impl rule__IdOrTuple__Group_1__1 )
            // InternalFortXTrans.g:8795:2: rule__IdOrTuple__Group_1__0__Impl rule__IdOrTuple__Group_1__1
            {
            pushFollow(FOLLOW_25);
            rule__IdOrTuple__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__IdOrTuple__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IdOrTuple__Group_1__0"


    // $ANTLR start "rule__IdOrTuple__Group_1__0__Impl"
    // InternalFortXTrans.g:8802:1: rule__IdOrTuple__Group_1__0__Impl : ( '(' ) ;
    public final void rule__IdOrTuple__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8806:1: ( ( '(' ) )
            // InternalFortXTrans.g:8807:1: ( '(' )
            {
            // InternalFortXTrans.g:8807:1: ( '(' )
            // InternalFortXTrans.g:8808:2: '('
            {
             before(grammarAccess.getIdOrTupleAccess().getLeftParenthesisKeyword_1_0()); 
            match(input,35,FOLLOW_2); 
             after(grammarAccess.getIdOrTupleAccess().getLeftParenthesisKeyword_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IdOrTuple__Group_1__0__Impl"


    // $ANTLR start "rule__IdOrTuple__Group_1__1"
    // InternalFortXTrans.g:8817:1: rule__IdOrTuple__Group_1__1 : rule__IdOrTuple__Group_1__1__Impl rule__IdOrTuple__Group_1__2 ;
    public final void rule__IdOrTuple__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8821:1: ( rule__IdOrTuple__Group_1__1__Impl rule__IdOrTuple__Group_1__2 )
            // InternalFortXTrans.g:8822:2: rule__IdOrTuple__Group_1__1__Impl rule__IdOrTuple__Group_1__2
            {
            pushFollow(FOLLOW_22);
            rule__IdOrTuple__Group_1__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__IdOrTuple__Group_1__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IdOrTuple__Group_1__1"


    // $ANTLR start "rule__IdOrTuple__Group_1__1__Impl"
    // InternalFortXTrans.g:8829:1: rule__IdOrTuple__Group_1__1__Impl : ( ( rule__IdOrTuple__BidAssignment_1_1 ) ) ;
    public final void rule__IdOrTuple__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8833:1: ( ( ( rule__IdOrTuple__BidAssignment_1_1 ) ) )
            // InternalFortXTrans.g:8834:1: ( ( rule__IdOrTuple__BidAssignment_1_1 ) )
            {
            // InternalFortXTrans.g:8834:1: ( ( rule__IdOrTuple__BidAssignment_1_1 ) )
            // InternalFortXTrans.g:8835:2: ( rule__IdOrTuple__BidAssignment_1_1 )
            {
             before(grammarAccess.getIdOrTupleAccess().getBidAssignment_1_1()); 
            // InternalFortXTrans.g:8836:2: ( rule__IdOrTuple__BidAssignment_1_1 )
            // InternalFortXTrans.g:8836:3: rule__IdOrTuple__BidAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__IdOrTuple__BidAssignment_1_1();

            state._fsp--;


            }

             after(grammarAccess.getIdOrTupleAccess().getBidAssignment_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IdOrTuple__Group_1__1__Impl"


    // $ANTLR start "rule__IdOrTuple__Group_1__2"
    // InternalFortXTrans.g:8844:1: rule__IdOrTuple__Group_1__2 : rule__IdOrTuple__Group_1__2__Impl rule__IdOrTuple__Group_1__3 ;
    public final void rule__IdOrTuple__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8848:1: ( rule__IdOrTuple__Group_1__2__Impl rule__IdOrTuple__Group_1__3 )
            // InternalFortXTrans.g:8849:2: rule__IdOrTuple__Group_1__2__Impl rule__IdOrTuple__Group_1__3
            {
            pushFollow(FOLLOW_22);
            rule__IdOrTuple__Group_1__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__IdOrTuple__Group_1__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IdOrTuple__Group_1__2"


    // $ANTLR start "rule__IdOrTuple__Group_1__2__Impl"
    // InternalFortXTrans.g:8856:1: rule__IdOrTuple__Group_1__2__Impl : ( ( rule__IdOrTuple__Group_1_2__0 )* ) ;
    public final void rule__IdOrTuple__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8860:1: ( ( ( rule__IdOrTuple__Group_1_2__0 )* ) )
            // InternalFortXTrans.g:8861:1: ( ( rule__IdOrTuple__Group_1_2__0 )* )
            {
            // InternalFortXTrans.g:8861:1: ( ( rule__IdOrTuple__Group_1_2__0 )* )
            // InternalFortXTrans.g:8862:2: ( rule__IdOrTuple__Group_1_2__0 )*
            {
             before(grammarAccess.getIdOrTupleAccess().getGroup_1_2()); 
            // InternalFortXTrans.g:8863:2: ( rule__IdOrTuple__Group_1_2__0 )*
            loop79:
            do {
                int alt79=2;
                int LA79_0 = input.LA(1);

                if ( (LA79_0==31) ) {
                    alt79=1;
                }


                switch (alt79) {
            	case 1 :
            	    // InternalFortXTrans.g:8863:3: rule__IdOrTuple__Group_1_2__0
            	    {
            	    pushFollow(FOLLOW_15);
            	    rule__IdOrTuple__Group_1_2__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop79;
                }
            } while (true);

             after(grammarAccess.getIdOrTupleAccess().getGroup_1_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IdOrTuple__Group_1__2__Impl"


    // $ANTLR start "rule__IdOrTuple__Group_1__3"
    // InternalFortXTrans.g:8871:1: rule__IdOrTuple__Group_1__3 : rule__IdOrTuple__Group_1__3__Impl ;
    public final void rule__IdOrTuple__Group_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8875:1: ( rule__IdOrTuple__Group_1__3__Impl )
            // InternalFortXTrans.g:8876:2: rule__IdOrTuple__Group_1__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__IdOrTuple__Group_1__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IdOrTuple__Group_1__3"


    // $ANTLR start "rule__IdOrTuple__Group_1__3__Impl"
    // InternalFortXTrans.g:8882:1: rule__IdOrTuple__Group_1__3__Impl : ( ')' ) ;
    public final void rule__IdOrTuple__Group_1__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8886:1: ( ( ')' ) )
            // InternalFortXTrans.g:8887:1: ( ')' )
            {
            // InternalFortXTrans.g:8887:1: ( ')' )
            // InternalFortXTrans.g:8888:2: ')'
            {
             before(grammarAccess.getIdOrTupleAccess().getRightParenthesisKeyword_1_3()); 
            match(input,36,FOLLOW_2); 
             after(grammarAccess.getIdOrTupleAccess().getRightParenthesisKeyword_1_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IdOrTuple__Group_1__3__Impl"


    // $ANTLR start "rule__IdOrTuple__Group_1_2__0"
    // InternalFortXTrans.g:8898:1: rule__IdOrTuple__Group_1_2__0 : rule__IdOrTuple__Group_1_2__0__Impl rule__IdOrTuple__Group_1_2__1 ;
    public final void rule__IdOrTuple__Group_1_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8902:1: ( rule__IdOrTuple__Group_1_2__0__Impl rule__IdOrTuple__Group_1_2__1 )
            // InternalFortXTrans.g:8903:2: rule__IdOrTuple__Group_1_2__0__Impl rule__IdOrTuple__Group_1_2__1
            {
            pushFollow(FOLLOW_25);
            rule__IdOrTuple__Group_1_2__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__IdOrTuple__Group_1_2__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IdOrTuple__Group_1_2__0"


    // $ANTLR start "rule__IdOrTuple__Group_1_2__0__Impl"
    // InternalFortXTrans.g:8910:1: rule__IdOrTuple__Group_1_2__0__Impl : ( ',' ) ;
    public final void rule__IdOrTuple__Group_1_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8914:1: ( ( ',' ) )
            // InternalFortXTrans.g:8915:1: ( ',' )
            {
            // InternalFortXTrans.g:8915:1: ( ',' )
            // InternalFortXTrans.g:8916:2: ','
            {
             before(grammarAccess.getIdOrTupleAccess().getCommaKeyword_1_2_0()); 
            match(input,31,FOLLOW_2); 
             after(grammarAccess.getIdOrTupleAccess().getCommaKeyword_1_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IdOrTuple__Group_1_2__0__Impl"


    // $ANTLR start "rule__IdOrTuple__Group_1_2__1"
    // InternalFortXTrans.g:8925:1: rule__IdOrTuple__Group_1_2__1 : rule__IdOrTuple__Group_1_2__1__Impl ;
    public final void rule__IdOrTuple__Group_1_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8929:1: ( rule__IdOrTuple__Group_1_2__1__Impl )
            // InternalFortXTrans.g:8930:2: rule__IdOrTuple__Group_1_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__IdOrTuple__Group_1_2__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IdOrTuple__Group_1_2__1"


    // $ANTLR start "rule__IdOrTuple__Group_1_2__1__Impl"
    // InternalFortXTrans.g:8936:1: rule__IdOrTuple__Group_1_2__1__Impl : ( ( rule__IdOrTuple__BidAssignment_1_2_1 ) ) ;
    public final void rule__IdOrTuple__Group_1_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8940:1: ( ( ( rule__IdOrTuple__BidAssignment_1_2_1 ) ) )
            // InternalFortXTrans.g:8941:1: ( ( rule__IdOrTuple__BidAssignment_1_2_1 ) )
            {
            // InternalFortXTrans.g:8941:1: ( ( rule__IdOrTuple__BidAssignment_1_2_1 ) )
            // InternalFortXTrans.g:8942:2: ( rule__IdOrTuple__BidAssignment_1_2_1 )
            {
             before(grammarAccess.getIdOrTupleAccess().getBidAssignment_1_2_1()); 
            // InternalFortXTrans.g:8943:2: ( rule__IdOrTuple__BidAssignment_1_2_1 )
            // InternalFortXTrans.g:8943:3: rule__IdOrTuple__BidAssignment_1_2_1
            {
            pushFollow(FOLLOW_2);
            rule__IdOrTuple__BidAssignment_1_2_1();

            state._fsp--;


            }

             after(grammarAccess.getIdOrTupleAccess().getBidAssignment_1_2_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IdOrTuple__Group_1_2__1__Impl"


    // $ANTLR start "rule__IsType__Group__0"
    // InternalFortXTrans.g:8952:1: rule__IsType__Group__0 : rule__IsType__Group__0__Impl rule__IsType__Group__1 ;
    public final void rule__IsType__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8956:1: ( rule__IsType__Group__0__Impl rule__IsType__Group__1 )
            // InternalFortXTrans.g:8957:2: rule__IsType__Group__0__Impl rule__IsType__Group__1
            {
            pushFollow(FOLLOW_5);
            rule__IsType__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__IsType__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IsType__Group__0"


    // $ANTLR start "rule__IsType__Group__0__Impl"
    // InternalFortXTrans.g:8964:1: rule__IsType__Group__0__Impl : ( ':' ) ;
    public final void rule__IsType__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8968:1: ( ( ':' ) )
            // InternalFortXTrans.g:8969:1: ( ':' )
            {
            // InternalFortXTrans.g:8969:1: ( ':' )
            // InternalFortXTrans.g:8970:2: ':'
            {
             before(grammarAccess.getIsTypeAccess().getColonKeyword_0()); 
            match(input,37,FOLLOW_2); 
             after(grammarAccess.getIsTypeAccess().getColonKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IsType__Group__0__Impl"


    // $ANTLR start "rule__IsType__Group__1"
    // InternalFortXTrans.g:8979:1: rule__IsType__Group__1 : rule__IsType__Group__1__Impl ;
    public final void rule__IsType__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8983:1: ( rule__IsType__Group__1__Impl )
            // InternalFortXTrans.g:8984:2: rule__IsType__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__IsType__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IsType__Group__1"


    // $ANTLR start "rule__IsType__Group__1__Impl"
    // InternalFortXTrans.g:8990:1: rule__IsType__Group__1__Impl : ( ( rule__IsType__TypeAssignment_1 ) ) ;
    public final void rule__IsType__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8994:1: ( ( ( rule__IsType__TypeAssignment_1 ) ) )
            // InternalFortXTrans.g:8995:1: ( ( rule__IsType__TypeAssignment_1 ) )
            {
            // InternalFortXTrans.g:8995:1: ( ( rule__IsType__TypeAssignment_1 ) )
            // InternalFortXTrans.g:8996:2: ( rule__IsType__TypeAssignment_1 )
            {
             before(grammarAccess.getIsTypeAccess().getTypeAssignment_1()); 
            // InternalFortXTrans.g:8997:2: ( rule__IsType__TypeAssignment_1 )
            // InternalFortXTrans.g:8997:3: rule__IsType__TypeAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__IsType__TypeAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getIsTypeAccess().getTypeAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IsType__Group__1__Impl"


    // $ANTLR start "rule__FieldDecl__Group_0__0"
    // InternalFortXTrans.g:9006:1: rule__FieldDecl__Group_0__0 : rule__FieldDecl__Group_0__0__Impl rule__FieldDecl__Group_0__1 ;
    public final void rule__FieldDecl__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9010:1: ( rule__FieldDecl__Group_0__0__Impl rule__FieldDecl__Group_0__1 )
            // InternalFortXTrans.g:9011:2: rule__FieldDecl__Group_0__0__Impl rule__FieldDecl__Group_0__1
            {
            pushFollow(FOLLOW_68);
            rule__FieldDecl__Group_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__FieldDecl__Group_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_0__0"


    // $ANTLR start "rule__FieldDecl__Group_0__0__Impl"
    // InternalFortXTrans.g:9018:1: rule__FieldDecl__Group_0__0__Impl : ( ( rule__FieldDecl__PriAssignment_0_0 )? ) ;
    public final void rule__FieldDecl__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9022:1: ( ( ( rule__FieldDecl__PriAssignment_0_0 )? ) )
            // InternalFortXTrans.g:9023:1: ( ( rule__FieldDecl__PriAssignment_0_0 )? )
            {
            // InternalFortXTrans.g:9023:1: ( ( rule__FieldDecl__PriAssignment_0_0 )? )
            // InternalFortXTrans.g:9024:2: ( rule__FieldDecl__PriAssignment_0_0 )?
            {
             before(grammarAccess.getFieldDeclAccess().getPriAssignment_0_0()); 
            // InternalFortXTrans.g:9025:2: ( rule__FieldDecl__PriAssignment_0_0 )?
            int alt80=2;
            int LA80_0 = input.LA(1);

            if ( (LA80_0==56) ) {
                alt80=1;
            }
            switch (alt80) {
                case 1 :
                    // InternalFortXTrans.g:9025:3: rule__FieldDecl__PriAssignment_0_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__FieldDecl__PriAssignment_0_0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getFieldDeclAccess().getPriAssignment_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_0__0__Impl"


    // $ANTLR start "rule__FieldDecl__Group_0__1"
    // InternalFortXTrans.g:9033:1: rule__FieldDecl__Group_0__1 : rule__FieldDecl__Group_0__1__Impl rule__FieldDecl__Group_0__2 ;
    public final void rule__FieldDecl__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9037:1: ( rule__FieldDecl__Group_0__1__Impl rule__FieldDecl__Group_0__2 )
            // InternalFortXTrans.g:9038:2: rule__FieldDecl__Group_0__1__Impl rule__FieldDecl__Group_0__2
            {
            pushFollow(FOLLOW_68);
            rule__FieldDecl__Group_0__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__FieldDecl__Group_0__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_0__1"


    // $ANTLR start "rule__FieldDecl__Group_0__1__Impl"
    // InternalFortXTrans.g:9045:1: rule__FieldDecl__Group_0__1__Impl : ( ( rule__FieldDecl__MutAssignment_0_1 )? ) ;
    public final void rule__FieldDecl__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9049:1: ( ( ( rule__FieldDecl__MutAssignment_0_1 )? ) )
            // InternalFortXTrans.g:9050:1: ( ( rule__FieldDecl__MutAssignment_0_1 )? )
            {
            // InternalFortXTrans.g:9050:1: ( ( rule__FieldDecl__MutAssignment_0_1 )? )
            // InternalFortXTrans.g:9051:2: ( rule__FieldDecl__MutAssignment_0_1 )?
            {
             before(grammarAccess.getFieldDeclAccess().getMutAssignment_0_1()); 
            // InternalFortXTrans.g:9052:2: ( rule__FieldDecl__MutAssignment_0_1 )?
            int alt81=2;
            int LA81_0 = input.LA(1);

            if ( (LA81_0==68) ) {
                alt81=1;
            }
            switch (alt81) {
                case 1 :
                    // InternalFortXTrans.g:9052:3: rule__FieldDecl__MutAssignment_0_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__FieldDecl__MutAssignment_0_1();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getFieldDeclAccess().getMutAssignment_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_0__1__Impl"


    // $ANTLR start "rule__FieldDecl__Group_0__2"
    // InternalFortXTrans.g:9060:1: rule__FieldDecl__Group_0__2 : rule__FieldDecl__Group_0__2__Impl rule__FieldDecl__Group_0__3 ;
    public final void rule__FieldDecl__Group_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9064:1: ( rule__FieldDecl__Group_0__2__Impl rule__FieldDecl__Group_0__3 )
            // InternalFortXTrans.g:9065:2: rule__FieldDecl__Group_0__2__Impl rule__FieldDecl__Group_0__3
            {
            pushFollow(FOLLOW_69);
            rule__FieldDecl__Group_0__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__FieldDecl__Group_0__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_0__2"


    // $ANTLR start "rule__FieldDecl__Group_0__2__Impl"
    // InternalFortXTrans.g:9072:1: rule__FieldDecl__Group_0__2__Impl : ( ( rule__FieldDecl__VarsAssignment_0_2 ) ) ;
    public final void rule__FieldDecl__Group_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9076:1: ( ( ( rule__FieldDecl__VarsAssignment_0_2 ) ) )
            // InternalFortXTrans.g:9077:1: ( ( rule__FieldDecl__VarsAssignment_0_2 ) )
            {
            // InternalFortXTrans.g:9077:1: ( ( rule__FieldDecl__VarsAssignment_0_2 ) )
            // InternalFortXTrans.g:9078:2: ( rule__FieldDecl__VarsAssignment_0_2 )
            {
             before(grammarAccess.getFieldDeclAccess().getVarsAssignment_0_2()); 
            // InternalFortXTrans.g:9079:2: ( rule__FieldDecl__VarsAssignment_0_2 )
            // InternalFortXTrans.g:9079:3: rule__FieldDecl__VarsAssignment_0_2
            {
            pushFollow(FOLLOW_2);
            rule__FieldDecl__VarsAssignment_0_2();

            state._fsp--;


            }

             after(grammarAccess.getFieldDeclAccess().getVarsAssignment_0_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_0__2__Impl"


    // $ANTLR start "rule__FieldDecl__Group_0__3"
    // InternalFortXTrans.g:9087:1: rule__FieldDecl__Group_0__3 : rule__FieldDecl__Group_0__3__Impl ;
    public final void rule__FieldDecl__Group_0__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9091:1: ( rule__FieldDecl__Group_0__3__Impl )
            // InternalFortXTrans.g:9092:2: rule__FieldDecl__Group_0__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FieldDecl__Group_0__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_0__3"


    // $ANTLR start "rule__FieldDecl__Group_0__3__Impl"
    // InternalFortXTrans.g:9098:1: rule__FieldDecl__Group_0__3__Impl : ( ( rule__FieldDecl__InitAssignment_0_3 ) ) ;
    public final void rule__FieldDecl__Group_0__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9102:1: ( ( ( rule__FieldDecl__InitAssignment_0_3 ) ) )
            // InternalFortXTrans.g:9103:1: ( ( rule__FieldDecl__InitAssignment_0_3 ) )
            {
            // InternalFortXTrans.g:9103:1: ( ( rule__FieldDecl__InitAssignment_0_3 ) )
            // InternalFortXTrans.g:9104:2: ( rule__FieldDecl__InitAssignment_0_3 )
            {
             before(grammarAccess.getFieldDeclAccess().getInitAssignment_0_3()); 
            // InternalFortXTrans.g:9105:2: ( rule__FieldDecl__InitAssignment_0_3 )
            // InternalFortXTrans.g:9105:3: rule__FieldDecl__InitAssignment_0_3
            {
            pushFollow(FOLLOW_2);
            rule__FieldDecl__InitAssignment_0_3();

            state._fsp--;


            }

             after(grammarAccess.getFieldDeclAccess().getInitAssignment_0_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_0__3__Impl"


    // $ANTLR start "rule__FieldDecl__Group_1__0"
    // InternalFortXTrans.g:9114:1: rule__FieldDecl__Group_1__0 : rule__FieldDecl__Group_1__0__Impl rule__FieldDecl__Group_1__1 ;
    public final void rule__FieldDecl__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9118:1: ( rule__FieldDecl__Group_1__0__Impl rule__FieldDecl__Group_1__1 )
            // InternalFortXTrans.g:9119:2: rule__FieldDecl__Group_1__0__Impl rule__FieldDecl__Group_1__1
            {
            pushFollow(FOLLOW_56);
            rule__FieldDecl__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__FieldDecl__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_1__0"


    // $ANTLR start "rule__FieldDecl__Group_1__0__Impl"
    // InternalFortXTrans.g:9126:1: rule__FieldDecl__Group_1__0__Impl : ( ( rule__FieldDecl__PriAssignment_1_0 )? ) ;
    public final void rule__FieldDecl__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9130:1: ( ( ( rule__FieldDecl__PriAssignment_1_0 )? ) )
            // InternalFortXTrans.g:9131:1: ( ( rule__FieldDecl__PriAssignment_1_0 )? )
            {
            // InternalFortXTrans.g:9131:1: ( ( rule__FieldDecl__PriAssignment_1_0 )? )
            // InternalFortXTrans.g:9132:2: ( rule__FieldDecl__PriAssignment_1_0 )?
            {
             before(grammarAccess.getFieldDeclAccess().getPriAssignment_1_0()); 
            // InternalFortXTrans.g:9133:2: ( rule__FieldDecl__PriAssignment_1_0 )?
            int alt82=2;
            int LA82_0 = input.LA(1);

            if ( (LA82_0==56) ) {
                alt82=1;
            }
            switch (alt82) {
                case 1 :
                    // InternalFortXTrans.g:9133:3: rule__FieldDecl__PriAssignment_1_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__FieldDecl__PriAssignment_1_0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getFieldDeclAccess().getPriAssignment_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_1__0__Impl"


    // $ANTLR start "rule__FieldDecl__Group_1__1"
    // InternalFortXTrans.g:9141:1: rule__FieldDecl__Group_1__1 : rule__FieldDecl__Group_1__1__Impl rule__FieldDecl__Group_1__2 ;
    public final void rule__FieldDecl__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9145:1: ( rule__FieldDecl__Group_1__1__Impl rule__FieldDecl__Group_1__2 )
            // InternalFortXTrans.g:9146:2: rule__FieldDecl__Group_1__1__Impl rule__FieldDecl__Group_1__2
            {
            pushFollow(FOLLOW_70);
            rule__FieldDecl__Group_1__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__FieldDecl__Group_1__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_1__1"


    // $ANTLR start "rule__FieldDecl__Group_1__1__Impl"
    // InternalFortXTrans.g:9153:1: rule__FieldDecl__Group_1__1__Impl : ( ( rule__FieldDecl__IdtupAssignment_1_1 ) ) ;
    public final void rule__FieldDecl__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9157:1: ( ( ( rule__FieldDecl__IdtupAssignment_1_1 ) ) )
            // InternalFortXTrans.g:9158:1: ( ( rule__FieldDecl__IdtupAssignment_1_1 ) )
            {
            // InternalFortXTrans.g:9158:1: ( ( rule__FieldDecl__IdtupAssignment_1_1 ) )
            // InternalFortXTrans.g:9159:2: ( rule__FieldDecl__IdtupAssignment_1_1 )
            {
             before(grammarAccess.getFieldDeclAccess().getIdtupAssignment_1_1()); 
            // InternalFortXTrans.g:9160:2: ( rule__FieldDecl__IdtupAssignment_1_1 )
            // InternalFortXTrans.g:9160:3: rule__FieldDecl__IdtupAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__FieldDecl__IdtupAssignment_1_1();

            state._fsp--;


            }

             after(grammarAccess.getFieldDeclAccess().getIdtupAssignment_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_1__1__Impl"


    // $ANTLR start "rule__FieldDecl__Group_1__2"
    // InternalFortXTrans.g:9168:1: rule__FieldDecl__Group_1__2 : rule__FieldDecl__Group_1__2__Impl rule__FieldDecl__Group_1__3 ;
    public final void rule__FieldDecl__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9172:1: ( rule__FieldDecl__Group_1__2__Impl rule__FieldDecl__Group_1__3 )
            // InternalFortXTrans.g:9173:2: rule__FieldDecl__Group_1__2__Impl rule__FieldDecl__Group_1__3
            {
            pushFollow(FOLLOW_71);
            rule__FieldDecl__Group_1__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__FieldDecl__Group_1__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_1__2"


    // $ANTLR start "rule__FieldDecl__Group_1__2__Impl"
    // InternalFortXTrans.g:9180:1: rule__FieldDecl__Group_1__2__Impl : ( '=' ) ;
    public final void rule__FieldDecl__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9184:1: ( ( '=' ) )
            // InternalFortXTrans.g:9185:1: ( '=' )
            {
            // InternalFortXTrans.g:9185:1: ( '=' )
            // InternalFortXTrans.g:9186:2: '='
            {
             before(grammarAccess.getFieldDeclAccess().getEqualsSignKeyword_1_2()); 
            match(input,52,FOLLOW_2); 
             after(grammarAccess.getFieldDeclAccess().getEqualsSignKeyword_1_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_1__2__Impl"


    // $ANTLR start "rule__FieldDecl__Group_1__3"
    // InternalFortXTrans.g:9195:1: rule__FieldDecl__Group_1__3 : rule__FieldDecl__Group_1__3__Impl ;
    public final void rule__FieldDecl__Group_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9199:1: ( rule__FieldDecl__Group_1__3__Impl )
            // InternalFortXTrans.g:9200:2: rule__FieldDecl__Group_1__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FieldDecl__Group_1__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_1__3"


    // $ANTLR start "rule__FieldDecl__Group_1__3__Impl"
    // InternalFortXTrans.g:9206:1: rule__FieldDecl__Group_1__3__Impl : ( ( rule__FieldDecl__LitTupAssignment_1_3 ) ) ;
    public final void rule__FieldDecl__Group_1__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9210:1: ( ( ( rule__FieldDecl__LitTupAssignment_1_3 ) ) )
            // InternalFortXTrans.g:9211:1: ( ( rule__FieldDecl__LitTupAssignment_1_3 ) )
            {
            // InternalFortXTrans.g:9211:1: ( ( rule__FieldDecl__LitTupAssignment_1_3 ) )
            // InternalFortXTrans.g:9212:2: ( rule__FieldDecl__LitTupAssignment_1_3 )
            {
             before(grammarAccess.getFieldDeclAccess().getLitTupAssignment_1_3()); 
            // InternalFortXTrans.g:9213:2: ( rule__FieldDecl__LitTupAssignment_1_3 )
            // InternalFortXTrans.g:9213:3: rule__FieldDecl__LitTupAssignment_1_3
            {
            pushFollow(FOLLOW_2);
            rule__FieldDecl__LitTupAssignment_1_3();

            state._fsp--;


            }

             after(grammarAccess.getFieldDeclAccess().getLitTupAssignment_1_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_1__3__Impl"


    // $ANTLR start "rule__FieldDecl__Group_2__0"
    // InternalFortXTrans.g:9222:1: rule__FieldDecl__Group_2__0 : rule__FieldDecl__Group_2__0__Impl rule__FieldDecl__Group_2__1 ;
    public final void rule__FieldDecl__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9226:1: ( rule__FieldDecl__Group_2__0__Impl rule__FieldDecl__Group_2__1 )
            // InternalFortXTrans.g:9227:2: rule__FieldDecl__Group_2__0__Impl rule__FieldDecl__Group_2__1
            {
            pushFollow(FOLLOW_68);
            rule__FieldDecl__Group_2__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__FieldDecl__Group_2__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_2__0"


    // $ANTLR start "rule__FieldDecl__Group_2__0__Impl"
    // InternalFortXTrans.g:9234:1: rule__FieldDecl__Group_2__0__Impl : ( ( rule__FieldDecl__PriAssignment_2_0 )? ) ;
    public final void rule__FieldDecl__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9238:1: ( ( ( rule__FieldDecl__PriAssignment_2_0 )? ) )
            // InternalFortXTrans.g:9239:1: ( ( rule__FieldDecl__PriAssignment_2_0 )? )
            {
            // InternalFortXTrans.g:9239:1: ( ( rule__FieldDecl__PriAssignment_2_0 )? )
            // InternalFortXTrans.g:9240:2: ( rule__FieldDecl__PriAssignment_2_0 )?
            {
             before(grammarAccess.getFieldDeclAccess().getPriAssignment_2_0()); 
            // InternalFortXTrans.g:9241:2: ( rule__FieldDecl__PriAssignment_2_0 )?
            int alt83=2;
            int LA83_0 = input.LA(1);

            if ( (LA83_0==56) ) {
                alt83=1;
            }
            switch (alt83) {
                case 1 :
                    // InternalFortXTrans.g:9241:3: rule__FieldDecl__PriAssignment_2_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__FieldDecl__PriAssignment_2_0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getFieldDeclAccess().getPriAssignment_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_2__0__Impl"


    // $ANTLR start "rule__FieldDecl__Group_2__1"
    // InternalFortXTrans.g:9249:1: rule__FieldDecl__Group_2__1 : rule__FieldDecl__Group_2__1__Impl rule__FieldDecl__Group_2__2 ;
    public final void rule__FieldDecl__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9253:1: ( rule__FieldDecl__Group_2__1__Impl rule__FieldDecl__Group_2__2 )
            // InternalFortXTrans.g:9254:2: rule__FieldDecl__Group_2__1__Impl rule__FieldDecl__Group_2__2
            {
            pushFollow(FOLLOW_68);
            rule__FieldDecl__Group_2__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__FieldDecl__Group_2__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_2__1"


    // $ANTLR start "rule__FieldDecl__Group_2__1__Impl"
    // InternalFortXTrans.g:9261:1: rule__FieldDecl__Group_2__1__Impl : ( ( rule__FieldDecl__MutAssignment_2_1 )? ) ;
    public final void rule__FieldDecl__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9265:1: ( ( ( rule__FieldDecl__MutAssignment_2_1 )? ) )
            // InternalFortXTrans.g:9266:1: ( ( rule__FieldDecl__MutAssignment_2_1 )? )
            {
            // InternalFortXTrans.g:9266:1: ( ( rule__FieldDecl__MutAssignment_2_1 )? )
            // InternalFortXTrans.g:9267:2: ( rule__FieldDecl__MutAssignment_2_1 )?
            {
             before(grammarAccess.getFieldDeclAccess().getMutAssignment_2_1()); 
            // InternalFortXTrans.g:9268:2: ( rule__FieldDecl__MutAssignment_2_1 )?
            int alt84=2;
            int LA84_0 = input.LA(1);

            if ( (LA84_0==68) ) {
                alt84=1;
            }
            switch (alt84) {
                case 1 :
                    // InternalFortXTrans.g:9268:3: rule__FieldDecl__MutAssignment_2_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__FieldDecl__MutAssignment_2_1();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getFieldDeclAccess().getMutAssignment_2_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_2__1__Impl"


    // $ANTLR start "rule__FieldDecl__Group_2__2"
    // InternalFortXTrans.g:9276:1: rule__FieldDecl__Group_2__2 : rule__FieldDecl__Group_2__2__Impl rule__FieldDecl__Group_2__3 ;
    public final void rule__FieldDecl__Group_2__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9280:1: ( rule__FieldDecl__Group_2__2__Impl rule__FieldDecl__Group_2__3 )
            // InternalFortXTrans.g:9281:2: rule__FieldDecl__Group_2__2__Impl rule__FieldDecl__Group_2__3
            {
            pushFollow(FOLLOW_26);
            rule__FieldDecl__Group_2__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__FieldDecl__Group_2__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_2__2"


    // $ANTLR start "rule__FieldDecl__Group_2__2__Impl"
    // InternalFortXTrans.g:9288:1: rule__FieldDecl__Group_2__2__Impl : ( ( rule__FieldDecl__IdtupAssignment_2_2 ) ) ;
    public final void rule__FieldDecl__Group_2__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9292:1: ( ( ( rule__FieldDecl__IdtupAssignment_2_2 ) ) )
            // InternalFortXTrans.g:9293:1: ( ( rule__FieldDecl__IdtupAssignment_2_2 ) )
            {
            // InternalFortXTrans.g:9293:1: ( ( rule__FieldDecl__IdtupAssignment_2_2 ) )
            // InternalFortXTrans.g:9294:2: ( rule__FieldDecl__IdtupAssignment_2_2 )
            {
             before(grammarAccess.getFieldDeclAccess().getIdtupAssignment_2_2()); 
            // InternalFortXTrans.g:9295:2: ( rule__FieldDecl__IdtupAssignment_2_2 )
            // InternalFortXTrans.g:9295:3: rule__FieldDecl__IdtupAssignment_2_2
            {
            pushFollow(FOLLOW_2);
            rule__FieldDecl__IdtupAssignment_2_2();

            state._fsp--;


            }

             after(grammarAccess.getFieldDeclAccess().getIdtupAssignment_2_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_2__2__Impl"


    // $ANTLR start "rule__FieldDecl__Group_2__3"
    // InternalFortXTrans.g:9303:1: rule__FieldDecl__Group_2__3 : rule__FieldDecl__Group_2__3__Impl rule__FieldDecl__Group_2__4 ;
    public final void rule__FieldDecl__Group_2__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9307:1: ( rule__FieldDecl__Group_2__3__Impl rule__FieldDecl__Group_2__4 )
            // InternalFortXTrans.g:9308:2: rule__FieldDecl__Group_2__3__Impl rule__FieldDecl__Group_2__4
            {
            pushFollow(FOLLOW_5);
            rule__FieldDecl__Group_2__3__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__FieldDecl__Group_2__4();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_2__3"


    // $ANTLR start "rule__FieldDecl__Group_2__3__Impl"
    // InternalFortXTrans.g:9315:1: rule__FieldDecl__Group_2__3__Impl : ( ':' ) ;
    public final void rule__FieldDecl__Group_2__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9319:1: ( ( ':' ) )
            // InternalFortXTrans.g:9320:1: ( ':' )
            {
            // InternalFortXTrans.g:9320:1: ( ':' )
            // InternalFortXTrans.g:9321:2: ':'
            {
             before(grammarAccess.getFieldDeclAccess().getColonKeyword_2_3()); 
            match(input,37,FOLLOW_2); 
             after(grammarAccess.getFieldDeclAccess().getColonKeyword_2_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_2__3__Impl"


    // $ANTLR start "rule__FieldDecl__Group_2__4"
    // InternalFortXTrans.g:9330:1: rule__FieldDecl__Group_2__4 : rule__FieldDecl__Group_2__4__Impl rule__FieldDecl__Group_2__5 ;
    public final void rule__FieldDecl__Group_2__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9334:1: ( rule__FieldDecl__Group_2__4__Impl rule__FieldDecl__Group_2__5 )
            // InternalFortXTrans.g:9335:2: rule__FieldDecl__Group_2__4__Impl rule__FieldDecl__Group_2__5
            {
            pushFollow(FOLLOW_17);
            rule__FieldDecl__Group_2__4__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__FieldDecl__Group_2__5();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_2__4"


    // $ANTLR start "rule__FieldDecl__Group_2__4__Impl"
    // InternalFortXTrans.g:9342:1: rule__FieldDecl__Group_2__4__Impl : ( ( rule__FieldDecl__TypeAssignment_2_4 ) ) ;
    public final void rule__FieldDecl__Group_2__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9346:1: ( ( ( rule__FieldDecl__TypeAssignment_2_4 ) ) )
            // InternalFortXTrans.g:9347:1: ( ( rule__FieldDecl__TypeAssignment_2_4 ) )
            {
            // InternalFortXTrans.g:9347:1: ( ( rule__FieldDecl__TypeAssignment_2_4 ) )
            // InternalFortXTrans.g:9348:2: ( rule__FieldDecl__TypeAssignment_2_4 )
            {
             before(grammarAccess.getFieldDeclAccess().getTypeAssignment_2_4()); 
            // InternalFortXTrans.g:9349:2: ( rule__FieldDecl__TypeAssignment_2_4 )
            // InternalFortXTrans.g:9349:3: rule__FieldDecl__TypeAssignment_2_4
            {
            pushFollow(FOLLOW_2);
            rule__FieldDecl__TypeAssignment_2_4();

            state._fsp--;


            }

             after(grammarAccess.getFieldDeclAccess().getTypeAssignment_2_4()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_2__4__Impl"


    // $ANTLR start "rule__FieldDecl__Group_2__5"
    // InternalFortXTrans.g:9357:1: rule__FieldDecl__Group_2__5 : rule__FieldDecl__Group_2__5__Impl rule__FieldDecl__Group_2__6 ;
    public final void rule__FieldDecl__Group_2__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9361:1: ( rule__FieldDecl__Group_2__5__Impl rule__FieldDecl__Group_2__6 )
            // InternalFortXTrans.g:9362:2: rule__FieldDecl__Group_2__5__Impl rule__FieldDecl__Group_2__6
            {
            pushFollow(FOLLOW_69);
            rule__FieldDecl__Group_2__5__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__FieldDecl__Group_2__6();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_2__5"


    // $ANTLR start "rule__FieldDecl__Group_2__5__Impl"
    // InternalFortXTrans.g:9369:1: rule__FieldDecl__Group_2__5__Impl : ( RULE_DOTS ) ;
    public final void rule__FieldDecl__Group_2__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9373:1: ( ( RULE_DOTS ) )
            // InternalFortXTrans.g:9374:1: ( RULE_DOTS )
            {
            // InternalFortXTrans.g:9374:1: ( RULE_DOTS )
            // InternalFortXTrans.g:9375:2: RULE_DOTS
            {
             before(grammarAccess.getFieldDeclAccess().getDOTSTerminalRuleCall_2_5()); 
            match(input,RULE_DOTS,FOLLOW_2); 
             after(grammarAccess.getFieldDeclAccess().getDOTSTerminalRuleCall_2_5()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_2__5__Impl"


    // $ANTLR start "rule__FieldDecl__Group_2__6"
    // InternalFortXTrans.g:9384:1: rule__FieldDecl__Group_2__6 : rule__FieldDecl__Group_2__6__Impl ;
    public final void rule__FieldDecl__Group_2__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9388:1: ( rule__FieldDecl__Group_2__6__Impl )
            // InternalFortXTrans.g:9389:2: rule__FieldDecl__Group_2__6__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FieldDecl__Group_2__6__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_2__6"


    // $ANTLR start "rule__FieldDecl__Group_2__6__Impl"
    // InternalFortXTrans.g:9395:1: rule__FieldDecl__Group_2__6__Impl : ( ( rule__FieldDecl__InitAssignment_2_6 ) ) ;
    public final void rule__FieldDecl__Group_2__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9399:1: ( ( ( rule__FieldDecl__InitAssignment_2_6 ) ) )
            // InternalFortXTrans.g:9400:1: ( ( rule__FieldDecl__InitAssignment_2_6 ) )
            {
            // InternalFortXTrans.g:9400:1: ( ( rule__FieldDecl__InitAssignment_2_6 ) )
            // InternalFortXTrans.g:9401:2: ( rule__FieldDecl__InitAssignment_2_6 )
            {
             before(grammarAccess.getFieldDeclAccess().getInitAssignment_2_6()); 
            // InternalFortXTrans.g:9402:2: ( rule__FieldDecl__InitAssignment_2_6 )
            // InternalFortXTrans.g:9402:3: rule__FieldDecl__InitAssignment_2_6
            {
            pushFollow(FOLLOW_2);
            rule__FieldDecl__InitAssignment_2_6();

            state._fsp--;


            }

             after(grammarAccess.getFieldDeclAccess().getInitAssignment_2_6()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_2__6__Impl"


    // $ANTLR start "rule__FieldDecl__Group_3__0"
    // InternalFortXTrans.g:9411:1: rule__FieldDecl__Group_3__0 : rule__FieldDecl__Group_3__0__Impl rule__FieldDecl__Group_3__1 ;
    public final void rule__FieldDecl__Group_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9415:1: ( rule__FieldDecl__Group_3__0__Impl rule__FieldDecl__Group_3__1 )
            // InternalFortXTrans.g:9416:2: rule__FieldDecl__Group_3__0__Impl rule__FieldDecl__Group_3__1
            {
            pushFollow(FOLLOW_72);
            rule__FieldDecl__Group_3__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__FieldDecl__Group_3__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_3__0"


    // $ANTLR start "rule__FieldDecl__Group_3__0__Impl"
    // InternalFortXTrans.g:9423:1: rule__FieldDecl__Group_3__0__Impl : ( ( rule__FieldDecl__PriAssignment_3_0 )? ) ;
    public final void rule__FieldDecl__Group_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9427:1: ( ( ( rule__FieldDecl__PriAssignment_3_0 )? ) )
            // InternalFortXTrans.g:9428:1: ( ( rule__FieldDecl__PriAssignment_3_0 )? )
            {
            // InternalFortXTrans.g:9428:1: ( ( rule__FieldDecl__PriAssignment_3_0 )? )
            // InternalFortXTrans.g:9429:2: ( rule__FieldDecl__PriAssignment_3_0 )?
            {
             before(grammarAccess.getFieldDeclAccess().getPriAssignment_3_0()); 
            // InternalFortXTrans.g:9430:2: ( rule__FieldDecl__PriAssignment_3_0 )?
            int alt85=2;
            int LA85_0 = input.LA(1);

            if ( (LA85_0==56) ) {
                alt85=1;
            }
            switch (alt85) {
                case 1 :
                    // InternalFortXTrans.g:9430:3: rule__FieldDecl__PriAssignment_3_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__FieldDecl__PriAssignment_3_0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getFieldDeclAccess().getPriAssignment_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_3__0__Impl"


    // $ANTLR start "rule__FieldDecl__Group_3__1"
    // InternalFortXTrans.g:9438:1: rule__FieldDecl__Group_3__1 : rule__FieldDecl__Group_3__1__Impl rule__FieldDecl__Group_3__2 ;
    public final void rule__FieldDecl__Group_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9442:1: ( rule__FieldDecl__Group_3__1__Impl rule__FieldDecl__Group_3__2 )
            // InternalFortXTrans.g:9443:2: rule__FieldDecl__Group_3__1__Impl rule__FieldDecl__Group_3__2
            {
            pushFollow(FOLLOW_72);
            rule__FieldDecl__Group_3__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__FieldDecl__Group_3__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_3__1"


    // $ANTLR start "rule__FieldDecl__Group_3__1__Impl"
    // InternalFortXTrans.g:9450:1: rule__FieldDecl__Group_3__1__Impl : ( ( rule__FieldDecl__MutAssignment_3_1 )? ) ;
    public final void rule__FieldDecl__Group_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9454:1: ( ( ( rule__FieldDecl__MutAssignment_3_1 )? ) )
            // InternalFortXTrans.g:9455:1: ( ( rule__FieldDecl__MutAssignment_3_1 )? )
            {
            // InternalFortXTrans.g:9455:1: ( ( rule__FieldDecl__MutAssignment_3_1 )? )
            // InternalFortXTrans.g:9456:2: ( rule__FieldDecl__MutAssignment_3_1 )?
            {
             before(grammarAccess.getFieldDeclAccess().getMutAssignment_3_1()); 
            // InternalFortXTrans.g:9457:2: ( rule__FieldDecl__MutAssignment_3_1 )?
            int alt86=2;
            int LA86_0 = input.LA(1);

            if ( (LA86_0==68) ) {
                alt86=1;
            }
            switch (alt86) {
                case 1 :
                    // InternalFortXTrans.g:9457:3: rule__FieldDecl__MutAssignment_3_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__FieldDecl__MutAssignment_3_1();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getFieldDeclAccess().getMutAssignment_3_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_3__1__Impl"


    // $ANTLR start "rule__FieldDecl__Group_3__2"
    // InternalFortXTrans.g:9465:1: rule__FieldDecl__Group_3__2 : rule__FieldDecl__Group_3__2__Impl rule__FieldDecl__Group_3__3 ;
    public final void rule__FieldDecl__Group_3__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9469:1: ( rule__FieldDecl__Group_3__2__Impl rule__FieldDecl__Group_3__3 )
            // InternalFortXTrans.g:9470:2: rule__FieldDecl__Group_3__2__Impl rule__FieldDecl__Group_3__3
            {
            pushFollow(FOLLOW_26);
            rule__FieldDecl__Group_3__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__FieldDecl__Group_3__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_3__2"


    // $ANTLR start "rule__FieldDecl__Group_3__2__Impl"
    // InternalFortXTrans.g:9477:1: rule__FieldDecl__Group_3__2__Impl : ( ( rule__FieldDecl__IdtupAssignment_3_2 ) ) ;
    public final void rule__FieldDecl__Group_3__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9481:1: ( ( ( rule__FieldDecl__IdtupAssignment_3_2 ) ) )
            // InternalFortXTrans.g:9482:1: ( ( rule__FieldDecl__IdtupAssignment_3_2 ) )
            {
            // InternalFortXTrans.g:9482:1: ( ( rule__FieldDecl__IdtupAssignment_3_2 ) )
            // InternalFortXTrans.g:9483:2: ( rule__FieldDecl__IdtupAssignment_3_2 )
            {
             before(grammarAccess.getFieldDeclAccess().getIdtupAssignment_3_2()); 
            // InternalFortXTrans.g:9484:2: ( rule__FieldDecl__IdtupAssignment_3_2 )
            // InternalFortXTrans.g:9484:3: rule__FieldDecl__IdtupAssignment_3_2
            {
            pushFollow(FOLLOW_2);
            rule__FieldDecl__IdtupAssignment_3_2();

            state._fsp--;


            }

             after(grammarAccess.getFieldDeclAccess().getIdtupAssignment_3_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_3__2__Impl"


    // $ANTLR start "rule__FieldDecl__Group_3__3"
    // InternalFortXTrans.g:9492:1: rule__FieldDecl__Group_3__3 : rule__FieldDecl__Group_3__3__Impl rule__FieldDecl__Group_3__4 ;
    public final void rule__FieldDecl__Group_3__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9496:1: ( rule__FieldDecl__Group_3__3__Impl rule__FieldDecl__Group_3__4 )
            // InternalFortXTrans.g:9497:2: rule__FieldDecl__Group_3__3__Impl rule__FieldDecl__Group_3__4
            {
            pushFollow(FOLLOW_27);
            rule__FieldDecl__Group_3__3__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__FieldDecl__Group_3__4();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_3__3"


    // $ANTLR start "rule__FieldDecl__Group_3__3__Impl"
    // InternalFortXTrans.g:9504:1: rule__FieldDecl__Group_3__3__Impl : ( ':' ) ;
    public final void rule__FieldDecl__Group_3__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9508:1: ( ( ':' ) )
            // InternalFortXTrans.g:9509:1: ( ':' )
            {
            // InternalFortXTrans.g:9509:1: ( ':' )
            // InternalFortXTrans.g:9510:2: ':'
            {
             before(grammarAccess.getFieldDeclAccess().getColonKeyword_3_3()); 
            match(input,37,FOLLOW_2); 
             after(grammarAccess.getFieldDeclAccess().getColonKeyword_3_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_3__3__Impl"


    // $ANTLR start "rule__FieldDecl__Group_3__4"
    // InternalFortXTrans.g:9519:1: rule__FieldDecl__Group_3__4 : rule__FieldDecl__Group_3__4__Impl rule__FieldDecl__Group_3__5 ;
    public final void rule__FieldDecl__Group_3__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9523:1: ( rule__FieldDecl__Group_3__4__Impl rule__FieldDecl__Group_3__5 )
            // InternalFortXTrans.g:9524:2: rule__FieldDecl__Group_3__4__Impl rule__FieldDecl__Group_3__5
            {
            pushFollow(FOLLOW_69);
            rule__FieldDecl__Group_3__4__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__FieldDecl__Group_3__5();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_3__4"


    // $ANTLR start "rule__FieldDecl__Group_3__4__Impl"
    // InternalFortXTrans.g:9531:1: rule__FieldDecl__Group_3__4__Impl : ( ( rule__FieldDecl__TuptypeAssignment_3_4 ) ) ;
    public final void rule__FieldDecl__Group_3__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9535:1: ( ( ( rule__FieldDecl__TuptypeAssignment_3_4 ) ) )
            // InternalFortXTrans.g:9536:1: ( ( rule__FieldDecl__TuptypeAssignment_3_4 ) )
            {
            // InternalFortXTrans.g:9536:1: ( ( rule__FieldDecl__TuptypeAssignment_3_4 ) )
            // InternalFortXTrans.g:9537:2: ( rule__FieldDecl__TuptypeAssignment_3_4 )
            {
             before(grammarAccess.getFieldDeclAccess().getTuptypeAssignment_3_4()); 
            // InternalFortXTrans.g:9538:2: ( rule__FieldDecl__TuptypeAssignment_3_4 )
            // InternalFortXTrans.g:9538:3: rule__FieldDecl__TuptypeAssignment_3_4
            {
            pushFollow(FOLLOW_2);
            rule__FieldDecl__TuptypeAssignment_3_4();

            state._fsp--;


            }

             after(grammarAccess.getFieldDeclAccess().getTuptypeAssignment_3_4()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_3__4__Impl"


    // $ANTLR start "rule__FieldDecl__Group_3__5"
    // InternalFortXTrans.g:9546:1: rule__FieldDecl__Group_3__5 : rule__FieldDecl__Group_3__5__Impl ;
    public final void rule__FieldDecl__Group_3__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9550:1: ( rule__FieldDecl__Group_3__5__Impl )
            // InternalFortXTrans.g:9551:2: rule__FieldDecl__Group_3__5__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FieldDecl__Group_3__5__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_3__5"


    // $ANTLR start "rule__FieldDecl__Group_3__5__Impl"
    // InternalFortXTrans.g:9557:1: rule__FieldDecl__Group_3__5__Impl : ( ( rule__FieldDecl__InitAssignment_3_5 ) ) ;
    public final void rule__FieldDecl__Group_3__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9561:1: ( ( ( rule__FieldDecl__InitAssignment_3_5 ) ) )
            // InternalFortXTrans.g:9562:1: ( ( rule__FieldDecl__InitAssignment_3_5 ) )
            {
            // InternalFortXTrans.g:9562:1: ( ( rule__FieldDecl__InitAssignment_3_5 ) )
            // InternalFortXTrans.g:9563:2: ( rule__FieldDecl__InitAssignment_3_5 )
            {
             before(grammarAccess.getFieldDeclAccess().getInitAssignment_3_5()); 
            // InternalFortXTrans.g:9564:2: ( rule__FieldDecl__InitAssignment_3_5 )
            // InternalFortXTrans.g:9564:3: rule__FieldDecl__InitAssignment_3_5
            {
            pushFollow(FOLLOW_2);
            rule__FieldDecl__InitAssignment_3_5();

            state._fsp--;


            }

             after(grammarAccess.getFieldDeclAccess().getInitAssignment_3_5()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_3__5__Impl"


    // $ANTLR start "rule__NoNewlineVarWTypes__Group_1__0"
    // InternalFortXTrans.g:9573:1: rule__NoNewlineVarWTypes__Group_1__0 : rule__NoNewlineVarWTypes__Group_1__0__Impl rule__NoNewlineVarWTypes__Group_1__1 ;
    public final void rule__NoNewlineVarWTypes__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9577:1: ( rule__NoNewlineVarWTypes__Group_1__0__Impl rule__NoNewlineVarWTypes__Group_1__1 )
            // InternalFortXTrans.g:9578:2: rule__NoNewlineVarWTypes__Group_1__0__Impl rule__NoNewlineVarWTypes__Group_1__1
            {
            pushFollow(FOLLOW_25);
            rule__NoNewlineVarWTypes__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__NoNewlineVarWTypes__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NoNewlineVarWTypes__Group_1__0"


    // $ANTLR start "rule__NoNewlineVarWTypes__Group_1__0__Impl"
    // InternalFortXTrans.g:9585:1: rule__NoNewlineVarWTypes__Group_1__0__Impl : ( '(' ) ;
    public final void rule__NoNewlineVarWTypes__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9589:1: ( ( '(' ) )
            // InternalFortXTrans.g:9590:1: ( '(' )
            {
            // InternalFortXTrans.g:9590:1: ( '(' )
            // InternalFortXTrans.g:9591:2: '('
            {
             before(grammarAccess.getNoNewlineVarWTypesAccess().getLeftParenthesisKeyword_1_0()); 
            match(input,35,FOLLOW_2); 
             after(grammarAccess.getNoNewlineVarWTypesAccess().getLeftParenthesisKeyword_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NoNewlineVarWTypes__Group_1__0__Impl"


    // $ANTLR start "rule__NoNewlineVarWTypes__Group_1__1"
    // InternalFortXTrans.g:9600:1: rule__NoNewlineVarWTypes__Group_1__1 : rule__NoNewlineVarWTypes__Group_1__1__Impl rule__NoNewlineVarWTypes__Group_1__2 ;
    public final void rule__NoNewlineVarWTypes__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9604:1: ( rule__NoNewlineVarWTypes__Group_1__1__Impl rule__NoNewlineVarWTypes__Group_1__2 )
            // InternalFortXTrans.g:9605:2: rule__NoNewlineVarWTypes__Group_1__1__Impl rule__NoNewlineVarWTypes__Group_1__2
            {
            pushFollow(FOLLOW_24);
            rule__NoNewlineVarWTypes__Group_1__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__NoNewlineVarWTypes__Group_1__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NoNewlineVarWTypes__Group_1__1"


    // $ANTLR start "rule__NoNewlineVarWTypes__Group_1__1__Impl"
    // InternalFortXTrans.g:9612:1: rule__NoNewlineVarWTypes__Group_1__1__Impl : ( ( rule__NoNewlineVarWTypes__MultipleAssignment_1_1 ) ) ;
    public final void rule__NoNewlineVarWTypes__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9616:1: ( ( ( rule__NoNewlineVarWTypes__MultipleAssignment_1_1 ) ) )
            // InternalFortXTrans.g:9617:1: ( ( rule__NoNewlineVarWTypes__MultipleAssignment_1_1 ) )
            {
            // InternalFortXTrans.g:9617:1: ( ( rule__NoNewlineVarWTypes__MultipleAssignment_1_1 ) )
            // InternalFortXTrans.g:9618:2: ( rule__NoNewlineVarWTypes__MultipleAssignment_1_1 )
            {
             before(grammarAccess.getNoNewlineVarWTypesAccess().getMultipleAssignment_1_1()); 
            // InternalFortXTrans.g:9619:2: ( rule__NoNewlineVarWTypes__MultipleAssignment_1_1 )
            // InternalFortXTrans.g:9619:3: rule__NoNewlineVarWTypes__MultipleAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__NoNewlineVarWTypes__MultipleAssignment_1_1();

            state._fsp--;


            }

             after(grammarAccess.getNoNewlineVarWTypesAccess().getMultipleAssignment_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NoNewlineVarWTypes__Group_1__1__Impl"


    // $ANTLR start "rule__NoNewlineVarWTypes__Group_1__2"
    // InternalFortXTrans.g:9627:1: rule__NoNewlineVarWTypes__Group_1__2 : rule__NoNewlineVarWTypes__Group_1__2__Impl rule__NoNewlineVarWTypes__Group_1__3 ;
    public final void rule__NoNewlineVarWTypes__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9631:1: ( rule__NoNewlineVarWTypes__Group_1__2__Impl rule__NoNewlineVarWTypes__Group_1__3 )
            // InternalFortXTrans.g:9632:2: rule__NoNewlineVarWTypes__Group_1__2__Impl rule__NoNewlineVarWTypes__Group_1__3
            {
            pushFollow(FOLLOW_28);
            rule__NoNewlineVarWTypes__Group_1__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__NoNewlineVarWTypes__Group_1__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NoNewlineVarWTypes__Group_1__2"


    // $ANTLR start "rule__NoNewlineVarWTypes__Group_1__2__Impl"
    // InternalFortXTrans.g:9639:1: rule__NoNewlineVarWTypes__Group_1__2__Impl : ( ( ( rule__NoNewlineVarWTypes__Group_1_2__0 ) ) ( ( rule__NoNewlineVarWTypes__Group_1_2__0 )* ) ) ;
    public final void rule__NoNewlineVarWTypes__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9643:1: ( ( ( ( rule__NoNewlineVarWTypes__Group_1_2__0 ) ) ( ( rule__NoNewlineVarWTypes__Group_1_2__0 )* ) ) )
            // InternalFortXTrans.g:9644:1: ( ( ( rule__NoNewlineVarWTypes__Group_1_2__0 ) ) ( ( rule__NoNewlineVarWTypes__Group_1_2__0 )* ) )
            {
            // InternalFortXTrans.g:9644:1: ( ( ( rule__NoNewlineVarWTypes__Group_1_2__0 ) ) ( ( rule__NoNewlineVarWTypes__Group_1_2__0 )* ) )
            // InternalFortXTrans.g:9645:2: ( ( rule__NoNewlineVarWTypes__Group_1_2__0 ) ) ( ( rule__NoNewlineVarWTypes__Group_1_2__0 )* )
            {
            // InternalFortXTrans.g:9645:2: ( ( rule__NoNewlineVarWTypes__Group_1_2__0 ) )
            // InternalFortXTrans.g:9646:3: ( rule__NoNewlineVarWTypes__Group_1_2__0 )
            {
             before(grammarAccess.getNoNewlineVarWTypesAccess().getGroup_1_2()); 
            // InternalFortXTrans.g:9647:3: ( rule__NoNewlineVarWTypes__Group_1_2__0 )
            // InternalFortXTrans.g:9647:4: rule__NoNewlineVarWTypes__Group_1_2__0
            {
            pushFollow(FOLLOW_15);
            rule__NoNewlineVarWTypes__Group_1_2__0();

            state._fsp--;


            }

             after(grammarAccess.getNoNewlineVarWTypesAccess().getGroup_1_2()); 

            }

            // InternalFortXTrans.g:9650:2: ( ( rule__NoNewlineVarWTypes__Group_1_2__0 )* )
            // InternalFortXTrans.g:9651:3: ( rule__NoNewlineVarWTypes__Group_1_2__0 )*
            {
             before(grammarAccess.getNoNewlineVarWTypesAccess().getGroup_1_2()); 
            // InternalFortXTrans.g:9652:3: ( rule__NoNewlineVarWTypes__Group_1_2__0 )*
            loop87:
            do {
                int alt87=2;
                int LA87_0 = input.LA(1);

                if ( (LA87_0==31) ) {
                    alt87=1;
                }


                switch (alt87) {
            	case 1 :
            	    // InternalFortXTrans.g:9652:4: rule__NoNewlineVarWTypes__Group_1_2__0
            	    {
            	    pushFollow(FOLLOW_15);
            	    rule__NoNewlineVarWTypes__Group_1_2__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop87;
                }
            } while (true);

             after(grammarAccess.getNoNewlineVarWTypesAccess().getGroup_1_2()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NoNewlineVarWTypes__Group_1__2__Impl"


    // $ANTLR start "rule__NoNewlineVarWTypes__Group_1__3"
    // InternalFortXTrans.g:9661:1: rule__NoNewlineVarWTypes__Group_1__3 : rule__NoNewlineVarWTypes__Group_1__3__Impl ;
    public final void rule__NoNewlineVarWTypes__Group_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9665:1: ( rule__NoNewlineVarWTypes__Group_1__3__Impl )
            // InternalFortXTrans.g:9666:2: rule__NoNewlineVarWTypes__Group_1__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__NoNewlineVarWTypes__Group_1__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NoNewlineVarWTypes__Group_1__3"


    // $ANTLR start "rule__NoNewlineVarWTypes__Group_1__3__Impl"
    // InternalFortXTrans.g:9672:1: rule__NoNewlineVarWTypes__Group_1__3__Impl : ( ')' ) ;
    public final void rule__NoNewlineVarWTypes__Group_1__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9676:1: ( ( ')' ) )
            // InternalFortXTrans.g:9677:1: ( ')' )
            {
            // InternalFortXTrans.g:9677:1: ( ')' )
            // InternalFortXTrans.g:9678:2: ')'
            {
             before(grammarAccess.getNoNewlineVarWTypesAccess().getRightParenthesisKeyword_1_3()); 
            match(input,36,FOLLOW_2); 
             after(grammarAccess.getNoNewlineVarWTypesAccess().getRightParenthesisKeyword_1_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NoNewlineVarWTypes__Group_1__3__Impl"


    // $ANTLR start "rule__NoNewlineVarWTypes__Group_1_2__0"
    // InternalFortXTrans.g:9688:1: rule__NoNewlineVarWTypes__Group_1_2__0 : rule__NoNewlineVarWTypes__Group_1_2__0__Impl rule__NoNewlineVarWTypes__Group_1_2__1 ;
    public final void rule__NoNewlineVarWTypes__Group_1_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9692:1: ( rule__NoNewlineVarWTypes__Group_1_2__0__Impl rule__NoNewlineVarWTypes__Group_1_2__1 )
            // InternalFortXTrans.g:9693:2: rule__NoNewlineVarWTypes__Group_1_2__0__Impl rule__NoNewlineVarWTypes__Group_1_2__1
            {
            pushFollow(FOLLOW_25);
            rule__NoNewlineVarWTypes__Group_1_2__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__NoNewlineVarWTypes__Group_1_2__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NoNewlineVarWTypes__Group_1_2__0"


    // $ANTLR start "rule__NoNewlineVarWTypes__Group_1_2__0__Impl"
    // InternalFortXTrans.g:9700:1: rule__NoNewlineVarWTypes__Group_1_2__0__Impl : ( ',' ) ;
    public final void rule__NoNewlineVarWTypes__Group_1_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9704:1: ( ( ',' ) )
            // InternalFortXTrans.g:9705:1: ( ',' )
            {
            // InternalFortXTrans.g:9705:1: ( ',' )
            // InternalFortXTrans.g:9706:2: ','
            {
             before(grammarAccess.getNoNewlineVarWTypesAccess().getCommaKeyword_1_2_0()); 
            match(input,31,FOLLOW_2); 
             after(grammarAccess.getNoNewlineVarWTypesAccess().getCommaKeyword_1_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NoNewlineVarWTypes__Group_1_2__0__Impl"


    // $ANTLR start "rule__NoNewlineVarWTypes__Group_1_2__1"
    // InternalFortXTrans.g:9715:1: rule__NoNewlineVarWTypes__Group_1_2__1 : rule__NoNewlineVarWTypes__Group_1_2__1__Impl ;
    public final void rule__NoNewlineVarWTypes__Group_1_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9719:1: ( rule__NoNewlineVarWTypes__Group_1_2__1__Impl )
            // InternalFortXTrans.g:9720:2: rule__NoNewlineVarWTypes__Group_1_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__NoNewlineVarWTypes__Group_1_2__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NoNewlineVarWTypes__Group_1_2__1"


    // $ANTLR start "rule__NoNewlineVarWTypes__Group_1_2__1__Impl"
    // InternalFortXTrans.g:9726:1: rule__NoNewlineVarWTypes__Group_1_2__1__Impl : ( ( rule__NoNewlineVarWTypes__MultipleAssignment_1_2_1 ) ) ;
    public final void rule__NoNewlineVarWTypes__Group_1_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9730:1: ( ( ( rule__NoNewlineVarWTypes__MultipleAssignment_1_2_1 ) ) )
            // InternalFortXTrans.g:9731:1: ( ( rule__NoNewlineVarWTypes__MultipleAssignment_1_2_1 ) )
            {
            // InternalFortXTrans.g:9731:1: ( ( rule__NoNewlineVarWTypes__MultipleAssignment_1_2_1 ) )
            // InternalFortXTrans.g:9732:2: ( rule__NoNewlineVarWTypes__MultipleAssignment_1_2_1 )
            {
             before(grammarAccess.getNoNewlineVarWTypesAccess().getMultipleAssignment_1_2_1()); 
            // InternalFortXTrans.g:9733:2: ( rule__NoNewlineVarWTypes__MultipleAssignment_1_2_1 )
            // InternalFortXTrans.g:9733:3: rule__NoNewlineVarWTypes__MultipleAssignment_1_2_1
            {
            pushFollow(FOLLOW_2);
            rule__NoNewlineVarWTypes__MultipleAssignment_1_2_1();

            state._fsp--;


            }

             after(grammarAccess.getNoNewlineVarWTypesAccess().getMultipleAssignment_1_2_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NoNewlineVarWTypes__Group_1_2__1__Impl"


    // $ANTLR start "rule__NoNewlineVarWType__Group__0"
    // InternalFortXTrans.g:9742:1: rule__NoNewlineVarWType__Group__0 : rule__NoNewlineVarWType__Group__0__Impl rule__NoNewlineVarWType__Group__1 ;
    public final void rule__NoNewlineVarWType__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9746:1: ( rule__NoNewlineVarWType__Group__0__Impl rule__NoNewlineVarWType__Group__1 )
            // InternalFortXTrans.g:9747:2: rule__NoNewlineVarWType__Group__0__Impl rule__NoNewlineVarWType__Group__1
            {
            pushFollow(FOLLOW_26);
            rule__NoNewlineVarWType__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__NoNewlineVarWType__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NoNewlineVarWType__Group__0"


    // $ANTLR start "rule__NoNewlineVarWType__Group__0__Impl"
    // InternalFortXTrans.g:9754:1: rule__NoNewlineVarWType__Group__0__Impl : ( ( rule__NoNewlineVarWType__BidAssignment_0 ) ) ;
    public final void rule__NoNewlineVarWType__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9758:1: ( ( ( rule__NoNewlineVarWType__BidAssignment_0 ) ) )
            // InternalFortXTrans.g:9759:1: ( ( rule__NoNewlineVarWType__BidAssignment_0 ) )
            {
            // InternalFortXTrans.g:9759:1: ( ( rule__NoNewlineVarWType__BidAssignment_0 ) )
            // InternalFortXTrans.g:9760:2: ( rule__NoNewlineVarWType__BidAssignment_0 )
            {
             before(grammarAccess.getNoNewlineVarWTypeAccess().getBidAssignment_0()); 
            // InternalFortXTrans.g:9761:2: ( rule__NoNewlineVarWType__BidAssignment_0 )
            // InternalFortXTrans.g:9761:3: rule__NoNewlineVarWType__BidAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__NoNewlineVarWType__BidAssignment_0();

            state._fsp--;


            }

             after(grammarAccess.getNoNewlineVarWTypeAccess().getBidAssignment_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NoNewlineVarWType__Group__0__Impl"


    // $ANTLR start "rule__NoNewlineVarWType__Group__1"
    // InternalFortXTrans.g:9769:1: rule__NoNewlineVarWType__Group__1 : rule__NoNewlineVarWType__Group__1__Impl ;
    public final void rule__NoNewlineVarWType__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9773:1: ( rule__NoNewlineVarWType__Group__1__Impl )
            // InternalFortXTrans.g:9774:2: rule__NoNewlineVarWType__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__NoNewlineVarWType__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NoNewlineVarWType__Group__1"


    // $ANTLR start "rule__NoNewlineVarWType__Group__1__Impl"
    // InternalFortXTrans.g:9780:1: rule__NoNewlineVarWType__Group__1__Impl : ( ( rule__NoNewlineVarWType__IstypeAssignment_1 ) ) ;
    public final void rule__NoNewlineVarWType__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9784:1: ( ( ( rule__NoNewlineVarWType__IstypeAssignment_1 ) ) )
            // InternalFortXTrans.g:9785:1: ( ( rule__NoNewlineVarWType__IstypeAssignment_1 ) )
            {
            // InternalFortXTrans.g:9785:1: ( ( rule__NoNewlineVarWType__IstypeAssignment_1 ) )
            // InternalFortXTrans.g:9786:2: ( rule__NoNewlineVarWType__IstypeAssignment_1 )
            {
             before(grammarAccess.getNoNewlineVarWTypeAccess().getIstypeAssignment_1()); 
            // InternalFortXTrans.g:9787:2: ( rule__NoNewlineVarWType__IstypeAssignment_1 )
            // InternalFortXTrans.g:9787:3: rule__NoNewlineVarWType__IstypeAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__NoNewlineVarWType__IstypeAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getNoNewlineVarWTypeAccess().getIstypeAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NoNewlineVarWType__Group__1__Impl"


    // $ANTLR start "rule__InitVal__Group_0__0"
    // InternalFortXTrans.g:9796:1: rule__InitVal__Group_0__0 : rule__InitVal__Group_0__0__Impl rule__InitVal__Group_0__1 ;
    public final void rule__InitVal__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9800:1: ( rule__InitVal__Group_0__0__Impl rule__InitVal__Group_0__1 )
            // InternalFortXTrans.g:9801:2: rule__InitVal__Group_0__0__Impl rule__InitVal__Group_0__1
            {
            pushFollow(FOLLOW_71);
            rule__InitVal__Group_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__InitVal__Group_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InitVal__Group_0__0"


    // $ANTLR start "rule__InitVal__Group_0__0__Impl"
    // InternalFortXTrans.g:9808:1: rule__InitVal__Group_0__0__Impl : ( ( rule__InitVal__MutAssignment_0_0 ) ) ;
    public final void rule__InitVal__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9812:1: ( ( ( rule__InitVal__MutAssignment_0_0 ) ) )
            // InternalFortXTrans.g:9813:1: ( ( rule__InitVal__MutAssignment_0_0 ) )
            {
            // InternalFortXTrans.g:9813:1: ( ( rule__InitVal__MutAssignment_0_0 ) )
            // InternalFortXTrans.g:9814:2: ( rule__InitVal__MutAssignment_0_0 )
            {
             before(grammarAccess.getInitValAccess().getMutAssignment_0_0()); 
            // InternalFortXTrans.g:9815:2: ( rule__InitVal__MutAssignment_0_0 )
            // InternalFortXTrans.g:9815:3: rule__InitVal__MutAssignment_0_0
            {
            pushFollow(FOLLOW_2);
            rule__InitVal__MutAssignment_0_0();

            state._fsp--;


            }

             after(grammarAccess.getInitValAccess().getMutAssignment_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InitVal__Group_0__0__Impl"


    // $ANTLR start "rule__InitVal__Group_0__1"
    // InternalFortXTrans.g:9823:1: rule__InitVal__Group_0__1 : rule__InitVal__Group_0__1__Impl ;
    public final void rule__InitVal__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9827:1: ( rule__InitVal__Group_0__1__Impl )
            // InternalFortXTrans.g:9828:2: rule__InitVal__Group_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__InitVal__Group_0__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InitVal__Group_0__1"


    // $ANTLR start "rule__InitVal__Group_0__1__Impl"
    // InternalFortXTrans.g:9834:1: rule__InitVal__Group_0__1__Impl : ( ( rule__InitVal__LitAssignment_0_1 ) ) ;
    public final void rule__InitVal__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9838:1: ( ( ( rule__InitVal__LitAssignment_0_1 ) ) )
            // InternalFortXTrans.g:9839:1: ( ( rule__InitVal__LitAssignment_0_1 ) )
            {
            // InternalFortXTrans.g:9839:1: ( ( rule__InitVal__LitAssignment_0_1 ) )
            // InternalFortXTrans.g:9840:2: ( rule__InitVal__LitAssignment_0_1 )
            {
             before(grammarAccess.getInitValAccess().getLitAssignment_0_1()); 
            // InternalFortXTrans.g:9841:2: ( rule__InitVal__LitAssignment_0_1 )
            // InternalFortXTrans.g:9841:3: rule__InitVal__LitAssignment_0_1
            {
            pushFollow(FOLLOW_2);
            rule__InitVal__LitAssignment_0_1();

            state._fsp--;


            }

             after(grammarAccess.getInitValAccess().getLitAssignment_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InitVal__Group_0__1__Impl"


    // $ANTLR start "rule__InitVal__Group_1__0"
    // InternalFortXTrans.g:9850:1: rule__InitVal__Group_1__0 : rule__InitVal__Group_1__0__Impl rule__InitVal__Group_1__1 ;
    public final void rule__InitVal__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9854:1: ( rule__InitVal__Group_1__0__Impl rule__InitVal__Group_1__1 )
            // InternalFortXTrans.g:9855:2: rule__InitVal__Group_1__0__Impl rule__InitVal__Group_1__1
            {
            pushFollow(FOLLOW_71);
            rule__InitVal__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__InitVal__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InitVal__Group_1__0"


    // $ANTLR start "rule__InitVal__Group_1__0__Impl"
    // InternalFortXTrans.g:9862:1: rule__InitVal__Group_1__0__Impl : ( ( rule__InitVal__ImmutAssignment_1_0 ) ) ;
    public final void rule__InitVal__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9866:1: ( ( ( rule__InitVal__ImmutAssignment_1_0 ) ) )
            // InternalFortXTrans.g:9867:1: ( ( rule__InitVal__ImmutAssignment_1_0 ) )
            {
            // InternalFortXTrans.g:9867:1: ( ( rule__InitVal__ImmutAssignment_1_0 ) )
            // InternalFortXTrans.g:9868:2: ( rule__InitVal__ImmutAssignment_1_0 )
            {
             before(grammarAccess.getInitValAccess().getImmutAssignment_1_0()); 
            // InternalFortXTrans.g:9869:2: ( rule__InitVal__ImmutAssignment_1_0 )
            // InternalFortXTrans.g:9869:3: rule__InitVal__ImmutAssignment_1_0
            {
            pushFollow(FOLLOW_2);
            rule__InitVal__ImmutAssignment_1_0();

            state._fsp--;


            }

             after(grammarAccess.getInitValAccess().getImmutAssignment_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InitVal__Group_1__0__Impl"


    // $ANTLR start "rule__InitVal__Group_1__1"
    // InternalFortXTrans.g:9877:1: rule__InitVal__Group_1__1 : rule__InitVal__Group_1__1__Impl ;
    public final void rule__InitVal__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9881:1: ( rule__InitVal__Group_1__1__Impl )
            // InternalFortXTrans.g:9882:2: rule__InitVal__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__InitVal__Group_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InitVal__Group_1__1"


    // $ANTLR start "rule__InitVal__Group_1__1__Impl"
    // InternalFortXTrans.g:9888:1: rule__InitVal__Group_1__1__Impl : ( ( rule__InitVal__LitAssignment_1_1 ) ) ;
    public final void rule__InitVal__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9892:1: ( ( ( rule__InitVal__LitAssignment_1_1 ) ) )
            // InternalFortXTrans.g:9893:1: ( ( rule__InitVal__LitAssignment_1_1 ) )
            {
            // InternalFortXTrans.g:9893:1: ( ( rule__InitVal__LitAssignment_1_1 ) )
            // InternalFortXTrans.g:9894:2: ( rule__InitVal__LitAssignment_1_1 )
            {
             before(grammarAccess.getInitValAccess().getLitAssignment_1_1()); 
            // InternalFortXTrans.g:9895:2: ( rule__InitVal__LitAssignment_1_1 )
            // InternalFortXTrans.g:9895:3: rule__InitVal__LitAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__InitVal__LitAssignment_1_1();

            state._fsp--;


            }

             after(grammarAccess.getInitValAccess().getLitAssignment_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InitVal__Group_1__1__Impl"


    // $ANTLR start "rule__LiteralList__Group__0"
    // InternalFortXTrans.g:9904:1: rule__LiteralList__Group__0 : rule__LiteralList__Group__0__Impl rule__LiteralList__Group__1 ;
    public final void rule__LiteralList__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9908:1: ( rule__LiteralList__Group__0__Impl rule__LiteralList__Group__1 )
            // InternalFortXTrans.g:9909:2: rule__LiteralList__Group__0__Impl rule__LiteralList__Group__1
            {
            pushFollow(FOLLOW_73);
            rule__LiteralList__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__LiteralList__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralList__Group__0"


    // $ANTLR start "rule__LiteralList__Group__0__Impl"
    // InternalFortXTrans.g:9916:1: rule__LiteralList__Group__0__Impl : ( '(' ) ;
    public final void rule__LiteralList__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9920:1: ( ( '(' ) )
            // InternalFortXTrans.g:9921:1: ( '(' )
            {
            // InternalFortXTrans.g:9921:1: ( '(' )
            // InternalFortXTrans.g:9922:2: '('
            {
             before(grammarAccess.getLiteralListAccess().getLeftParenthesisKeyword_0()); 
            match(input,35,FOLLOW_2); 
             after(grammarAccess.getLiteralListAccess().getLeftParenthesisKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralList__Group__0__Impl"


    // $ANTLR start "rule__LiteralList__Group__1"
    // InternalFortXTrans.g:9931:1: rule__LiteralList__Group__1 : rule__LiteralList__Group__1__Impl rule__LiteralList__Group__2 ;
    public final void rule__LiteralList__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9935:1: ( rule__LiteralList__Group__1__Impl rule__LiteralList__Group__2 )
            // InternalFortXTrans.g:9936:2: rule__LiteralList__Group__1__Impl rule__LiteralList__Group__2
            {
            pushFollow(FOLLOW_22);
            rule__LiteralList__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__LiteralList__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralList__Group__1"


    // $ANTLR start "rule__LiteralList__Group__1__Impl"
    // InternalFortXTrans.g:9943:1: rule__LiteralList__Group__1__Impl : ( ( rule__LiteralList__LitAssignment_1 ) ) ;
    public final void rule__LiteralList__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9947:1: ( ( ( rule__LiteralList__LitAssignment_1 ) ) )
            // InternalFortXTrans.g:9948:1: ( ( rule__LiteralList__LitAssignment_1 ) )
            {
            // InternalFortXTrans.g:9948:1: ( ( rule__LiteralList__LitAssignment_1 ) )
            // InternalFortXTrans.g:9949:2: ( rule__LiteralList__LitAssignment_1 )
            {
             before(grammarAccess.getLiteralListAccess().getLitAssignment_1()); 
            // InternalFortXTrans.g:9950:2: ( rule__LiteralList__LitAssignment_1 )
            // InternalFortXTrans.g:9950:3: rule__LiteralList__LitAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__LiteralList__LitAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getLiteralListAccess().getLitAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralList__Group__1__Impl"


    // $ANTLR start "rule__LiteralList__Group__2"
    // InternalFortXTrans.g:9958:1: rule__LiteralList__Group__2 : rule__LiteralList__Group__2__Impl rule__LiteralList__Group__3 ;
    public final void rule__LiteralList__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9962:1: ( rule__LiteralList__Group__2__Impl rule__LiteralList__Group__3 )
            // InternalFortXTrans.g:9963:2: rule__LiteralList__Group__2__Impl rule__LiteralList__Group__3
            {
            pushFollow(FOLLOW_22);
            rule__LiteralList__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__LiteralList__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralList__Group__2"


    // $ANTLR start "rule__LiteralList__Group__2__Impl"
    // InternalFortXTrans.g:9970:1: rule__LiteralList__Group__2__Impl : ( ( rule__LiteralList__Group_2__0 )* ) ;
    public final void rule__LiteralList__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9974:1: ( ( ( rule__LiteralList__Group_2__0 )* ) )
            // InternalFortXTrans.g:9975:1: ( ( rule__LiteralList__Group_2__0 )* )
            {
            // InternalFortXTrans.g:9975:1: ( ( rule__LiteralList__Group_2__0 )* )
            // InternalFortXTrans.g:9976:2: ( rule__LiteralList__Group_2__0 )*
            {
             before(grammarAccess.getLiteralListAccess().getGroup_2()); 
            // InternalFortXTrans.g:9977:2: ( rule__LiteralList__Group_2__0 )*
            loop88:
            do {
                int alt88=2;
                int LA88_0 = input.LA(1);

                if ( (LA88_0==31) ) {
                    alt88=1;
                }


                switch (alt88) {
            	case 1 :
            	    // InternalFortXTrans.g:9977:3: rule__LiteralList__Group_2__0
            	    {
            	    pushFollow(FOLLOW_15);
            	    rule__LiteralList__Group_2__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop88;
                }
            } while (true);

             after(grammarAccess.getLiteralListAccess().getGroup_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralList__Group__2__Impl"


    // $ANTLR start "rule__LiteralList__Group__3"
    // InternalFortXTrans.g:9985:1: rule__LiteralList__Group__3 : rule__LiteralList__Group__3__Impl ;
    public final void rule__LiteralList__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9989:1: ( rule__LiteralList__Group__3__Impl )
            // InternalFortXTrans.g:9990:2: rule__LiteralList__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__LiteralList__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralList__Group__3"


    // $ANTLR start "rule__LiteralList__Group__3__Impl"
    // InternalFortXTrans.g:9996:1: rule__LiteralList__Group__3__Impl : ( ')' ) ;
    public final void rule__LiteralList__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10000:1: ( ( ')' ) )
            // InternalFortXTrans.g:10001:1: ( ')' )
            {
            // InternalFortXTrans.g:10001:1: ( ')' )
            // InternalFortXTrans.g:10002:2: ')'
            {
             before(grammarAccess.getLiteralListAccess().getRightParenthesisKeyword_3()); 
            match(input,36,FOLLOW_2); 
             after(grammarAccess.getLiteralListAccess().getRightParenthesisKeyword_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralList__Group__3__Impl"


    // $ANTLR start "rule__LiteralList__Group_2__0"
    // InternalFortXTrans.g:10012:1: rule__LiteralList__Group_2__0 : rule__LiteralList__Group_2__0__Impl rule__LiteralList__Group_2__1 ;
    public final void rule__LiteralList__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10016:1: ( rule__LiteralList__Group_2__0__Impl rule__LiteralList__Group_2__1 )
            // InternalFortXTrans.g:10017:2: rule__LiteralList__Group_2__0__Impl rule__LiteralList__Group_2__1
            {
            pushFollow(FOLLOW_73);
            rule__LiteralList__Group_2__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__LiteralList__Group_2__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralList__Group_2__0"


    // $ANTLR start "rule__LiteralList__Group_2__0__Impl"
    // InternalFortXTrans.g:10024:1: rule__LiteralList__Group_2__0__Impl : ( ',' ) ;
    public final void rule__LiteralList__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10028:1: ( ( ',' ) )
            // InternalFortXTrans.g:10029:1: ( ',' )
            {
            // InternalFortXTrans.g:10029:1: ( ',' )
            // InternalFortXTrans.g:10030:2: ','
            {
             before(grammarAccess.getLiteralListAccess().getCommaKeyword_2_0()); 
            match(input,31,FOLLOW_2); 
             after(grammarAccess.getLiteralListAccess().getCommaKeyword_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralList__Group_2__0__Impl"


    // $ANTLR start "rule__LiteralList__Group_2__1"
    // InternalFortXTrans.g:10039:1: rule__LiteralList__Group_2__1 : rule__LiteralList__Group_2__1__Impl ;
    public final void rule__LiteralList__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10043:1: ( rule__LiteralList__Group_2__1__Impl )
            // InternalFortXTrans.g:10044:2: rule__LiteralList__Group_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__LiteralList__Group_2__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralList__Group_2__1"


    // $ANTLR start "rule__LiteralList__Group_2__1__Impl"
    // InternalFortXTrans.g:10050:1: rule__LiteralList__Group_2__1__Impl : ( ( rule__LiteralList__LitAssignment_2_1 ) ) ;
    public final void rule__LiteralList__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10054:1: ( ( ( rule__LiteralList__LitAssignment_2_1 ) ) )
            // InternalFortXTrans.g:10055:1: ( ( rule__LiteralList__LitAssignment_2_1 ) )
            {
            // InternalFortXTrans.g:10055:1: ( ( rule__LiteralList__LitAssignment_2_1 ) )
            // InternalFortXTrans.g:10056:2: ( rule__LiteralList__LitAssignment_2_1 )
            {
             before(grammarAccess.getLiteralListAccess().getLitAssignment_2_1()); 
            // InternalFortXTrans.g:10057:2: ( rule__LiteralList__LitAssignment_2_1 )
            // InternalFortXTrans.g:10057:3: rule__LiteralList__LitAssignment_2_1
            {
            pushFollow(FOLLOW_2);
            rule__LiteralList__LitAssignment_2_1();

            state._fsp--;


            }

             after(grammarAccess.getLiteralListAccess().getLitAssignment_2_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralList__Group_2__1__Impl"


    // $ANTLR start "rule__Literal__Group_0__0"
    // InternalFortXTrans.g:10066:1: rule__Literal__Group_0__0 : rule__Literal__Group_0__0__Impl rule__Literal__Group_0__1 ;
    public final void rule__Literal__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10070:1: ( rule__Literal__Group_0__0__Impl rule__Literal__Group_0__1 )
            // InternalFortXTrans.g:10071:2: rule__Literal__Group_0__0__Impl rule__Literal__Group_0__1
            {
            pushFollow(FOLLOW_74);
            rule__Literal__Group_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Literal__Group_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Literal__Group_0__0"


    // $ANTLR start "rule__Literal__Group_0__0__Impl"
    // InternalFortXTrans.g:10078:1: rule__Literal__Group_0__0__Impl : ( () ) ;
    public final void rule__Literal__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10082:1: ( ( () ) )
            // InternalFortXTrans.g:10083:1: ( () )
            {
            // InternalFortXTrans.g:10083:1: ( () )
            // InternalFortXTrans.g:10084:2: ()
            {
             before(grammarAccess.getLiteralAccess().getIntConstAction_0_0()); 
            // InternalFortXTrans.g:10085:2: ()
            // InternalFortXTrans.g:10085:3: 
            {
            }

             after(grammarAccess.getLiteralAccess().getIntConstAction_0_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Literal__Group_0__0__Impl"


    // $ANTLR start "rule__Literal__Group_0__1"
    // InternalFortXTrans.g:10093:1: rule__Literal__Group_0__1 : rule__Literal__Group_0__1__Impl ;
    public final void rule__Literal__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10097:1: ( rule__Literal__Group_0__1__Impl )
            // InternalFortXTrans.g:10098:2: rule__Literal__Group_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Literal__Group_0__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Literal__Group_0__1"


    // $ANTLR start "rule__Literal__Group_0__1__Impl"
    // InternalFortXTrans.g:10104:1: rule__Literal__Group_0__1__Impl : ( ( rule__Literal__ValueAssignment_0_1 ) ) ;
    public final void rule__Literal__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10108:1: ( ( ( rule__Literal__ValueAssignment_0_1 ) ) )
            // InternalFortXTrans.g:10109:1: ( ( rule__Literal__ValueAssignment_0_1 ) )
            {
            // InternalFortXTrans.g:10109:1: ( ( rule__Literal__ValueAssignment_0_1 ) )
            // InternalFortXTrans.g:10110:2: ( rule__Literal__ValueAssignment_0_1 )
            {
             before(grammarAccess.getLiteralAccess().getValueAssignment_0_1()); 
            // InternalFortXTrans.g:10111:2: ( rule__Literal__ValueAssignment_0_1 )
            // InternalFortXTrans.g:10111:3: rule__Literal__ValueAssignment_0_1
            {
            pushFollow(FOLLOW_2);
            rule__Literal__ValueAssignment_0_1();

            state._fsp--;


            }

             after(grammarAccess.getLiteralAccess().getValueAssignment_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Literal__Group_0__1__Impl"


    // $ANTLR start "rule__Literal__Group_1__0"
    // InternalFortXTrans.g:10120:1: rule__Literal__Group_1__0 : rule__Literal__Group_1__0__Impl rule__Literal__Group_1__1 ;
    public final void rule__Literal__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10124:1: ( rule__Literal__Group_1__0__Impl rule__Literal__Group_1__1 )
            // InternalFortXTrans.g:10125:2: rule__Literal__Group_1__0__Impl rule__Literal__Group_1__1
            {
            pushFollow(FOLLOW_75);
            rule__Literal__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Literal__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Literal__Group_1__0"


    // $ANTLR start "rule__Literal__Group_1__0__Impl"
    // InternalFortXTrans.g:10132:1: rule__Literal__Group_1__0__Impl : ( () ) ;
    public final void rule__Literal__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10136:1: ( ( () ) )
            // InternalFortXTrans.g:10137:1: ( () )
            {
            // InternalFortXTrans.g:10137:1: ( () )
            // InternalFortXTrans.g:10138:2: ()
            {
             before(grammarAccess.getLiteralAccess().getFloatConstAction_1_0()); 
            // InternalFortXTrans.g:10139:2: ()
            // InternalFortXTrans.g:10139:3: 
            {
            }

             after(grammarAccess.getLiteralAccess().getFloatConstAction_1_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Literal__Group_1__0__Impl"


    // $ANTLR start "rule__Literal__Group_1__1"
    // InternalFortXTrans.g:10147:1: rule__Literal__Group_1__1 : rule__Literal__Group_1__1__Impl ;
    public final void rule__Literal__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10151:1: ( rule__Literal__Group_1__1__Impl )
            // InternalFortXTrans.g:10152:2: rule__Literal__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Literal__Group_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Literal__Group_1__1"


    // $ANTLR start "rule__Literal__Group_1__1__Impl"
    // InternalFortXTrans.g:10158:1: rule__Literal__Group_1__1__Impl : ( ( rule__Literal__ValueAssignment_1_1 ) ) ;
    public final void rule__Literal__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10162:1: ( ( ( rule__Literal__ValueAssignment_1_1 ) ) )
            // InternalFortXTrans.g:10163:1: ( ( rule__Literal__ValueAssignment_1_1 ) )
            {
            // InternalFortXTrans.g:10163:1: ( ( rule__Literal__ValueAssignment_1_1 ) )
            // InternalFortXTrans.g:10164:2: ( rule__Literal__ValueAssignment_1_1 )
            {
             before(grammarAccess.getLiteralAccess().getValueAssignment_1_1()); 
            // InternalFortXTrans.g:10165:2: ( rule__Literal__ValueAssignment_1_1 )
            // InternalFortXTrans.g:10165:3: rule__Literal__ValueAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Literal__ValueAssignment_1_1();

            state._fsp--;


            }

             after(grammarAccess.getLiteralAccess().getValueAssignment_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Literal__Group_1__1__Impl"


    // $ANTLR start "rule__Literal__Group_2__0"
    // InternalFortXTrans.g:10174:1: rule__Literal__Group_2__0 : rule__Literal__Group_2__0__Impl rule__Literal__Group_2__1 ;
    public final void rule__Literal__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10178:1: ( rule__Literal__Group_2__0__Impl rule__Literal__Group_2__1 )
            // InternalFortXTrans.g:10179:2: rule__Literal__Group_2__0__Impl rule__Literal__Group_2__1
            {
            pushFollow(FOLLOW_76);
            rule__Literal__Group_2__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Literal__Group_2__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Literal__Group_2__0"


    // $ANTLR start "rule__Literal__Group_2__0__Impl"
    // InternalFortXTrans.g:10186:1: rule__Literal__Group_2__0__Impl : ( () ) ;
    public final void rule__Literal__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10190:1: ( ( () ) )
            // InternalFortXTrans.g:10191:1: ( () )
            {
            // InternalFortXTrans.g:10191:1: ( () )
            // InternalFortXTrans.g:10192:2: ()
            {
             before(grammarAccess.getLiteralAccess().getStrConstAction_2_0()); 
            // InternalFortXTrans.g:10193:2: ()
            // InternalFortXTrans.g:10193:3: 
            {
            }

             after(grammarAccess.getLiteralAccess().getStrConstAction_2_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Literal__Group_2__0__Impl"


    // $ANTLR start "rule__Literal__Group_2__1"
    // InternalFortXTrans.g:10201:1: rule__Literal__Group_2__1 : rule__Literal__Group_2__1__Impl ;
    public final void rule__Literal__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10205:1: ( rule__Literal__Group_2__1__Impl )
            // InternalFortXTrans.g:10206:2: rule__Literal__Group_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Literal__Group_2__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Literal__Group_2__1"


    // $ANTLR start "rule__Literal__Group_2__1__Impl"
    // InternalFortXTrans.g:10212:1: rule__Literal__Group_2__1__Impl : ( ( rule__Literal__ValueAssignment_2_1 ) ) ;
    public final void rule__Literal__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10216:1: ( ( ( rule__Literal__ValueAssignment_2_1 ) ) )
            // InternalFortXTrans.g:10217:1: ( ( rule__Literal__ValueAssignment_2_1 ) )
            {
            // InternalFortXTrans.g:10217:1: ( ( rule__Literal__ValueAssignment_2_1 ) )
            // InternalFortXTrans.g:10218:2: ( rule__Literal__ValueAssignment_2_1 )
            {
             before(grammarAccess.getLiteralAccess().getValueAssignment_2_1()); 
            // InternalFortXTrans.g:10219:2: ( rule__Literal__ValueAssignment_2_1 )
            // InternalFortXTrans.g:10219:3: rule__Literal__ValueAssignment_2_1
            {
            pushFollow(FOLLOW_2);
            rule__Literal__ValueAssignment_2_1();

            state._fsp--;


            }

             after(grammarAccess.getLiteralAccess().getValueAssignment_2_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Literal__Group_2__1__Impl"


    // $ANTLR start "rule__Literal__Group_3__0"
    // InternalFortXTrans.g:10228:1: rule__Literal__Group_3__0 : rule__Literal__Group_3__0__Impl rule__Literal__Group_3__1 ;
    public final void rule__Literal__Group_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10232:1: ( rule__Literal__Group_3__0__Impl rule__Literal__Group_3__1 )
            // InternalFortXTrans.g:10233:2: rule__Literal__Group_3__0__Impl rule__Literal__Group_3__1
            {
            pushFollow(FOLLOW_73);
            rule__Literal__Group_3__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Literal__Group_3__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Literal__Group_3__0"


    // $ANTLR start "rule__Literal__Group_3__0__Impl"
    // InternalFortXTrans.g:10240:1: rule__Literal__Group_3__0__Impl : ( () ) ;
    public final void rule__Literal__Group_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10244:1: ( ( () ) )
            // InternalFortXTrans.g:10245:1: ( () )
            {
            // InternalFortXTrans.g:10245:1: ( () )
            // InternalFortXTrans.g:10246:2: ()
            {
             before(grammarAccess.getLiteralAccess().getBoolConstAction_3_0()); 
            // InternalFortXTrans.g:10247:2: ()
            // InternalFortXTrans.g:10247:3: 
            {
            }

             after(grammarAccess.getLiteralAccess().getBoolConstAction_3_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Literal__Group_3__0__Impl"


    // $ANTLR start "rule__Literal__Group_3__1"
    // InternalFortXTrans.g:10255:1: rule__Literal__Group_3__1 : rule__Literal__Group_3__1__Impl ;
    public final void rule__Literal__Group_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10259:1: ( rule__Literal__Group_3__1__Impl )
            // InternalFortXTrans.g:10260:2: rule__Literal__Group_3__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Literal__Group_3__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Literal__Group_3__1"


    // $ANTLR start "rule__Literal__Group_3__1__Impl"
    // InternalFortXTrans.g:10266:1: rule__Literal__Group_3__1__Impl : ( ( rule__Literal__ValueAssignment_3_1 ) ) ;
    public final void rule__Literal__Group_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10270:1: ( ( ( rule__Literal__ValueAssignment_3_1 ) ) )
            // InternalFortXTrans.g:10271:1: ( ( rule__Literal__ValueAssignment_3_1 ) )
            {
            // InternalFortXTrans.g:10271:1: ( ( rule__Literal__ValueAssignment_3_1 ) )
            // InternalFortXTrans.g:10272:2: ( rule__Literal__ValueAssignment_3_1 )
            {
             before(grammarAccess.getLiteralAccess().getValueAssignment_3_1()); 
            // InternalFortXTrans.g:10273:2: ( rule__Literal__ValueAssignment_3_1 )
            // InternalFortXTrans.g:10273:3: rule__Literal__ValueAssignment_3_1
            {
            pushFollow(FOLLOW_2);
            rule__Literal__ValueAssignment_3_1();

            state._fsp--;


            }

             after(grammarAccess.getLiteralAccess().getValueAssignment_3_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Literal__Group_3__1__Impl"


    // $ANTLR start "rule__LocalVarDecl__Group_0__0"
    // InternalFortXTrans.g:10282:1: rule__LocalVarDecl__Group_0__0 : rule__LocalVarDecl__Group_0__0__Impl rule__LocalVarDecl__Group_0__1 ;
    public final void rule__LocalVarDecl__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10286:1: ( rule__LocalVarDecl__Group_0__0__Impl rule__LocalVarDecl__Group_0__1 )
            // InternalFortXTrans.g:10287:2: rule__LocalVarDecl__Group_0__0__Impl rule__LocalVarDecl__Group_0__1
            {
            pushFollow(FOLLOW_68);
            rule__LocalVarDecl__Group_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__LocalVarDecl__Group_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_0__0"


    // $ANTLR start "rule__LocalVarDecl__Group_0__0__Impl"
    // InternalFortXTrans.g:10294:1: rule__LocalVarDecl__Group_0__0__Impl : ( ( rule__LocalVarDecl__MutAssignment_0_0 )? ) ;
    public final void rule__LocalVarDecl__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10298:1: ( ( ( rule__LocalVarDecl__MutAssignment_0_0 )? ) )
            // InternalFortXTrans.g:10299:1: ( ( rule__LocalVarDecl__MutAssignment_0_0 )? )
            {
            // InternalFortXTrans.g:10299:1: ( ( rule__LocalVarDecl__MutAssignment_0_0 )? )
            // InternalFortXTrans.g:10300:2: ( rule__LocalVarDecl__MutAssignment_0_0 )?
            {
             before(grammarAccess.getLocalVarDeclAccess().getMutAssignment_0_0()); 
            // InternalFortXTrans.g:10301:2: ( rule__LocalVarDecl__MutAssignment_0_0 )?
            int alt89=2;
            int LA89_0 = input.LA(1);

            if ( (LA89_0==68) ) {
                alt89=1;
            }
            switch (alt89) {
                case 1 :
                    // InternalFortXTrans.g:10301:3: rule__LocalVarDecl__MutAssignment_0_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__LocalVarDecl__MutAssignment_0_0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getLocalVarDeclAccess().getMutAssignment_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_0__0__Impl"


    // $ANTLR start "rule__LocalVarDecl__Group_0__1"
    // InternalFortXTrans.g:10309:1: rule__LocalVarDecl__Group_0__1 : rule__LocalVarDecl__Group_0__1__Impl rule__LocalVarDecl__Group_0__2 ;
    public final void rule__LocalVarDecl__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10313:1: ( rule__LocalVarDecl__Group_0__1__Impl rule__LocalVarDecl__Group_0__2 )
            // InternalFortXTrans.g:10314:2: rule__LocalVarDecl__Group_0__1__Impl rule__LocalVarDecl__Group_0__2
            {
            pushFollow(FOLLOW_70);
            rule__LocalVarDecl__Group_0__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__LocalVarDecl__Group_0__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_0__1"


    // $ANTLR start "rule__LocalVarDecl__Group_0__1__Impl"
    // InternalFortXTrans.g:10321:1: rule__LocalVarDecl__Group_0__1__Impl : ( ( rule__LocalVarDecl__VarsAssignment_0_1 ) ) ;
    public final void rule__LocalVarDecl__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10325:1: ( ( ( rule__LocalVarDecl__VarsAssignment_0_1 ) ) )
            // InternalFortXTrans.g:10326:1: ( ( rule__LocalVarDecl__VarsAssignment_0_1 ) )
            {
            // InternalFortXTrans.g:10326:1: ( ( rule__LocalVarDecl__VarsAssignment_0_1 ) )
            // InternalFortXTrans.g:10327:2: ( rule__LocalVarDecl__VarsAssignment_0_1 )
            {
             before(grammarAccess.getLocalVarDeclAccess().getVarsAssignment_0_1()); 
            // InternalFortXTrans.g:10328:2: ( rule__LocalVarDecl__VarsAssignment_0_1 )
            // InternalFortXTrans.g:10328:3: rule__LocalVarDecl__VarsAssignment_0_1
            {
            pushFollow(FOLLOW_2);
            rule__LocalVarDecl__VarsAssignment_0_1();

            state._fsp--;


            }

             after(grammarAccess.getLocalVarDeclAccess().getVarsAssignment_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_0__1__Impl"


    // $ANTLR start "rule__LocalVarDecl__Group_0__2"
    // InternalFortXTrans.g:10336:1: rule__LocalVarDecl__Group_0__2 : rule__LocalVarDecl__Group_0__2__Impl rule__LocalVarDecl__Group_0__3 ;
    public final void rule__LocalVarDecl__Group_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10340:1: ( rule__LocalVarDecl__Group_0__2__Impl rule__LocalVarDecl__Group_0__3 )
            // InternalFortXTrans.g:10341:2: rule__LocalVarDecl__Group_0__2__Impl rule__LocalVarDecl__Group_0__3
            {
            pushFollow(FOLLOW_32);
            rule__LocalVarDecl__Group_0__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__LocalVarDecl__Group_0__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_0__2"


    // $ANTLR start "rule__LocalVarDecl__Group_0__2__Impl"
    // InternalFortXTrans.g:10348:1: rule__LocalVarDecl__Group_0__2__Impl : ( '=' ) ;
    public final void rule__LocalVarDecl__Group_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10352:1: ( ( '=' ) )
            // InternalFortXTrans.g:10353:1: ( '=' )
            {
            // InternalFortXTrans.g:10353:1: ( '=' )
            // InternalFortXTrans.g:10354:2: '='
            {
             before(grammarAccess.getLocalVarDeclAccess().getEqualsSignKeyword_0_2()); 
            match(input,52,FOLLOW_2); 
             after(grammarAccess.getLocalVarDeclAccess().getEqualsSignKeyword_0_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_0__2__Impl"


    // $ANTLR start "rule__LocalVarDecl__Group_0__3"
    // InternalFortXTrans.g:10363:1: rule__LocalVarDecl__Group_0__3 : rule__LocalVarDecl__Group_0__3__Impl ;
    public final void rule__LocalVarDecl__Group_0__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10367:1: ( rule__LocalVarDecl__Group_0__3__Impl )
            // InternalFortXTrans.g:10368:2: rule__LocalVarDecl__Group_0__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__LocalVarDecl__Group_0__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_0__3"


    // $ANTLR start "rule__LocalVarDecl__Group_0__3__Impl"
    // InternalFortXTrans.g:10374:1: rule__LocalVarDecl__Group_0__3__Impl : ( ( rule__LocalVarDecl__InitAssignment_0_3 ) ) ;
    public final void rule__LocalVarDecl__Group_0__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10378:1: ( ( ( rule__LocalVarDecl__InitAssignment_0_3 ) ) )
            // InternalFortXTrans.g:10379:1: ( ( rule__LocalVarDecl__InitAssignment_0_3 ) )
            {
            // InternalFortXTrans.g:10379:1: ( ( rule__LocalVarDecl__InitAssignment_0_3 ) )
            // InternalFortXTrans.g:10380:2: ( rule__LocalVarDecl__InitAssignment_0_3 )
            {
             before(grammarAccess.getLocalVarDeclAccess().getInitAssignment_0_3()); 
            // InternalFortXTrans.g:10381:2: ( rule__LocalVarDecl__InitAssignment_0_3 )
            // InternalFortXTrans.g:10381:3: rule__LocalVarDecl__InitAssignment_0_3
            {
            pushFollow(FOLLOW_2);
            rule__LocalVarDecl__InitAssignment_0_3();

            state._fsp--;


            }

             after(grammarAccess.getLocalVarDeclAccess().getInitAssignment_0_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_0__3__Impl"


    // $ANTLR start "rule__LocalVarDecl__Group_1__0"
    // InternalFortXTrans.g:10390:1: rule__LocalVarDecl__Group_1__0 : rule__LocalVarDecl__Group_1__0__Impl rule__LocalVarDecl__Group_1__1 ;
    public final void rule__LocalVarDecl__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10394:1: ( rule__LocalVarDecl__Group_1__0__Impl rule__LocalVarDecl__Group_1__1 )
            // InternalFortXTrans.g:10395:2: rule__LocalVarDecl__Group_1__0__Impl rule__LocalVarDecl__Group_1__1
            {
            pushFollow(FOLLOW_70);
            rule__LocalVarDecl__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__LocalVarDecl__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_1__0"


    // $ANTLR start "rule__LocalVarDecl__Group_1__0__Impl"
    // InternalFortXTrans.g:10402:1: rule__LocalVarDecl__Group_1__0__Impl : ( ( rule__LocalVarDecl__IdtupAssignment_1_0 ) ) ;
    public final void rule__LocalVarDecl__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10406:1: ( ( ( rule__LocalVarDecl__IdtupAssignment_1_0 ) ) )
            // InternalFortXTrans.g:10407:1: ( ( rule__LocalVarDecl__IdtupAssignment_1_0 ) )
            {
            // InternalFortXTrans.g:10407:1: ( ( rule__LocalVarDecl__IdtupAssignment_1_0 ) )
            // InternalFortXTrans.g:10408:2: ( rule__LocalVarDecl__IdtupAssignment_1_0 )
            {
             before(grammarAccess.getLocalVarDeclAccess().getIdtupAssignment_1_0()); 
            // InternalFortXTrans.g:10409:2: ( rule__LocalVarDecl__IdtupAssignment_1_0 )
            // InternalFortXTrans.g:10409:3: rule__LocalVarDecl__IdtupAssignment_1_0
            {
            pushFollow(FOLLOW_2);
            rule__LocalVarDecl__IdtupAssignment_1_0();

            state._fsp--;


            }

             after(grammarAccess.getLocalVarDeclAccess().getIdtupAssignment_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_1__0__Impl"


    // $ANTLR start "rule__LocalVarDecl__Group_1__1"
    // InternalFortXTrans.g:10417:1: rule__LocalVarDecl__Group_1__1 : rule__LocalVarDecl__Group_1__1__Impl rule__LocalVarDecl__Group_1__2 ;
    public final void rule__LocalVarDecl__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10421:1: ( rule__LocalVarDecl__Group_1__1__Impl rule__LocalVarDecl__Group_1__2 )
            // InternalFortXTrans.g:10422:2: rule__LocalVarDecl__Group_1__1__Impl rule__LocalVarDecl__Group_1__2
            {
            pushFollow(FOLLOW_71);
            rule__LocalVarDecl__Group_1__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__LocalVarDecl__Group_1__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_1__1"


    // $ANTLR start "rule__LocalVarDecl__Group_1__1__Impl"
    // InternalFortXTrans.g:10429:1: rule__LocalVarDecl__Group_1__1__Impl : ( '=' ) ;
    public final void rule__LocalVarDecl__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10433:1: ( ( '=' ) )
            // InternalFortXTrans.g:10434:1: ( '=' )
            {
            // InternalFortXTrans.g:10434:1: ( '=' )
            // InternalFortXTrans.g:10435:2: '='
            {
             before(grammarAccess.getLocalVarDeclAccess().getEqualsSignKeyword_1_1()); 
            match(input,52,FOLLOW_2); 
             after(grammarAccess.getLocalVarDeclAccess().getEqualsSignKeyword_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_1__1__Impl"


    // $ANTLR start "rule__LocalVarDecl__Group_1__2"
    // InternalFortXTrans.g:10444:1: rule__LocalVarDecl__Group_1__2 : rule__LocalVarDecl__Group_1__2__Impl ;
    public final void rule__LocalVarDecl__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10448:1: ( rule__LocalVarDecl__Group_1__2__Impl )
            // InternalFortXTrans.g:10449:2: rule__LocalVarDecl__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__LocalVarDecl__Group_1__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_1__2"


    // $ANTLR start "rule__LocalVarDecl__Group_1__2__Impl"
    // InternalFortXTrans.g:10455:1: rule__LocalVarDecl__Group_1__2__Impl : ( ( rule__LocalVarDecl__LitTupAssignment_1_2 ) ) ;
    public final void rule__LocalVarDecl__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10459:1: ( ( ( rule__LocalVarDecl__LitTupAssignment_1_2 ) ) )
            // InternalFortXTrans.g:10460:1: ( ( rule__LocalVarDecl__LitTupAssignment_1_2 ) )
            {
            // InternalFortXTrans.g:10460:1: ( ( rule__LocalVarDecl__LitTupAssignment_1_2 ) )
            // InternalFortXTrans.g:10461:2: ( rule__LocalVarDecl__LitTupAssignment_1_2 )
            {
             before(grammarAccess.getLocalVarDeclAccess().getLitTupAssignment_1_2()); 
            // InternalFortXTrans.g:10462:2: ( rule__LocalVarDecl__LitTupAssignment_1_2 )
            // InternalFortXTrans.g:10462:3: rule__LocalVarDecl__LitTupAssignment_1_2
            {
            pushFollow(FOLLOW_2);
            rule__LocalVarDecl__LitTupAssignment_1_2();

            state._fsp--;


            }

             after(grammarAccess.getLocalVarDeclAccess().getLitTupAssignment_1_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_1__2__Impl"


    // $ANTLR start "rule__LocalVarDecl__Group_2__0"
    // InternalFortXTrans.g:10471:1: rule__LocalVarDecl__Group_2__0 : rule__LocalVarDecl__Group_2__0__Impl rule__LocalVarDecl__Group_2__1 ;
    public final void rule__LocalVarDecl__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10475:1: ( rule__LocalVarDecl__Group_2__0__Impl rule__LocalVarDecl__Group_2__1 )
            // InternalFortXTrans.g:10476:2: rule__LocalVarDecl__Group_2__0__Impl rule__LocalVarDecl__Group_2__1
            {
            pushFollow(FOLLOW_68);
            rule__LocalVarDecl__Group_2__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__LocalVarDecl__Group_2__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_2__0"


    // $ANTLR start "rule__LocalVarDecl__Group_2__0__Impl"
    // InternalFortXTrans.g:10483:1: rule__LocalVarDecl__Group_2__0__Impl : ( ( rule__LocalVarDecl__MutAssignment_2_0 )? ) ;
    public final void rule__LocalVarDecl__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10487:1: ( ( ( rule__LocalVarDecl__MutAssignment_2_0 )? ) )
            // InternalFortXTrans.g:10488:1: ( ( rule__LocalVarDecl__MutAssignment_2_0 )? )
            {
            // InternalFortXTrans.g:10488:1: ( ( rule__LocalVarDecl__MutAssignment_2_0 )? )
            // InternalFortXTrans.g:10489:2: ( rule__LocalVarDecl__MutAssignment_2_0 )?
            {
             before(grammarAccess.getLocalVarDeclAccess().getMutAssignment_2_0()); 
            // InternalFortXTrans.g:10490:2: ( rule__LocalVarDecl__MutAssignment_2_0 )?
            int alt90=2;
            int LA90_0 = input.LA(1);

            if ( (LA90_0==68) ) {
                alt90=1;
            }
            switch (alt90) {
                case 1 :
                    // InternalFortXTrans.g:10490:3: rule__LocalVarDecl__MutAssignment_2_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__LocalVarDecl__MutAssignment_2_0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getLocalVarDeclAccess().getMutAssignment_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_2__0__Impl"


    // $ANTLR start "rule__LocalVarDecl__Group_2__1"
    // InternalFortXTrans.g:10498:1: rule__LocalVarDecl__Group_2__1 : rule__LocalVarDecl__Group_2__1__Impl rule__LocalVarDecl__Group_2__2 ;
    public final void rule__LocalVarDecl__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10502:1: ( rule__LocalVarDecl__Group_2__1__Impl rule__LocalVarDecl__Group_2__2 )
            // InternalFortXTrans.g:10503:2: rule__LocalVarDecl__Group_2__1__Impl rule__LocalVarDecl__Group_2__2
            {
            pushFollow(FOLLOW_26);
            rule__LocalVarDecl__Group_2__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__LocalVarDecl__Group_2__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_2__1"


    // $ANTLR start "rule__LocalVarDecl__Group_2__1__Impl"
    // InternalFortXTrans.g:10510:1: rule__LocalVarDecl__Group_2__1__Impl : ( ( rule__LocalVarDecl__IdtupAssignment_2_1 ) ) ;
    public final void rule__LocalVarDecl__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10514:1: ( ( ( rule__LocalVarDecl__IdtupAssignment_2_1 ) ) )
            // InternalFortXTrans.g:10515:1: ( ( rule__LocalVarDecl__IdtupAssignment_2_1 ) )
            {
            // InternalFortXTrans.g:10515:1: ( ( rule__LocalVarDecl__IdtupAssignment_2_1 ) )
            // InternalFortXTrans.g:10516:2: ( rule__LocalVarDecl__IdtupAssignment_2_1 )
            {
             before(grammarAccess.getLocalVarDeclAccess().getIdtupAssignment_2_1()); 
            // InternalFortXTrans.g:10517:2: ( rule__LocalVarDecl__IdtupAssignment_2_1 )
            // InternalFortXTrans.g:10517:3: rule__LocalVarDecl__IdtupAssignment_2_1
            {
            pushFollow(FOLLOW_2);
            rule__LocalVarDecl__IdtupAssignment_2_1();

            state._fsp--;


            }

             after(grammarAccess.getLocalVarDeclAccess().getIdtupAssignment_2_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_2__1__Impl"


    // $ANTLR start "rule__LocalVarDecl__Group_2__2"
    // InternalFortXTrans.g:10525:1: rule__LocalVarDecl__Group_2__2 : rule__LocalVarDecl__Group_2__2__Impl rule__LocalVarDecl__Group_2__3 ;
    public final void rule__LocalVarDecl__Group_2__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10529:1: ( rule__LocalVarDecl__Group_2__2__Impl rule__LocalVarDecl__Group_2__3 )
            // InternalFortXTrans.g:10530:2: rule__LocalVarDecl__Group_2__2__Impl rule__LocalVarDecl__Group_2__3
            {
            pushFollow(FOLLOW_5);
            rule__LocalVarDecl__Group_2__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__LocalVarDecl__Group_2__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_2__2"


    // $ANTLR start "rule__LocalVarDecl__Group_2__2__Impl"
    // InternalFortXTrans.g:10537:1: rule__LocalVarDecl__Group_2__2__Impl : ( ':' ) ;
    public final void rule__LocalVarDecl__Group_2__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10541:1: ( ( ':' ) )
            // InternalFortXTrans.g:10542:1: ( ':' )
            {
            // InternalFortXTrans.g:10542:1: ( ':' )
            // InternalFortXTrans.g:10543:2: ':'
            {
             before(grammarAccess.getLocalVarDeclAccess().getColonKeyword_2_2()); 
            match(input,37,FOLLOW_2); 
             after(grammarAccess.getLocalVarDeclAccess().getColonKeyword_2_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_2__2__Impl"


    // $ANTLR start "rule__LocalVarDecl__Group_2__3"
    // InternalFortXTrans.g:10552:1: rule__LocalVarDecl__Group_2__3 : rule__LocalVarDecl__Group_2__3__Impl rule__LocalVarDecl__Group_2__4 ;
    public final void rule__LocalVarDecl__Group_2__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10556:1: ( rule__LocalVarDecl__Group_2__3__Impl rule__LocalVarDecl__Group_2__4 )
            // InternalFortXTrans.g:10557:2: rule__LocalVarDecl__Group_2__3__Impl rule__LocalVarDecl__Group_2__4
            {
            pushFollow(FOLLOW_17);
            rule__LocalVarDecl__Group_2__3__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__LocalVarDecl__Group_2__4();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_2__3"


    // $ANTLR start "rule__LocalVarDecl__Group_2__3__Impl"
    // InternalFortXTrans.g:10564:1: rule__LocalVarDecl__Group_2__3__Impl : ( ( rule__LocalVarDecl__TypeAssignment_2_3 ) ) ;
    public final void rule__LocalVarDecl__Group_2__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10568:1: ( ( ( rule__LocalVarDecl__TypeAssignment_2_3 ) ) )
            // InternalFortXTrans.g:10569:1: ( ( rule__LocalVarDecl__TypeAssignment_2_3 ) )
            {
            // InternalFortXTrans.g:10569:1: ( ( rule__LocalVarDecl__TypeAssignment_2_3 ) )
            // InternalFortXTrans.g:10570:2: ( rule__LocalVarDecl__TypeAssignment_2_3 )
            {
             before(grammarAccess.getLocalVarDeclAccess().getTypeAssignment_2_3()); 
            // InternalFortXTrans.g:10571:2: ( rule__LocalVarDecl__TypeAssignment_2_3 )
            // InternalFortXTrans.g:10571:3: rule__LocalVarDecl__TypeAssignment_2_3
            {
            pushFollow(FOLLOW_2);
            rule__LocalVarDecl__TypeAssignment_2_3();

            state._fsp--;


            }

             after(grammarAccess.getLocalVarDeclAccess().getTypeAssignment_2_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_2__3__Impl"


    // $ANTLR start "rule__LocalVarDecl__Group_2__4"
    // InternalFortXTrans.g:10579:1: rule__LocalVarDecl__Group_2__4 : rule__LocalVarDecl__Group_2__4__Impl rule__LocalVarDecl__Group_2__5 ;
    public final void rule__LocalVarDecl__Group_2__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10583:1: ( rule__LocalVarDecl__Group_2__4__Impl rule__LocalVarDecl__Group_2__5 )
            // InternalFortXTrans.g:10584:2: rule__LocalVarDecl__Group_2__4__Impl rule__LocalVarDecl__Group_2__5
            {
            pushFollow(FOLLOW_70);
            rule__LocalVarDecl__Group_2__4__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__LocalVarDecl__Group_2__5();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_2__4"


    // $ANTLR start "rule__LocalVarDecl__Group_2__4__Impl"
    // InternalFortXTrans.g:10591:1: rule__LocalVarDecl__Group_2__4__Impl : ( RULE_DOTS ) ;
    public final void rule__LocalVarDecl__Group_2__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10595:1: ( ( RULE_DOTS ) )
            // InternalFortXTrans.g:10596:1: ( RULE_DOTS )
            {
            // InternalFortXTrans.g:10596:1: ( RULE_DOTS )
            // InternalFortXTrans.g:10597:2: RULE_DOTS
            {
             before(grammarAccess.getLocalVarDeclAccess().getDOTSTerminalRuleCall_2_4()); 
            match(input,RULE_DOTS,FOLLOW_2); 
             after(grammarAccess.getLocalVarDeclAccess().getDOTSTerminalRuleCall_2_4()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_2__4__Impl"


    // $ANTLR start "rule__LocalVarDecl__Group_2__5"
    // InternalFortXTrans.g:10606:1: rule__LocalVarDecl__Group_2__5 : rule__LocalVarDecl__Group_2__5__Impl rule__LocalVarDecl__Group_2__6 ;
    public final void rule__LocalVarDecl__Group_2__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10610:1: ( rule__LocalVarDecl__Group_2__5__Impl rule__LocalVarDecl__Group_2__6 )
            // InternalFortXTrans.g:10611:2: rule__LocalVarDecl__Group_2__5__Impl rule__LocalVarDecl__Group_2__6
            {
            pushFollow(FOLLOW_32);
            rule__LocalVarDecl__Group_2__5__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__LocalVarDecl__Group_2__6();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_2__5"


    // $ANTLR start "rule__LocalVarDecl__Group_2__5__Impl"
    // InternalFortXTrans.g:10618:1: rule__LocalVarDecl__Group_2__5__Impl : ( '=' ) ;
    public final void rule__LocalVarDecl__Group_2__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10622:1: ( ( '=' ) )
            // InternalFortXTrans.g:10623:1: ( '=' )
            {
            // InternalFortXTrans.g:10623:1: ( '=' )
            // InternalFortXTrans.g:10624:2: '='
            {
             before(grammarAccess.getLocalVarDeclAccess().getEqualsSignKeyword_2_5()); 
            match(input,52,FOLLOW_2); 
             after(grammarAccess.getLocalVarDeclAccess().getEqualsSignKeyword_2_5()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_2__5__Impl"


    // $ANTLR start "rule__LocalVarDecl__Group_2__6"
    // InternalFortXTrans.g:10633:1: rule__LocalVarDecl__Group_2__6 : rule__LocalVarDecl__Group_2__6__Impl ;
    public final void rule__LocalVarDecl__Group_2__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10637:1: ( rule__LocalVarDecl__Group_2__6__Impl )
            // InternalFortXTrans.g:10638:2: rule__LocalVarDecl__Group_2__6__Impl
            {
            pushFollow(FOLLOW_2);
            rule__LocalVarDecl__Group_2__6__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_2__6"


    // $ANTLR start "rule__LocalVarDecl__Group_2__6__Impl"
    // InternalFortXTrans.g:10644:1: rule__LocalVarDecl__Group_2__6__Impl : ( ( rule__LocalVarDecl__InitAssignment_2_6 ) ) ;
    public final void rule__LocalVarDecl__Group_2__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10648:1: ( ( ( rule__LocalVarDecl__InitAssignment_2_6 ) ) )
            // InternalFortXTrans.g:10649:1: ( ( rule__LocalVarDecl__InitAssignment_2_6 ) )
            {
            // InternalFortXTrans.g:10649:1: ( ( rule__LocalVarDecl__InitAssignment_2_6 ) )
            // InternalFortXTrans.g:10650:2: ( rule__LocalVarDecl__InitAssignment_2_6 )
            {
             before(grammarAccess.getLocalVarDeclAccess().getInitAssignment_2_6()); 
            // InternalFortXTrans.g:10651:2: ( rule__LocalVarDecl__InitAssignment_2_6 )
            // InternalFortXTrans.g:10651:3: rule__LocalVarDecl__InitAssignment_2_6
            {
            pushFollow(FOLLOW_2);
            rule__LocalVarDecl__InitAssignment_2_6();

            state._fsp--;


            }

             after(grammarAccess.getLocalVarDeclAccess().getInitAssignment_2_6()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_2__6__Impl"


    // $ANTLR start "rule__LocalVarDecl__Group_3__0"
    // InternalFortXTrans.g:10660:1: rule__LocalVarDecl__Group_3__0 : rule__LocalVarDecl__Group_3__0__Impl rule__LocalVarDecl__Group_3__1 ;
    public final void rule__LocalVarDecl__Group_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10664:1: ( rule__LocalVarDecl__Group_3__0__Impl rule__LocalVarDecl__Group_3__1 )
            // InternalFortXTrans.g:10665:2: rule__LocalVarDecl__Group_3__0__Impl rule__LocalVarDecl__Group_3__1
            {
            pushFollow(FOLLOW_68);
            rule__LocalVarDecl__Group_3__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__LocalVarDecl__Group_3__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_3__0"


    // $ANTLR start "rule__LocalVarDecl__Group_3__0__Impl"
    // InternalFortXTrans.g:10672:1: rule__LocalVarDecl__Group_3__0__Impl : ( ( rule__LocalVarDecl__MutAssignment_3_0 )? ) ;
    public final void rule__LocalVarDecl__Group_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10676:1: ( ( ( rule__LocalVarDecl__MutAssignment_3_0 )? ) )
            // InternalFortXTrans.g:10677:1: ( ( rule__LocalVarDecl__MutAssignment_3_0 )? )
            {
            // InternalFortXTrans.g:10677:1: ( ( rule__LocalVarDecl__MutAssignment_3_0 )? )
            // InternalFortXTrans.g:10678:2: ( rule__LocalVarDecl__MutAssignment_3_0 )?
            {
             before(grammarAccess.getLocalVarDeclAccess().getMutAssignment_3_0()); 
            // InternalFortXTrans.g:10679:2: ( rule__LocalVarDecl__MutAssignment_3_0 )?
            int alt91=2;
            int LA91_0 = input.LA(1);

            if ( (LA91_0==68) ) {
                alt91=1;
            }
            switch (alt91) {
                case 1 :
                    // InternalFortXTrans.g:10679:3: rule__LocalVarDecl__MutAssignment_3_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__LocalVarDecl__MutAssignment_3_0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getLocalVarDeclAccess().getMutAssignment_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_3__0__Impl"


    // $ANTLR start "rule__LocalVarDecl__Group_3__1"
    // InternalFortXTrans.g:10687:1: rule__LocalVarDecl__Group_3__1 : rule__LocalVarDecl__Group_3__1__Impl rule__LocalVarDecl__Group_3__2 ;
    public final void rule__LocalVarDecl__Group_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10691:1: ( rule__LocalVarDecl__Group_3__1__Impl rule__LocalVarDecl__Group_3__2 )
            // InternalFortXTrans.g:10692:2: rule__LocalVarDecl__Group_3__1__Impl rule__LocalVarDecl__Group_3__2
            {
            pushFollow(FOLLOW_26);
            rule__LocalVarDecl__Group_3__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__LocalVarDecl__Group_3__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_3__1"


    // $ANTLR start "rule__LocalVarDecl__Group_3__1__Impl"
    // InternalFortXTrans.g:10699:1: rule__LocalVarDecl__Group_3__1__Impl : ( ( rule__LocalVarDecl__IdtupAssignment_3_1 ) ) ;
    public final void rule__LocalVarDecl__Group_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10703:1: ( ( ( rule__LocalVarDecl__IdtupAssignment_3_1 ) ) )
            // InternalFortXTrans.g:10704:1: ( ( rule__LocalVarDecl__IdtupAssignment_3_1 ) )
            {
            // InternalFortXTrans.g:10704:1: ( ( rule__LocalVarDecl__IdtupAssignment_3_1 ) )
            // InternalFortXTrans.g:10705:2: ( rule__LocalVarDecl__IdtupAssignment_3_1 )
            {
             before(grammarAccess.getLocalVarDeclAccess().getIdtupAssignment_3_1()); 
            // InternalFortXTrans.g:10706:2: ( rule__LocalVarDecl__IdtupAssignment_3_1 )
            // InternalFortXTrans.g:10706:3: rule__LocalVarDecl__IdtupAssignment_3_1
            {
            pushFollow(FOLLOW_2);
            rule__LocalVarDecl__IdtupAssignment_3_1();

            state._fsp--;


            }

             after(grammarAccess.getLocalVarDeclAccess().getIdtupAssignment_3_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_3__1__Impl"


    // $ANTLR start "rule__LocalVarDecl__Group_3__2"
    // InternalFortXTrans.g:10714:1: rule__LocalVarDecl__Group_3__2 : rule__LocalVarDecl__Group_3__2__Impl rule__LocalVarDecl__Group_3__3 ;
    public final void rule__LocalVarDecl__Group_3__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10718:1: ( rule__LocalVarDecl__Group_3__2__Impl rule__LocalVarDecl__Group_3__3 )
            // InternalFortXTrans.g:10719:2: rule__LocalVarDecl__Group_3__2__Impl rule__LocalVarDecl__Group_3__3
            {
            pushFollow(FOLLOW_27);
            rule__LocalVarDecl__Group_3__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__LocalVarDecl__Group_3__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_3__2"


    // $ANTLR start "rule__LocalVarDecl__Group_3__2__Impl"
    // InternalFortXTrans.g:10726:1: rule__LocalVarDecl__Group_3__2__Impl : ( ':' ) ;
    public final void rule__LocalVarDecl__Group_3__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10730:1: ( ( ':' ) )
            // InternalFortXTrans.g:10731:1: ( ':' )
            {
            // InternalFortXTrans.g:10731:1: ( ':' )
            // InternalFortXTrans.g:10732:2: ':'
            {
             before(grammarAccess.getLocalVarDeclAccess().getColonKeyword_3_2()); 
            match(input,37,FOLLOW_2); 
             after(grammarAccess.getLocalVarDeclAccess().getColonKeyword_3_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_3__2__Impl"


    // $ANTLR start "rule__LocalVarDecl__Group_3__3"
    // InternalFortXTrans.g:10741:1: rule__LocalVarDecl__Group_3__3 : rule__LocalVarDecl__Group_3__3__Impl rule__LocalVarDecl__Group_3__4 ;
    public final void rule__LocalVarDecl__Group_3__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10745:1: ( rule__LocalVarDecl__Group_3__3__Impl rule__LocalVarDecl__Group_3__4 )
            // InternalFortXTrans.g:10746:2: rule__LocalVarDecl__Group_3__3__Impl rule__LocalVarDecl__Group_3__4
            {
            pushFollow(FOLLOW_70);
            rule__LocalVarDecl__Group_3__3__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__LocalVarDecl__Group_3__4();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_3__3"


    // $ANTLR start "rule__LocalVarDecl__Group_3__3__Impl"
    // InternalFortXTrans.g:10753:1: rule__LocalVarDecl__Group_3__3__Impl : ( ( rule__LocalVarDecl__TuptypeAssignment_3_3 ) ) ;
    public final void rule__LocalVarDecl__Group_3__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10757:1: ( ( ( rule__LocalVarDecl__TuptypeAssignment_3_3 ) ) )
            // InternalFortXTrans.g:10758:1: ( ( rule__LocalVarDecl__TuptypeAssignment_3_3 ) )
            {
            // InternalFortXTrans.g:10758:1: ( ( rule__LocalVarDecl__TuptypeAssignment_3_3 ) )
            // InternalFortXTrans.g:10759:2: ( rule__LocalVarDecl__TuptypeAssignment_3_3 )
            {
             before(grammarAccess.getLocalVarDeclAccess().getTuptypeAssignment_3_3()); 
            // InternalFortXTrans.g:10760:2: ( rule__LocalVarDecl__TuptypeAssignment_3_3 )
            // InternalFortXTrans.g:10760:3: rule__LocalVarDecl__TuptypeAssignment_3_3
            {
            pushFollow(FOLLOW_2);
            rule__LocalVarDecl__TuptypeAssignment_3_3();

            state._fsp--;


            }

             after(grammarAccess.getLocalVarDeclAccess().getTuptypeAssignment_3_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_3__3__Impl"


    // $ANTLR start "rule__LocalVarDecl__Group_3__4"
    // InternalFortXTrans.g:10768:1: rule__LocalVarDecl__Group_3__4 : rule__LocalVarDecl__Group_3__4__Impl rule__LocalVarDecl__Group_3__5 ;
    public final void rule__LocalVarDecl__Group_3__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10772:1: ( rule__LocalVarDecl__Group_3__4__Impl rule__LocalVarDecl__Group_3__5 )
            // InternalFortXTrans.g:10773:2: rule__LocalVarDecl__Group_3__4__Impl rule__LocalVarDecl__Group_3__5
            {
            pushFollow(FOLLOW_32);
            rule__LocalVarDecl__Group_3__4__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__LocalVarDecl__Group_3__5();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_3__4"


    // $ANTLR start "rule__LocalVarDecl__Group_3__4__Impl"
    // InternalFortXTrans.g:10780:1: rule__LocalVarDecl__Group_3__4__Impl : ( '=' ) ;
    public final void rule__LocalVarDecl__Group_3__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10784:1: ( ( '=' ) )
            // InternalFortXTrans.g:10785:1: ( '=' )
            {
            // InternalFortXTrans.g:10785:1: ( '=' )
            // InternalFortXTrans.g:10786:2: '='
            {
             before(grammarAccess.getLocalVarDeclAccess().getEqualsSignKeyword_3_4()); 
            match(input,52,FOLLOW_2); 
             after(grammarAccess.getLocalVarDeclAccess().getEqualsSignKeyword_3_4()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_3__4__Impl"


    // $ANTLR start "rule__LocalVarDecl__Group_3__5"
    // InternalFortXTrans.g:10795:1: rule__LocalVarDecl__Group_3__5 : rule__LocalVarDecl__Group_3__5__Impl ;
    public final void rule__LocalVarDecl__Group_3__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10799:1: ( rule__LocalVarDecl__Group_3__5__Impl )
            // InternalFortXTrans.g:10800:2: rule__LocalVarDecl__Group_3__5__Impl
            {
            pushFollow(FOLLOW_2);
            rule__LocalVarDecl__Group_3__5__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_3__5"


    // $ANTLR start "rule__LocalVarDecl__Group_3__5__Impl"
    // InternalFortXTrans.g:10806:1: rule__LocalVarDecl__Group_3__5__Impl : ( ( rule__LocalVarDecl__InitAssignment_3_5 ) ) ;
    public final void rule__LocalVarDecl__Group_3__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10810:1: ( ( ( rule__LocalVarDecl__InitAssignment_3_5 ) ) )
            // InternalFortXTrans.g:10811:1: ( ( rule__LocalVarDecl__InitAssignment_3_5 ) )
            {
            // InternalFortXTrans.g:10811:1: ( ( rule__LocalVarDecl__InitAssignment_3_5 ) )
            // InternalFortXTrans.g:10812:2: ( rule__LocalVarDecl__InitAssignment_3_5 )
            {
             before(grammarAccess.getLocalVarDeclAccess().getInitAssignment_3_5()); 
            // InternalFortXTrans.g:10813:2: ( rule__LocalVarDecl__InitAssignment_3_5 )
            // InternalFortXTrans.g:10813:3: rule__LocalVarDecl__InitAssignment_3_5
            {
            pushFollow(FOLLOW_2);
            rule__LocalVarDecl__InitAssignment_3_5();

            state._fsp--;


            }

             after(grammarAccess.getLocalVarDeclAccess().getInitAssignment_3_5()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_3__5__Impl"


    // $ANTLR start "rule__Component__NameAssignment_1"
    // InternalFortXTrans.g:10822:1: rule__Component__NameAssignment_1 : ( RULE_ID ) ;
    public final void rule__Component__NameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10826:1: ( ( RULE_ID ) )
            // InternalFortXTrans.g:10827:2: ( RULE_ID )
            {
            // InternalFortXTrans.g:10827:2: ( RULE_ID )
            // InternalFortXTrans.g:10828:3: RULE_ID
            {
             before(grammarAccess.getComponentAccess().getNameIDTerminalRuleCall_1_0()); 
            match(input,RULE_ID,FOLLOW_2); 
             after(grammarAccess.getComponentAccess().getNameIDTerminalRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Component__NameAssignment_1"


    // $ANTLR start "rule__Component__ImportsAssignment_2"
    // InternalFortXTrans.g:10837:1: rule__Component__ImportsAssignment_2 : ( ruleImport ) ;
    public final void rule__Component__ImportsAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10841:1: ( ( ruleImport ) )
            // InternalFortXTrans.g:10842:2: ( ruleImport )
            {
            // InternalFortXTrans.g:10842:2: ( ruleImport )
            // InternalFortXTrans.g:10843:3: ruleImport
            {
             before(grammarAccess.getComponentAccess().getImportsImportParserRuleCall_2_0()); 
            pushFollow(FOLLOW_2);
            ruleImport();

            state._fsp--;

             after(grammarAccess.getComponentAccess().getImportsImportParserRuleCall_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Component__ImportsAssignment_2"


    // $ANTLR start "rule__Component__ExportsAssignment_3"
    // InternalFortXTrans.g:10852:1: rule__Component__ExportsAssignment_3 : ( ruleExport ) ;
    public final void rule__Component__ExportsAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10856:1: ( ( ruleExport ) )
            // InternalFortXTrans.g:10857:2: ( ruleExport )
            {
            // InternalFortXTrans.g:10857:2: ( ruleExport )
            // InternalFortXTrans.g:10858:3: ruleExport
            {
             before(grammarAccess.getComponentAccess().getExportsExportParserRuleCall_3_0()); 
            pushFollow(FOLLOW_2);
            ruleExport();

            state._fsp--;

             after(grammarAccess.getComponentAccess().getExportsExportParserRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Component__ExportsAssignment_3"


    // $ANTLR start "rule__Component__DeclsAssignment_4"
    // InternalFortXTrans.g:10867:1: rule__Component__DeclsAssignment_4 : ( ruleDecls ) ;
    public final void rule__Component__DeclsAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10871:1: ( ( ruleDecls ) )
            // InternalFortXTrans.g:10872:2: ( ruleDecls )
            {
            // InternalFortXTrans.g:10872:2: ( ruleDecls )
            // InternalFortXTrans.g:10873:3: ruleDecls
            {
             before(grammarAccess.getComponentAccess().getDeclsDeclsParserRuleCall_4_0()); 
            pushFollow(FOLLOW_2);
            ruleDecls();

            state._fsp--;

             after(grammarAccess.getComponentAccess().getDeclsDeclsParserRuleCall_4_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Component__DeclsAssignment_4"


    // $ANTLR start "rule__API__NameAssignment_1"
    // InternalFortXTrans.g:10882:1: rule__API__NameAssignment_1 : ( RULE_ID ) ;
    public final void rule__API__NameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10886:1: ( ( RULE_ID ) )
            // InternalFortXTrans.g:10887:2: ( RULE_ID )
            {
            // InternalFortXTrans.g:10887:2: ( RULE_ID )
            // InternalFortXTrans.g:10888:3: RULE_ID
            {
             before(grammarAccess.getAPIAccess().getNameIDTerminalRuleCall_1_0()); 
            match(input,RULE_ID,FOLLOW_2); 
             after(grammarAccess.getAPIAccess().getNameIDTerminalRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__API__NameAssignment_1"


    // $ANTLR start "rule__API__ImportsAssignment_2"
    // InternalFortXTrans.g:10897:1: rule__API__ImportsAssignment_2 : ( ruleImport ) ;
    public final void rule__API__ImportsAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10901:1: ( ( ruleImport ) )
            // InternalFortXTrans.g:10902:2: ( ruleImport )
            {
            // InternalFortXTrans.g:10902:2: ( ruleImport )
            // InternalFortXTrans.g:10903:3: ruleImport
            {
             before(grammarAccess.getAPIAccess().getImportsImportParserRuleCall_2_0()); 
            pushFollow(FOLLOW_2);
            ruleImport();

            state._fsp--;

             after(grammarAccess.getAPIAccess().getImportsImportParserRuleCall_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__API__ImportsAssignment_2"


    // $ANTLR start "rule__Import__ImpsAssignment_0_0"
    // InternalFortXTrans.g:10912:1: rule__Import__ImpsAssignment_0_0 : ( ( 'import' ) ) ;
    public final void rule__Import__ImpsAssignment_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10916:1: ( ( ( 'import' ) ) )
            // InternalFortXTrans.g:10917:2: ( ( 'import' ) )
            {
            // InternalFortXTrans.g:10917:2: ( ( 'import' ) )
            // InternalFortXTrans.g:10918:3: ( 'import' )
            {
             before(grammarAccess.getImportAccess().getImpsImportKeyword_0_0_0()); 
            // InternalFortXTrans.g:10919:3: ( 'import' )
            // InternalFortXTrans.g:10920:4: 'import'
            {
             before(grammarAccess.getImportAccess().getImpsImportKeyword_0_0_0()); 
            match(input,53,FOLLOW_2); 
             after(grammarAccess.getImportAccess().getImpsImportKeyword_0_0_0()); 

            }

             after(grammarAccess.getImportAccess().getImpsImportKeyword_0_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Import__ImpsAssignment_0_0"


    // $ANTLR start "rule__Import__ImportedNamesAssignment_0_1"
    // InternalFortXTrans.g:10931:1: rule__Import__ImportedNamesAssignment_0_1 : ( ruleImportedNames ) ;
    public final void rule__Import__ImportedNamesAssignment_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10935:1: ( ( ruleImportedNames ) )
            // InternalFortXTrans.g:10936:2: ( ruleImportedNames )
            {
            // InternalFortXTrans.g:10936:2: ( ruleImportedNames )
            // InternalFortXTrans.g:10937:3: ruleImportedNames
            {
             before(grammarAccess.getImportAccess().getImportedNamesImportedNamesParserRuleCall_0_1_0()); 
            pushFollow(FOLLOW_2);
            ruleImportedNames();

            state._fsp--;

             after(grammarAccess.getImportAccess().getImportedNamesImportedNamesParserRuleCall_0_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Import__ImportedNamesAssignment_0_1"


    // $ANTLR start "rule__Import__ImpsAssignment_1_0"
    // InternalFortXTrans.g:10946:1: rule__Import__ImpsAssignment_1_0 : ( ( 'import' ) ) ;
    public final void rule__Import__ImpsAssignment_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10950:1: ( ( ( 'import' ) ) )
            // InternalFortXTrans.g:10951:2: ( ( 'import' ) )
            {
            // InternalFortXTrans.g:10951:2: ( ( 'import' ) )
            // InternalFortXTrans.g:10952:3: ( 'import' )
            {
             before(grammarAccess.getImportAccess().getImpsImportKeyword_1_0_0()); 
            // InternalFortXTrans.g:10953:3: ( 'import' )
            // InternalFortXTrans.g:10954:4: 'import'
            {
             before(grammarAccess.getImportAccess().getImpsImportKeyword_1_0_0()); 
            match(input,53,FOLLOW_2); 
             after(grammarAccess.getImportAccess().getImpsImportKeyword_1_0_0()); 

            }

             after(grammarAccess.getImportAccess().getImpsImportKeyword_1_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Import__ImpsAssignment_1_0"


    // $ANTLR start "rule__Import__ApiAssignment_1_1"
    // InternalFortXTrans.g:10965:1: rule__Import__ApiAssignment_1_1 : ( ( 'api' ) ) ;
    public final void rule__Import__ApiAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10969:1: ( ( ( 'api' ) ) )
            // InternalFortXTrans.g:10970:2: ( ( 'api' ) )
            {
            // InternalFortXTrans.g:10970:2: ( ( 'api' ) )
            // InternalFortXTrans.g:10971:3: ( 'api' )
            {
             before(grammarAccess.getImportAccess().getApiApiKeyword_1_1_0()); 
            // InternalFortXTrans.g:10972:3: ( 'api' )
            // InternalFortXTrans.g:10973:4: 'api'
            {
             before(grammarAccess.getImportAccess().getApiApiKeyword_1_1_0()); 
            match(input,29,FOLLOW_2); 
             after(grammarAccess.getImportAccess().getApiApiKeyword_1_1_0()); 

            }

             after(grammarAccess.getImportAccess().getApiApiKeyword_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Import__ApiAssignment_1_1"


    // $ANTLR start "rule__Import__AliasedimportedNamesAssignment_1_2"
    // InternalFortXTrans.g:10984:1: rule__Import__AliasedimportedNamesAssignment_1_2 : ( ruleAliasedAPINames ) ;
    public final void rule__Import__AliasedimportedNamesAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10988:1: ( ( ruleAliasedAPINames ) )
            // InternalFortXTrans.g:10989:2: ( ruleAliasedAPINames )
            {
            // InternalFortXTrans.g:10989:2: ( ruleAliasedAPINames )
            // InternalFortXTrans.g:10990:3: ruleAliasedAPINames
            {
             before(grammarAccess.getImportAccess().getAliasedimportedNamesAliasedAPINamesParserRuleCall_1_2_0()); 
            pushFollow(FOLLOW_2);
            ruleAliasedAPINames();

            state._fsp--;

             after(grammarAccess.getImportAccess().getAliasedimportedNamesAliasedAPINamesParserRuleCall_1_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Import__AliasedimportedNamesAssignment_1_2"


    // $ANTLR start "rule__Export__ExpAssignment_0_0"
    // InternalFortXTrans.g:10999:1: rule__Export__ExpAssignment_0_0 : ( ( 'export' ) ) ;
    public final void rule__Export__ExpAssignment_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11003:1: ( ( ( 'export' ) ) )
            // InternalFortXTrans.g:11004:2: ( ( 'export' ) )
            {
            // InternalFortXTrans.g:11004:2: ( ( 'export' ) )
            // InternalFortXTrans.g:11005:3: ( 'export' )
            {
             before(grammarAccess.getExportAccess().getExpExportKeyword_0_0_0()); 
            // InternalFortXTrans.g:11006:3: ( 'export' )
            // InternalFortXTrans.g:11007:4: 'export'
            {
             before(grammarAccess.getExportAccess().getExpExportKeyword_0_0_0()); 
            match(input,54,FOLLOW_2); 
             after(grammarAccess.getExportAccess().getExpExportKeyword_0_0_0()); 

            }

             after(grammarAccess.getExportAccess().getExpExportKeyword_0_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Export__ExpAssignment_0_0"


    // $ANTLR start "rule__Export__ExportedNameAssignment_0_1"
    // InternalFortXTrans.g:11018:1: rule__Export__ExportedNameAssignment_0_1 : ( ruleQualifiedName ) ;
    public final void rule__Export__ExportedNameAssignment_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11022:1: ( ( ruleQualifiedName ) )
            // InternalFortXTrans.g:11023:2: ( ruleQualifiedName )
            {
            // InternalFortXTrans.g:11023:2: ( ruleQualifiedName )
            // InternalFortXTrans.g:11024:3: ruleQualifiedName
            {
             before(grammarAccess.getExportAccess().getExportedNameQualifiedNameParserRuleCall_0_1_0()); 
            pushFollow(FOLLOW_2);
            ruleQualifiedName();

            state._fsp--;

             after(grammarAccess.getExportAccess().getExportedNameQualifiedNameParserRuleCall_0_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Export__ExportedNameAssignment_0_1"


    // $ANTLR start "rule__Export__ExpAssignment_1_0"
    // InternalFortXTrans.g:11033:1: rule__Export__ExpAssignment_1_0 : ( ( 'export' ) ) ;
    public final void rule__Export__ExpAssignment_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11037:1: ( ( ( 'export' ) ) )
            // InternalFortXTrans.g:11038:2: ( ( 'export' ) )
            {
            // InternalFortXTrans.g:11038:2: ( ( 'export' ) )
            // InternalFortXTrans.g:11039:3: ( 'export' )
            {
             before(grammarAccess.getExportAccess().getExpExportKeyword_1_0_0()); 
            // InternalFortXTrans.g:11040:3: ( 'export' )
            // InternalFortXTrans.g:11041:4: 'export'
            {
             before(grammarAccess.getExportAccess().getExpExportKeyword_1_0_0()); 
            match(input,54,FOLLOW_2); 
             after(grammarAccess.getExportAccess().getExpExportKeyword_1_0_0()); 

            }

             after(grammarAccess.getExportAccess().getExpExportKeyword_1_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Export__ExpAssignment_1_0"


    // $ANTLR start "rule__Export__BrackAssignment_1_1"
    // InternalFortXTrans.g:11052:1: rule__Export__BrackAssignment_1_1 : ( ( '{' ) ) ;
    public final void rule__Export__BrackAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11056:1: ( ( ( '{' ) ) )
            // InternalFortXTrans.g:11057:2: ( ( '{' ) )
            {
            // InternalFortXTrans.g:11057:2: ( ( '{' ) )
            // InternalFortXTrans.g:11058:3: ( '{' )
            {
             before(grammarAccess.getExportAccess().getBrackLeftCurlyBracketKeyword_1_1_0()); 
            // InternalFortXTrans.g:11059:3: ( '{' )
            // InternalFortXTrans.g:11060:4: '{'
            {
             before(grammarAccess.getExportAccess().getBrackLeftCurlyBracketKeyword_1_1_0()); 
            match(input,33,FOLLOW_2); 
             after(grammarAccess.getExportAccess().getBrackLeftCurlyBracketKeyword_1_1_0()); 

            }

             after(grammarAccess.getExportAccess().getBrackLeftCurlyBracketKeyword_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Export__BrackAssignment_1_1"


    // $ANTLR start "rule__Export__ExportedNameAssignment_1_2"
    // InternalFortXTrans.g:11071:1: rule__Export__ExportedNameAssignment_1_2 : ( ruleQualifiedName ) ;
    public final void rule__Export__ExportedNameAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11075:1: ( ( ruleQualifiedName ) )
            // InternalFortXTrans.g:11076:2: ( ruleQualifiedName )
            {
            // InternalFortXTrans.g:11076:2: ( ruleQualifiedName )
            // InternalFortXTrans.g:11077:3: ruleQualifiedName
            {
             before(grammarAccess.getExportAccess().getExportedNameQualifiedNameParserRuleCall_1_2_0()); 
            pushFollow(FOLLOW_2);
            ruleQualifiedName();

            state._fsp--;

             after(grammarAccess.getExportAccess().getExportedNameQualifiedNameParserRuleCall_1_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Export__ExportedNameAssignment_1_2"


    // $ANTLR start "rule__Export__ExportedNameAssignment_1_3_1"
    // InternalFortXTrans.g:11086:1: rule__Export__ExportedNameAssignment_1_3_1 : ( ruleQualifiedName ) ;
    public final void rule__Export__ExportedNameAssignment_1_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11090:1: ( ( ruleQualifiedName ) )
            // InternalFortXTrans.g:11091:2: ( ruleQualifiedName )
            {
            // InternalFortXTrans.g:11091:2: ( ruleQualifiedName )
            // InternalFortXTrans.g:11092:3: ruleQualifiedName
            {
             before(grammarAccess.getExportAccess().getExportedNameQualifiedNameParserRuleCall_1_3_1_0()); 
            pushFollow(FOLLOW_2);
            ruleQualifiedName();

            state._fsp--;

             after(grammarAccess.getExportAccess().getExportedNameQualifiedNameParserRuleCall_1_3_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Export__ExportedNameAssignment_1_3_1"


    // $ANTLR start "rule__ImportedNames__ImpnameAssignment_0_0"
    // InternalFortXTrans.g:11101:1: rule__ImportedNames__ImpnameAssignment_0_0 : ( ruleQualifiedName ) ;
    public final void rule__ImportedNames__ImpnameAssignment_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11105:1: ( ( ruleQualifiedName ) )
            // InternalFortXTrans.g:11106:2: ( ruleQualifiedName )
            {
            // InternalFortXTrans.g:11106:2: ( ruleQualifiedName )
            // InternalFortXTrans.g:11107:3: ruleQualifiedName
            {
             before(grammarAccess.getImportedNamesAccess().getImpnameQualifiedNameParserRuleCall_0_0_0()); 
            pushFollow(FOLLOW_2);
            ruleQualifiedName();

            state._fsp--;

             after(grammarAccess.getImportedNamesAccess().getImpnameQualifiedNameParserRuleCall_0_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__ImpnameAssignment_0_0"


    // $ANTLR start "rule__ImportedNames__ExceptAssignment_0_5_0"
    // InternalFortXTrans.g:11116:1: rule__ImportedNames__ExceptAssignment_0_5_0 : ( ( 'except' ) ) ;
    public final void rule__ImportedNames__ExceptAssignment_0_5_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11120:1: ( ( ( 'except' ) ) )
            // InternalFortXTrans.g:11121:2: ( ( 'except' ) )
            {
            // InternalFortXTrans.g:11121:2: ( ( 'except' ) )
            // InternalFortXTrans.g:11122:3: ( 'except' )
            {
             before(grammarAccess.getImportedNamesAccess().getExceptExceptKeyword_0_5_0_0()); 
            // InternalFortXTrans.g:11123:3: ( 'except' )
            // InternalFortXTrans.g:11124:4: 'except'
            {
             before(grammarAccess.getImportedNamesAccess().getExceptExceptKeyword_0_5_0_0()); 
            match(input,55,FOLLOW_2); 
             after(grammarAccess.getImportedNamesAccess().getExceptExceptKeyword_0_5_0_0()); 

            }

             after(grammarAccess.getImportedNamesAccess().getExceptExceptKeyword_0_5_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__ExceptAssignment_0_5_0"


    // $ANTLR start "rule__ImportedNames__SimpAssignment_0_5_1"
    // InternalFortXTrans.g:11135:1: rule__ImportedNames__SimpAssignment_0_5_1 : ( ruleSimpleNames ) ;
    public final void rule__ImportedNames__SimpAssignment_0_5_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11139:1: ( ( ruleSimpleNames ) )
            // InternalFortXTrans.g:11140:2: ( ruleSimpleNames )
            {
            // InternalFortXTrans.g:11140:2: ( ruleSimpleNames )
            // InternalFortXTrans.g:11141:3: ruleSimpleNames
            {
             before(grammarAccess.getImportedNamesAccess().getSimpSimpleNamesParserRuleCall_0_5_1_0()); 
            pushFollow(FOLLOW_2);
            ruleSimpleNames();

            state._fsp--;

             after(grammarAccess.getImportedNamesAccess().getSimpSimpleNamesParserRuleCall_0_5_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__SimpAssignment_0_5_1"


    // $ANTLR start "rule__ImportedNames__ImpnameAssignment_1_0"
    // InternalFortXTrans.g:11150:1: rule__ImportedNames__ImpnameAssignment_1_0 : ( ruleQualifiedName ) ;
    public final void rule__ImportedNames__ImpnameAssignment_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11154:1: ( ( ruleQualifiedName ) )
            // InternalFortXTrans.g:11155:2: ( ruleQualifiedName )
            {
            // InternalFortXTrans.g:11155:2: ( ruleQualifiedName )
            // InternalFortXTrans.g:11156:3: ruleQualifiedName
            {
             before(grammarAccess.getImportedNamesAccess().getImpnameQualifiedNameParserRuleCall_1_0_0()); 
            pushFollow(FOLLOW_2);
            ruleQualifiedName();

            state._fsp--;

             after(grammarAccess.getImportedNamesAccess().getImpnameQualifiedNameParserRuleCall_1_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__ImpnameAssignment_1_0"


    // $ANTLR start "rule__ImportedNames__SimpListAssignment_1_3"
    // InternalFortXTrans.g:11165:1: rule__ImportedNames__SimpListAssignment_1_3 : ( ruleAliasedSimpleName ) ;
    public final void rule__ImportedNames__SimpListAssignment_1_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11169:1: ( ( ruleAliasedSimpleName ) )
            // InternalFortXTrans.g:11170:2: ( ruleAliasedSimpleName )
            {
            // InternalFortXTrans.g:11170:2: ( ruleAliasedSimpleName )
            // InternalFortXTrans.g:11171:3: ruleAliasedSimpleName
            {
             before(grammarAccess.getImportedNamesAccess().getSimpListAliasedSimpleNameParserRuleCall_1_3_0()); 
            pushFollow(FOLLOW_2);
            ruleAliasedSimpleName();

            state._fsp--;

             after(grammarAccess.getImportedNamesAccess().getSimpListAliasedSimpleNameParserRuleCall_1_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__SimpListAssignment_1_3"


    // $ANTLR start "rule__ImportedNames__SimpListAssignment_1_4_1"
    // InternalFortXTrans.g:11180:1: rule__ImportedNames__SimpListAssignment_1_4_1 : ( ruleAliasedSimpleName ) ;
    public final void rule__ImportedNames__SimpListAssignment_1_4_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11184:1: ( ( ruleAliasedSimpleName ) )
            // InternalFortXTrans.g:11185:2: ( ruleAliasedSimpleName )
            {
            // InternalFortXTrans.g:11185:2: ( ruleAliasedSimpleName )
            // InternalFortXTrans.g:11186:3: ruleAliasedSimpleName
            {
             before(grammarAccess.getImportedNamesAccess().getSimpListAliasedSimpleNameParserRuleCall_1_4_1_0()); 
            pushFollow(FOLLOW_2);
            ruleAliasedSimpleName();

            state._fsp--;

             after(grammarAccess.getImportedNamesAccess().getSimpListAliasedSimpleNameParserRuleCall_1_4_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__SimpListAssignment_1_4_1"


    // $ANTLR start "rule__ImportedNames__CommaAssignment_1_5_0"
    // InternalFortXTrans.g:11195:1: rule__ImportedNames__CommaAssignment_1_5_0 : ( ( ',' ) ) ;
    public final void rule__ImportedNames__CommaAssignment_1_5_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11199:1: ( ( ( ',' ) ) )
            // InternalFortXTrans.g:11200:2: ( ( ',' ) )
            {
            // InternalFortXTrans.g:11200:2: ( ( ',' ) )
            // InternalFortXTrans.g:11201:3: ( ',' )
            {
             before(grammarAccess.getImportedNamesAccess().getCommaCommaKeyword_1_5_0_0()); 
            // InternalFortXTrans.g:11202:3: ( ',' )
            // InternalFortXTrans.g:11203:4: ','
            {
             before(grammarAccess.getImportedNamesAccess().getCommaCommaKeyword_1_5_0_0()); 
            match(input,31,FOLLOW_2); 
             after(grammarAccess.getImportedNamesAccess().getCommaCommaKeyword_1_5_0_0()); 

            }

             after(grammarAccess.getImportedNamesAccess().getCommaCommaKeyword_1_5_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__CommaAssignment_1_5_0"


    // $ANTLR start "rule__ImportedNames__DotsAssignment_1_5_1"
    // InternalFortXTrans.g:11214:1: rule__ImportedNames__DotsAssignment_1_5_1 : ( RULE_DOTS ) ;
    public final void rule__ImportedNames__DotsAssignment_1_5_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11218:1: ( ( RULE_DOTS ) )
            // InternalFortXTrans.g:11219:2: ( RULE_DOTS )
            {
            // InternalFortXTrans.g:11219:2: ( RULE_DOTS )
            // InternalFortXTrans.g:11220:3: RULE_DOTS
            {
             before(grammarAccess.getImportedNamesAccess().getDotsDOTSTerminalRuleCall_1_5_1_0()); 
            match(input,RULE_DOTS,FOLLOW_2); 
             after(grammarAccess.getImportedNamesAccess().getDotsDOTSTerminalRuleCall_1_5_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__DotsAssignment_1_5_1"


    // $ANTLR start "rule__ImportedNames__ImpnameAssignment_2_0"
    // InternalFortXTrans.g:11229:1: rule__ImportedNames__ImpnameAssignment_2_0 : ( ruleQualifiedName ) ;
    public final void rule__ImportedNames__ImpnameAssignment_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11233:1: ( ( ruleQualifiedName ) )
            // InternalFortXTrans.g:11234:2: ( ruleQualifiedName )
            {
            // InternalFortXTrans.g:11234:2: ( ruleQualifiedName )
            // InternalFortXTrans.g:11235:3: ruleQualifiedName
            {
             before(grammarAccess.getImportedNamesAccess().getImpnameQualifiedNameParserRuleCall_2_0_0()); 
            pushFollow(FOLLOW_2);
            ruleQualifiedName();

            state._fsp--;

             after(grammarAccess.getImportedNamesAccess().getImpnameQualifiedNameParserRuleCall_2_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__ImpnameAssignment_2_0"


    // $ANTLR start "rule__ImportedNames__AsnameAssignment_2_1_1"
    // InternalFortXTrans.g:11244:1: rule__ImportedNames__AsnameAssignment_2_1_1 : ( RULE_ID ) ;
    public final void rule__ImportedNames__AsnameAssignment_2_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11248:1: ( ( RULE_ID ) )
            // InternalFortXTrans.g:11249:2: ( RULE_ID )
            {
            // InternalFortXTrans.g:11249:2: ( RULE_ID )
            // InternalFortXTrans.g:11250:3: RULE_ID
            {
             before(grammarAccess.getImportedNamesAccess().getAsnameIDTerminalRuleCall_2_1_1_0()); 
            match(input,RULE_ID,FOLLOW_2); 
             after(grammarAccess.getImportedNamesAccess().getAsnameIDTerminalRuleCall_2_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__AsnameAssignment_2_1_1"


    // $ANTLR start "rule__QualifiedName__SAssignment_0_0"
    // InternalFortXTrans.g:11259:1: rule__QualifiedName__SAssignment_0_0 : ( ruleSimpleName ) ;
    public final void rule__QualifiedName__SAssignment_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11263:1: ( ( ruleSimpleName ) )
            // InternalFortXTrans.g:11264:2: ( ruleSimpleName )
            {
            // InternalFortXTrans.g:11264:2: ( ruleSimpleName )
            // InternalFortXTrans.g:11265:3: ruleSimpleName
            {
             before(grammarAccess.getQualifiedNameAccess().getSSimpleNameParserRuleCall_0_0_0()); 
            pushFollow(FOLLOW_2);
            ruleSimpleName();

            state._fsp--;

             after(grammarAccess.getQualifiedNameAccess().getSSimpleNameParserRuleCall_0_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedName__SAssignment_0_0"


    // $ANTLR start "rule__QualifiedName__DotsAssignment_0_1"
    // InternalFortXTrans.g:11274:1: rule__QualifiedName__DotsAssignment_0_1 : ( RULE_DOTS ) ;
    public final void rule__QualifiedName__DotsAssignment_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11278:1: ( ( RULE_DOTS ) )
            // InternalFortXTrans.g:11279:2: ( RULE_DOTS )
            {
            // InternalFortXTrans.g:11279:2: ( RULE_DOTS )
            // InternalFortXTrans.g:11280:3: RULE_DOTS
            {
             before(grammarAccess.getQualifiedNameAccess().getDotsDOTSTerminalRuleCall_0_1_0()); 
            match(input,RULE_DOTS,FOLLOW_2); 
             after(grammarAccess.getQualifiedNameAccess().getDotsDOTSTerminalRuleCall_0_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedName__DotsAssignment_0_1"


    // $ANTLR start "rule__QualifiedName__SAssignment_1_0"
    // InternalFortXTrans.g:11289:1: rule__QualifiedName__SAssignment_1_0 : ( ruleSimpleName ) ;
    public final void rule__QualifiedName__SAssignment_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11293:1: ( ( ruleSimpleName ) )
            // InternalFortXTrans.g:11294:2: ( ruleSimpleName )
            {
            // InternalFortXTrans.g:11294:2: ( ruleSimpleName )
            // InternalFortXTrans.g:11295:3: ruleSimpleName
            {
             before(grammarAccess.getQualifiedNameAccess().getSSimpleNameParserRuleCall_1_0_0()); 
            pushFollow(FOLLOW_2);
            ruleSimpleName();

            state._fsp--;

             after(grammarAccess.getQualifiedNameAccess().getSSimpleNameParserRuleCall_1_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedName__SAssignment_1_0"


    // $ANTLR start "rule__QualifiedName__SAssignment_1_1_1"
    // InternalFortXTrans.g:11304:1: rule__QualifiedName__SAssignment_1_1_1 : ( ruleSimpleName ) ;
    public final void rule__QualifiedName__SAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11308:1: ( ( ruleSimpleName ) )
            // InternalFortXTrans.g:11309:2: ( ruleSimpleName )
            {
            // InternalFortXTrans.g:11309:2: ( ruleSimpleName )
            // InternalFortXTrans.g:11310:3: ruleSimpleName
            {
             before(grammarAccess.getQualifiedNameAccess().getSSimpleNameParserRuleCall_1_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleSimpleName();

            state._fsp--;

             after(grammarAccess.getQualifiedNameAccess().getSSimpleNameParserRuleCall_1_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedName__SAssignment_1_1_1"


    // $ANTLR start "rule__QualifiedName__DotsAssignment_1_2"
    // InternalFortXTrans.g:11319:1: rule__QualifiedName__DotsAssignment_1_2 : ( RULE_DOTS ) ;
    public final void rule__QualifiedName__DotsAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11323:1: ( ( RULE_DOTS ) )
            // InternalFortXTrans.g:11324:2: ( RULE_DOTS )
            {
            // InternalFortXTrans.g:11324:2: ( RULE_DOTS )
            // InternalFortXTrans.g:11325:3: RULE_DOTS
            {
             before(grammarAccess.getQualifiedNameAccess().getDotsDOTSTerminalRuleCall_1_2_0()); 
            match(input,RULE_DOTS,FOLLOW_2); 
             after(grammarAccess.getQualifiedNameAccess().getDotsDOTSTerminalRuleCall_1_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedName__DotsAssignment_1_2"


    // $ANTLR start "rule__QualifiedNameTuple__QlistAssignment_1"
    // InternalFortXTrans.g:11334:1: rule__QualifiedNameTuple__QlistAssignment_1 : ( ruleQualifiedName ) ;
    public final void rule__QualifiedNameTuple__QlistAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11338:1: ( ( ruleQualifiedName ) )
            // InternalFortXTrans.g:11339:2: ( ruleQualifiedName )
            {
            // InternalFortXTrans.g:11339:2: ( ruleQualifiedName )
            // InternalFortXTrans.g:11340:3: ruleQualifiedName
            {
             before(grammarAccess.getQualifiedNameTupleAccess().getQlistQualifiedNameParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleQualifiedName();

            state._fsp--;

             after(grammarAccess.getQualifiedNameTupleAccess().getQlistQualifiedNameParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedNameTuple__QlistAssignment_1"


    // $ANTLR start "rule__QualifiedNameTuple__QlistAssignment_2_1"
    // InternalFortXTrans.g:11349:1: rule__QualifiedNameTuple__QlistAssignment_2_1 : ( ruleQualifiedName ) ;
    public final void rule__QualifiedNameTuple__QlistAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11353:1: ( ( ruleQualifiedName ) )
            // InternalFortXTrans.g:11354:2: ( ruleQualifiedName )
            {
            // InternalFortXTrans.g:11354:2: ( ruleQualifiedName )
            // InternalFortXTrans.g:11355:3: ruleQualifiedName
            {
             before(grammarAccess.getQualifiedNameTupleAccess().getQlistQualifiedNameParserRuleCall_2_1_0()); 
            pushFollow(FOLLOW_2);
            ruleQualifiedName();

            state._fsp--;

             after(grammarAccess.getQualifiedNameTupleAccess().getQlistQualifiedNameParserRuleCall_2_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedNameTuple__QlistAssignment_2_1"


    // $ANTLR start "rule__SimpleNames__NameListAssignment_0"
    // InternalFortXTrans.g:11364:1: rule__SimpleNames__NameListAssignment_0 : ( ruleSimpleName ) ;
    public final void rule__SimpleNames__NameListAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11368:1: ( ( ruleSimpleName ) )
            // InternalFortXTrans.g:11369:2: ( ruleSimpleName )
            {
            // InternalFortXTrans.g:11369:2: ( ruleSimpleName )
            // InternalFortXTrans.g:11370:3: ruleSimpleName
            {
             before(grammarAccess.getSimpleNamesAccess().getNameListSimpleNameParserRuleCall_0_0()); 
            pushFollow(FOLLOW_2);
            ruleSimpleName();

            state._fsp--;

             after(grammarAccess.getSimpleNamesAccess().getNameListSimpleNameParserRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleNames__NameListAssignment_0"


    // $ANTLR start "rule__SimpleNames__BrackAssignment_1_0"
    // InternalFortXTrans.g:11379:1: rule__SimpleNames__BrackAssignment_1_0 : ( ( '{' ) ) ;
    public final void rule__SimpleNames__BrackAssignment_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11383:1: ( ( ( '{' ) ) )
            // InternalFortXTrans.g:11384:2: ( ( '{' ) )
            {
            // InternalFortXTrans.g:11384:2: ( ( '{' ) )
            // InternalFortXTrans.g:11385:3: ( '{' )
            {
             before(grammarAccess.getSimpleNamesAccess().getBrackLeftCurlyBracketKeyword_1_0_0()); 
            // InternalFortXTrans.g:11386:3: ( '{' )
            // InternalFortXTrans.g:11387:4: '{'
            {
             before(grammarAccess.getSimpleNamesAccess().getBrackLeftCurlyBracketKeyword_1_0_0()); 
            match(input,33,FOLLOW_2); 
             after(grammarAccess.getSimpleNamesAccess().getBrackLeftCurlyBracketKeyword_1_0_0()); 

            }

             after(grammarAccess.getSimpleNamesAccess().getBrackLeftCurlyBracketKeyword_1_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleNames__BrackAssignment_1_0"


    // $ANTLR start "rule__SimpleNames__NameListAssignment_1_1"
    // InternalFortXTrans.g:11398:1: rule__SimpleNames__NameListAssignment_1_1 : ( ruleSimpleName ) ;
    public final void rule__SimpleNames__NameListAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11402:1: ( ( ruleSimpleName ) )
            // InternalFortXTrans.g:11403:2: ( ruleSimpleName )
            {
            // InternalFortXTrans.g:11403:2: ( ruleSimpleName )
            // InternalFortXTrans.g:11404:3: ruleSimpleName
            {
             before(grammarAccess.getSimpleNamesAccess().getNameListSimpleNameParserRuleCall_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleSimpleName();

            state._fsp--;

             after(grammarAccess.getSimpleNamesAccess().getNameListSimpleNameParserRuleCall_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleNames__NameListAssignment_1_1"


    // $ANTLR start "rule__SimpleNames__NameListAssignment_1_2_1"
    // InternalFortXTrans.g:11413:1: rule__SimpleNames__NameListAssignment_1_2_1 : ( ruleSimpleName ) ;
    public final void rule__SimpleNames__NameListAssignment_1_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11417:1: ( ( ruleSimpleName ) )
            // InternalFortXTrans.g:11418:2: ( ruleSimpleName )
            {
            // InternalFortXTrans.g:11418:2: ( ruleSimpleName )
            // InternalFortXTrans.g:11419:3: ruleSimpleName
            {
             before(grammarAccess.getSimpleNamesAccess().getNameListSimpleNameParserRuleCall_1_2_1_0()); 
            pushFollow(FOLLOW_2);
            ruleSimpleName();

            state._fsp--;

             after(grammarAccess.getSimpleNamesAccess().getNameListSimpleNameParserRuleCall_1_2_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleNames__NameListAssignment_1_2_1"


    // $ANTLR start "rule__SimpleName__NameAssignment"
    // InternalFortXTrans.g:11428:1: rule__SimpleName__NameAssignment : ( RULE_ID ) ;
    public final void rule__SimpleName__NameAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11432:1: ( ( RULE_ID ) )
            // InternalFortXTrans.g:11433:2: ( RULE_ID )
            {
            // InternalFortXTrans.g:11433:2: ( RULE_ID )
            // InternalFortXTrans.g:11434:3: RULE_ID
            {
             before(grammarAccess.getSimpleNameAccess().getNameIDTerminalRuleCall_0()); 
            match(input,RULE_ID,FOLLOW_2); 
             after(grammarAccess.getSimpleNameAccess().getNameIDTerminalRuleCall_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleName__NameAssignment"


    // $ANTLR start "rule__AliasedSimpleName__OrigAssignment_0"
    // InternalFortXTrans.g:11443:1: rule__AliasedSimpleName__OrigAssignment_0 : ( RULE_ID ) ;
    public final void rule__AliasedSimpleName__OrigAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11447:1: ( ( RULE_ID ) )
            // InternalFortXTrans.g:11448:2: ( RULE_ID )
            {
            // InternalFortXTrans.g:11448:2: ( RULE_ID )
            // InternalFortXTrans.g:11449:3: RULE_ID
            {
             before(grammarAccess.getAliasedSimpleNameAccess().getOrigIDTerminalRuleCall_0_0()); 
            match(input,RULE_ID,FOLLOW_2); 
             after(grammarAccess.getAliasedSimpleNameAccess().getOrigIDTerminalRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedSimpleName__OrigAssignment_0"


    // $ANTLR start "rule__AliasedSimpleName__AsNameAssignment_1_1"
    // InternalFortXTrans.g:11458:1: rule__AliasedSimpleName__AsNameAssignment_1_1 : ( RULE_ID ) ;
    public final void rule__AliasedSimpleName__AsNameAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11462:1: ( ( RULE_ID ) )
            // InternalFortXTrans.g:11463:2: ( RULE_ID )
            {
            // InternalFortXTrans.g:11463:2: ( RULE_ID )
            // InternalFortXTrans.g:11464:3: RULE_ID
            {
             before(grammarAccess.getAliasedSimpleNameAccess().getAsNameIDTerminalRuleCall_1_1_0()); 
            match(input,RULE_ID,FOLLOW_2); 
             after(grammarAccess.getAliasedSimpleNameAccess().getAsNameIDTerminalRuleCall_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedSimpleName__AsNameAssignment_1_1"


    // $ANTLR start "rule__AliasedAPINames__NameListAssignment_0"
    // InternalFortXTrans.g:11473:1: rule__AliasedAPINames__NameListAssignment_0 : ( ruleAliasedAPIName ) ;
    public final void rule__AliasedAPINames__NameListAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11477:1: ( ( ruleAliasedAPIName ) )
            // InternalFortXTrans.g:11478:2: ( ruleAliasedAPIName )
            {
            // InternalFortXTrans.g:11478:2: ( ruleAliasedAPIName )
            // InternalFortXTrans.g:11479:3: ruleAliasedAPIName
            {
             before(grammarAccess.getAliasedAPINamesAccess().getNameListAliasedAPINameParserRuleCall_0_0()); 
            pushFollow(FOLLOW_2);
            ruleAliasedAPIName();

            state._fsp--;

             after(grammarAccess.getAliasedAPINamesAccess().getNameListAliasedAPINameParserRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedAPINames__NameListAssignment_0"


    // $ANTLR start "rule__AliasedAPINames__BrackAssignment_1_0"
    // InternalFortXTrans.g:11488:1: rule__AliasedAPINames__BrackAssignment_1_0 : ( ( '{' ) ) ;
    public final void rule__AliasedAPINames__BrackAssignment_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11492:1: ( ( ( '{' ) ) )
            // InternalFortXTrans.g:11493:2: ( ( '{' ) )
            {
            // InternalFortXTrans.g:11493:2: ( ( '{' ) )
            // InternalFortXTrans.g:11494:3: ( '{' )
            {
             before(grammarAccess.getAliasedAPINamesAccess().getBrackLeftCurlyBracketKeyword_1_0_0()); 
            // InternalFortXTrans.g:11495:3: ( '{' )
            // InternalFortXTrans.g:11496:4: '{'
            {
             before(grammarAccess.getAliasedAPINamesAccess().getBrackLeftCurlyBracketKeyword_1_0_0()); 
            match(input,33,FOLLOW_2); 
             after(grammarAccess.getAliasedAPINamesAccess().getBrackLeftCurlyBracketKeyword_1_0_0()); 

            }

             after(grammarAccess.getAliasedAPINamesAccess().getBrackLeftCurlyBracketKeyword_1_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedAPINames__BrackAssignment_1_0"


    // $ANTLR start "rule__AliasedAPINames__NameListAssignment_1_1"
    // InternalFortXTrans.g:11507:1: rule__AliasedAPINames__NameListAssignment_1_1 : ( ruleAliasedAPIName ) ;
    public final void rule__AliasedAPINames__NameListAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11511:1: ( ( ruleAliasedAPIName ) )
            // InternalFortXTrans.g:11512:2: ( ruleAliasedAPIName )
            {
            // InternalFortXTrans.g:11512:2: ( ruleAliasedAPIName )
            // InternalFortXTrans.g:11513:3: ruleAliasedAPIName
            {
             before(grammarAccess.getAliasedAPINamesAccess().getNameListAliasedAPINameParserRuleCall_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleAliasedAPIName();

            state._fsp--;

             after(grammarAccess.getAliasedAPINamesAccess().getNameListAliasedAPINameParserRuleCall_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedAPINames__NameListAssignment_1_1"


    // $ANTLR start "rule__AliasedAPINames__NameListAssignment_1_2_1"
    // InternalFortXTrans.g:11522:1: rule__AliasedAPINames__NameListAssignment_1_2_1 : ( ruleAliasedAPIName ) ;
    public final void rule__AliasedAPINames__NameListAssignment_1_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11526:1: ( ( ruleAliasedAPIName ) )
            // InternalFortXTrans.g:11527:2: ( ruleAliasedAPIName )
            {
            // InternalFortXTrans.g:11527:2: ( ruleAliasedAPIName )
            // InternalFortXTrans.g:11528:3: ruleAliasedAPIName
            {
             before(grammarAccess.getAliasedAPINamesAccess().getNameListAliasedAPINameParserRuleCall_1_2_1_0()); 
            pushFollow(FOLLOW_2);
            ruleAliasedAPIName();

            state._fsp--;

             after(grammarAccess.getAliasedAPINamesAccess().getNameListAliasedAPINameParserRuleCall_1_2_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedAPINames__NameListAssignment_1_2_1"


    // $ANTLR start "rule__AliasedAPIName__OrigAssignment_0"
    // InternalFortXTrans.g:11537:1: rule__AliasedAPIName__OrigAssignment_0 : ( ruleQualifiedName ) ;
    public final void rule__AliasedAPIName__OrigAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11541:1: ( ( ruleQualifiedName ) )
            // InternalFortXTrans.g:11542:2: ( ruleQualifiedName )
            {
            // InternalFortXTrans.g:11542:2: ( ruleQualifiedName )
            // InternalFortXTrans.g:11543:3: ruleQualifiedName
            {
             before(grammarAccess.getAliasedAPINameAccess().getOrigQualifiedNameParserRuleCall_0_0()); 
            pushFollow(FOLLOW_2);
            ruleQualifiedName();

            state._fsp--;

             after(grammarAccess.getAliasedAPINameAccess().getOrigQualifiedNameParserRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedAPIName__OrigAssignment_0"


    // $ANTLR start "rule__AliasedAPIName__AsNameAssignment_1_1"
    // InternalFortXTrans.g:11552:1: rule__AliasedAPIName__AsNameAssignment_1_1 : ( RULE_ID ) ;
    public final void rule__AliasedAPIName__AsNameAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11556:1: ( ( RULE_ID ) )
            // InternalFortXTrans.g:11557:2: ( RULE_ID )
            {
            // InternalFortXTrans.g:11557:2: ( RULE_ID )
            // InternalFortXTrans.g:11558:3: RULE_ID
            {
             before(grammarAccess.getAliasedAPINameAccess().getAsNameIDTerminalRuleCall_1_1_0()); 
            match(input,RULE_ID,FOLLOW_2); 
             after(grammarAccess.getAliasedAPINameAccess().getAsNameIDTerminalRuleCall_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedAPIName__AsNameAssignment_1_1"


    // $ANTLR start "rule__Decls__DeclsAssignment"
    // InternalFortXTrans.g:11567:1: rule__Decls__DeclsAssignment : ( ruleDecl ) ;
    public final void rule__Decls__DeclsAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11571:1: ( ( ruleDecl ) )
            // InternalFortXTrans.g:11572:2: ( ruleDecl )
            {
            // InternalFortXTrans.g:11572:2: ( ruleDecl )
            // InternalFortXTrans.g:11573:3: ruleDecl
            {
             before(grammarAccess.getDeclsAccess().getDeclsDeclParserRuleCall_0()); 
            pushFollow(FOLLOW_2);
            ruleDecl();

            state._fsp--;

             after(grammarAccess.getDeclsAccess().getDeclsDeclParserRuleCall_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Decls__DeclsAssignment"


    // $ANTLR start "rule__Decl__FunctionAssignment_0"
    // InternalFortXTrans.g:11582:1: rule__Decl__FunctionAssignment_0 : ( ruleFnDecl ) ;
    public final void rule__Decl__FunctionAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11586:1: ( ( ruleFnDecl ) )
            // InternalFortXTrans.g:11587:2: ( ruleFnDecl )
            {
            // InternalFortXTrans.g:11587:2: ( ruleFnDecl )
            // InternalFortXTrans.g:11588:3: ruleFnDecl
            {
             before(grammarAccess.getDeclAccess().getFunctionFnDeclParserRuleCall_0_0()); 
            pushFollow(FOLLOW_2);
            ruleFnDecl();

            state._fsp--;

             after(grammarAccess.getDeclAccess().getFunctionFnDeclParserRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Decl__FunctionAssignment_0"


    // $ANTLR start "rule__Decl__FieldAssignment_1"
    // InternalFortXTrans.g:11597:1: rule__Decl__FieldAssignment_1 : ( ruleFieldDecl ) ;
    public final void rule__Decl__FieldAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11601:1: ( ( ruleFieldDecl ) )
            // InternalFortXTrans.g:11602:2: ( ruleFieldDecl )
            {
            // InternalFortXTrans.g:11602:2: ( ruleFieldDecl )
            // InternalFortXTrans.g:11603:3: ruleFieldDecl
            {
             before(grammarAccess.getDeclAccess().getFieldFieldDeclParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleFieldDecl();

            state._fsp--;

             after(grammarAccess.getDeclAccess().getFieldFieldDeclParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Decl__FieldAssignment_1"


    // $ANTLR start "rule__FnMods__ModsAssignment"
    // InternalFortXTrans.g:11612:1: rule__FnMods__ModsAssignment : ( ruleFnMod ) ;
    public final void rule__FnMods__ModsAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11616:1: ( ( ruleFnMod ) )
            // InternalFortXTrans.g:11617:2: ( ruleFnMod )
            {
            // InternalFortXTrans.g:11617:2: ( ruleFnMod )
            // InternalFortXTrans.g:11618:3: ruleFnMod
            {
             before(grammarAccess.getFnModsAccess().getModsFnModParserRuleCall_0()); 
            pushFollow(FOLLOW_2);
            ruleFnMod();

            state._fsp--;

             after(grammarAccess.getFnModsAccess().getModsFnModParserRuleCall_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FnMods__ModsAssignment"


    // $ANTLR start "rule__FnMod__ModtypeAssignment_0"
    // InternalFortXTrans.g:11627:1: rule__FnMod__ModtypeAssignment_0 : ( ( 'private' ) ) ;
    public final void rule__FnMod__ModtypeAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11631:1: ( ( ( 'private' ) ) )
            // InternalFortXTrans.g:11632:2: ( ( 'private' ) )
            {
            // InternalFortXTrans.g:11632:2: ( ( 'private' ) )
            // InternalFortXTrans.g:11633:3: ( 'private' )
            {
             before(grammarAccess.getFnModAccess().getModtypePrivateKeyword_0_0()); 
            // InternalFortXTrans.g:11634:3: ( 'private' )
            // InternalFortXTrans.g:11635:4: 'private'
            {
             before(grammarAccess.getFnModAccess().getModtypePrivateKeyword_0_0()); 
            match(input,56,FOLLOW_2); 
             after(grammarAccess.getFnModAccess().getModtypePrivateKeyword_0_0()); 

            }

             after(grammarAccess.getFnModAccess().getModtypePrivateKeyword_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FnMod__ModtypeAssignment_0"


    // $ANTLR start "rule__FnMod__ModtypeAssignment_1"
    // InternalFortXTrans.g:11646:1: rule__FnMod__ModtypeAssignment_1 : ( ( 'test' ) ) ;
    public final void rule__FnMod__ModtypeAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11650:1: ( ( ( 'test' ) ) )
            // InternalFortXTrans.g:11651:2: ( ( 'test' ) )
            {
            // InternalFortXTrans.g:11651:2: ( ( 'test' ) )
            // InternalFortXTrans.g:11652:3: ( 'test' )
            {
             before(grammarAccess.getFnModAccess().getModtypeTestKeyword_1_0()); 
            // InternalFortXTrans.g:11653:3: ( 'test' )
            // InternalFortXTrans.g:11654:4: 'test'
            {
             before(grammarAccess.getFnModAccess().getModtypeTestKeyword_1_0()); 
            match(input,57,FOLLOW_2); 
             after(grammarAccess.getFnModAccess().getModtypeTestKeyword_1_0()); 

            }

             after(grammarAccess.getFnModAccess().getModtypeTestKeyword_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FnMod__ModtypeAssignment_1"


    // $ANTLR start "rule__FnMod__ModtypeAssignment_2"
    // InternalFortXTrans.g:11665:1: rule__FnMod__ModtypeAssignment_2 : ( ( 'atomic' ) ) ;
    public final void rule__FnMod__ModtypeAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11669:1: ( ( ( 'atomic' ) ) )
            // InternalFortXTrans.g:11670:2: ( ( 'atomic' ) )
            {
            // InternalFortXTrans.g:11670:2: ( ( 'atomic' ) )
            // InternalFortXTrans.g:11671:3: ( 'atomic' )
            {
             before(grammarAccess.getFnModAccess().getModtypeAtomicKeyword_2_0()); 
            // InternalFortXTrans.g:11672:3: ( 'atomic' )
            // InternalFortXTrans.g:11673:4: 'atomic'
            {
             before(grammarAccess.getFnModAccess().getModtypeAtomicKeyword_2_0()); 
            match(input,58,FOLLOW_2); 
             after(grammarAccess.getFnModAccess().getModtypeAtomicKeyword_2_0()); 

            }

             after(grammarAccess.getFnModAccess().getModtypeAtomicKeyword_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FnMod__ModtypeAssignment_2"


    // $ANTLR start "rule__FnMod__ModtypeAssignment_3"
    // InternalFortXTrans.g:11684:1: rule__FnMod__ModtypeAssignment_3 : ( ( 'io' ) ) ;
    public final void rule__FnMod__ModtypeAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11688:1: ( ( ( 'io' ) ) )
            // InternalFortXTrans.g:11689:2: ( ( 'io' ) )
            {
            // InternalFortXTrans.g:11689:2: ( ( 'io' ) )
            // InternalFortXTrans.g:11690:3: ( 'io' )
            {
             before(grammarAccess.getFnModAccess().getModtypeIoKeyword_3_0()); 
            // InternalFortXTrans.g:11691:3: ( 'io' )
            // InternalFortXTrans.g:11692:4: 'io'
            {
             before(grammarAccess.getFnModAccess().getModtypeIoKeyword_3_0()); 
            match(input,59,FOLLOW_2); 
             after(grammarAccess.getFnModAccess().getModtypeIoKeyword_3_0()); 

            }

             after(grammarAccess.getFnModAccess().getModtypeIoKeyword_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FnMod__ModtypeAssignment_3"


    // $ANTLR start "rule__ValParam__ParamsAssignment_0"
    // InternalFortXTrans.g:11703:1: rule__ValParam__ParamsAssignment_0 : ( ruleParam ) ;
    public final void rule__ValParam__ParamsAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11707:1: ( ( ruleParam ) )
            // InternalFortXTrans.g:11708:2: ( ruleParam )
            {
            // InternalFortXTrans.g:11708:2: ( ruleParam )
            // InternalFortXTrans.g:11709:3: ruleParam
            {
             before(grammarAccess.getValParamAccess().getParamsParamParserRuleCall_0_0()); 
            pushFollow(FOLLOW_2);
            ruleParam();

            state._fsp--;

             after(grammarAccess.getValParamAccess().getParamsParamParserRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValParam__ParamsAssignment_0"


    // $ANTLR start "rule__ValParam__BrackAssignment_1_0"
    // InternalFortXTrans.g:11718:1: rule__ValParam__BrackAssignment_1_0 : ( ( '(' ) ) ;
    public final void rule__ValParam__BrackAssignment_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11722:1: ( ( ( '(' ) ) )
            // InternalFortXTrans.g:11723:2: ( ( '(' ) )
            {
            // InternalFortXTrans.g:11723:2: ( ( '(' ) )
            // InternalFortXTrans.g:11724:3: ( '(' )
            {
             before(grammarAccess.getValParamAccess().getBrackLeftParenthesisKeyword_1_0_0()); 
            // InternalFortXTrans.g:11725:3: ( '(' )
            // InternalFortXTrans.g:11726:4: '('
            {
             before(grammarAccess.getValParamAccess().getBrackLeftParenthesisKeyword_1_0_0()); 
            match(input,35,FOLLOW_2); 
             after(grammarAccess.getValParamAccess().getBrackLeftParenthesisKeyword_1_0_0()); 

            }

             after(grammarAccess.getValParamAccess().getBrackLeftParenthesisKeyword_1_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValParam__BrackAssignment_1_0"


    // $ANTLR start "rule__ValParam__ParamsAssignment_1_1_0"
    // InternalFortXTrans.g:11737:1: rule__ValParam__ParamsAssignment_1_1_0 : ( ruleParam ) ;
    public final void rule__ValParam__ParamsAssignment_1_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11741:1: ( ( ruleParam ) )
            // InternalFortXTrans.g:11742:2: ( ruleParam )
            {
            // InternalFortXTrans.g:11742:2: ( ruleParam )
            // InternalFortXTrans.g:11743:3: ruleParam
            {
             before(grammarAccess.getValParamAccess().getParamsParamParserRuleCall_1_1_0_0()); 
            pushFollow(FOLLOW_2);
            ruleParam();

            state._fsp--;

             after(grammarAccess.getValParamAccess().getParamsParamParserRuleCall_1_1_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValParam__ParamsAssignment_1_1_0"


    // $ANTLR start "rule__ValParam__ParamsAssignment_1_1_1_1"
    // InternalFortXTrans.g:11752:1: rule__ValParam__ParamsAssignment_1_1_1_1 : ( ruleParam ) ;
    public final void rule__ValParam__ParamsAssignment_1_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11756:1: ( ( ruleParam ) )
            // InternalFortXTrans.g:11757:2: ( ruleParam )
            {
            // InternalFortXTrans.g:11757:2: ( ruleParam )
            // InternalFortXTrans.g:11758:3: ruleParam
            {
             before(grammarAccess.getValParamAccess().getParamsParamParserRuleCall_1_1_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleParam();

            state._fsp--;

             after(grammarAccess.getValParamAccess().getParamsParamParserRuleCall_1_1_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValParam__ParamsAssignment_1_1_1_1"


    // $ANTLR start "rule__Param__BIdAssignment_0"
    // InternalFortXTrans.g:11767:1: rule__Param__BIdAssignment_0 : ( ruleBindId ) ;
    public final void rule__Param__BIdAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11771:1: ( ( ruleBindId ) )
            // InternalFortXTrans.g:11772:2: ( ruleBindId )
            {
            // InternalFortXTrans.g:11772:2: ( ruleBindId )
            // InternalFortXTrans.g:11773:3: ruleBindId
            {
             before(grammarAccess.getParamAccess().getBIdBindIdParserRuleCall_0_0()); 
            pushFollow(FOLLOW_2);
            ruleBindId();

            state._fsp--;

             after(grammarAccess.getParamAccess().getBIdBindIdParserRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Param__BIdAssignment_0"


    // $ANTLR start "rule__Param__IstypeAssignment_1"
    // InternalFortXTrans.g:11782:1: rule__Param__IstypeAssignment_1 : ( ruleIsType ) ;
    public final void rule__Param__IstypeAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11786:1: ( ( ruleIsType ) )
            // InternalFortXTrans.g:11787:2: ( ruleIsType )
            {
            // InternalFortXTrans.g:11787:2: ( ruleIsType )
            // InternalFortXTrans.g:11788:3: ruleIsType
            {
             before(grammarAccess.getParamAccess().getIstypeIsTypeParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleIsType();

            state._fsp--;

             after(grammarAccess.getParamAccess().getIstypeIsTypeParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Param__IstypeAssignment_1"


    // $ANTLR start "rule__RetType__EmptyAssignment_0_1"
    // InternalFortXTrans.g:11797:1: rule__RetType__EmptyAssignment_0_1 : ( ( '(' ) ) ;
    public final void rule__RetType__EmptyAssignment_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11801:1: ( ( ( '(' ) ) )
            // InternalFortXTrans.g:11802:2: ( ( '(' ) )
            {
            // InternalFortXTrans.g:11802:2: ( ( '(' ) )
            // InternalFortXTrans.g:11803:3: ( '(' )
            {
             before(grammarAccess.getRetTypeAccess().getEmptyLeftParenthesisKeyword_0_1_0()); 
            // InternalFortXTrans.g:11804:3: ( '(' )
            // InternalFortXTrans.g:11805:4: '('
            {
             before(grammarAccess.getRetTypeAccess().getEmptyLeftParenthesisKeyword_0_1_0()); 
            match(input,35,FOLLOW_2); 
             after(grammarAccess.getRetTypeAccess().getEmptyLeftParenthesisKeyword_0_1_0()); 

            }

             after(grammarAccess.getRetTypeAccess().getEmptyLeftParenthesisKeyword_0_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RetType__EmptyAssignment_0_1"


    // $ANTLR start "rule__RetType__TypeAssignment_1_1"
    // InternalFortXTrans.g:11816:1: rule__RetType__TypeAssignment_1_1 : ( ruleSimpleName ) ;
    public final void rule__RetType__TypeAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11820:1: ( ( ruleSimpleName ) )
            // InternalFortXTrans.g:11821:2: ( ruleSimpleName )
            {
            // InternalFortXTrans.g:11821:2: ( ruleSimpleName )
            // InternalFortXTrans.g:11822:3: ruleSimpleName
            {
             before(grammarAccess.getRetTypeAccess().getTypeSimpleNameParserRuleCall_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleSimpleName();

            state._fsp--;

             after(grammarAccess.getRetTypeAccess().getTypeSimpleNameParserRuleCall_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RetType__TypeAssignment_1_1"


    // $ANTLR start "rule__TupleType__TypesAssignment_1"
    // InternalFortXTrans.g:11831:1: rule__TupleType__TypesAssignment_1 : ( ruleSimpleName ) ;
    public final void rule__TupleType__TypesAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11835:1: ( ( ruleSimpleName ) )
            // InternalFortXTrans.g:11836:2: ( ruleSimpleName )
            {
            // InternalFortXTrans.g:11836:2: ( ruleSimpleName )
            // InternalFortXTrans.g:11837:3: ruleSimpleName
            {
             before(grammarAccess.getTupleTypeAccess().getTypesSimpleNameParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleSimpleName();

            state._fsp--;

             after(grammarAccess.getTupleTypeAccess().getTypesSimpleNameParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TupleType__TypesAssignment_1"


    // $ANTLR start "rule__TupleType__TypesAssignment_2_1"
    // InternalFortXTrans.g:11846:1: rule__TupleType__TypesAssignment_2_1 : ( ruleSimpleName ) ;
    public final void rule__TupleType__TypesAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11850:1: ( ( ruleSimpleName ) )
            // InternalFortXTrans.g:11851:2: ( ruleSimpleName )
            {
            // InternalFortXTrans.g:11851:2: ( ruleSimpleName )
            // InternalFortXTrans.g:11852:3: ruleSimpleName
            {
             before(grammarAccess.getTupleTypeAccess().getTypesSimpleNameParserRuleCall_2_1_0()); 
            pushFollow(FOLLOW_2);
            ruleSimpleName();

            state._fsp--;

             after(grammarAccess.getTupleTypeAccess().getTypesSimpleNameParserRuleCall_2_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TupleType__TypesAssignment_2_1"


    // $ANTLR start "rule__FnDecl__ModsAssignment_0"
    // InternalFortXTrans.g:11861:1: rule__FnDecl__ModsAssignment_0 : ( ruleFnMods ) ;
    public final void rule__FnDecl__ModsAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11865:1: ( ( ruleFnMods ) )
            // InternalFortXTrans.g:11866:2: ( ruleFnMods )
            {
            // InternalFortXTrans.g:11866:2: ( ruleFnMods )
            // InternalFortXTrans.g:11867:3: ruleFnMods
            {
             before(grammarAccess.getFnDeclAccess().getModsFnModsParserRuleCall_0_0()); 
            pushFollow(FOLLOW_2);
            ruleFnMods();

            state._fsp--;

             after(grammarAccess.getFnDeclAccess().getModsFnModsParserRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FnDecl__ModsAssignment_0"


    // $ANTLR start "rule__FnDecl__NameAssignment_1"
    // InternalFortXTrans.g:11876:1: rule__FnDecl__NameAssignment_1 : ( RULE_ID ) ;
    public final void rule__FnDecl__NameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11880:1: ( ( RULE_ID ) )
            // InternalFortXTrans.g:11881:2: ( RULE_ID )
            {
            // InternalFortXTrans.g:11881:2: ( RULE_ID )
            // InternalFortXTrans.g:11882:3: RULE_ID
            {
             before(grammarAccess.getFnDeclAccess().getNameIDTerminalRuleCall_1_0()); 
            match(input,RULE_ID,FOLLOW_2); 
             after(grammarAccess.getFnDeclAccess().getNameIDTerminalRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FnDecl__NameAssignment_1"


    // $ANTLR start "rule__FnDecl__ParamsAssignment_2"
    // InternalFortXTrans.g:11891:1: rule__FnDecl__ParamsAssignment_2 : ( ruleValParam ) ;
    public final void rule__FnDecl__ParamsAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11895:1: ( ( ruleValParam ) )
            // InternalFortXTrans.g:11896:2: ( ruleValParam )
            {
            // InternalFortXTrans.g:11896:2: ( ruleValParam )
            // InternalFortXTrans.g:11897:3: ruleValParam
            {
             before(grammarAccess.getFnDeclAccess().getParamsValParamParserRuleCall_2_0()); 
            pushFollow(FOLLOW_2);
            ruleValParam();

            state._fsp--;

             after(grammarAccess.getFnDeclAccess().getParamsValParamParserRuleCall_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FnDecl__ParamsAssignment_2"


    // $ANTLR start "rule__FnDecl__RetValAssignment_3"
    // InternalFortXTrans.g:11906:1: rule__FnDecl__RetValAssignment_3 : ( ruleRetType ) ;
    public final void rule__FnDecl__RetValAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11910:1: ( ( ruleRetType ) )
            // InternalFortXTrans.g:11911:2: ( ruleRetType )
            {
            // InternalFortXTrans.g:11911:2: ( ruleRetType )
            // InternalFortXTrans.g:11912:3: ruleRetType
            {
             before(grammarAccess.getFnDeclAccess().getRetValRetTypeParserRuleCall_3_0()); 
            pushFollow(FOLLOW_2);
            ruleRetType();

            state._fsp--;

             after(grammarAccess.getFnDeclAccess().getRetValRetTypeParserRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FnDecl__RetValAssignment_3"


    // $ANTLR start "rule__FnDecl__BodyAssignment_4_0"
    // InternalFortXTrans.g:11921:1: rule__FnDecl__BodyAssignment_4_0 : ( ( '=' ) ) ;
    public final void rule__FnDecl__BodyAssignment_4_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11925:1: ( ( ( '=' ) ) )
            // InternalFortXTrans.g:11926:2: ( ( '=' ) )
            {
            // InternalFortXTrans.g:11926:2: ( ( '=' ) )
            // InternalFortXTrans.g:11927:3: ( '=' )
            {
             before(grammarAccess.getFnDeclAccess().getBodyEqualsSignKeyword_4_0_0()); 
            // InternalFortXTrans.g:11928:3: ( '=' )
            // InternalFortXTrans.g:11929:4: '='
            {
             before(grammarAccess.getFnDeclAccess().getBodyEqualsSignKeyword_4_0_0()); 
            match(input,52,FOLLOW_2); 
             after(grammarAccess.getFnDeclAccess().getBodyEqualsSignKeyword_4_0_0()); 

            }

             after(grammarAccess.getFnDeclAccess().getBodyEqualsSignKeyword_4_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FnDecl__BodyAssignment_4_0"


    // $ANTLR start "rule__FnDecl__FnItselfAssignment_4_1"
    // InternalFortXTrans.g:11940:1: rule__FnDecl__FnItselfAssignment_4_1 : ( ruleStmnts ) ;
    public final void rule__FnDecl__FnItselfAssignment_4_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11944:1: ( ( ruleStmnts ) )
            // InternalFortXTrans.g:11945:2: ( ruleStmnts )
            {
            // InternalFortXTrans.g:11945:2: ( ruleStmnts )
            // InternalFortXTrans.g:11946:3: ruleStmnts
            {
             before(grammarAccess.getFnDeclAccess().getFnItselfStmntsParserRuleCall_4_1_0()); 
            pushFollow(FOLLOW_2);
            ruleStmnts();

            state._fsp--;

             after(grammarAccess.getFnDeclAccess().getFnItselfStmntsParserRuleCall_4_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FnDecl__FnItselfAssignment_4_1"


    // $ANTLR start "rule__Stmnts__FrontAssignment_0"
    // InternalFortXTrans.g:11955:1: rule__Stmnts__FrontAssignment_0 : ( ruleStmnt ) ;
    public final void rule__Stmnts__FrontAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11959:1: ( ( ruleStmnt ) )
            // InternalFortXTrans.g:11960:2: ( ruleStmnt )
            {
            // InternalFortXTrans.g:11960:2: ( ruleStmnt )
            // InternalFortXTrans.g:11961:3: ruleStmnt
            {
             before(grammarAccess.getStmntsAccess().getFrontStmntParserRuleCall_0_0()); 
            pushFollow(FOLLOW_2);
            ruleStmnt();

            state._fsp--;

             after(grammarAccess.getStmntsAccess().getFrontStmntParserRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Stmnts__FrontAssignment_0"


    // $ANTLR start "rule__Stmnts__LocVarAssignment_1"
    // InternalFortXTrans.g:11970:1: rule__Stmnts__LocVarAssignment_1 : ( ruleLocalVarDecl ) ;
    public final void rule__Stmnts__LocVarAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11974:1: ( ( ruleLocalVarDecl ) )
            // InternalFortXTrans.g:11975:2: ( ruleLocalVarDecl )
            {
            // InternalFortXTrans.g:11975:2: ( ruleLocalVarDecl )
            // InternalFortXTrans.g:11976:3: ruleLocalVarDecl
            {
             before(grammarAccess.getStmntsAccess().getLocVarLocalVarDeclParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleLocalVarDecl();

            state._fsp--;

             after(grammarAccess.getStmntsAccess().getLocVarLocalVarDeclParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Stmnts__LocVarAssignment_1"


    // $ANTLR start "rule__Stmnts__ExpAssignment_2"
    // InternalFortXTrans.g:11985:1: rule__Stmnts__ExpAssignment_2 : ( ruleExpr ) ;
    public final void rule__Stmnts__ExpAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11989:1: ( ( ruleExpr ) )
            // InternalFortXTrans.g:11990:2: ( ruleExpr )
            {
            // InternalFortXTrans.g:11990:2: ( ruleExpr )
            // InternalFortXTrans.g:11991:3: ruleExpr
            {
             before(grammarAccess.getStmntsAccess().getExpExprParserRuleCall_2_0()); 
            pushFollow(FOLLOW_2);
            ruleExpr();

            state._fsp--;

             after(grammarAccess.getStmntsAccess().getExpExprParserRuleCall_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Stmnts__ExpAssignment_2"


    // $ANTLR start "rule__Stmnt__DelimAssignment_0"
    // InternalFortXTrans.g:12000:1: rule__Stmnt__DelimAssignment_0 : ( ruleDelimitedExpr ) ;
    public final void rule__Stmnt__DelimAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12004:1: ( ( ruleDelimitedExpr ) )
            // InternalFortXTrans.g:12005:2: ( ruleDelimitedExpr )
            {
            // InternalFortXTrans.g:12005:2: ( ruleDelimitedExpr )
            // InternalFortXTrans.g:12006:3: ruleDelimitedExpr
            {
             before(grammarAccess.getStmntAccess().getDelimDelimitedExprParserRuleCall_0_0()); 
            pushFollow(FOLLOW_2);
            ruleDelimitedExpr();

            state._fsp--;

             after(grammarAccess.getStmntAccess().getDelimDelimitedExprParserRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Stmnt__DelimAssignment_0"


    // $ANTLR start "rule__Stmnt__BrackAssignment_1_0"
    // InternalFortXTrans.g:12015:1: rule__Stmnt__BrackAssignment_1_0 : ( ( '(' ) ) ;
    public final void rule__Stmnt__BrackAssignment_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12019:1: ( ( ( '(' ) ) )
            // InternalFortXTrans.g:12020:2: ( ( '(' ) )
            {
            // InternalFortXTrans.g:12020:2: ( ( '(' ) )
            // InternalFortXTrans.g:12021:3: ( '(' )
            {
             before(grammarAccess.getStmntAccess().getBrackLeftParenthesisKeyword_1_0_0()); 
            // InternalFortXTrans.g:12022:3: ( '(' )
            // InternalFortXTrans.g:12023:4: '('
            {
             before(grammarAccess.getStmntAccess().getBrackLeftParenthesisKeyword_1_0_0()); 
            match(input,35,FOLLOW_2); 
             after(grammarAccess.getStmntAccess().getBrackLeftParenthesisKeyword_1_0_0()); 

            }

             after(grammarAccess.getStmntAccess().getBrackLeftParenthesisKeyword_1_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Stmnt__BrackAssignment_1_0"


    // $ANTLR start "rule__Stmnt__DelimListAssignment_1_1"
    // InternalFortXTrans.g:12034:1: rule__Stmnt__DelimListAssignment_1_1 : ( ruleDelimitedExprList ) ;
    public final void rule__Stmnt__DelimListAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12038:1: ( ( ruleDelimitedExprList ) )
            // InternalFortXTrans.g:12039:2: ( ruleDelimitedExprList )
            {
            // InternalFortXTrans.g:12039:2: ( ruleDelimitedExprList )
            // InternalFortXTrans.g:12040:3: ruleDelimitedExprList
            {
             before(grammarAccess.getStmntAccess().getDelimListDelimitedExprListParserRuleCall_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleDelimitedExprList();

            state._fsp--;

             after(grammarAccess.getStmntAccess().getDelimListDelimitedExprListParserRuleCall_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Stmnt__DelimListAssignment_1_1"


    // $ANTLR start "rule__DelimitedExprList__DelimAssignment_0"
    // InternalFortXTrans.g:12049:1: rule__DelimitedExprList__DelimAssignment_0 : ( ruleDelimitedExpr ) ;
    public final void rule__DelimitedExprList__DelimAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12053:1: ( ( ruleDelimitedExpr ) )
            // InternalFortXTrans.g:12054:2: ( ruleDelimitedExpr )
            {
            // InternalFortXTrans.g:12054:2: ( ruleDelimitedExpr )
            // InternalFortXTrans.g:12055:3: ruleDelimitedExpr
            {
             before(grammarAccess.getDelimitedExprListAccess().getDelimDelimitedExprParserRuleCall_0_0()); 
            pushFollow(FOLLOW_2);
            ruleDelimitedExpr();

            state._fsp--;

             after(grammarAccess.getDelimitedExprListAccess().getDelimDelimitedExprParserRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExprList__DelimAssignment_0"


    // $ANTLR start "rule__DelimitedExprList__DelimAssignment_1_1"
    // InternalFortXTrans.g:12064:1: rule__DelimitedExprList__DelimAssignment_1_1 : ( ruleDelimitedExpr ) ;
    public final void rule__DelimitedExprList__DelimAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12068:1: ( ( ruleDelimitedExpr ) )
            // InternalFortXTrans.g:12069:2: ( ruleDelimitedExpr )
            {
            // InternalFortXTrans.g:12069:2: ( ruleDelimitedExpr )
            // InternalFortXTrans.g:12070:3: ruleDelimitedExpr
            {
             before(grammarAccess.getDelimitedExprListAccess().getDelimDelimitedExprParserRuleCall_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleDelimitedExpr();

            state._fsp--;

             after(grammarAccess.getDelimitedExprListAccess().getDelimDelimitedExprParserRuleCall_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExprList__DelimAssignment_1_1"


    // $ANTLR start "rule__Expr__TailAssignment_1"
    // InternalFortXTrans.g:12079:1: rule__Expr__TailAssignment_1 : ( ruleExprTail ) ;
    public final void rule__Expr__TailAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12083:1: ( ( ruleExprTail ) )
            // InternalFortXTrans.g:12084:2: ( ruleExprTail )
            {
            // InternalFortXTrans.g:12084:2: ( ruleExprTail )
            // InternalFortXTrans.g:12085:3: ruleExprTail
            {
             before(grammarAccess.getExprAccess().getTailExprTailParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleExprTail();

            state._fsp--;

             after(grammarAccess.getExprAccess().getTailExprTailParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Expr__TailAssignment_1"


    // $ANTLR start "rule__Or__RightAssignment_1_2"
    // InternalFortXTrans.g:12094:1: rule__Or__RightAssignment_1_2 : ( ruleAnd ) ;
    public final void rule__Or__RightAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12098:1: ( ( ruleAnd ) )
            // InternalFortXTrans.g:12099:2: ( ruleAnd )
            {
            // InternalFortXTrans.g:12099:2: ( ruleAnd )
            // InternalFortXTrans.g:12100:3: ruleAnd
            {
             before(grammarAccess.getOrAccess().getRightAndParserRuleCall_1_2_0()); 
            pushFollow(FOLLOW_2);
            ruleAnd();

            state._fsp--;

             after(grammarAccess.getOrAccess().getRightAndParserRuleCall_1_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Or__RightAssignment_1_2"


    // $ANTLR start "rule__And__RightAssignment_1_2"
    // InternalFortXTrans.g:12109:1: rule__And__RightAssignment_1_2 : ( ruleEquality ) ;
    public final void rule__And__RightAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12113:1: ( ( ruleEquality ) )
            // InternalFortXTrans.g:12114:2: ( ruleEquality )
            {
            // InternalFortXTrans.g:12114:2: ( ruleEquality )
            // InternalFortXTrans.g:12115:3: ruleEquality
            {
             before(grammarAccess.getAndAccess().getRightEqualityParserRuleCall_1_2_0()); 
            pushFollow(FOLLOW_2);
            ruleEquality();

            state._fsp--;

             after(grammarAccess.getAndAccess().getRightEqualityParserRuleCall_1_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__And__RightAssignment_1_2"


    // $ANTLR start "rule__Equality__OpAssignment_1_1"
    // InternalFortXTrans.g:12124:1: rule__Equality__OpAssignment_1_1 : ( ( rule__Equality__OpAlternatives_1_1_0 ) ) ;
    public final void rule__Equality__OpAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12128:1: ( ( ( rule__Equality__OpAlternatives_1_1_0 ) ) )
            // InternalFortXTrans.g:12129:2: ( ( rule__Equality__OpAlternatives_1_1_0 ) )
            {
            // InternalFortXTrans.g:12129:2: ( ( rule__Equality__OpAlternatives_1_1_0 ) )
            // InternalFortXTrans.g:12130:3: ( rule__Equality__OpAlternatives_1_1_0 )
            {
             before(grammarAccess.getEqualityAccess().getOpAlternatives_1_1_0()); 
            // InternalFortXTrans.g:12131:3: ( rule__Equality__OpAlternatives_1_1_0 )
            // InternalFortXTrans.g:12131:4: rule__Equality__OpAlternatives_1_1_0
            {
            pushFollow(FOLLOW_2);
            rule__Equality__OpAlternatives_1_1_0();

            state._fsp--;


            }

             after(grammarAccess.getEqualityAccess().getOpAlternatives_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equality__OpAssignment_1_1"


    // $ANTLR start "rule__Equality__RightAssignment_1_2"
    // InternalFortXTrans.g:12139:1: rule__Equality__RightAssignment_1_2 : ( ruleComparison ) ;
    public final void rule__Equality__RightAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12143:1: ( ( ruleComparison ) )
            // InternalFortXTrans.g:12144:2: ( ruleComparison )
            {
            // InternalFortXTrans.g:12144:2: ( ruleComparison )
            // InternalFortXTrans.g:12145:3: ruleComparison
            {
             before(grammarAccess.getEqualityAccess().getRightComparisonParserRuleCall_1_2_0()); 
            pushFollow(FOLLOW_2);
            ruleComparison();

            state._fsp--;

             after(grammarAccess.getEqualityAccess().getRightComparisonParserRuleCall_1_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equality__RightAssignment_1_2"


    // $ANTLR start "rule__Comparison__OpAssignment_1_1"
    // InternalFortXTrans.g:12154:1: rule__Comparison__OpAssignment_1_1 : ( ( rule__Comparison__OpAlternatives_1_1_0 ) ) ;
    public final void rule__Comparison__OpAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12158:1: ( ( ( rule__Comparison__OpAlternatives_1_1_0 ) ) )
            // InternalFortXTrans.g:12159:2: ( ( rule__Comparison__OpAlternatives_1_1_0 ) )
            {
            // InternalFortXTrans.g:12159:2: ( ( rule__Comparison__OpAlternatives_1_1_0 ) )
            // InternalFortXTrans.g:12160:3: ( rule__Comparison__OpAlternatives_1_1_0 )
            {
             before(grammarAccess.getComparisonAccess().getOpAlternatives_1_1_0()); 
            // InternalFortXTrans.g:12161:3: ( rule__Comparison__OpAlternatives_1_1_0 )
            // InternalFortXTrans.g:12161:4: rule__Comparison__OpAlternatives_1_1_0
            {
            pushFollow(FOLLOW_2);
            rule__Comparison__OpAlternatives_1_1_0();

            state._fsp--;


            }

             after(grammarAccess.getComparisonAccess().getOpAlternatives_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__OpAssignment_1_1"


    // $ANTLR start "rule__Comparison__RightAssignment_1_2"
    // InternalFortXTrans.g:12169:1: rule__Comparison__RightAssignment_1_2 : ( ruleAddExpr ) ;
    public final void rule__Comparison__RightAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12173:1: ( ( ruleAddExpr ) )
            // InternalFortXTrans.g:12174:2: ( ruleAddExpr )
            {
            // InternalFortXTrans.g:12174:2: ( ruleAddExpr )
            // InternalFortXTrans.g:12175:3: ruleAddExpr
            {
             before(grammarAccess.getComparisonAccess().getRightAddExprParserRuleCall_1_2_0()); 
            pushFollow(FOLLOW_2);
            ruleAddExpr();

            state._fsp--;

             after(grammarAccess.getComparisonAccess().getRightAddExprParserRuleCall_1_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__RightAssignment_1_2"


    // $ANTLR start "rule__AddExpr__RightAssignment_1_2"
    // InternalFortXTrans.g:12184:1: rule__AddExpr__RightAssignment_1_2 : ( ruleSubExpr ) ;
    public final void rule__AddExpr__RightAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12188:1: ( ( ruleSubExpr ) )
            // InternalFortXTrans.g:12189:2: ( ruleSubExpr )
            {
            // InternalFortXTrans.g:12189:2: ( ruleSubExpr )
            // InternalFortXTrans.g:12190:3: ruleSubExpr
            {
             before(grammarAccess.getAddExprAccess().getRightSubExprParserRuleCall_1_2_0()); 
            pushFollow(FOLLOW_2);
            ruleSubExpr();

            state._fsp--;

             after(grammarAccess.getAddExprAccess().getRightSubExprParserRuleCall_1_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AddExpr__RightAssignment_1_2"


    // $ANTLR start "rule__SubExpr__RightAssignment_1_2"
    // InternalFortXTrans.g:12199:1: rule__SubExpr__RightAssignment_1_2 : ( ruleDivExpr ) ;
    public final void rule__SubExpr__RightAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12203:1: ( ( ruleDivExpr ) )
            // InternalFortXTrans.g:12204:2: ( ruleDivExpr )
            {
            // InternalFortXTrans.g:12204:2: ( ruleDivExpr )
            // InternalFortXTrans.g:12205:3: ruleDivExpr
            {
             before(grammarAccess.getSubExprAccess().getRightDivExprParserRuleCall_1_2_0()); 
            pushFollow(FOLLOW_2);
            ruleDivExpr();

            state._fsp--;

             after(grammarAccess.getSubExprAccess().getRightDivExprParserRuleCall_1_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubExpr__RightAssignment_1_2"


    // $ANTLR start "rule__DivExpr__RightAssignment_1_2"
    // InternalFortXTrans.g:12214:1: rule__DivExpr__RightAssignment_1_2 : ( ruleMultExpr ) ;
    public final void rule__DivExpr__RightAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12218:1: ( ( ruleMultExpr ) )
            // InternalFortXTrans.g:12219:2: ( ruleMultExpr )
            {
            // InternalFortXTrans.g:12219:2: ( ruleMultExpr )
            // InternalFortXTrans.g:12220:3: ruleMultExpr
            {
             before(grammarAccess.getDivExprAccess().getRightMultExprParserRuleCall_1_2_0()); 
            pushFollow(FOLLOW_2);
            ruleMultExpr();

            state._fsp--;

             after(grammarAccess.getDivExprAccess().getRightMultExprParserRuleCall_1_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DivExpr__RightAssignment_1_2"


    // $ANTLR start "rule__MultExpr__RightAssignment_1_2"
    // InternalFortXTrans.g:12229:1: rule__MultExpr__RightAssignment_1_2 : ( ruleExponentExpr ) ;
    public final void rule__MultExpr__RightAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12233:1: ( ( ruleExponentExpr ) )
            // InternalFortXTrans.g:12234:2: ( ruleExponentExpr )
            {
            // InternalFortXTrans.g:12234:2: ( ruleExponentExpr )
            // InternalFortXTrans.g:12235:3: ruleExponentExpr
            {
             before(grammarAccess.getMultExprAccess().getRightExponentExprParserRuleCall_1_2_0()); 
            pushFollow(FOLLOW_2);
            ruleExponentExpr();

            state._fsp--;

             after(grammarAccess.getMultExprAccess().getRightExponentExprParserRuleCall_1_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultExpr__RightAssignment_1_2"


    // $ANTLR start "rule__ExponentExpr__RightAssignment_1_2"
    // InternalFortXTrans.g:12244:1: rule__ExponentExpr__RightAssignment_1_2 : ( rulePrimary ) ;
    public final void rule__ExponentExpr__RightAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12248:1: ( ( rulePrimary ) )
            // InternalFortXTrans.g:12249:2: ( rulePrimary )
            {
            // InternalFortXTrans.g:12249:2: ( rulePrimary )
            // InternalFortXTrans.g:12250:3: rulePrimary
            {
             before(grammarAccess.getExponentExprAccess().getRightPrimaryParserRuleCall_1_2_0()); 
            pushFollow(FOLLOW_2);
            rulePrimary();

            state._fsp--;

             after(grammarAccess.getExponentExprAccess().getRightPrimaryParserRuleCall_1_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExponentExpr__RightAssignment_1_2"


    // $ANTLR start "rule__Primary__OpAssignment_0_1_1_0"
    // InternalFortXTrans.g:12259:1: rule__Primary__OpAssignment_0_1_1_0 : ( ( ':=' ) ) ;
    public final void rule__Primary__OpAssignment_0_1_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12263:1: ( ( ( ':=' ) ) )
            // InternalFortXTrans.g:12264:2: ( ( ':=' ) )
            {
            // InternalFortXTrans.g:12264:2: ( ( ':=' ) )
            // InternalFortXTrans.g:12265:3: ( ':=' )
            {
             before(grammarAccess.getPrimaryAccess().getOpColonEqualsSignKeyword_0_1_1_0_0()); 
            // InternalFortXTrans.g:12266:3: ( ':=' )
            // InternalFortXTrans.g:12267:4: ':='
            {
             before(grammarAccess.getPrimaryAccess().getOpColonEqualsSignKeyword_0_1_1_0_0()); 
            match(input,60,FOLLOW_2); 
             after(grammarAccess.getPrimaryAccess().getOpColonEqualsSignKeyword_0_1_1_0_0()); 

            }

             after(grammarAccess.getPrimaryAccess().getOpColonEqualsSignKeyword_0_1_1_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__OpAssignment_0_1_1_0"


    // $ANTLR start "rule__Primary__RightAssignment_0_1_1_1"
    // InternalFortXTrans.g:12278:1: rule__Primary__RightAssignment_0_1_1_1 : ( ruleExprList ) ;
    public final void rule__Primary__RightAssignment_0_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12282:1: ( ( ruleExprList ) )
            // InternalFortXTrans.g:12283:2: ( ruleExprList )
            {
            // InternalFortXTrans.g:12283:2: ( ruleExprList )
            // InternalFortXTrans.g:12284:3: ruleExprList
            {
             before(grammarAccess.getPrimaryAccess().getRightExprListParserRuleCall_0_1_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleExprList();

            state._fsp--;

             after(grammarAccess.getPrimaryAccess().getRightExprListParserRuleCall_0_1_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__RightAssignment_0_1_1_1"


    // $ANTLR start "rule__Primary__RightAssignment_0_2_2"
    // InternalFortXTrans.g:12293:1: rule__Primary__RightAssignment_0_2_2 : ( ruleExprList ) ;
    public final void rule__Primary__RightAssignment_0_2_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12297:1: ( ( ruleExprList ) )
            // InternalFortXTrans.g:12298:2: ( ruleExprList )
            {
            // InternalFortXTrans.g:12298:2: ( ruleExprList )
            // InternalFortXTrans.g:12299:3: ruleExprList
            {
             before(grammarAccess.getPrimaryAccess().getRightExprListParserRuleCall_0_2_2_0()); 
            pushFollow(FOLLOW_2);
            ruleExprList();

            state._fsp--;

             after(grammarAccess.getPrimaryAccess().getRightExprListParserRuleCall_0_2_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__RightAssignment_0_2_2"


    // $ANTLR start "rule__ExprList__ExpsAssignment_0"
    // InternalFortXTrans.g:12308:1: rule__ExprList__ExpsAssignment_0 : ( ruleExpr ) ;
    public final void rule__ExprList__ExpsAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12312:1: ( ( ruleExpr ) )
            // InternalFortXTrans.g:12313:2: ( ruleExpr )
            {
            // InternalFortXTrans.g:12313:2: ( ruleExpr )
            // InternalFortXTrans.g:12314:3: ruleExpr
            {
             before(grammarAccess.getExprListAccess().getExpsExprParserRuleCall_0_0()); 
            pushFollow(FOLLOW_2);
            ruleExpr();

            state._fsp--;

             after(grammarAccess.getExprListAccess().getExpsExprParserRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExprList__ExpsAssignment_0"


    // $ANTLR start "rule__ExprList__ExpAssignment_1_1"
    // InternalFortXTrans.g:12323:1: rule__ExprList__ExpAssignment_1_1 : ( ruleExpr ) ;
    public final void rule__ExprList__ExpAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12327:1: ( ( ruleExpr ) )
            // InternalFortXTrans.g:12328:2: ( ruleExpr )
            {
            // InternalFortXTrans.g:12328:2: ( ruleExpr )
            // InternalFortXTrans.g:12329:3: ruleExpr
            {
             before(grammarAccess.getExprListAccess().getExpExprParserRuleCall_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleExpr();

            state._fsp--;

             after(grammarAccess.getExprListAccess().getExpExprParserRuleCall_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExprList__ExpAssignment_1_1"


    // $ANTLR start "rule__ExprTail__TypeAssignment_1"
    // InternalFortXTrans.g:12338:1: rule__ExprTail__TypeAssignment_1 : ( ruleSimpleName ) ;
    public final void rule__ExprTail__TypeAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12342:1: ( ( ruleSimpleName ) )
            // InternalFortXTrans.g:12343:2: ( ruleSimpleName )
            {
            // InternalFortXTrans.g:12343:2: ( ruleSimpleName )
            // InternalFortXTrans.g:12344:3: ruleSimpleName
            {
             before(grammarAccess.getExprTailAccess().getTypeSimpleNameParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleSimpleName();

            state._fsp--;

             after(grammarAccess.getExprTailAccess().getTypeSimpleNameParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExprTail__TypeAssignment_1"


    // $ANTLR start "rule__DelimitedExpr__DodAssignment_0"
    // InternalFortXTrans.g:12353:1: rule__DelimitedExpr__DodAssignment_0 : ( ruleDo ) ;
    public final void rule__DelimitedExpr__DodAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12357:1: ( ( ruleDo ) )
            // InternalFortXTrans.g:12358:2: ( ruleDo )
            {
            // InternalFortXTrans.g:12358:2: ( ruleDo )
            // InternalFortXTrans.g:12359:3: ruleDo
            {
             before(grammarAccess.getDelimitedExprAccess().getDodDoParserRuleCall_0_0()); 
            pushFollow(FOLLOW_2);
            ruleDo();

            state._fsp--;

             after(grammarAccess.getDelimitedExprAccess().getDodDoParserRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__DodAssignment_0"


    // $ANTLR start "rule__DelimitedExpr__RetAssignment_1_0"
    // InternalFortXTrans.g:12368:1: rule__DelimitedExpr__RetAssignment_1_0 : ( ( 'return' ) ) ;
    public final void rule__DelimitedExpr__RetAssignment_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12372:1: ( ( ( 'return' ) ) )
            // InternalFortXTrans.g:12373:2: ( ( 'return' ) )
            {
            // InternalFortXTrans.g:12373:2: ( ( 'return' ) )
            // InternalFortXTrans.g:12374:3: ( 'return' )
            {
             before(grammarAccess.getDelimitedExprAccess().getRetReturnKeyword_1_0_0()); 
            // InternalFortXTrans.g:12375:3: ( 'return' )
            // InternalFortXTrans.g:12376:4: 'return'
            {
             before(grammarAccess.getDelimitedExprAccess().getRetReturnKeyword_1_0_0()); 
            match(input,61,FOLLOW_2); 
             after(grammarAccess.getDelimitedExprAccess().getRetReturnKeyword_1_0_0()); 

            }

             after(grammarAccess.getDelimitedExprAccess().getRetReturnKeyword_1_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__RetAssignment_1_0"


    // $ANTLR start "rule__DelimitedExpr__BlockAssignment_1_1"
    // InternalFortXTrans.g:12387:1: rule__DelimitedExpr__BlockAssignment_1_1 : ( ruleBlockElem ) ;
    public final void rule__DelimitedExpr__BlockAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12391:1: ( ( ruleBlockElem ) )
            // InternalFortXTrans.g:12392:2: ( ruleBlockElem )
            {
            // InternalFortXTrans.g:12392:2: ( ruleBlockElem )
            // InternalFortXTrans.g:12393:3: ruleBlockElem
            {
             before(grammarAccess.getDelimitedExprAccess().getBlockBlockElemParserRuleCall_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleBlockElem();

            state._fsp--;

             after(grammarAccess.getDelimitedExprAccess().getBlockBlockElemParserRuleCall_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__BlockAssignment_1_1"


    // $ANTLR start "rule__DelimitedExpr__AwhileAssignment_2_0"
    // InternalFortXTrans.g:12402:1: rule__DelimitedExpr__AwhileAssignment_2_0 : ( ( 'while' ) ) ;
    public final void rule__DelimitedExpr__AwhileAssignment_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12406:1: ( ( ( 'while' ) ) )
            // InternalFortXTrans.g:12407:2: ( ( 'while' ) )
            {
            // InternalFortXTrans.g:12407:2: ( ( 'while' ) )
            // InternalFortXTrans.g:12408:3: ( 'while' )
            {
             before(grammarAccess.getDelimitedExprAccess().getAwhileWhileKeyword_2_0_0()); 
            // InternalFortXTrans.g:12409:3: ( 'while' )
            // InternalFortXTrans.g:12410:4: 'while'
            {
             before(grammarAccess.getDelimitedExprAccess().getAwhileWhileKeyword_2_0_0()); 
            match(input,62,FOLLOW_2); 
             after(grammarAccess.getDelimitedExprAccess().getAwhileWhileKeyword_2_0_0()); 

            }

             after(grammarAccess.getDelimitedExprAccess().getAwhileWhileKeyword_2_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__AwhileAssignment_2_0"


    // $ANTLR start "rule__DelimitedExpr__ExprAssignment_2_1"
    // InternalFortXTrans.g:12421:1: rule__DelimitedExpr__ExprAssignment_2_1 : ( ruleExpr ) ;
    public final void rule__DelimitedExpr__ExprAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12425:1: ( ( ruleExpr ) )
            // InternalFortXTrans.g:12426:2: ( ruleExpr )
            {
            // InternalFortXTrans.g:12426:2: ( ruleExpr )
            // InternalFortXTrans.g:12427:3: ruleExpr
            {
             before(grammarAccess.getDelimitedExprAccess().getExprExprParserRuleCall_2_1_0()); 
            pushFollow(FOLLOW_2);
            ruleExpr();

            state._fsp--;

             after(grammarAccess.getDelimitedExprAccess().getExprExprParserRuleCall_2_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__ExprAssignment_2_1"


    // $ANTLR start "rule__DelimitedExpr__WhiledodAssignment_2_2"
    // InternalFortXTrans.g:12436:1: rule__DelimitedExpr__WhiledodAssignment_2_2 : ( ruleDo ) ;
    public final void rule__DelimitedExpr__WhiledodAssignment_2_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12440:1: ( ( ruleDo ) )
            // InternalFortXTrans.g:12441:2: ( ruleDo )
            {
            // InternalFortXTrans.g:12441:2: ( ruleDo )
            // InternalFortXTrans.g:12442:3: ruleDo
            {
             before(grammarAccess.getDelimitedExprAccess().getWhiledodDoParserRuleCall_2_2_0()); 
            pushFollow(FOLLOW_2);
            ruleDo();

            state._fsp--;

             after(grammarAccess.getDelimitedExprAccess().getWhiledodDoParserRuleCall_2_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__WhiledodAssignment_2_2"


    // $ANTLR start "rule__DelimitedExpr__AforAssignment_3_0"
    // InternalFortXTrans.g:12451:1: rule__DelimitedExpr__AforAssignment_3_0 : ( ( 'for' ) ) ;
    public final void rule__DelimitedExpr__AforAssignment_3_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12455:1: ( ( ( 'for' ) ) )
            // InternalFortXTrans.g:12456:2: ( ( 'for' ) )
            {
            // InternalFortXTrans.g:12456:2: ( ( 'for' ) )
            // InternalFortXTrans.g:12457:3: ( 'for' )
            {
             before(grammarAccess.getDelimitedExprAccess().getAforForKeyword_3_0_0()); 
            // InternalFortXTrans.g:12458:3: ( 'for' )
            // InternalFortXTrans.g:12459:4: 'for'
            {
             before(grammarAccess.getDelimitedExprAccess().getAforForKeyword_3_0_0()); 
            match(input,63,FOLLOW_2); 
             after(grammarAccess.getDelimitedExprAccess().getAforForKeyword_3_0_0()); 

            }

             after(grammarAccess.getDelimitedExprAccess().getAforForKeyword_3_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__AforAssignment_3_0"


    // $ANTLR start "rule__DelimitedExpr__GenAssignment_3_1"
    // InternalFortXTrans.g:12470:1: rule__DelimitedExpr__GenAssignment_3_1 : ( ruleGenerators ) ;
    public final void rule__DelimitedExpr__GenAssignment_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12474:1: ( ( ruleGenerators ) )
            // InternalFortXTrans.g:12475:2: ( ruleGenerators )
            {
            // InternalFortXTrans.g:12475:2: ( ruleGenerators )
            // InternalFortXTrans.g:12476:3: ruleGenerators
            {
             before(grammarAccess.getDelimitedExprAccess().getGenGeneratorsParserRuleCall_3_1_0()); 
            pushFollow(FOLLOW_2);
            ruleGenerators();

            state._fsp--;

             after(grammarAccess.getDelimitedExprAccess().getGenGeneratorsParserRuleCall_3_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__GenAssignment_3_1"


    // $ANTLR start "rule__DelimitedExpr__DofrontAssignment_3_2"
    // InternalFortXTrans.g:12485:1: rule__DelimitedExpr__DofrontAssignment_3_2 : ( ruleDoFront ) ;
    public final void rule__DelimitedExpr__DofrontAssignment_3_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12489:1: ( ( ruleDoFront ) )
            // InternalFortXTrans.g:12490:2: ( ruleDoFront )
            {
            // InternalFortXTrans.g:12490:2: ( ruleDoFront )
            // InternalFortXTrans.g:12491:3: ruleDoFront
            {
             before(grammarAccess.getDelimitedExprAccess().getDofrontDoFrontParserRuleCall_3_2_0()); 
            pushFollow(FOLLOW_2);
            ruleDoFront();

            state._fsp--;

             after(grammarAccess.getDelimitedExprAccess().getDofrontDoFrontParserRuleCall_3_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__DofrontAssignment_3_2"


    // $ANTLR start "rule__DelimitedExpr__AnifAssignment_4_0"
    // InternalFortXTrans.g:12500:1: rule__DelimitedExpr__AnifAssignment_4_0 : ( ( 'if' ) ) ;
    public final void rule__DelimitedExpr__AnifAssignment_4_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12504:1: ( ( ( 'if' ) ) )
            // InternalFortXTrans.g:12505:2: ( ( 'if' ) )
            {
            // InternalFortXTrans.g:12505:2: ( ( 'if' ) )
            // InternalFortXTrans.g:12506:3: ( 'if' )
            {
             before(grammarAccess.getDelimitedExprAccess().getAnifIfKeyword_4_0_0()); 
            // InternalFortXTrans.g:12507:3: ( 'if' )
            // InternalFortXTrans.g:12508:4: 'if'
            {
             before(grammarAccess.getDelimitedExprAccess().getAnifIfKeyword_4_0_0()); 
            match(input,64,FOLLOW_2); 
             after(grammarAccess.getDelimitedExprAccess().getAnifIfKeyword_4_0_0()); 

            }

             after(grammarAccess.getDelimitedExprAccess().getAnifIfKeyword_4_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__AnifAssignment_4_0"


    // $ANTLR start "rule__DelimitedExpr__CondAssignment_4_1"
    // InternalFortXTrans.g:12519:1: rule__DelimitedExpr__CondAssignment_4_1 : ( ruleExpr ) ;
    public final void rule__DelimitedExpr__CondAssignment_4_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12523:1: ( ( ruleExpr ) )
            // InternalFortXTrans.g:12524:2: ( ruleExpr )
            {
            // InternalFortXTrans.g:12524:2: ( ruleExpr )
            // InternalFortXTrans.g:12525:3: ruleExpr
            {
             before(grammarAccess.getDelimitedExprAccess().getCondExprParserRuleCall_4_1_0()); 
            pushFollow(FOLLOW_2);
            ruleExpr();

            state._fsp--;

             after(grammarAccess.getDelimitedExprAccess().getCondExprParserRuleCall_4_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__CondAssignment_4_1"


    // $ANTLR start "rule__DelimitedExpr__BlocksAssignment_4_3"
    // InternalFortXTrans.g:12534:1: rule__DelimitedExpr__BlocksAssignment_4_3 : ( ruleBlockElems ) ;
    public final void rule__DelimitedExpr__BlocksAssignment_4_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12538:1: ( ( ruleBlockElems ) )
            // InternalFortXTrans.g:12539:2: ( ruleBlockElems )
            {
            // InternalFortXTrans.g:12539:2: ( ruleBlockElems )
            // InternalFortXTrans.g:12540:3: ruleBlockElems
            {
             before(grammarAccess.getDelimitedExprAccess().getBlocksBlockElemsParserRuleCall_4_3_0()); 
            pushFollow(FOLLOW_2);
            ruleBlockElems();

            state._fsp--;

             after(grammarAccess.getDelimitedExprAccess().getBlocksBlockElemsParserRuleCall_4_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__BlocksAssignment_4_3"


    // $ANTLR start "rule__DelimitedExpr__ElifsAssignment_4_4"
    // InternalFortXTrans.g:12549:1: rule__DelimitedExpr__ElifsAssignment_4_4 : ( ruleElifs ) ;
    public final void rule__DelimitedExpr__ElifsAssignment_4_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12553:1: ( ( ruleElifs ) )
            // InternalFortXTrans.g:12554:2: ( ruleElifs )
            {
            // InternalFortXTrans.g:12554:2: ( ruleElifs )
            // InternalFortXTrans.g:12555:3: ruleElifs
            {
             before(grammarAccess.getDelimitedExprAccess().getElifsElifsParserRuleCall_4_4_0()); 
            pushFollow(FOLLOW_2);
            ruleElifs();

            state._fsp--;

             after(grammarAccess.getDelimitedExprAccess().getElifsElifsParserRuleCall_4_4_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__ElifsAssignment_4_4"


    // $ANTLR start "rule__DelimitedExpr__ElsAssignment_4_5"
    // InternalFortXTrans.g:12564:1: rule__DelimitedExpr__ElsAssignment_4_5 : ( ruleElse ) ;
    public final void rule__DelimitedExpr__ElsAssignment_4_5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12568:1: ( ( ruleElse ) )
            // InternalFortXTrans.g:12569:2: ( ruleElse )
            {
            // InternalFortXTrans.g:12569:2: ( ruleElse )
            // InternalFortXTrans.g:12570:3: ruleElse
            {
             before(grammarAccess.getDelimitedExprAccess().getElsElseParserRuleCall_4_5_0()); 
            pushFollow(FOLLOW_2);
            ruleElse();

            state._fsp--;

             after(grammarAccess.getDelimitedExprAccess().getElsElseParserRuleCall_4_5_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__ElsAssignment_4_5"


    // $ANTLR start "rule__Elifs__EAssignment_0"
    // InternalFortXTrans.g:12579:1: rule__Elifs__EAssignment_0 : ( ruleElif ) ;
    public final void rule__Elifs__EAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12583:1: ( ( ruleElif ) )
            // InternalFortXTrans.g:12584:2: ( ruleElif )
            {
            // InternalFortXTrans.g:12584:2: ( ruleElif )
            // InternalFortXTrans.g:12585:3: ruleElif
            {
             before(grammarAccess.getElifsAccess().getEElifParserRuleCall_0_0()); 
            pushFollow(FOLLOW_2);
            ruleElif();

            state._fsp--;

             after(grammarAccess.getElifsAccess().getEElifParserRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Elifs__EAssignment_0"


    // $ANTLR start "rule__Elifs__EAssignment_1"
    // InternalFortXTrans.g:12594:1: rule__Elifs__EAssignment_1 : ( ruleElif ) ;
    public final void rule__Elifs__EAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12598:1: ( ( ruleElif ) )
            // InternalFortXTrans.g:12599:2: ( ruleElif )
            {
            // InternalFortXTrans.g:12599:2: ( ruleElif )
            // InternalFortXTrans.g:12600:3: ruleElif
            {
             before(grammarAccess.getElifsAccess().getEElifParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleElif();

            state._fsp--;

             after(grammarAccess.getElifsAccess().getEElifParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Elifs__EAssignment_1"


    // $ANTLR start "rule__Elif__ExprAssignment_1"
    // InternalFortXTrans.g:12609:1: rule__Elif__ExprAssignment_1 : ( ruleExpr ) ;
    public final void rule__Elif__ExprAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12613:1: ( ( ruleExpr ) )
            // InternalFortXTrans.g:12614:2: ( ruleExpr )
            {
            // InternalFortXTrans.g:12614:2: ( ruleExpr )
            // InternalFortXTrans.g:12615:3: ruleExpr
            {
             before(grammarAccess.getElifAccess().getExprExprParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleExpr();

            state._fsp--;

             after(grammarAccess.getElifAccess().getExprExprParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Elif__ExprAssignment_1"


    // $ANTLR start "rule__Elif__BlockAssignment_3"
    // InternalFortXTrans.g:12624:1: rule__Elif__BlockAssignment_3 : ( ruleBlockElems ) ;
    public final void rule__Elif__BlockAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12628:1: ( ( ruleBlockElems ) )
            // InternalFortXTrans.g:12629:2: ( ruleBlockElems )
            {
            // InternalFortXTrans.g:12629:2: ( ruleBlockElems )
            // InternalFortXTrans.g:12630:3: ruleBlockElems
            {
             before(grammarAccess.getElifAccess().getBlockBlockElemsParserRuleCall_3_0()); 
            pushFollow(FOLLOW_2);
            ruleBlockElems();

            state._fsp--;

             after(grammarAccess.getElifAccess().getBlockBlockElemsParserRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Elif__BlockAssignment_3"


    // $ANTLR start "rule__Else__BlockAssignment_1"
    // InternalFortXTrans.g:12639:1: rule__Else__BlockAssignment_1 : ( ruleBlockElems ) ;
    public final void rule__Else__BlockAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12643:1: ( ( ruleBlockElems ) )
            // InternalFortXTrans.g:12644:2: ( ruleBlockElems )
            {
            // InternalFortXTrans.g:12644:2: ( ruleBlockElems )
            // InternalFortXTrans.g:12645:3: ruleBlockElems
            {
             before(grammarAccess.getElseAccess().getBlockBlockElemsParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleBlockElems();

            state._fsp--;

             after(grammarAccess.getElseAccess().getBlockBlockElemsParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Else__BlockAssignment_1"


    // $ANTLR start "rule__Generators__BindingAssignment_0"
    // InternalFortXTrans.g:12654:1: rule__Generators__BindingAssignment_0 : ( ruleBinding ) ;
    public final void rule__Generators__BindingAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12658:1: ( ( ruleBinding ) )
            // InternalFortXTrans.g:12659:2: ( ruleBinding )
            {
            // InternalFortXTrans.g:12659:2: ( ruleBinding )
            // InternalFortXTrans.g:12660:3: ruleBinding
            {
             before(grammarAccess.getGeneratorsAccess().getBindingBindingParserRuleCall_0_0()); 
            pushFollow(FOLLOW_2);
            ruleBinding();

            state._fsp--;

             after(grammarAccess.getGeneratorsAccess().getBindingBindingParserRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Generators__BindingAssignment_0"


    // $ANTLR start "rule__Generators__ClauseAssignment_1_1"
    // InternalFortXTrans.g:12669:1: rule__Generators__ClauseAssignment_1_1 : ( ruleGenClause ) ;
    public final void rule__Generators__ClauseAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12673:1: ( ( ruleGenClause ) )
            // InternalFortXTrans.g:12674:2: ( ruleGenClause )
            {
            // InternalFortXTrans.g:12674:2: ( ruleGenClause )
            // InternalFortXTrans.g:12675:3: ruleGenClause
            {
             before(grammarAccess.getGeneratorsAccess().getClauseGenClauseParserRuleCall_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleGenClause();

            state._fsp--;

             after(grammarAccess.getGeneratorsAccess().getClauseGenClauseParserRuleCall_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Generators__ClauseAssignment_1_1"


    // $ANTLR start "rule__Binding__IdtupAssignment_0_0"
    // InternalFortXTrans.g:12684:1: rule__Binding__IdtupAssignment_0_0 : ( ruleIdOrTuple ) ;
    public final void rule__Binding__IdtupAssignment_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12688:1: ( ( ruleIdOrTuple ) )
            // InternalFortXTrans.g:12689:2: ( ruleIdOrTuple )
            {
            // InternalFortXTrans.g:12689:2: ( ruleIdOrTuple )
            // InternalFortXTrans.g:12690:3: ruleIdOrTuple
            {
             before(grammarAccess.getBindingAccess().getIdtupIdOrTupleParserRuleCall_0_0_0()); 
            pushFollow(FOLLOW_2);
            ruleIdOrTuple();

            state._fsp--;

             after(grammarAccess.getBindingAccess().getIdtupIdOrTupleParserRuleCall_0_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Binding__IdtupAssignment_0_0"


    // $ANTLR start "rule__Binding__GAssignment_0_2"
    // InternalFortXTrans.g:12699:1: rule__Binding__GAssignment_0_2 : ( ruleGenSource ) ;
    public final void rule__Binding__GAssignment_0_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12703:1: ( ( ruleGenSource ) )
            // InternalFortXTrans.g:12704:2: ( ruleGenSource )
            {
            // InternalFortXTrans.g:12704:2: ( ruleGenSource )
            // InternalFortXTrans.g:12705:3: ruleGenSource
            {
             before(grammarAccess.getBindingAccess().getGGenSourceParserRuleCall_0_2_0()); 
            pushFollow(FOLLOW_2);
            ruleGenSource();

            state._fsp--;

             after(grammarAccess.getBindingAccess().getGGenSourceParserRuleCall_0_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Binding__GAssignment_0_2"


    // $ANTLR start "rule__Binding__IdtupAssignment_1_0"
    // InternalFortXTrans.g:12714:1: rule__Binding__IdtupAssignment_1_0 : ( ruleIdOrTuple ) ;
    public final void rule__Binding__IdtupAssignment_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12718:1: ( ( ruleIdOrTuple ) )
            // InternalFortXTrans.g:12719:2: ( ruleIdOrTuple )
            {
            // InternalFortXTrans.g:12719:2: ( ruleIdOrTuple )
            // InternalFortXTrans.g:12720:3: ruleIdOrTuple
            {
             before(grammarAccess.getBindingAccess().getIdtupIdOrTupleParserRuleCall_1_0_0()); 
            pushFollow(FOLLOW_2);
            ruleIdOrTuple();

            state._fsp--;

             after(grammarAccess.getBindingAccess().getIdtupIdOrTupleParserRuleCall_1_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Binding__IdtupAssignment_1_0"


    // $ANTLR start "rule__Binding__SeqAssignment_1_2"
    // InternalFortXTrans.g:12729:1: rule__Binding__SeqAssignment_1_2 : ( ( 'seq' ) ) ;
    public final void rule__Binding__SeqAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12733:1: ( ( ( 'seq' ) ) )
            // InternalFortXTrans.g:12734:2: ( ( 'seq' ) )
            {
            // InternalFortXTrans.g:12734:2: ( ( 'seq' ) )
            // InternalFortXTrans.g:12735:3: ( 'seq' )
            {
             before(grammarAccess.getBindingAccess().getSeqSeqKeyword_1_2_0()); 
            // InternalFortXTrans.g:12736:3: ( 'seq' )
            // InternalFortXTrans.g:12737:4: 'seq'
            {
             before(grammarAccess.getBindingAccess().getSeqSeqKeyword_1_2_0()); 
            match(input,65,FOLLOW_2); 
             after(grammarAccess.getBindingAccess().getSeqSeqKeyword_1_2_0()); 

            }

             after(grammarAccess.getBindingAccess().getSeqSeqKeyword_1_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Binding__SeqAssignment_1_2"


    // $ANTLR start "rule__Binding__GAssignment_1_4"
    // InternalFortXTrans.g:12748:1: rule__Binding__GAssignment_1_4 : ( ruleGenSource ) ;
    public final void rule__Binding__GAssignment_1_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12752:1: ( ( ruleGenSource ) )
            // InternalFortXTrans.g:12753:2: ( ruleGenSource )
            {
            // InternalFortXTrans.g:12753:2: ( ruleGenSource )
            // InternalFortXTrans.g:12754:3: ruleGenSource
            {
             before(grammarAccess.getBindingAccess().getGGenSourceParserRuleCall_1_4_0()); 
            pushFollow(FOLLOW_2);
            ruleGenSource();

            state._fsp--;

             after(grammarAccess.getBindingAccess().getGGenSourceParserRuleCall_1_4_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Binding__GAssignment_1_4"


    // $ANTLR start "rule__GenSource__EndAssignment_1_2"
    // InternalFortXTrans.g:12763:1: rule__GenSource__EndAssignment_1_2 : ( ruleExpr ) ;
    public final void rule__GenSource__EndAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12767:1: ( ( ruleExpr ) )
            // InternalFortXTrans.g:12768:2: ( ruleExpr )
            {
            // InternalFortXTrans.g:12768:2: ( ruleExpr )
            // InternalFortXTrans.g:12769:3: ruleExpr
            {
             before(grammarAccess.getGenSourceAccess().getEndExprParserRuleCall_1_2_0()); 
            pushFollow(FOLLOW_2);
            ruleExpr();

            state._fsp--;

             after(grammarAccess.getGenSourceAccess().getEndExprParserRuleCall_1_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GenSource__EndAssignment_1_2"


    // $ANTLR start "rule__GenClause__BindingAssignment_0"
    // InternalFortXTrans.g:12778:1: rule__GenClause__BindingAssignment_0 : ( ruleBinding ) ;
    public final void rule__GenClause__BindingAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12782:1: ( ( ruleBinding ) )
            // InternalFortXTrans.g:12783:2: ( ruleBinding )
            {
            // InternalFortXTrans.g:12783:2: ( ruleBinding )
            // InternalFortXTrans.g:12784:3: ruleBinding
            {
             before(grammarAccess.getGenClauseAccess().getBindingBindingParserRuleCall_0_0()); 
            pushFollow(FOLLOW_2);
            ruleBinding();

            state._fsp--;

             after(grammarAccess.getGenClauseAccess().getBindingBindingParserRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GenClause__BindingAssignment_0"


    // $ANTLR start "rule__GenClause__ExprAssignment_1"
    // InternalFortXTrans.g:12793:1: rule__GenClause__ExprAssignment_1 : ( ruleExpr ) ;
    public final void rule__GenClause__ExprAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12797:1: ( ( ruleExpr ) )
            // InternalFortXTrans.g:12798:2: ( ruleExpr )
            {
            // InternalFortXTrans.g:12798:2: ( ruleExpr )
            // InternalFortXTrans.g:12799:3: ruleExpr
            {
             before(grammarAccess.getGenClauseAccess().getExprExprParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleExpr();

            state._fsp--;

             after(grammarAccess.getGenClauseAccess().getExprExprParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GenClause__ExprAssignment_1"


    // $ANTLR start "rule__BlockElems__BlockAssignment_0"
    // InternalFortXTrans.g:12808:1: rule__BlockElems__BlockAssignment_0 : ( ruleBlockElem ) ;
    public final void rule__BlockElems__BlockAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12812:1: ( ( ruleBlockElem ) )
            // InternalFortXTrans.g:12813:2: ( ruleBlockElem )
            {
            // InternalFortXTrans.g:12813:2: ( ruleBlockElem )
            // InternalFortXTrans.g:12814:3: ruleBlockElem
            {
             before(grammarAccess.getBlockElemsAccess().getBlockBlockElemParserRuleCall_0_0()); 
            pushFollow(FOLLOW_2);
            ruleBlockElem();

            state._fsp--;

             after(grammarAccess.getBlockElemsAccess().getBlockBlockElemParserRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BlockElems__BlockAssignment_0"


    // $ANTLR start "rule__BlockElems__BlockAssignment_1"
    // InternalFortXTrans.g:12823:1: rule__BlockElems__BlockAssignment_1 : ( ruleBlockElem ) ;
    public final void rule__BlockElems__BlockAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12827:1: ( ( ruleBlockElem ) )
            // InternalFortXTrans.g:12828:2: ( ruleBlockElem )
            {
            // InternalFortXTrans.g:12828:2: ( ruleBlockElem )
            // InternalFortXTrans.g:12829:3: ruleBlockElem
            {
             before(grammarAccess.getBlockElemsAccess().getBlockBlockElemParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleBlockElem();

            state._fsp--;

             after(grammarAccess.getBlockElemsAccess().getBlockBlockElemParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BlockElems__BlockAssignment_1"


    // $ANTLR start "rule__BlockElem__StAssignment"
    // InternalFortXTrans.g:12838:1: rule__BlockElem__StAssignment : ( ruleStmnts ) ;
    public final void rule__BlockElem__StAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12842:1: ( ( ruleStmnts ) )
            // InternalFortXTrans.g:12843:2: ( ruleStmnts )
            {
            // InternalFortXTrans.g:12843:2: ( ruleStmnts )
            // InternalFortXTrans.g:12844:3: ruleStmnts
            {
             before(grammarAccess.getBlockElemAccess().getStStmntsParserRuleCall_0()); 
            pushFollow(FOLLOW_2);
            ruleStmnts();

            state._fsp--;

             after(grammarAccess.getBlockElemAccess().getStStmntsParserRuleCall_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BlockElem__StAssignment"


    // $ANTLR start "rule__Do__DofsAssignment_0"
    // InternalFortXTrans.g:12853:1: rule__Do__DofsAssignment_0 : ( ruleDoFront ) ;
    public final void rule__Do__DofsAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12857:1: ( ( ruleDoFront ) )
            // InternalFortXTrans.g:12858:2: ( ruleDoFront )
            {
            // InternalFortXTrans.g:12858:2: ( ruleDoFront )
            // InternalFortXTrans.g:12859:3: ruleDoFront
            {
             before(grammarAccess.getDoAccess().getDofsDoFrontParserRuleCall_0_0()); 
            pushFollow(FOLLOW_2);
            ruleDoFront();

            state._fsp--;

             after(grammarAccess.getDoAccess().getDofsDoFrontParserRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Do__DofsAssignment_0"


    // $ANTLR start "rule__Do__DofsAssignment_1_1"
    // InternalFortXTrans.g:12868:1: rule__Do__DofsAssignment_1_1 : ( ruleDoFront ) ;
    public final void rule__Do__DofsAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12872:1: ( ( ruleDoFront ) )
            // InternalFortXTrans.g:12873:2: ( ruleDoFront )
            {
            // InternalFortXTrans.g:12873:2: ( ruleDoFront )
            // InternalFortXTrans.g:12874:3: ruleDoFront
            {
             before(grammarAccess.getDoAccess().getDofsDoFrontParserRuleCall_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleDoFront();

            state._fsp--;

             after(grammarAccess.getDoAccess().getDofsDoFrontParserRuleCall_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Do__DofsAssignment_1_1"


    // $ANTLR start "rule__DoFront__AtAssignment_0_0"
    // InternalFortXTrans.g:12883:1: rule__DoFront__AtAssignment_0_0 : ( ( 'at' ) ) ;
    public final void rule__DoFront__AtAssignment_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12887:1: ( ( ( 'at' ) ) )
            // InternalFortXTrans.g:12888:2: ( ( 'at' ) )
            {
            // InternalFortXTrans.g:12888:2: ( ( 'at' ) )
            // InternalFortXTrans.g:12889:3: ( 'at' )
            {
             before(grammarAccess.getDoFrontAccess().getAtAtKeyword_0_0_0()); 
            // InternalFortXTrans.g:12890:3: ( 'at' )
            // InternalFortXTrans.g:12891:4: 'at'
            {
             before(grammarAccess.getDoFrontAccess().getAtAtKeyword_0_0_0()); 
            match(input,66,FOLLOW_2); 
             after(grammarAccess.getDoFrontAccess().getAtAtKeyword_0_0_0()); 

            }

             after(grammarAccess.getDoFrontAccess().getAtAtKeyword_0_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DoFront__AtAssignment_0_0"


    // $ANTLR start "rule__DoFront__ExpAssignment_0_1"
    // InternalFortXTrans.g:12902:1: rule__DoFront__ExpAssignment_0_1 : ( ruleExpr ) ;
    public final void rule__DoFront__ExpAssignment_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12906:1: ( ( ruleExpr ) )
            // InternalFortXTrans.g:12907:2: ( ruleExpr )
            {
            // InternalFortXTrans.g:12907:2: ( ruleExpr )
            // InternalFortXTrans.g:12908:3: ruleExpr
            {
             before(grammarAccess.getDoFrontAccess().getExpExprParserRuleCall_0_1_0()); 
            pushFollow(FOLLOW_2);
            ruleExpr();

            state._fsp--;

             after(grammarAccess.getDoFrontAccess().getExpExprParserRuleCall_0_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DoFront__ExpAssignment_0_1"


    // $ANTLR start "rule__DoFront__AtomAssignment_1"
    // InternalFortXTrans.g:12917:1: rule__DoFront__AtomAssignment_1 : ( ( 'atomic' ) ) ;
    public final void rule__DoFront__AtomAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12921:1: ( ( ( 'atomic' ) ) )
            // InternalFortXTrans.g:12922:2: ( ( 'atomic' ) )
            {
            // InternalFortXTrans.g:12922:2: ( ( 'atomic' ) )
            // InternalFortXTrans.g:12923:3: ( 'atomic' )
            {
             before(grammarAccess.getDoFrontAccess().getAtomAtomicKeyword_1_0()); 
            // InternalFortXTrans.g:12924:3: ( 'atomic' )
            // InternalFortXTrans.g:12925:4: 'atomic'
            {
             before(grammarAccess.getDoFrontAccess().getAtomAtomicKeyword_1_0()); 
            match(input,58,FOLLOW_2); 
             after(grammarAccess.getDoFrontAccess().getAtomAtomicKeyword_1_0()); 

            }

             after(grammarAccess.getDoFrontAccess().getAtomAtomicKeyword_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DoFront__AtomAssignment_1"


    // $ANTLR start "rule__DoFront__BlockAssignment_3"
    // InternalFortXTrans.g:12936:1: rule__DoFront__BlockAssignment_3 : ( ruleBlockElems ) ;
    public final void rule__DoFront__BlockAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12940:1: ( ( ruleBlockElems ) )
            // InternalFortXTrans.g:12941:2: ( ruleBlockElems )
            {
            // InternalFortXTrans.g:12941:2: ( ruleBlockElems )
            // InternalFortXTrans.g:12942:3: ruleBlockElems
            {
             before(grammarAccess.getDoFrontAccess().getBlockBlockElemsParserRuleCall_3_0()); 
            pushFollow(FOLLOW_2);
            ruleBlockElems();

            state._fsp--;

             after(grammarAccess.getDoFrontAccess().getBlockBlockElemsParserRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DoFront__BlockAssignment_3"


    // $ANTLR start "rule__IdOrTuple__BidAssignment_0"
    // InternalFortXTrans.g:12951:1: rule__IdOrTuple__BidAssignment_0 : ( ruleBindId ) ;
    public final void rule__IdOrTuple__BidAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12955:1: ( ( ruleBindId ) )
            // InternalFortXTrans.g:12956:2: ( ruleBindId )
            {
            // InternalFortXTrans.g:12956:2: ( ruleBindId )
            // InternalFortXTrans.g:12957:3: ruleBindId
            {
             before(grammarAccess.getIdOrTupleAccess().getBidBindIdParserRuleCall_0_0()); 
            pushFollow(FOLLOW_2);
            ruleBindId();

            state._fsp--;

             after(grammarAccess.getIdOrTupleAccess().getBidBindIdParserRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IdOrTuple__BidAssignment_0"


    // $ANTLR start "rule__IdOrTuple__BidAssignment_1_1"
    // InternalFortXTrans.g:12966:1: rule__IdOrTuple__BidAssignment_1_1 : ( ruleBindId ) ;
    public final void rule__IdOrTuple__BidAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12970:1: ( ( ruleBindId ) )
            // InternalFortXTrans.g:12971:2: ( ruleBindId )
            {
            // InternalFortXTrans.g:12971:2: ( ruleBindId )
            // InternalFortXTrans.g:12972:3: ruleBindId
            {
             before(grammarAccess.getIdOrTupleAccess().getBidBindIdParserRuleCall_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleBindId();

            state._fsp--;

             after(grammarAccess.getIdOrTupleAccess().getBidBindIdParserRuleCall_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IdOrTuple__BidAssignment_1_1"


    // $ANTLR start "rule__IdOrTuple__BidAssignment_1_2_1"
    // InternalFortXTrans.g:12981:1: rule__IdOrTuple__BidAssignment_1_2_1 : ( ruleBindId ) ;
    public final void rule__IdOrTuple__BidAssignment_1_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12985:1: ( ( ruleBindId ) )
            // InternalFortXTrans.g:12986:2: ( ruleBindId )
            {
            // InternalFortXTrans.g:12986:2: ( ruleBindId )
            // InternalFortXTrans.g:12987:3: ruleBindId
            {
             before(grammarAccess.getIdOrTupleAccess().getBidBindIdParserRuleCall_1_2_1_0()); 
            pushFollow(FOLLOW_2);
            ruleBindId();

            state._fsp--;

             after(grammarAccess.getIdOrTupleAccess().getBidBindIdParserRuleCall_1_2_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IdOrTuple__BidAssignment_1_2_1"


    // $ANTLR start "rule__BindId__SAssignment_0"
    // InternalFortXTrans.g:12996:1: rule__BindId__SAssignment_0 : ( ruleSimpleName ) ;
    public final void rule__BindId__SAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13000:1: ( ( ruleSimpleName ) )
            // InternalFortXTrans.g:13001:2: ( ruleSimpleName )
            {
            // InternalFortXTrans.g:13001:2: ( ruleSimpleName )
            // InternalFortXTrans.g:13002:3: ruleSimpleName
            {
             before(grammarAccess.getBindIdAccess().getSSimpleNameParserRuleCall_0_0()); 
            pushFollow(FOLLOW_2);
            ruleSimpleName();

            state._fsp--;

             after(grammarAccess.getBindIdAccess().getSSimpleNameParserRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BindId__SAssignment_0"


    // $ANTLR start "rule__BindId__UndscAssignment_1"
    // InternalFortXTrans.g:13011:1: rule__BindId__UndscAssignment_1 : ( ( '_' ) ) ;
    public final void rule__BindId__UndscAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13015:1: ( ( ( '_' ) ) )
            // InternalFortXTrans.g:13016:2: ( ( '_' ) )
            {
            // InternalFortXTrans.g:13016:2: ( ( '_' ) )
            // InternalFortXTrans.g:13017:3: ( '_' )
            {
             before(grammarAccess.getBindIdAccess().getUndsc_Keyword_1_0()); 
            // InternalFortXTrans.g:13018:3: ( '_' )
            // InternalFortXTrans.g:13019:4: '_'
            {
             before(grammarAccess.getBindIdAccess().getUndsc_Keyword_1_0()); 
            match(input,67,FOLLOW_2); 
             after(grammarAccess.getBindIdAccess().getUndsc_Keyword_1_0()); 

            }

             after(grammarAccess.getBindIdAccess().getUndsc_Keyword_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BindId__UndscAssignment_1"


    // $ANTLR start "rule__IsType__TypeAssignment_1"
    // InternalFortXTrans.g:13030:1: rule__IsType__TypeAssignment_1 : ( ruleSimpleName ) ;
    public final void rule__IsType__TypeAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13034:1: ( ( ruleSimpleName ) )
            // InternalFortXTrans.g:13035:2: ( ruleSimpleName )
            {
            // InternalFortXTrans.g:13035:2: ( ruleSimpleName )
            // InternalFortXTrans.g:13036:3: ruleSimpleName
            {
             before(grammarAccess.getIsTypeAccess().getTypeSimpleNameParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleSimpleName();

            state._fsp--;

             after(grammarAccess.getIsTypeAccess().getTypeSimpleNameParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IsType__TypeAssignment_1"


    // $ANTLR start "rule__FieldDecl__PriAssignment_0_0"
    // InternalFortXTrans.g:13045:1: rule__FieldDecl__PriAssignment_0_0 : ( ( 'private' ) ) ;
    public final void rule__FieldDecl__PriAssignment_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13049:1: ( ( ( 'private' ) ) )
            // InternalFortXTrans.g:13050:2: ( ( 'private' ) )
            {
            // InternalFortXTrans.g:13050:2: ( ( 'private' ) )
            // InternalFortXTrans.g:13051:3: ( 'private' )
            {
             before(grammarAccess.getFieldDeclAccess().getPriPrivateKeyword_0_0_0()); 
            // InternalFortXTrans.g:13052:3: ( 'private' )
            // InternalFortXTrans.g:13053:4: 'private'
            {
             before(grammarAccess.getFieldDeclAccess().getPriPrivateKeyword_0_0_0()); 
            match(input,56,FOLLOW_2); 
             after(grammarAccess.getFieldDeclAccess().getPriPrivateKeyword_0_0_0()); 

            }

             after(grammarAccess.getFieldDeclAccess().getPriPrivateKeyword_0_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__PriAssignment_0_0"


    // $ANTLR start "rule__FieldDecl__MutAssignment_0_1"
    // InternalFortXTrans.g:13064:1: rule__FieldDecl__MutAssignment_0_1 : ( ( 'var' ) ) ;
    public final void rule__FieldDecl__MutAssignment_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13068:1: ( ( ( 'var' ) ) )
            // InternalFortXTrans.g:13069:2: ( ( 'var' ) )
            {
            // InternalFortXTrans.g:13069:2: ( ( 'var' ) )
            // InternalFortXTrans.g:13070:3: ( 'var' )
            {
             before(grammarAccess.getFieldDeclAccess().getMutVarKeyword_0_1_0()); 
            // InternalFortXTrans.g:13071:3: ( 'var' )
            // InternalFortXTrans.g:13072:4: 'var'
            {
             before(grammarAccess.getFieldDeclAccess().getMutVarKeyword_0_1_0()); 
            match(input,68,FOLLOW_2); 
             after(grammarAccess.getFieldDeclAccess().getMutVarKeyword_0_1_0()); 

            }

             after(grammarAccess.getFieldDeclAccess().getMutVarKeyword_0_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__MutAssignment_0_1"


    // $ANTLR start "rule__FieldDecl__VarsAssignment_0_2"
    // InternalFortXTrans.g:13083:1: rule__FieldDecl__VarsAssignment_0_2 : ( ruleNoNewlineVarWTypes ) ;
    public final void rule__FieldDecl__VarsAssignment_0_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13087:1: ( ( ruleNoNewlineVarWTypes ) )
            // InternalFortXTrans.g:13088:2: ( ruleNoNewlineVarWTypes )
            {
            // InternalFortXTrans.g:13088:2: ( ruleNoNewlineVarWTypes )
            // InternalFortXTrans.g:13089:3: ruleNoNewlineVarWTypes
            {
             before(grammarAccess.getFieldDeclAccess().getVarsNoNewlineVarWTypesParserRuleCall_0_2_0()); 
            pushFollow(FOLLOW_2);
            ruleNoNewlineVarWTypes();

            state._fsp--;

             after(grammarAccess.getFieldDeclAccess().getVarsNoNewlineVarWTypesParserRuleCall_0_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__VarsAssignment_0_2"


    // $ANTLR start "rule__FieldDecl__InitAssignment_0_3"
    // InternalFortXTrans.g:13098:1: rule__FieldDecl__InitAssignment_0_3 : ( ruleInitVal ) ;
    public final void rule__FieldDecl__InitAssignment_0_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13102:1: ( ( ruleInitVal ) )
            // InternalFortXTrans.g:13103:2: ( ruleInitVal )
            {
            // InternalFortXTrans.g:13103:2: ( ruleInitVal )
            // InternalFortXTrans.g:13104:3: ruleInitVal
            {
             before(grammarAccess.getFieldDeclAccess().getInitInitValParserRuleCall_0_3_0()); 
            pushFollow(FOLLOW_2);
            ruleInitVal();

            state._fsp--;

             after(grammarAccess.getFieldDeclAccess().getInitInitValParserRuleCall_0_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__InitAssignment_0_3"


    // $ANTLR start "rule__FieldDecl__PriAssignment_1_0"
    // InternalFortXTrans.g:13113:1: rule__FieldDecl__PriAssignment_1_0 : ( ( 'private' ) ) ;
    public final void rule__FieldDecl__PriAssignment_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13117:1: ( ( ( 'private' ) ) )
            // InternalFortXTrans.g:13118:2: ( ( 'private' ) )
            {
            // InternalFortXTrans.g:13118:2: ( ( 'private' ) )
            // InternalFortXTrans.g:13119:3: ( 'private' )
            {
             before(grammarAccess.getFieldDeclAccess().getPriPrivateKeyword_1_0_0()); 
            // InternalFortXTrans.g:13120:3: ( 'private' )
            // InternalFortXTrans.g:13121:4: 'private'
            {
             before(grammarAccess.getFieldDeclAccess().getPriPrivateKeyword_1_0_0()); 
            match(input,56,FOLLOW_2); 
             after(grammarAccess.getFieldDeclAccess().getPriPrivateKeyword_1_0_0()); 

            }

             after(grammarAccess.getFieldDeclAccess().getPriPrivateKeyword_1_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__PriAssignment_1_0"


    // $ANTLR start "rule__FieldDecl__IdtupAssignment_1_1"
    // InternalFortXTrans.g:13132:1: rule__FieldDecl__IdtupAssignment_1_1 : ( ruleIdOrTuple ) ;
    public final void rule__FieldDecl__IdtupAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13136:1: ( ( ruleIdOrTuple ) )
            // InternalFortXTrans.g:13137:2: ( ruleIdOrTuple )
            {
            // InternalFortXTrans.g:13137:2: ( ruleIdOrTuple )
            // InternalFortXTrans.g:13138:3: ruleIdOrTuple
            {
             before(grammarAccess.getFieldDeclAccess().getIdtupIdOrTupleParserRuleCall_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleIdOrTuple();

            state._fsp--;

             after(grammarAccess.getFieldDeclAccess().getIdtupIdOrTupleParserRuleCall_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__IdtupAssignment_1_1"


    // $ANTLR start "rule__FieldDecl__LitTupAssignment_1_3"
    // InternalFortXTrans.g:13147:1: rule__FieldDecl__LitTupAssignment_1_3 : ( ruleLiteralTuple ) ;
    public final void rule__FieldDecl__LitTupAssignment_1_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13151:1: ( ( ruleLiteralTuple ) )
            // InternalFortXTrans.g:13152:2: ( ruleLiteralTuple )
            {
            // InternalFortXTrans.g:13152:2: ( ruleLiteralTuple )
            // InternalFortXTrans.g:13153:3: ruleLiteralTuple
            {
             before(grammarAccess.getFieldDeclAccess().getLitTupLiteralTupleParserRuleCall_1_3_0()); 
            pushFollow(FOLLOW_2);
            ruleLiteralTuple();

            state._fsp--;

             after(grammarAccess.getFieldDeclAccess().getLitTupLiteralTupleParserRuleCall_1_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__LitTupAssignment_1_3"


    // $ANTLR start "rule__FieldDecl__PriAssignment_2_0"
    // InternalFortXTrans.g:13162:1: rule__FieldDecl__PriAssignment_2_0 : ( ( 'private' ) ) ;
    public final void rule__FieldDecl__PriAssignment_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13166:1: ( ( ( 'private' ) ) )
            // InternalFortXTrans.g:13167:2: ( ( 'private' ) )
            {
            // InternalFortXTrans.g:13167:2: ( ( 'private' ) )
            // InternalFortXTrans.g:13168:3: ( 'private' )
            {
             before(grammarAccess.getFieldDeclAccess().getPriPrivateKeyword_2_0_0()); 
            // InternalFortXTrans.g:13169:3: ( 'private' )
            // InternalFortXTrans.g:13170:4: 'private'
            {
             before(grammarAccess.getFieldDeclAccess().getPriPrivateKeyword_2_0_0()); 
            match(input,56,FOLLOW_2); 
             after(grammarAccess.getFieldDeclAccess().getPriPrivateKeyword_2_0_0()); 

            }

             after(grammarAccess.getFieldDeclAccess().getPriPrivateKeyword_2_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__PriAssignment_2_0"


    // $ANTLR start "rule__FieldDecl__MutAssignment_2_1"
    // InternalFortXTrans.g:13181:1: rule__FieldDecl__MutAssignment_2_1 : ( ( 'var' ) ) ;
    public final void rule__FieldDecl__MutAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13185:1: ( ( ( 'var' ) ) )
            // InternalFortXTrans.g:13186:2: ( ( 'var' ) )
            {
            // InternalFortXTrans.g:13186:2: ( ( 'var' ) )
            // InternalFortXTrans.g:13187:3: ( 'var' )
            {
             before(grammarAccess.getFieldDeclAccess().getMutVarKeyword_2_1_0()); 
            // InternalFortXTrans.g:13188:3: ( 'var' )
            // InternalFortXTrans.g:13189:4: 'var'
            {
             before(grammarAccess.getFieldDeclAccess().getMutVarKeyword_2_1_0()); 
            match(input,68,FOLLOW_2); 
             after(grammarAccess.getFieldDeclAccess().getMutVarKeyword_2_1_0()); 

            }

             after(grammarAccess.getFieldDeclAccess().getMutVarKeyword_2_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__MutAssignment_2_1"


    // $ANTLR start "rule__FieldDecl__IdtupAssignment_2_2"
    // InternalFortXTrans.g:13200:1: rule__FieldDecl__IdtupAssignment_2_2 : ( ruleIdOrTuple ) ;
    public final void rule__FieldDecl__IdtupAssignment_2_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13204:1: ( ( ruleIdOrTuple ) )
            // InternalFortXTrans.g:13205:2: ( ruleIdOrTuple )
            {
            // InternalFortXTrans.g:13205:2: ( ruleIdOrTuple )
            // InternalFortXTrans.g:13206:3: ruleIdOrTuple
            {
             before(grammarAccess.getFieldDeclAccess().getIdtupIdOrTupleParserRuleCall_2_2_0()); 
            pushFollow(FOLLOW_2);
            ruleIdOrTuple();

            state._fsp--;

             after(grammarAccess.getFieldDeclAccess().getIdtupIdOrTupleParserRuleCall_2_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__IdtupAssignment_2_2"


    // $ANTLR start "rule__FieldDecl__TypeAssignment_2_4"
    // InternalFortXTrans.g:13215:1: rule__FieldDecl__TypeAssignment_2_4 : ( ruleSimpleName ) ;
    public final void rule__FieldDecl__TypeAssignment_2_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13219:1: ( ( ruleSimpleName ) )
            // InternalFortXTrans.g:13220:2: ( ruleSimpleName )
            {
            // InternalFortXTrans.g:13220:2: ( ruleSimpleName )
            // InternalFortXTrans.g:13221:3: ruleSimpleName
            {
             before(grammarAccess.getFieldDeclAccess().getTypeSimpleNameParserRuleCall_2_4_0()); 
            pushFollow(FOLLOW_2);
            ruleSimpleName();

            state._fsp--;

             after(grammarAccess.getFieldDeclAccess().getTypeSimpleNameParserRuleCall_2_4_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__TypeAssignment_2_4"


    // $ANTLR start "rule__FieldDecl__InitAssignment_2_6"
    // InternalFortXTrans.g:13230:1: rule__FieldDecl__InitAssignment_2_6 : ( ruleInitVal ) ;
    public final void rule__FieldDecl__InitAssignment_2_6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13234:1: ( ( ruleInitVal ) )
            // InternalFortXTrans.g:13235:2: ( ruleInitVal )
            {
            // InternalFortXTrans.g:13235:2: ( ruleInitVal )
            // InternalFortXTrans.g:13236:3: ruleInitVal
            {
             before(grammarAccess.getFieldDeclAccess().getInitInitValParserRuleCall_2_6_0()); 
            pushFollow(FOLLOW_2);
            ruleInitVal();

            state._fsp--;

             after(grammarAccess.getFieldDeclAccess().getInitInitValParserRuleCall_2_6_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__InitAssignment_2_6"


    // $ANTLR start "rule__FieldDecl__PriAssignment_3_0"
    // InternalFortXTrans.g:13245:1: rule__FieldDecl__PriAssignment_3_0 : ( ( 'private' ) ) ;
    public final void rule__FieldDecl__PriAssignment_3_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13249:1: ( ( ( 'private' ) ) )
            // InternalFortXTrans.g:13250:2: ( ( 'private' ) )
            {
            // InternalFortXTrans.g:13250:2: ( ( 'private' ) )
            // InternalFortXTrans.g:13251:3: ( 'private' )
            {
             before(grammarAccess.getFieldDeclAccess().getPriPrivateKeyword_3_0_0()); 
            // InternalFortXTrans.g:13252:3: ( 'private' )
            // InternalFortXTrans.g:13253:4: 'private'
            {
             before(grammarAccess.getFieldDeclAccess().getPriPrivateKeyword_3_0_0()); 
            match(input,56,FOLLOW_2); 
             after(grammarAccess.getFieldDeclAccess().getPriPrivateKeyword_3_0_0()); 

            }

             after(grammarAccess.getFieldDeclAccess().getPriPrivateKeyword_3_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__PriAssignment_3_0"


    // $ANTLR start "rule__FieldDecl__MutAssignment_3_1"
    // InternalFortXTrans.g:13264:1: rule__FieldDecl__MutAssignment_3_1 : ( ( 'var' ) ) ;
    public final void rule__FieldDecl__MutAssignment_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13268:1: ( ( ( 'var' ) ) )
            // InternalFortXTrans.g:13269:2: ( ( 'var' ) )
            {
            // InternalFortXTrans.g:13269:2: ( ( 'var' ) )
            // InternalFortXTrans.g:13270:3: ( 'var' )
            {
             before(grammarAccess.getFieldDeclAccess().getMutVarKeyword_3_1_0()); 
            // InternalFortXTrans.g:13271:3: ( 'var' )
            // InternalFortXTrans.g:13272:4: 'var'
            {
             before(grammarAccess.getFieldDeclAccess().getMutVarKeyword_3_1_0()); 
            match(input,68,FOLLOW_2); 
             after(grammarAccess.getFieldDeclAccess().getMutVarKeyword_3_1_0()); 

            }

             after(grammarAccess.getFieldDeclAccess().getMutVarKeyword_3_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__MutAssignment_3_1"


    // $ANTLR start "rule__FieldDecl__IdtupAssignment_3_2"
    // InternalFortXTrans.g:13283:1: rule__FieldDecl__IdtupAssignment_3_2 : ( ruleIdOrTuple ) ;
    public final void rule__FieldDecl__IdtupAssignment_3_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13287:1: ( ( ruleIdOrTuple ) )
            // InternalFortXTrans.g:13288:2: ( ruleIdOrTuple )
            {
            // InternalFortXTrans.g:13288:2: ( ruleIdOrTuple )
            // InternalFortXTrans.g:13289:3: ruleIdOrTuple
            {
             before(grammarAccess.getFieldDeclAccess().getIdtupIdOrTupleParserRuleCall_3_2_0()); 
            pushFollow(FOLLOW_2);
            ruleIdOrTuple();

            state._fsp--;

             after(grammarAccess.getFieldDeclAccess().getIdtupIdOrTupleParserRuleCall_3_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__IdtupAssignment_3_2"


    // $ANTLR start "rule__FieldDecl__TuptypeAssignment_3_4"
    // InternalFortXTrans.g:13298:1: rule__FieldDecl__TuptypeAssignment_3_4 : ( ruleTupleType ) ;
    public final void rule__FieldDecl__TuptypeAssignment_3_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13302:1: ( ( ruleTupleType ) )
            // InternalFortXTrans.g:13303:2: ( ruleTupleType )
            {
            // InternalFortXTrans.g:13303:2: ( ruleTupleType )
            // InternalFortXTrans.g:13304:3: ruleTupleType
            {
             before(grammarAccess.getFieldDeclAccess().getTuptypeTupleTypeParserRuleCall_3_4_0()); 
            pushFollow(FOLLOW_2);
            ruleTupleType();

            state._fsp--;

             after(grammarAccess.getFieldDeclAccess().getTuptypeTupleTypeParserRuleCall_3_4_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__TuptypeAssignment_3_4"


    // $ANTLR start "rule__FieldDecl__InitAssignment_3_5"
    // InternalFortXTrans.g:13313:1: rule__FieldDecl__InitAssignment_3_5 : ( ruleInitVal ) ;
    public final void rule__FieldDecl__InitAssignment_3_5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13317:1: ( ( ruleInitVal ) )
            // InternalFortXTrans.g:13318:2: ( ruleInitVal )
            {
            // InternalFortXTrans.g:13318:2: ( ruleInitVal )
            // InternalFortXTrans.g:13319:3: ruleInitVal
            {
             before(grammarAccess.getFieldDeclAccess().getInitInitValParserRuleCall_3_5_0()); 
            pushFollow(FOLLOW_2);
            ruleInitVal();

            state._fsp--;

             after(grammarAccess.getFieldDeclAccess().getInitInitValParserRuleCall_3_5_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__InitAssignment_3_5"


    // $ANTLR start "rule__NoNewlineVarWTypes__SingleAssignment_0"
    // InternalFortXTrans.g:13328:1: rule__NoNewlineVarWTypes__SingleAssignment_0 : ( ruleNoNewlineVarWType ) ;
    public final void rule__NoNewlineVarWTypes__SingleAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13332:1: ( ( ruleNoNewlineVarWType ) )
            // InternalFortXTrans.g:13333:2: ( ruleNoNewlineVarWType )
            {
            // InternalFortXTrans.g:13333:2: ( ruleNoNewlineVarWType )
            // InternalFortXTrans.g:13334:3: ruleNoNewlineVarWType
            {
             before(grammarAccess.getNoNewlineVarWTypesAccess().getSingleNoNewlineVarWTypeParserRuleCall_0_0()); 
            pushFollow(FOLLOW_2);
            ruleNoNewlineVarWType();

            state._fsp--;

             after(grammarAccess.getNoNewlineVarWTypesAccess().getSingleNoNewlineVarWTypeParserRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NoNewlineVarWTypes__SingleAssignment_0"


    // $ANTLR start "rule__NoNewlineVarWTypes__MultipleAssignment_1_1"
    // InternalFortXTrans.g:13343:1: rule__NoNewlineVarWTypes__MultipleAssignment_1_1 : ( ruleNoNewlineVarWType ) ;
    public final void rule__NoNewlineVarWTypes__MultipleAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13347:1: ( ( ruleNoNewlineVarWType ) )
            // InternalFortXTrans.g:13348:2: ( ruleNoNewlineVarWType )
            {
            // InternalFortXTrans.g:13348:2: ( ruleNoNewlineVarWType )
            // InternalFortXTrans.g:13349:3: ruleNoNewlineVarWType
            {
             before(grammarAccess.getNoNewlineVarWTypesAccess().getMultipleNoNewlineVarWTypeParserRuleCall_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleNoNewlineVarWType();

            state._fsp--;

             after(grammarAccess.getNoNewlineVarWTypesAccess().getMultipleNoNewlineVarWTypeParserRuleCall_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NoNewlineVarWTypes__MultipleAssignment_1_1"


    // $ANTLR start "rule__NoNewlineVarWTypes__MultipleAssignment_1_2_1"
    // InternalFortXTrans.g:13358:1: rule__NoNewlineVarWTypes__MultipleAssignment_1_2_1 : ( ruleNoNewlineVarWType ) ;
    public final void rule__NoNewlineVarWTypes__MultipleAssignment_1_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13362:1: ( ( ruleNoNewlineVarWType ) )
            // InternalFortXTrans.g:13363:2: ( ruleNoNewlineVarWType )
            {
            // InternalFortXTrans.g:13363:2: ( ruleNoNewlineVarWType )
            // InternalFortXTrans.g:13364:3: ruleNoNewlineVarWType
            {
             before(grammarAccess.getNoNewlineVarWTypesAccess().getMultipleNoNewlineVarWTypeParserRuleCall_1_2_1_0()); 
            pushFollow(FOLLOW_2);
            ruleNoNewlineVarWType();

            state._fsp--;

             after(grammarAccess.getNoNewlineVarWTypesAccess().getMultipleNoNewlineVarWTypeParserRuleCall_1_2_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NoNewlineVarWTypes__MultipleAssignment_1_2_1"


    // $ANTLR start "rule__NoNewlineVarWType__BidAssignment_0"
    // InternalFortXTrans.g:13373:1: rule__NoNewlineVarWType__BidAssignment_0 : ( ruleBindId ) ;
    public final void rule__NoNewlineVarWType__BidAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13377:1: ( ( ruleBindId ) )
            // InternalFortXTrans.g:13378:2: ( ruleBindId )
            {
            // InternalFortXTrans.g:13378:2: ( ruleBindId )
            // InternalFortXTrans.g:13379:3: ruleBindId
            {
             before(grammarAccess.getNoNewlineVarWTypeAccess().getBidBindIdParserRuleCall_0_0()); 
            pushFollow(FOLLOW_2);
            ruleBindId();

            state._fsp--;

             after(grammarAccess.getNoNewlineVarWTypeAccess().getBidBindIdParserRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NoNewlineVarWType__BidAssignment_0"


    // $ANTLR start "rule__NoNewlineVarWType__IstypeAssignment_1"
    // InternalFortXTrans.g:13388:1: rule__NoNewlineVarWType__IstypeAssignment_1 : ( ruleIsType ) ;
    public final void rule__NoNewlineVarWType__IstypeAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13392:1: ( ( ruleIsType ) )
            // InternalFortXTrans.g:13393:2: ( ruleIsType )
            {
            // InternalFortXTrans.g:13393:2: ( ruleIsType )
            // InternalFortXTrans.g:13394:3: ruleIsType
            {
             before(grammarAccess.getNoNewlineVarWTypeAccess().getIstypeIsTypeParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleIsType();

            state._fsp--;

             after(grammarAccess.getNoNewlineVarWTypeAccess().getIstypeIsTypeParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NoNewlineVarWType__IstypeAssignment_1"


    // $ANTLR start "rule__InitVal__MutAssignment_0_0"
    // InternalFortXTrans.g:13403:1: rule__InitVal__MutAssignment_0_0 : ( ( ':=' ) ) ;
    public final void rule__InitVal__MutAssignment_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13407:1: ( ( ( ':=' ) ) )
            // InternalFortXTrans.g:13408:2: ( ( ':=' ) )
            {
            // InternalFortXTrans.g:13408:2: ( ( ':=' ) )
            // InternalFortXTrans.g:13409:3: ( ':=' )
            {
             before(grammarAccess.getInitValAccess().getMutColonEqualsSignKeyword_0_0_0()); 
            // InternalFortXTrans.g:13410:3: ( ':=' )
            // InternalFortXTrans.g:13411:4: ':='
            {
             before(grammarAccess.getInitValAccess().getMutColonEqualsSignKeyword_0_0_0()); 
            match(input,60,FOLLOW_2); 
             after(grammarAccess.getInitValAccess().getMutColonEqualsSignKeyword_0_0_0()); 

            }

             after(grammarAccess.getInitValAccess().getMutColonEqualsSignKeyword_0_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InitVal__MutAssignment_0_0"


    // $ANTLR start "rule__InitVal__LitAssignment_0_1"
    // InternalFortXTrans.g:13422:1: rule__InitVal__LitAssignment_0_1 : ( ruleLiteralTuple ) ;
    public final void rule__InitVal__LitAssignment_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13426:1: ( ( ruleLiteralTuple ) )
            // InternalFortXTrans.g:13427:2: ( ruleLiteralTuple )
            {
            // InternalFortXTrans.g:13427:2: ( ruleLiteralTuple )
            // InternalFortXTrans.g:13428:3: ruleLiteralTuple
            {
             before(grammarAccess.getInitValAccess().getLitLiteralTupleParserRuleCall_0_1_0()); 
            pushFollow(FOLLOW_2);
            ruleLiteralTuple();

            state._fsp--;

             after(grammarAccess.getInitValAccess().getLitLiteralTupleParserRuleCall_0_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InitVal__LitAssignment_0_1"


    // $ANTLR start "rule__InitVal__ImmutAssignment_1_0"
    // InternalFortXTrans.g:13437:1: rule__InitVal__ImmutAssignment_1_0 : ( ( '=' ) ) ;
    public final void rule__InitVal__ImmutAssignment_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13441:1: ( ( ( '=' ) ) )
            // InternalFortXTrans.g:13442:2: ( ( '=' ) )
            {
            // InternalFortXTrans.g:13442:2: ( ( '=' ) )
            // InternalFortXTrans.g:13443:3: ( '=' )
            {
             before(grammarAccess.getInitValAccess().getImmutEqualsSignKeyword_1_0_0()); 
            // InternalFortXTrans.g:13444:3: ( '=' )
            // InternalFortXTrans.g:13445:4: '='
            {
             before(grammarAccess.getInitValAccess().getImmutEqualsSignKeyword_1_0_0()); 
            match(input,52,FOLLOW_2); 
             after(grammarAccess.getInitValAccess().getImmutEqualsSignKeyword_1_0_0()); 

            }

             after(grammarAccess.getInitValAccess().getImmutEqualsSignKeyword_1_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InitVal__ImmutAssignment_1_0"


    // $ANTLR start "rule__InitVal__LitAssignment_1_1"
    // InternalFortXTrans.g:13456:1: rule__InitVal__LitAssignment_1_1 : ( ruleLiteralTuple ) ;
    public final void rule__InitVal__LitAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13460:1: ( ( ruleLiteralTuple ) )
            // InternalFortXTrans.g:13461:2: ( ruleLiteralTuple )
            {
            // InternalFortXTrans.g:13461:2: ( ruleLiteralTuple )
            // InternalFortXTrans.g:13462:3: ruleLiteralTuple
            {
             before(grammarAccess.getInitValAccess().getLitLiteralTupleParserRuleCall_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleLiteralTuple();

            state._fsp--;

             after(grammarAccess.getInitValAccess().getLitLiteralTupleParserRuleCall_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InitVal__LitAssignment_1_1"


    // $ANTLR start "rule__LiteralList__LitAssignment_1"
    // InternalFortXTrans.g:13471:1: rule__LiteralList__LitAssignment_1 : ( ruleLiteral ) ;
    public final void rule__LiteralList__LitAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13475:1: ( ( ruleLiteral ) )
            // InternalFortXTrans.g:13476:2: ( ruleLiteral )
            {
            // InternalFortXTrans.g:13476:2: ( ruleLiteral )
            // InternalFortXTrans.g:13477:3: ruleLiteral
            {
             before(grammarAccess.getLiteralListAccess().getLitLiteralParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleLiteral();

            state._fsp--;

             after(grammarAccess.getLiteralListAccess().getLitLiteralParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralList__LitAssignment_1"


    // $ANTLR start "rule__LiteralList__LitAssignment_2_1"
    // InternalFortXTrans.g:13486:1: rule__LiteralList__LitAssignment_2_1 : ( ruleLiteral ) ;
    public final void rule__LiteralList__LitAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13490:1: ( ( ruleLiteral ) )
            // InternalFortXTrans.g:13491:2: ( ruleLiteral )
            {
            // InternalFortXTrans.g:13491:2: ( ruleLiteral )
            // InternalFortXTrans.g:13492:3: ruleLiteral
            {
             before(grammarAccess.getLiteralListAccess().getLitLiteralParserRuleCall_2_1_0()); 
            pushFollow(FOLLOW_2);
            ruleLiteral();

            state._fsp--;

             after(grammarAccess.getLiteralListAccess().getLitLiteralParserRuleCall_2_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralList__LitAssignment_2_1"


    // $ANTLR start "rule__Literal__ValueAssignment_0_1"
    // InternalFortXTrans.g:13501:1: rule__Literal__ValueAssignment_0_1 : ( RULE_INT ) ;
    public final void rule__Literal__ValueAssignment_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13505:1: ( ( RULE_INT ) )
            // InternalFortXTrans.g:13506:2: ( RULE_INT )
            {
            // InternalFortXTrans.g:13506:2: ( RULE_INT )
            // InternalFortXTrans.g:13507:3: RULE_INT
            {
             before(grammarAccess.getLiteralAccess().getValueINTTerminalRuleCall_0_1_0()); 
            match(input,RULE_INT,FOLLOW_2); 
             after(grammarAccess.getLiteralAccess().getValueINTTerminalRuleCall_0_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Literal__ValueAssignment_0_1"


    // $ANTLR start "rule__Literal__ValueAssignment_1_1"
    // InternalFortXTrans.g:13516:1: rule__Literal__ValueAssignment_1_1 : ( RULE_FLOAT ) ;
    public final void rule__Literal__ValueAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13520:1: ( ( RULE_FLOAT ) )
            // InternalFortXTrans.g:13521:2: ( RULE_FLOAT )
            {
            // InternalFortXTrans.g:13521:2: ( RULE_FLOAT )
            // InternalFortXTrans.g:13522:3: RULE_FLOAT
            {
             before(grammarAccess.getLiteralAccess().getValueFLOATTerminalRuleCall_1_1_0()); 
            match(input,RULE_FLOAT,FOLLOW_2); 
             after(grammarAccess.getLiteralAccess().getValueFLOATTerminalRuleCall_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Literal__ValueAssignment_1_1"


    // $ANTLR start "rule__Literal__ValueAssignment_2_1"
    // InternalFortXTrans.g:13531:1: rule__Literal__ValueAssignment_2_1 : ( RULE_STRING ) ;
    public final void rule__Literal__ValueAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13535:1: ( ( RULE_STRING ) )
            // InternalFortXTrans.g:13536:2: ( RULE_STRING )
            {
            // InternalFortXTrans.g:13536:2: ( RULE_STRING )
            // InternalFortXTrans.g:13537:3: RULE_STRING
            {
             before(grammarAccess.getLiteralAccess().getValueSTRINGTerminalRuleCall_2_1_0()); 
            match(input,RULE_STRING,FOLLOW_2); 
             after(grammarAccess.getLiteralAccess().getValueSTRINGTerminalRuleCall_2_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Literal__ValueAssignment_2_1"


    // $ANTLR start "rule__Literal__ValueAssignment_3_1"
    // InternalFortXTrans.g:13546:1: rule__Literal__ValueAssignment_3_1 : ( ( rule__Literal__ValueAlternatives_3_1_0 ) ) ;
    public final void rule__Literal__ValueAssignment_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13550:1: ( ( ( rule__Literal__ValueAlternatives_3_1_0 ) ) )
            // InternalFortXTrans.g:13551:2: ( ( rule__Literal__ValueAlternatives_3_1_0 ) )
            {
            // InternalFortXTrans.g:13551:2: ( ( rule__Literal__ValueAlternatives_3_1_0 ) )
            // InternalFortXTrans.g:13552:3: ( rule__Literal__ValueAlternatives_3_1_0 )
            {
             before(grammarAccess.getLiteralAccess().getValueAlternatives_3_1_0()); 
            // InternalFortXTrans.g:13553:3: ( rule__Literal__ValueAlternatives_3_1_0 )
            // InternalFortXTrans.g:13553:4: rule__Literal__ValueAlternatives_3_1_0
            {
            pushFollow(FOLLOW_2);
            rule__Literal__ValueAlternatives_3_1_0();

            state._fsp--;


            }

             after(grammarAccess.getLiteralAccess().getValueAlternatives_3_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Literal__ValueAssignment_3_1"


    // $ANTLR start "rule__LocalVarDecl__MutAssignment_0_0"
    // InternalFortXTrans.g:13561:1: rule__LocalVarDecl__MutAssignment_0_0 : ( ( 'var' ) ) ;
    public final void rule__LocalVarDecl__MutAssignment_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13565:1: ( ( ( 'var' ) ) )
            // InternalFortXTrans.g:13566:2: ( ( 'var' ) )
            {
            // InternalFortXTrans.g:13566:2: ( ( 'var' ) )
            // InternalFortXTrans.g:13567:3: ( 'var' )
            {
             before(grammarAccess.getLocalVarDeclAccess().getMutVarKeyword_0_0_0()); 
            // InternalFortXTrans.g:13568:3: ( 'var' )
            // InternalFortXTrans.g:13569:4: 'var'
            {
             before(grammarAccess.getLocalVarDeclAccess().getMutVarKeyword_0_0_0()); 
            match(input,68,FOLLOW_2); 
             after(grammarAccess.getLocalVarDeclAccess().getMutVarKeyword_0_0_0()); 

            }

             after(grammarAccess.getLocalVarDeclAccess().getMutVarKeyword_0_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__MutAssignment_0_0"


    // $ANTLR start "rule__LocalVarDecl__VarsAssignment_0_1"
    // InternalFortXTrans.g:13580:1: rule__LocalVarDecl__VarsAssignment_0_1 : ( ruleNoNewlineVarWTypes ) ;
    public final void rule__LocalVarDecl__VarsAssignment_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13584:1: ( ( ruleNoNewlineVarWTypes ) )
            // InternalFortXTrans.g:13585:2: ( ruleNoNewlineVarWTypes )
            {
            // InternalFortXTrans.g:13585:2: ( ruleNoNewlineVarWTypes )
            // InternalFortXTrans.g:13586:3: ruleNoNewlineVarWTypes
            {
             before(grammarAccess.getLocalVarDeclAccess().getVarsNoNewlineVarWTypesParserRuleCall_0_1_0()); 
            pushFollow(FOLLOW_2);
            ruleNoNewlineVarWTypes();

            state._fsp--;

             after(grammarAccess.getLocalVarDeclAccess().getVarsNoNewlineVarWTypesParserRuleCall_0_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__VarsAssignment_0_1"


    // $ANTLR start "rule__LocalVarDecl__InitAssignment_0_3"
    // InternalFortXTrans.g:13595:1: rule__LocalVarDecl__InitAssignment_0_3 : ( ruleExpr ) ;
    public final void rule__LocalVarDecl__InitAssignment_0_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13599:1: ( ( ruleExpr ) )
            // InternalFortXTrans.g:13600:2: ( ruleExpr )
            {
            // InternalFortXTrans.g:13600:2: ( ruleExpr )
            // InternalFortXTrans.g:13601:3: ruleExpr
            {
             before(grammarAccess.getLocalVarDeclAccess().getInitExprParserRuleCall_0_3_0()); 
            pushFollow(FOLLOW_2);
            ruleExpr();

            state._fsp--;

             after(grammarAccess.getLocalVarDeclAccess().getInitExprParserRuleCall_0_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__InitAssignment_0_3"


    // $ANTLR start "rule__LocalVarDecl__IdtupAssignment_1_0"
    // InternalFortXTrans.g:13610:1: rule__LocalVarDecl__IdtupAssignment_1_0 : ( ruleIdOrTuple ) ;
    public final void rule__LocalVarDecl__IdtupAssignment_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13614:1: ( ( ruleIdOrTuple ) )
            // InternalFortXTrans.g:13615:2: ( ruleIdOrTuple )
            {
            // InternalFortXTrans.g:13615:2: ( ruleIdOrTuple )
            // InternalFortXTrans.g:13616:3: ruleIdOrTuple
            {
             before(grammarAccess.getLocalVarDeclAccess().getIdtupIdOrTupleParserRuleCall_1_0_0()); 
            pushFollow(FOLLOW_2);
            ruleIdOrTuple();

            state._fsp--;

             after(grammarAccess.getLocalVarDeclAccess().getIdtupIdOrTupleParserRuleCall_1_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__IdtupAssignment_1_0"


    // $ANTLR start "rule__LocalVarDecl__LitTupAssignment_1_2"
    // InternalFortXTrans.g:13625:1: rule__LocalVarDecl__LitTupAssignment_1_2 : ( ruleLiteralTuple ) ;
    public final void rule__LocalVarDecl__LitTupAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13629:1: ( ( ruleLiteralTuple ) )
            // InternalFortXTrans.g:13630:2: ( ruleLiteralTuple )
            {
            // InternalFortXTrans.g:13630:2: ( ruleLiteralTuple )
            // InternalFortXTrans.g:13631:3: ruleLiteralTuple
            {
             before(grammarAccess.getLocalVarDeclAccess().getLitTupLiteralTupleParserRuleCall_1_2_0()); 
            pushFollow(FOLLOW_2);
            ruleLiteralTuple();

            state._fsp--;

             after(grammarAccess.getLocalVarDeclAccess().getLitTupLiteralTupleParserRuleCall_1_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__LitTupAssignment_1_2"


    // $ANTLR start "rule__LocalVarDecl__MutAssignment_2_0"
    // InternalFortXTrans.g:13640:1: rule__LocalVarDecl__MutAssignment_2_0 : ( ( 'var' ) ) ;
    public final void rule__LocalVarDecl__MutAssignment_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13644:1: ( ( ( 'var' ) ) )
            // InternalFortXTrans.g:13645:2: ( ( 'var' ) )
            {
            // InternalFortXTrans.g:13645:2: ( ( 'var' ) )
            // InternalFortXTrans.g:13646:3: ( 'var' )
            {
             before(grammarAccess.getLocalVarDeclAccess().getMutVarKeyword_2_0_0()); 
            // InternalFortXTrans.g:13647:3: ( 'var' )
            // InternalFortXTrans.g:13648:4: 'var'
            {
             before(grammarAccess.getLocalVarDeclAccess().getMutVarKeyword_2_0_0()); 
            match(input,68,FOLLOW_2); 
             after(grammarAccess.getLocalVarDeclAccess().getMutVarKeyword_2_0_0()); 

            }

             after(grammarAccess.getLocalVarDeclAccess().getMutVarKeyword_2_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__MutAssignment_2_0"


    // $ANTLR start "rule__LocalVarDecl__IdtupAssignment_2_1"
    // InternalFortXTrans.g:13659:1: rule__LocalVarDecl__IdtupAssignment_2_1 : ( ruleIdOrTuple ) ;
    public final void rule__LocalVarDecl__IdtupAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13663:1: ( ( ruleIdOrTuple ) )
            // InternalFortXTrans.g:13664:2: ( ruleIdOrTuple )
            {
            // InternalFortXTrans.g:13664:2: ( ruleIdOrTuple )
            // InternalFortXTrans.g:13665:3: ruleIdOrTuple
            {
             before(grammarAccess.getLocalVarDeclAccess().getIdtupIdOrTupleParserRuleCall_2_1_0()); 
            pushFollow(FOLLOW_2);
            ruleIdOrTuple();

            state._fsp--;

             after(grammarAccess.getLocalVarDeclAccess().getIdtupIdOrTupleParserRuleCall_2_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__IdtupAssignment_2_1"


    // $ANTLR start "rule__LocalVarDecl__TypeAssignment_2_3"
    // InternalFortXTrans.g:13674:1: rule__LocalVarDecl__TypeAssignment_2_3 : ( ruleSimpleName ) ;
    public final void rule__LocalVarDecl__TypeAssignment_2_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13678:1: ( ( ruleSimpleName ) )
            // InternalFortXTrans.g:13679:2: ( ruleSimpleName )
            {
            // InternalFortXTrans.g:13679:2: ( ruleSimpleName )
            // InternalFortXTrans.g:13680:3: ruleSimpleName
            {
             before(grammarAccess.getLocalVarDeclAccess().getTypeSimpleNameParserRuleCall_2_3_0()); 
            pushFollow(FOLLOW_2);
            ruleSimpleName();

            state._fsp--;

             after(grammarAccess.getLocalVarDeclAccess().getTypeSimpleNameParserRuleCall_2_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__TypeAssignment_2_3"


    // $ANTLR start "rule__LocalVarDecl__InitAssignment_2_6"
    // InternalFortXTrans.g:13689:1: rule__LocalVarDecl__InitAssignment_2_6 : ( ruleExpr ) ;
    public final void rule__LocalVarDecl__InitAssignment_2_6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13693:1: ( ( ruleExpr ) )
            // InternalFortXTrans.g:13694:2: ( ruleExpr )
            {
            // InternalFortXTrans.g:13694:2: ( ruleExpr )
            // InternalFortXTrans.g:13695:3: ruleExpr
            {
             before(grammarAccess.getLocalVarDeclAccess().getInitExprParserRuleCall_2_6_0()); 
            pushFollow(FOLLOW_2);
            ruleExpr();

            state._fsp--;

             after(grammarAccess.getLocalVarDeclAccess().getInitExprParserRuleCall_2_6_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__InitAssignment_2_6"


    // $ANTLR start "rule__LocalVarDecl__MutAssignment_3_0"
    // InternalFortXTrans.g:13704:1: rule__LocalVarDecl__MutAssignment_3_0 : ( ( 'var' ) ) ;
    public final void rule__LocalVarDecl__MutAssignment_3_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13708:1: ( ( ( 'var' ) ) )
            // InternalFortXTrans.g:13709:2: ( ( 'var' ) )
            {
            // InternalFortXTrans.g:13709:2: ( ( 'var' ) )
            // InternalFortXTrans.g:13710:3: ( 'var' )
            {
             before(grammarAccess.getLocalVarDeclAccess().getMutVarKeyword_3_0_0()); 
            // InternalFortXTrans.g:13711:3: ( 'var' )
            // InternalFortXTrans.g:13712:4: 'var'
            {
             before(grammarAccess.getLocalVarDeclAccess().getMutVarKeyword_3_0_0()); 
            match(input,68,FOLLOW_2); 
             after(grammarAccess.getLocalVarDeclAccess().getMutVarKeyword_3_0_0()); 

            }

             after(grammarAccess.getLocalVarDeclAccess().getMutVarKeyword_3_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__MutAssignment_3_0"


    // $ANTLR start "rule__LocalVarDecl__IdtupAssignment_3_1"
    // InternalFortXTrans.g:13723:1: rule__LocalVarDecl__IdtupAssignment_3_1 : ( ruleIdOrTuple ) ;
    public final void rule__LocalVarDecl__IdtupAssignment_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13727:1: ( ( ruleIdOrTuple ) )
            // InternalFortXTrans.g:13728:2: ( ruleIdOrTuple )
            {
            // InternalFortXTrans.g:13728:2: ( ruleIdOrTuple )
            // InternalFortXTrans.g:13729:3: ruleIdOrTuple
            {
             before(grammarAccess.getLocalVarDeclAccess().getIdtupIdOrTupleParserRuleCall_3_1_0()); 
            pushFollow(FOLLOW_2);
            ruleIdOrTuple();

            state._fsp--;

             after(grammarAccess.getLocalVarDeclAccess().getIdtupIdOrTupleParserRuleCall_3_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__IdtupAssignment_3_1"


    // $ANTLR start "rule__LocalVarDecl__TuptypeAssignment_3_3"
    // InternalFortXTrans.g:13738:1: rule__LocalVarDecl__TuptypeAssignment_3_3 : ( ruleTupleType ) ;
    public final void rule__LocalVarDecl__TuptypeAssignment_3_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13742:1: ( ( ruleTupleType ) )
            // InternalFortXTrans.g:13743:2: ( ruleTupleType )
            {
            // InternalFortXTrans.g:13743:2: ( ruleTupleType )
            // InternalFortXTrans.g:13744:3: ruleTupleType
            {
             before(grammarAccess.getLocalVarDeclAccess().getTuptypeTupleTypeParserRuleCall_3_3_0()); 
            pushFollow(FOLLOW_2);
            ruleTupleType();

            state._fsp--;

             after(grammarAccess.getLocalVarDeclAccess().getTuptypeTupleTypeParserRuleCall_3_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__TuptypeAssignment_3_3"


    // $ANTLR start "rule__LocalVarDecl__InitAssignment_3_5"
    // InternalFortXTrans.g:13753:1: rule__LocalVarDecl__InitAssignment_3_5 : ( ruleExpr ) ;
    public final void rule__LocalVarDecl__InitAssignment_3_5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13757:1: ( ( ruleExpr ) )
            // InternalFortXTrans.g:13758:2: ( ruleExpr )
            {
            // InternalFortXTrans.g:13758:2: ( ruleExpr )
            // InternalFortXTrans.g:13759:3: ruleExpr
            {
             before(grammarAccess.getLocalVarDeclAccess().getInitExprParserRuleCall_3_5_0()); 
            pushFollow(FOLLOW_2);
            ruleExpr();

            state._fsp--;

             after(grammarAccess.getLocalVarDeclAccess().getInitExprParserRuleCall_3_5_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__InitAssignment_3_5"

    // Delegated rules


    protected DFA1 dfa1 = new DFA1(this);
    protected DFA6 dfa6 = new DFA6(this);
    protected DFA15 dfa15 = new DFA15(this);
    protected DFA19 dfa19 = new DFA19(this);
    protected DFA21 dfa21 = new DFA21(this);
    protected DFA22 dfa22 = new DFA22(this);
    protected DFA25 dfa25 = new DFA25(this);
    protected DFA32 dfa32 = new DFA32(this);
    protected DFA61 dfa61 = new DFA61(this);
    static final String dfa_1s = "\u0140\uffff";
    static final String dfa_2s = "\1\1\u013f\uffff";
    static final String dfa_3s = "\1\5\1\uffff\6\5\1\45\10\5\2\45\1\5\2\45\1\5\2\37\1\5\1\4\5\uffff\1\5\1\uffff\1\5\2\45\1\uffff\2\37\1\5\1\45\1\5\1\37\1\64\2\5\5\37\1\4\1\uffff\2\5\1\45\2\37\1\5\1\37\1\5\1\64\2\5\5\uffff\1\5\6\uffff\1\5\1\uffff\1\6\1\uffff\1\5\1\37\1\5\1\uffff\3\37\1\4\1\5\1\37\2\5\5\uffff\1\5\6\uffff\1\5\1\uffff\5\37\2\4\12\37\2\4\1\5\2\45\5\uffff\1\5\6\uffff\1\5\1\uffff\5\37\1\4\5\37\1\4\1\6\1\uffff\1\5\1\37\1\5\1\uffff\1\5\1\37\1\5\1\uffff\1\6\1\uffff\1\5\1\37\1\5\1\37\2\45\1\5\1\4\5\37\1\4\5\37\1\6\1\uffff\1\5\1\37\1\5\1\uffff\1\6\1\uffff\1\5\1\37\1\5\1\uffff\5\37\4\4\5\37\2\4\1\5\2\37\1\5\1\uffff\1\5\1\6\1\uffff\1\5\1\37\1\5\1\uffff\1\6\1\uffff\5\37\2\4\5\37\2\4\1\5\1\37\1\5\1\37\1\5\1\37\1\5\1\37\1\5\2\37\1\5\1\64\2\4\5\37\2\4\5\37\1\5\1\37\1\5\1\37\1\5\1\37\1\5\1\37\5\4\2\45\1\37\2\5\1\37\1\5\1\37\1\5\1\37\4\4\1\5\1\37\1\5\1\37\1\5\4\4\1\5\1\37\1\5\1\37\2\4\1\37\1\5\1\37\1\5\1\37\4\4";
    static final String dfa_4s = "\1\104\1\uffff\1\104\3\73\2\103\1\64\1\103\4\73\1\103\2\43\2\45\1\103\2\45\1\103\2\45\1\5\1\74\5\uffff\1\32\1\uffff\1\5\2\45\1\uffff\2\45\1\103\1\64\1\5\1\44\1\74\2\43\6\44\1\uffff\1\5\1\103\1\45\2\44\1\43\1\37\1\5\1\74\2\43\5\uffff\1\32\6\uffff\1\32\1\uffff\1\32\1\uffff\1\5\1\44\1\5\1\uffff\3\44\1\4\1\103\1\44\2\43\5\uffff\1\32\6\uffff\1\32\1\uffff\23\44\1\103\2\45\5\uffff\1\32\6\uffff\1\32\1\uffff\14\44\1\32\1\uffff\1\5\1\44\1\5\1\uffff\1\5\1\44\1\5\1\uffff\1\32\1\uffff\1\5\1\44\1\5\1\44\2\45\1\5\14\44\1\32\1\uffff\1\5\1\44\1\5\1\uffff\1\32\1\uffff\1\5\1\44\1\5\1\uffff\20\44\1\5\2\44\1\5\1\uffff\1\5\1\32\1\uffff\1\5\1\44\1\5\1\uffff\1\32\1\uffff\16\44\1\5\1\44\1\5\1\44\1\5\1\44\1\5\1\44\1\5\2\44\1\103\1\74\16\44\1\5\1\44\1\5\1\44\1\5\1\44\1\5\6\44\2\45\1\44\2\5\1\44\1\5\1\44\1\5\5\44\1\5\1\44\1\5\1\44\1\5\4\44\1\5\1\44\1\5\4\44\1\5\1\44\1\5\5\44";
    static final String dfa_5s = "\1\uffff\1\2\31\uffff\5\1\1\uffff\1\1\3\uffff\1\1\17\uffff\1\1\13\uffff\5\1\1\uffff\6\1\1\uffff\1\1\1\uffff\1\1\3\uffff\1\1\10\uffff\5\1\1\uffff\6\1\1\uffff\1\1\26\uffff\5\1\1\uffff\6\1\1\uffff\1\1\15\uffff\1\1\3\uffff\1\1\3\uffff\1\1\1\uffff\1\1\24\uffff\1\1\3\uffff\1\1\1\uffff\1\1\3\uffff\1\1\24\uffff\1\1\2\uffff\1\1\3\uffff\1\1\1\uffff\1\1\134\uffff";
    static final String dfa_6s = "\u0140\uffff}>";
    static final String[] dfa_7s = {
            "\1\6\26\uffff\1\1\6\uffff\1\11\24\uffff\1\2\1\3\1\4\1\5\7\uffff\1\10\1\7",
            "",
            "\1\6\35\uffff\1\11\24\uffff\1\12\1\13\1\14\1\15\7\uffff\1\10\1\7",
            "\1\16\62\uffff\1\12\1\13\1\14\1\15",
            "\1\16\62\uffff\1\12\1\13\1\14\1\15",
            "\1\16\62\uffff\1\12\1\13\1\14\1\15",
            "\1\21\35\uffff\1\23\1\uffff\1\17\16\uffff\1\20\16\uffff\1\22",
            "\1\24\35\uffff\1\26\37\uffff\1\25",
            "\1\17\16\uffff\1\20",
            "\1\27\75\uffff\1\30",
            "\1\16\62\uffff\1\12\1\13\1\14\1\15",
            "\1\16\62\uffff\1\12\1\13\1\14\1\15",
            "\1\16\62\uffff\1\12\1\13\1\14\1\15",
            "\1\16\62\uffff\1\12\1\13\1\14\1\15",
            "\1\21\35\uffff\1\23\37\uffff\1\22",
            "\1\32\35\uffff\1\31",
            "\1\41\1\33\1\34\1\35\20\uffff\1\36\1\37\10\uffff\1\40",
            "\1\42",
            "\1\42",
            "\1\43\36\uffff\1\45\36\uffff\1\44",
            "\1\17",
            "\1\17",
            "\1\46\75\uffff\1\47",
            "\1\50\4\uffff\1\51\1\52",
            "\1\50\4\uffff\1\51\1\52",
            "\1\53",
            "\1\54\57\uffff\1\56\7\uffff\1\55",
            "",
            "",
            "",
            "",
            "",
            "\1\64\1\57\1\60\1\61\20\uffff\1\62\1\63",
            "",
            "\1\65",
            "\1\66",
            "\1\66",
            "",
            "\1\67\4\uffff\1\70\1\52",
            "\1\67\4\uffff\1\70\1\52",
            "\1\71\75\uffff\1\72",
            "\1\73\16\uffff\1\20",
            "\1\74",
            "\1\75\4\uffff\1\76",
            "\1\100\7\uffff\1\77",
            "\1\107\1\101\1\102\1\103\20\uffff\1\104\1\105\10\uffff\1\106",
            "\1\116\1\110\1\111\1\112\20\uffff\1\113\1\114\10\uffff\1\115",
            "\1\117\4\uffff\1\120",
            "\1\117\4\uffff\1\120",
            "\1\117\4\uffff\1\120",
            "\1\117\4\uffff\1\120",
            "\1\117\4\uffff\1\120",
            "\1\122\32\uffff\1\123\1\121\3\uffff\1\124",
            "",
            "\1\125",
            "\1\126\75\uffff\1\127",
            "\1\73",
            "\1\50\4\uffff\1\51",
            "\1\50\4\uffff\1\51",
            "\1\130\35\uffff\1\31",
            "\1\131",
            "\1\132",
            "\1\134\7\uffff\1\133",
            "\1\143\1\135\1\136\1\137\20\uffff\1\140\1\141\10\uffff\1\142",
            "\1\152\1\144\1\145\1\146\20\uffff\1\147\1\150\10\uffff\1\151",
            "",
            "",
            "",
            "",
            "",
            "\1\160\1\153\1\154\1\155\20\uffff\1\156\1\157",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\161\1\162\1\163\1\164\20\uffff\1\165\1\166",
            "",
            "\1\167\1\170\1\171\20\uffff\1\172\1\173",
            "",
            "\1\174",
            "\1\123\4\uffff\1\124",
            "\1\175",
            "",
            "\1\176\4\uffff\1\45",
            "\1\67\4\uffff\1\70",
            "\1\67\4\uffff\1\70",
            "\1\54",
            "\1\177\75\uffff\1\u0080",
            "\1\75\4\uffff\1\76",
            "\1\u0087\1\u0081\1\u0082\1\u0083\20\uffff\1\u0084\1\u0085\10\uffff\1\u0086",
            "\1\u008e\1\u0088\1\u0089\1\u008a\20\uffff\1\u008b\1\u008c\10\uffff\1\u008d",
            "",
            "",
            "",
            "",
            "",
            "\1\u0094\1\u008f\1\u0090\1\u0091\20\uffff\1\u0092\1\u0093",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\u009a\1\u0095\1\u0096\1\u0097\20\uffff\1\u0098\1\u0099",
            "",
            "\1\u009b\4\uffff\1\u009c",
            "\1\u009b\4\uffff\1\u009c",
            "\1\u009b\4\uffff\1\u009c",
            "\1\u009b\4\uffff\1\u009c",
            "\1\u009b\4\uffff\1\u009c",
            "\1\u009e\32\uffff\1\u009f\1\u009d\3\uffff\1\u00a0",
            "\1\u00a2\32\uffff\1\u00a3\1\u00a1\3\uffff\1\u00a4",
            "\1\u00a5\4\uffff\1\u00a6",
            "\1\u00a5\4\uffff\1\u00a6",
            "\1\u00a5\4\uffff\1\u00a6",
            "\1\u00a5\4\uffff\1\u00a6",
            "\1\u00a5\4\uffff\1\u00a6",
            "\1\117\4\uffff\1\120",
            "\1\117\4\uffff\1\120",
            "\1\117\4\uffff\1\120",
            "\1\117\4\uffff\1\120",
            "\1\117\4\uffff\1\120",
            "\1\u00a8\32\uffff\1\123\1\u00a7\3\uffff\1\124",
            "\1\u00aa\32\uffff\1\123\1\u00a9\3\uffff\1\124",
            "\1\u00ab\75\uffff\1\u00ac",
            "\1\u00ad",
            "\1\u00ad",
            "",
            "",
            "",
            "",
            "",
            "\1\u00ae\1\u00af\1\u00b0\1\u00b1\20\uffff\1\u00b2\1\u00b3",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\u00b4\1\u00b5\1\u00b6\1\u00b7\20\uffff\1\u00b8\1\u00b9",
            "",
            "\1\u00ba\4\uffff\1\u00bb",
            "\1\u00ba\4\uffff\1\u00bb",
            "\1\u00ba\4\uffff\1\u00bb",
            "\1\u00ba\4\uffff\1\u00bb",
            "\1\u00ba\4\uffff\1\u00bb",
            "\1\u00bd\32\uffff\1\u00be\1\u00bc\3\uffff\1\u00bf",
            "\1\u00c0\4\uffff\1\u00c1",
            "\1\u00c0\4\uffff\1\u00c1",
            "\1\u00c0\4\uffff\1\u00c1",
            "\1\u00c0\4\uffff\1\u00c1",
            "\1\u00c0\4\uffff\1\u00c1",
            "\1\u00c3\32\uffff\1\u00c4\1\u00c2\3\uffff\1\u00c5",
            "\1\u00c6\1\u00c7\1\u00c8\20\uffff\1\u00c9\1\u00ca",
            "",
            "\1\u00cb",
            "\1\u009f\4\uffff\1\u00a0",
            "\1\u00cc",
            "",
            "\1\u00cd",
            "\1\u00a3\4\uffff\1\u00a4",
            "\1\u00ce",
            "",
            "\1\u00cf\1\u00d0\1\u00d1\20\uffff\1\u00d2\1\u00d3",
            "",
            "\1\u00d4",
            "\1\123\4\uffff\1\124",
            "\1\u00d5",
            "\1\123\4\uffff\1\124",
            "\1\u00d6",
            "\1\u00d6",
            "\1\u00d7",
            "\1\u00d8\32\uffff\1\u00d9\1\u00db\3\uffff\1\u00da",
            "\1\u00dc\4\uffff\1\u00dd",
            "\1\u00dc\4\uffff\1\u00dd",
            "\1\u00dc\4\uffff\1\u00dd",
            "\1\u00dc\4\uffff\1\u00dd",
            "\1\u00dc\4\uffff\1\u00dd",
            "\1\u00df\32\uffff\1\u00e0\1\u00de\3\uffff\1\u00e1",
            "\1\u00e2\4\uffff\1\u00e3",
            "\1\u00e2\4\uffff\1\u00e3",
            "\1\u00e2\4\uffff\1\u00e3",
            "\1\u00e2\4\uffff\1\u00e3",
            "\1\u00e2\4\uffff\1\u00e3",
            "\1\u00e4\1\u00e5\1\u00e6\20\uffff\1\u00e7\1\u00e8",
            "",
            "\1\u00e9",
            "\1\u00be\4\uffff\1\u00bf",
            "\1\u00ea",
            "",
            "\1\u00eb\1\u00ec\1\u00ed\20\uffff\1\u00ee\1\u00ef",
            "",
            "\1\u00f0",
            "\1\u00c4\4\uffff\1\u00c5",
            "\1\u00f1",
            "",
            "\1\u009b\4\uffff\1\u009c",
            "\1\u009b\4\uffff\1\u009c",
            "\1\u009b\4\uffff\1\u009c",
            "\1\u009b\4\uffff\1\u009c",
            "\1\u009b\4\uffff\1\u009c",
            "\1\u00f3\32\uffff\1\u009f\1\u00f2\3\uffff\1\u00a0",
            "\1\u00f5\32\uffff\1\u009f\1\u00f4\3\uffff\1\u00a0",
            "\1\u00f7\32\uffff\1\u00a3\1\u00f6\3\uffff\1\u00a4",
            "\1\u00f9\32\uffff\1\u00a3\1\u00f8\3\uffff\1\u00a4",
            "\1\u00a5\4\uffff\1\u00a6",
            "\1\u00a5\4\uffff\1\u00a6",
            "\1\u00a5\4\uffff\1\u00a6",
            "\1\u00a5\4\uffff\1\u00a6",
            "\1\u00a5\4\uffff\1\u00a6",
            "\1\u00a8\32\uffff\1\123\1\u00a7\3\uffff\1\124",
            "\1\u00fb\32\uffff\1\123\1\u00fa\3\uffff\1\124",
            "\1\u00fc",
            "\1\u00fd\4\uffff\1\u00fe",
            "\1\u00d9\4\uffff\1\u00da",
            "\1\u00ff",
            "",
            "\1\u0100",
            "\1\u0101\1\u0102\1\u0103\20\uffff\1\u0104\1\u0105",
            "",
            "\1\u0106",
            "\1\u00e0\4\uffff\1\u00e1",
            "\1\u0107",
            "",
            "\1\u0108\1\u0109\1\u010a\20\uffff\1\u010b\1\u010c",
            "",
            "\1\u00ba\4\uffff\1\u00bb",
            "\1\u00ba\4\uffff\1\u00bb",
            "\1\u00ba\4\uffff\1\u00bb",
            "\1\u00ba\4\uffff\1\u00bb",
            "\1\u00ba\4\uffff\1\u00bb",
            "\1\u010e\32\uffff\1\u00be\1\u010d\3\uffff\1\u00bf",
            "\1\u0110\32\uffff\1\u00be\1\u010f\3\uffff\1\u00bf",
            "\1\u00c0\4\uffff\1\u00c1",
            "\1\u00c0\4\uffff\1\u00c1",
            "\1\u00c0\4\uffff\1\u00c1",
            "\1\u00c0\4\uffff\1\u00c1",
            "\1\u00c0\4\uffff\1\u00c1",
            "\1\u0112\32\uffff\1\u00c4\1\u0111\3\uffff\1\u00c5",
            "\1\u0114\32\uffff\1\u00c4\1\u0113\3\uffff\1\u00c5",
            "\1\u0115",
            "\1\u009f\4\uffff\1\u00a0",
            "\1\u0116",
            "\1\u009f\4\uffff\1\u00a0",
            "\1\u0117",
            "\1\u00a3\4\uffff\1\u00a4",
            "\1\u0118",
            "\1\u00a3\4\uffff\1\u00a4",
            "\1\u0119",
            "\1\123\4\uffff\1\124",
            "\1\176\4\uffff\1\45",
            "\1\u011a\75\uffff\1\u011b",
            "\1\56\7\uffff\1\55",
            "\1\u011c\32\uffff\1\u00d9\1\u011d\3\uffff\1\u00da",
            "\1\u011f\32\uffff\1\u00d9\1\u011e\3\uffff\1\u00da",
            "\1\u00dc\4\uffff\1\u00dd",
            "\1\u00dc\4\uffff\1\u00dd",
            "\1\u00dc\4\uffff\1\u00dd",
            "\1\u00dc\4\uffff\1\u00dd",
            "\1\u00dc\4\uffff\1\u00dd",
            "\1\u0121\32\uffff\1\u00e0\1\u0120\3\uffff\1\u00e1",
            "\1\u0123\32\uffff\1\u00e0\1\u0122\3\uffff\1\u00e1",
            "\1\u00e2\4\uffff\1\u00e3",
            "\1\u00e2\4\uffff\1\u00e3",
            "\1\u00e2\4\uffff\1\u00e3",
            "\1\u00e2\4\uffff\1\u00e3",
            "\1\u00e2\4\uffff\1\u00e3",
            "\1\u0124",
            "\1\u00be\4\uffff\1\u00bf",
            "\1\u0125",
            "\1\u00be\4\uffff\1\u00bf",
            "\1\u0126",
            "\1\u00c4\4\uffff\1\u00c5",
            "\1\u0127",
            "\1\u00c4\4\uffff\1\u00c5",
            "\1\u00f3\32\uffff\1\u009f\1\u00f2\3\uffff\1\u00a0",
            "\1\u0129\32\uffff\1\u009f\1\u0128\3\uffff\1\u00a0",
            "\1\u00f7\32\uffff\1\u00a3\1\u00f6\3\uffff\1\u00a4",
            "\1\u012b\32\uffff\1\u00a3\1\u012a\3\uffff\1\u00a4",
            "\1\u00fb\32\uffff\1\123\1\u00fa\3\uffff\1\124",
            "\1\u012c",
            "\1\u012c",
            "\1\u00d9\4\uffff\1\u00da",
            "\1\u012d",
            "\1\u012e",
            "\1\u00d9\4\uffff\1\u00da",
            "\1\u012f",
            "\1\u00e0\4\uffff\1\u00e1",
            "\1\u0130",
            "\1\u00e0\4\uffff\1\u00e1",
            "\1\u010e\32\uffff\1\u00be\1\u010d\3\uffff\1\u00bf",
            "\1\u0132\32\uffff\1\u00be\1\u0131\3\uffff\1\u00bf",
            "\1\u0112\32\uffff\1\u00c4\1\u0111\3\uffff\1\u00c5",
            "\1\u0134\32\uffff\1\u00c4\1\u0133\3\uffff\1\u00c5",
            "\1\u0135",
            "\1\u009f\4\uffff\1\u00a0",
            "\1\u0136",
            "\1\u00a3\4\uffff\1\u00a4",
            "\1\u0137",
            "\1\u0139\32\uffff\1\u00d9\1\u0138\3\uffff\1\u00da",
            "\1\u011f\32\uffff\1\u00d9\1\u011e\3\uffff\1\u00da",
            "\1\u0121\32\uffff\1\u00e0\1\u0120\3\uffff\1\u00e1",
            "\1\u013b\32\uffff\1\u00e0\1\u013a\3\uffff\1\u00e1",
            "\1\u013c",
            "\1\u00be\4\uffff\1\u00bf",
            "\1\u013d",
            "\1\u00c4\4\uffff\1\u00c5",
            "\1\u0129\32\uffff\1\u009f\1\u0128\3\uffff\1\u00a0",
            "\1\u012b\32\uffff\1\u00a3\1\u012a\3\uffff\1\u00a4",
            "\1\u00fd\4\uffff\1\u00fe",
            "\1\u013e",
            "\1\u00d9\4\uffff\1\u00da",
            "\1\u013f",
            "\1\u00e0\4\uffff\1\u00e1",
            "\1\u0132\32\uffff\1\u00be\1\u0131\3\uffff\1\u00bf",
            "\1\u0134\32\uffff\1\u00c4\1\u0133\3\uffff\1\u00c5",
            "\1\u0139\32\uffff\1\u00d9\1\u0138\3\uffff\1\u00da",
            "\1\u013b\32\uffff\1\u00e0\1\u013a\3\uffff\1\u00e1"
    };

    static final short[] dfa_1 = DFA.unpackEncodedString(dfa_1s);
    static final short[] dfa_2 = DFA.unpackEncodedString(dfa_2s);
    static final char[] dfa_3 = DFA.unpackEncodedStringToUnsignedChars(dfa_3s);
    static final char[] dfa_4 = DFA.unpackEncodedStringToUnsignedChars(dfa_4s);
    static final short[] dfa_5 = DFA.unpackEncodedString(dfa_5s);
    static final short[] dfa_6 = DFA.unpackEncodedString(dfa_6s);
    static final short[][] dfa_7 = unpackEncodedStringArray(dfa_7s);

    class DFA1 extends DFA {

        public DFA1(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 1;
            this.eot = dfa_1;
            this.eof = dfa_2;
            this.min = dfa_3;
            this.max = dfa_4;
            this.accept = dfa_5;
            this.special = dfa_6;
            this.transition = dfa_7;
        }
        public String getDescription() {
            return "()* loopback of 425:4: ( rule__Decls__DeclsAssignment )*";
        }
    }
    static final String dfa_8s = "\15\uffff";
    static final String dfa_9s = "\1\uffff\2\3\4\uffff\1\3\3\uffff\2\3";
    static final String dfa_10s = "\1\5\1\4\1\34\1\uffff\1\5\1\41\2\4\2\uffff\1\5\1\34\1\4";
    static final String dfa_11s = "\1\5\2\66\1\uffff\2\41\1\5\1\66\2\uffff\1\41\2\66";
    static final String dfa_12s = "\3\uffff\1\3\4\uffff\1\1\1\2\3\uffff";
    static final String dfa_13s = "\15\uffff}>";
    static final String[] dfa_14s = {
            "\1\1",
            "\1\2\27\uffff\1\3\3\uffff\1\4\1\uffff\1\3\22\uffff\2\3",
            "\1\3\3\uffff\1\5\1\uffff\1\3\22\uffff\2\3",
            "",
            "\1\7\33\uffff\1\6",
            "\1\6",
            "\1\10\1\11",
            "\1\13\27\uffff\1\3\3\uffff\1\12\1\uffff\1\3\22\uffff\2\3",
            "",
            "",
            "\1\14\33\uffff\1\6",
            "\1\3\3\uffff\1\5\1\uffff\1\3\22\uffff\2\3",
            "\1\13\27\uffff\1\3\3\uffff\1\12\1\uffff\1\3\22\uffff\2\3"
    };

    static final short[] dfa_8 = DFA.unpackEncodedString(dfa_8s);
    static final short[] dfa_9 = DFA.unpackEncodedString(dfa_9s);
    static final char[] dfa_10 = DFA.unpackEncodedStringToUnsignedChars(dfa_10s);
    static final char[] dfa_11 = DFA.unpackEncodedStringToUnsignedChars(dfa_11s);
    static final short[] dfa_12 = DFA.unpackEncodedString(dfa_12s);
    static final short[] dfa_13 = DFA.unpackEncodedString(dfa_13s);
    static final short[][] dfa_14 = unpackEncodedStringArray(dfa_14s);

    class DFA6 extends DFA {

        public DFA6(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 6;
            this.eot = dfa_8;
            this.eof = dfa_9;
            this.min = dfa_10;
            this.max = dfa_11;
            this.accept = dfa_12;
            this.special = dfa_13;
            this.transition = dfa_14;
        }
        public String getDescription() {
            return "1704:1: rule__ImportedNames__Alternatives : ( ( ( rule__ImportedNames__Group_0__0 ) ) | ( ( rule__ImportedNames__Group_1__0 ) ) | ( ( rule__ImportedNames__Group_2__0 ) ) );";
        }
    }
    static final String dfa_15s = "\13\uffff";
    static final String dfa_16s = "\4\uffff\1\5\2\uffff\1\5\2\uffff\1\5";
    static final String dfa_17s = "\1\5\1\uffff\1\5\1\uffff\1\4\1\uffff\1\4\2\5\1\4\1\5";
    static final String dfa_18s = "\1\104\1\uffff\1\103\1\uffff\1\104\1\uffff\1\74\1\104\1\103\1\44\1\104";
    static final String dfa_19s = "\1\uffff\1\1\1\uffff\1\2\1\uffff\1\3\5\uffff";
    static final String dfa_20s = "\13\uffff}>";
    static final String[] dfa_21s = {
            "\1\4\3\5\20\uffff\2\5\10\uffff\1\2\17\uffff\1\1\6\uffff\1\1\2\uffff\4\1\1\uffff\1\1\2\3",
            "",
            "\1\6\3\5\20\uffff\2\5\10\uffff\1\5\17\uffff\1\1\6\uffff\1\1\2\uffff\4\1\1\uffff\1\1\1\3",
            "",
            "\5\5\4\uffff\16\5\1\uffff\1\5\2\uffff\2\5\1\uffff\3\5\1\3\7\5\1\uffff\2\5\2\uffff\2\5\1\3\3\uffff\11\5\1\uffff\3\5",
            "",
            "\1\5\10\uffff\14\5\6\uffff\1\10\1\5\1\uffff\2\5\1\7\1\3\7\5\17\uffff\1\5",
            "\4\5\4\uffff\16\5\1\uffff\1\5\2\uffff\1\5\2\uffff\3\5\1\3\7\5\1\uffff\2\5\2\uffff\2\5\1\3\3\uffff\11\5\1\uffff\3\5",
            "\1\11\75\uffff\1\3",
            "\1\5\32\uffff\1\10\1\5\3\uffff\1\12",
            "\4\5\4\uffff\16\5\1\uffff\1\5\2\uffff\1\5\2\uffff\3\5\1\3\7\5\1\uffff\2\5\2\uffff\2\5\1\3\3\uffff\11\5\1\uffff\3\5"
    };

    static final short[] dfa_15 = DFA.unpackEncodedString(dfa_15s);
    static final short[] dfa_16 = DFA.unpackEncodedString(dfa_16s);
    static final char[] dfa_17 = DFA.unpackEncodedStringToUnsignedChars(dfa_17s);
    static final char[] dfa_18 = DFA.unpackEncodedStringToUnsignedChars(dfa_18s);
    static final short[] dfa_19 = DFA.unpackEncodedString(dfa_19s);
    static final short[] dfa_20 = DFA.unpackEncodedString(dfa_20s);
    static final short[][] dfa_21 = unpackEncodedStringArray(dfa_21s);

    class DFA15 extends DFA {

        public DFA15(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 15;
            this.eot = dfa_15;
            this.eof = dfa_16;
            this.min = dfa_17;
            this.max = dfa_18;
            this.accept = dfa_19;
            this.special = dfa_20;
            this.transition = dfa_21;
        }
        public String getDescription() {
            return "1911:1: rule__Stmnts__Alternatives : ( ( ( rule__Stmnts__FrontAssignment_0 ) ) | ( ( rule__Stmnts__LocVarAssignment_1 ) ) | ( ( rule__Stmnts__ExpAssignment_2 ) ) );";
        }
    }
    static final String dfa_22s = "\22\uffff";
    static final String dfa_23s = "\1\5\1\uffff\1\5\1\4\5\15\1\uffff\1\15\1\uffff\1\5\1\uffff\1\4\1\5\1\15\1\4";
    static final String dfa_24s = "\1\43\1\uffff\1\43\6\74\1\uffff\1\74\1\uffff\1\5\1\uffff\1\74\1\5\2\74";
    static final String dfa_25s = "\1\uffff\1\1\7\uffff\1\2\1\uffff\1\1\1\uffff\1\1\4\uffff";
    static final String dfa_26s = "\22\uffff}>";
    static final String[] dfa_27s = {
            "\4\1\20\uffff\2\1\10\uffff\1\2",
            "",
            "\1\3\1\4\1\5\1\6\20\uffff\1\7\1\10\10\uffff\1\11",
            "\1\12\10\uffff\14\11\6\uffff\1\1\1\14\1\uffff\2\11\1\13\1\uffff\7\11\17\uffff\1\11",
            "\14\11\6\uffff\1\15\2\uffff\2\11\1\15\1\uffff\7\11\17\uffff\1\11",
            "\14\11\6\uffff\1\15\2\uffff\2\11\1\15\1\uffff\7\11\17\uffff\1\11",
            "\14\11\6\uffff\1\15\2\uffff\2\11\1\15\1\uffff\7\11\17\uffff\1\11",
            "\14\11\6\uffff\1\15\2\uffff\2\11\1\15\1\uffff\7\11\17\uffff\1\11",
            "\14\11\6\uffff\1\15\2\uffff\2\11\1\15\1\uffff\7\11\17\uffff\1\11",
            "",
            "\14\11\6\uffff\1\15\2\uffff\2\11\1\13\1\uffff\7\11\17\uffff\1\11",
            "",
            "\1\16",
            "",
            "\1\20\10\uffff\14\11\6\uffff\1\15\1\17\1\uffff\2\11\1\13\1\uffff\7\11\17\uffff\1\11",
            "\1\21",
            "\14\11\6\uffff\1\15\2\uffff\2\11\1\13\1\uffff\7\11\17\uffff\1\11",
            "\1\20\10\uffff\14\11\6\uffff\1\15\1\17\1\uffff\2\11\1\13\1\uffff\7\11\17\uffff\1\11"
    };

    static final short[] dfa_22 = DFA.unpackEncodedString(dfa_22s);
    static final char[] dfa_23 = DFA.unpackEncodedStringToUnsignedChars(dfa_23s);
    static final char[] dfa_24 = DFA.unpackEncodedStringToUnsignedChars(dfa_24s);
    static final short[] dfa_25 = DFA.unpackEncodedString(dfa_25s);
    static final short[] dfa_26 = DFA.unpackEncodedString(dfa_26s);
    static final short[][] dfa_27 = unpackEncodedStringArray(dfa_27s);

    class DFA19 extends DFA {

        public DFA19(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 19;
            this.eot = dfa_22;
            this.eof = dfa_22;
            this.min = dfa_23;
            this.max = dfa_24;
            this.accept = dfa_25;
            this.special = dfa_26;
            this.transition = dfa_27;
        }
        public String getDescription() {
            return "2049:1: rule__Primary__Alternatives : ( ( ( rule__Primary__Group_0__0 ) ) | ( ( rule__Primary__Group_1__0 ) ) );";
        }
    }
    static final String dfa_28s = "\1\5\2\60\2\5\2\37\2\uffff\1\5\1\60\2\37";
    static final String dfa_29s = "\1\103\2\60\1\103\1\101\2\44\2\uffff\1\103\1\60\2\44";
    static final String dfa_30s = "\7\uffff\1\2\1\1\4\uffff";
    static final String[] dfa_31s = {
            "\1\1\35\uffff\1\3\37\uffff\1\2",
            "\1\4",
            "\1\4",
            "\1\5\75\uffff\1\6",
            "\4\10\20\uffff\2\10\10\uffff\1\10\35\uffff\1\7",
            "\1\11\4\uffff\1\12",
            "\1\11\4\uffff\1\12",
            "",
            "",
            "\1\13\75\uffff\1\14",
            "\1\4",
            "\1\11\4\uffff\1\12",
            "\1\11\4\uffff\1\12"
    };
    static final char[] dfa_28 = DFA.unpackEncodedStringToUnsignedChars(dfa_28s);
    static final char[] dfa_29 = DFA.unpackEncodedStringToUnsignedChars(dfa_29s);
    static final short[] dfa_30 = DFA.unpackEncodedString(dfa_30s);
    static final short[][] dfa_31 = unpackEncodedStringArray(dfa_31s);

    class DFA21 extends DFA {

        public DFA21(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 21;
            this.eot = dfa_8;
            this.eof = dfa_8;
            this.min = dfa_28;
            this.max = dfa_29;
            this.accept = dfa_30;
            this.special = dfa_13;
            this.transition = dfa_31;
        }
        public String getDescription() {
            return "2109:1: rule__Binding__Alternatives : ( ( ( rule__Binding__Group_0__0 ) ) | ( ( rule__Binding__Group_1__0 ) ) );";
        }
    }
    static final String dfa_32s = "\12\uffff";
    static final String dfa_33s = "\1\uffff\1\4\5\uffff\1\4\1\uffff\1\4";
    static final String dfa_34s = "\1\5\1\4\1\uffff\1\5\1\uffff\1\4\1\5\1\15\1\4\1\15";
    static final String dfa_35s = "\1\103\1\102\1\uffff\1\103\1\uffff\1\74\1\103\1\102\1\44\1\102";
    static final String dfa_36s = "\2\uffff\1\1\1\uffff\1\2\5\uffff";
    static final String dfa_37s = "\12\uffff}>";
    static final String[] dfa_38s = {
            "\1\1\3\4\20\uffff\2\4\10\uffff\1\3\37\uffff\1\2",
            "\1\4\10\uffff\14\4\6\uffff\2\4\1\uffff\2\4\2\uffff\7\4\3\uffff\1\2\2\uffff\1\4\6\uffff\1\4\1\uffff\1\4\5\uffff\1\4",
            "",
            "\1\5\3\4\20\uffff\2\4\10\uffff\1\4\37\uffff\1\2",
            "",
            "\1\4\10\uffff\14\4\6\uffff\1\6\1\4\1\uffff\2\4\1\7\1\uffff\7\4\17\uffff\1\4",
            "\1\10\75\uffff\1\2",
            "\14\4\6\uffff\1\4\2\uffff\2\4\2\uffff\7\4\3\uffff\1\2\2\uffff\1\4\6\uffff\1\4\1\uffff\1\4\5\uffff\1\4",
            "\1\4\32\uffff\1\6\1\4\3\uffff\1\11",
            "\14\4\6\uffff\1\4\2\uffff\2\4\2\uffff\7\4\3\uffff\1\2\2\uffff\1\4\6\uffff\1\4\1\uffff\1\4\5\uffff\1\4"
    };

    static final short[] dfa_32 = DFA.unpackEncodedString(dfa_32s);
    static final short[] dfa_33 = DFA.unpackEncodedString(dfa_33s);
    static final char[] dfa_34 = DFA.unpackEncodedStringToUnsignedChars(dfa_34s);
    static final char[] dfa_35 = DFA.unpackEncodedStringToUnsignedChars(dfa_35s);
    static final short[] dfa_36 = DFA.unpackEncodedString(dfa_36s);
    static final short[] dfa_37 = DFA.unpackEncodedString(dfa_37s);
    static final short[][] dfa_38 = unpackEncodedStringArray(dfa_38s);

    class DFA22 extends DFA {

        public DFA22(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 22;
            this.eot = dfa_32;
            this.eof = dfa_33;
            this.min = dfa_34;
            this.max = dfa_35;
            this.accept = dfa_36;
            this.special = dfa_37;
            this.transition = dfa_38;
        }
        public String getDescription() {
            return "2130:1: rule__GenClause__Alternatives : ( ( ( rule__GenClause__BindingAssignment_0 ) ) | ( ( rule__GenClause__ExprAssignment_1 ) ) );";
        }
    }
    static final String dfa_39s = "\34\uffff";
    static final String dfa_40s = "\3\5\2\45\1\5\2\45\2\5\1\uffff\4\37\1\4\1\uffff\1\5\1\45\1\uffff\1\5\1\45\1\uffff\2\37\1\5\2\37";
    static final String dfa_41s = "\2\104\1\103\2\64\1\103\2\45\1\103\1\43\1\uffff\4\45\1\74\1\uffff\1\103\1\64\1\uffff\1\103\1\45\1\uffff\2\44\1\43\2\44";
    static final String dfa_42s = "\12\uffff\1\2\5\uffff\1\4\2\uffff\1\1\2\uffff\1\3\5\uffff";
    static final String dfa_43s = "\34\uffff}>";
    static final String[] dfa_44s = {
            "\1\3\35\uffff\1\5\24\uffff\1\1\12\uffff\1\4\1\2",
            "\1\3\35\uffff\1\5\37\uffff\1\4\1\2",
            "\1\6\35\uffff\1\10\37\uffff\1\7",
            "\1\11\16\uffff\1\12",
            "\1\11\16\uffff\1\12",
            "\1\13\75\uffff\1\14",
            "\1\11",
            "\1\11",
            "\1\15\75\uffff\1\16",
            "\1\17\35\uffff\1\20",
            "",
            "\1\21\4\uffff\1\22\1\23",
            "\1\21\4\uffff\1\22\1\23",
            "\1\24\4\uffff\1\25\1\23",
            "\1\24\4\uffff\1\25\1\23",
            "\1\26\57\uffff\1\23\7\uffff\1\23",
            "",
            "\1\27\75\uffff\1\30",
            "\1\31\16\uffff\1\12",
            "",
            "\1\32\75\uffff\1\33",
            "\1\31",
            "",
            "\1\21\4\uffff\1\22",
            "\1\21\4\uffff\1\22",
            "\1\26\35\uffff\1\20",
            "\1\24\4\uffff\1\25",
            "\1\24\4\uffff\1\25"
    };

    static final short[] dfa_39 = DFA.unpackEncodedString(dfa_39s);
    static final char[] dfa_40 = DFA.unpackEncodedStringToUnsignedChars(dfa_40s);
    static final char[] dfa_41 = DFA.unpackEncodedStringToUnsignedChars(dfa_41s);
    static final short[] dfa_42 = DFA.unpackEncodedString(dfa_42s);
    static final short[] dfa_43 = DFA.unpackEncodedString(dfa_43s);
    static final short[][] dfa_44 = unpackEncodedStringArray(dfa_44s);

    class DFA25 extends DFA {

        public DFA25(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 25;
            this.eot = dfa_39;
            this.eof = dfa_39;
            this.min = dfa_40;
            this.max = dfa_41;
            this.accept = dfa_42;
            this.special = dfa_43;
            this.transition = dfa_44;
        }
        public String getDescription() {
            return "2193:1: rule__FieldDecl__Alternatives : ( ( ( rule__FieldDecl__Group_0__0 ) ) | ( ( rule__FieldDecl__Group_1__0 ) ) | ( ( rule__FieldDecl__Group_2__0 ) ) | ( ( rule__FieldDecl__Group_3__0 ) ) );";
        }
    }
    static final String dfa_45s = "\33\uffff";
    static final String dfa_46s = "\2\5\2\45\1\5\2\45\1\5\1\uffff\1\5\4\37\1\4\1\uffff\1\5\1\45\1\uffff\1\5\1\45\1\uffff\2\37\1\5\2\37";
    static final String dfa_47s = "\1\104\1\103\2\64\1\103\2\45\1\103\1\uffff\1\43\4\45\1\64\1\uffff\1\103\1\64\1\uffff\1\103\1\45\1\uffff\2\44\1\43\2\44";
    static final String dfa_48s = "\10\uffff\1\2\6\uffff\1\4\2\uffff\1\1\2\uffff\1\3\5\uffff";
    static final String dfa_49s = "\33\uffff}>";
    static final String[] dfa_50s = {
            "\1\2\35\uffff\1\4\37\uffff\1\3\1\1",
            "\1\5\35\uffff\1\7\37\uffff\1\6",
            "\1\11\16\uffff\1\10",
            "\1\11\16\uffff\1\10",
            "\1\12\75\uffff\1\13",
            "\1\11",
            "\1\11",
            "\1\14\75\uffff\1\15",
            "",
            "\1\16\35\uffff\1\17",
            "\1\20\4\uffff\1\21\1\22",
            "\1\20\4\uffff\1\21\1\22",
            "\1\23\4\uffff\1\24\1\22",
            "\1\23\4\uffff\1\24\1\22",
            "\1\25\57\uffff\1\22",
            "",
            "\1\26\75\uffff\1\27",
            "\1\30\16\uffff\1\10",
            "",
            "\1\31\75\uffff\1\32",
            "\1\30",
            "",
            "\1\20\4\uffff\1\21",
            "\1\20\4\uffff\1\21",
            "\1\25\35\uffff\1\17",
            "\1\23\4\uffff\1\24",
            "\1\23\4\uffff\1\24"
    };

    static final short[] dfa_45 = DFA.unpackEncodedString(dfa_45s);
    static final char[] dfa_46 = DFA.unpackEncodedStringToUnsignedChars(dfa_46s);
    static final char[] dfa_47 = DFA.unpackEncodedStringToUnsignedChars(dfa_47s);
    static final short[] dfa_48 = DFA.unpackEncodedString(dfa_48s);
    static final short[] dfa_49 = DFA.unpackEncodedString(dfa_49s);
    static final short[][] dfa_50 = unpackEncodedStringArray(dfa_50s);

    class DFA32 extends DFA {

        public DFA32(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 32;
            this.eot = dfa_45;
            this.eof = dfa_45;
            this.min = dfa_46;
            this.max = dfa_47;
            this.accept = dfa_48;
            this.special = dfa_49;
            this.transition = dfa_50;
        }
        public String getDescription() {
            return "2364:1: rule__LocalVarDecl__Alternatives : ( ( ( rule__LocalVarDecl__Group_0__0 ) ) | ( ( rule__LocalVarDecl__Group_1__0 ) ) | ( ( rule__LocalVarDecl__Group_2__0 ) ) | ( ( rule__LocalVarDecl__Group_3__0 ) ) );";
        }
    }
    static final String dfa_51s = "\1\1\11\uffff";
    static final String dfa_52s = "\1\5\11\uffff";
    static final String dfa_53s = "\1\104\11\uffff";
    static final String dfa_54s = "\1\uffff\1\2\10\1";
    static final String[] dfa_55s = {
            "\4\1\4\uffff\4\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\2\1\1\uffff\1\1\2\uffff\1\1\2\uffff\3\1\1\uffff\12\1\1\uffff\3\1\4\uffff\4\1\1\uffff\4\1\1\uffff\3\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[] dfa_51 = DFA.unpackEncodedString(dfa_51s);
    static final char[] dfa_52 = DFA.unpackEncodedStringToUnsignedChars(dfa_52s);
    static final char[] dfa_53 = DFA.unpackEncodedStringToUnsignedChars(dfa_53s);
    static final short[] dfa_54 = DFA.unpackEncodedString(dfa_54s);
    static final short[][] dfa_55 = unpackEncodedStringArray(dfa_55s);

    class DFA61 extends DFA {

        public DFA61(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 61;
            this.eot = dfa_32;
            this.eof = dfa_51;
            this.min = dfa_52;
            this.max = dfa_53;
            this.accept = dfa_54;
            this.special = dfa_37;
            this.transition = dfa_55;
        }
        public String getDescription() {
            return "()* loopback of 6000:2: ( rule__Comparison__Group_1__0 )*";
        }
    }
 

    public static final BitSet FOLLOW_1 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_2 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_3 = new BitSet(new long[]{0x0F00000800000022L,0x0000000000000018L});
    public static final BitSet FOLLOW_4 = new BitSet(new long[]{0x0F00000000000002L});
    public static final BitSet FOLLOW_5 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_6 = new BitSet(new long[]{0x0060000000000000L});
    public static final BitSet FOLLOW_7 = new BitSet(new long[]{0x0020000000000002L});
    public static final BitSet FOLLOW_8 = new BitSet(new long[]{0x0F00000810000020L,0x0000000000000018L});
    public static final BitSet FOLLOW_9 = new BitSet(new long[]{0x0060000000000002L});
    public static final BitSet FOLLOW_10 = new BitSet(new long[]{0x0020000010000000L});
    public static final BitSet FOLLOW_11 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_12 = new BitSet(new long[]{0x0000000200000020L});
    public static final BitSet FOLLOW_13 = new BitSet(new long[]{0x0000000200000000L});
    public static final BitSet FOLLOW_14 = new BitSet(new long[]{0x00000000C0000000L});
    public static final BitSet FOLLOW_15 = new BitSet(new long[]{0x0000000080000002L});
    public static final BitSet FOLLOW_16 = new BitSet(new long[]{0x0000000100000000L});
    public static final BitSet FOLLOW_17 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_18 = new BitSet(new long[]{0x0000000040000000L});
    public static final BitSet FOLLOW_19 = new BitSet(new long[]{0x0080000000000000L});
    public static final BitSet FOLLOW_20 = new BitSet(new long[]{0x0000000400000000L});
    public static final BitSet FOLLOW_21 = new BitSet(new long[]{0x0000000100000002L});
    public static final BitSet FOLLOW_22 = new BitSet(new long[]{0x0000001080000000L});
    public static final BitSet FOLLOW_23 = new BitSet(new long[]{0x0000001000000020L,0x0000000000000008L});
    public static final BitSet FOLLOW_24 = new BitSet(new long[]{0x0000000080000000L});
    public static final BitSet FOLLOW_25 = new BitSet(new long[]{0x0000000000000020L,0x0000000000000008L});
    public static final BitSet FOLLOW_26 = new BitSet(new long[]{0x0000002000000000L});
    public static final BitSet FOLLOW_27 = new BitSet(new long[]{0x0000000800000000L});
    public static final BitSet FOLLOW_28 = new BitSet(new long[]{0x0000001000000000L});
    public static final BitSet FOLLOW_29 = new BitSet(new long[]{0x0F00000000000020L});
    public static final BitSet FOLLOW_30 = new BitSet(new long[]{0x0000000800000020L,0x0000000000000008L});
    public static final BitSet FOLLOW_31 = new BitSet(new long[]{0x0010002000000000L});
    public static final BitSet FOLLOW_32 = new BitSet(new long[]{0xE5080008060001E0L,0x000000000000001DL});
    public static final BitSet FOLLOW_33 = new BitSet(new long[]{0xE408000000000000L,0x0000000000000005L});
    public static final BitSet FOLLOW_34 = new BitSet(new long[]{0x0000000400000002L});
    public static final BitSet FOLLOW_35 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_36 = new BitSet(new long[]{0x0000004000000002L});
    public static final BitSet FOLLOW_37 = new BitSet(new long[]{0x0000008000000000L});
    public static final BitSet FOLLOW_38 = new BitSet(new long[]{0x0000008000000002L});
    public static final BitSet FOLLOW_39 = new BitSet(new long[]{0x000000000001E000L});
    public static final BitSet FOLLOW_40 = new BitSet(new long[]{0x000000000001E002L});
    public static final BitSet FOLLOW_41 = new BitSet(new long[]{0x0000000001FE0000L});
    public static final BitSet FOLLOW_42 = new BitSet(new long[]{0x0000000001FE0002L});
    public static final BitSet FOLLOW_43 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_44 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_45 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_46 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_47 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_48 = new BitSet(new long[]{0x0000040000000002L});
    public static final BitSet FOLLOW_49 = new BitSet(new long[]{0x0000080000000000L});
    public static final BitSet FOLLOW_50 = new BitSet(new long[]{0x0000080000000002L});
    public static final BitSet FOLLOW_51 = new BitSet(new long[]{0x0000100000000000L});
    public static final BitSet FOLLOW_52 = new BitSet(new long[]{0x0000100000000002L});
    public static final BitSet FOLLOW_53 = new BitSet(new long[]{0x1000000800000000L});
    public static final BitSet FOLLOW_54 = new BitSet(new long[]{0x1000000000000000L});
    public static final BitSet FOLLOW_55 = new BitSet(new long[]{0x0408000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_56 = new BitSet(new long[]{0x0100000800000020L,0x0000000000000008L});
    public static final BitSet FOLLOW_57 = new BitSet(new long[]{0x0000000010000000L});
    public static final BitSet FOLLOW_58 = new BitSet(new long[]{0x0000200000000000L});
    public static final BitSet FOLLOW_59 = new BitSet(new long[]{0x0000C00010000000L});
    public static final BitSet FOLLOW_60 = new BitSet(new long[]{0x0000400000000000L});
    public static final BitSet FOLLOW_61 = new BitSet(new long[]{0x0000400000000002L});
    public static final BitSet FOLLOW_62 = new BitSet(new long[]{0x0001000000000000L});
    public static final BitSet FOLLOW_63 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000002L});
    public static final BitSet FOLLOW_64 = new BitSet(new long[]{0x0002000000000000L});
    public static final BitSet FOLLOW_65 = new BitSet(new long[]{0xE5080008060001E2L,0x000000000000001DL});
    public static final BitSet FOLLOW_66 = new BitSet(new long[]{0x0004000010000000L});
    public static final BitSet FOLLOW_67 = new BitSet(new long[]{0x0004000000000002L});
    public static final BitSet FOLLOW_68 = new BitSet(new long[]{0x0100000800000020L,0x0000000000000018L});
    public static final BitSet FOLLOW_69 = new BitSet(new long[]{0x1010000000000000L});
    public static final BitSet FOLLOW_70 = new BitSet(new long[]{0x0010000000000000L});
    public static final BitSet FOLLOW_71 = new BitSet(new long[]{0x00000008060001E0L});
    public static final BitSet FOLLOW_72 = new BitSet(new long[]{0x0F00000800000020L,0x0000000000000018L});
    public static final BitSet FOLLOW_73 = new BitSet(new long[]{0x00000000060001C0L});
    public static final BitSet FOLLOW_74 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_75 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_76 = new BitSet(new long[]{0x0000000000000100L});

}