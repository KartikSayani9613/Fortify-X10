package srf.transpiler.fortxtrans.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import srf.transpiler.fortxtrans.services.FortXTransGrammarAccess;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;

@SuppressWarnings("all")
public class InternalFortXTransParser extends AbstractInternalContentAssistParser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "RULE_DOTS", "RULE_ID", "RULE_INT", "RULE_FLOAT", "RULE_STRING", "RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS", "RULE_ANY_OTHER", "'==='", "'=/='", "'EQ'", "'NE'", "'>='", "'<='", "'>'", "'<'", "'LT'", "'GT'", "'LE'", "'GE'", "'component'", "'end'", "'api'", "'}'", "','", "'.'", "'{'", "'as'", "'('", "')'", "':'", "'|'", "'OR'", "'AND'", "'+'", "'-'", "'/'", "'*'", "'['", "'\\\\'", "']'", "'!'", "'then'", "'elif'", "'else'", "'<-'", "'#'", "'also'", "'do'", "'='", "'import'", "'export'", "'except'", "'private'", "'test'", "'atomic'", "'io'", "'^'", "':='", "'return'", "'while'", "'for'", "'if'", "'seq'", "'at'", "'var'", "'true'", "'false'"
    };
    public static final int T__50=50;
    public static final int RULE_DOTS=4;
    public static final int T__19=19;
    public static final int T__15=15;
    public static final int T__59=59;
    public static final int T__16=16;
    public static final int T__17=17;
    public static final int T__18=18;
    public static final int T__55=55;
    public static final int T__56=56;
    public static final int T__13=13;
    public static final int T__57=57;
    public static final int T__14=14;
    public static final int T__58=58;
    public static final int T__51=51;
    public static final int T__52=52;
    public static final int T__53=53;
    public static final int T__54=54;
    public static final int T__60=60;
    public static final int T__61=61;
    public static final int RULE_ID=5;
    public static final int T__26=26;
    public static final int T__27=27;
    public static final int T__28=28;
    public static final int RULE_INT=6;
    public static final int T__29=29;
    public static final int T__22=22;
    public static final int T__66=66;
    public static final int RULE_ML_COMMENT=9;
    public static final int T__23=23;
    public static final int T__67=67;
    public static final int T__24=24;
    public static final int T__68=68;
    public static final int T__25=25;
    public static final int T__69=69;
    public static final int T__62=62;
    public static final int T__63=63;
    public static final int T__20=20;
    public static final int T__64=64;
    public static final int T__21=21;
    public static final int T__65=65;
    public static final int T__70=70;
    public static final int T__71=71;
    public static final int T__72=72;
    public static final int RULE_STRING=8;
    public static final int RULE_SL_COMMENT=10;
    public static final int T__37=37;
    public static final int T__38=38;
    public static final int T__39=39;
    public static final int T__33=33;
    public static final int T__34=34;
    public static final int T__35=35;
    public static final int T__36=36;
    public static final int EOF=-1;
    public static final int T__30=30;
    public static final int T__31=31;
    public static final int T__32=32;
    public static final int RULE_WS=11;
    public static final int RULE_ANY_OTHER=12;
    public static final int T__48=48;
    public static final int T__49=49;
    public static final int T__44=44;
    public static final int T__45=45;
    public static final int RULE_FLOAT=7;
    public static final int T__46=46;
    public static final int T__47=47;
    public static final int T__40=40;
    public static final int T__41=41;
    public static final int T__42=42;
    public static final int T__43=43;

    // delegates
    // delegators


        public InternalFortXTransParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public InternalFortXTransParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
             
        }
        

    public String[] getTokenNames() { return InternalFortXTransParser.tokenNames; }
    public String getGrammarFileName() { return "InternalFortXTrans.g"; }


    	private FortXTransGrammarAccess grammarAccess;

    	public void setGrammarAccess(FortXTransGrammarAccess grammarAccess) {
    		this.grammarAccess = grammarAccess;
    	}

    	@Override
    	protected Grammar getGrammar() {
    		return grammarAccess.getGrammar();
    	}

    	@Override
    	protected String getValueForTokenName(String tokenName) {
    		return tokenName;
    	}



    // $ANTLR start "entryRuleModel"
    // InternalFortXTrans.g:53:1: entryRuleModel : ruleModel EOF ;
    public final void entryRuleModel() throws RecognitionException {
        try {
            // InternalFortXTrans.g:54:1: ( ruleModel EOF )
            // InternalFortXTrans.g:55:1: ruleModel EOF
            {
             before(grammarAccess.getModelRule()); 
            pushFollow(FOLLOW_1);
            ruleModel();

            state._fsp--;

             after(grammarAccess.getModelRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleModel"


    // $ANTLR start "ruleModel"
    // InternalFortXTrans.g:62:1: ruleModel : ( ( rule__Model__Alternatives ) ) ;
    public final void ruleModel() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:66:2: ( ( ( rule__Model__Alternatives ) ) )
            // InternalFortXTrans.g:67:2: ( ( rule__Model__Alternatives ) )
            {
            // InternalFortXTrans.g:67:2: ( ( rule__Model__Alternatives ) )
            // InternalFortXTrans.g:68:3: ( rule__Model__Alternatives )
            {
             before(grammarAccess.getModelAccess().getAlternatives()); 
            // InternalFortXTrans.g:69:3: ( rule__Model__Alternatives )
            // InternalFortXTrans.g:69:4: rule__Model__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__Model__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getModelAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleModel"


    // $ANTLR start "entryRuleComponent"
    // InternalFortXTrans.g:78:1: entryRuleComponent : ruleComponent EOF ;
    public final void entryRuleComponent() throws RecognitionException {
        try {
            // InternalFortXTrans.g:79:1: ( ruleComponent EOF )
            // InternalFortXTrans.g:80:1: ruleComponent EOF
            {
             before(grammarAccess.getComponentRule()); 
            pushFollow(FOLLOW_1);
            ruleComponent();

            state._fsp--;

             after(grammarAccess.getComponentRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleComponent"


    // $ANTLR start "ruleComponent"
    // InternalFortXTrans.g:87:1: ruleComponent : ( ( rule__Component__Group__0 ) ) ;
    public final void ruleComponent() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:91:2: ( ( ( rule__Component__Group__0 ) ) )
            // InternalFortXTrans.g:92:2: ( ( rule__Component__Group__0 ) )
            {
            // InternalFortXTrans.g:92:2: ( ( rule__Component__Group__0 ) )
            // InternalFortXTrans.g:93:3: ( rule__Component__Group__0 )
            {
             before(grammarAccess.getComponentAccess().getGroup()); 
            // InternalFortXTrans.g:94:3: ( rule__Component__Group__0 )
            // InternalFortXTrans.g:94:4: rule__Component__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Component__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getComponentAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleComponent"


    // $ANTLR start "entryRuleAPI"
    // InternalFortXTrans.g:103:1: entryRuleAPI : ruleAPI EOF ;
    public final void entryRuleAPI() throws RecognitionException {
        try {
            // InternalFortXTrans.g:104:1: ( ruleAPI EOF )
            // InternalFortXTrans.g:105:1: ruleAPI EOF
            {
             before(grammarAccess.getAPIRule()); 
            pushFollow(FOLLOW_1);
            ruleAPI();

            state._fsp--;

             after(grammarAccess.getAPIRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAPI"


    // $ANTLR start "ruleAPI"
    // InternalFortXTrans.g:112:1: ruleAPI : ( ( rule__API__Group__0 ) ) ;
    public final void ruleAPI() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:116:2: ( ( ( rule__API__Group__0 ) ) )
            // InternalFortXTrans.g:117:2: ( ( rule__API__Group__0 ) )
            {
            // InternalFortXTrans.g:117:2: ( ( rule__API__Group__0 ) )
            // InternalFortXTrans.g:118:3: ( rule__API__Group__0 )
            {
             before(grammarAccess.getAPIAccess().getGroup()); 
            // InternalFortXTrans.g:119:3: ( rule__API__Group__0 )
            // InternalFortXTrans.g:119:4: rule__API__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__API__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getAPIAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAPI"


    // $ANTLR start "entryRuleImport"
    // InternalFortXTrans.g:128:1: entryRuleImport : ruleImport EOF ;
    public final void entryRuleImport() throws RecognitionException {
        try {
            // InternalFortXTrans.g:129:1: ( ruleImport EOF )
            // InternalFortXTrans.g:130:1: ruleImport EOF
            {
             before(grammarAccess.getImportRule()); 
            pushFollow(FOLLOW_1);
            ruleImport();

            state._fsp--;

             after(grammarAccess.getImportRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleImport"


    // $ANTLR start "ruleImport"
    // InternalFortXTrans.g:137:1: ruleImport : ( ( rule__Import__Alternatives ) ) ;
    public final void ruleImport() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:141:2: ( ( ( rule__Import__Alternatives ) ) )
            // InternalFortXTrans.g:142:2: ( ( rule__Import__Alternatives ) )
            {
            // InternalFortXTrans.g:142:2: ( ( rule__Import__Alternatives ) )
            // InternalFortXTrans.g:143:3: ( rule__Import__Alternatives )
            {
             before(grammarAccess.getImportAccess().getAlternatives()); 
            // InternalFortXTrans.g:144:3: ( rule__Import__Alternatives )
            // InternalFortXTrans.g:144:4: rule__Import__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__Import__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getImportAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleImport"


    // $ANTLR start "entryRuleExport"
    // InternalFortXTrans.g:153:1: entryRuleExport : ruleExport EOF ;
    public final void entryRuleExport() throws RecognitionException {
        try {
            // InternalFortXTrans.g:154:1: ( ruleExport EOF )
            // InternalFortXTrans.g:155:1: ruleExport EOF
            {
             before(grammarAccess.getExportRule()); 
            pushFollow(FOLLOW_1);
            ruleExport();

            state._fsp--;

             after(grammarAccess.getExportRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleExport"


    // $ANTLR start "ruleExport"
    // InternalFortXTrans.g:162:1: ruleExport : ( ( rule__Export__Alternatives ) ) ;
    public final void ruleExport() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:166:2: ( ( ( rule__Export__Alternatives ) ) )
            // InternalFortXTrans.g:167:2: ( ( rule__Export__Alternatives ) )
            {
            // InternalFortXTrans.g:167:2: ( ( rule__Export__Alternatives ) )
            // InternalFortXTrans.g:168:3: ( rule__Export__Alternatives )
            {
             before(grammarAccess.getExportAccess().getAlternatives()); 
            // InternalFortXTrans.g:169:3: ( rule__Export__Alternatives )
            // InternalFortXTrans.g:169:4: rule__Export__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__Export__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getExportAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleExport"


    // $ANTLR start "entryRuleImportedNames"
    // InternalFortXTrans.g:178:1: entryRuleImportedNames : ruleImportedNames EOF ;
    public final void entryRuleImportedNames() throws RecognitionException {
        try {
            // InternalFortXTrans.g:179:1: ( ruleImportedNames EOF )
            // InternalFortXTrans.g:180:1: ruleImportedNames EOF
            {
             before(grammarAccess.getImportedNamesRule()); 
            pushFollow(FOLLOW_1);
            ruleImportedNames();

            state._fsp--;

             after(grammarAccess.getImportedNamesRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleImportedNames"


    // $ANTLR start "ruleImportedNames"
    // InternalFortXTrans.g:187:1: ruleImportedNames : ( ( rule__ImportedNames__Alternatives ) ) ;
    public final void ruleImportedNames() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:191:2: ( ( ( rule__ImportedNames__Alternatives ) ) )
            // InternalFortXTrans.g:192:2: ( ( rule__ImportedNames__Alternatives ) )
            {
            // InternalFortXTrans.g:192:2: ( ( rule__ImportedNames__Alternatives ) )
            // InternalFortXTrans.g:193:3: ( rule__ImportedNames__Alternatives )
            {
             before(grammarAccess.getImportedNamesAccess().getAlternatives()); 
            // InternalFortXTrans.g:194:3: ( rule__ImportedNames__Alternatives )
            // InternalFortXTrans.g:194:4: rule__ImportedNames__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__ImportedNames__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getImportedNamesAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleImportedNames"


    // $ANTLR start "entryRuleQualifiedName"
    // InternalFortXTrans.g:203:1: entryRuleQualifiedName : ruleQualifiedName EOF ;
    public final void entryRuleQualifiedName() throws RecognitionException {
        try {
            // InternalFortXTrans.g:204:1: ( ruleQualifiedName EOF )
            // InternalFortXTrans.g:205:1: ruleQualifiedName EOF
            {
             before(grammarAccess.getQualifiedNameRule()); 
            pushFollow(FOLLOW_1);
            ruleQualifiedName();

            state._fsp--;

             after(grammarAccess.getQualifiedNameRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleQualifiedName"


    // $ANTLR start "ruleQualifiedName"
    // InternalFortXTrans.g:212:1: ruleQualifiedName : ( ( rule__QualifiedName__Group__0 ) ) ;
    public final void ruleQualifiedName() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:216:2: ( ( ( rule__QualifiedName__Group__0 ) ) )
            // InternalFortXTrans.g:217:2: ( ( rule__QualifiedName__Group__0 ) )
            {
            // InternalFortXTrans.g:217:2: ( ( rule__QualifiedName__Group__0 ) )
            // InternalFortXTrans.g:218:3: ( rule__QualifiedName__Group__0 )
            {
             before(grammarAccess.getQualifiedNameAccess().getGroup()); 
            // InternalFortXTrans.g:219:3: ( rule__QualifiedName__Group__0 )
            // InternalFortXTrans.g:219:4: rule__QualifiedName__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__QualifiedName__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getQualifiedNameAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleQualifiedName"


    // $ANTLR start "entryRuleQualified"
    // InternalFortXTrans.g:228:1: entryRuleQualified : ruleQualified EOF ;
    public final void entryRuleQualified() throws RecognitionException {
        try {
            // InternalFortXTrans.g:229:1: ( ruleQualified EOF )
            // InternalFortXTrans.g:230:1: ruleQualified EOF
            {
             before(grammarAccess.getQualifiedRule()); 
            pushFollow(FOLLOW_1);
            ruleQualified();

            state._fsp--;

             after(grammarAccess.getQualifiedRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleQualified"


    // $ANTLR start "ruleQualified"
    // InternalFortXTrans.g:237:1: ruleQualified : ( ( rule__Qualified__Alternatives ) ) ;
    public final void ruleQualified() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:241:2: ( ( ( rule__Qualified__Alternatives ) ) )
            // InternalFortXTrans.g:242:2: ( ( rule__Qualified__Alternatives ) )
            {
            // InternalFortXTrans.g:242:2: ( ( rule__Qualified__Alternatives ) )
            // InternalFortXTrans.g:243:3: ( rule__Qualified__Alternatives )
            {
             before(grammarAccess.getQualifiedAccess().getAlternatives()); 
            // InternalFortXTrans.g:244:3: ( rule__Qualified__Alternatives )
            // InternalFortXTrans.g:244:4: rule__Qualified__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__Qualified__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getQualifiedAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleQualified"


    // $ANTLR start "entryRuleQualifiedNameTuple"
    // InternalFortXTrans.g:253:1: entryRuleQualifiedNameTuple : ruleQualifiedNameTuple EOF ;
    public final void entryRuleQualifiedNameTuple() throws RecognitionException {
        try {
            // InternalFortXTrans.g:254:1: ( ruleQualifiedNameTuple EOF )
            // InternalFortXTrans.g:255:1: ruleQualifiedNameTuple EOF
            {
             before(grammarAccess.getQualifiedNameTupleRule()); 
            pushFollow(FOLLOW_1);
            ruleQualifiedNameTuple();

            state._fsp--;

             after(grammarAccess.getQualifiedNameTupleRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleQualifiedNameTuple"


    // $ANTLR start "ruleQualifiedNameTuple"
    // InternalFortXTrans.g:262:1: ruleQualifiedNameTuple : ( ( rule__QualifiedNameTuple__Group__0 ) ) ;
    public final void ruleQualifiedNameTuple() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:266:2: ( ( ( rule__QualifiedNameTuple__Group__0 ) ) )
            // InternalFortXTrans.g:267:2: ( ( rule__QualifiedNameTuple__Group__0 ) )
            {
            // InternalFortXTrans.g:267:2: ( ( rule__QualifiedNameTuple__Group__0 ) )
            // InternalFortXTrans.g:268:3: ( rule__QualifiedNameTuple__Group__0 )
            {
             before(grammarAccess.getQualifiedNameTupleAccess().getGroup()); 
            // InternalFortXTrans.g:269:3: ( rule__QualifiedNameTuple__Group__0 )
            // InternalFortXTrans.g:269:4: rule__QualifiedNameTuple__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__QualifiedNameTuple__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getQualifiedNameTupleAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleQualifiedNameTuple"


    // $ANTLR start "entryRuleSimpleNames"
    // InternalFortXTrans.g:278:1: entryRuleSimpleNames : ruleSimpleNames EOF ;
    public final void entryRuleSimpleNames() throws RecognitionException {
        try {
            // InternalFortXTrans.g:279:1: ( ruleSimpleNames EOF )
            // InternalFortXTrans.g:280:1: ruleSimpleNames EOF
            {
             before(grammarAccess.getSimpleNamesRule()); 
            pushFollow(FOLLOW_1);
            ruleSimpleNames();

            state._fsp--;

             after(grammarAccess.getSimpleNamesRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSimpleNames"


    // $ANTLR start "ruleSimpleNames"
    // InternalFortXTrans.g:287:1: ruleSimpleNames : ( ( rule__SimpleNames__Alternatives ) ) ;
    public final void ruleSimpleNames() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:291:2: ( ( ( rule__SimpleNames__Alternatives ) ) )
            // InternalFortXTrans.g:292:2: ( ( rule__SimpleNames__Alternatives ) )
            {
            // InternalFortXTrans.g:292:2: ( ( rule__SimpleNames__Alternatives ) )
            // InternalFortXTrans.g:293:3: ( rule__SimpleNames__Alternatives )
            {
             before(grammarAccess.getSimpleNamesAccess().getAlternatives()); 
            // InternalFortXTrans.g:294:3: ( rule__SimpleNames__Alternatives )
            // InternalFortXTrans.g:294:4: rule__SimpleNames__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__SimpleNames__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getSimpleNamesAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSimpleNames"


    // $ANTLR start "entryRuleSimpleName"
    // InternalFortXTrans.g:303:1: entryRuleSimpleName : ruleSimpleName EOF ;
    public final void entryRuleSimpleName() throws RecognitionException {
        try {
            // InternalFortXTrans.g:304:1: ( ruleSimpleName EOF )
            // InternalFortXTrans.g:305:1: ruleSimpleName EOF
            {
             before(grammarAccess.getSimpleNameRule()); 
            pushFollow(FOLLOW_1);
            ruleSimpleName();

            state._fsp--;

             after(grammarAccess.getSimpleNameRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSimpleName"


    // $ANTLR start "ruleSimpleName"
    // InternalFortXTrans.g:312:1: ruleSimpleName : ( ( rule__SimpleName__NameAssignment ) ) ;
    public final void ruleSimpleName() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:316:2: ( ( ( rule__SimpleName__NameAssignment ) ) )
            // InternalFortXTrans.g:317:2: ( ( rule__SimpleName__NameAssignment ) )
            {
            // InternalFortXTrans.g:317:2: ( ( rule__SimpleName__NameAssignment ) )
            // InternalFortXTrans.g:318:3: ( rule__SimpleName__NameAssignment )
            {
             before(grammarAccess.getSimpleNameAccess().getNameAssignment()); 
            // InternalFortXTrans.g:319:3: ( rule__SimpleName__NameAssignment )
            // InternalFortXTrans.g:319:4: rule__SimpleName__NameAssignment
            {
            pushFollow(FOLLOW_2);
            rule__SimpleName__NameAssignment();

            state._fsp--;


            }

             after(grammarAccess.getSimpleNameAccess().getNameAssignment()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSimpleName"


    // $ANTLR start "entryRuleAliasedSimpleName"
    // InternalFortXTrans.g:328:1: entryRuleAliasedSimpleName : ruleAliasedSimpleName EOF ;
    public final void entryRuleAliasedSimpleName() throws RecognitionException {
        try {
            // InternalFortXTrans.g:329:1: ( ruleAliasedSimpleName EOF )
            // InternalFortXTrans.g:330:1: ruleAliasedSimpleName EOF
            {
             before(grammarAccess.getAliasedSimpleNameRule()); 
            pushFollow(FOLLOW_1);
            ruleAliasedSimpleName();

            state._fsp--;

             after(grammarAccess.getAliasedSimpleNameRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAliasedSimpleName"


    // $ANTLR start "ruleAliasedSimpleName"
    // InternalFortXTrans.g:337:1: ruleAliasedSimpleName : ( ( rule__AliasedSimpleName__Group__0 ) ) ;
    public final void ruleAliasedSimpleName() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:341:2: ( ( ( rule__AliasedSimpleName__Group__0 ) ) )
            // InternalFortXTrans.g:342:2: ( ( rule__AliasedSimpleName__Group__0 ) )
            {
            // InternalFortXTrans.g:342:2: ( ( rule__AliasedSimpleName__Group__0 ) )
            // InternalFortXTrans.g:343:3: ( rule__AliasedSimpleName__Group__0 )
            {
             before(grammarAccess.getAliasedSimpleNameAccess().getGroup()); 
            // InternalFortXTrans.g:344:3: ( rule__AliasedSimpleName__Group__0 )
            // InternalFortXTrans.g:344:4: rule__AliasedSimpleName__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__AliasedSimpleName__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getAliasedSimpleNameAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAliasedSimpleName"


    // $ANTLR start "entryRuleAliasedAPINames"
    // InternalFortXTrans.g:353:1: entryRuleAliasedAPINames : ruleAliasedAPINames EOF ;
    public final void entryRuleAliasedAPINames() throws RecognitionException {
        try {
            // InternalFortXTrans.g:354:1: ( ruleAliasedAPINames EOF )
            // InternalFortXTrans.g:355:1: ruleAliasedAPINames EOF
            {
             before(grammarAccess.getAliasedAPINamesRule()); 
            pushFollow(FOLLOW_1);
            ruleAliasedAPINames();

            state._fsp--;

             after(grammarAccess.getAliasedAPINamesRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAliasedAPINames"


    // $ANTLR start "ruleAliasedAPINames"
    // InternalFortXTrans.g:362:1: ruleAliasedAPINames : ( ( rule__AliasedAPINames__Alternatives ) ) ;
    public final void ruleAliasedAPINames() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:366:2: ( ( ( rule__AliasedAPINames__Alternatives ) ) )
            // InternalFortXTrans.g:367:2: ( ( rule__AliasedAPINames__Alternatives ) )
            {
            // InternalFortXTrans.g:367:2: ( ( rule__AliasedAPINames__Alternatives ) )
            // InternalFortXTrans.g:368:3: ( rule__AliasedAPINames__Alternatives )
            {
             before(grammarAccess.getAliasedAPINamesAccess().getAlternatives()); 
            // InternalFortXTrans.g:369:3: ( rule__AliasedAPINames__Alternatives )
            // InternalFortXTrans.g:369:4: rule__AliasedAPINames__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__AliasedAPINames__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getAliasedAPINamesAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAliasedAPINames"


    // $ANTLR start "entryRuleAliasedAPIName"
    // InternalFortXTrans.g:378:1: entryRuleAliasedAPIName : ruleAliasedAPIName EOF ;
    public final void entryRuleAliasedAPIName() throws RecognitionException {
        try {
            // InternalFortXTrans.g:379:1: ( ruleAliasedAPIName EOF )
            // InternalFortXTrans.g:380:1: ruleAliasedAPIName EOF
            {
             before(grammarAccess.getAliasedAPINameRule()); 
            pushFollow(FOLLOW_1);
            ruleAliasedAPIName();

            state._fsp--;

             after(grammarAccess.getAliasedAPINameRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAliasedAPIName"


    // $ANTLR start "ruleAliasedAPIName"
    // InternalFortXTrans.g:387:1: ruleAliasedAPIName : ( ( rule__AliasedAPIName__Group__0 ) ) ;
    public final void ruleAliasedAPIName() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:391:2: ( ( ( rule__AliasedAPIName__Group__0 ) ) )
            // InternalFortXTrans.g:392:2: ( ( rule__AliasedAPIName__Group__0 ) )
            {
            // InternalFortXTrans.g:392:2: ( ( rule__AliasedAPIName__Group__0 ) )
            // InternalFortXTrans.g:393:3: ( rule__AliasedAPIName__Group__0 )
            {
             before(grammarAccess.getAliasedAPINameAccess().getGroup()); 
            // InternalFortXTrans.g:394:3: ( rule__AliasedAPIName__Group__0 )
            // InternalFortXTrans.g:394:4: rule__AliasedAPIName__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__AliasedAPIName__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getAliasedAPINameAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAliasedAPIName"


    // $ANTLR start "entryRuleDecls"
    // InternalFortXTrans.g:403:1: entryRuleDecls : ruleDecls EOF ;
    public final void entryRuleDecls() throws RecognitionException {
        try {
            // InternalFortXTrans.g:404:1: ( ruleDecls EOF )
            // InternalFortXTrans.g:405:1: ruleDecls EOF
            {
             before(grammarAccess.getDeclsRule()); 
            pushFollow(FOLLOW_1);
            ruleDecls();

            state._fsp--;

             after(grammarAccess.getDeclsRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDecls"


    // $ANTLR start "ruleDecls"
    // InternalFortXTrans.g:412:1: ruleDecls : ( ( ( rule__Decls__DeclsAssignment ) ) ( ( rule__Decls__DeclsAssignment )* ) ) ;
    public final void ruleDecls() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:416:2: ( ( ( ( rule__Decls__DeclsAssignment ) ) ( ( rule__Decls__DeclsAssignment )* ) ) )
            // InternalFortXTrans.g:417:2: ( ( ( rule__Decls__DeclsAssignment ) ) ( ( rule__Decls__DeclsAssignment )* ) )
            {
            // InternalFortXTrans.g:417:2: ( ( ( rule__Decls__DeclsAssignment ) ) ( ( rule__Decls__DeclsAssignment )* ) )
            // InternalFortXTrans.g:418:3: ( ( rule__Decls__DeclsAssignment ) ) ( ( rule__Decls__DeclsAssignment )* )
            {
            // InternalFortXTrans.g:418:3: ( ( rule__Decls__DeclsAssignment ) )
            // InternalFortXTrans.g:419:4: ( rule__Decls__DeclsAssignment )
            {
             before(grammarAccess.getDeclsAccess().getDeclsAssignment()); 
            // InternalFortXTrans.g:420:4: ( rule__Decls__DeclsAssignment )
            // InternalFortXTrans.g:420:5: rule__Decls__DeclsAssignment
            {
            pushFollow(FOLLOW_3);
            rule__Decls__DeclsAssignment();

            state._fsp--;


            }

             after(grammarAccess.getDeclsAccess().getDeclsAssignment()); 

            }

            // InternalFortXTrans.g:423:3: ( ( rule__Decls__DeclsAssignment )* )
            // InternalFortXTrans.g:424:4: ( rule__Decls__DeclsAssignment )*
            {
             before(grammarAccess.getDeclsAccess().getDeclsAssignment()); 
            // InternalFortXTrans.g:425:4: ( rule__Decls__DeclsAssignment )*
            loop1:
            do {
                int alt1=2;
                alt1 = dfa1.predict(input);
                switch (alt1) {
            	case 1 :
            	    // InternalFortXTrans.g:425:5: rule__Decls__DeclsAssignment
            	    {
            	    pushFollow(FOLLOW_3);
            	    rule__Decls__DeclsAssignment();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop1;
                }
            } while (true);

             after(grammarAccess.getDeclsAccess().getDeclsAssignment()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDecls"


    // $ANTLR start "entryRuleDecl"
    // InternalFortXTrans.g:435:1: entryRuleDecl : ruleDecl EOF ;
    public final void entryRuleDecl() throws RecognitionException {
        try {
            // InternalFortXTrans.g:436:1: ( ruleDecl EOF )
            // InternalFortXTrans.g:437:1: ruleDecl EOF
            {
             before(grammarAccess.getDeclRule()); 
            pushFollow(FOLLOW_1);
            ruleDecl();

            state._fsp--;

             after(grammarAccess.getDeclRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDecl"


    // $ANTLR start "ruleDecl"
    // InternalFortXTrans.g:444:1: ruleDecl : ( ( rule__Decl__Alternatives ) ) ;
    public final void ruleDecl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:448:2: ( ( ( rule__Decl__Alternatives ) ) )
            // InternalFortXTrans.g:449:2: ( ( rule__Decl__Alternatives ) )
            {
            // InternalFortXTrans.g:449:2: ( ( rule__Decl__Alternatives ) )
            // InternalFortXTrans.g:450:3: ( rule__Decl__Alternatives )
            {
             before(grammarAccess.getDeclAccess().getAlternatives()); 
            // InternalFortXTrans.g:451:3: ( rule__Decl__Alternatives )
            // InternalFortXTrans.g:451:4: rule__Decl__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__Decl__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getDeclAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDecl"


    // $ANTLR start "entryRuleValParam"
    // InternalFortXTrans.g:460:1: entryRuleValParam : ruleValParam EOF ;
    public final void entryRuleValParam() throws RecognitionException {
        try {
            // InternalFortXTrans.g:461:1: ( ruleValParam EOF )
            // InternalFortXTrans.g:462:1: ruleValParam EOF
            {
             before(grammarAccess.getValParamRule()); 
            pushFollow(FOLLOW_1);
            ruleValParam();

            state._fsp--;

             after(grammarAccess.getValParamRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleValParam"


    // $ANTLR start "ruleValParam"
    // InternalFortXTrans.g:469:1: ruleValParam : ( ( rule__ValParam__Alternatives ) ) ;
    public final void ruleValParam() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:473:2: ( ( ( rule__ValParam__Alternatives ) ) )
            // InternalFortXTrans.g:474:2: ( ( rule__ValParam__Alternatives ) )
            {
            // InternalFortXTrans.g:474:2: ( ( rule__ValParam__Alternatives ) )
            // InternalFortXTrans.g:475:3: ( rule__ValParam__Alternatives )
            {
             before(grammarAccess.getValParamAccess().getAlternatives()); 
            // InternalFortXTrans.g:476:3: ( rule__ValParam__Alternatives )
            // InternalFortXTrans.g:476:4: rule__ValParam__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__ValParam__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getValParamAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleValParam"


    // $ANTLR start "entryRuleParam"
    // InternalFortXTrans.g:485:1: entryRuleParam : ruleParam EOF ;
    public final void entryRuleParam() throws RecognitionException {
        try {
            // InternalFortXTrans.g:486:1: ( ruleParam EOF )
            // InternalFortXTrans.g:487:1: ruleParam EOF
            {
             before(grammarAccess.getParamRule()); 
            pushFollow(FOLLOW_1);
            ruleParam();

            state._fsp--;

             after(grammarAccess.getParamRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleParam"


    // $ANTLR start "ruleParam"
    // InternalFortXTrans.g:494:1: ruleParam : ( ( rule__Param__Group__0 ) ) ;
    public final void ruleParam() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:498:2: ( ( ( rule__Param__Group__0 ) ) )
            // InternalFortXTrans.g:499:2: ( ( rule__Param__Group__0 ) )
            {
            // InternalFortXTrans.g:499:2: ( ( rule__Param__Group__0 ) )
            // InternalFortXTrans.g:500:3: ( rule__Param__Group__0 )
            {
             before(grammarAccess.getParamAccess().getGroup()); 
            // InternalFortXTrans.g:501:3: ( rule__Param__Group__0 )
            // InternalFortXTrans.g:501:4: rule__Param__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Param__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getParamAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleParam"


    // $ANTLR start "entryRuleRetType"
    // InternalFortXTrans.g:510:1: entryRuleRetType : ruleRetType EOF ;
    public final void entryRuleRetType() throws RecognitionException {
        try {
            // InternalFortXTrans.g:511:1: ( ruleRetType EOF )
            // InternalFortXTrans.g:512:1: ruleRetType EOF
            {
             before(grammarAccess.getRetTypeRule()); 
            pushFollow(FOLLOW_1);
            ruleRetType();

            state._fsp--;

             after(grammarAccess.getRetTypeRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleRetType"


    // $ANTLR start "ruleRetType"
    // InternalFortXTrans.g:519:1: ruleRetType : ( ( rule__RetType__Alternatives ) ) ;
    public final void ruleRetType() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:523:2: ( ( ( rule__RetType__Alternatives ) ) )
            // InternalFortXTrans.g:524:2: ( ( rule__RetType__Alternatives ) )
            {
            // InternalFortXTrans.g:524:2: ( ( rule__RetType__Alternatives ) )
            // InternalFortXTrans.g:525:3: ( rule__RetType__Alternatives )
            {
             before(grammarAccess.getRetTypeAccess().getAlternatives()); 
            // InternalFortXTrans.g:526:3: ( rule__RetType__Alternatives )
            // InternalFortXTrans.g:526:4: rule__RetType__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__RetType__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getRetTypeAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleRetType"


    // $ANTLR start "entryRuleTupleType"
    // InternalFortXTrans.g:535:1: entryRuleTupleType : ruleTupleType EOF ;
    public final void entryRuleTupleType() throws RecognitionException {
        try {
            // InternalFortXTrans.g:536:1: ( ruleTupleType EOF )
            // InternalFortXTrans.g:537:1: ruleTupleType EOF
            {
             before(grammarAccess.getTupleTypeRule()); 
            pushFollow(FOLLOW_1);
            ruleTupleType();

            state._fsp--;

             after(grammarAccess.getTupleTypeRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTupleType"


    // $ANTLR start "ruleTupleType"
    // InternalFortXTrans.g:544:1: ruleTupleType : ( ( rule__TupleType__Group__0 ) ) ;
    public final void ruleTupleType() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:548:2: ( ( ( rule__TupleType__Group__0 ) ) )
            // InternalFortXTrans.g:549:2: ( ( rule__TupleType__Group__0 ) )
            {
            // InternalFortXTrans.g:549:2: ( ( rule__TupleType__Group__0 ) )
            // InternalFortXTrans.g:550:3: ( rule__TupleType__Group__0 )
            {
             before(grammarAccess.getTupleTypeAccess().getGroup()); 
            // InternalFortXTrans.g:551:3: ( rule__TupleType__Group__0 )
            // InternalFortXTrans.g:551:4: rule__TupleType__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__TupleType__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getTupleTypeAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTupleType"


    // $ANTLR start "entryRuleFnMods"
    // InternalFortXTrans.g:560:1: entryRuleFnMods : ruleFnMods EOF ;
    public final void entryRuleFnMods() throws RecognitionException {
        try {
            // InternalFortXTrans.g:561:1: ( ruleFnMods EOF )
            // InternalFortXTrans.g:562:1: ruleFnMods EOF
            {
             before(grammarAccess.getFnModsRule()); 
            pushFollow(FOLLOW_1);
            ruleFnMods();

            state._fsp--;

             after(grammarAccess.getFnModsRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleFnMods"


    // $ANTLR start "ruleFnMods"
    // InternalFortXTrans.g:569:1: ruleFnMods : ( ( ( rule__FnMods__ModsAssignment ) ) ( ( rule__FnMods__ModsAssignment )* ) ) ;
    public final void ruleFnMods() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:573:2: ( ( ( ( rule__FnMods__ModsAssignment ) ) ( ( rule__FnMods__ModsAssignment )* ) ) )
            // InternalFortXTrans.g:574:2: ( ( ( rule__FnMods__ModsAssignment ) ) ( ( rule__FnMods__ModsAssignment )* ) )
            {
            // InternalFortXTrans.g:574:2: ( ( ( rule__FnMods__ModsAssignment ) ) ( ( rule__FnMods__ModsAssignment )* ) )
            // InternalFortXTrans.g:575:3: ( ( rule__FnMods__ModsAssignment ) ) ( ( rule__FnMods__ModsAssignment )* )
            {
            // InternalFortXTrans.g:575:3: ( ( rule__FnMods__ModsAssignment ) )
            // InternalFortXTrans.g:576:4: ( rule__FnMods__ModsAssignment )
            {
             before(grammarAccess.getFnModsAccess().getModsAssignment()); 
            // InternalFortXTrans.g:577:4: ( rule__FnMods__ModsAssignment )
            // InternalFortXTrans.g:577:5: rule__FnMods__ModsAssignment
            {
            pushFollow(FOLLOW_4);
            rule__FnMods__ModsAssignment();

            state._fsp--;


            }

             after(grammarAccess.getFnModsAccess().getModsAssignment()); 

            }

            // InternalFortXTrans.g:580:3: ( ( rule__FnMods__ModsAssignment )* )
            // InternalFortXTrans.g:581:4: ( rule__FnMods__ModsAssignment )*
            {
             before(grammarAccess.getFnModsAccess().getModsAssignment()); 
            // InternalFortXTrans.g:582:4: ( rule__FnMods__ModsAssignment )*
            loop2:
            do {
                int alt2=2;
                int LA2_0 = input.LA(1);

                if ( ((LA2_0>=58 && LA2_0<=61)) ) {
                    alt2=1;
                }


                switch (alt2) {
            	case 1 :
            	    // InternalFortXTrans.g:582:5: rule__FnMods__ModsAssignment
            	    {
            	    pushFollow(FOLLOW_4);
            	    rule__FnMods__ModsAssignment();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop2;
                }
            } while (true);

             after(grammarAccess.getFnModsAccess().getModsAssignment()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFnMods"


    // $ANTLR start "entryRuleFnMod"
    // InternalFortXTrans.g:592:1: entryRuleFnMod : ruleFnMod EOF ;
    public final void entryRuleFnMod() throws RecognitionException {
        try {
            // InternalFortXTrans.g:593:1: ( ruleFnMod EOF )
            // InternalFortXTrans.g:594:1: ruleFnMod EOF
            {
             before(grammarAccess.getFnModRule()); 
            pushFollow(FOLLOW_1);
            ruleFnMod();

            state._fsp--;

             after(grammarAccess.getFnModRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleFnMod"


    // $ANTLR start "ruleFnMod"
    // InternalFortXTrans.g:601:1: ruleFnMod : ( ( rule__FnMod__Alternatives ) ) ;
    public final void ruleFnMod() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:605:2: ( ( ( rule__FnMod__Alternatives ) ) )
            // InternalFortXTrans.g:606:2: ( ( rule__FnMod__Alternatives ) )
            {
            // InternalFortXTrans.g:606:2: ( ( rule__FnMod__Alternatives ) )
            // InternalFortXTrans.g:607:3: ( rule__FnMod__Alternatives )
            {
             before(grammarAccess.getFnModAccess().getAlternatives()); 
            // InternalFortXTrans.g:608:3: ( rule__FnMod__Alternatives )
            // InternalFortXTrans.g:608:4: rule__FnMod__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__FnMod__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getFnModAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFnMod"


    // $ANTLR start "entryRuleFnDecl"
    // InternalFortXTrans.g:617:1: entryRuleFnDecl : ruleFnDecl EOF ;
    public final void entryRuleFnDecl() throws RecognitionException {
        try {
            // InternalFortXTrans.g:618:1: ( ruleFnDecl EOF )
            // InternalFortXTrans.g:619:1: ruleFnDecl EOF
            {
             before(grammarAccess.getFnDeclRule()); 
            pushFollow(FOLLOW_1);
            ruleFnDecl();

            state._fsp--;

             after(grammarAccess.getFnDeclRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleFnDecl"


    // $ANTLR start "ruleFnDecl"
    // InternalFortXTrans.g:626:1: ruleFnDecl : ( ( rule__FnDecl__Group__0 ) ) ;
    public final void ruleFnDecl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:630:2: ( ( ( rule__FnDecl__Group__0 ) ) )
            // InternalFortXTrans.g:631:2: ( ( rule__FnDecl__Group__0 ) )
            {
            // InternalFortXTrans.g:631:2: ( ( rule__FnDecl__Group__0 ) )
            // InternalFortXTrans.g:632:3: ( rule__FnDecl__Group__0 )
            {
             before(grammarAccess.getFnDeclAccess().getGroup()); 
            // InternalFortXTrans.g:633:3: ( rule__FnDecl__Group__0 )
            // InternalFortXTrans.g:633:4: rule__FnDecl__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__FnDecl__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getFnDeclAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFnDecl"


    // $ANTLR start "entryRuleStmnts"
    // InternalFortXTrans.g:642:1: entryRuleStmnts : ruleStmnts EOF ;
    public final void entryRuleStmnts() throws RecognitionException {
        try {
            // InternalFortXTrans.g:643:1: ( ruleStmnts EOF )
            // InternalFortXTrans.g:644:1: ruleStmnts EOF
            {
             before(grammarAccess.getStmntsRule()); 
            pushFollow(FOLLOW_1);
            ruleStmnts();

            state._fsp--;

             after(grammarAccess.getStmntsRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleStmnts"


    // $ANTLR start "ruleStmnts"
    // InternalFortXTrans.g:651:1: ruleStmnts : ( ( rule__Stmnts__Alternatives ) ) ;
    public final void ruleStmnts() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:655:2: ( ( ( rule__Stmnts__Alternatives ) ) )
            // InternalFortXTrans.g:656:2: ( ( rule__Stmnts__Alternatives ) )
            {
            // InternalFortXTrans.g:656:2: ( ( rule__Stmnts__Alternatives ) )
            // InternalFortXTrans.g:657:3: ( rule__Stmnts__Alternatives )
            {
             before(grammarAccess.getStmntsAccess().getAlternatives()); 
            // InternalFortXTrans.g:658:3: ( rule__Stmnts__Alternatives )
            // InternalFortXTrans.g:658:4: rule__Stmnts__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__Stmnts__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getStmntsAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleStmnts"


    // $ANTLR start "entryRuleStmnt"
    // InternalFortXTrans.g:667:1: entryRuleStmnt : ruleStmnt EOF ;
    public final void entryRuleStmnt() throws RecognitionException {
        try {
            // InternalFortXTrans.g:668:1: ( ruleStmnt EOF )
            // InternalFortXTrans.g:669:1: ruleStmnt EOF
            {
             before(grammarAccess.getStmntRule()); 
            pushFollow(FOLLOW_1);
            ruleStmnt();

            state._fsp--;

             after(grammarAccess.getStmntRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleStmnt"


    // $ANTLR start "ruleStmnt"
    // InternalFortXTrans.g:676:1: ruleStmnt : ( ( rule__Stmnt__DelimAssignment ) ) ;
    public final void ruleStmnt() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:680:2: ( ( ( rule__Stmnt__DelimAssignment ) ) )
            // InternalFortXTrans.g:681:2: ( ( rule__Stmnt__DelimAssignment ) )
            {
            // InternalFortXTrans.g:681:2: ( ( rule__Stmnt__DelimAssignment ) )
            // InternalFortXTrans.g:682:3: ( rule__Stmnt__DelimAssignment )
            {
             before(grammarAccess.getStmntAccess().getDelimAssignment()); 
            // InternalFortXTrans.g:683:3: ( rule__Stmnt__DelimAssignment )
            // InternalFortXTrans.g:683:4: rule__Stmnt__DelimAssignment
            {
            pushFollow(FOLLOW_2);
            rule__Stmnt__DelimAssignment();

            state._fsp--;


            }

             after(grammarAccess.getStmntAccess().getDelimAssignment()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleStmnt"


    // $ANTLR start "entryRuleStmntList"
    // InternalFortXTrans.g:692:1: entryRuleStmntList : ruleStmntList EOF ;
    public final void entryRuleStmntList() throws RecognitionException {
        try {
            // InternalFortXTrans.g:693:1: ( ruleStmntList EOF )
            // InternalFortXTrans.g:694:1: ruleStmntList EOF
            {
             before(grammarAccess.getStmntListRule()); 
            pushFollow(FOLLOW_1);
            ruleStmntList();

            state._fsp--;

             after(grammarAccess.getStmntListRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleStmntList"


    // $ANTLR start "ruleStmntList"
    // InternalFortXTrans.g:701:1: ruleStmntList : ( ( rule__StmntList__Group__0 ) ) ;
    public final void ruleStmntList() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:705:2: ( ( ( rule__StmntList__Group__0 ) ) )
            // InternalFortXTrans.g:706:2: ( ( rule__StmntList__Group__0 ) )
            {
            // InternalFortXTrans.g:706:2: ( ( rule__StmntList__Group__0 ) )
            // InternalFortXTrans.g:707:3: ( rule__StmntList__Group__0 )
            {
             before(grammarAccess.getStmntListAccess().getGroup()); 
            // InternalFortXTrans.g:708:3: ( rule__StmntList__Group__0 )
            // InternalFortXTrans.g:708:4: rule__StmntList__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__StmntList__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getStmntListAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleStmntList"


    // $ANTLR start "entryRuleExpr"
    // InternalFortXTrans.g:717:1: entryRuleExpr : ruleExpr EOF ;
    public final void entryRuleExpr() throws RecognitionException {
        try {
            // InternalFortXTrans.g:718:1: ( ruleExpr EOF )
            // InternalFortXTrans.g:719:1: ruleExpr EOF
            {
             before(grammarAccess.getExprRule()); 
            pushFollow(FOLLOW_1);
            ruleExpr();

            state._fsp--;

             after(grammarAccess.getExprRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleExpr"


    // $ANTLR start "ruleExpr"
    // InternalFortXTrans.g:726:1: ruleExpr : ( ( rule__Expr__Group__0 ) ) ;
    public final void ruleExpr() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:730:2: ( ( ( rule__Expr__Group__0 ) ) )
            // InternalFortXTrans.g:731:2: ( ( rule__Expr__Group__0 ) )
            {
            // InternalFortXTrans.g:731:2: ( ( rule__Expr__Group__0 ) )
            // InternalFortXTrans.g:732:3: ( rule__Expr__Group__0 )
            {
             before(grammarAccess.getExprAccess().getGroup()); 
            // InternalFortXTrans.g:733:3: ( rule__Expr__Group__0 )
            // InternalFortXTrans.g:733:4: rule__Expr__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Expr__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getExprAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleExpr"


    // $ANTLR start "entryRuleOr"
    // InternalFortXTrans.g:742:1: entryRuleOr : ruleOr EOF ;
    public final void entryRuleOr() throws RecognitionException {
        try {
            // InternalFortXTrans.g:743:1: ( ruleOr EOF )
            // InternalFortXTrans.g:744:1: ruleOr EOF
            {
             before(grammarAccess.getOrRule()); 
            pushFollow(FOLLOW_1);
            ruleOr();

            state._fsp--;

             after(grammarAccess.getOrRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOr"


    // $ANTLR start "ruleOr"
    // InternalFortXTrans.g:751:1: ruleOr : ( ( rule__Or__Group__0 ) ) ;
    public final void ruleOr() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:755:2: ( ( ( rule__Or__Group__0 ) ) )
            // InternalFortXTrans.g:756:2: ( ( rule__Or__Group__0 ) )
            {
            // InternalFortXTrans.g:756:2: ( ( rule__Or__Group__0 ) )
            // InternalFortXTrans.g:757:3: ( rule__Or__Group__0 )
            {
             before(grammarAccess.getOrAccess().getGroup()); 
            // InternalFortXTrans.g:758:3: ( rule__Or__Group__0 )
            // InternalFortXTrans.g:758:4: rule__Or__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Or__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getOrAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOr"


    // $ANTLR start "entryRuleAnd"
    // InternalFortXTrans.g:767:1: entryRuleAnd : ruleAnd EOF ;
    public final void entryRuleAnd() throws RecognitionException {
        try {
            // InternalFortXTrans.g:768:1: ( ruleAnd EOF )
            // InternalFortXTrans.g:769:1: ruleAnd EOF
            {
             before(grammarAccess.getAndRule()); 
            pushFollow(FOLLOW_1);
            ruleAnd();

            state._fsp--;

             after(grammarAccess.getAndRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAnd"


    // $ANTLR start "ruleAnd"
    // InternalFortXTrans.g:776:1: ruleAnd : ( ( rule__And__Group__0 ) ) ;
    public final void ruleAnd() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:780:2: ( ( ( rule__And__Group__0 ) ) )
            // InternalFortXTrans.g:781:2: ( ( rule__And__Group__0 ) )
            {
            // InternalFortXTrans.g:781:2: ( ( rule__And__Group__0 ) )
            // InternalFortXTrans.g:782:3: ( rule__And__Group__0 )
            {
             before(grammarAccess.getAndAccess().getGroup()); 
            // InternalFortXTrans.g:783:3: ( rule__And__Group__0 )
            // InternalFortXTrans.g:783:4: rule__And__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__And__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getAndAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAnd"


    // $ANTLR start "entryRuleEquality"
    // InternalFortXTrans.g:792:1: entryRuleEquality : ruleEquality EOF ;
    public final void entryRuleEquality() throws RecognitionException {
        try {
            // InternalFortXTrans.g:793:1: ( ruleEquality EOF )
            // InternalFortXTrans.g:794:1: ruleEquality EOF
            {
             before(grammarAccess.getEqualityRule()); 
            pushFollow(FOLLOW_1);
            ruleEquality();

            state._fsp--;

             after(grammarAccess.getEqualityRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleEquality"


    // $ANTLR start "ruleEquality"
    // InternalFortXTrans.g:801:1: ruleEquality : ( ( rule__Equality__Group__0 ) ) ;
    public final void ruleEquality() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:805:2: ( ( ( rule__Equality__Group__0 ) ) )
            // InternalFortXTrans.g:806:2: ( ( rule__Equality__Group__0 ) )
            {
            // InternalFortXTrans.g:806:2: ( ( rule__Equality__Group__0 ) )
            // InternalFortXTrans.g:807:3: ( rule__Equality__Group__0 )
            {
             before(grammarAccess.getEqualityAccess().getGroup()); 
            // InternalFortXTrans.g:808:3: ( rule__Equality__Group__0 )
            // InternalFortXTrans.g:808:4: rule__Equality__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Equality__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getEqualityAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleEquality"


    // $ANTLR start "entryRuleComparison"
    // InternalFortXTrans.g:817:1: entryRuleComparison : ruleComparison EOF ;
    public final void entryRuleComparison() throws RecognitionException {
        try {
            // InternalFortXTrans.g:818:1: ( ruleComparison EOF )
            // InternalFortXTrans.g:819:1: ruleComparison EOF
            {
             before(grammarAccess.getComparisonRule()); 
            pushFollow(FOLLOW_1);
            ruleComparison();

            state._fsp--;

             after(grammarAccess.getComparisonRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleComparison"


    // $ANTLR start "ruleComparison"
    // InternalFortXTrans.g:826:1: ruleComparison : ( ( rule__Comparison__Group__0 ) ) ;
    public final void ruleComparison() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:830:2: ( ( ( rule__Comparison__Group__0 ) ) )
            // InternalFortXTrans.g:831:2: ( ( rule__Comparison__Group__0 ) )
            {
            // InternalFortXTrans.g:831:2: ( ( rule__Comparison__Group__0 ) )
            // InternalFortXTrans.g:832:3: ( rule__Comparison__Group__0 )
            {
             before(grammarAccess.getComparisonAccess().getGroup()); 
            // InternalFortXTrans.g:833:3: ( rule__Comparison__Group__0 )
            // InternalFortXTrans.g:833:4: rule__Comparison__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Comparison__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getComparisonAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleComparison"


    // $ANTLR start "entryRuleAddExpr"
    // InternalFortXTrans.g:842:1: entryRuleAddExpr : ruleAddExpr EOF ;
    public final void entryRuleAddExpr() throws RecognitionException {
        try {
            // InternalFortXTrans.g:843:1: ( ruleAddExpr EOF )
            // InternalFortXTrans.g:844:1: ruleAddExpr EOF
            {
             before(grammarAccess.getAddExprRule()); 
            pushFollow(FOLLOW_1);
            ruleAddExpr();

            state._fsp--;

             after(grammarAccess.getAddExprRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAddExpr"


    // $ANTLR start "ruleAddExpr"
    // InternalFortXTrans.g:851:1: ruleAddExpr : ( ( rule__AddExpr__Group__0 ) ) ;
    public final void ruleAddExpr() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:855:2: ( ( ( rule__AddExpr__Group__0 ) ) )
            // InternalFortXTrans.g:856:2: ( ( rule__AddExpr__Group__0 ) )
            {
            // InternalFortXTrans.g:856:2: ( ( rule__AddExpr__Group__0 ) )
            // InternalFortXTrans.g:857:3: ( rule__AddExpr__Group__0 )
            {
             before(grammarAccess.getAddExprAccess().getGroup()); 
            // InternalFortXTrans.g:858:3: ( rule__AddExpr__Group__0 )
            // InternalFortXTrans.g:858:4: rule__AddExpr__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__AddExpr__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getAddExprAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAddExpr"


    // $ANTLR start "entryRuleSubExpr"
    // InternalFortXTrans.g:867:1: entryRuleSubExpr : ruleSubExpr EOF ;
    public final void entryRuleSubExpr() throws RecognitionException {
        try {
            // InternalFortXTrans.g:868:1: ( ruleSubExpr EOF )
            // InternalFortXTrans.g:869:1: ruleSubExpr EOF
            {
             before(grammarAccess.getSubExprRule()); 
            pushFollow(FOLLOW_1);
            ruleSubExpr();

            state._fsp--;

             after(grammarAccess.getSubExprRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSubExpr"


    // $ANTLR start "ruleSubExpr"
    // InternalFortXTrans.g:876:1: ruleSubExpr : ( ( rule__SubExpr__Group__0 ) ) ;
    public final void ruleSubExpr() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:880:2: ( ( ( rule__SubExpr__Group__0 ) ) )
            // InternalFortXTrans.g:881:2: ( ( rule__SubExpr__Group__0 ) )
            {
            // InternalFortXTrans.g:881:2: ( ( rule__SubExpr__Group__0 ) )
            // InternalFortXTrans.g:882:3: ( rule__SubExpr__Group__0 )
            {
             before(grammarAccess.getSubExprAccess().getGroup()); 
            // InternalFortXTrans.g:883:3: ( rule__SubExpr__Group__0 )
            // InternalFortXTrans.g:883:4: rule__SubExpr__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__SubExpr__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getSubExprAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSubExpr"


    // $ANTLR start "entryRuleDivExpr"
    // InternalFortXTrans.g:892:1: entryRuleDivExpr : ruleDivExpr EOF ;
    public final void entryRuleDivExpr() throws RecognitionException {
        try {
            // InternalFortXTrans.g:893:1: ( ruleDivExpr EOF )
            // InternalFortXTrans.g:894:1: ruleDivExpr EOF
            {
             before(grammarAccess.getDivExprRule()); 
            pushFollow(FOLLOW_1);
            ruleDivExpr();

            state._fsp--;

             after(grammarAccess.getDivExprRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDivExpr"


    // $ANTLR start "ruleDivExpr"
    // InternalFortXTrans.g:901:1: ruleDivExpr : ( ( rule__DivExpr__Group__0 ) ) ;
    public final void ruleDivExpr() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:905:2: ( ( ( rule__DivExpr__Group__0 ) ) )
            // InternalFortXTrans.g:906:2: ( ( rule__DivExpr__Group__0 ) )
            {
            // InternalFortXTrans.g:906:2: ( ( rule__DivExpr__Group__0 ) )
            // InternalFortXTrans.g:907:3: ( rule__DivExpr__Group__0 )
            {
             before(grammarAccess.getDivExprAccess().getGroup()); 
            // InternalFortXTrans.g:908:3: ( rule__DivExpr__Group__0 )
            // InternalFortXTrans.g:908:4: rule__DivExpr__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__DivExpr__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getDivExprAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDivExpr"


    // $ANTLR start "entryRuleMultExpr"
    // InternalFortXTrans.g:917:1: entryRuleMultExpr : ruleMultExpr EOF ;
    public final void entryRuleMultExpr() throws RecognitionException {
        try {
            // InternalFortXTrans.g:918:1: ( ruleMultExpr EOF )
            // InternalFortXTrans.g:919:1: ruleMultExpr EOF
            {
             before(grammarAccess.getMultExprRule()); 
            pushFollow(FOLLOW_1);
            ruleMultExpr();

            state._fsp--;

             after(grammarAccess.getMultExprRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleMultExpr"


    // $ANTLR start "ruleMultExpr"
    // InternalFortXTrans.g:926:1: ruleMultExpr : ( ( rule__MultExpr__Group__0 ) ) ;
    public final void ruleMultExpr() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:930:2: ( ( ( rule__MultExpr__Group__0 ) ) )
            // InternalFortXTrans.g:931:2: ( ( rule__MultExpr__Group__0 ) )
            {
            // InternalFortXTrans.g:931:2: ( ( rule__MultExpr__Group__0 ) )
            // InternalFortXTrans.g:932:3: ( rule__MultExpr__Group__0 )
            {
             before(grammarAccess.getMultExprAccess().getGroup()); 
            // InternalFortXTrans.g:933:3: ( rule__MultExpr__Group__0 )
            // InternalFortXTrans.g:933:4: rule__MultExpr__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__MultExpr__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getMultExprAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleMultExpr"


    // $ANTLR start "entryRuleExponentExpr"
    // InternalFortXTrans.g:942:1: entryRuleExponentExpr : ruleExponentExpr EOF ;
    public final void entryRuleExponentExpr() throws RecognitionException {
        try {
            // InternalFortXTrans.g:943:1: ( ruleExponentExpr EOF )
            // InternalFortXTrans.g:944:1: ruleExponentExpr EOF
            {
             before(grammarAccess.getExponentExprRule()); 
            pushFollow(FOLLOW_1);
            ruleExponentExpr();

            state._fsp--;

             after(grammarAccess.getExponentExprRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleExponentExpr"


    // $ANTLR start "ruleExponentExpr"
    // InternalFortXTrans.g:951:1: ruleExponentExpr : ( ( rule__ExponentExpr__Group__0 ) ) ;
    public final void ruleExponentExpr() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:955:2: ( ( ( rule__ExponentExpr__Group__0 ) ) )
            // InternalFortXTrans.g:956:2: ( ( rule__ExponentExpr__Group__0 ) )
            {
            // InternalFortXTrans.g:956:2: ( ( rule__ExponentExpr__Group__0 ) )
            // InternalFortXTrans.g:957:3: ( rule__ExponentExpr__Group__0 )
            {
             before(grammarAccess.getExponentExprAccess().getGroup()); 
            // InternalFortXTrans.g:958:3: ( rule__ExponentExpr__Group__0 )
            // InternalFortXTrans.g:958:4: rule__ExponentExpr__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__ExponentExpr__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getExponentExprAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleExponentExpr"


    // $ANTLR start "entryRulePrimary"
    // InternalFortXTrans.g:967:1: entryRulePrimary : rulePrimary EOF ;
    public final void entryRulePrimary() throws RecognitionException {
        try {
            // InternalFortXTrans.g:968:1: ( rulePrimary EOF )
            // InternalFortXTrans.g:969:1: rulePrimary EOF
            {
             before(grammarAccess.getPrimaryRule()); 
            pushFollow(FOLLOW_1);
            rulePrimary();

            state._fsp--;

             after(grammarAccess.getPrimaryRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulePrimary"


    // $ANTLR start "rulePrimary"
    // InternalFortXTrans.g:976:1: rulePrimary : ( ( rule__Primary__Alternatives ) ) ;
    public final void rulePrimary() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:980:2: ( ( ( rule__Primary__Alternatives ) ) )
            // InternalFortXTrans.g:981:2: ( ( rule__Primary__Alternatives ) )
            {
            // InternalFortXTrans.g:981:2: ( ( rule__Primary__Alternatives ) )
            // InternalFortXTrans.g:982:3: ( rule__Primary__Alternatives )
            {
             before(grammarAccess.getPrimaryAccess().getAlternatives()); 
            // InternalFortXTrans.g:983:3: ( rule__Primary__Alternatives )
            // InternalFortXTrans.g:983:4: rule__Primary__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__Primary__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getPrimaryAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePrimary"


    // $ANTLR start "entryRuleExprList"
    // InternalFortXTrans.g:992:1: entryRuleExprList : ruleExprList EOF ;
    public final void entryRuleExprList() throws RecognitionException {
        try {
            // InternalFortXTrans.g:993:1: ( ruleExprList EOF )
            // InternalFortXTrans.g:994:1: ruleExprList EOF
            {
             before(grammarAccess.getExprListRule()); 
            pushFollow(FOLLOW_1);
            ruleExprList();

            state._fsp--;

             after(grammarAccess.getExprListRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleExprList"


    // $ANTLR start "ruleExprList"
    // InternalFortXTrans.g:1001:1: ruleExprList : ( ( rule__ExprList__Group__0 ) ) ;
    public final void ruleExprList() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1005:2: ( ( ( rule__ExprList__Group__0 ) ) )
            // InternalFortXTrans.g:1006:2: ( ( rule__ExprList__Group__0 ) )
            {
            // InternalFortXTrans.g:1006:2: ( ( rule__ExprList__Group__0 ) )
            // InternalFortXTrans.g:1007:3: ( rule__ExprList__Group__0 )
            {
             before(grammarAccess.getExprListAccess().getGroup()); 
            // InternalFortXTrans.g:1008:3: ( rule__ExprList__Group__0 )
            // InternalFortXTrans.g:1008:4: rule__ExprList__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__ExprList__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getExprListAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleExprList"


    // $ANTLR start "entryRuleExprTail"
    // InternalFortXTrans.g:1017:1: entryRuleExprTail : ruleExprTail EOF ;
    public final void entryRuleExprTail() throws RecognitionException {
        try {
            // InternalFortXTrans.g:1018:1: ( ruleExprTail EOF )
            // InternalFortXTrans.g:1019:1: ruleExprTail EOF
            {
             before(grammarAccess.getExprTailRule()); 
            pushFollow(FOLLOW_1);
            ruleExprTail();

            state._fsp--;

             after(grammarAccess.getExprTailRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleExprTail"


    // $ANTLR start "ruleExprTail"
    // InternalFortXTrans.g:1026:1: ruleExprTail : ( ( rule__ExprTail__Group__0 ) ) ;
    public final void ruleExprTail() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1030:2: ( ( ( rule__ExprTail__Group__0 ) ) )
            // InternalFortXTrans.g:1031:2: ( ( rule__ExprTail__Group__0 ) )
            {
            // InternalFortXTrans.g:1031:2: ( ( rule__ExprTail__Group__0 ) )
            // InternalFortXTrans.g:1032:3: ( rule__ExprTail__Group__0 )
            {
             before(grammarAccess.getExprTailAccess().getGroup()); 
            // InternalFortXTrans.g:1033:3: ( rule__ExprTail__Group__0 )
            // InternalFortXTrans.g:1033:4: rule__ExprTail__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__ExprTail__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getExprTailAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleExprTail"


    // $ANTLR start "entryRuleDelimitedExpr"
    // InternalFortXTrans.g:1042:1: entryRuleDelimitedExpr : ruleDelimitedExpr EOF ;
    public final void entryRuleDelimitedExpr() throws RecognitionException {
        try {
            // InternalFortXTrans.g:1043:1: ( ruleDelimitedExpr EOF )
            // InternalFortXTrans.g:1044:1: ruleDelimitedExpr EOF
            {
             before(grammarAccess.getDelimitedExprRule()); 
            pushFollow(FOLLOW_1);
            ruleDelimitedExpr();

            state._fsp--;

             after(grammarAccess.getDelimitedExprRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDelimitedExpr"


    // $ANTLR start "ruleDelimitedExpr"
    // InternalFortXTrans.g:1051:1: ruleDelimitedExpr : ( ( rule__DelimitedExpr__Alternatives ) ) ;
    public final void ruleDelimitedExpr() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1055:2: ( ( ( rule__DelimitedExpr__Alternatives ) ) )
            // InternalFortXTrans.g:1056:2: ( ( rule__DelimitedExpr__Alternatives ) )
            {
            // InternalFortXTrans.g:1056:2: ( ( rule__DelimitedExpr__Alternatives ) )
            // InternalFortXTrans.g:1057:3: ( rule__DelimitedExpr__Alternatives )
            {
             before(grammarAccess.getDelimitedExprAccess().getAlternatives()); 
            // InternalFortXTrans.g:1058:3: ( rule__DelimitedExpr__Alternatives )
            // InternalFortXTrans.g:1058:4: rule__DelimitedExpr__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__DelimitedExpr__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getDelimitedExprAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDelimitedExpr"


    // $ANTLR start "entryRuleElifs"
    // InternalFortXTrans.g:1067:1: entryRuleElifs : ruleElifs EOF ;
    public final void entryRuleElifs() throws RecognitionException {
        try {
            // InternalFortXTrans.g:1068:1: ( ruleElifs EOF )
            // InternalFortXTrans.g:1069:1: ruleElifs EOF
            {
             before(grammarAccess.getElifsRule()); 
            pushFollow(FOLLOW_1);
            ruleElifs();

            state._fsp--;

             after(grammarAccess.getElifsRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleElifs"


    // $ANTLR start "ruleElifs"
    // InternalFortXTrans.g:1076:1: ruleElifs : ( ( rule__Elifs__Group__0 ) ) ;
    public final void ruleElifs() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1080:2: ( ( ( rule__Elifs__Group__0 ) ) )
            // InternalFortXTrans.g:1081:2: ( ( rule__Elifs__Group__0 ) )
            {
            // InternalFortXTrans.g:1081:2: ( ( rule__Elifs__Group__0 ) )
            // InternalFortXTrans.g:1082:3: ( rule__Elifs__Group__0 )
            {
             before(grammarAccess.getElifsAccess().getGroup()); 
            // InternalFortXTrans.g:1083:3: ( rule__Elifs__Group__0 )
            // InternalFortXTrans.g:1083:4: rule__Elifs__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Elifs__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getElifsAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleElifs"


    // $ANTLR start "entryRuleElif"
    // InternalFortXTrans.g:1092:1: entryRuleElif : ruleElif EOF ;
    public final void entryRuleElif() throws RecognitionException {
        try {
            // InternalFortXTrans.g:1093:1: ( ruleElif EOF )
            // InternalFortXTrans.g:1094:1: ruleElif EOF
            {
             before(grammarAccess.getElifRule()); 
            pushFollow(FOLLOW_1);
            ruleElif();

            state._fsp--;

             after(grammarAccess.getElifRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleElif"


    // $ANTLR start "ruleElif"
    // InternalFortXTrans.g:1101:1: ruleElif : ( ( rule__Elif__Group__0 ) ) ;
    public final void ruleElif() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1105:2: ( ( ( rule__Elif__Group__0 ) ) )
            // InternalFortXTrans.g:1106:2: ( ( rule__Elif__Group__0 ) )
            {
            // InternalFortXTrans.g:1106:2: ( ( rule__Elif__Group__0 ) )
            // InternalFortXTrans.g:1107:3: ( rule__Elif__Group__0 )
            {
             before(grammarAccess.getElifAccess().getGroup()); 
            // InternalFortXTrans.g:1108:3: ( rule__Elif__Group__0 )
            // InternalFortXTrans.g:1108:4: rule__Elif__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Elif__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getElifAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleElif"


    // $ANTLR start "entryRuleElse"
    // InternalFortXTrans.g:1117:1: entryRuleElse : ruleElse EOF ;
    public final void entryRuleElse() throws RecognitionException {
        try {
            // InternalFortXTrans.g:1118:1: ( ruleElse EOF )
            // InternalFortXTrans.g:1119:1: ruleElse EOF
            {
             before(grammarAccess.getElseRule()); 
            pushFollow(FOLLOW_1);
            ruleElse();

            state._fsp--;

             after(grammarAccess.getElseRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleElse"


    // $ANTLR start "ruleElse"
    // InternalFortXTrans.g:1126:1: ruleElse : ( ( rule__Else__Group__0 ) ) ;
    public final void ruleElse() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1130:2: ( ( ( rule__Else__Group__0 ) ) )
            // InternalFortXTrans.g:1131:2: ( ( rule__Else__Group__0 ) )
            {
            // InternalFortXTrans.g:1131:2: ( ( rule__Else__Group__0 ) )
            // InternalFortXTrans.g:1132:3: ( rule__Else__Group__0 )
            {
             before(grammarAccess.getElseAccess().getGroup()); 
            // InternalFortXTrans.g:1133:3: ( rule__Else__Group__0 )
            // InternalFortXTrans.g:1133:4: rule__Else__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Else__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getElseAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleElse"


    // $ANTLR start "entryRuleGenerators"
    // InternalFortXTrans.g:1142:1: entryRuleGenerators : ruleGenerators EOF ;
    public final void entryRuleGenerators() throws RecognitionException {
        try {
            // InternalFortXTrans.g:1143:1: ( ruleGenerators EOF )
            // InternalFortXTrans.g:1144:1: ruleGenerators EOF
            {
             before(grammarAccess.getGeneratorsRule()); 
            pushFollow(FOLLOW_1);
            ruleGenerators();

            state._fsp--;

             after(grammarAccess.getGeneratorsRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleGenerators"


    // $ANTLR start "ruleGenerators"
    // InternalFortXTrans.g:1151:1: ruleGenerators : ( ( rule__Generators__Group__0 ) ) ;
    public final void ruleGenerators() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1155:2: ( ( ( rule__Generators__Group__0 ) ) )
            // InternalFortXTrans.g:1156:2: ( ( rule__Generators__Group__0 ) )
            {
            // InternalFortXTrans.g:1156:2: ( ( rule__Generators__Group__0 ) )
            // InternalFortXTrans.g:1157:3: ( rule__Generators__Group__0 )
            {
             before(grammarAccess.getGeneratorsAccess().getGroup()); 
            // InternalFortXTrans.g:1158:3: ( rule__Generators__Group__0 )
            // InternalFortXTrans.g:1158:4: rule__Generators__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Generators__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getGeneratorsAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleGenerators"


    // $ANTLR start "entryRuleBinding"
    // InternalFortXTrans.g:1167:1: entryRuleBinding : ruleBinding EOF ;
    public final void entryRuleBinding() throws RecognitionException {
        try {
            // InternalFortXTrans.g:1168:1: ( ruleBinding EOF )
            // InternalFortXTrans.g:1169:1: ruleBinding EOF
            {
             before(grammarAccess.getBindingRule()); 
            pushFollow(FOLLOW_1);
            ruleBinding();

            state._fsp--;

             after(grammarAccess.getBindingRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleBinding"


    // $ANTLR start "ruleBinding"
    // InternalFortXTrans.g:1176:1: ruleBinding : ( ( rule__Binding__Alternatives ) ) ;
    public final void ruleBinding() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1180:2: ( ( ( rule__Binding__Alternatives ) ) )
            // InternalFortXTrans.g:1181:2: ( ( rule__Binding__Alternatives ) )
            {
            // InternalFortXTrans.g:1181:2: ( ( rule__Binding__Alternatives ) )
            // InternalFortXTrans.g:1182:3: ( rule__Binding__Alternatives )
            {
             before(grammarAccess.getBindingAccess().getAlternatives()); 
            // InternalFortXTrans.g:1183:3: ( rule__Binding__Alternatives )
            // InternalFortXTrans.g:1183:4: rule__Binding__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__Binding__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getBindingAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleBinding"


    // $ANTLR start "entryRuleGenSource"
    // InternalFortXTrans.g:1192:1: entryRuleGenSource : ruleGenSource EOF ;
    public final void entryRuleGenSource() throws RecognitionException {
        try {
            // InternalFortXTrans.g:1193:1: ( ruleGenSource EOF )
            // InternalFortXTrans.g:1194:1: ruleGenSource EOF
            {
             before(grammarAccess.getGenSourceRule()); 
            pushFollow(FOLLOW_1);
            ruleGenSource();

            state._fsp--;

             after(grammarAccess.getGenSourceRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleGenSource"


    // $ANTLR start "ruleGenSource"
    // InternalFortXTrans.g:1201:1: ruleGenSource : ( ( rule__GenSource__Group__0 ) ) ;
    public final void ruleGenSource() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1205:2: ( ( ( rule__GenSource__Group__0 ) ) )
            // InternalFortXTrans.g:1206:2: ( ( rule__GenSource__Group__0 ) )
            {
            // InternalFortXTrans.g:1206:2: ( ( rule__GenSource__Group__0 ) )
            // InternalFortXTrans.g:1207:3: ( rule__GenSource__Group__0 )
            {
             before(grammarAccess.getGenSourceAccess().getGroup()); 
            // InternalFortXTrans.g:1208:3: ( rule__GenSource__Group__0 )
            // InternalFortXTrans.g:1208:4: rule__GenSource__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__GenSource__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getGenSourceAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleGenSource"


    // $ANTLR start "entryRuleGenClause"
    // InternalFortXTrans.g:1217:1: entryRuleGenClause : ruleGenClause EOF ;
    public final void entryRuleGenClause() throws RecognitionException {
        try {
            // InternalFortXTrans.g:1218:1: ( ruleGenClause EOF )
            // InternalFortXTrans.g:1219:1: ruleGenClause EOF
            {
             before(grammarAccess.getGenClauseRule()); 
            pushFollow(FOLLOW_1);
            ruleGenClause();

            state._fsp--;

             after(grammarAccess.getGenClauseRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleGenClause"


    // $ANTLR start "ruleGenClause"
    // InternalFortXTrans.g:1226:1: ruleGenClause : ( ( rule__GenClause__Alternatives ) ) ;
    public final void ruleGenClause() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1230:2: ( ( ( rule__GenClause__Alternatives ) ) )
            // InternalFortXTrans.g:1231:2: ( ( rule__GenClause__Alternatives ) )
            {
            // InternalFortXTrans.g:1231:2: ( ( rule__GenClause__Alternatives ) )
            // InternalFortXTrans.g:1232:3: ( rule__GenClause__Alternatives )
            {
             before(grammarAccess.getGenClauseAccess().getAlternatives()); 
            // InternalFortXTrans.g:1233:3: ( rule__GenClause__Alternatives )
            // InternalFortXTrans.g:1233:4: rule__GenClause__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__GenClause__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getGenClauseAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleGenClause"


    // $ANTLR start "entryRuleBlockElems"
    // InternalFortXTrans.g:1242:1: entryRuleBlockElems : ruleBlockElems EOF ;
    public final void entryRuleBlockElems() throws RecognitionException {
        try {
            // InternalFortXTrans.g:1243:1: ( ruleBlockElems EOF )
            // InternalFortXTrans.g:1244:1: ruleBlockElems EOF
            {
             before(grammarAccess.getBlockElemsRule()); 
            pushFollow(FOLLOW_1);
            ruleBlockElems();

            state._fsp--;

             after(grammarAccess.getBlockElemsRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleBlockElems"


    // $ANTLR start "ruleBlockElems"
    // InternalFortXTrans.g:1251:1: ruleBlockElems : ( ( rule__BlockElems__Group__0 ) ) ;
    public final void ruleBlockElems() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1255:2: ( ( ( rule__BlockElems__Group__0 ) ) )
            // InternalFortXTrans.g:1256:2: ( ( rule__BlockElems__Group__0 ) )
            {
            // InternalFortXTrans.g:1256:2: ( ( rule__BlockElems__Group__0 ) )
            // InternalFortXTrans.g:1257:3: ( rule__BlockElems__Group__0 )
            {
             before(grammarAccess.getBlockElemsAccess().getGroup()); 
            // InternalFortXTrans.g:1258:3: ( rule__BlockElems__Group__0 )
            // InternalFortXTrans.g:1258:4: rule__BlockElems__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__BlockElems__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getBlockElemsAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleBlockElems"


    // $ANTLR start "entryRuleBlockElem"
    // InternalFortXTrans.g:1267:1: entryRuleBlockElem : ruleBlockElem EOF ;
    public final void entryRuleBlockElem() throws RecognitionException {
        try {
            // InternalFortXTrans.g:1268:1: ( ruleBlockElem EOF )
            // InternalFortXTrans.g:1269:1: ruleBlockElem EOF
            {
             before(grammarAccess.getBlockElemRule()); 
            pushFollow(FOLLOW_1);
            ruleBlockElem();

            state._fsp--;

             after(grammarAccess.getBlockElemRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleBlockElem"


    // $ANTLR start "ruleBlockElem"
    // InternalFortXTrans.g:1276:1: ruleBlockElem : ( ( rule__BlockElem__StAssignment ) ) ;
    public final void ruleBlockElem() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1280:2: ( ( ( rule__BlockElem__StAssignment ) ) )
            // InternalFortXTrans.g:1281:2: ( ( rule__BlockElem__StAssignment ) )
            {
            // InternalFortXTrans.g:1281:2: ( ( rule__BlockElem__StAssignment ) )
            // InternalFortXTrans.g:1282:3: ( rule__BlockElem__StAssignment )
            {
             before(grammarAccess.getBlockElemAccess().getStAssignment()); 
            // InternalFortXTrans.g:1283:3: ( rule__BlockElem__StAssignment )
            // InternalFortXTrans.g:1283:4: rule__BlockElem__StAssignment
            {
            pushFollow(FOLLOW_2);
            rule__BlockElem__StAssignment();

            state._fsp--;


            }

             after(grammarAccess.getBlockElemAccess().getStAssignment()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleBlockElem"


    // $ANTLR start "entryRuleDo"
    // InternalFortXTrans.g:1292:1: entryRuleDo : ruleDo EOF ;
    public final void entryRuleDo() throws RecognitionException {
        try {
            // InternalFortXTrans.g:1293:1: ( ruleDo EOF )
            // InternalFortXTrans.g:1294:1: ruleDo EOF
            {
             before(grammarAccess.getDoRule()); 
            pushFollow(FOLLOW_1);
            ruleDo();

            state._fsp--;

             after(grammarAccess.getDoRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDo"


    // $ANTLR start "ruleDo"
    // InternalFortXTrans.g:1301:1: ruleDo : ( ( rule__Do__Group__0 ) ) ;
    public final void ruleDo() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1305:2: ( ( ( rule__Do__Group__0 ) ) )
            // InternalFortXTrans.g:1306:2: ( ( rule__Do__Group__0 ) )
            {
            // InternalFortXTrans.g:1306:2: ( ( rule__Do__Group__0 ) )
            // InternalFortXTrans.g:1307:3: ( rule__Do__Group__0 )
            {
             before(grammarAccess.getDoAccess().getGroup()); 
            // InternalFortXTrans.g:1308:3: ( rule__Do__Group__0 )
            // InternalFortXTrans.g:1308:4: rule__Do__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Do__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getDoAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDo"


    // $ANTLR start "entryRuleDoFront"
    // InternalFortXTrans.g:1317:1: entryRuleDoFront : ruleDoFront EOF ;
    public final void entryRuleDoFront() throws RecognitionException {
        try {
            // InternalFortXTrans.g:1318:1: ( ruleDoFront EOF )
            // InternalFortXTrans.g:1319:1: ruleDoFront EOF
            {
             before(grammarAccess.getDoFrontRule()); 
            pushFollow(FOLLOW_1);
            ruleDoFront();

            state._fsp--;

             after(grammarAccess.getDoFrontRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDoFront"


    // $ANTLR start "ruleDoFront"
    // InternalFortXTrans.g:1326:1: ruleDoFront : ( ( rule__DoFront__Group__0 ) ) ;
    public final void ruleDoFront() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1330:2: ( ( ( rule__DoFront__Group__0 ) ) )
            // InternalFortXTrans.g:1331:2: ( ( rule__DoFront__Group__0 ) )
            {
            // InternalFortXTrans.g:1331:2: ( ( rule__DoFront__Group__0 ) )
            // InternalFortXTrans.g:1332:3: ( rule__DoFront__Group__0 )
            {
             before(grammarAccess.getDoFrontAccess().getGroup()); 
            // InternalFortXTrans.g:1333:3: ( rule__DoFront__Group__0 )
            // InternalFortXTrans.g:1333:4: rule__DoFront__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__DoFront__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getDoFrontAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDoFront"


    // $ANTLR start "entryRuleIsType"
    // InternalFortXTrans.g:1342:1: entryRuleIsType : ruleIsType EOF ;
    public final void entryRuleIsType() throws RecognitionException {
        try {
            // InternalFortXTrans.g:1343:1: ( ruleIsType EOF )
            // InternalFortXTrans.g:1344:1: ruleIsType EOF
            {
             before(grammarAccess.getIsTypeRule()); 
            pushFollow(FOLLOW_1);
            ruleIsType();

            state._fsp--;

             after(grammarAccess.getIsTypeRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleIsType"


    // $ANTLR start "ruleIsType"
    // InternalFortXTrans.g:1351:1: ruleIsType : ( ( rule__IsType__Group__0 ) ) ;
    public final void ruleIsType() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1355:2: ( ( ( rule__IsType__Group__0 ) ) )
            // InternalFortXTrans.g:1356:2: ( ( rule__IsType__Group__0 ) )
            {
            // InternalFortXTrans.g:1356:2: ( ( rule__IsType__Group__0 ) )
            // InternalFortXTrans.g:1357:3: ( rule__IsType__Group__0 )
            {
             before(grammarAccess.getIsTypeAccess().getGroup()); 
            // InternalFortXTrans.g:1358:3: ( rule__IsType__Group__0 )
            // InternalFortXTrans.g:1358:4: rule__IsType__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__IsType__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getIsTypeAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleIsType"


    // $ANTLR start "entryRuleFieldDecl"
    // InternalFortXTrans.g:1367:1: entryRuleFieldDecl : ruleFieldDecl EOF ;
    public final void entryRuleFieldDecl() throws RecognitionException {
        try {
            // InternalFortXTrans.g:1368:1: ( ruleFieldDecl EOF )
            // InternalFortXTrans.g:1369:1: ruleFieldDecl EOF
            {
             before(grammarAccess.getFieldDeclRule()); 
            pushFollow(FOLLOW_1);
            ruleFieldDecl();

            state._fsp--;

             after(grammarAccess.getFieldDeclRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleFieldDecl"


    // $ANTLR start "ruleFieldDecl"
    // InternalFortXTrans.g:1376:1: ruleFieldDecl : ( ( rule__FieldDecl__Alternatives ) ) ;
    public final void ruleFieldDecl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1380:2: ( ( ( rule__FieldDecl__Alternatives ) ) )
            // InternalFortXTrans.g:1381:2: ( ( rule__FieldDecl__Alternatives ) )
            {
            // InternalFortXTrans.g:1381:2: ( ( rule__FieldDecl__Alternatives ) )
            // InternalFortXTrans.g:1382:3: ( rule__FieldDecl__Alternatives )
            {
             before(grammarAccess.getFieldDeclAccess().getAlternatives()); 
            // InternalFortXTrans.g:1383:3: ( rule__FieldDecl__Alternatives )
            // InternalFortXTrans.g:1383:4: rule__FieldDecl__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__FieldDecl__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getFieldDeclAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFieldDecl"


    // $ANTLR start "entryRuleNoNewlineVarWTypes"
    // InternalFortXTrans.g:1392:1: entryRuleNoNewlineVarWTypes : ruleNoNewlineVarWTypes EOF ;
    public final void entryRuleNoNewlineVarWTypes() throws RecognitionException {
        try {
            // InternalFortXTrans.g:1393:1: ( ruleNoNewlineVarWTypes EOF )
            // InternalFortXTrans.g:1394:1: ruleNoNewlineVarWTypes EOF
            {
             before(grammarAccess.getNoNewlineVarWTypesRule()); 
            pushFollow(FOLLOW_1);
            ruleNoNewlineVarWTypes();

            state._fsp--;

             after(grammarAccess.getNoNewlineVarWTypesRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleNoNewlineVarWTypes"


    // $ANTLR start "ruleNoNewlineVarWTypes"
    // InternalFortXTrans.g:1401:1: ruleNoNewlineVarWTypes : ( ( rule__NoNewlineVarWTypes__Alternatives ) ) ;
    public final void ruleNoNewlineVarWTypes() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1405:2: ( ( ( rule__NoNewlineVarWTypes__Alternatives ) ) )
            // InternalFortXTrans.g:1406:2: ( ( rule__NoNewlineVarWTypes__Alternatives ) )
            {
            // InternalFortXTrans.g:1406:2: ( ( rule__NoNewlineVarWTypes__Alternatives ) )
            // InternalFortXTrans.g:1407:3: ( rule__NoNewlineVarWTypes__Alternatives )
            {
             before(grammarAccess.getNoNewlineVarWTypesAccess().getAlternatives()); 
            // InternalFortXTrans.g:1408:3: ( rule__NoNewlineVarWTypes__Alternatives )
            // InternalFortXTrans.g:1408:4: rule__NoNewlineVarWTypes__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__NoNewlineVarWTypes__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getNoNewlineVarWTypesAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleNoNewlineVarWTypes"


    // $ANTLR start "entryRuleNoNewlineVarWType"
    // InternalFortXTrans.g:1417:1: entryRuleNoNewlineVarWType : ruleNoNewlineVarWType EOF ;
    public final void entryRuleNoNewlineVarWType() throws RecognitionException {
        try {
            // InternalFortXTrans.g:1418:1: ( ruleNoNewlineVarWType EOF )
            // InternalFortXTrans.g:1419:1: ruleNoNewlineVarWType EOF
            {
             before(grammarAccess.getNoNewlineVarWTypeRule()); 
            pushFollow(FOLLOW_1);
            ruleNoNewlineVarWType();

            state._fsp--;

             after(grammarAccess.getNoNewlineVarWTypeRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleNoNewlineVarWType"


    // $ANTLR start "ruleNoNewlineVarWType"
    // InternalFortXTrans.g:1426:1: ruleNoNewlineVarWType : ( ( rule__NoNewlineVarWType__Group__0 ) ) ;
    public final void ruleNoNewlineVarWType() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1430:2: ( ( ( rule__NoNewlineVarWType__Group__0 ) ) )
            // InternalFortXTrans.g:1431:2: ( ( rule__NoNewlineVarWType__Group__0 ) )
            {
            // InternalFortXTrans.g:1431:2: ( ( rule__NoNewlineVarWType__Group__0 ) )
            // InternalFortXTrans.g:1432:3: ( rule__NoNewlineVarWType__Group__0 )
            {
             before(grammarAccess.getNoNewlineVarWTypeAccess().getGroup()); 
            // InternalFortXTrans.g:1433:3: ( rule__NoNewlineVarWType__Group__0 )
            // InternalFortXTrans.g:1433:4: rule__NoNewlineVarWType__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__NoNewlineVarWType__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getNoNewlineVarWTypeAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleNoNewlineVarWType"


    // $ANTLR start "entryRuleLiteralTuple"
    // InternalFortXTrans.g:1442:1: entryRuleLiteralTuple : ruleLiteralTuple EOF ;
    public final void entryRuleLiteralTuple() throws RecognitionException {
        try {
            // InternalFortXTrans.g:1443:1: ( ruleLiteralTuple EOF )
            // InternalFortXTrans.g:1444:1: ruleLiteralTuple EOF
            {
             before(grammarAccess.getLiteralTupleRule()); 
            pushFollow(FOLLOW_1);
            ruleLiteralTuple();

            state._fsp--;

             after(grammarAccess.getLiteralTupleRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleLiteralTuple"


    // $ANTLR start "ruleLiteralTuple"
    // InternalFortXTrans.g:1451:1: ruleLiteralTuple : ( ( rule__LiteralTuple__Alternatives ) ) ;
    public final void ruleLiteralTuple() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1455:2: ( ( ( rule__LiteralTuple__Alternatives ) ) )
            // InternalFortXTrans.g:1456:2: ( ( rule__LiteralTuple__Alternatives ) )
            {
            // InternalFortXTrans.g:1456:2: ( ( rule__LiteralTuple__Alternatives ) )
            // InternalFortXTrans.g:1457:3: ( rule__LiteralTuple__Alternatives )
            {
             before(grammarAccess.getLiteralTupleAccess().getAlternatives()); 
            // InternalFortXTrans.g:1458:3: ( rule__LiteralTuple__Alternatives )
            // InternalFortXTrans.g:1458:4: rule__LiteralTuple__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__LiteralTuple__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getLiteralTupleAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleLiteralTuple"


    // $ANTLR start "entryRuleLiteralTup"
    // InternalFortXTrans.g:1467:1: entryRuleLiteralTup : ruleLiteralTup EOF ;
    public final void entryRuleLiteralTup() throws RecognitionException {
        try {
            // InternalFortXTrans.g:1468:1: ( ruleLiteralTup EOF )
            // InternalFortXTrans.g:1469:1: ruleLiteralTup EOF
            {
             before(grammarAccess.getLiteralTupRule()); 
            pushFollow(FOLLOW_1);
            ruleLiteralTup();

            state._fsp--;

             after(grammarAccess.getLiteralTupRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleLiteralTup"


    // $ANTLR start "ruleLiteralTup"
    // InternalFortXTrans.g:1476:1: ruleLiteralTup : ( ( rule__LiteralTup__Alternatives ) ) ;
    public final void ruleLiteralTup() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1480:2: ( ( ( rule__LiteralTup__Alternatives ) ) )
            // InternalFortXTrans.g:1481:2: ( ( rule__LiteralTup__Alternatives ) )
            {
            // InternalFortXTrans.g:1481:2: ( ( rule__LiteralTup__Alternatives ) )
            // InternalFortXTrans.g:1482:3: ( rule__LiteralTup__Alternatives )
            {
             before(grammarAccess.getLiteralTupAccess().getAlternatives()); 
            // InternalFortXTrans.g:1483:3: ( rule__LiteralTup__Alternatives )
            // InternalFortXTrans.g:1483:4: rule__LiteralTup__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__LiteralTup__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getLiteralTupAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleLiteralTup"


    // $ANTLR start "entryRuleLiteralList"
    // InternalFortXTrans.g:1492:1: entryRuleLiteralList : ruleLiteralList EOF ;
    public final void entryRuleLiteralList() throws RecognitionException {
        try {
            // InternalFortXTrans.g:1493:1: ( ruleLiteralList EOF )
            // InternalFortXTrans.g:1494:1: ruleLiteralList EOF
            {
             before(grammarAccess.getLiteralListRule()); 
            pushFollow(FOLLOW_1);
            ruleLiteralList();

            state._fsp--;

             after(grammarAccess.getLiteralListRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleLiteralList"


    // $ANTLR start "ruleLiteralList"
    // InternalFortXTrans.g:1501:1: ruleLiteralList : ( ( rule__LiteralList__Group__0 ) ) ;
    public final void ruleLiteralList() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1505:2: ( ( ( rule__LiteralList__Group__0 ) ) )
            // InternalFortXTrans.g:1506:2: ( ( rule__LiteralList__Group__0 ) )
            {
            // InternalFortXTrans.g:1506:2: ( ( rule__LiteralList__Group__0 ) )
            // InternalFortXTrans.g:1507:3: ( rule__LiteralList__Group__0 )
            {
             before(grammarAccess.getLiteralListAccess().getGroup()); 
            // InternalFortXTrans.g:1508:3: ( rule__LiteralList__Group__0 )
            // InternalFortXTrans.g:1508:4: rule__LiteralList__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__LiteralList__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getLiteralListAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleLiteralList"


    // $ANTLR start "entryRuleLiteral"
    // InternalFortXTrans.g:1517:1: entryRuleLiteral : ruleLiteral EOF ;
    public final void entryRuleLiteral() throws RecognitionException {
        try {
            // InternalFortXTrans.g:1518:1: ( ruleLiteral EOF )
            // InternalFortXTrans.g:1519:1: ruleLiteral EOF
            {
             before(grammarAccess.getLiteralRule()); 
            pushFollow(FOLLOW_1);
            ruleLiteral();

            state._fsp--;

             after(grammarAccess.getLiteralRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleLiteral"


    // $ANTLR start "ruleLiteral"
    // InternalFortXTrans.g:1526:1: ruleLiteral : ( ( rule__Literal__Alternatives ) ) ;
    public final void ruleLiteral() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1530:2: ( ( ( rule__Literal__Alternatives ) ) )
            // InternalFortXTrans.g:1531:2: ( ( rule__Literal__Alternatives ) )
            {
            // InternalFortXTrans.g:1531:2: ( ( rule__Literal__Alternatives ) )
            // InternalFortXTrans.g:1532:3: ( rule__Literal__Alternatives )
            {
             before(grammarAccess.getLiteralAccess().getAlternatives()); 
            // InternalFortXTrans.g:1533:3: ( rule__Literal__Alternatives )
            // InternalFortXTrans.g:1533:4: rule__Literal__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__Literal__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getLiteralAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleLiteral"


    // $ANTLR start "entryRuleLocalVarDecl"
    // InternalFortXTrans.g:1542:1: entryRuleLocalVarDecl : ruleLocalVarDecl EOF ;
    public final void entryRuleLocalVarDecl() throws RecognitionException {
        try {
            // InternalFortXTrans.g:1543:1: ( ruleLocalVarDecl EOF )
            // InternalFortXTrans.g:1544:1: ruleLocalVarDecl EOF
            {
             before(grammarAccess.getLocalVarDeclRule()); 
            pushFollow(FOLLOW_1);
            ruleLocalVarDecl();

            state._fsp--;

             after(grammarAccess.getLocalVarDeclRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleLocalVarDecl"


    // $ANTLR start "ruleLocalVarDecl"
    // InternalFortXTrans.g:1551:1: ruleLocalVarDecl : ( ( rule__LocalVarDecl__Alternatives ) ) ;
    public final void ruleLocalVarDecl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1555:2: ( ( ( rule__LocalVarDecl__Alternatives ) ) )
            // InternalFortXTrans.g:1556:2: ( ( rule__LocalVarDecl__Alternatives ) )
            {
            // InternalFortXTrans.g:1556:2: ( ( rule__LocalVarDecl__Alternatives ) )
            // InternalFortXTrans.g:1557:3: ( rule__LocalVarDecl__Alternatives )
            {
             before(grammarAccess.getLocalVarDeclAccess().getAlternatives()); 
            // InternalFortXTrans.g:1558:3: ( rule__LocalVarDecl__Alternatives )
            // InternalFortXTrans.g:1558:4: rule__LocalVarDecl__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__LocalVarDecl__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getLocalVarDeclAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleLocalVarDecl"


    // $ANTLR start "rule__Model__Alternatives"
    // InternalFortXTrans.g:1566:1: rule__Model__Alternatives : ( ( ruleComponent ) | ( ruleAPI ) );
    public final void rule__Model__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1570:1: ( ( ruleComponent ) | ( ruleAPI ) )
            int alt3=2;
            int LA3_0 = input.LA(1);

            if ( (LA3_0==25) ) {
                alt3=1;
            }
            else if ( (LA3_0==27) ) {
                alt3=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 3, 0, input);

                throw nvae;
            }
            switch (alt3) {
                case 1 :
                    // InternalFortXTrans.g:1571:2: ( ruleComponent )
                    {
                    // InternalFortXTrans.g:1571:2: ( ruleComponent )
                    // InternalFortXTrans.g:1572:3: ruleComponent
                    {
                     before(grammarAccess.getModelAccess().getComponentParserRuleCall_0()); 
                    pushFollow(FOLLOW_2);
                    ruleComponent();

                    state._fsp--;

                     after(grammarAccess.getModelAccess().getComponentParserRuleCall_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalFortXTrans.g:1577:2: ( ruleAPI )
                    {
                    // InternalFortXTrans.g:1577:2: ( ruleAPI )
                    // InternalFortXTrans.g:1578:3: ruleAPI
                    {
                     before(grammarAccess.getModelAccess().getAPIParserRuleCall_1()); 
                    pushFollow(FOLLOW_2);
                    ruleAPI();

                    state._fsp--;

                     after(grammarAccess.getModelAccess().getAPIParserRuleCall_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Model__Alternatives"


    // $ANTLR start "rule__Import__Alternatives"
    // InternalFortXTrans.g:1587:1: rule__Import__Alternatives : ( ( ( rule__Import__Group_0__0 ) ) | ( ( rule__Import__Group_1__0 ) ) );
    public final void rule__Import__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1591:1: ( ( ( rule__Import__Group_0__0 ) ) | ( ( rule__Import__Group_1__0 ) ) )
            int alt4=2;
            int LA4_0 = input.LA(1);

            if ( (LA4_0==55) ) {
                int LA4_1 = input.LA(2);

                if ( (LA4_1==27) ) {
                    alt4=2;
                }
                else if ( (LA4_1==RULE_ID) ) {
                    alt4=1;
                }
                else {
                    NoViableAltException nvae =
                        new NoViableAltException("", 4, 1, input);

                    throw nvae;
                }
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 4, 0, input);

                throw nvae;
            }
            switch (alt4) {
                case 1 :
                    // InternalFortXTrans.g:1592:2: ( ( rule__Import__Group_0__0 ) )
                    {
                    // InternalFortXTrans.g:1592:2: ( ( rule__Import__Group_0__0 ) )
                    // InternalFortXTrans.g:1593:3: ( rule__Import__Group_0__0 )
                    {
                     before(grammarAccess.getImportAccess().getGroup_0()); 
                    // InternalFortXTrans.g:1594:3: ( rule__Import__Group_0__0 )
                    // InternalFortXTrans.g:1594:4: rule__Import__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Import__Group_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getImportAccess().getGroup_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalFortXTrans.g:1598:2: ( ( rule__Import__Group_1__0 ) )
                    {
                    // InternalFortXTrans.g:1598:2: ( ( rule__Import__Group_1__0 ) )
                    // InternalFortXTrans.g:1599:3: ( rule__Import__Group_1__0 )
                    {
                     before(grammarAccess.getImportAccess().getGroup_1()); 
                    // InternalFortXTrans.g:1600:3: ( rule__Import__Group_1__0 )
                    // InternalFortXTrans.g:1600:4: rule__Import__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Import__Group_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getImportAccess().getGroup_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Import__Alternatives"


    // $ANTLR start "rule__Export__Alternatives"
    // InternalFortXTrans.g:1608:1: rule__Export__Alternatives : ( ( ( rule__Export__Group_0__0 ) ) | ( ( rule__Export__Group_1__0 ) ) );
    public final void rule__Export__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1612:1: ( ( ( rule__Export__Group_0__0 ) ) | ( ( rule__Export__Group_1__0 ) ) )
            int alt5=2;
            int LA5_0 = input.LA(1);

            if ( (LA5_0==56) ) {
                int LA5_1 = input.LA(2);

                if ( (LA5_1==31) ) {
                    alt5=2;
                }
                else if ( (LA5_1==RULE_ID) ) {
                    alt5=1;
                }
                else {
                    NoViableAltException nvae =
                        new NoViableAltException("", 5, 1, input);

                    throw nvae;
                }
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 5, 0, input);

                throw nvae;
            }
            switch (alt5) {
                case 1 :
                    // InternalFortXTrans.g:1613:2: ( ( rule__Export__Group_0__0 ) )
                    {
                    // InternalFortXTrans.g:1613:2: ( ( rule__Export__Group_0__0 ) )
                    // InternalFortXTrans.g:1614:3: ( rule__Export__Group_0__0 )
                    {
                     before(grammarAccess.getExportAccess().getGroup_0()); 
                    // InternalFortXTrans.g:1615:3: ( rule__Export__Group_0__0 )
                    // InternalFortXTrans.g:1615:4: rule__Export__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Export__Group_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getExportAccess().getGroup_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalFortXTrans.g:1619:2: ( ( rule__Export__Group_1__0 ) )
                    {
                    // InternalFortXTrans.g:1619:2: ( ( rule__Export__Group_1__0 ) )
                    // InternalFortXTrans.g:1620:3: ( rule__Export__Group_1__0 )
                    {
                     before(grammarAccess.getExportAccess().getGroup_1()); 
                    // InternalFortXTrans.g:1621:3: ( rule__Export__Group_1__0 )
                    // InternalFortXTrans.g:1621:4: rule__Export__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Export__Group_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getExportAccess().getGroup_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Export__Alternatives"


    // $ANTLR start "rule__ImportedNames__Alternatives"
    // InternalFortXTrans.g:1629:1: rule__ImportedNames__Alternatives : ( ( ( rule__ImportedNames__Group_0__0 ) ) | ( ( rule__ImportedNames__Group_1__0 ) ) | ( ( rule__ImportedNames__Group_2__0 ) ) );
    public final void rule__ImportedNames__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1633:1: ( ( ( rule__ImportedNames__Group_0__0 ) ) | ( ( rule__ImportedNames__Group_1__0 ) ) | ( ( rule__ImportedNames__Group_2__0 ) ) )
            int alt6=3;
            alt6 = dfa6.predict(input);
            switch (alt6) {
                case 1 :
                    // InternalFortXTrans.g:1634:2: ( ( rule__ImportedNames__Group_0__0 ) )
                    {
                    // InternalFortXTrans.g:1634:2: ( ( rule__ImportedNames__Group_0__0 ) )
                    // InternalFortXTrans.g:1635:3: ( rule__ImportedNames__Group_0__0 )
                    {
                     before(grammarAccess.getImportedNamesAccess().getGroup_0()); 
                    // InternalFortXTrans.g:1636:3: ( rule__ImportedNames__Group_0__0 )
                    // InternalFortXTrans.g:1636:4: rule__ImportedNames__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ImportedNames__Group_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getImportedNamesAccess().getGroup_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalFortXTrans.g:1640:2: ( ( rule__ImportedNames__Group_1__0 ) )
                    {
                    // InternalFortXTrans.g:1640:2: ( ( rule__ImportedNames__Group_1__0 ) )
                    // InternalFortXTrans.g:1641:3: ( rule__ImportedNames__Group_1__0 )
                    {
                     before(grammarAccess.getImportedNamesAccess().getGroup_1()); 
                    // InternalFortXTrans.g:1642:3: ( rule__ImportedNames__Group_1__0 )
                    // InternalFortXTrans.g:1642:4: rule__ImportedNames__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ImportedNames__Group_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getImportedNamesAccess().getGroup_1()); 

                    }


                    }
                    break;
                case 3 :
                    // InternalFortXTrans.g:1646:2: ( ( rule__ImportedNames__Group_2__0 ) )
                    {
                    // InternalFortXTrans.g:1646:2: ( ( rule__ImportedNames__Group_2__0 ) )
                    // InternalFortXTrans.g:1647:3: ( rule__ImportedNames__Group_2__0 )
                    {
                     before(grammarAccess.getImportedNamesAccess().getGroup_2()); 
                    // InternalFortXTrans.g:1648:3: ( rule__ImportedNames__Group_2__0 )
                    // InternalFortXTrans.g:1648:4: rule__ImportedNames__Group_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ImportedNames__Group_2__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getImportedNamesAccess().getGroup_2()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Alternatives"


    // $ANTLR start "rule__Qualified__Alternatives"
    // InternalFortXTrans.g:1656:1: rule__Qualified__Alternatives : ( ( ruleQualifiedName ) | ( ( rule__Qualified__Group_1__0 ) ) );
    public final void rule__Qualified__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1660:1: ( ( ruleQualifiedName ) | ( ( rule__Qualified__Group_1__0 ) ) )
            int alt7=2;
            int LA7_0 = input.LA(1);

            if ( (LA7_0==RULE_ID) ) {
                alt7=1;
            }
            else if ( (LA7_0==33) ) {
                alt7=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 7, 0, input);

                throw nvae;
            }
            switch (alt7) {
                case 1 :
                    // InternalFortXTrans.g:1661:2: ( ruleQualifiedName )
                    {
                    // InternalFortXTrans.g:1661:2: ( ruleQualifiedName )
                    // InternalFortXTrans.g:1662:3: ruleQualifiedName
                    {
                     before(grammarAccess.getQualifiedAccess().getQualifiedNameParserRuleCall_0()); 
                    pushFollow(FOLLOW_2);
                    ruleQualifiedName();

                    state._fsp--;

                     after(grammarAccess.getQualifiedAccess().getQualifiedNameParserRuleCall_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalFortXTrans.g:1667:2: ( ( rule__Qualified__Group_1__0 ) )
                    {
                    // InternalFortXTrans.g:1667:2: ( ( rule__Qualified__Group_1__0 ) )
                    // InternalFortXTrans.g:1668:3: ( rule__Qualified__Group_1__0 )
                    {
                     before(grammarAccess.getQualifiedAccess().getGroup_1()); 
                    // InternalFortXTrans.g:1669:3: ( rule__Qualified__Group_1__0 )
                    // InternalFortXTrans.g:1669:4: rule__Qualified__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Qualified__Group_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getQualifiedAccess().getGroup_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Qualified__Alternatives"


    // $ANTLR start "rule__SimpleNames__Alternatives"
    // InternalFortXTrans.g:1677:1: rule__SimpleNames__Alternatives : ( ( ( rule__SimpleNames__NameListAssignment_0 ) ) | ( ( rule__SimpleNames__Group_1__0 ) ) );
    public final void rule__SimpleNames__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1681:1: ( ( ( rule__SimpleNames__NameListAssignment_0 ) ) | ( ( rule__SimpleNames__Group_1__0 ) ) )
            int alt8=2;
            int LA8_0 = input.LA(1);

            if ( (LA8_0==RULE_ID) ) {
                alt8=1;
            }
            else if ( (LA8_0==31) ) {
                alt8=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 8, 0, input);

                throw nvae;
            }
            switch (alt8) {
                case 1 :
                    // InternalFortXTrans.g:1682:2: ( ( rule__SimpleNames__NameListAssignment_0 ) )
                    {
                    // InternalFortXTrans.g:1682:2: ( ( rule__SimpleNames__NameListAssignment_0 ) )
                    // InternalFortXTrans.g:1683:3: ( rule__SimpleNames__NameListAssignment_0 )
                    {
                     before(grammarAccess.getSimpleNamesAccess().getNameListAssignment_0()); 
                    // InternalFortXTrans.g:1684:3: ( rule__SimpleNames__NameListAssignment_0 )
                    // InternalFortXTrans.g:1684:4: rule__SimpleNames__NameListAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__SimpleNames__NameListAssignment_0();

                    state._fsp--;


                    }

                     after(grammarAccess.getSimpleNamesAccess().getNameListAssignment_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalFortXTrans.g:1688:2: ( ( rule__SimpleNames__Group_1__0 ) )
                    {
                    // InternalFortXTrans.g:1688:2: ( ( rule__SimpleNames__Group_1__0 ) )
                    // InternalFortXTrans.g:1689:3: ( rule__SimpleNames__Group_1__0 )
                    {
                     before(grammarAccess.getSimpleNamesAccess().getGroup_1()); 
                    // InternalFortXTrans.g:1690:3: ( rule__SimpleNames__Group_1__0 )
                    // InternalFortXTrans.g:1690:4: rule__SimpleNames__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__SimpleNames__Group_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getSimpleNamesAccess().getGroup_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleNames__Alternatives"


    // $ANTLR start "rule__AliasedAPINames__Alternatives"
    // InternalFortXTrans.g:1698:1: rule__AliasedAPINames__Alternatives : ( ( ( rule__AliasedAPINames__NameListAssignment_0 ) ) | ( ( rule__AliasedAPINames__Group_1__0 ) ) );
    public final void rule__AliasedAPINames__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1702:1: ( ( ( rule__AliasedAPINames__NameListAssignment_0 ) ) | ( ( rule__AliasedAPINames__Group_1__0 ) ) )
            int alt9=2;
            int LA9_0 = input.LA(1);

            if ( (LA9_0==RULE_ID) ) {
                alt9=1;
            }
            else if ( (LA9_0==31) ) {
                alt9=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 9, 0, input);

                throw nvae;
            }
            switch (alt9) {
                case 1 :
                    // InternalFortXTrans.g:1703:2: ( ( rule__AliasedAPINames__NameListAssignment_0 ) )
                    {
                    // InternalFortXTrans.g:1703:2: ( ( rule__AliasedAPINames__NameListAssignment_0 ) )
                    // InternalFortXTrans.g:1704:3: ( rule__AliasedAPINames__NameListAssignment_0 )
                    {
                     before(grammarAccess.getAliasedAPINamesAccess().getNameListAssignment_0()); 
                    // InternalFortXTrans.g:1705:3: ( rule__AliasedAPINames__NameListAssignment_0 )
                    // InternalFortXTrans.g:1705:4: rule__AliasedAPINames__NameListAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__AliasedAPINames__NameListAssignment_0();

                    state._fsp--;


                    }

                     after(grammarAccess.getAliasedAPINamesAccess().getNameListAssignment_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalFortXTrans.g:1709:2: ( ( rule__AliasedAPINames__Group_1__0 ) )
                    {
                    // InternalFortXTrans.g:1709:2: ( ( rule__AliasedAPINames__Group_1__0 ) )
                    // InternalFortXTrans.g:1710:3: ( rule__AliasedAPINames__Group_1__0 )
                    {
                     before(grammarAccess.getAliasedAPINamesAccess().getGroup_1()); 
                    // InternalFortXTrans.g:1711:3: ( rule__AliasedAPINames__Group_1__0 )
                    // InternalFortXTrans.g:1711:4: rule__AliasedAPINames__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__AliasedAPINames__Group_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getAliasedAPINamesAccess().getGroup_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedAPINames__Alternatives"


    // $ANTLR start "rule__Decl__Alternatives"
    // InternalFortXTrans.g:1719:1: rule__Decl__Alternatives : ( ( ( rule__Decl__FunctionAssignment_0 ) ) | ( ( rule__Decl__FieldAssignment_1 ) ) );
    public final void rule__Decl__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1723:1: ( ( ( rule__Decl__FunctionAssignment_0 ) ) | ( ( rule__Decl__FieldAssignment_1 ) ) )
            int alt10=2;
            switch ( input.LA(1) ) {
            case 58:
                {
                switch ( input.LA(2) ) {
                case 58:
                case 59:
                case 60:
                case 61:
                    {
                    alt10=1;
                    }
                    break;
                case RULE_ID:
                    {
                    int LA10_3 = input.LA(3);

                    if ( (LA10_3==RULE_DOTS||LA10_3==30||LA10_3==35||LA10_3==54) ) {
                        alt10=2;
                    }
                    else if ( (LA10_3==RULE_ID||LA10_3==33) ) {
                        alt10=1;
                    }
                    else {
                        NoViableAltException nvae =
                            new NoViableAltException("", 10, 3, input);

                        throw nvae;
                    }
                    }
                    break;
                case 33:
                case 70:
                    {
                    alt10=2;
                    }
                    break;
                default:
                    NoViableAltException nvae =
                        new NoViableAltException("", 10, 1, input);

                    throw nvae;
                }

                }
                break;
            case 59:
            case 60:
            case 61:
                {
                alt10=1;
                }
                break;
            case RULE_ID:
                {
                int LA10_3 = input.LA(2);

                if ( (LA10_3==RULE_DOTS||LA10_3==30||LA10_3==35||LA10_3==54) ) {
                    alt10=2;
                }
                else if ( (LA10_3==RULE_ID||LA10_3==33) ) {
                    alt10=1;
                }
                else {
                    NoViableAltException nvae =
                        new NoViableAltException("", 10, 3, input);

                    throw nvae;
                }
                }
                break;
            case 33:
            case 70:
                {
                alt10=2;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 10, 0, input);

                throw nvae;
            }

            switch (alt10) {
                case 1 :
                    // InternalFortXTrans.g:1724:2: ( ( rule__Decl__FunctionAssignment_0 ) )
                    {
                    // InternalFortXTrans.g:1724:2: ( ( rule__Decl__FunctionAssignment_0 ) )
                    // InternalFortXTrans.g:1725:3: ( rule__Decl__FunctionAssignment_0 )
                    {
                     before(grammarAccess.getDeclAccess().getFunctionAssignment_0()); 
                    // InternalFortXTrans.g:1726:3: ( rule__Decl__FunctionAssignment_0 )
                    // InternalFortXTrans.g:1726:4: rule__Decl__FunctionAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Decl__FunctionAssignment_0();

                    state._fsp--;


                    }

                     after(grammarAccess.getDeclAccess().getFunctionAssignment_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalFortXTrans.g:1730:2: ( ( rule__Decl__FieldAssignment_1 ) )
                    {
                    // InternalFortXTrans.g:1730:2: ( ( rule__Decl__FieldAssignment_1 ) )
                    // InternalFortXTrans.g:1731:3: ( rule__Decl__FieldAssignment_1 )
                    {
                     before(grammarAccess.getDeclAccess().getFieldAssignment_1()); 
                    // InternalFortXTrans.g:1732:3: ( rule__Decl__FieldAssignment_1 )
                    // InternalFortXTrans.g:1732:4: rule__Decl__FieldAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__Decl__FieldAssignment_1();

                    state._fsp--;


                    }

                     after(grammarAccess.getDeclAccess().getFieldAssignment_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Decl__Alternatives"


    // $ANTLR start "rule__ValParam__Alternatives"
    // InternalFortXTrans.g:1740:1: rule__ValParam__Alternatives : ( ( ( rule__ValParam__ParamsAssignment_0 ) ) | ( ( rule__ValParam__Group_1__0 ) ) );
    public final void rule__ValParam__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1744:1: ( ( ( rule__ValParam__ParamsAssignment_0 ) ) | ( ( rule__ValParam__Group_1__0 ) ) )
            int alt11=2;
            int LA11_0 = input.LA(1);

            if ( (LA11_0==RULE_ID) ) {
                alt11=1;
            }
            else if ( (LA11_0==33) ) {
                alt11=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 11, 0, input);

                throw nvae;
            }
            switch (alt11) {
                case 1 :
                    // InternalFortXTrans.g:1745:2: ( ( rule__ValParam__ParamsAssignment_0 ) )
                    {
                    // InternalFortXTrans.g:1745:2: ( ( rule__ValParam__ParamsAssignment_0 ) )
                    // InternalFortXTrans.g:1746:3: ( rule__ValParam__ParamsAssignment_0 )
                    {
                     before(grammarAccess.getValParamAccess().getParamsAssignment_0()); 
                    // InternalFortXTrans.g:1747:3: ( rule__ValParam__ParamsAssignment_0 )
                    // InternalFortXTrans.g:1747:4: rule__ValParam__ParamsAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ValParam__ParamsAssignment_0();

                    state._fsp--;


                    }

                     after(grammarAccess.getValParamAccess().getParamsAssignment_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalFortXTrans.g:1751:2: ( ( rule__ValParam__Group_1__0 ) )
                    {
                    // InternalFortXTrans.g:1751:2: ( ( rule__ValParam__Group_1__0 ) )
                    // InternalFortXTrans.g:1752:3: ( rule__ValParam__Group_1__0 )
                    {
                     before(grammarAccess.getValParamAccess().getGroup_1()); 
                    // InternalFortXTrans.g:1753:3: ( rule__ValParam__Group_1__0 )
                    // InternalFortXTrans.g:1753:4: rule__ValParam__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ValParam__Group_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getValParamAccess().getGroup_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValParam__Alternatives"


    // $ANTLR start "rule__RetType__Alternatives"
    // InternalFortXTrans.g:1761:1: rule__RetType__Alternatives : ( ( ( rule__RetType__Group_0__0 ) ) | ( ( rule__RetType__Group_1__0 ) ) );
    public final void rule__RetType__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1765:1: ( ( ( rule__RetType__Group_0__0 ) ) | ( ( rule__RetType__Group_1__0 ) ) )
            int alt12=2;
            int LA12_0 = input.LA(1);

            if ( (LA12_0==35) ) {
                int LA12_1 = input.LA(2);

                if ( (LA12_1==RULE_ID) ) {
                    alt12=2;
                }
                else if ( (LA12_1==33) ) {
                    alt12=1;
                }
                else {
                    NoViableAltException nvae =
                        new NoViableAltException("", 12, 1, input);

                    throw nvae;
                }
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 12, 0, input);

                throw nvae;
            }
            switch (alt12) {
                case 1 :
                    // InternalFortXTrans.g:1766:2: ( ( rule__RetType__Group_0__0 ) )
                    {
                    // InternalFortXTrans.g:1766:2: ( ( rule__RetType__Group_0__0 ) )
                    // InternalFortXTrans.g:1767:3: ( rule__RetType__Group_0__0 )
                    {
                     before(grammarAccess.getRetTypeAccess().getGroup_0()); 
                    // InternalFortXTrans.g:1768:3: ( rule__RetType__Group_0__0 )
                    // InternalFortXTrans.g:1768:4: rule__RetType__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__RetType__Group_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getRetTypeAccess().getGroup_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalFortXTrans.g:1772:2: ( ( rule__RetType__Group_1__0 ) )
                    {
                    // InternalFortXTrans.g:1772:2: ( ( rule__RetType__Group_1__0 ) )
                    // InternalFortXTrans.g:1773:3: ( rule__RetType__Group_1__0 )
                    {
                     before(grammarAccess.getRetTypeAccess().getGroup_1()); 
                    // InternalFortXTrans.g:1774:3: ( rule__RetType__Group_1__0 )
                    // InternalFortXTrans.g:1774:4: rule__RetType__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__RetType__Group_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getRetTypeAccess().getGroup_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RetType__Alternatives"


    // $ANTLR start "rule__FnMod__Alternatives"
    // InternalFortXTrans.g:1782:1: rule__FnMod__Alternatives : ( ( ( rule__FnMod__ModtypeAssignment_0 ) ) | ( ( rule__FnMod__ModtypeAssignment_1 ) ) | ( ( rule__FnMod__ModtypeAssignment_2 ) ) | ( ( rule__FnMod__ModtypeAssignment_3 ) ) );
    public final void rule__FnMod__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1786:1: ( ( ( rule__FnMod__ModtypeAssignment_0 ) ) | ( ( rule__FnMod__ModtypeAssignment_1 ) ) | ( ( rule__FnMod__ModtypeAssignment_2 ) ) | ( ( rule__FnMod__ModtypeAssignment_3 ) ) )
            int alt13=4;
            switch ( input.LA(1) ) {
            case 58:
                {
                alt13=1;
                }
                break;
            case 59:
                {
                alt13=2;
                }
                break;
            case 60:
                {
                alt13=3;
                }
                break;
            case 61:
                {
                alt13=4;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 13, 0, input);

                throw nvae;
            }

            switch (alt13) {
                case 1 :
                    // InternalFortXTrans.g:1787:2: ( ( rule__FnMod__ModtypeAssignment_0 ) )
                    {
                    // InternalFortXTrans.g:1787:2: ( ( rule__FnMod__ModtypeAssignment_0 ) )
                    // InternalFortXTrans.g:1788:3: ( rule__FnMod__ModtypeAssignment_0 )
                    {
                     before(grammarAccess.getFnModAccess().getModtypeAssignment_0()); 
                    // InternalFortXTrans.g:1789:3: ( rule__FnMod__ModtypeAssignment_0 )
                    // InternalFortXTrans.g:1789:4: rule__FnMod__ModtypeAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__FnMod__ModtypeAssignment_0();

                    state._fsp--;


                    }

                     after(grammarAccess.getFnModAccess().getModtypeAssignment_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalFortXTrans.g:1793:2: ( ( rule__FnMod__ModtypeAssignment_1 ) )
                    {
                    // InternalFortXTrans.g:1793:2: ( ( rule__FnMod__ModtypeAssignment_1 ) )
                    // InternalFortXTrans.g:1794:3: ( rule__FnMod__ModtypeAssignment_1 )
                    {
                     before(grammarAccess.getFnModAccess().getModtypeAssignment_1()); 
                    // InternalFortXTrans.g:1795:3: ( rule__FnMod__ModtypeAssignment_1 )
                    // InternalFortXTrans.g:1795:4: rule__FnMod__ModtypeAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__FnMod__ModtypeAssignment_1();

                    state._fsp--;


                    }

                     after(grammarAccess.getFnModAccess().getModtypeAssignment_1()); 

                    }


                    }
                    break;
                case 3 :
                    // InternalFortXTrans.g:1799:2: ( ( rule__FnMod__ModtypeAssignment_2 ) )
                    {
                    // InternalFortXTrans.g:1799:2: ( ( rule__FnMod__ModtypeAssignment_2 ) )
                    // InternalFortXTrans.g:1800:3: ( rule__FnMod__ModtypeAssignment_2 )
                    {
                     before(grammarAccess.getFnModAccess().getModtypeAssignment_2()); 
                    // InternalFortXTrans.g:1801:3: ( rule__FnMod__ModtypeAssignment_2 )
                    // InternalFortXTrans.g:1801:4: rule__FnMod__ModtypeAssignment_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__FnMod__ModtypeAssignment_2();

                    state._fsp--;


                    }

                     after(grammarAccess.getFnModAccess().getModtypeAssignment_2()); 

                    }


                    }
                    break;
                case 4 :
                    // InternalFortXTrans.g:1805:2: ( ( rule__FnMod__ModtypeAssignment_3 ) )
                    {
                    // InternalFortXTrans.g:1805:2: ( ( rule__FnMod__ModtypeAssignment_3 ) )
                    // InternalFortXTrans.g:1806:3: ( rule__FnMod__ModtypeAssignment_3 )
                    {
                     before(grammarAccess.getFnModAccess().getModtypeAssignment_3()); 
                    // InternalFortXTrans.g:1807:3: ( rule__FnMod__ModtypeAssignment_3 )
                    // InternalFortXTrans.g:1807:4: rule__FnMod__ModtypeAssignment_3
                    {
                    pushFollow(FOLLOW_2);
                    rule__FnMod__ModtypeAssignment_3();

                    state._fsp--;


                    }

                     after(grammarAccess.getFnModAccess().getModtypeAssignment_3()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FnMod__Alternatives"


    // $ANTLR start "rule__Stmnts__Alternatives"
    // InternalFortXTrans.g:1815:1: rule__Stmnts__Alternatives : ( ( ( rule__Stmnts__FrontAssignment_0 ) ) | ( ( rule__Stmnts__Group_1__0 ) ) | ( ( rule__Stmnts__LocVarAssignment_2 ) ) | ( ( rule__Stmnts__ExpAssignment_3 ) ) );
    public final void rule__Stmnts__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1819:1: ( ( ( rule__Stmnts__FrontAssignment_0 ) ) | ( ( rule__Stmnts__Group_1__0 ) ) | ( ( rule__Stmnts__LocVarAssignment_2 ) ) | ( ( rule__Stmnts__ExpAssignment_3 ) ) )
            int alt14=4;
            alt14 = dfa14.predict(input);
            switch (alt14) {
                case 1 :
                    // InternalFortXTrans.g:1820:2: ( ( rule__Stmnts__FrontAssignment_0 ) )
                    {
                    // InternalFortXTrans.g:1820:2: ( ( rule__Stmnts__FrontAssignment_0 ) )
                    // InternalFortXTrans.g:1821:3: ( rule__Stmnts__FrontAssignment_0 )
                    {
                     before(grammarAccess.getStmntsAccess().getFrontAssignment_0()); 
                    // InternalFortXTrans.g:1822:3: ( rule__Stmnts__FrontAssignment_0 )
                    // InternalFortXTrans.g:1822:4: rule__Stmnts__FrontAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Stmnts__FrontAssignment_0();

                    state._fsp--;


                    }

                     after(grammarAccess.getStmntsAccess().getFrontAssignment_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalFortXTrans.g:1826:2: ( ( rule__Stmnts__Group_1__0 ) )
                    {
                    // InternalFortXTrans.g:1826:2: ( ( rule__Stmnts__Group_1__0 ) )
                    // InternalFortXTrans.g:1827:3: ( rule__Stmnts__Group_1__0 )
                    {
                     before(grammarAccess.getStmntsAccess().getGroup_1()); 
                    // InternalFortXTrans.g:1828:3: ( rule__Stmnts__Group_1__0 )
                    // InternalFortXTrans.g:1828:4: rule__Stmnts__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Stmnts__Group_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getStmntsAccess().getGroup_1()); 

                    }


                    }
                    break;
                case 3 :
                    // InternalFortXTrans.g:1832:2: ( ( rule__Stmnts__LocVarAssignment_2 ) )
                    {
                    // InternalFortXTrans.g:1832:2: ( ( rule__Stmnts__LocVarAssignment_2 ) )
                    // InternalFortXTrans.g:1833:3: ( rule__Stmnts__LocVarAssignment_2 )
                    {
                     before(grammarAccess.getStmntsAccess().getLocVarAssignment_2()); 
                    // InternalFortXTrans.g:1834:3: ( rule__Stmnts__LocVarAssignment_2 )
                    // InternalFortXTrans.g:1834:4: rule__Stmnts__LocVarAssignment_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__Stmnts__LocVarAssignment_2();

                    state._fsp--;


                    }

                     after(grammarAccess.getStmntsAccess().getLocVarAssignment_2()); 

                    }


                    }
                    break;
                case 4 :
                    // InternalFortXTrans.g:1838:2: ( ( rule__Stmnts__ExpAssignment_3 ) )
                    {
                    // InternalFortXTrans.g:1838:2: ( ( rule__Stmnts__ExpAssignment_3 ) )
                    // InternalFortXTrans.g:1839:3: ( rule__Stmnts__ExpAssignment_3 )
                    {
                     before(grammarAccess.getStmntsAccess().getExpAssignment_3()); 
                    // InternalFortXTrans.g:1840:3: ( rule__Stmnts__ExpAssignment_3 )
                    // InternalFortXTrans.g:1840:4: rule__Stmnts__ExpAssignment_3
                    {
                    pushFollow(FOLLOW_2);
                    rule__Stmnts__ExpAssignment_3();

                    state._fsp--;


                    }

                     after(grammarAccess.getStmntsAccess().getExpAssignment_3()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Stmnts__Alternatives"


    // $ANTLR start "rule__Equality__OpAlternatives_1_1_0"
    // InternalFortXTrans.g:1848:1: rule__Equality__OpAlternatives_1_1_0 : ( ( '===' ) | ( '=/=' ) | ( 'EQ' ) | ( 'NE' ) );
    public final void rule__Equality__OpAlternatives_1_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1852:1: ( ( '===' ) | ( '=/=' ) | ( 'EQ' ) | ( 'NE' ) )
            int alt15=4;
            switch ( input.LA(1) ) {
            case 13:
                {
                alt15=1;
                }
                break;
            case 14:
                {
                alt15=2;
                }
                break;
            case 15:
                {
                alt15=3;
                }
                break;
            case 16:
                {
                alt15=4;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 15, 0, input);

                throw nvae;
            }

            switch (alt15) {
                case 1 :
                    // InternalFortXTrans.g:1853:2: ( '===' )
                    {
                    // InternalFortXTrans.g:1853:2: ( '===' )
                    // InternalFortXTrans.g:1854:3: '==='
                    {
                     before(grammarAccess.getEqualityAccess().getOpEqualsSignEqualsSignEqualsSignKeyword_1_1_0_0()); 
                    match(input,13,FOLLOW_2); 
                     after(grammarAccess.getEqualityAccess().getOpEqualsSignEqualsSignEqualsSignKeyword_1_1_0_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalFortXTrans.g:1859:2: ( '=/=' )
                    {
                    // InternalFortXTrans.g:1859:2: ( '=/=' )
                    // InternalFortXTrans.g:1860:3: '=/='
                    {
                     before(grammarAccess.getEqualityAccess().getOpEqualsSignSolidusEqualsSignKeyword_1_1_0_1()); 
                    match(input,14,FOLLOW_2); 
                     after(grammarAccess.getEqualityAccess().getOpEqualsSignSolidusEqualsSignKeyword_1_1_0_1()); 

                    }


                    }
                    break;
                case 3 :
                    // InternalFortXTrans.g:1865:2: ( 'EQ' )
                    {
                    // InternalFortXTrans.g:1865:2: ( 'EQ' )
                    // InternalFortXTrans.g:1866:3: 'EQ'
                    {
                     before(grammarAccess.getEqualityAccess().getOpEQKeyword_1_1_0_2()); 
                    match(input,15,FOLLOW_2); 
                     after(grammarAccess.getEqualityAccess().getOpEQKeyword_1_1_0_2()); 

                    }


                    }
                    break;
                case 4 :
                    // InternalFortXTrans.g:1871:2: ( 'NE' )
                    {
                    // InternalFortXTrans.g:1871:2: ( 'NE' )
                    // InternalFortXTrans.g:1872:3: 'NE'
                    {
                     before(grammarAccess.getEqualityAccess().getOpNEKeyword_1_1_0_3()); 
                    match(input,16,FOLLOW_2); 
                     after(grammarAccess.getEqualityAccess().getOpNEKeyword_1_1_0_3()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equality__OpAlternatives_1_1_0"


    // $ANTLR start "rule__Comparison__OpAlternatives_1_1_0"
    // InternalFortXTrans.g:1881:1: rule__Comparison__OpAlternatives_1_1_0 : ( ( '>=' ) | ( '<=' ) | ( '>' ) | ( '<' ) | ( 'LT' ) | ( 'GT' ) | ( 'LE' ) | ( 'GE' ) );
    public final void rule__Comparison__OpAlternatives_1_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1885:1: ( ( '>=' ) | ( '<=' ) | ( '>' ) | ( '<' ) | ( 'LT' ) | ( 'GT' ) | ( 'LE' ) | ( 'GE' ) )
            int alt16=8;
            switch ( input.LA(1) ) {
            case 17:
                {
                alt16=1;
                }
                break;
            case 18:
                {
                alt16=2;
                }
                break;
            case 19:
                {
                alt16=3;
                }
                break;
            case 20:
                {
                alt16=4;
                }
                break;
            case 21:
                {
                alt16=5;
                }
                break;
            case 22:
                {
                alt16=6;
                }
                break;
            case 23:
                {
                alt16=7;
                }
                break;
            case 24:
                {
                alt16=8;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 16, 0, input);

                throw nvae;
            }

            switch (alt16) {
                case 1 :
                    // InternalFortXTrans.g:1886:2: ( '>=' )
                    {
                    // InternalFortXTrans.g:1886:2: ( '>=' )
                    // InternalFortXTrans.g:1887:3: '>='
                    {
                     before(grammarAccess.getComparisonAccess().getOpGreaterThanSignEqualsSignKeyword_1_1_0_0()); 
                    match(input,17,FOLLOW_2); 
                     after(grammarAccess.getComparisonAccess().getOpGreaterThanSignEqualsSignKeyword_1_1_0_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalFortXTrans.g:1892:2: ( '<=' )
                    {
                    // InternalFortXTrans.g:1892:2: ( '<=' )
                    // InternalFortXTrans.g:1893:3: '<='
                    {
                     before(grammarAccess.getComparisonAccess().getOpLessThanSignEqualsSignKeyword_1_1_0_1()); 
                    match(input,18,FOLLOW_2); 
                     after(grammarAccess.getComparisonAccess().getOpLessThanSignEqualsSignKeyword_1_1_0_1()); 

                    }


                    }
                    break;
                case 3 :
                    // InternalFortXTrans.g:1898:2: ( '>' )
                    {
                    // InternalFortXTrans.g:1898:2: ( '>' )
                    // InternalFortXTrans.g:1899:3: '>'
                    {
                     before(grammarAccess.getComparisonAccess().getOpGreaterThanSignKeyword_1_1_0_2()); 
                    match(input,19,FOLLOW_2); 
                     after(grammarAccess.getComparisonAccess().getOpGreaterThanSignKeyword_1_1_0_2()); 

                    }


                    }
                    break;
                case 4 :
                    // InternalFortXTrans.g:1904:2: ( '<' )
                    {
                    // InternalFortXTrans.g:1904:2: ( '<' )
                    // InternalFortXTrans.g:1905:3: '<'
                    {
                     before(grammarAccess.getComparisonAccess().getOpLessThanSignKeyword_1_1_0_3()); 
                    match(input,20,FOLLOW_2); 
                     after(grammarAccess.getComparisonAccess().getOpLessThanSignKeyword_1_1_0_3()); 

                    }


                    }
                    break;
                case 5 :
                    // InternalFortXTrans.g:1910:2: ( 'LT' )
                    {
                    // InternalFortXTrans.g:1910:2: ( 'LT' )
                    // InternalFortXTrans.g:1911:3: 'LT'
                    {
                     before(grammarAccess.getComparisonAccess().getOpLTKeyword_1_1_0_4()); 
                    match(input,21,FOLLOW_2); 
                     after(grammarAccess.getComparisonAccess().getOpLTKeyword_1_1_0_4()); 

                    }


                    }
                    break;
                case 6 :
                    // InternalFortXTrans.g:1916:2: ( 'GT' )
                    {
                    // InternalFortXTrans.g:1916:2: ( 'GT' )
                    // InternalFortXTrans.g:1917:3: 'GT'
                    {
                     before(grammarAccess.getComparisonAccess().getOpGTKeyword_1_1_0_5()); 
                    match(input,22,FOLLOW_2); 
                     after(grammarAccess.getComparisonAccess().getOpGTKeyword_1_1_0_5()); 

                    }


                    }
                    break;
                case 7 :
                    // InternalFortXTrans.g:1922:2: ( 'LE' )
                    {
                    // InternalFortXTrans.g:1922:2: ( 'LE' )
                    // InternalFortXTrans.g:1923:3: 'LE'
                    {
                     before(grammarAccess.getComparisonAccess().getOpLEKeyword_1_1_0_6()); 
                    match(input,23,FOLLOW_2); 
                     after(grammarAccess.getComparisonAccess().getOpLEKeyword_1_1_0_6()); 

                    }


                    }
                    break;
                case 8 :
                    // InternalFortXTrans.g:1928:2: ( 'GE' )
                    {
                    // InternalFortXTrans.g:1928:2: ( 'GE' )
                    // InternalFortXTrans.g:1929:3: 'GE'
                    {
                     before(grammarAccess.getComparisonAccess().getOpGEKeyword_1_1_0_7()); 
                    match(input,24,FOLLOW_2); 
                     after(grammarAccess.getComparisonAccess().getOpGEKeyword_1_1_0_7()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__OpAlternatives_1_1_0"


    // $ANTLR start "rule__Primary__Alternatives"
    // InternalFortXTrans.g:1938:1: rule__Primary__Alternatives : ( ( ( rule__Primary__Group_0__0 ) ) | ( ( rule__Primary__Group_1__0 ) ) | ( ( rule__Primary__Group_2__0 ) ) | ( ( rule__Primary__Group_3__0 ) ) );
    public final void rule__Primary__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1942:1: ( ( ( rule__Primary__Group_0__0 ) ) | ( ( rule__Primary__Group_1__0 ) ) | ( ( rule__Primary__Group_2__0 ) ) | ( ( rule__Primary__Group_3__0 ) ) )
            int alt17=4;
            alt17 = dfa17.predict(input);
            switch (alt17) {
                case 1 :
                    // InternalFortXTrans.g:1943:2: ( ( rule__Primary__Group_0__0 ) )
                    {
                    // InternalFortXTrans.g:1943:2: ( ( rule__Primary__Group_0__0 ) )
                    // InternalFortXTrans.g:1944:3: ( rule__Primary__Group_0__0 )
                    {
                     before(grammarAccess.getPrimaryAccess().getGroup_0()); 
                    // InternalFortXTrans.g:1945:3: ( rule__Primary__Group_0__0 )
                    // InternalFortXTrans.g:1945:4: rule__Primary__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Primary__Group_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getPrimaryAccess().getGroup_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalFortXTrans.g:1949:2: ( ( rule__Primary__Group_1__0 ) )
                    {
                    // InternalFortXTrans.g:1949:2: ( ( rule__Primary__Group_1__0 ) )
                    // InternalFortXTrans.g:1950:3: ( rule__Primary__Group_1__0 )
                    {
                     before(grammarAccess.getPrimaryAccess().getGroup_1()); 
                    // InternalFortXTrans.g:1951:3: ( rule__Primary__Group_1__0 )
                    // InternalFortXTrans.g:1951:4: rule__Primary__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Primary__Group_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getPrimaryAccess().getGroup_1()); 

                    }


                    }
                    break;
                case 3 :
                    // InternalFortXTrans.g:1955:2: ( ( rule__Primary__Group_2__0 ) )
                    {
                    // InternalFortXTrans.g:1955:2: ( ( rule__Primary__Group_2__0 ) )
                    // InternalFortXTrans.g:1956:3: ( rule__Primary__Group_2__0 )
                    {
                     before(grammarAccess.getPrimaryAccess().getGroup_2()); 
                    // InternalFortXTrans.g:1957:3: ( rule__Primary__Group_2__0 )
                    // InternalFortXTrans.g:1957:4: rule__Primary__Group_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Primary__Group_2__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getPrimaryAccess().getGroup_2()); 

                    }


                    }
                    break;
                case 4 :
                    // InternalFortXTrans.g:1961:2: ( ( rule__Primary__Group_3__0 ) )
                    {
                    // InternalFortXTrans.g:1961:2: ( ( rule__Primary__Group_3__0 ) )
                    // InternalFortXTrans.g:1962:3: ( rule__Primary__Group_3__0 )
                    {
                     before(grammarAccess.getPrimaryAccess().getGroup_3()); 
                    // InternalFortXTrans.g:1963:3: ( rule__Primary__Group_3__0 )
                    // InternalFortXTrans.g:1963:4: rule__Primary__Group_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Primary__Group_3__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getPrimaryAccess().getGroup_3()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Alternatives"


    // $ANTLR start "rule__DelimitedExpr__Alternatives"
    // InternalFortXTrans.g:1971:1: rule__DelimitedExpr__Alternatives : ( ( ( rule__DelimitedExpr__DodAssignment_0 ) ) | ( ( rule__DelimitedExpr__Group_1__0 ) ) | ( ( rule__DelimitedExpr__Group_2__0 ) ) | ( ( rule__DelimitedExpr__Group_3__0 ) ) | ( ( rule__DelimitedExpr__Group_4__0 ) ) );
    public final void rule__DelimitedExpr__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:1975:1: ( ( ( rule__DelimitedExpr__DodAssignment_0 ) ) | ( ( rule__DelimitedExpr__Group_1__0 ) ) | ( ( rule__DelimitedExpr__Group_2__0 ) ) | ( ( rule__DelimitedExpr__Group_3__0 ) ) | ( ( rule__DelimitedExpr__Group_4__0 ) ) )
            int alt18=5;
            switch ( input.LA(1) ) {
            case 53:
            case 60:
            case 69:
                {
                alt18=1;
                }
                break;
            case 64:
                {
                alt18=2;
                }
                break;
            case 65:
                {
                alt18=3;
                }
                break;
            case 66:
                {
                alt18=4;
                }
                break;
            case 67:
                {
                alt18=5;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 18, 0, input);

                throw nvae;
            }

            switch (alt18) {
                case 1 :
                    // InternalFortXTrans.g:1976:2: ( ( rule__DelimitedExpr__DodAssignment_0 ) )
                    {
                    // InternalFortXTrans.g:1976:2: ( ( rule__DelimitedExpr__DodAssignment_0 ) )
                    // InternalFortXTrans.g:1977:3: ( rule__DelimitedExpr__DodAssignment_0 )
                    {
                     before(grammarAccess.getDelimitedExprAccess().getDodAssignment_0()); 
                    // InternalFortXTrans.g:1978:3: ( rule__DelimitedExpr__DodAssignment_0 )
                    // InternalFortXTrans.g:1978:4: rule__DelimitedExpr__DodAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__DelimitedExpr__DodAssignment_0();

                    state._fsp--;


                    }

                     after(grammarAccess.getDelimitedExprAccess().getDodAssignment_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalFortXTrans.g:1982:2: ( ( rule__DelimitedExpr__Group_1__0 ) )
                    {
                    // InternalFortXTrans.g:1982:2: ( ( rule__DelimitedExpr__Group_1__0 ) )
                    // InternalFortXTrans.g:1983:3: ( rule__DelimitedExpr__Group_1__0 )
                    {
                     before(grammarAccess.getDelimitedExprAccess().getGroup_1()); 
                    // InternalFortXTrans.g:1984:3: ( rule__DelimitedExpr__Group_1__0 )
                    // InternalFortXTrans.g:1984:4: rule__DelimitedExpr__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__DelimitedExpr__Group_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getDelimitedExprAccess().getGroup_1()); 

                    }


                    }
                    break;
                case 3 :
                    // InternalFortXTrans.g:1988:2: ( ( rule__DelimitedExpr__Group_2__0 ) )
                    {
                    // InternalFortXTrans.g:1988:2: ( ( rule__DelimitedExpr__Group_2__0 ) )
                    // InternalFortXTrans.g:1989:3: ( rule__DelimitedExpr__Group_2__0 )
                    {
                     before(grammarAccess.getDelimitedExprAccess().getGroup_2()); 
                    // InternalFortXTrans.g:1990:3: ( rule__DelimitedExpr__Group_2__0 )
                    // InternalFortXTrans.g:1990:4: rule__DelimitedExpr__Group_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__DelimitedExpr__Group_2__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getDelimitedExprAccess().getGroup_2()); 

                    }


                    }
                    break;
                case 4 :
                    // InternalFortXTrans.g:1994:2: ( ( rule__DelimitedExpr__Group_3__0 ) )
                    {
                    // InternalFortXTrans.g:1994:2: ( ( rule__DelimitedExpr__Group_3__0 ) )
                    // InternalFortXTrans.g:1995:3: ( rule__DelimitedExpr__Group_3__0 )
                    {
                     before(grammarAccess.getDelimitedExprAccess().getGroup_3()); 
                    // InternalFortXTrans.g:1996:3: ( rule__DelimitedExpr__Group_3__0 )
                    // InternalFortXTrans.g:1996:4: rule__DelimitedExpr__Group_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__DelimitedExpr__Group_3__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getDelimitedExprAccess().getGroup_3()); 

                    }


                    }
                    break;
                case 5 :
                    // InternalFortXTrans.g:2000:2: ( ( rule__DelimitedExpr__Group_4__0 ) )
                    {
                    // InternalFortXTrans.g:2000:2: ( ( rule__DelimitedExpr__Group_4__0 ) )
                    // InternalFortXTrans.g:2001:3: ( rule__DelimitedExpr__Group_4__0 )
                    {
                     before(grammarAccess.getDelimitedExprAccess().getGroup_4()); 
                    // InternalFortXTrans.g:2002:3: ( rule__DelimitedExpr__Group_4__0 )
                    // InternalFortXTrans.g:2002:4: rule__DelimitedExpr__Group_4__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__DelimitedExpr__Group_4__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getDelimitedExprAccess().getGroup_4()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Alternatives"


    // $ANTLR start "rule__Binding__Alternatives"
    // InternalFortXTrans.g:2010:1: rule__Binding__Alternatives : ( ( ( rule__Binding__Group_0__0 ) ) | ( ( rule__Binding__Group_1__0 ) ) );
    public final void rule__Binding__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2014:1: ( ( ( rule__Binding__Group_0__0 ) ) | ( ( rule__Binding__Group_1__0 ) ) )
            int alt19=2;
            alt19 = dfa19.predict(input);
            switch (alt19) {
                case 1 :
                    // InternalFortXTrans.g:2015:2: ( ( rule__Binding__Group_0__0 ) )
                    {
                    // InternalFortXTrans.g:2015:2: ( ( rule__Binding__Group_0__0 ) )
                    // InternalFortXTrans.g:2016:3: ( rule__Binding__Group_0__0 )
                    {
                     before(grammarAccess.getBindingAccess().getGroup_0()); 
                    // InternalFortXTrans.g:2017:3: ( rule__Binding__Group_0__0 )
                    // InternalFortXTrans.g:2017:4: rule__Binding__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Binding__Group_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getBindingAccess().getGroup_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalFortXTrans.g:2021:2: ( ( rule__Binding__Group_1__0 ) )
                    {
                    // InternalFortXTrans.g:2021:2: ( ( rule__Binding__Group_1__0 ) )
                    // InternalFortXTrans.g:2022:3: ( rule__Binding__Group_1__0 )
                    {
                     before(grammarAccess.getBindingAccess().getGroup_1()); 
                    // InternalFortXTrans.g:2023:3: ( rule__Binding__Group_1__0 )
                    // InternalFortXTrans.g:2023:4: rule__Binding__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Binding__Group_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getBindingAccess().getGroup_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Binding__Alternatives"


    // $ANTLR start "rule__GenClause__Alternatives"
    // InternalFortXTrans.g:2031:1: rule__GenClause__Alternatives : ( ( ( rule__GenClause__BindingAssignment_0 ) ) | ( ( rule__GenClause__ExprAssignment_1 ) ) );
    public final void rule__GenClause__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2035:1: ( ( ( rule__GenClause__BindingAssignment_0 ) ) | ( ( rule__GenClause__ExprAssignment_1 ) ) )
            int alt20=2;
            alt20 = dfa20.predict(input);
            switch (alt20) {
                case 1 :
                    // InternalFortXTrans.g:2036:2: ( ( rule__GenClause__BindingAssignment_0 ) )
                    {
                    // InternalFortXTrans.g:2036:2: ( ( rule__GenClause__BindingAssignment_0 ) )
                    // InternalFortXTrans.g:2037:3: ( rule__GenClause__BindingAssignment_0 )
                    {
                     before(grammarAccess.getGenClauseAccess().getBindingAssignment_0()); 
                    // InternalFortXTrans.g:2038:3: ( rule__GenClause__BindingAssignment_0 )
                    // InternalFortXTrans.g:2038:4: rule__GenClause__BindingAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__GenClause__BindingAssignment_0();

                    state._fsp--;


                    }

                     after(grammarAccess.getGenClauseAccess().getBindingAssignment_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalFortXTrans.g:2042:2: ( ( rule__GenClause__ExprAssignment_1 ) )
                    {
                    // InternalFortXTrans.g:2042:2: ( ( rule__GenClause__ExprAssignment_1 ) )
                    // InternalFortXTrans.g:2043:3: ( rule__GenClause__ExprAssignment_1 )
                    {
                     before(grammarAccess.getGenClauseAccess().getExprAssignment_1()); 
                    // InternalFortXTrans.g:2044:3: ( rule__GenClause__ExprAssignment_1 )
                    // InternalFortXTrans.g:2044:4: rule__GenClause__ExprAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__GenClause__ExprAssignment_1();

                    state._fsp--;


                    }

                     after(grammarAccess.getGenClauseAccess().getExprAssignment_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GenClause__Alternatives"


    // $ANTLR start "rule__FieldDecl__Alternatives"
    // InternalFortXTrans.g:2052:1: rule__FieldDecl__Alternatives : ( ( ( rule__FieldDecl__Group_0__0 ) ) | ( ( rule__FieldDecl__Group_1__0 ) ) | ( ( rule__FieldDecl__Group_2__0 ) ) | ( ( rule__FieldDecl__Group_3__0 ) ) );
    public final void rule__FieldDecl__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2056:1: ( ( ( rule__FieldDecl__Group_0__0 ) ) | ( ( rule__FieldDecl__Group_1__0 ) ) | ( ( rule__FieldDecl__Group_2__0 ) ) | ( ( rule__FieldDecl__Group_3__0 ) ) )
            int alt21=4;
            alt21 = dfa21.predict(input);
            switch (alt21) {
                case 1 :
                    // InternalFortXTrans.g:2057:2: ( ( rule__FieldDecl__Group_0__0 ) )
                    {
                    // InternalFortXTrans.g:2057:2: ( ( rule__FieldDecl__Group_0__0 ) )
                    // InternalFortXTrans.g:2058:3: ( rule__FieldDecl__Group_0__0 )
                    {
                     before(grammarAccess.getFieldDeclAccess().getGroup_0()); 
                    // InternalFortXTrans.g:2059:3: ( rule__FieldDecl__Group_0__0 )
                    // InternalFortXTrans.g:2059:4: rule__FieldDecl__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__FieldDecl__Group_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getFieldDeclAccess().getGroup_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalFortXTrans.g:2063:2: ( ( rule__FieldDecl__Group_1__0 ) )
                    {
                    // InternalFortXTrans.g:2063:2: ( ( rule__FieldDecl__Group_1__0 ) )
                    // InternalFortXTrans.g:2064:3: ( rule__FieldDecl__Group_1__0 )
                    {
                     before(grammarAccess.getFieldDeclAccess().getGroup_1()); 
                    // InternalFortXTrans.g:2065:3: ( rule__FieldDecl__Group_1__0 )
                    // InternalFortXTrans.g:2065:4: rule__FieldDecl__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__FieldDecl__Group_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getFieldDeclAccess().getGroup_1()); 

                    }


                    }
                    break;
                case 3 :
                    // InternalFortXTrans.g:2069:2: ( ( rule__FieldDecl__Group_2__0 ) )
                    {
                    // InternalFortXTrans.g:2069:2: ( ( rule__FieldDecl__Group_2__0 ) )
                    // InternalFortXTrans.g:2070:3: ( rule__FieldDecl__Group_2__0 )
                    {
                     before(grammarAccess.getFieldDeclAccess().getGroup_2()); 
                    // InternalFortXTrans.g:2071:3: ( rule__FieldDecl__Group_2__0 )
                    // InternalFortXTrans.g:2071:4: rule__FieldDecl__Group_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__FieldDecl__Group_2__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getFieldDeclAccess().getGroup_2()); 

                    }


                    }
                    break;
                case 4 :
                    // InternalFortXTrans.g:2075:2: ( ( rule__FieldDecl__Group_3__0 ) )
                    {
                    // InternalFortXTrans.g:2075:2: ( ( rule__FieldDecl__Group_3__0 ) )
                    // InternalFortXTrans.g:2076:3: ( rule__FieldDecl__Group_3__0 )
                    {
                     before(grammarAccess.getFieldDeclAccess().getGroup_3()); 
                    // InternalFortXTrans.g:2077:3: ( rule__FieldDecl__Group_3__0 )
                    // InternalFortXTrans.g:2077:4: rule__FieldDecl__Group_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__FieldDecl__Group_3__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getFieldDeclAccess().getGroup_3()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Alternatives"


    // $ANTLR start "rule__NoNewlineVarWTypes__Alternatives"
    // InternalFortXTrans.g:2085:1: rule__NoNewlineVarWTypes__Alternatives : ( ( ( rule__NoNewlineVarWTypes__Group_0__0 ) ) | ( ( rule__NoNewlineVarWTypes__Group_1__0 ) ) );
    public final void rule__NoNewlineVarWTypes__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2089:1: ( ( ( rule__NoNewlineVarWTypes__Group_0__0 ) ) | ( ( rule__NoNewlineVarWTypes__Group_1__0 ) ) )
            int alt22=2;
            int LA22_0 = input.LA(1);

            if ( (LA22_0==RULE_ID) ) {
                alt22=1;
            }
            else if ( (LA22_0==33) ) {
                alt22=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 22, 0, input);

                throw nvae;
            }
            switch (alt22) {
                case 1 :
                    // InternalFortXTrans.g:2090:2: ( ( rule__NoNewlineVarWTypes__Group_0__0 ) )
                    {
                    // InternalFortXTrans.g:2090:2: ( ( rule__NoNewlineVarWTypes__Group_0__0 ) )
                    // InternalFortXTrans.g:2091:3: ( rule__NoNewlineVarWTypes__Group_0__0 )
                    {
                     before(grammarAccess.getNoNewlineVarWTypesAccess().getGroup_0()); 
                    // InternalFortXTrans.g:2092:3: ( rule__NoNewlineVarWTypes__Group_0__0 )
                    // InternalFortXTrans.g:2092:4: rule__NoNewlineVarWTypes__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__NoNewlineVarWTypes__Group_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getNoNewlineVarWTypesAccess().getGroup_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalFortXTrans.g:2096:2: ( ( rule__NoNewlineVarWTypes__Group_1__0 ) )
                    {
                    // InternalFortXTrans.g:2096:2: ( ( rule__NoNewlineVarWTypes__Group_1__0 ) )
                    // InternalFortXTrans.g:2097:3: ( rule__NoNewlineVarWTypes__Group_1__0 )
                    {
                     before(grammarAccess.getNoNewlineVarWTypesAccess().getGroup_1()); 
                    // InternalFortXTrans.g:2098:3: ( rule__NoNewlineVarWTypes__Group_1__0 )
                    // InternalFortXTrans.g:2098:4: rule__NoNewlineVarWTypes__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__NoNewlineVarWTypes__Group_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getNoNewlineVarWTypesAccess().getGroup_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NoNewlineVarWTypes__Alternatives"


    // $ANTLR start "rule__LiteralTuple__Alternatives"
    // InternalFortXTrans.g:2106:1: rule__LiteralTuple__Alternatives : ( ( ruleLiteralTup ) | ( ruleQualified ) );
    public final void rule__LiteralTuple__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2110:1: ( ( ruleLiteralTup ) | ( ruleQualified ) )
            int alt23=2;
            switch ( input.LA(1) ) {
            case RULE_INT:
            case RULE_FLOAT:
            case RULE_STRING:
            case 71:
            case 72:
                {
                alt23=1;
                }
                break;
            case 33:
                {
                int LA23_2 = input.LA(2);

                if ( (LA23_2==RULE_ID) ) {
                    alt23=2;
                }
                else if ( ((LA23_2>=RULE_INT && LA23_2<=RULE_STRING)||(LA23_2>=71 && LA23_2<=72)) ) {
                    alt23=1;
                }
                else {
                    NoViableAltException nvae =
                        new NoViableAltException("", 23, 2, input);

                    throw nvae;
                }
                }
                break;
            case RULE_ID:
                {
                alt23=2;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 23, 0, input);

                throw nvae;
            }

            switch (alt23) {
                case 1 :
                    // InternalFortXTrans.g:2111:2: ( ruleLiteralTup )
                    {
                    // InternalFortXTrans.g:2111:2: ( ruleLiteralTup )
                    // InternalFortXTrans.g:2112:3: ruleLiteralTup
                    {
                     before(grammarAccess.getLiteralTupleAccess().getLiteralTupParserRuleCall_0()); 
                    pushFollow(FOLLOW_2);
                    ruleLiteralTup();

                    state._fsp--;

                     after(grammarAccess.getLiteralTupleAccess().getLiteralTupParserRuleCall_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalFortXTrans.g:2117:2: ( ruleQualified )
                    {
                    // InternalFortXTrans.g:2117:2: ( ruleQualified )
                    // InternalFortXTrans.g:2118:3: ruleQualified
                    {
                     before(grammarAccess.getLiteralTupleAccess().getQualifiedParserRuleCall_1()); 
                    pushFollow(FOLLOW_2);
                    ruleQualified();

                    state._fsp--;

                     after(grammarAccess.getLiteralTupleAccess().getQualifiedParserRuleCall_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralTuple__Alternatives"


    // $ANTLR start "rule__LiteralTup__Alternatives"
    // InternalFortXTrans.g:2127:1: rule__LiteralTup__Alternatives : ( ( ruleLiteral ) | ( ( rule__LiteralTup__Group_1__0 ) ) );
    public final void rule__LiteralTup__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2131:1: ( ( ruleLiteral ) | ( ( rule__LiteralTup__Group_1__0 ) ) )
            int alt24=2;
            int LA24_0 = input.LA(1);

            if ( ((LA24_0>=RULE_INT && LA24_0<=RULE_STRING)||(LA24_0>=71 && LA24_0<=72)) ) {
                alt24=1;
            }
            else if ( (LA24_0==33) ) {
                alt24=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 24, 0, input);

                throw nvae;
            }
            switch (alt24) {
                case 1 :
                    // InternalFortXTrans.g:2132:2: ( ruleLiteral )
                    {
                    // InternalFortXTrans.g:2132:2: ( ruleLiteral )
                    // InternalFortXTrans.g:2133:3: ruleLiteral
                    {
                     before(grammarAccess.getLiteralTupAccess().getLiteralParserRuleCall_0()); 
                    pushFollow(FOLLOW_2);
                    ruleLiteral();

                    state._fsp--;

                     after(grammarAccess.getLiteralTupAccess().getLiteralParserRuleCall_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalFortXTrans.g:2138:2: ( ( rule__LiteralTup__Group_1__0 ) )
                    {
                    // InternalFortXTrans.g:2138:2: ( ( rule__LiteralTup__Group_1__0 ) )
                    // InternalFortXTrans.g:2139:3: ( rule__LiteralTup__Group_1__0 )
                    {
                     before(grammarAccess.getLiteralTupAccess().getGroup_1()); 
                    // InternalFortXTrans.g:2140:3: ( rule__LiteralTup__Group_1__0 )
                    // InternalFortXTrans.g:2140:4: rule__LiteralTup__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__LiteralTup__Group_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getLiteralTupAccess().getGroup_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralTup__Alternatives"


    // $ANTLR start "rule__Literal__Alternatives"
    // InternalFortXTrans.g:2148:1: rule__Literal__Alternatives : ( ( ( rule__Literal__Group_0__0 ) ) | ( ( rule__Literal__Group_1__0 ) ) | ( ( rule__Literal__Group_2__0 ) ) | ( ( rule__Literal__Group_3__0 ) ) );
    public final void rule__Literal__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2152:1: ( ( ( rule__Literal__Group_0__0 ) ) | ( ( rule__Literal__Group_1__0 ) ) | ( ( rule__Literal__Group_2__0 ) ) | ( ( rule__Literal__Group_3__0 ) ) )
            int alt25=4;
            switch ( input.LA(1) ) {
            case RULE_INT:
                {
                alt25=1;
                }
                break;
            case RULE_FLOAT:
                {
                alt25=2;
                }
                break;
            case RULE_STRING:
                {
                alt25=3;
                }
                break;
            case 71:
            case 72:
                {
                alt25=4;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 25, 0, input);

                throw nvae;
            }

            switch (alt25) {
                case 1 :
                    // InternalFortXTrans.g:2153:2: ( ( rule__Literal__Group_0__0 ) )
                    {
                    // InternalFortXTrans.g:2153:2: ( ( rule__Literal__Group_0__0 ) )
                    // InternalFortXTrans.g:2154:3: ( rule__Literal__Group_0__0 )
                    {
                     before(grammarAccess.getLiteralAccess().getGroup_0()); 
                    // InternalFortXTrans.g:2155:3: ( rule__Literal__Group_0__0 )
                    // InternalFortXTrans.g:2155:4: rule__Literal__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Literal__Group_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getLiteralAccess().getGroup_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalFortXTrans.g:2159:2: ( ( rule__Literal__Group_1__0 ) )
                    {
                    // InternalFortXTrans.g:2159:2: ( ( rule__Literal__Group_1__0 ) )
                    // InternalFortXTrans.g:2160:3: ( rule__Literal__Group_1__0 )
                    {
                     before(grammarAccess.getLiteralAccess().getGroup_1()); 
                    // InternalFortXTrans.g:2161:3: ( rule__Literal__Group_1__0 )
                    // InternalFortXTrans.g:2161:4: rule__Literal__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Literal__Group_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getLiteralAccess().getGroup_1()); 

                    }


                    }
                    break;
                case 3 :
                    // InternalFortXTrans.g:2165:2: ( ( rule__Literal__Group_2__0 ) )
                    {
                    // InternalFortXTrans.g:2165:2: ( ( rule__Literal__Group_2__0 ) )
                    // InternalFortXTrans.g:2166:3: ( rule__Literal__Group_2__0 )
                    {
                     before(grammarAccess.getLiteralAccess().getGroup_2()); 
                    // InternalFortXTrans.g:2167:3: ( rule__Literal__Group_2__0 )
                    // InternalFortXTrans.g:2167:4: rule__Literal__Group_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Literal__Group_2__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getLiteralAccess().getGroup_2()); 

                    }


                    }
                    break;
                case 4 :
                    // InternalFortXTrans.g:2171:2: ( ( rule__Literal__Group_3__0 ) )
                    {
                    // InternalFortXTrans.g:2171:2: ( ( rule__Literal__Group_3__0 ) )
                    // InternalFortXTrans.g:2172:3: ( rule__Literal__Group_3__0 )
                    {
                     before(grammarAccess.getLiteralAccess().getGroup_3()); 
                    // InternalFortXTrans.g:2173:3: ( rule__Literal__Group_3__0 )
                    // InternalFortXTrans.g:2173:4: rule__Literal__Group_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Literal__Group_3__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getLiteralAccess().getGroup_3()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Literal__Alternatives"


    // $ANTLR start "rule__Literal__Alternatives_3_1"
    // InternalFortXTrans.g:2181:1: rule__Literal__Alternatives_3_1 : ( ( ( rule__Literal__ValueAssignment_3_1_0 ) ) | ( ( rule__Literal__ValueAssignment_3_1_1 ) ) );
    public final void rule__Literal__Alternatives_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2185:1: ( ( ( rule__Literal__ValueAssignment_3_1_0 ) ) | ( ( rule__Literal__ValueAssignment_3_1_1 ) ) )
            int alt26=2;
            int LA26_0 = input.LA(1);

            if ( (LA26_0==71) ) {
                alt26=1;
            }
            else if ( (LA26_0==72) ) {
                alt26=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 26, 0, input);

                throw nvae;
            }
            switch (alt26) {
                case 1 :
                    // InternalFortXTrans.g:2186:2: ( ( rule__Literal__ValueAssignment_3_1_0 ) )
                    {
                    // InternalFortXTrans.g:2186:2: ( ( rule__Literal__ValueAssignment_3_1_0 ) )
                    // InternalFortXTrans.g:2187:3: ( rule__Literal__ValueAssignment_3_1_0 )
                    {
                     before(grammarAccess.getLiteralAccess().getValueAssignment_3_1_0()); 
                    // InternalFortXTrans.g:2188:3: ( rule__Literal__ValueAssignment_3_1_0 )
                    // InternalFortXTrans.g:2188:4: rule__Literal__ValueAssignment_3_1_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Literal__ValueAssignment_3_1_0();

                    state._fsp--;


                    }

                     after(grammarAccess.getLiteralAccess().getValueAssignment_3_1_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalFortXTrans.g:2192:2: ( ( rule__Literal__ValueAssignment_3_1_1 ) )
                    {
                    // InternalFortXTrans.g:2192:2: ( ( rule__Literal__ValueAssignment_3_1_1 ) )
                    // InternalFortXTrans.g:2193:3: ( rule__Literal__ValueAssignment_3_1_1 )
                    {
                     before(grammarAccess.getLiteralAccess().getValueAssignment_3_1_1()); 
                    // InternalFortXTrans.g:2194:3: ( rule__Literal__ValueAssignment_3_1_1 )
                    // InternalFortXTrans.g:2194:4: rule__Literal__ValueAssignment_3_1_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__Literal__ValueAssignment_3_1_1();

                    state._fsp--;


                    }

                     after(grammarAccess.getLiteralAccess().getValueAssignment_3_1_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Literal__Alternatives_3_1"


    // $ANTLR start "rule__LocalVarDecl__Alternatives"
    // InternalFortXTrans.g:2202:1: rule__LocalVarDecl__Alternatives : ( ( ( rule__LocalVarDecl__Group_0__0 ) ) | ( ( rule__LocalVarDecl__Group_1__0 ) ) | ( ( rule__LocalVarDecl__Group_2__0 ) ) | ( ( rule__LocalVarDecl__Group_3__0 ) ) );
    public final void rule__LocalVarDecl__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2206:1: ( ( ( rule__LocalVarDecl__Group_0__0 ) ) | ( ( rule__LocalVarDecl__Group_1__0 ) ) | ( ( rule__LocalVarDecl__Group_2__0 ) ) | ( ( rule__LocalVarDecl__Group_3__0 ) ) )
            int alt27=4;
            alt27 = dfa27.predict(input);
            switch (alt27) {
                case 1 :
                    // InternalFortXTrans.g:2207:2: ( ( rule__LocalVarDecl__Group_0__0 ) )
                    {
                    // InternalFortXTrans.g:2207:2: ( ( rule__LocalVarDecl__Group_0__0 ) )
                    // InternalFortXTrans.g:2208:3: ( rule__LocalVarDecl__Group_0__0 )
                    {
                     before(grammarAccess.getLocalVarDeclAccess().getGroup_0()); 
                    // InternalFortXTrans.g:2209:3: ( rule__LocalVarDecl__Group_0__0 )
                    // InternalFortXTrans.g:2209:4: rule__LocalVarDecl__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__LocalVarDecl__Group_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getLocalVarDeclAccess().getGroup_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalFortXTrans.g:2213:2: ( ( rule__LocalVarDecl__Group_1__0 ) )
                    {
                    // InternalFortXTrans.g:2213:2: ( ( rule__LocalVarDecl__Group_1__0 ) )
                    // InternalFortXTrans.g:2214:3: ( rule__LocalVarDecl__Group_1__0 )
                    {
                     before(grammarAccess.getLocalVarDeclAccess().getGroup_1()); 
                    // InternalFortXTrans.g:2215:3: ( rule__LocalVarDecl__Group_1__0 )
                    // InternalFortXTrans.g:2215:4: rule__LocalVarDecl__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__LocalVarDecl__Group_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getLocalVarDeclAccess().getGroup_1()); 

                    }


                    }
                    break;
                case 3 :
                    // InternalFortXTrans.g:2219:2: ( ( rule__LocalVarDecl__Group_2__0 ) )
                    {
                    // InternalFortXTrans.g:2219:2: ( ( rule__LocalVarDecl__Group_2__0 ) )
                    // InternalFortXTrans.g:2220:3: ( rule__LocalVarDecl__Group_2__0 )
                    {
                     before(grammarAccess.getLocalVarDeclAccess().getGroup_2()); 
                    // InternalFortXTrans.g:2221:3: ( rule__LocalVarDecl__Group_2__0 )
                    // InternalFortXTrans.g:2221:4: rule__LocalVarDecl__Group_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__LocalVarDecl__Group_2__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getLocalVarDeclAccess().getGroup_2()); 

                    }


                    }
                    break;
                case 4 :
                    // InternalFortXTrans.g:2225:2: ( ( rule__LocalVarDecl__Group_3__0 ) )
                    {
                    // InternalFortXTrans.g:2225:2: ( ( rule__LocalVarDecl__Group_3__0 ) )
                    // InternalFortXTrans.g:2226:3: ( rule__LocalVarDecl__Group_3__0 )
                    {
                     before(grammarAccess.getLocalVarDeclAccess().getGroup_3()); 
                    // InternalFortXTrans.g:2227:3: ( rule__LocalVarDecl__Group_3__0 )
                    // InternalFortXTrans.g:2227:4: rule__LocalVarDecl__Group_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__LocalVarDecl__Group_3__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getLocalVarDeclAccess().getGroup_3()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Alternatives"


    // $ANTLR start "rule__Component__Group__0"
    // InternalFortXTrans.g:2235:1: rule__Component__Group__0 : rule__Component__Group__0__Impl rule__Component__Group__1 ;
    public final void rule__Component__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2239:1: ( rule__Component__Group__0__Impl rule__Component__Group__1 )
            // InternalFortXTrans.g:2240:2: rule__Component__Group__0__Impl rule__Component__Group__1
            {
            pushFollow(FOLLOW_5);
            rule__Component__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Component__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Component__Group__0"


    // $ANTLR start "rule__Component__Group__0__Impl"
    // InternalFortXTrans.g:2247:1: rule__Component__Group__0__Impl : ( 'component' ) ;
    public final void rule__Component__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2251:1: ( ( 'component' ) )
            // InternalFortXTrans.g:2252:1: ( 'component' )
            {
            // InternalFortXTrans.g:2252:1: ( 'component' )
            // InternalFortXTrans.g:2253:2: 'component'
            {
             before(grammarAccess.getComponentAccess().getComponentKeyword_0()); 
            match(input,25,FOLLOW_2); 
             after(grammarAccess.getComponentAccess().getComponentKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Component__Group__0__Impl"


    // $ANTLR start "rule__Component__Group__1"
    // InternalFortXTrans.g:2262:1: rule__Component__Group__1 : rule__Component__Group__1__Impl rule__Component__Group__2 ;
    public final void rule__Component__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2266:1: ( rule__Component__Group__1__Impl rule__Component__Group__2 )
            // InternalFortXTrans.g:2267:2: rule__Component__Group__1__Impl rule__Component__Group__2
            {
            pushFollow(FOLLOW_6);
            rule__Component__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Component__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Component__Group__1"


    // $ANTLR start "rule__Component__Group__1__Impl"
    // InternalFortXTrans.g:2274:1: rule__Component__Group__1__Impl : ( ( rule__Component__NameAssignment_1 ) ) ;
    public final void rule__Component__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2278:1: ( ( ( rule__Component__NameAssignment_1 ) ) )
            // InternalFortXTrans.g:2279:1: ( ( rule__Component__NameAssignment_1 ) )
            {
            // InternalFortXTrans.g:2279:1: ( ( rule__Component__NameAssignment_1 ) )
            // InternalFortXTrans.g:2280:2: ( rule__Component__NameAssignment_1 )
            {
             before(grammarAccess.getComponentAccess().getNameAssignment_1()); 
            // InternalFortXTrans.g:2281:2: ( rule__Component__NameAssignment_1 )
            // InternalFortXTrans.g:2281:3: rule__Component__NameAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__Component__NameAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getComponentAccess().getNameAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Component__Group__1__Impl"


    // $ANTLR start "rule__Component__Group__2"
    // InternalFortXTrans.g:2289:1: rule__Component__Group__2 : rule__Component__Group__2__Impl rule__Component__Group__3 ;
    public final void rule__Component__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2293:1: ( rule__Component__Group__2__Impl rule__Component__Group__3 )
            // InternalFortXTrans.g:2294:2: rule__Component__Group__2__Impl rule__Component__Group__3
            {
            pushFollow(FOLLOW_6);
            rule__Component__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Component__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Component__Group__2"


    // $ANTLR start "rule__Component__Group__2__Impl"
    // InternalFortXTrans.g:2301:1: rule__Component__Group__2__Impl : ( ( rule__Component__ImportsAssignment_2 )* ) ;
    public final void rule__Component__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2305:1: ( ( ( rule__Component__ImportsAssignment_2 )* ) )
            // InternalFortXTrans.g:2306:1: ( ( rule__Component__ImportsAssignment_2 )* )
            {
            // InternalFortXTrans.g:2306:1: ( ( rule__Component__ImportsAssignment_2 )* )
            // InternalFortXTrans.g:2307:2: ( rule__Component__ImportsAssignment_2 )*
            {
             before(grammarAccess.getComponentAccess().getImportsAssignment_2()); 
            // InternalFortXTrans.g:2308:2: ( rule__Component__ImportsAssignment_2 )*
            loop28:
            do {
                int alt28=2;
                int LA28_0 = input.LA(1);

                if ( (LA28_0==55) ) {
                    alt28=1;
                }


                switch (alt28) {
            	case 1 :
            	    // InternalFortXTrans.g:2308:3: rule__Component__ImportsAssignment_2
            	    {
            	    pushFollow(FOLLOW_7);
            	    rule__Component__ImportsAssignment_2();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop28;
                }
            } while (true);

             after(grammarAccess.getComponentAccess().getImportsAssignment_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Component__Group__2__Impl"


    // $ANTLR start "rule__Component__Group__3"
    // InternalFortXTrans.g:2316:1: rule__Component__Group__3 : rule__Component__Group__3__Impl rule__Component__Group__4 ;
    public final void rule__Component__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2320:1: ( rule__Component__Group__3__Impl rule__Component__Group__4 )
            // InternalFortXTrans.g:2321:2: rule__Component__Group__3__Impl rule__Component__Group__4
            {
            pushFollow(FOLLOW_8);
            rule__Component__Group__3__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Component__Group__4();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Component__Group__3"


    // $ANTLR start "rule__Component__Group__3__Impl"
    // InternalFortXTrans.g:2328:1: rule__Component__Group__3__Impl : ( ( ( rule__Component__ExportsAssignment_3 ) ) ( ( rule__Component__ExportsAssignment_3 )* ) ) ;
    public final void rule__Component__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2332:1: ( ( ( ( rule__Component__ExportsAssignment_3 ) ) ( ( rule__Component__ExportsAssignment_3 )* ) ) )
            // InternalFortXTrans.g:2333:1: ( ( ( rule__Component__ExportsAssignment_3 ) ) ( ( rule__Component__ExportsAssignment_3 )* ) )
            {
            // InternalFortXTrans.g:2333:1: ( ( ( rule__Component__ExportsAssignment_3 ) ) ( ( rule__Component__ExportsAssignment_3 )* ) )
            // InternalFortXTrans.g:2334:2: ( ( rule__Component__ExportsAssignment_3 ) ) ( ( rule__Component__ExportsAssignment_3 )* )
            {
            // InternalFortXTrans.g:2334:2: ( ( rule__Component__ExportsAssignment_3 ) )
            // InternalFortXTrans.g:2335:3: ( rule__Component__ExportsAssignment_3 )
            {
             before(grammarAccess.getComponentAccess().getExportsAssignment_3()); 
            // InternalFortXTrans.g:2336:3: ( rule__Component__ExportsAssignment_3 )
            // InternalFortXTrans.g:2336:4: rule__Component__ExportsAssignment_3
            {
            pushFollow(FOLLOW_9);
            rule__Component__ExportsAssignment_3();

            state._fsp--;


            }

             after(grammarAccess.getComponentAccess().getExportsAssignment_3()); 

            }

            // InternalFortXTrans.g:2339:2: ( ( rule__Component__ExportsAssignment_3 )* )
            // InternalFortXTrans.g:2340:3: ( rule__Component__ExportsAssignment_3 )*
            {
             before(grammarAccess.getComponentAccess().getExportsAssignment_3()); 
            // InternalFortXTrans.g:2341:3: ( rule__Component__ExportsAssignment_3 )*
            loop29:
            do {
                int alt29=2;
                int LA29_0 = input.LA(1);

                if ( (LA29_0==56) ) {
                    alt29=1;
                }


                switch (alt29) {
            	case 1 :
            	    // InternalFortXTrans.g:2341:4: rule__Component__ExportsAssignment_3
            	    {
            	    pushFollow(FOLLOW_9);
            	    rule__Component__ExportsAssignment_3();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop29;
                }
            } while (true);

             after(grammarAccess.getComponentAccess().getExportsAssignment_3()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Component__Group__3__Impl"


    // $ANTLR start "rule__Component__Group__4"
    // InternalFortXTrans.g:2350:1: rule__Component__Group__4 : rule__Component__Group__4__Impl rule__Component__Group__5 ;
    public final void rule__Component__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2354:1: ( rule__Component__Group__4__Impl rule__Component__Group__5 )
            // InternalFortXTrans.g:2355:2: rule__Component__Group__4__Impl rule__Component__Group__5
            {
            pushFollow(FOLLOW_8);
            rule__Component__Group__4__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Component__Group__5();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Component__Group__4"


    // $ANTLR start "rule__Component__Group__4__Impl"
    // InternalFortXTrans.g:2362:1: rule__Component__Group__4__Impl : ( ( rule__Component__DeclsAssignment_4 )* ) ;
    public final void rule__Component__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2366:1: ( ( ( rule__Component__DeclsAssignment_4 )* ) )
            // InternalFortXTrans.g:2367:1: ( ( rule__Component__DeclsAssignment_4 )* )
            {
            // InternalFortXTrans.g:2367:1: ( ( rule__Component__DeclsAssignment_4 )* )
            // InternalFortXTrans.g:2368:2: ( rule__Component__DeclsAssignment_4 )*
            {
             before(grammarAccess.getComponentAccess().getDeclsAssignment_4()); 
            // InternalFortXTrans.g:2369:2: ( rule__Component__DeclsAssignment_4 )*
            loop30:
            do {
                int alt30=2;
                int LA30_0 = input.LA(1);

                if ( (LA30_0==RULE_ID||LA30_0==33||(LA30_0>=58 && LA30_0<=61)||LA30_0==70) ) {
                    alt30=1;
                }


                switch (alt30) {
            	case 1 :
            	    // InternalFortXTrans.g:2369:3: rule__Component__DeclsAssignment_4
            	    {
            	    pushFollow(FOLLOW_3);
            	    rule__Component__DeclsAssignment_4();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop30;
                }
            } while (true);

             after(grammarAccess.getComponentAccess().getDeclsAssignment_4()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Component__Group__4__Impl"


    // $ANTLR start "rule__Component__Group__5"
    // InternalFortXTrans.g:2377:1: rule__Component__Group__5 : rule__Component__Group__5__Impl ;
    public final void rule__Component__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2381:1: ( rule__Component__Group__5__Impl )
            // InternalFortXTrans.g:2382:2: rule__Component__Group__5__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Component__Group__5__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Component__Group__5"


    // $ANTLR start "rule__Component__Group__5__Impl"
    // InternalFortXTrans.g:2388:1: rule__Component__Group__5__Impl : ( 'end' ) ;
    public final void rule__Component__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2392:1: ( ( 'end' ) )
            // InternalFortXTrans.g:2393:1: ( 'end' )
            {
            // InternalFortXTrans.g:2393:1: ( 'end' )
            // InternalFortXTrans.g:2394:2: 'end'
            {
             before(grammarAccess.getComponentAccess().getEndKeyword_5()); 
            match(input,26,FOLLOW_2); 
             after(grammarAccess.getComponentAccess().getEndKeyword_5()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Component__Group__5__Impl"


    // $ANTLR start "rule__API__Group__0"
    // InternalFortXTrans.g:2404:1: rule__API__Group__0 : rule__API__Group__0__Impl rule__API__Group__1 ;
    public final void rule__API__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2408:1: ( rule__API__Group__0__Impl rule__API__Group__1 )
            // InternalFortXTrans.g:2409:2: rule__API__Group__0__Impl rule__API__Group__1
            {
            pushFollow(FOLLOW_5);
            rule__API__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__API__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__API__Group__0"


    // $ANTLR start "rule__API__Group__0__Impl"
    // InternalFortXTrans.g:2416:1: rule__API__Group__0__Impl : ( 'api' ) ;
    public final void rule__API__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2420:1: ( ( 'api' ) )
            // InternalFortXTrans.g:2421:1: ( 'api' )
            {
            // InternalFortXTrans.g:2421:1: ( 'api' )
            // InternalFortXTrans.g:2422:2: 'api'
            {
             before(grammarAccess.getAPIAccess().getApiKeyword_0()); 
            match(input,27,FOLLOW_2); 
             after(grammarAccess.getAPIAccess().getApiKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__API__Group__0__Impl"


    // $ANTLR start "rule__API__Group__1"
    // InternalFortXTrans.g:2431:1: rule__API__Group__1 : rule__API__Group__1__Impl rule__API__Group__2 ;
    public final void rule__API__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2435:1: ( rule__API__Group__1__Impl rule__API__Group__2 )
            // InternalFortXTrans.g:2436:2: rule__API__Group__1__Impl rule__API__Group__2
            {
            pushFollow(FOLLOW_10);
            rule__API__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__API__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__API__Group__1"


    // $ANTLR start "rule__API__Group__1__Impl"
    // InternalFortXTrans.g:2443:1: rule__API__Group__1__Impl : ( ( rule__API__NameAssignment_1 ) ) ;
    public final void rule__API__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2447:1: ( ( ( rule__API__NameAssignment_1 ) ) )
            // InternalFortXTrans.g:2448:1: ( ( rule__API__NameAssignment_1 ) )
            {
            // InternalFortXTrans.g:2448:1: ( ( rule__API__NameAssignment_1 ) )
            // InternalFortXTrans.g:2449:2: ( rule__API__NameAssignment_1 )
            {
             before(grammarAccess.getAPIAccess().getNameAssignment_1()); 
            // InternalFortXTrans.g:2450:2: ( rule__API__NameAssignment_1 )
            // InternalFortXTrans.g:2450:3: rule__API__NameAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__API__NameAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getAPIAccess().getNameAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__API__Group__1__Impl"


    // $ANTLR start "rule__API__Group__2"
    // InternalFortXTrans.g:2458:1: rule__API__Group__2 : rule__API__Group__2__Impl rule__API__Group__3 ;
    public final void rule__API__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2462:1: ( rule__API__Group__2__Impl rule__API__Group__3 )
            // InternalFortXTrans.g:2463:2: rule__API__Group__2__Impl rule__API__Group__3
            {
            pushFollow(FOLLOW_10);
            rule__API__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__API__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__API__Group__2"


    // $ANTLR start "rule__API__Group__2__Impl"
    // InternalFortXTrans.g:2470:1: rule__API__Group__2__Impl : ( ( rule__API__ImportsAssignment_2 )* ) ;
    public final void rule__API__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2474:1: ( ( ( rule__API__ImportsAssignment_2 )* ) )
            // InternalFortXTrans.g:2475:1: ( ( rule__API__ImportsAssignment_2 )* )
            {
            // InternalFortXTrans.g:2475:1: ( ( rule__API__ImportsAssignment_2 )* )
            // InternalFortXTrans.g:2476:2: ( rule__API__ImportsAssignment_2 )*
            {
             before(grammarAccess.getAPIAccess().getImportsAssignment_2()); 
            // InternalFortXTrans.g:2477:2: ( rule__API__ImportsAssignment_2 )*
            loop31:
            do {
                int alt31=2;
                int LA31_0 = input.LA(1);

                if ( (LA31_0==55) ) {
                    alt31=1;
                }


                switch (alt31) {
            	case 1 :
            	    // InternalFortXTrans.g:2477:3: rule__API__ImportsAssignment_2
            	    {
            	    pushFollow(FOLLOW_7);
            	    rule__API__ImportsAssignment_2();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop31;
                }
            } while (true);

             after(grammarAccess.getAPIAccess().getImportsAssignment_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__API__Group__2__Impl"


    // $ANTLR start "rule__API__Group__3"
    // InternalFortXTrans.g:2485:1: rule__API__Group__3 : rule__API__Group__3__Impl ;
    public final void rule__API__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2489:1: ( rule__API__Group__3__Impl )
            // InternalFortXTrans.g:2490:2: rule__API__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__API__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__API__Group__3"


    // $ANTLR start "rule__API__Group__3__Impl"
    // InternalFortXTrans.g:2496:1: rule__API__Group__3__Impl : ( 'end' ) ;
    public final void rule__API__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2500:1: ( ( 'end' ) )
            // InternalFortXTrans.g:2501:1: ( 'end' )
            {
            // InternalFortXTrans.g:2501:1: ( 'end' )
            // InternalFortXTrans.g:2502:2: 'end'
            {
             before(grammarAccess.getAPIAccess().getEndKeyword_3()); 
            match(input,26,FOLLOW_2); 
             after(grammarAccess.getAPIAccess().getEndKeyword_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__API__Group__3__Impl"


    // $ANTLR start "rule__Import__Group_0__0"
    // InternalFortXTrans.g:2512:1: rule__Import__Group_0__0 : rule__Import__Group_0__0__Impl rule__Import__Group_0__1 ;
    public final void rule__Import__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2516:1: ( rule__Import__Group_0__0__Impl rule__Import__Group_0__1 )
            // InternalFortXTrans.g:2517:2: rule__Import__Group_0__0__Impl rule__Import__Group_0__1
            {
            pushFollow(FOLLOW_5);
            rule__Import__Group_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Import__Group_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Import__Group_0__0"


    // $ANTLR start "rule__Import__Group_0__0__Impl"
    // InternalFortXTrans.g:2524:1: rule__Import__Group_0__0__Impl : ( ( rule__Import__ImpsAssignment_0_0 ) ) ;
    public final void rule__Import__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2528:1: ( ( ( rule__Import__ImpsAssignment_0_0 ) ) )
            // InternalFortXTrans.g:2529:1: ( ( rule__Import__ImpsAssignment_0_0 ) )
            {
            // InternalFortXTrans.g:2529:1: ( ( rule__Import__ImpsAssignment_0_0 ) )
            // InternalFortXTrans.g:2530:2: ( rule__Import__ImpsAssignment_0_0 )
            {
             before(grammarAccess.getImportAccess().getImpsAssignment_0_0()); 
            // InternalFortXTrans.g:2531:2: ( rule__Import__ImpsAssignment_0_0 )
            // InternalFortXTrans.g:2531:3: rule__Import__ImpsAssignment_0_0
            {
            pushFollow(FOLLOW_2);
            rule__Import__ImpsAssignment_0_0();

            state._fsp--;


            }

             after(grammarAccess.getImportAccess().getImpsAssignment_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Import__Group_0__0__Impl"


    // $ANTLR start "rule__Import__Group_0__1"
    // InternalFortXTrans.g:2539:1: rule__Import__Group_0__1 : rule__Import__Group_0__1__Impl ;
    public final void rule__Import__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2543:1: ( rule__Import__Group_0__1__Impl )
            // InternalFortXTrans.g:2544:2: rule__Import__Group_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Import__Group_0__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Import__Group_0__1"


    // $ANTLR start "rule__Import__Group_0__1__Impl"
    // InternalFortXTrans.g:2550:1: rule__Import__Group_0__1__Impl : ( ( rule__Import__ImportedNamesAssignment_0_1 ) ) ;
    public final void rule__Import__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2554:1: ( ( ( rule__Import__ImportedNamesAssignment_0_1 ) ) )
            // InternalFortXTrans.g:2555:1: ( ( rule__Import__ImportedNamesAssignment_0_1 ) )
            {
            // InternalFortXTrans.g:2555:1: ( ( rule__Import__ImportedNamesAssignment_0_1 ) )
            // InternalFortXTrans.g:2556:2: ( rule__Import__ImportedNamesAssignment_0_1 )
            {
             before(grammarAccess.getImportAccess().getImportedNamesAssignment_0_1()); 
            // InternalFortXTrans.g:2557:2: ( rule__Import__ImportedNamesAssignment_0_1 )
            // InternalFortXTrans.g:2557:3: rule__Import__ImportedNamesAssignment_0_1
            {
            pushFollow(FOLLOW_2);
            rule__Import__ImportedNamesAssignment_0_1();

            state._fsp--;


            }

             after(grammarAccess.getImportAccess().getImportedNamesAssignment_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Import__Group_0__1__Impl"


    // $ANTLR start "rule__Import__Group_1__0"
    // InternalFortXTrans.g:2566:1: rule__Import__Group_1__0 : rule__Import__Group_1__0__Impl rule__Import__Group_1__1 ;
    public final void rule__Import__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2570:1: ( rule__Import__Group_1__0__Impl rule__Import__Group_1__1 )
            // InternalFortXTrans.g:2571:2: rule__Import__Group_1__0__Impl rule__Import__Group_1__1
            {
            pushFollow(FOLLOW_11);
            rule__Import__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Import__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Import__Group_1__0"


    // $ANTLR start "rule__Import__Group_1__0__Impl"
    // InternalFortXTrans.g:2578:1: rule__Import__Group_1__0__Impl : ( ( rule__Import__ImpsAssignment_1_0 ) ) ;
    public final void rule__Import__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2582:1: ( ( ( rule__Import__ImpsAssignment_1_0 ) ) )
            // InternalFortXTrans.g:2583:1: ( ( rule__Import__ImpsAssignment_1_0 ) )
            {
            // InternalFortXTrans.g:2583:1: ( ( rule__Import__ImpsAssignment_1_0 ) )
            // InternalFortXTrans.g:2584:2: ( rule__Import__ImpsAssignment_1_0 )
            {
             before(grammarAccess.getImportAccess().getImpsAssignment_1_0()); 
            // InternalFortXTrans.g:2585:2: ( rule__Import__ImpsAssignment_1_0 )
            // InternalFortXTrans.g:2585:3: rule__Import__ImpsAssignment_1_0
            {
            pushFollow(FOLLOW_2);
            rule__Import__ImpsAssignment_1_0();

            state._fsp--;


            }

             after(grammarAccess.getImportAccess().getImpsAssignment_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Import__Group_1__0__Impl"


    // $ANTLR start "rule__Import__Group_1__1"
    // InternalFortXTrans.g:2593:1: rule__Import__Group_1__1 : rule__Import__Group_1__1__Impl rule__Import__Group_1__2 ;
    public final void rule__Import__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2597:1: ( rule__Import__Group_1__1__Impl rule__Import__Group_1__2 )
            // InternalFortXTrans.g:2598:2: rule__Import__Group_1__1__Impl rule__Import__Group_1__2
            {
            pushFollow(FOLLOW_12);
            rule__Import__Group_1__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Import__Group_1__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Import__Group_1__1"


    // $ANTLR start "rule__Import__Group_1__1__Impl"
    // InternalFortXTrans.g:2605:1: rule__Import__Group_1__1__Impl : ( ( rule__Import__ApiAssignment_1_1 ) ) ;
    public final void rule__Import__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2609:1: ( ( ( rule__Import__ApiAssignment_1_1 ) ) )
            // InternalFortXTrans.g:2610:1: ( ( rule__Import__ApiAssignment_1_1 ) )
            {
            // InternalFortXTrans.g:2610:1: ( ( rule__Import__ApiAssignment_1_1 ) )
            // InternalFortXTrans.g:2611:2: ( rule__Import__ApiAssignment_1_1 )
            {
             before(grammarAccess.getImportAccess().getApiAssignment_1_1()); 
            // InternalFortXTrans.g:2612:2: ( rule__Import__ApiAssignment_1_1 )
            // InternalFortXTrans.g:2612:3: rule__Import__ApiAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Import__ApiAssignment_1_1();

            state._fsp--;


            }

             after(grammarAccess.getImportAccess().getApiAssignment_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Import__Group_1__1__Impl"


    // $ANTLR start "rule__Import__Group_1__2"
    // InternalFortXTrans.g:2620:1: rule__Import__Group_1__2 : rule__Import__Group_1__2__Impl ;
    public final void rule__Import__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2624:1: ( rule__Import__Group_1__2__Impl )
            // InternalFortXTrans.g:2625:2: rule__Import__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Import__Group_1__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Import__Group_1__2"


    // $ANTLR start "rule__Import__Group_1__2__Impl"
    // InternalFortXTrans.g:2631:1: rule__Import__Group_1__2__Impl : ( ( rule__Import__AliasedimportedNamesAssignment_1_2 ) ) ;
    public final void rule__Import__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2635:1: ( ( ( rule__Import__AliasedimportedNamesAssignment_1_2 ) ) )
            // InternalFortXTrans.g:2636:1: ( ( rule__Import__AliasedimportedNamesAssignment_1_2 ) )
            {
            // InternalFortXTrans.g:2636:1: ( ( rule__Import__AliasedimportedNamesAssignment_1_2 ) )
            // InternalFortXTrans.g:2637:2: ( rule__Import__AliasedimportedNamesAssignment_1_2 )
            {
             before(grammarAccess.getImportAccess().getAliasedimportedNamesAssignment_1_2()); 
            // InternalFortXTrans.g:2638:2: ( rule__Import__AliasedimportedNamesAssignment_1_2 )
            // InternalFortXTrans.g:2638:3: rule__Import__AliasedimportedNamesAssignment_1_2
            {
            pushFollow(FOLLOW_2);
            rule__Import__AliasedimportedNamesAssignment_1_2();

            state._fsp--;


            }

             after(grammarAccess.getImportAccess().getAliasedimportedNamesAssignment_1_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Import__Group_1__2__Impl"


    // $ANTLR start "rule__Export__Group_0__0"
    // InternalFortXTrans.g:2647:1: rule__Export__Group_0__0 : rule__Export__Group_0__0__Impl rule__Export__Group_0__1 ;
    public final void rule__Export__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2651:1: ( rule__Export__Group_0__0__Impl rule__Export__Group_0__1 )
            // InternalFortXTrans.g:2652:2: rule__Export__Group_0__0__Impl rule__Export__Group_0__1
            {
            pushFollow(FOLLOW_5);
            rule__Export__Group_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Export__Group_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Export__Group_0__0"


    // $ANTLR start "rule__Export__Group_0__0__Impl"
    // InternalFortXTrans.g:2659:1: rule__Export__Group_0__0__Impl : ( ( rule__Export__ExpAssignment_0_0 ) ) ;
    public final void rule__Export__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2663:1: ( ( ( rule__Export__ExpAssignment_0_0 ) ) )
            // InternalFortXTrans.g:2664:1: ( ( rule__Export__ExpAssignment_0_0 ) )
            {
            // InternalFortXTrans.g:2664:1: ( ( rule__Export__ExpAssignment_0_0 ) )
            // InternalFortXTrans.g:2665:2: ( rule__Export__ExpAssignment_0_0 )
            {
             before(grammarAccess.getExportAccess().getExpAssignment_0_0()); 
            // InternalFortXTrans.g:2666:2: ( rule__Export__ExpAssignment_0_0 )
            // InternalFortXTrans.g:2666:3: rule__Export__ExpAssignment_0_0
            {
            pushFollow(FOLLOW_2);
            rule__Export__ExpAssignment_0_0();

            state._fsp--;


            }

             after(grammarAccess.getExportAccess().getExpAssignment_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Export__Group_0__0__Impl"


    // $ANTLR start "rule__Export__Group_0__1"
    // InternalFortXTrans.g:2674:1: rule__Export__Group_0__1 : rule__Export__Group_0__1__Impl ;
    public final void rule__Export__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2678:1: ( rule__Export__Group_0__1__Impl )
            // InternalFortXTrans.g:2679:2: rule__Export__Group_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Export__Group_0__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Export__Group_0__1"


    // $ANTLR start "rule__Export__Group_0__1__Impl"
    // InternalFortXTrans.g:2685:1: rule__Export__Group_0__1__Impl : ( ( rule__Export__ExportedNameAssignment_0_1 ) ) ;
    public final void rule__Export__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2689:1: ( ( ( rule__Export__ExportedNameAssignment_0_1 ) ) )
            // InternalFortXTrans.g:2690:1: ( ( rule__Export__ExportedNameAssignment_0_1 ) )
            {
            // InternalFortXTrans.g:2690:1: ( ( rule__Export__ExportedNameAssignment_0_1 ) )
            // InternalFortXTrans.g:2691:2: ( rule__Export__ExportedNameAssignment_0_1 )
            {
             before(grammarAccess.getExportAccess().getExportedNameAssignment_0_1()); 
            // InternalFortXTrans.g:2692:2: ( rule__Export__ExportedNameAssignment_0_1 )
            // InternalFortXTrans.g:2692:3: rule__Export__ExportedNameAssignment_0_1
            {
            pushFollow(FOLLOW_2);
            rule__Export__ExportedNameAssignment_0_1();

            state._fsp--;


            }

             after(grammarAccess.getExportAccess().getExportedNameAssignment_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Export__Group_0__1__Impl"


    // $ANTLR start "rule__Export__Group_1__0"
    // InternalFortXTrans.g:2701:1: rule__Export__Group_1__0 : rule__Export__Group_1__0__Impl rule__Export__Group_1__1 ;
    public final void rule__Export__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2705:1: ( rule__Export__Group_1__0__Impl rule__Export__Group_1__1 )
            // InternalFortXTrans.g:2706:2: rule__Export__Group_1__0__Impl rule__Export__Group_1__1
            {
            pushFollow(FOLLOW_13);
            rule__Export__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Export__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Export__Group_1__0"


    // $ANTLR start "rule__Export__Group_1__0__Impl"
    // InternalFortXTrans.g:2713:1: rule__Export__Group_1__0__Impl : ( ( rule__Export__ExpAssignment_1_0 ) ) ;
    public final void rule__Export__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2717:1: ( ( ( rule__Export__ExpAssignment_1_0 ) ) )
            // InternalFortXTrans.g:2718:1: ( ( rule__Export__ExpAssignment_1_0 ) )
            {
            // InternalFortXTrans.g:2718:1: ( ( rule__Export__ExpAssignment_1_0 ) )
            // InternalFortXTrans.g:2719:2: ( rule__Export__ExpAssignment_1_0 )
            {
             before(grammarAccess.getExportAccess().getExpAssignment_1_0()); 
            // InternalFortXTrans.g:2720:2: ( rule__Export__ExpAssignment_1_0 )
            // InternalFortXTrans.g:2720:3: rule__Export__ExpAssignment_1_0
            {
            pushFollow(FOLLOW_2);
            rule__Export__ExpAssignment_1_0();

            state._fsp--;


            }

             after(grammarAccess.getExportAccess().getExpAssignment_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Export__Group_1__0__Impl"


    // $ANTLR start "rule__Export__Group_1__1"
    // InternalFortXTrans.g:2728:1: rule__Export__Group_1__1 : rule__Export__Group_1__1__Impl rule__Export__Group_1__2 ;
    public final void rule__Export__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2732:1: ( rule__Export__Group_1__1__Impl rule__Export__Group_1__2 )
            // InternalFortXTrans.g:2733:2: rule__Export__Group_1__1__Impl rule__Export__Group_1__2
            {
            pushFollow(FOLLOW_5);
            rule__Export__Group_1__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Export__Group_1__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Export__Group_1__1"


    // $ANTLR start "rule__Export__Group_1__1__Impl"
    // InternalFortXTrans.g:2740:1: rule__Export__Group_1__1__Impl : ( ( rule__Export__BrackAssignment_1_1 ) ) ;
    public final void rule__Export__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2744:1: ( ( ( rule__Export__BrackAssignment_1_1 ) ) )
            // InternalFortXTrans.g:2745:1: ( ( rule__Export__BrackAssignment_1_1 ) )
            {
            // InternalFortXTrans.g:2745:1: ( ( rule__Export__BrackAssignment_1_1 ) )
            // InternalFortXTrans.g:2746:2: ( rule__Export__BrackAssignment_1_1 )
            {
             before(grammarAccess.getExportAccess().getBrackAssignment_1_1()); 
            // InternalFortXTrans.g:2747:2: ( rule__Export__BrackAssignment_1_1 )
            // InternalFortXTrans.g:2747:3: rule__Export__BrackAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Export__BrackAssignment_1_1();

            state._fsp--;


            }

             after(grammarAccess.getExportAccess().getBrackAssignment_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Export__Group_1__1__Impl"


    // $ANTLR start "rule__Export__Group_1__2"
    // InternalFortXTrans.g:2755:1: rule__Export__Group_1__2 : rule__Export__Group_1__2__Impl rule__Export__Group_1__3 ;
    public final void rule__Export__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2759:1: ( rule__Export__Group_1__2__Impl rule__Export__Group_1__3 )
            // InternalFortXTrans.g:2760:2: rule__Export__Group_1__2__Impl rule__Export__Group_1__3
            {
            pushFollow(FOLLOW_14);
            rule__Export__Group_1__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Export__Group_1__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Export__Group_1__2"


    // $ANTLR start "rule__Export__Group_1__2__Impl"
    // InternalFortXTrans.g:2767:1: rule__Export__Group_1__2__Impl : ( ( rule__Export__ExportedNameAssignment_1_2 ) ) ;
    public final void rule__Export__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2771:1: ( ( ( rule__Export__ExportedNameAssignment_1_2 ) ) )
            // InternalFortXTrans.g:2772:1: ( ( rule__Export__ExportedNameAssignment_1_2 ) )
            {
            // InternalFortXTrans.g:2772:1: ( ( rule__Export__ExportedNameAssignment_1_2 ) )
            // InternalFortXTrans.g:2773:2: ( rule__Export__ExportedNameAssignment_1_2 )
            {
             before(grammarAccess.getExportAccess().getExportedNameAssignment_1_2()); 
            // InternalFortXTrans.g:2774:2: ( rule__Export__ExportedNameAssignment_1_2 )
            // InternalFortXTrans.g:2774:3: rule__Export__ExportedNameAssignment_1_2
            {
            pushFollow(FOLLOW_2);
            rule__Export__ExportedNameAssignment_1_2();

            state._fsp--;


            }

             after(grammarAccess.getExportAccess().getExportedNameAssignment_1_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Export__Group_1__2__Impl"


    // $ANTLR start "rule__Export__Group_1__3"
    // InternalFortXTrans.g:2782:1: rule__Export__Group_1__3 : rule__Export__Group_1__3__Impl rule__Export__Group_1__4 ;
    public final void rule__Export__Group_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2786:1: ( rule__Export__Group_1__3__Impl rule__Export__Group_1__4 )
            // InternalFortXTrans.g:2787:2: rule__Export__Group_1__3__Impl rule__Export__Group_1__4
            {
            pushFollow(FOLLOW_14);
            rule__Export__Group_1__3__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Export__Group_1__4();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Export__Group_1__3"


    // $ANTLR start "rule__Export__Group_1__3__Impl"
    // InternalFortXTrans.g:2794:1: rule__Export__Group_1__3__Impl : ( ( rule__Export__Group_1_3__0 )* ) ;
    public final void rule__Export__Group_1__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2798:1: ( ( ( rule__Export__Group_1_3__0 )* ) )
            // InternalFortXTrans.g:2799:1: ( ( rule__Export__Group_1_3__0 )* )
            {
            // InternalFortXTrans.g:2799:1: ( ( rule__Export__Group_1_3__0 )* )
            // InternalFortXTrans.g:2800:2: ( rule__Export__Group_1_3__0 )*
            {
             before(grammarAccess.getExportAccess().getGroup_1_3()); 
            // InternalFortXTrans.g:2801:2: ( rule__Export__Group_1_3__0 )*
            loop32:
            do {
                int alt32=2;
                int LA32_0 = input.LA(1);

                if ( (LA32_0==29) ) {
                    alt32=1;
                }


                switch (alt32) {
            	case 1 :
            	    // InternalFortXTrans.g:2801:3: rule__Export__Group_1_3__0
            	    {
            	    pushFollow(FOLLOW_15);
            	    rule__Export__Group_1_3__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop32;
                }
            } while (true);

             after(grammarAccess.getExportAccess().getGroup_1_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Export__Group_1__3__Impl"


    // $ANTLR start "rule__Export__Group_1__4"
    // InternalFortXTrans.g:2809:1: rule__Export__Group_1__4 : rule__Export__Group_1__4__Impl ;
    public final void rule__Export__Group_1__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2813:1: ( rule__Export__Group_1__4__Impl )
            // InternalFortXTrans.g:2814:2: rule__Export__Group_1__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Export__Group_1__4__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Export__Group_1__4"


    // $ANTLR start "rule__Export__Group_1__4__Impl"
    // InternalFortXTrans.g:2820:1: rule__Export__Group_1__4__Impl : ( '}' ) ;
    public final void rule__Export__Group_1__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2824:1: ( ( '}' ) )
            // InternalFortXTrans.g:2825:1: ( '}' )
            {
            // InternalFortXTrans.g:2825:1: ( '}' )
            // InternalFortXTrans.g:2826:2: '}'
            {
             before(grammarAccess.getExportAccess().getRightCurlyBracketKeyword_1_4()); 
            match(input,28,FOLLOW_2); 
             after(grammarAccess.getExportAccess().getRightCurlyBracketKeyword_1_4()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Export__Group_1__4__Impl"


    // $ANTLR start "rule__Export__Group_1_3__0"
    // InternalFortXTrans.g:2836:1: rule__Export__Group_1_3__0 : rule__Export__Group_1_3__0__Impl rule__Export__Group_1_3__1 ;
    public final void rule__Export__Group_1_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2840:1: ( rule__Export__Group_1_3__0__Impl rule__Export__Group_1_3__1 )
            // InternalFortXTrans.g:2841:2: rule__Export__Group_1_3__0__Impl rule__Export__Group_1_3__1
            {
            pushFollow(FOLLOW_5);
            rule__Export__Group_1_3__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Export__Group_1_3__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Export__Group_1_3__0"


    // $ANTLR start "rule__Export__Group_1_3__0__Impl"
    // InternalFortXTrans.g:2848:1: rule__Export__Group_1_3__0__Impl : ( ',' ) ;
    public final void rule__Export__Group_1_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2852:1: ( ( ',' ) )
            // InternalFortXTrans.g:2853:1: ( ',' )
            {
            // InternalFortXTrans.g:2853:1: ( ',' )
            // InternalFortXTrans.g:2854:2: ','
            {
             before(grammarAccess.getExportAccess().getCommaKeyword_1_3_0()); 
            match(input,29,FOLLOW_2); 
             after(grammarAccess.getExportAccess().getCommaKeyword_1_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Export__Group_1_3__0__Impl"


    // $ANTLR start "rule__Export__Group_1_3__1"
    // InternalFortXTrans.g:2863:1: rule__Export__Group_1_3__1 : rule__Export__Group_1_3__1__Impl ;
    public final void rule__Export__Group_1_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2867:1: ( rule__Export__Group_1_3__1__Impl )
            // InternalFortXTrans.g:2868:2: rule__Export__Group_1_3__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Export__Group_1_3__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Export__Group_1_3__1"


    // $ANTLR start "rule__Export__Group_1_3__1__Impl"
    // InternalFortXTrans.g:2874:1: rule__Export__Group_1_3__1__Impl : ( ( rule__Export__ExportedNameAssignment_1_3_1 ) ) ;
    public final void rule__Export__Group_1_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2878:1: ( ( ( rule__Export__ExportedNameAssignment_1_3_1 ) ) )
            // InternalFortXTrans.g:2879:1: ( ( rule__Export__ExportedNameAssignment_1_3_1 ) )
            {
            // InternalFortXTrans.g:2879:1: ( ( rule__Export__ExportedNameAssignment_1_3_1 ) )
            // InternalFortXTrans.g:2880:2: ( rule__Export__ExportedNameAssignment_1_3_1 )
            {
             before(grammarAccess.getExportAccess().getExportedNameAssignment_1_3_1()); 
            // InternalFortXTrans.g:2881:2: ( rule__Export__ExportedNameAssignment_1_3_1 )
            // InternalFortXTrans.g:2881:3: rule__Export__ExportedNameAssignment_1_3_1
            {
            pushFollow(FOLLOW_2);
            rule__Export__ExportedNameAssignment_1_3_1();

            state._fsp--;


            }

             after(grammarAccess.getExportAccess().getExportedNameAssignment_1_3_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Export__Group_1_3__1__Impl"


    // $ANTLR start "rule__ImportedNames__Group_0__0"
    // InternalFortXTrans.g:2890:1: rule__ImportedNames__Group_0__0 : rule__ImportedNames__Group_0__0__Impl rule__ImportedNames__Group_0__1 ;
    public final void rule__ImportedNames__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2894:1: ( rule__ImportedNames__Group_0__0__Impl rule__ImportedNames__Group_0__1 )
            // InternalFortXTrans.g:2895:2: rule__ImportedNames__Group_0__0__Impl rule__ImportedNames__Group_0__1
            {
            pushFollow(FOLLOW_16);
            rule__ImportedNames__Group_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ImportedNames__Group_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_0__0"


    // $ANTLR start "rule__ImportedNames__Group_0__0__Impl"
    // InternalFortXTrans.g:2902:1: rule__ImportedNames__Group_0__0__Impl : ( ( rule__ImportedNames__ImpnameAssignment_0_0 ) ) ;
    public final void rule__ImportedNames__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2906:1: ( ( ( rule__ImportedNames__ImpnameAssignment_0_0 ) ) )
            // InternalFortXTrans.g:2907:1: ( ( rule__ImportedNames__ImpnameAssignment_0_0 ) )
            {
            // InternalFortXTrans.g:2907:1: ( ( rule__ImportedNames__ImpnameAssignment_0_0 ) )
            // InternalFortXTrans.g:2908:2: ( rule__ImportedNames__ImpnameAssignment_0_0 )
            {
             before(grammarAccess.getImportedNamesAccess().getImpnameAssignment_0_0()); 
            // InternalFortXTrans.g:2909:2: ( rule__ImportedNames__ImpnameAssignment_0_0 )
            // InternalFortXTrans.g:2909:3: rule__ImportedNames__ImpnameAssignment_0_0
            {
            pushFollow(FOLLOW_2);
            rule__ImportedNames__ImpnameAssignment_0_0();

            state._fsp--;


            }

             after(grammarAccess.getImportedNamesAccess().getImpnameAssignment_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_0__0__Impl"


    // $ANTLR start "rule__ImportedNames__Group_0__1"
    // InternalFortXTrans.g:2917:1: rule__ImportedNames__Group_0__1 : rule__ImportedNames__Group_0__1__Impl rule__ImportedNames__Group_0__2 ;
    public final void rule__ImportedNames__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2921:1: ( rule__ImportedNames__Group_0__1__Impl rule__ImportedNames__Group_0__2 )
            // InternalFortXTrans.g:2922:2: rule__ImportedNames__Group_0__1__Impl rule__ImportedNames__Group_0__2
            {
            pushFollow(FOLLOW_13);
            rule__ImportedNames__Group_0__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ImportedNames__Group_0__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_0__1"


    // $ANTLR start "rule__ImportedNames__Group_0__1__Impl"
    // InternalFortXTrans.g:2929:1: rule__ImportedNames__Group_0__1__Impl : ( '.' ) ;
    public final void rule__ImportedNames__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2933:1: ( ( '.' ) )
            // InternalFortXTrans.g:2934:1: ( '.' )
            {
            // InternalFortXTrans.g:2934:1: ( '.' )
            // InternalFortXTrans.g:2935:2: '.'
            {
             before(grammarAccess.getImportedNamesAccess().getFullStopKeyword_0_1()); 
            match(input,30,FOLLOW_2); 
             after(grammarAccess.getImportedNamesAccess().getFullStopKeyword_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_0__1__Impl"


    // $ANTLR start "rule__ImportedNames__Group_0__2"
    // InternalFortXTrans.g:2944:1: rule__ImportedNames__Group_0__2 : rule__ImportedNames__Group_0__2__Impl rule__ImportedNames__Group_0__3 ;
    public final void rule__ImportedNames__Group_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2948:1: ( rule__ImportedNames__Group_0__2__Impl rule__ImportedNames__Group_0__3 )
            // InternalFortXTrans.g:2949:2: rule__ImportedNames__Group_0__2__Impl rule__ImportedNames__Group_0__3
            {
            pushFollow(FOLLOW_17);
            rule__ImportedNames__Group_0__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ImportedNames__Group_0__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_0__2"


    // $ANTLR start "rule__ImportedNames__Group_0__2__Impl"
    // InternalFortXTrans.g:2956:1: rule__ImportedNames__Group_0__2__Impl : ( '{' ) ;
    public final void rule__ImportedNames__Group_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2960:1: ( ( '{' ) )
            // InternalFortXTrans.g:2961:1: ( '{' )
            {
            // InternalFortXTrans.g:2961:1: ( '{' )
            // InternalFortXTrans.g:2962:2: '{'
            {
             before(grammarAccess.getImportedNamesAccess().getLeftCurlyBracketKeyword_0_2()); 
            match(input,31,FOLLOW_2); 
             after(grammarAccess.getImportedNamesAccess().getLeftCurlyBracketKeyword_0_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_0__2__Impl"


    // $ANTLR start "rule__ImportedNames__Group_0__3"
    // InternalFortXTrans.g:2971:1: rule__ImportedNames__Group_0__3 : rule__ImportedNames__Group_0__3__Impl rule__ImportedNames__Group_0__4 ;
    public final void rule__ImportedNames__Group_0__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2975:1: ( rule__ImportedNames__Group_0__3__Impl rule__ImportedNames__Group_0__4 )
            // InternalFortXTrans.g:2976:2: rule__ImportedNames__Group_0__3__Impl rule__ImportedNames__Group_0__4
            {
            pushFollow(FOLLOW_18);
            rule__ImportedNames__Group_0__3__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ImportedNames__Group_0__4();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_0__3"


    // $ANTLR start "rule__ImportedNames__Group_0__3__Impl"
    // InternalFortXTrans.g:2983:1: rule__ImportedNames__Group_0__3__Impl : ( RULE_DOTS ) ;
    public final void rule__ImportedNames__Group_0__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:2987:1: ( ( RULE_DOTS ) )
            // InternalFortXTrans.g:2988:1: ( RULE_DOTS )
            {
            // InternalFortXTrans.g:2988:1: ( RULE_DOTS )
            // InternalFortXTrans.g:2989:2: RULE_DOTS
            {
             before(grammarAccess.getImportedNamesAccess().getDOTSTerminalRuleCall_0_3()); 
            match(input,RULE_DOTS,FOLLOW_2); 
             after(grammarAccess.getImportedNamesAccess().getDOTSTerminalRuleCall_0_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_0__3__Impl"


    // $ANTLR start "rule__ImportedNames__Group_0__4"
    // InternalFortXTrans.g:2998:1: rule__ImportedNames__Group_0__4 : rule__ImportedNames__Group_0__4__Impl rule__ImportedNames__Group_0__5 ;
    public final void rule__ImportedNames__Group_0__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3002:1: ( rule__ImportedNames__Group_0__4__Impl rule__ImportedNames__Group_0__5 )
            // InternalFortXTrans.g:3003:2: rule__ImportedNames__Group_0__4__Impl rule__ImportedNames__Group_0__5
            {
            pushFollow(FOLLOW_19);
            rule__ImportedNames__Group_0__4__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ImportedNames__Group_0__5();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_0__4"


    // $ANTLR start "rule__ImportedNames__Group_0__4__Impl"
    // InternalFortXTrans.g:3010:1: rule__ImportedNames__Group_0__4__Impl : ( '}' ) ;
    public final void rule__ImportedNames__Group_0__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3014:1: ( ( '}' ) )
            // InternalFortXTrans.g:3015:1: ( '}' )
            {
            // InternalFortXTrans.g:3015:1: ( '}' )
            // InternalFortXTrans.g:3016:2: '}'
            {
             before(grammarAccess.getImportedNamesAccess().getRightCurlyBracketKeyword_0_4()); 
            match(input,28,FOLLOW_2); 
             after(grammarAccess.getImportedNamesAccess().getRightCurlyBracketKeyword_0_4()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_0__4__Impl"


    // $ANTLR start "rule__ImportedNames__Group_0__5"
    // InternalFortXTrans.g:3025:1: rule__ImportedNames__Group_0__5 : rule__ImportedNames__Group_0__5__Impl ;
    public final void rule__ImportedNames__Group_0__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3029:1: ( rule__ImportedNames__Group_0__5__Impl )
            // InternalFortXTrans.g:3030:2: rule__ImportedNames__Group_0__5__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ImportedNames__Group_0__5__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_0__5"


    // $ANTLR start "rule__ImportedNames__Group_0__5__Impl"
    // InternalFortXTrans.g:3036:1: rule__ImportedNames__Group_0__5__Impl : ( ( rule__ImportedNames__Group_0_5__0 )? ) ;
    public final void rule__ImportedNames__Group_0__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3040:1: ( ( ( rule__ImportedNames__Group_0_5__0 )? ) )
            // InternalFortXTrans.g:3041:1: ( ( rule__ImportedNames__Group_0_5__0 )? )
            {
            // InternalFortXTrans.g:3041:1: ( ( rule__ImportedNames__Group_0_5__0 )? )
            // InternalFortXTrans.g:3042:2: ( rule__ImportedNames__Group_0_5__0 )?
            {
             before(grammarAccess.getImportedNamesAccess().getGroup_0_5()); 
            // InternalFortXTrans.g:3043:2: ( rule__ImportedNames__Group_0_5__0 )?
            int alt33=2;
            int LA33_0 = input.LA(1);

            if ( (LA33_0==57) ) {
                alt33=1;
            }
            switch (alt33) {
                case 1 :
                    // InternalFortXTrans.g:3043:3: rule__ImportedNames__Group_0_5__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ImportedNames__Group_0_5__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getImportedNamesAccess().getGroup_0_5()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_0__5__Impl"


    // $ANTLR start "rule__ImportedNames__Group_0_5__0"
    // InternalFortXTrans.g:3052:1: rule__ImportedNames__Group_0_5__0 : rule__ImportedNames__Group_0_5__0__Impl rule__ImportedNames__Group_0_5__1 ;
    public final void rule__ImportedNames__Group_0_5__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3056:1: ( rule__ImportedNames__Group_0_5__0__Impl rule__ImportedNames__Group_0_5__1 )
            // InternalFortXTrans.g:3057:2: rule__ImportedNames__Group_0_5__0__Impl rule__ImportedNames__Group_0_5__1
            {
            pushFollow(FOLLOW_12);
            rule__ImportedNames__Group_0_5__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ImportedNames__Group_0_5__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_0_5__0"


    // $ANTLR start "rule__ImportedNames__Group_0_5__0__Impl"
    // InternalFortXTrans.g:3064:1: rule__ImportedNames__Group_0_5__0__Impl : ( ( rule__ImportedNames__ExceptAssignment_0_5_0 ) ) ;
    public final void rule__ImportedNames__Group_0_5__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3068:1: ( ( ( rule__ImportedNames__ExceptAssignment_0_5_0 ) ) )
            // InternalFortXTrans.g:3069:1: ( ( rule__ImportedNames__ExceptAssignment_0_5_0 ) )
            {
            // InternalFortXTrans.g:3069:1: ( ( rule__ImportedNames__ExceptAssignment_0_5_0 ) )
            // InternalFortXTrans.g:3070:2: ( rule__ImportedNames__ExceptAssignment_0_5_0 )
            {
             before(grammarAccess.getImportedNamesAccess().getExceptAssignment_0_5_0()); 
            // InternalFortXTrans.g:3071:2: ( rule__ImportedNames__ExceptAssignment_0_5_0 )
            // InternalFortXTrans.g:3071:3: rule__ImportedNames__ExceptAssignment_0_5_0
            {
            pushFollow(FOLLOW_2);
            rule__ImportedNames__ExceptAssignment_0_5_0();

            state._fsp--;


            }

             after(grammarAccess.getImportedNamesAccess().getExceptAssignment_0_5_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_0_5__0__Impl"


    // $ANTLR start "rule__ImportedNames__Group_0_5__1"
    // InternalFortXTrans.g:3079:1: rule__ImportedNames__Group_0_5__1 : rule__ImportedNames__Group_0_5__1__Impl ;
    public final void rule__ImportedNames__Group_0_5__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3083:1: ( rule__ImportedNames__Group_0_5__1__Impl )
            // InternalFortXTrans.g:3084:2: rule__ImportedNames__Group_0_5__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ImportedNames__Group_0_5__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_0_5__1"


    // $ANTLR start "rule__ImportedNames__Group_0_5__1__Impl"
    // InternalFortXTrans.g:3090:1: rule__ImportedNames__Group_0_5__1__Impl : ( ( rule__ImportedNames__SimpAssignment_0_5_1 ) ) ;
    public final void rule__ImportedNames__Group_0_5__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3094:1: ( ( ( rule__ImportedNames__SimpAssignment_0_5_1 ) ) )
            // InternalFortXTrans.g:3095:1: ( ( rule__ImportedNames__SimpAssignment_0_5_1 ) )
            {
            // InternalFortXTrans.g:3095:1: ( ( rule__ImportedNames__SimpAssignment_0_5_1 ) )
            // InternalFortXTrans.g:3096:2: ( rule__ImportedNames__SimpAssignment_0_5_1 )
            {
             before(grammarAccess.getImportedNamesAccess().getSimpAssignment_0_5_1()); 
            // InternalFortXTrans.g:3097:2: ( rule__ImportedNames__SimpAssignment_0_5_1 )
            // InternalFortXTrans.g:3097:3: rule__ImportedNames__SimpAssignment_0_5_1
            {
            pushFollow(FOLLOW_2);
            rule__ImportedNames__SimpAssignment_0_5_1();

            state._fsp--;


            }

             after(grammarAccess.getImportedNamesAccess().getSimpAssignment_0_5_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_0_5__1__Impl"


    // $ANTLR start "rule__ImportedNames__Group_1__0"
    // InternalFortXTrans.g:3106:1: rule__ImportedNames__Group_1__0 : rule__ImportedNames__Group_1__0__Impl rule__ImportedNames__Group_1__1 ;
    public final void rule__ImportedNames__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3110:1: ( rule__ImportedNames__Group_1__0__Impl rule__ImportedNames__Group_1__1 )
            // InternalFortXTrans.g:3111:2: rule__ImportedNames__Group_1__0__Impl rule__ImportedNames__Group_1__1
            {
            pushFollow(FOLLOW_16);
            rule__ImportedNames__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ImportedNames__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_1__0"


    // $ANTLR start "rule__ImportedNames__Group_1__0__Impl"
    // InternalFortXTrans.g:3118:1: rule__ImportedNames__Group_1__0__Impl : ( ( rule__ImportedNames__ImpnameAssignment_1_0 ) ) ;
    public final void rule__ImportedNames__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3122:1: ( ( ( rule__ImportedNames__ImpnameAssignment_1_0 ) ) )
            // InternalFortXTrans.g:3123:1: ( ( rule__ImportedNames__ImpnameAssignment_1_0 ) )
            {
            // InternalFortXTrans.g:3123:1: ( ( rule__ImportedNames__ImpnameAssignment_1_0 ) )
            // InternalFortXTrans.g:3124:2: ( rule__ImportedNames__ImpnameAssignment_1_0 )
            {
             before(grammarAccess.getImportedNamesAccess().getImpnameAssignment_1_0()); 
            // InternalFortXTrans.g:3125:2: ( rule__ImportedNames__ImpnameAssignment_1_0 )
            // InternalFortXTrans.g:3125:3: rule__ImportedNames__ImpnameAssignment_1_0
            {
            pushFollow(FOLLOW_2);
            rule__ImportedNames__ImpnameAssignment_1_0();

            state._fsp--;


            }

             after(grammarAccess.getImportedNamesAccess().getImpnameAssignment_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_1__0__Impl"


    // $ANTLR start "rule__ImportedNames__Group_1__1"
    // InternalFortXTrans.g:3133:1: rule__ImportedNames__Group_1__1 : rule__ImportedNames__Group_1__1__Impl rule__ImportedNames__Group_1__2 ;
    public final void rule__ImportedNames__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3137:1: ( rule__ImportedNames__Group_1__1__Impl rule__ImportedNames__Group_1__2 )
            // InternalFortXTrans.g:3138:2: rule__ImportedNames__Group_1__1__Impl rule__ImportedNames__Group_1__2
            {
            pushFollow(FOLLOW_13);
            rule__ImportedNames__Group_1__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ImportedNames__Group_1__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_1__1"


    // $ANTLR start "rule__ImportedNames__Group_1__1__Impl"
    // InternalFortXTrans.g:3145:1: rule__ImportedNames__Group_1__1__Impl : ( '.' ) ;
    public final void rule__ImportedNames__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3149:1: ( ( '.' ) )
            // InternalFortXTrans.g:3150:1: ( '.' )
            {
            // InternalFortXTrans.g:3150:1: ( '.' )
            // InternalFortXTrans.g:3151:2: '.'
            {
             before(grammarAccess.getImportedNamesAccess().getFullStopKeyword_1_1()); 
            match(input,30,FOLLOW_2); 
             after(grammarAccess.getImportedNamesAccess().getFullStopKeyword_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_1__1__Impl"


    // $ANTLR start "rule__ImportedNames__Group_1__2"
    // InternalFortXTrans.g:3160:1: rule__ImportedNames__Group_1__2 : rule__ImportedNames__Group_1__2__Impl rule__ImportedNames__Group_1__3 ;
    public final void rule__ImportedNames__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3164:1: ( rule__ImportedNames__Group_1__2__Impl rule__ImportedNames__Group_1__3 )
            // InternalFortXTrans.g:3165:2: rule__ImportedNames__Group_1__2__Impl rule__ImportedNames__Group_1__3
            {
            pushFollow(FOLLOW_5);
            rule__ImportedNames__Group_1__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ImportedNames__Group_1__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_1__2"


    // $ANTLR start "rule__ImportedNames__Group_1__2__Impl"
    // InternalFortXTrans.g:3172:1: rule__ImportedNames__Group_1__2__Impl : ( '{' ) ;
    public final void rule__ImportedNames__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3176:1: ( ( '{' ) )
            // InternalFortXTrans.g:3177:1: ( '{' )
            {
            // InternalFortXTrans.g:3177:1: ( '{' )
            // InternalFortXTrans.g:3178:2: '{'
            {
             before(grammarAccess.getImportedNamesAccess().getLeftCurlyBracketKeyword_1_2()); 
            match(input,31,FOLLOW_2); 
             after(grammarAccess.getImportedNamesAccess().getLeftCurlyBracketKeyword_1_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_1__2__Impl"


    // $ANTLR start "rule__ImportedNames__Group_1__3"
    // InternalFortXTrans.g:3187:1: rule__ImportedNames__Group_1__3 : rule__ImportedNames__Group_1__3__Impl rule__ImportedNames__Group_1__4 ;
    public final void rule__ImportedNames__Group_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3191:1: ( rule__ImportedNames__Group_1__3__Impl rule__ImportedNames__Group_1__4 )
            // InternalFortXTrans.g:3192:2: rule__ImportedNames__Group_1__3__Impl rule__ImportedNames__Group_1__4
            {
            pushFollow(FOLLOW_14);
            rule__ImportedNames__Group_1__3__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ImportedNames__Group_1__4();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_1__3"


    // $ANTLR start "rule__ImportedNames__Group_1__3__Impl"
    // InternalFortXTrans.g:3199:1: rule__ImportedNames__Group_1__3__Impl : ( ( rule__ImportedNames__SimpListAssignment_1_3 ) ) ;
    public final void rule__ImportedNames__Group_1__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3203:1: ( ( ( rule__ImportedNames__SimpListAssignment_1_3 ) ) )
            // InternalFortXTrans.g:3204:1: ( ( rule__ImportedNames__SimpListAssignment_1_3 ) )
            {
            // InternalFortXTrans.g:3204:1: ( ( rule__ImportedNames__SimpListAssignment_1_3 ) )
            // InternalFortXTrans.g:3205:2: ( rule__ImportedNames__SimpListAssignment_1_3 )
            {
             before(grammarAccess.getImportedNamesAccess().getSimpListAssignment_1_3()); 
            // InternalFortXTrans.g:3206:2: ( rule__ImportedNames__SimpListAssignment_1_3 )
            // InternalFortXTrans.g:3206:3: rule__ImportedNames__SimpListAssignment_1_3
            {
            pushFollow(FOLLOW_2);
            rule__ImportedNames__SimpListAssignment_1_3();

            state._fsp--;


            }

             after(grammarAccess.getImportedNamesAccess().getSimpListAssignment_1_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_1__3__Impl"


    // $ANTLR start "rule__ImportedNames__Group_1__4"
    // InternalFortXTrans.g:3214:1: rule__ImportedNames__Group_1__4 : rule__ImportedNames__Group_1__4__Impl rule__ImportedNames__Group_1__5 ;
    public final void rule__ImportedNames__Group_1__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3218:1: ( rule__ImportedNames__Group_1__4__Impl rule__ImportedNames__Group_1__5 )
            // InternalFortXTrans.g:3219:2: rule__ImportedNames__Group_1__4__Impl rule__ImportedNames__Group_1__5
            {
            pushFollow(FOLLOW_14);
            rule__ImportedNames__Group_1__4__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ImportedNames__Group_1__5();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_1__4"


    // $ANTLR start "rule__ImportedNames__Group_1__4__Impl"
    // InternalFortXTrans.g:3226:1: rule__ImportedNames__Group_1__4__Impl : ( ( rule__ImportedNames__Group_1_4__0 )* ) ;
    public final void rule__ImportedNames__Group_1__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3230:1: ( ( ( rule__ImportedNames__Group_1_4__0 )* ) )
            // InternalFortXTrans.g:3231:1: ( ( rule__ImportedNames__Group_1_4__0 )* )
            {
            // InternalFortXTrans.g:3231:1: ( ( rule__ImportedNames__Group_1_4__0 )* )
            // InternalFortXTrans.g:3232:2: ( rule__ImportedNames__Group_1_4__0 )*
            {
             before(grammarAccess.getImportedNamesAccess().getGroup_1_4()); 
            // InternalFortXTrans.g:3233:2: ( rule__ImportedNames__Group_1_4__0 )*
            loop34:
            do {
                int alt34=2;
                int LA34_0 = input.LA(1);

                if ( (LA34_0==29) ) {
                    int LA34_1 = input.LA(2);

                    if ( (LA34_1==RULE_ID) ) {
                        alt34=1;
                    }


                }


                switch (alt34) {
            	case 1 :
            	    // InternalFortXTrans.g:3233:3: rule__ImportedNames__Group_1_4__0
            	    {
            	    pushFollow(FOLLOW_15);
            	    rule__ImportedNames__Group_1_4__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop34;
                }
            } while (true);

             after(grammarAccess.getImportedNamesAccess().getGroup_1_4()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_1__4__Impl"


    // $ANTLR start "rule__ImportedNames__Group_1__5"
    // InternalFortXTrans.g:3241:1: rule__ImportedNames__Group_1__5 : rule__ImportedNames__Group_1__5__Impl rule__ImportedNames__Group_1__6 ;
    public final void rule__ImportedNames__Group_1__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3245:1: ( rule__ImportedNames__Group_1__5__Impl rule__ImportedNames__Group_1__6 )
            // InternalFortXTrans.g:3246:2: rule__ImportedNames__Group_1__5__Impl rule__ImportedNames__Group_1__6
            {
            pushFollow(FOLLOW_14);
            rule__ImportedNames__Group_1__5__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ImportedNames__Group_1__6();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_1__5"


    // $ANTLR start "rule__ImportedNames__Group_1__5__Impl"
    // InternalFortXTrans.g:3253:1: rule__ImportedNames__Group_1__5__Impl : ( ( rule__ImportedNames__Group_1_5__0 )? ) ;
    public final void rule__ImportedNames__Group_1__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3257:1: ( ( ( rule__ImportedNames__Group_1_5__0 )? ) )
            // InternalFortXTrans.g:3258:1: ( ( rule__ImportedNames__Group_1_5__0 )? )
            {
            // InternalFortXTrans.g:3258:1: ( ( rule__ImportedNames__Group_1_5__0 )? )
            // InternalFortXTrans.g:3259:2: ( rule__ImportedNames__Group_1_5__0 )?
            {
             before(grammarAccess.getImportedNamesAccess().getGroup_1_5()); 
            // InternalFortXTrans.g:3260:2: ( rule__ImportedNames__Group_1_5__0 )?
            int alt35=2;
            int LA35_0 = input.LA(1);

            if ( (LA35_0==29) ) {
                alt35=1;
            }
            switch (alt35) {
                case 1 :
                    // InternalFortXTrans.g:3260:3: rule__ImportedNames__Group_1_5__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ImportedNames__Group_1_5__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getImportedNamesAccess().getGroup_1_5()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_1__5__Impl"


    // $ANTLR start "rule__ImportedNames__Group_1__6"
    // InternalFortXTrans.g:3268:1: rule__ImportedNames__Group_1__6 : rule__ImportedNames__Group_1__6__Impl ;
    public final void rule__ImportedNames__Group_1__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3272:1: ( rule__ImportedNames__Group_1__6__Impl )
            // InternalFortXTrans.g:3273:2: rule__ImportedNames__Group_1__6__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ImportedNames__Group_1__6__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_1__6"


    // $ANTLR start "rule__ImportedNames__Group_1__6__Impl"
    // InternalFortXTrans.g:3279:1: rule__ImportedNames__Group_1__6__Impl : ( '}' ) ;
    public final void rule__ImportedNames__Group_1__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3283:1: ( ( '}' ) )
            // InternalFortXTrans.g:3284:1: ( '}' )
            {
            // InternalFortXTrans.g:3284:1: ( '}' )
            // InternalFortXTrans.g:3285:2: '}'
            {
             before(grammarAccess.getImportedNamesAccess().getRightCurlyBracketKeyword_1_6()); 
            match(input,28,FOLLOW_2); 
             after(grammarAccess.getImportedNamesAccess().getRightCurlyBracketKeyword_1_6()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_1__6__Impl"


    // $ANTLR start "rule__ImportedNames__Group_1_4__0"
    // InternalFortXTrans.g:3295:1: rule__ImportedNames__Group_1_4__0 : rule__ImportedNames__Group_1_4__0__Impl rule__ImportedNames__Group_1_4__1 ;
    public final void rule__ImportedNames__Group_1_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3299:1: ( rule__ImportedNames__Group_1_4__0__Impl rule__ImportedNames__Group_1_4__1 )
            // InternalFortXTrans.g:3300:2: rule__ImportedNames__Group_1_4__0__Impl rule__ImportedNames__Group_1_4__1
            {
            pushFollow(FOLLOW_5);
            rule__ImportedNames__Group_1_4__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ImportedNames__Group_1_4__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_1_4__0"


    // $ANTLR start "rule__ImportedNames__Group_1_4__0__Impl"
    // InternalFortXTrans.g:3307:1: rule__ImportedNames__Group_1_4__0__Impl : ( ',' ) ;
    public final void rule__ImportedNames__Group_1_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3311:1: ( ( ',' ) )
            // InternalFortXTrans.g:3312:1: ( ',' )
            {
            // InternalFortXTrans.g:3312:1: ( ',' )
            // InternalFortXTrans.g:3313:2: ','
            {
             before(grammarAccess.getImportedNamesAccess().getCommaKeyword_1_4_0()); 
            match(input,29,FOLLOW_2); 
             after(grammarAccess.getImportedNamesAccess().getCommaKeyword_1_4_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_1_4__0__Impl"


    // $ANTLR start "rule__ImportedNames__Group_1_4__1"
    // InternalFortXTrans.g:3322:1: rule__ImportedNames__Group_1_4__1 : rule__ImportedNames__Group_1_4__1__Impl ;
    public final void rule__ImportedNames__Group_1_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3326:1: ( rule__ImportedNames__Group_1_4__1__Impl )
            // InternalFortXTrans.g:3327:2: rule__ImportedNames__Group_1_4__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ImportedNames__Group_1_4__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_1_4__1"


    // $ANTLR start "rule__ImportedNames__Group_1_4__1__Impl"
    // InternalFortXTrans.g:3333:1: rule__ImportedNames__Group_1_4__1__Impl : ( ( rule__ImportedNames__SimpListAssignment_1_4_1 ) ) ;
    public final void rule__ImportedNames__Group_1_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3337:1: ( ( ( rule__ImportedNames__SimpListAssignment_1_4_1 ) ) )
            // InternalFortXTrans.g:3338:1: ( ( rule__ImportedNames__SimpListAssignment_1_4_1 ) )
            {
            // InternalFortXTrans.g:3338:1: ( ( rule__ImportedNames__SimpListAssignment_1_4_1 ) )
            // InternalFortXTrans.g:3339:2: ( rule__ImportedNames__SimpListAssignment_1_4_1 )
            {
             before(grammarAccess.getImportedNamesAccess().getSimpListAssignment_1_4_1()); 
            // InternalFortXTrans.g:3340:2: ( rule__ImportedNames__SimpListAssignment_1_4_1 )
            // InternalFortXTrans.g:3340:3: rule__ImportedNames__SimpListAssignment_1_4_1
            {
            pushFollow(FOLLOW_2);
            rule__ImportedNames__SimpListAssignment_1_4_1();

            state._fsp--;


            }

             after(grammarAccess.getImportedNamesAccess().getSimpListAssignment_1_4_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_1_4__1__Impl"


    // $ANTLR start "rule__ImportedNames__Group_1_5__0"
    // InternalFortXTrans.g:3349:1: rule__ImportedNames__Group_1_5__0 : rule__ImportedNames__Group_1_5__0__Impl rule__ImportedNames__Group_1_5__1 ;
    public final void rule__ImportedNames__Group_1_5__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3353:1: ( rule__ImportedNames__Group_1_5__0__Impl rule__ImportedNames__Group_1_5__1 )
            // InternalFortXTrans.g:3354:2: rule__ImportedNames__Group_1_5__0__Impl rule__ImportedNames__Group_1_5__1
            {
            pushFollow(FOLLOW_17);
            rule__ImportedNames__Group_1_5__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ImportedNames__Group_1_5__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_1_5__0"


    // $ANTLR start "rule__ImportedNames__Group_1_5__0__Impl"
    // InternalFortXTrans.g:3361:1: rule__ImportedNames__Group_1_5__0__Impl : ( ( rule__ImportedNames__CommaAssignment_1_5_0 ) ) ;
    public final void rule__ImportedNames__Group_1_5__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3365:1: ( ( ( rule__ImportedNames__CommaAssignment_1_5_0 ) ) )
            // InternalFortXTrans.g:3366:1: ( ( rule__ImportedNames__CommaAssignment_1_5_0 ) )
            {
            // InternalFortXTrans.g:3366:1: ( ( rule__ImportedNames__CommaAssignment_1_5_0 ) )
            // InternalFortXTrans.g:3367:2: ( rule__ImportedNames__CommaAssignment_1_5_0 )
            {
             before(grammarAccess.getImportedNamesAccess().getCommaAssignment_1_5_0()); 
            // InternalFortXTrans.g:3368:2: ( rule__ImportedNames__CommaAssignment_1_5_0 )
            // InternalFortXTrans.g:3368:3: rule__ImportedNames__CommaAssignment_1_5_0
            {
            pushFollow(FOLLOW_2);
            rule__ImportedNames__CommaAssignment_1_5_0();

            state._fsp--;


            }

             after(grammarAccess.getImportedNamesAccess().getCommaAssignment_1_5_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_1_5__0__Impl"


    // $ANTLR start "rule__ImportedNames__Group_1_5__1"
    // InternalFortXTrans.g:3376:1: rule__ImportedNames__Group_1_5__1 : rule__ImportedNames__Group_1_5__1__Impl ;
    public final void rule__ImportedNames__Group_1_5__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3380:1: ( rule__ImportedNames__Group_1_5__1__Impl )
            // InternalFortXTrans.g:3381:2: rule__ImportedNames__Group_1_5__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ImportedNames__Group_1_5__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_1_5__1"


    // $ANTLR start "rule__ImportedNames__Group_1_5__1__Impl"
    // InternalFortXTrans.g:3387:1: rule__ImportedNames__Group_1_5__1__Impl : ( ( rule__ImportedNames__DotsAssignment_1_5_1 ) ) ;
    public final void rule__ImportedNames__Group_1_5__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3391:1: ( ( ( rule__ImportedNames__DotsAssignment_1_5_1 ) ) )
            // InternalFortXTrans.g:3392:1: ( ( rule__ImportedNames__DotsAssignment_1_5_1 ) )
            {
            // InternalFortXTrans.g:3392:1: ( ( rule__ImportedNames__DotsAssignment_1_5_1 ) )
            // InternalFortXTrans.g:3393:2: ( rule__ImportedNames__DotsAssignment_1_5_1 )
            {
             before(grammarAccess.getImportedNamesAccess().getDotsAssignment_1_5_1()); 
            // InternalFortXTrans.g:3394:2: ( rule__ImportedNames__DotsAssignment_1_5_1 )
            // InternalFortXTrans.g:3394:3: rule__ImportedNames__DotsAssignment_1_5_1
            {
            pushFollow(FOLLOW_2);
            rule__ImportedNames__DotsAssignment_1_5_1();

            state._fsp--;


            }

             after(grammarAccess.getImportedNamesAccess().getDotsAssignment_1_5_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_1_5__1__Impl"


    // $ANTLR start "rule__ImportedNames__Group_2__0"
    // InternalFortXTrans.g:3403:1: rule__ImportedNames__Group_2__0 : rule__ImportedNames__Group_2__0__Impl rule__ImportedNames__Group_2__1 ;
    public final void rule__ImportedNames__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3407:1: ( rule__ImportedNames__Group_2__0__Impl rule__ImportedNames__Group_2__1 )
            // InternalFortXTrans.g:3408:2: rule__ImportedNames__Group_2__0__Impl rule__ImportedNames__Group_2__1
            {
            pushFollow(FOLLOW_20);
            rule__ImportedNames__Group_2__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ImportedNames__Group_2__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_2__0"


    // $ANTLR start "rule__ImportedNames__Group_2__0__Impl"
    // InternalFortXTrans.g:3415:1: rule__ImportedNames__Group_2__0__Impl : ( ( rule__ImportedNames__ImpnameAssignment_2_0 ) ) ;
    public final void rule__ImportedNames__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3419:1: ( ( ( rule__ImportedNames__ImpnameAssignment_2_0 ) ) )
            // InternalFortXTrans.g:3420:1: ( ( rule__ImportedNames__ImpnameAssignment_2_0 ) )
            {
            // InternalFortXTrans.g:3420:1: ( ( rule__ImportedNames__ImpnameAssignment_2_0 ) )
            // InternalFortXTrans.g:3421:2: ( rule__ImportedNames__ImpnameAssignment_2_0 )
            {
             before(grammarAccess.getImportedNamesAccess().getImpnameAssignment_2_0()); 
            // InternalFortXTrans.g:3422:2: ( rule__ImportedNames__ImpnameAssignment_2_0 )
            // InternalFortXTrans.g:3422:3: rule__ImportedNames__ImpnameAssignment_2_0
            {
            pushFollow(FOLLOW_2);
            rule__ImportedNames__ImpnameAssignment_2_0();

            state._fsp--;


            }

             after(grammarAccess.getImportedNamesAccess().getImpnameAssignment_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_2__0__Impl"


    // $ANTLR start "rule__ImportedNames__Group_2__1"
    // InternalFortXTrans.g:3430:1: rule__ImportedNames__Group_2__1 : rule__ImportedNames__Group_2__1__Impl ;
    public final void rule__ImportedNames__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3434:1: ( rule__ImportedNames__Group_2__1__Impl )
            // InternalFortXTrans.g:3435:2: rule__ImportedNames__Group_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ImportedNames__Group_2__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_2__1"


    // $ANTLR start "rule__ImportedNames__Group_2__1__Impl"
    // InternalFortXTrans.g:3441:1: rule__ImportedNames__Group_2__1__Impl : ( ( rule__ImportedNames__Group_2_1__0 )? ) ;
    public final void rule__ImportedNames__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3445:1: ( ( ( rule__ImportedNames__Group_2_1__0 )? ) )
            // InternalFortXTrans.g:3446:1: ( ( rule__ImportedNames__Group_2_1__0 )? )
            {
            // InternalFortXTrans.g:3446:1: ( ( rule__ImportedNames__Group_2_1__0 )? )
            // InternalFortXTrans.g:3447:2: ( rule__ImportedNames__Group_2_1__0 )?
            {
             before(grammarAccess.getImportedNamesAccess().getGroup_2_1()); 
            // InternalFortXTrans.g:3448:2: ( rule__ImportedNames__Group_2_1__0 )?
            int alt36=2;
            int LA36_0 = input.LA(1);

            if ( (LA36_0==32) ) {
                alt36=1;
            }
            switch (alt36) {
                case 1 :
                    // InternalFortXTrans.g:3448:3: rule__ImportedNames__Group_2_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ImportedNames__Group_2_1__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getImportedNamesAccess().getGroup_2_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_2__1__Impl"


    // $ANTLR start "rule__ImportedNames__Group_2_1__0"
    // InternalFortXTrans.g:3457:1: rule__ImportedNames__Group_2_1__0 : rule__ImportedNames__Group_2_1__0__Impl rule__ImportedNames__Group_2_1__1 ;
    public final void rule__ImportedNames__Group_2_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3461:1: ( rule__ImportedNames__Group_2_1__0__Impl rule__ImportedNames__Group_2_1__1 )
            // InternalFortXTrans.g:3462:2: rule__ImportedNames__Group_2_1__0__Impl rule__ImportedNames__Group_2_1__1
            {
            pushFollow(FOLLOW_5);
            rule__ImportedNames__Group_2_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ImportedNames__Group_2_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_2_1__0"


    // $ANTLR start "rule__ImportedNames__Group_2_1__0__Impl"
    // InternalFortXTrans.g:3469:1: rule__ImportedNames__Group_2_1__0__Impl : ( 'as' ) ;
    public final void rule__ImportedNames__Group_2_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3473:1: ( ( 'as' ) )
            // InternalFortXTrans.g:3474:1: ( 'as' )
            {
            // InternalFortXTrans.g:3474:1: ( 'as' )
            // InternalFortXTrans.g:3475:2: 'as'
            {
             before(grammarAccess.getImportedNamesAccess().getAsKeyword_2_1_0()); 
            match(input,32,FOLLOW_2); 
             after(grammarAccess.getImportedNamesAccess().getAsKeyword_2_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_2_1__0__Impl"


    // $ANTLR start "rule__ImportedNames__Group_2_1__1"
    // InternalFortXTrans.g:3484:1: rule__ImportedNames__Group_2_1__1 : rule__ImportedNames__Group_2_1__1__Impl ;
    public final void rule__ImportedNames__Group_2_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3488:1: ( rule__ImportedNames__Group_2_1__1__Impl )
            // InternalFortXTrans.g:3489:2: rule__ImportedNames__Group_2_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ImportedNames__Group_2_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_2_1__1"


    // $ANTLR start "rule__ImportedNames__Group_2_1__1__Impl"
    // InternalFortXTrans.g:3495:1: rule__ImportedNames__Group_2_1__1__Impl : ( ( rule__ImportedNames__AsnameAssignment_2_1_1 ) ) ;
    public final void rule__ImportedNames__Group_2_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3499:1: ( ( ( rule__ImportedNames__AsnameAssignment_2_1_1 ) ) )
            // InternalFortXTrans.g:3500:1: ( ( rule__ImportedNames__AsnameAssignment_2_1_1 ) )
            {
            // InternalFortXTrans.g:3500:1: ( ( rule__ImportedNames__AsnameAssignment_2_1_1 ) )
            // InternalFortXTrans.g:3501:2: ( rule__ImportedNames__AsnameAssignment_2_1_1 )
            {
             before(grammarAccess.getImportedNamesAccess().getAsnameAssignment_2_1_1()); 
            // InternalFortXTrans.g:3502:2: ( rule__ImportedNames__AsnameAssignment_2_1_1 )
            // InternalFortXTrans.g:3502:3: rule__ImportedNames__AsnameAssignment_2_1_1
            {
            pushFollow(FOLLOW_2);
            rule__ImportedNames__AsnameAssignment_2_1_1();

            state._fsp--;


            }

             after(grammarAccess.getImportedNamesAccess().getAsnameAssignment_2_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__Group_2_1__1__Impl"


    // $ANTLR start "rule__QualifiedName__Group__0"
    // InternalFortXTrans.g:3511:1: rule__QualifiedName__Group__0 : rule__QualifiedName__Group__0__Impl rule__QualifiedName__Group__1 ;
    public final void rule__QualifiedName__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3515:1: ( rule__QualifiedName__Group__0__Impl rule__QualifiedName__Group__1 )
            // InternalFortXTrans.g:3516:2: rule__QualifiedName__Group__0__Impl rule__QualifiedName__Group__1
            {
            pushFollow(FOLLOW_21);
            rule__QualifiedName__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__QualifiedName__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedName__Group__0"


    // $ANTLR start "rule__QualifiedName__Group__0__Impl"
    // InternalFortXTrans.g:3523:1: rule__QualifiedName__Group__0__Impl : ( ( rule__QualifiedName__SAssignment_0 ) ) ;
    public final void rule__QualifiedName__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3527:1: ( ( ( rule__QualifiedName__SAssignment_0 ) ) )
            // InternalFortXTrans.g:3528:1: ( ( rule__QualifiedName__SAssignment_0 ) )
            {
            // InternalFortXTrans.g:3528:1: ( ( rule__QualifiedName__SAssignment_0 ) )
            // InternalFortXTrans.g:3529:2: ( rule__QualifiedName__SAssignment_0 )
            {
             before(grammarAccess.getQualifiedNameAccess().getSAssignment_0()); 
            // InternalFortXTrans.g:3530:2: ( rule__QualifiedName__SAssignment_0 )
            // InternalFortXTrans.g:3530:3: rule__QualifiedName__SAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__QualifiedName__SAssignment_0();

            state._fsp--;


            }

             after(grammarAccess.getQualifiedNameAccess().getSAssignment_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedName__Group__0__Impl"


    // $ANTLR start "rule__QualifiedName__Group__1"
    // InternalFortXTrans.g:3538:1: rule__QualifiedName__Group__1 : rule__QualifiedName__Group__1__Impl rule__QualifiedName__Group__2 ;
    public final void rule__QualifiedName__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3542:1: ( rule__QualifiedName__Group__1__Impl rule__QualifiedName__Group__2 )
            // InternalFortXTrans.g:3543:2: rule__QualifiedName__Group__1__Impl rule__QualifiedName__Group__2
            {
            pushFollow(FOLLOW_21);
            rule__QualifiedName__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__QualifiedName__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedName__Group__1"


    // $ANTLR start "rule__QualifiedName__Group__1__Impl"
    // InternalFortXTrans.g:3550:1: rule__QualifiedName__Group__1__Impl : ( ( rule__QualifiedName__Group_1__0 )* ) ;
    public final void rule__QualifiedName__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3554:1: ( ( ( rule__QualifiedName__Group_1__0 )* ) )
            // InternalFortXTrans.g:3555:1: ( ( rule__QualifiedName__Group_1__0 )* )
            {
            // InternalFortXTrans.g:3555:1: ( ( rule__QualifiedName__Group_1__0 )* )
            // InternalFortXTrans.g:3556:2: ( rule__QualifiedName__Group_1__0 )*
            {
             before(grammarAccess.getQualifiedNameAccess().getGroup_1()); 
            // InternalFortXTrans.g:3557:2: ( rule__QualifiedName__Group_1__0 )*
            loop37:
            do {
                int alt37=2;
                int LA37_0 = input.LA(1);

                if ( (LA37_0==30) ) {
                    int LA37_2 = input.LA(2);

                    if ( (LA37_2==RULE_ID) ) {
                        alt37=1;
                    }


                }


                switch (alt37) {
            	case 1 :
            	    // InternalFortXTrans.g:3557:3: rule__QualifiedName__Group_1__0
            	    {
            	    pushFollow(FOLLOW_22);
            	    rule__QualifiedName__Group_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop37;
                }
            } while (true);

             after(grammarAccess.getQualifiedNameAccess().getGroup_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedName__Group__1__Impl"


    // $ANTLR start "rule__QualifiedName__Group__2"
    // InternalFortXTrans.g:3565:1: rule__QualifiedName__Group__2 : rule__QualifiedName__Group__2__Impl ;
    public final void rule__QualifiedName__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3569:1: ( rule__QualifiedName__Group__2__Impl )
            // InternalFortXTrans.g:3570:2: rule__QualifiedName__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__QualifiedName__Group__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedName__Group__2"


    // $ANTLR start "rule__QualifiedName__Group__2__Impl"
    // InternalFortXTrans.g:3576:1: rule__QualifiedName__Group__2__Impl : ( ( rule__QualifiedName__DotsAssignment_2 )? ) ;
    public final void rule__QualifiedName__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3580:1: ( ( ( rule__QualifiedName__DotsAssignment_2 )? ) )
            // InternalFortXTrans.g:3581:1: ( ( rule__QualifiedName__DotsAssignment_2 )? )
            {
            // InternalFortXTrans.g:3581:1: ( ( rule__QualifiedName__DotsAssignment_2 )? )
            // InternalFortXTrans.g:3582:2: ( rule__QualifiedName__DotsAssignment_2 )?
            {
             before(grammarAccess.getQualifiedNameAccess().getDotsAssignment_2()); 
            // InternalFortXTrans.g:3583:2: ( rule__QualifiedName__DotsAssignment_2 )?
            int alt38=2;
            int LA38_0 = input.LA(1);

            if ( (LA38_0==RULE_DOTS) ) {
                alt38=1;
            }
            switch (alt38) {
                case 1 :
                    // InternalFortXTrans.g:3583:3: rule__QualifiedName__DotsAssignment_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__QualifiedName__DotsAssignment_2();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getQualifiedNameAccess().getDotsAssignment_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedName__Group__2__Impl"


    // $ANTLR start "rule__QualifiedName__Group_1__0"
    // InternalFortXTrans.g:3592:1: rule__QualifiedName__Group_1__0 : rule__QualifiedName__Group_1__0__Impl rule__QualifiedName__Group_1__1 ;
    public final void rule__QualifiedName__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3596:1: ( rule__QualifiedName__Group_1__0__Impl rule__QualifiedName__Group_1__1 )
            // InternalFortXTrans.g:3597:2: rule__QualifiedName__Group_1__0__Impl rule__QualifiedName__Group_1__1
            {
            pushFollow(FOLLOW_5);
            rule__QualifiedName__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__QualifiedName__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedName__Group_1__0"


    // $ANTLR start "rule__QualifiedName__Group_1__0__Impl"
    // InternalFortXTrans.g:3604:1: rule__QualifiedName__Group_1__0__Impl : ( '.' ) ;
    public final void rule__QualifiedName__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3608:1: ( ( '.' ) )
            // InternalFortXTrans.g:3609:1: ( '.' )
            {
            // InternalFortXTrans.g:3609:1: ( '.' )
            // InternalFortXTrans.g:3610:2: '.'
            {
             before(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); 
            match(input,30,FOLLOW_2); 
             after(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedName__Group_1__0__Impl"


    // $ANTLR start "rule__QualifiedName__Group_1__1"
    // InternalFortXTrans.g:3619:1: rule__QualifiedName__Group_1__1 : rule__QualifiedName__Group_1__1__Impl ;
    public final void rule__QualifiedName__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3623:1: ( rule__QualifiedName__Group_1__1__Impl )
            // InternalFortXTrans.g:3624:2: rule__QualifiedName__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__QualifiedName__Group_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedName__Group_1__1"


    // $ANTLR start "rule__QualifiedName__Group_1__1__Impl"
    // InternalFortXTrans.g:3630:1: rule__QualifiedName__Group_1__1__Impl : ( ( rule__QualifiedName__SAssignment_1_1 ) ) ;
    public final void rule__QualifiedName__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3634:1: ( ( ( rule__QualifiedName__SAssignment_1_1 ) ) )
            // InternalFortXTrans.g:3635:1: ( ( rule__QualifiedName__SAssignment_1_1 ) )
            {
            // InternalFortXTrans.g:3635:1: ( ( rule__QualifiedName__SAssignment_1_1 ) )
            // InternalFortXTrans.g:3636:2: ( rule__QualifiedName__SAssignment_1_1 )
            {
             before(grammarAccess.getQualifiedNameAccess().getSAssignment_1_1()); 
            // InternalFortXTrans.g:3637:2: ( rule__QualifiedName__SAssignment_1_1 )
            // InternalFortXTrans.g:3637:3: rule__QualifiedName__SAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__QualifiedName__SAssignment_1_1();

            state._fsp--;


            }

             after(grammarAccess.getQualifiedNameAccess().getSAssignment_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedName__Group_1__1__Impl"


    // $ANTLR start "rule__Qualified__Group_1__0"
    // InternalFortXTrans.g:3646:1: rule__Qualified__Group_1__0 : rule__Qualified__Group_1__0__Impl rule__Qualified__Group_1__1 ;
    public final void rule__Qualified__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3650:1: ( rule__Qualified__Group_1__0__Impl rule__Qualified__Group_1__1 )
            // InternalFortXTrans.g:3651:2: rule__Qualified__Group_1__0__Impl rule__Qualified__Group_1__1
            {
            pushFollow(FOLLOW_5);
            rule__Qualified__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Qualified__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Qualified__Group_1__0"


    // $ANTLR start "rule__Qualified__Group_1__0__Impl"
    // InternalFortXTrans.g:3658:1: rule__Qualified__Group_1__0__Impl : ( '(' ) ;
    public final void rule__Qualified__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3662:1: ( ( '(' ) )
            // InternalFortXTrans.g:3663:1: ( '(' )
            {
            // InternalFortXTrans.g:3663:1: ( '(' )
            // InternalFortXTrans.g:3664:2: '('
            {
             before(grammarAccess.getQualifiedAccess().getLeftParenthesisKeyword_1_0()); 
            match(input,33,FOLLOW_2); 
             after(grammarAccess.getQualifiedAccess().getLeftParenthesisKeyword_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Qualified__Group_1__0__Impl"


    // $ANTLR start "rule__Qualified__Group_1__1"
    // InternalFortXTrans.g:3673:1: rule__Qualified__Group_1__1 : rule__Qualified__Group_1__1__Impl rule__Qualified__Group_1__2 ;
    public final void rule__Qualified__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3677:1: ( rule__Qualified__Group_1__1__Impl rule__Qualified__Group_1__2 )
            // InternalFortXTrans.g:3678:2: rule__Qualified__Group_1__1__Impl rule__Qualified__Group_1__2
            {
            pushFollow(FOLLOW_23);
            rule__Qualified__Group_1__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Qualified__Group_1__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Qualified__Group_1__1"


    // $ANTLR start "rule__Qualified__Group_1__1__Impl"
    // InternalFortXTrans.g:3685:1: rule__Qualified__Group_1__1__Impl : ( ruleQualifiedNameTuple ) ;
    public final void rule__Qualified__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3689:1: ( ( ruleQualifiedNameTuple ) )
            // InternalFortXTrans.g:3690:1: ( ruleQualifiedNameTuple )
            {
            // InternalFortXTrans.g:3690:1: ( ruleQualifiedNameTuple )
            // InternalFortXTrans.g:3691:2: ruleQualifiedNameTuple
            {
             before(grammarAccess.getQualifiedAccess().getQualifiedNameTupleParserRuleCall_1_1()); 
            pushFollow(FOLLOW_2);
            ruleQualifiedNameTuple();

            state._fsp--;

             after(grammarAccess.getQualifiedAccess().getQualifiedNameTupleParserRuleCall_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Qualified__Group_1__1__Impl"


    // $ANTLR start "rule__Qualified__Group_1__2"
    // InternalFortXTrans.g:3700:1: rule__Qualified__Group_1__2 : rule__Qualified__Group_1__2__Impl ;
    public final void rule__Qualified__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3704:1: ( rule__Qualified__Group_1__2__Impl )
            // InternalFortXTrans.g:3705:2: rule__Qualified__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Qualified__Group_1__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Qualified__Group_1__2"


    // $ANTLR start "rule__Qualified__Group_1__2__Impl"
    // InternalFortXTrans.g:3711:1: rule__Qualified__Group_1__2__Impl : ( ')' ) ;
    public final void rule__Qualified__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3715:1: ( ( ')' ) )
            // InternalFortXTrans.g:3716:1: ( ')' )
            {
            // InternalFortXTrans.g:3716:1: ( ')' )
            // InternalFortXTrans.g:3717:2: ')'
            {
             before(grammarAccess.getQualifiedAccess().getRightParenthesisKeyword_1_2()); 
            match(input,34,FOLLOW_2); 
             after(grammarAccess.getQualifiedAccess().getRightParenthesisKeyword_1_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Qualified__Group_1__2__Impl"


    // $ANTLR start "rule__QualifiedNameTuple__Group__0"
    // InternalFortXTrans.g:3727:1: rule__QualifiedNameTuple__Group__0 : rule__QualifiedNameTuple__Group__0__Impl rule__QualifiedNameTuple__Group__1 ;
    public final void rule__QualifiedNameTuple__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3731:1: ( rule__QualifiedNameTuple__Group__0__Impl rule__QualifiedNameTuple__Group__1 )
            // InternalFortXTrans.g:3732:2: rule__QualifiedNameTuple__Group__0__Impl rule__QualifiedNameTuple__Group__1
            {
            pushFollow(FOLLOW_24);
            rule__QualifiedNameTuple__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__QualifiedNameTuple__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedNameTuple__Group__0"


    // $ANTLR start "rule__QualifiedNameTuple__Group__0__Impl"
    // InternalFortXTrans.g:3739:1: rule__QualifiedNameTuple__Group__0__Impl : ( ( rule__QualifiedNameTuple__QlistAssignment_0 ) ) ;
    public final void rule__QualifiedNameTuple__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3743:1: ( ( ( rule__QualifiedNameTuple__QlistAssignment_0 ) ) )
            // InternalFortXTrans.g:3744:1: ( ( rule__QualifiedNameTuple__QlistAssignment_0 ) )
            {
            // InternalFortXTrans.g:3744:1: ( ( rule__QualifiedNameTuple__QlistAssignment_0 ) )
            // InternalFortXTrans.g:3745:2: ( rule__QualifiedNameTuple__QlistAssignment_0 )
            {
             before(grammarAccess.getQualifiedNameTupleAccess().getQlistAssignment_0()); 
            // InternalFortXTrans.g:3746:2: ( rule__QualifiedNameTuple__QlistAssignment_0 )
            // InternalFortXTrans.g:3746:3: rule__QualifiedNameTuple__QlistAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__QualifiedNameTuple__QlistAssignment_0();

            state._fsp--;


            }

             after(grammarAccess.getQualifiedNameTupleAccess().getQlistAssignment_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedNameTuple__Group__0__Impl"


    // $ANTLR start "rule__QualifiedNameTuple__Group__1"
    // InternalFortXTrans.g:3754:1: rule__QualifiedNameTuple__Group__1 : rule__QualifiedNameTuple__Group__1__Impl ;
    public final void rule__QualifiedNameTuple__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3758:1: ( rule__QualifiedNameTuple__Group__1__Impl )
            // InternalFortXTrans.g:3759:2: rule__QualifiedNameTuple__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__QualifiedNameTuple__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedNameTuple__Group__1"


    // $ANTLR start "rule__QualifiedNameTuple__Group__1__Impl"
    // InternalFortXTrans.g:3765:1: rule__QualifiedNameTuple__Group__1__Impl : ( ( rule__QualifiedNameTuple__Group_1__0 )* ) ;
    public final void rule__QualifiedNameTuple__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3769:1: ( ( ( rule__QualifiedNameTuple__Group_1__0 )* ) )
            // InternalFortXTrans.g:3770:1: ( ( rule__QualifiedNameTuple__Group_1__0 )* )
            {
            // InternalFortXTrans.g:3770:1: ( ( rule__QualifiedNameTuple__Group_1__0 )* )
            // InternalFortXTrans.g:3771:2: ( rule__QualifiedNameTuple__Group_1__0 )*
            {
             before(grammarAccess.getQualifiedNameTupleAccess().getGroup_1()); 
            // InternalFortXTrans.g:3772:2: ( rule__QualifiedNameTuple__Group_1__0 )*
            loop39:
            do {
                int alt39=2;
                int LA39_0 = input.LA(1);

                if ( (LA39_0==29) ) {
                    alt39=1;
                }


                switch (alt39) {
            	case 1 :
            	    // InternalFortXTrans.g:3772:3: rule__QualifiedNameTuple__Group_1__0
            	    {
            	    pushFollow(FOLLOW_15);
            	    rule__QualifiedNameTuple__Group_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop39;
                }
            } while (true);

             after(grammarAccess.getQualifiedNameTupleAccess().getGroup_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedNameTuple__Group__1__Impl"


    // $ANTLR start "rule__QualifiedNameTuple__Group_1__0"
    // InternalFortXTrans.g:3781:1: rule__QualifiedNameTuple__Group_1__0 : rule__QualifiedNameTuple__Group_1__0__Impl rule__QualifiedNameTuple__Group_1__1 ;
    public final void rule__QualifiedNameTuple__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3785:1: ( rule__QualifiedNameTuple__Group_1__0__Impl rule__QualifiedNameTuple__Group_1__1 )
            // InternalFortXTrans.g:3786:2: rule__QualifiedNameTuple__Group_1__0__Impl rule__QualifiedNameTuple__Group_1__1
            {
            pushFollow(FOLLOW_5);
            rule__QualifiedNameTuple__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__QualifiedNameTuple__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedNameTuple__Group_1__0"


    // $ANTLR start "rule__QualifiedNameTuple__Group_1__0__Impl"
    // InternalFortXTrans.g:3793:1: rule__QualifiedNameTuple__Group_1__0__Impl : ( ',' ) ;
    public final void rule__QualifiedNameTuple__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3797:1: ( ( ',' ) )
            // InternalFortXTrans.g:3798:1: ( ',' )
            {
            // InternalFortXTrans.g:3798:1: ( ',' )
            // InternalFortXTrans.g:3799:2: ','
            {
             before(grammarAccess.getQualifiedNameTupleAccess().getCommaKeyword_1_0()); 
            match(input,29,FOLLOW_2); 
             after(grammarAccess.getQualifiedNameTupleAccess().getCommaKeyword_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedNameTuple__Group_1__0__Impl"


    // $ANTLR start "rule__QualifiedNameTuple__Group_1__1"
    // InternalFortXTrans.g:3808:1: rule__QualifiedNameTuple__Group_1__1 : rule__QualifiedNameTuple__Group_1__1__Impl ;
    public final void rule__QualifiedNameTuple__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3812:1: ( rule__QualifiedNameTuple__Group_1__1__Impl )
            // InternalFortXTrans.g:3813:2: rule__QualifiedNameTuple__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__QualifiedNameTuple__Group_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedNameTuple__Group_1__1"


    // $ANTLR start "rule__QualifiedNameTuple__Group_1__1__Impl"
    // InternalFortXTrans.g:3819:1: rule__QualifiedNameTuple__Group_1__1__Impl : ( ( rule__QualifiedNameTuple__QlistAssignment_1_1 ) ) ;
    public final void rule__QualifiedNameTuple__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3823:1: ( ( ( rule__QualifiedNameTuple__QlistAssignment_1_1 ) ) )
            // InternalFortXTrans.g:3824:1: ( ( rule__QualifiedNameTuple__QlistAssignment_1_1 ) )
            {
            // InternalFortXTrans.g:3824:1: ( ( rule__QualifiedNameTuple__QlistAssignment_1_1 ) )
            // InternalFortXTrans.g:3825:2: ( rule__QualifiedNameTuple__QlistAssignment_1_1 )
            {
             before(grammarAccess.getQualifiedNameTupleAccess().getQlistAssignment_1_1()); 
            // InternalFortXTrans.g:3826:2: ( rule__QualifiedNameTuple__QlistAssignment_1_1 )
            // InternalFortXTrans.g:3826:3: rule__QualifiedNameTuple__QlistAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__QualifiedNameTuple__QlistAssignment_1_1();

            state._fsp--;


            }

             after(grammarAccess.getQualifiedNameTupleAccess().getQlistAssignment_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedNameTuple__Group_1__1__Impl"


    // $ANTLR start "rule__SimpleNames__Group_1__0"
    // InternalFortXTrans.g:3835:1: rule__SimpleNames__Group_1__0 : rule__SimpleNames__Group_1__0__Impl rule__SimpleNames__Group_1__1 ;
    public final void rule__SimpleNames__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3839:1: ( rule__SimpleNames__Group_1__0__Impl rule__SimpleNames__Group_1__1 )
            // InternalFortXTrans.g:3840:2: rule__SimpleNames__Group_1__0__Impl rule__SimpleNames__Group_1__1
            {
            pushFollow(FOLLOW_5);
            rule__SimpleNames__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__SimpleNames__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleNames__Group_1__0"


    // $ANTLR start "rule__SimpleNames__Group_1__0__Impl"
    // InternalFortXTrans.g:3847:1: rule__SimpleNames__Group_1__0__Impl : ( ( rule__SimpleNames__BrackAssignment_1_0 ) ) ;
    public final void rule__SimpleNames__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3851:1: ( ( ( rule__SimpleNames__BrackAssignment_1_0 ) ) )
            // InternalFortXTrans.g:3852:1: ( ( rule__SimpleNames__BrackAssignment_1_0 ) )
            {
            // InternalFortXTrans.g:3852:1: ( ( rule__SimpleNames__BrackAssignment_1_0 ) )
            // InternalFortXTrans.g:3853:2: ( rule__SimpleNames__BrackAssignment_1_0 )
            {
             before(grammarAccess.getSimpleNamesAccess().getBrackAssignment_1_0()); 
            // InternalFortXTrans.g:3854:2: ( rule__SimpleNames__BrackAssignment_1_0 )
            // InternalFortXTrans.g:3854:3: rule__SimpleNames__BrackAssignment_1_0
            {
            pushFollow(FOLLOW_2);
            rule__SimpleNames__BrackAssignment_1_0();

            state._fsp--;


            }

             after(grammarAccess.getSimpleNamesAccess().getBrackAssignment_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleNames__Group_1__0__Impl"


    // $ANTLR start "rule__SimpleNames__Group_1__1"
    // InternalFortXTrans.g:3862:1: rule__SimpleNames__Group_1__1 : rule__SimpleNames__Group_1__1__Impl rule__SimpleNames__Group_1__2 ;
    public final void rule__SimpleNames__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3866:1: ( rule__SimpleNames__Group_1__1__Impl rule__SimpleNames__Group_1__2 )
            // InternalFortXTrans.g:3867:2: rule__SimpleNames__Group_1__1__Impl rule__SimpleNames__Group_1__2
            {
            pushFollow(FOLLOW_14);
            rule__SimpleNames__Group_1__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__SimpleNames__Group_1__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleNames__Group_1__1"


    // $ANTLR start "rule__SimpleNames__Group_1__1__Impl"
    // InternalFortXTrans.g:3874:1: rule__SimpleNames__Group_1__1__Impl : ( ( rule__SimpleNames__NameListAssignment_1_1 ) ) ;
    public final void rule__SimpleNames__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3878:1: ( ( ( rule__SimpleNames__NameListAssignment_1_1 ) ) )
            // InternalFortXTrans.g:3879:1: ( ( rule__SimpleNames__NameListAssignment_1_1 ) )
            {
            // InternalFortXTrans.g:3879:1: ( ( rule__SimpleNames__NameListAssignment_1_1 ) )
            // InternalFortXTrans.g:3880:2: ( rule__SimpleNames__NameListAssignment_1_1 )
            {
             before(grammarAccess.getSimpleNamesAccess().getNameListAssignment_1_1()); 
            // InternalFortXTrans.g:3881:2: ( rule__SimpleNames__NameListAssignment_1_1 )
            // InternalFortXTrans.g:3881:3: rule__SimpleNames__NameListAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__SimpleNames__NameListAssignment_1_1();

            state._fsp--;


            }

             after(grammarAccess.getSimpleNamesAccess().getNameListAssignment_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleNames__Group_1__1__Impl"


    // $ANTLR start "rule__SimpleNames__Group_1__2"
    // InternalFortXTrans.g:3889:1: rule__SimpleNames__Group_1__2 : rule__SimpleNames__Group_1__2__Impl rule__SimpleNames__Group_1__3 ;
    public final void rule__SimpleNames__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3893:1: ( rule__SimpleNames__Group_1__2__Impl rule__SimpleNames__Group_1__3 )
            // InternalFortXTrans.g:3894:2: rule__SimpleNames__Group_1__2__Impl rule__SimpleNames__Group_1__3
            {
            pushFollow(FOLLOW_14);
            rule__SimpleNames__Group_1__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__SimpleNames__Group_1__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleNames__Group_1__2"


    // $ANTLR start "rule__SimpleNames__Group_1__2__Impl"
    // InternalFortXTrans.g:3901:1: rule__SimpleNames__Group_1__2__Impl : ( ( rule__SimpleNames__Group_1_2__0 )* ) ;
    public final void rule__SimpleNames__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3905:1: ( ( ( rule__SimpleNames__Group_1_2__0 )* ) )
            // InternalFortXTrans.g:3906:1: ( ( rule__SimpleNames__Group_1_2__0 )* )
            {
            // InternalFortXTrans.g:3906:1: ( ( rule__SimpleNames__Group_1_2__0 )* )
            // InternalFortXTrans.g:3907:2: ( rule__SimpleNames__Group_1_2__0 )*
            {
             before(grammarAccess.getSimpleNamesAccess().getGroup_1_2()); 
            // InternalFortXTrans.g:3908:2: ( rule__SimpleNames__Group_1_2__0 )*
            loop40:
            do {
                int alt40=2;
                int LA40_0 = input.LA(1);

                if ( (LA40_0==29) ) {
                    alt40=1;
                }


                switch (alt40) {
            	case 1 :
            	    // InternalFortXTrans.g:3908:3: rule__SimpleNames__Group_1_2__0
            	    {
            	    pushFollow(FOLLOW_15);
            	    rule__SimpleNames__Group_1_2__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop40;
                }
            } while (true);

             after(grammarAccess.getSimpleNamesAccess().getGroup_1_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleNames__Group_1__2__Impl"


    // $ANTLR start "rule__SimpleNames__Group_1__3"
    // InternalFortXTrans.g:3916:1: rule__SimpleNames__Group_1__3 : rule__SimpleNames__Group_1__3__Impl ;
    public final void rule__SimpleNames__Group_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3920:1: ( rule__SimpleNames__Group_1__3__Impl )
            // InternalFortXTrans.g:3921:2: rule__SimpleNames__Group_1__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__SimpleNames__Group_1__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleNames__Group_1__3"


    // $ANTLR start "rule__SimpleNames__Group_1__3__Impl"
    // InternalFortXTrans.g:3927:1: rule__SimpleNames__Group_1__3__Impl : ( '}' ) ;
    public final void rule__SimpleNames__Group_1__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3931:1: ( ( '}' ) )
            // InternalFortXTrans.g:3932:1: ( '}' )
            {
            // InternalFortXTrans.g:3932:1: ( '}' )
            // InternalFortXTrans.g:3933:2: '}'
            {
             before(grammarAccess.getSimpleNamesAccess().getRightCurlyBracketKeyword_1_3()); 
            match(input,28,FOLLOW_2); 
             after(grammarAccess.getSimpleNamesAccess().getRightCurlyBracketKeyword_1_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleNames__Group_1__3__Impl"


    // $ANTLR start "rule__SimpleNames__Group_1_2__0"
    // InternalFortXTrans.g:3943:1: rule__SimpleNames__Group_1_2__0 : rule__SimpleNames__Group_1_2__0__Impl rule__SimpleNames__Group_1_2__1 ;
    public final void rule__SimpleNames__Group_1_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3947:1: ( rule__SimpleNames__Group_1_2__0__Impl rule__SimpleNames__Group_1_2__1 )
            // InternalFortXTrans.g:3948:2: rule__SimpleNames__Group_1_2__0__Impl rule__SimpleNames__Group_1_2__1
            {
            pushFollow(FOLLOW_5);
            rule__SimpleNames__Group_1_2__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__SimpleNames__Group_1_2__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleNames__Group_1_2__0"


    // $ANTLR start "rule__SimpleNames__Group_1_2__0__Impl"
    // InternalFortXTrans.g:3955:1: rule__SimpleNames__Group_1_2__0__Impl : ( ',' ) ;
    public final void rule__SimpleNames__Group_1_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3959:1: ( ( ',' ) )
            // InternalFortXTrans.g:3960:1: ( ',' )
            {
            // InternalFortXTrans.g:3960:1: ( ',' )
            // InternalFortXTrans.g:3961:2: ','
            {
             before(grammarAccess.getSimpleNamesAccess().getCommaKeyword_1_2_0()); 
            match(input,29,FOLLOW_2); 
             after(grammarAccess.getSimpleNamesAccess().getCommaKeyword_1_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleNames__Group_1_2__0__Impl"


    // $ANTLR start "rule__SimpleNames__Group_1_2__1"
    // InternalFortXTrans.g:3970:1: rule__SimpleNames__Group_1_2__1 : rule__SimpleNames__Group_1_2__1__Impl ;
    public final void rule__SimpleNames__Group_1_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3974:1: ( rule__SimpleNames__Group_1_2__1__Impl )
            // InternalFortXTrans.g:3975:2: rule__SimpleNames__Group_1_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__SimpleNames__Group_1_2__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleNames__Group_1_2__1"


    // $ANTLR start "rule__SimpleNames__Group_1_2__1__Impl"
    // InternalFortXTrans.g:3981:1: rule__SimpleNames__Group_1_2__1__Impl : ( ( rule__SimpleNames__NameListAssignment_1_2_1 ) ) ;
    public final void rule__SimpleNames__Group_1_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:3985:1: ( ( ( rule__SimpleNames__NameListAssignment_1_2_1 ) ) )
            // InternalFortXTrans.g:3986:1: ( ( rule__SimpleNames__NameListAssignment_1_2_1 ) )
            {
            // InternalFortXTrans.g:3986:1: ( ( rule__SimpleNames__NameListAssignment_1_2_1 ) )
            // InternalFortXTrans.g:3987:2: ( rule__SimpleNames__NameListAssignment_1_2_1 )
            {
             before(grammarAccess.getSimpleNamesAccess().getNameListAssignment_1_2_1()); 
            // InternalFortXTrans.g:3988:2: ( rule__SimpleNames__NameListAssignment_1_2_1 )
            // InternalFortXTrans.g:3988:3: rule__SimpleNames__NameListAssignment_1_2_1
            {
            pushFollow(FOLLOW_2);
            rule__SimpleNames__NameListAssignment_1_2_1();

            state._fsp--;


            }

             after(grammarAccess.getSimpleNamesAccess().getNameListAssignment_1_2_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleNames__Group_1_2__1__Impl"


    // $ANTLR start "rule__AliasedSimpleName__Group__0"
    // InternalFortXTrans.g:3997:1: rule__AliasedSimpleName__Group__0 : rule__AliasedSimpleName__Group__0__Impl rule__AliasedSimpleName__Group__1 ;
    public final void rule__AliasedSimpleName__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4001:1: ( rule__AliasedSimpleName__Group__0__Impl rule__AliasedSimpleName__Group__1 )
            // InternalFortXTrans.g:4002:2: rule__AliasedSimpleName__Group__0__Impl rule__AliasedSimpleName__Group__1
            {
            pushFollow(FOLLOW_20);
            rule__AliasedSimpleName__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__AliasedSimpleName__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedSimpleName__Group__0"


    // $ANTLR start "rule__AliasedSimpleName__Group__0__Impl"
    // InternalFortXTrans.g:4009:1: rule__AliasedSimpleName__Group__0__Impl : ( ( rule__AliasedSimpleName__OrigAssignment_0 ) ) ;
    public final void rule__AliasedSimpleName__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4013:1: ( ( ( rule__AliasedSimpleName__OrigAssignment_0 ) ) )
            // InternalFortXTrans.g:4014:1: ( ( rule__AliasedSimpleName__OrigAssignment_0 ) )
            {
            // InternalFortXTrans.g:4014:1: ( ( rule__AliasedSimpleName__OrigAssignment_0 ) )
            // InternalFortXTrans.g:4015:2: ( rule__AliasedSimpleName__OrigAssignment_0 )
            {
             before(grammarAccess.getAliasedSimpleNameAccess().getOrigAssignment_0()); 
            // InternalFortXTrans.g:4016:2: ( rule__AliasedSimpleName__OrigAssignment_0 )
            // InternalFortXTrans.g:4016:3: rule__AliasedSimpleName__OrigAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__AliasedSimpleName__OrigAssignment_0();

            state._fsp--;


            }

             after(grammarAccess.getAliasedSimpleNameAccess().getOrigAssignment_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedSimpleName__Group__0__Impl"


    // $ANTLR start "rule__AliasedSimpleName__Group__1"
    // InternalFortXTrans.g:4024:1: rule__AliasedSimpleName__Group__1 : rule__AliasedSimpleName__Group__1__Impl ;
    public final void rule__AliasedSimpleName__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4028:1: ( rule__AliasedSimpleName__Group__1__Impl )
            // InternalFortXTrans.g:4029:2: rule__AliasedSimpleName__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AliasedSimpleName__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedSimpleName__Group__1"


    // $ANTLR start "rule__AliasedSimpleName__Group__1__Impl"
    // InternalFortXTrans.g:4035:1: rule__AliasedSimpleName__Group__1__Impl : ( ( rule__AliasedSimpleName__Group_1__0 )? ) ;
    public final void rule__AliasedSimpleName__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4039:1: ( ( ( rule__AliasedSimpleName__Group_1__0 )? ) )
            // InternalFortXTrans.g:4040:1: ( ( rule__AliasedSimpleName__Group_1__0 )? )
            {
            // InternalFortXTrans.g:4040:1: ( ( rule__AliasedSimpleName__Group_1__0 )? )
            // InternalFortXTrans.g:4041:2: ( rule__AliasedSimpleName__Group_1__0 )?
            {
             before(grammarAccess.getAliasedSimpleNameAccess().getGroup_1()); 
            // InternalFortXTrans.g:4042:2: ( rule__AliasedSimpleName__Group_1__0 )?
            int alt41=2;
            int LA41_0 = input.LA(1);

            if ( (LA41_0==32) ) {
                alt41=1;
            }
            switch (alt41) {
                case 1 :
                    // InternalFortXTrans.g:4042:3: rule__AliasedSimpleName__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__AliasedSimpleName__Group_1__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getAliasedSimpleNameAccess().getGroup_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedSimpleName__Group__1__Impl"


    // $ANTLR start "rule__AliasedSimpleName__Group_1__0"
    // InternalFortXTrans.g:4051:1: rule__AliasedSimpleName__Group_1__0 : rule__AliasedSimpleName__Group_1__0__Impl rule__AliasedSimpleName__Group_1__1 ;
    public final void rule__AliasedSimpleName__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4055:1: ( rule__AliasedSimpleName__Group_1__0__Impl rule__AliasedSimpleName__Group_1__1 )
            // InternalFortXTrans.g:4056:2: rule__AliasedSimpleName__Group_1__0__Impl rule__AliasedSimpleName__Group_1__1
            {
            pushFollow(FOLLOW_5);
            rule__AliasedSimpleName__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__AliasedSimpleName__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedSimpleName__Group_1__0"


    // $ANTLR start "rule__AliasedSimpleName__Group_1__0__Impl"
    // InternalFortXTrans.g:4063:1: rule__AliasedSimpleName__Group_1__0__Impl : ( 'as' ) ;
    public final void rule__AliasedSimpleName__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4067:1: ( ( 'as' ) )
            // InternalFortXTrans.g:4068:1: ( 'as' )
            {
            // InternalFortXTrans.g:4068:1: ( 'as' )
            // InternalFortXTrans.g:4069:2: 'as'
            {
             before(grammarAccess.getAliasedSimpleNameAccess().getAsKeyword_1_0()); 
            match(input,32,FOLLOW_2); 
             after(grammarAccess.getAliasedSimpleNameAccess().getAsKeyword_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedSimpleName__Group_1__0__Impl"


    // $ANTLR start "rule__AliasedSimpleName__Group_1__1"
    // InternalFortXTrans.g:4078:1: rule__AliasedSimpleName__Group_1__1 : rule__AliasedSimpleName__Group_1__1__Impl ;
    public final void rule__AliasedSimpleName__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4082:1: ( rule__AliasedSimpleName__Group_1__1__Impl )
            // InternalFortXTrans.g:4083:2: rule__AliasedSimpleName__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AliasedSimpleName__Group_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedSimpleName__Group_1__1"


    // $ANTLR start "rule__AliasedSimpleName__Group_1__1__Impl"
    // InternalFortXTrans.g:4089:1: rule__AliasedSimpleName__Group_1__1__Impl : ( ( rule__AliasedSimpleName__AsNameAssignment_1_1 ) ) ;
    public final void rule__AliasedSimpleName__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4093:1: ( ( ( rule__AliasedSimpleName__AsNameAssignment_1_1 ) ) )
            // InternalFortXTrans.g:4094:1: ( ( rule__AliasedSimpleName__AsNameAssignment_1_1 ) )
            {
            // InternalFortXTrans.g:4094:1: ( ( rule__AliasedSimpleName__AsNameAssignment_1_1 ) )
            // InternalFortXTrans.g:4095:2: ( rule__AliasedSimpleName__AsNameAssignment_1_1 )
            {
             before(grammarAccess.getAliasedSimpleNameAccess().getAsNameAssignment_1_1()); 
            // InternalFortXTrans.g:4096:2: ( rule__AliasedSimpleName__AsNameAssignment_1_1 )
            // InternalFortXTrans.g:4096:3: rule__AliasedSimpleName__AsNameAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__AliasedSimpleName__AsNameAssignment_1_1();

            state._fsp--;


            }

             after(grammarAccess.getAliasedSimpleNameAccess().getAsNameAssignment_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedSimpleName__Group_1__1__Impl"


    // $ANTLR start "rule__AliasedAPINames__Group_1__0"
    // InternalFortXTrans.g:4105:1: rule__AliasedAPINames__Group_1__0 : rule__AliasedAPINames__Group_1__0__Impl rule__AliasedAPINames__Group_1__1 ;
    public final void rule__AliasedAPINames__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4109:1: ( rule__AliasedAPINames__Group_1__0__Impl rule__AliasedAPINames__Group_1__1 )
            // InternalFortXTrans.g:4110:2: rule__AliasedAPINames__Group_1__0__Impl rule__AliasedAPINames__Group_1__1
            {
            pushFollow(FOLLOW_5);
            rule__AliasedAPINames__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__AliasedAPINames__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedAPINames__Group_1__0"


    // $ANTLR start "rule__AliasedAPINames__Group_1__0__Impl"
    // InternalFortXTrans.g:4117:1: rule__AliasedAPINames__Group_1__0__Impl : ( ( rule__AliasedAPINames__BrackAssignment_1_0 ) ) ;
    public final void rule__AliasedAPINames__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4121:1: ( ( ( rule__AliasedAPINames__BrackAssignment_1_0 ) ) )
            // InternalFortXTrans.g:4122:1: ( ( rule__AliasedAPINames__BrackAssignment_1_0 ) )
            {
            // InternalFortXTrans.g:4122:1: ( ( rule__AliasedAPINames__BrackAssignment_1_0 ) )
            // InternalFortXTrans.g:4123:2: ( rule__AliasedAPINames__BrackAssignment_1_0 )
            {
             before(grammarAccess.getAliasedAPINamesAccess().getBrackAssignment_1_0()); 
            // InternalFortXTrans.g:4124:2: ( rule__AliasedAPINames__BrackAssignment_1_0 )
            // InternalFortXTrans.g:4124:3: rule__AliasedAPINames__BrackAssignment_1_0
            {
            pushFollow(FOLLOW_2);
            rule__AliasedAPINames__BrackAssignment_1_0();

            state._fsp--;


            }

             after(grammarAccess.getAliasedAPINamesAccess().getBrackAssignment_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedAPINames__Group_1__0__Impl"


    // $ANTLR start "rule__AliasedAPINames__Group_1__1"
    // InternalFortXTrans.g:4132:1: rule__AliasedAPINames__Group_1__1 : rule__AliasedAPINames__Group_1__1__Impl rule__AliasedAPINames__Group_1__2 ;
    public final void rule__AliasedAPINames__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4136:1: ( rule__AliasedAPINames__Group_1__1__Impl rule__AliasedAPINames__Group_1__2 )
            // InternalFortXTrans.g:4137:2: rule__AliasedAPINames__Group_1__1__Impl rule__AliasedAPINames__Group_1__2
            {
            pushFollow(FOLLOW_14);
            rule__AliasedAPINames__Group_1__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__AliasedAPINames__Group_1__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedAPINames__Group_1__1"


    // $ANTLR start "rule__AliasedAPINames__Group_1__1__Impl"
    // InternalFortXTrans.g:4144:1: rule__AliasedAPINames__Group_1__1__Impl : ( ( rule__AliasedAPINames__NameListAssignment_1_1 ) ) ;
    public final void rule__AliasedAPINames__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4148:1: ( ( ( rule__AliasedAPINames__NameListAssignment_1_1 ) ) )
            // InternalFortXTrans.g:4149:1: ( ( rule__AliasedAPINames__NameListAssignment_1_1 ) )
            {
            // InternalFortXTrans.g:4149:1: ( ( rule__AliasedAPINames__NameListAssignment_1_1 ) )
            // InternalFortXTrans.g:4150:2: ( rule__AliasedAPINames__NameListAssignment_1_1 )
            {
             before(grammarAccess.getAliasedAPINamesAccess().getNameListAssignment_1_1()); 
            // InternalFortXTrans.g:4151:2: ( rule__AliasedAPINames__NameListAssignment_1_1 )
            // InternalFortXTrans.g:4151:3: rule__AliasedAPINames__NameListAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__AliasedAPINames__NameListAssignment_1_1();

            state._fsp--;


            }

             after(grammarAccess.getAliasedAPINamesAccess().getNameListAssignment_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedAPINames__Group_1__1__Impl"


    // $ANTLR start "rule__AliasedAPINames__Group_1__2"
    // InternalFortXTrans.g:4159:1: rule__AliasedAPINames__Group_1__2 : rule__AliasedAPINames__Group_1__2__Impl rule__AliasedAPINames__Group_1__3 ;
    public final void rule__AliasedAPINames__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4163:1: ( rule__AliasedAPINames__Group_1__2__Impl rule__AliasedAPINames__Group_1__3 )
            // InternalFortXTrans.g:4164:2: rule__AliasedAPINames__Group_1__2__Impl rule__AliasedAPINames__Group_1__3
            {
            pushFollow(FOLLOW_14);
            rule__AliasedAPINames__Group_1__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__AliasedAPINames__Group_1__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedAPINames__Group_1__2"


    // $ANTLR start "rule__AliasedAPINames__Group_1__2__Impl"
    // InternalFortXTrans.g:4171:1: rule__AliasedAPINames__Group_1__2__Impl : ( ( rule__AliasedAPINames__Group_1_2__0 )* ) ;
    public final void rule__AliasedAPINames__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4175:1: ( ( ( rule__AliasedAPINames__Group_1_2__0 )* ) )
            // InternalFortXTrans.g:4176:1: ( ( rule__AliasedAPINames__Group_1_2__0 )* )
            {
            // InternalFortXTrans.g:4176:1: ( ( rule__AliasedAPINames__Group_1_2__0 )* )
            // InternalFortXTrans.g:4177:2: ( rule__AliasedAPINames__Group_1_2__0 )*
            {
             before(grammarAccess.getAliasedAPINamesAccess().getGroup_1_2()); 
            // InternalFortXTrans.g:4178:2: ( rule__AliasedAPINames__Group_1_2__0 )*
            loop42:
            do {
                int alt42=2;
                int LA42_0 = input.LA(1);

                if ( (LA42_0==29) ) {
                    alt42=1;
                }


                switch (alt42) {
            	case 1 :
            	    // InternalFortXTrans.g:4178:3: rule__AliasedAPINames__Group_1_2__0
            	    {
            	    pushFollow(FOLLOW_15);
            	    rule__AliasedAPINames__Group_1_2__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop42;
                }
            } while (true);

             after(grammarAccess.getAliasedAPINamesAccess().getGroup_1_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedAPINames__Group_1__2__Impl"


    // $ANTLR start "rule__AliasedAPINames__Group_1__3"
    // InternalFortXTrans.g:4186:1: rule__AliasedAPINames__Group_1__3 : rule__AliasedAPINames__Group_1__3__Impl ;
    public final void rule__AliasedAPINames__Group_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4190:1: ( rule__AliasedAPINames__Group_1__3__Impl )
            // InternalFortXTrans.g:4191:2: rule__AliasedAPINames__Group_1__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AliasedAPINames__Group_1__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedAPINames__Group_1__3"


    // $ANTLR start "rule__AliasedAPINames__Group_1__3__Impl"
    // InternalFortXTrans.g:4197:1: rule__AliasedAPINames__Group_1__3__Impl : ( '}' ) ;
    public final void rule__AliasedAPINames__Group_1__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4201:1: ( ( '}' ) )
            // InternalFortXTrans.g:4202:1: ( '}' )
            {
            // InternalFortXTrans.g:4202:1: ( '}' )
            // InternalFortXTrans.g:4203:2: '}'
            {
             before(grammarAccess.getAliasedAPINamesAccess().getRightCurlyBracketKeyword_1_3()); 
            match(input,28,FOLLOW_2); 
             after(grammarAccess.getAliasedAPINamesAccess().getRightCurlyBracketKeyword_1_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedAPINames__Group_1__3__Impl"


    // $ANTLR start "rule__AliasedAPINames__Group_1_2__0"
    // InternalFortXTrans.g:4213:1: rule__AliasedAPINames__Group_1_2__0 : rule__AliasedAPINames__Group_1_2__0__Impl rule__AliasedAPINames__Group_1_2__1 ;
    public final void rule__AliasedAPINames__Group_1_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4217:1: ( rule__AliasedAPINames__Group_1_2__0__Impl rule__AliasedAPINames__Group_1_2__1 )
            // InternalFortXTrans.g:4218:2: rule__AliasedAPINames__Group_1_2__0__Impl rule__AliasedAPINames__Group_1_2__1
            {
            pushFollow(FOLLOW_5);
            rule__AliasedAPINames__Group_1_2__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__AliasedAPINames__Group_1_2__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedAPINames__Group_1_2__0"


    // $ANTLR start "rule__AliasedAPINames__Group_1_2__0__Impl"
    // InternalFortXTrans.g:4225:1: rule__AliasedAPINames__Group_1_2__0__Impl : ( ',' ) ;
    public final void rule__AliasedAPINames__Group_1_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4229:1: ( ( ',' ) )
            // InternalFortXTrans.g:4230:1: ( ',' )
            {
            // InternalFortXTrans.g:4230:1: ( ',' )
            // InternalFortXTrans.g:4231:2: ','
            {
             before(grammarAccess.getAliasedAPINamesAccess().getCommaKeyword_1_2_0()); 
            match(input,29,FOLLOW_2); 
             after(grammarAccess.getAliasedAPINamesAccess().getCommaKeyword_1_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedAPINames__Group_1_2__0__Impl"


    // $ANTLR start "rule__AliasedAPINames__Group_1_2__1"
    // InternalFortXTrans.g:4240:1: rule__AliasedAPINames__Group_1_2__1 : rule__AliasedAPINames__Group_1_2__1__Impl ;
    public final void rule__AliasedAPINames__Group_1_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4244:1: ( rule__AliasedAPINames__Group_1_2__1__Impl )
            // InternalFortXTrans.g:4245:2: rule__AliasedAPINames__Group_1_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AliasedAPINames__Group_1_2__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedAPINames__Group_1_2__1"


    // $ANTLR start "rule__AliasedAPINames__Group_1_2__1__Impl"
    // InternalFortXTrans.g:4251:1: rule__AliasedAPINames__Group_1_2__1__Impl : ( ( rule__AliasedAPINames__NameListAssignment_1_2_1 ) ) ;
    public final void rule__AliasedAPINames__Group_1_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4255:1: ( ( ( rule__AliasedAPINames__NameListAssignment_1_2_1 ) ) )
            // InternalFortXTrans.g:4256:1: ( ( rule__AliasedAPINames__NameListAssignment_1_2_1 ) )
            {
            // InternalFortXTrans.g:4256:1: ( ( rule__AliasedAPINames__NameListAssignment_1_2_1 ) )
            // InternalFortXTrans.g:4257:2: ( rule__AliasedAPINames__NameListAssignment_1_2_1 )
            {
             before(grammarAccess.getAliasedAPINamesAccess().getNameListAssignment_1_2_1()); 
            // InternalFortXTrans.g:4258:2: ( rule__AliasedAPINames__NameListAssignment_1_2_1 )
            // InternalFortXTrans.g:4258:3: rule__AliasedAPINames__NameListAssignment_1_2_1
            {
            pushFollow(FOLLOW_2);
            rule__AliasedAPINames__NameListAssignment_1_2_1();

            state._fsp--;


            }

             after(grammarAccess.getAliasedAPINamesAccess().getNameListAssignment_1_2_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedAPINames__Group_1_2__1__Impl"


    // $ANTLR start "rule__AliasedAPIName__Group__0"
    // InternalFortXTrans.g:4267:1: rule__AliasedAPIName__Group__0 : rule__AliasedAPIName__Group__0__Impl rule__AliasedAPIName__Group__1 ;
    public final void rule__AliasedAPIName__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4271:1: ( rule__AliasedAPIName__Group__0__Impl rule__AliasedAPIName__Group__1 )
            // InternalFortXTrans.g:4272:2: rule__AliasedAPIName__Group__0__Impl rule__AliasedAPIName__Group__1
            {
            pushFollow(FOLLOW_20);
            rule__AliasedAPIName__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__AliasedAPIName__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedAPIName__Group__0"


    // $ANTLR start "rule__AliasedAPIName__Group__0__Impl"
    // InternalFortXTrans.g:4279:1: rule__AliasedAPIName__Group__0__Impl : ( ( rule__AliasedAPIName__OrigAssignment_0 ) ) ;
    public final void rule__AliasedAPIName__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4283:1: ( ( ( rule__AliasedAPIName__OrigAssignment_0 ) ) )
            // InternalFortXTrans.g:4284:1: ( ( rule__AliasedAPIName__OrigAssignment_0 ) )
            {
            // InternalFortXTrans.g:4284:1: ( ( rule__AliasedAPIName__OrigAssignment_0 ) )
            // InternalFortXTrans.g:4285:2: ( rule__AliasedAPIName__OrigAssignment_0 )
            {
             before(grammarAccess.getAliasedAPINameAccess().getOrigAssignment_0()); 
            // InternalFortXTrans.g:4286:2: ( rule__AliasedAPIName__OrigAssignment_0 )
            // InternalFortXTrans.g:4286:3: rule__AliasedAPIName__OrigAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__AliasedAPIName__OrigAssignment_0();

            state._fsp--;


            }

             after(grammarAccess.getAliasedAPINameAccess().getOrigAssignment_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedAPIName__Group__0__Impl"


    // $ANTLR start "rule__AliasedAPIName__Group__1"
    // InternalFortXTrans.g:4294:1: rule__AliasedAPIName__Group__1 : rule__AliasedAPIName__Group__1__Impl ;
    public final void rule__AliasedAPIName__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4298:1: ( rule__AliasedAPIName__Group__1__Impl )
            // InternalFortXTrans.g:4299:2: rule__AliasedAPIName__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AliasedAPIName__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedAPIName__Group__1"


    // $ANTLR start "rule__AliasedAPIName__Group__1__Impl"
    // InternalFortXTrans.g:4305:1: rule__AliasedAPIName__Group__1__Impl : ( ( rule__AliasedAPIName__Group_1__0 )? ) ;
    public final void rule__AliasedAPIName__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4309:1: ( ( ( rule__AliasedAPIName__Group_1__0 )? ) )
            // InternalFortXTrans.g:4310:1: ( ( rule__AliasedAPIName__Group_1__0 )? )
            {
            // InternalFortXTrans.g:4310:1: ( ( rule__AliasedAPIName__Group_1__0 )? )
            // InternalFortXTrans.g:4311:2: ( rule__AliasedAPIName__Group_1__0 )?
            {
             before(grammarAccess.getAliasedAPINameAccess().getGroup_1()); 
            // InternalFortXTrans.g:4312:2: ( rule__AliasedAPIName__Group_1__0 )?
            int alt43=2;
            int LA43_0 = input.LA(1);

            if ( (LA43_0==32) ) {
                alt43=1;
            }
            switch (alt43) {
                case 1 :
                    // InternalFortXTrans.g:4312:3: rule__AliasedAPIName__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__AliasedAPIName__Group_1__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getAliasedAPINameAccess().getGroup_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedAPIName__Group__1__Impl"


    // $ANTLR start "rule__AliasedAPIName__Group_1__0"
    // InternalFortXTrans.g:4321:1: rule__AliasedAPIName__Group_1__0 : rule__AliasedAPIName__Group_1__0__Impl rule__AliasedAPIName__Group_1__1 ;
    public final void rule__AliasedAPIName__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4325:1: ( rule__AliasedAPIName__Group_1__0__Impl rule__AliasedAPIName__Group_1__1 )
            // InternalFortXTrans.g:4326:2: rule__AliasedAPIName__Group_1__0__Impl rule__AliasedAPIName__Group_1__1
            {
            pushFollow(FOLLOW_5);
            rule__AliasedAPIName__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__AliasedAPIName__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedAPIName__Group_1__0"


    // $ANTLR start "rule__AliasedAPIName__Group_1__0__Impl"
    // InternalFortXTrans.g:4333:1: rule__AliasedAPIName__Group_1__0__Impl : ( 'as' ) ;
    public final void rule__AliasedAPIName__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4337:1: ( ( 'as' ) )
            // InternalFortXTrans.g:4338:1: ( 'as' )
            {
            // InternalFortXTrans.g:4338:1: ( 'as' )
            // InternalFortXTrans.g:4339:2: 'as'
            {
             before(grammarAccess.getAliasedAPINameAccess().getAsKeyword_1_0()); 
            match(input,32,FOLLOW_2); 
             after(grammarAccess.getAliasedAPINameAccess().getAsKeyword_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedAPIName__Group_1__0__Impl"


    // $ANTLR start "rule__AliasedAPIName__Group_1__1"
    // InternalFortXTrans.g:4348:1: rule__AliasedAPIName__Group_1__1 : rule__AliasedAPIName__Group_1__1__Impl ;
    public final void rule__AliasedAPIName__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4352:1: ( rule__AliasedAPIName__Group_1__1__Impl )
            // InternalFortXTrans.g:4353:2: rule__AliasedAPIName__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AliasedAPIName__Group_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedAPIName__Group_1__1"


    // $ANTLR start "rule__AliasedAPIName__Group_1__1__Impl"
    // InternalFortXTrans.g:4359:1: rule__AliasedAPIName__Group_1__1__Impl : ( ( rule__AliasedAPIName__AsNameAssignment_1_1 ) ) ;
    public final void rule__AliasedAPIName__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4363:1: ( ( ( rule__AliasedAPIName__AsNameAssignment_1_1 ) ) )
            // InternalFortXTrans.g:4364:1: ( ( rule__AliasedAPIName__AsNameAssignment_1_1 ) )
            {
            // InternalFortXTrans.g:4364:1: ( ( rule__AliasedAPIName__AsNameAssignment_1_1 ) )
            // InternalFortXTrans.g:4365:2: ( rule__AliasedAPIName__AsNameAssignment_1_1 )
            {
             before(grammarAccess.getAliasedAPINameAccess().getAsNameAssignment_1_1()); 
            // InternalFortXTrans.g:4366:2: ( rule__AliasedAPIName__AsNameAssignment_1_1 )
            // InternalFortXTrans.g:4366:3: rule__AliasedAPIName__AsNameAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__AliasedAPIName__AsNameAssignment_1_1();

            state._fsp--;


            }

             after(grammarAccess.getAliasedAPINameAccess().getAsNameAssignment_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedAPIName__Group_1__1__Impl"


    // $ANTLR start "rule__ValParam__Group_1__0"
    // InternalFortXTrans.g:4375:1: rule__ValParam__Group_1__0 : rule__ValParam__Group_1__0__Impl rule__ValParam__Group_1__1 ;
    public final void rule__ValParam__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4379:1: ( rule__ValParam__Group_1__0__Impl rule__ValParam__Group_1__1 )
            // InternalFortXTrans.g:4380:2: rule__ValParam__Group_1__0__Impl rule__ValParam__Group_1__1
            {
            pushFollow(FOLLOW_25);
            rule__ValParam__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ValParam__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValParam__Group_1__0"


    // $ANTLR start "rule__ValParam__Group_1__0__Impl"
    // InternalFortXTrans.g:4387:1: rule__ValParam__Group_1__0__Impl : ( ( rule__ValParam__BrackAssignment_1_0 ) ) ;
    public final void rule__ValParam__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4391:1: ( ( ( rule__ValParam__BrackAssignment_1_0 ) ) )
            // InternalFortXTrans.g:4392:1: ( ( rule__ValParam__BrackAssignment_1_0 ) )
            {
            // InternalFortXTrans.g:4392:1: ( ( rule__ValParam__BrackAssignment_1_0 ) )
            // InternalFortXTrans.g:4393:2: ( rule__ValParam__BrackAssignment_1_0 )
            {
             before(grammarAccess.getValParamAccess().getBrackAssignment_1_0()); 
            // InternalFortXTrans.g:4394:2: ( rule__ValParam__BrackAssignment_1_0 )
            // InternalFortXTrans.g:4394:3: rule__ValParam__BrackAssignment_1_0
            {
            pushFollow(FOLLOW_2);
            rule__ValParam__BrackAssignment_1_0();

            state._fsp--;


            }

             after(grammarAccess.getValParamAccess().getBrackAssignment_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValParam__Group_1__0__Impl"


    // $ANTLR start "rule__ValParam__Group_1__1"
    // InternalFortXTrans.g:4402:1: rule__ValParam__Group_1__1 : rule__ValParam__Group_1__1__Impl rule__ValParam__Group_1__2 ;
    public final void rule__ValParam__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4406:1: ( rule__ValParam__Group_1__1__Impl rule__ValParam__Group_1__2 )
            // InternalFortXTrans.g:4407:2: rule__ValParam__Group_1__1__Impl rule__ValParam__Group_1__2
            {
            pushFollow(FOLLOW_25);
            rule__ValParam__Group_1__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ValParam__Group_1__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValParam__Group_1__1"


    // $ANTLR start "rule__ValParam__Group_1__1__Impl"
    // InternalFortXTrans.g:4414:1: rule__ValParam__Group_1__1__Impl : ( ( rule__ValParam__Group_1_1__0 )? ) ;
    public final void rule__ValParam__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4418:1: ( ( ( rule__ValParam__Group_1_1__0 )? ) )
            // InternalFortXTrans.g:4419:1: ( ( rule__ValParam__Group_1_1__0 )? )
            {
            // InternalFortXTrans.g:4419:1: ( ( rule__ValParam__Group_1_1__0 )? )
            // InternalFortXTrans.g:4420:2: ( rule__ValParam__Group_1_1__0 )?
            {
             before(grammarAccess.getValParamAccess().getGroup_1_1()); 
            // InternalFortXTrans.g:4421:2: ( rule__ValParam__Group_1_1__0 )?
            int alt44=2;
            int LA44_0 = input.LA(1);

            if ( (LA44_0==RULE_ID) ) {
                alt44=1;
            }
            switch (alt44) {
                case 1 :
                    // InternalFortXTrans.g:4421:3: rule__ValParam__Group_1_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ValParam__Group_1_1__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getValParamAccess().getGroup_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValParam__Group_1__1__Impl"


    // $ANTLR start "rule__ValParam__Group_1__2"
    // InternalFortXTrans.g:4429:1: rule__ValParam__Group_1__2 : rule__ValParam__Group_1__2__Impl ;
    public final void rule__ValParam__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4433:1: ( rule__ValParam__Group_1__2__Impl )
            // InternalFortXTrans.g:4434:2: rule__ValParam__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ValParam__Group_1__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValParam__Group_1__2"


    // $ANTLR start "rule__ValParam__Group_1__2__Impl"
    // InternalFortXTrans.g:4440:1: rule__ValParam__Group_1__2__Impl : ( ')' ) ;
    public final void rule__ValParam__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4444:1: ( ( ')' ) )
            // InternalFortXTrans.g:4445:1: ( ')' )
            {
            // InternalFortXTrans.g:4445:1: ( ')' )
            // InternalFortXTrans.g:4446:2: ')'
            {
             before(grammarAccess.getValParamAccess().getRightParenthesisKeyword_1_2()); 
            match(input,34,FOLLOW_2); 
             after(grammarAccess.getValParamAccess().getRightParenthesisKeyword_1_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValParam__Group_1__2__Impl"


    // $ANTLR start "rule__ValParam__Group_1_1__0"
    // InternalFortXTrans.g:4456:1: rule__ValParam__Group_1_1__0 : rule__ValParam__Group_1_1__0__Impl rule__ValParam__Group_1_1__1 ;
    public final void rule__ValParam__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4460:1: ( rule__ValParam__Group_1_1__0__Impl rule__ValParam__Group_1_1__1 )
            // InternalFortXTrans.g:4461:2: rule__ValParam__Group_1_1__0__Impl rule__ValParam__Group_1_1__1
            {
            pushFollow(FOLLOW_24);
            rule__ValParam__Group_1_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ValParam__Group_1_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValParam__Group_1_1__0"


    // $ANTLR start "rule__ValParam__Group_1_1__0__Impl"
    // InternalFortXTrans.g:4468:1: rule__ValParam__Group_1_1__0__Impl : ( ( rule__ValParam__ParamsAssignment_1_1_0 ) ) ;
    public final void rule__ValParam__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4472:1: ( ( ( rule__ValParam__ParamsAssignment_1_1_0 ) ) )
            // InternalFortXTrans.g:4473:1: ( ( rule__ValParam__ParamsAssignment_1_1_0 ) )
            {
            // InternalFortXTrans.g:4473:1: ( ( rule__ValParam__ParamsAssignment_1_1_0 ) )
            // InternalFortXTrans.g:4474:2: ( rule__ValParam__ParamsAssignment_1_1_0 )
            {
             before(grammarAccess.getValParamAccess().getParamsAssignment_1_1_0()); 
            // InternalFortXTrans.g:4475:2: ( rule__ValParam__ParamsAssignment_1_1_0 )
            // InternalFortXTrans.g:4475:3: rule__ValParam__ParamsAssignment_1_1_0
            {
            pushFollow(FOLLOW_2);
            rule__ValParam__ParamsAssignment_1_1_0();

            state._fsp--;


            }

             after(grammarAccess.getValParamAccess().getParamsAssignment_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValParam__Group_1_1__0__Impl"


    // $ANTLR start "rule__ValParam__Group_1_1__1"
    // InternalFortXTrans.g:4483:1: rule__ValParam__Group_1_1__1 : rule__ValParam__Group_1_1__1__Impl ;
    public final void rule__ValParam__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4487:1: ( rule__ValParam__Group_1_1__1__Impl )
            // InternalFortXTrans.g:4488:2: rule__ValParam__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ValParam__Group_1_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValParam__Group_1_1__1"


    // $ANTLR start "rule__ValParam__Group_1_1__1__Impl"
    // InternalFortXTrans.g:4494:1: rule__ValParam__Group_1_1__1__Impl : ( ( rule__ValParam__Group_1_1_1__0 )* ) ;
    public final void rule__ValParam__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4498:1: ( ( ( rule__ValParam__Group_1_1_1__0 )* ) )
            // InternalFortXTrans.g:4499:1: ( ( rule__ValParam__Group_1_1_1__0 )* )
            {
            // InternalFortXTrans.g:4499:1: ( ( rule__ValParam__Group_1_1_1__0 )* )
            // InternalFortXTrans.g:4500:2: ( rule__ValParam__Group_1_1_1__0 )*
            {
             before(grammarAccess.getValParamAccess().getGroup_1_1_1()); 
            // InternalFortXTrans.g:4501:2: ( rule__ValParam__Group_1_1_1__0 )*
            loop45:
            do {
                int alt45=2;
                int LA45_0 = input.LA(1);

                if ( (LA45_0==29) ) {
                    alt45=1;
                }


                switch (alt45) {
            	case 1 :
            	    // InternalFortXTrans.g:4501:3: rule__ValParam__Group_1_1_1__0
            	    {
            	    pushFollow(FOLLOW_15);
            	    rule__ValParam__Group_1_1_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop45;
                }
            } while (true);

             after(grammarAccess.getValParamAccess().getGroup_1_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValParam__Group_1_1__1__Impl"


    // $ANTLR start "rule__ValParam__Group_1_1_1__0"
    // InternalFortXTrans.g:4510:1: rule__ValParam__Group_1_1_1__0 : rule__ValParam__Group_1_1_1__0__Impl rule__ValParam__Group_1_1_1__1 ;
    public final void rule__ValParam__Group_1_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4514:1: ( rule__ValParam__Group_1_1_1__0__Impl rule__ValParam__Group_1_1_1__1 )
            // InternalFortXTrans.g:4515:2: rule__ValParam__Group_1_1_1__0__Impl rule__ValParam__Group_1_1_1__1
            {
            pushFollow(FOLLOW_5);
            rule__ValParam__Group_1_1_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ValParam__Group_1_1_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValParam__Group_1_1_1__0"


    // $ANTLR start "rule__ValParam__Group_1_1_1__0__Impl"
    // InternalFortXTrans.g:4522:1: rule__ValParam__Group_1_1_1__0__Impl : ( ',' ) ;
    public final void rule__ValParam__Group_1_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4526:1: ( ( ',' ) )
            // InternalFortXTrans.g:4527:1: ( ',' )
            {
            // InternalFortXTrans.g:4527:1: ( ',' )
            // InternalFortXTrans.g:4528:2: ','
            {
             before(grammarAccess.getValParamAccess().getCommaKeyword_1_1_1_0()); 
            match(input,29,FOLLOW_2); 
             after(grammarAccess.getValParamAccess().getCommaKeyword_1_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValParam__Group_1_1_1__0__Impl"


    // $ANTLR start "rule__ValParam__Group_1_1_1__1"
    // InternalFortXTrans.g:4537:1: rule__ValParam__Group_1_1_1__1 : rule__ValParam__Group_1_1_1__1__Impl ;
    public final void rule__ValParam__Group_1_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4541:1: ( rule__ValParam__Group_1_1_1__1__Impl )
            // InternalFortXTrans.g:4542:2: rule__ValParam__Group_1_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ValParam__Group_1_1_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValParam__Group_1_1_1__1"


    // $ANTLR start "rule__ValParam__Group_1_1_1__1__Impl"
    // InternalFortXTrans.g:4548:1: rule__ValParam__Group_1_1_1__1__Impl : ( ( rule__ValParam__ParamsAssignment_1_1_1_1 ) ) ;
    public final void rule__ValParam__Group_1_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4552:1: ( ( ( rule__ValParam__ParamsAssignment_1_1_1_1 ) ) )
            // InternalFortXTrans.g:4553:1: ( ( rule__ValParam__ParamsAssignment_1_1_1_1 ) )
            {
            // InternalFortXTrans.g:4553:1: ( ( rule__ValParam__ParamsAssignment_1_1_1_1 ) )
            // InternalFortXTrans.g:4554:2: ( rule__ValParam__ParamsAssignment_1_1_1_1 )
            {
             before(grammarAccess.getValParamAccess().getParamsAssignment_1_1_1_1()); 
            // InternalFortXTrans.g:4555:2: ( rule__ValParam__ParamsAssignment_1_1_1_1 )
            // InternalFortXTrans.g:4555:3: rule__ValParam__ParamsAssignment_1_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__ValParam__ParamsAssignment_1_1_1_1();

            state._fsp--;


            }

             after(grammarAccess.getValParamAccess().getParamsAssignment_1_1_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValParam__Group_1_1_1__1__Impl"


    // $ANTLR start "rule__Param__Group__0"
    // InternalFortXTrans.g:4564:1: rule__Param__Group__0 : rule__Param__Group__0__Impl rule__Param__Group__1 ;
    public final void rule__Param__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4568:1: ( rule__Param__Group__0__Impl rule__Param__Group__1 )
            // InternalFortXTrans.g:4569:2: rule__Param__Group__0__Impl rule__Param__Group__1
            {
            pushFollow(FOLLOW_26);
            rule__Param__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Param__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Param__Group__0"


    // $ANTLR start "rule__Param__Group__0__Impl"
    // InternalFortXTrans.g:4576:1: rule__Param__Group__0__Impl : ( ( rule__Param__ParIdAssignment_0 ) ) ;
    public final void rule__Param__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4580:1: ( ( ( rule__Param__ParIdAssignment_0 ) ) )
            // InternalFortXTrans.g:4581:1: ( ( rule__Param__ParIdAssignment_0 ) )
            {
            // InternalFortXTrans.g:4581:1: ( ( rule__Param__ParIdAssignment_0 ) )
            // InternalFortXTrans.g:4582:2: ( rule__Param__ParIdAssignment_0 )
            {
             before(grammarAccess.getParamAccess().getParIdAssignment_0()); 
            // InternalFortXTrans.g:4583:2: ( rule__Param__ParIdAssignment_0 )
            // InternalFortXTrans.g:4583:3: rule__Param__ParIdAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__Param__ParIdAssignment_0();

            state._fsp--;


            }

             after(grammarAccess.getParamAccess().getParIdAssignment_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Param__Group__0__Impl"


    // $ANTLR start "rule__Param__Group__1"
    // InternalFortXTrans.g:4591:1: rule__Param__Group__1 : rule__Param__Group__1__Impl ;
    public final void rule__Param__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4595:1: ( rule__Param__Group__1__Impl )
            // InternalFortXTrans.g:4596:2: rule__Param__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Param__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Param__Group__1"


    // $ANTLR start "rule__Param__Group__1__Impl"
    // InternalFortXTrans.g:4602:1: rule__Param__Group__1__Impl : ( ( rule__Param__IstypeAssignment_1 ) ) ;
    public final void rule__Param__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4606:1: ( ( ( rule__Param__IstypeAssignment_1 ) ) )
            // InternalFortXTrans.g:4607:1: ( ( rule__Param__IstypeAssignment_1 ) )
            {
            // InternalFortXTrans.g:4607:1: ( ( rule__Param__IstypeAssignment_1 ) )
            // InternalFortXTrans.g:4608:2: ( rule__Param__IstypeAssignment_1 )
            {
             before(grammarAccess.getParamAccess().getIstypeAssignment_1()); 
            // InternalFortXTrans.g:4609:2: ( rule__Param__IstypeAssignment_1 )
            // InternalFortXTrans.g:4609:3: rule__Param__IstypeAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__Param__IstypeAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getParamAccess().getIstypeAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Param__Group__1__Impl"


    // $ANTLR start "rule__RetType__Group_0__0"
    // InternalFortXTrans.g:4618:1: rule__RetType__Group_0__0 : rule__RetType__Group_0__0__Impl rule__RetType__Group_0__1 ;
    public final void rule__RetType__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4622:1: ( rule__RetType__Group_0__0__Impl rule__RetType__Group_0__1 )
            // InternalFortXTrans.g:4623:2: rule__RetType__Group_0__0__Impl rule__RetType__Group_0__1
            {
            pushFollow(FOLLOW_27);
            rule__RetType__Group_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__RetType__Group_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RetType__Group_0__0"


    // $ANTLR start "rule__RetType__Group_0__0__Impl"
    // InternalFortXTrans.g:4630:1: rule__RetType__Group_0__0__Impl : ( ':' ) ;
    public final void rule__RetType__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4634:1: ( ( ':' ) )
            // InternalFortXTrans.g:4635:1: ( ':' )
            {
            // InternalFortXTrans.g:4635:1: ( ':' )
            // InternalFortXTrans.g:4636:2: ':'
            {
             before(grammarAccess.getRetTypeAccess().getColonKeyword_0_0()); 
            match(input,35,FOLLOW_2); 
             after(grammarAccess.getRetTypeAccess().getColonKeyword_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RetType__Group_0__0__Impl"


    // $ANTLR start "rule__RetType__Group_0__1"
    // InternalFortXTrans.g:4645:1: rule__RetType__Group_0__1 : rule__RetType__Group_0__1__Impl rule__RetType__Group_0__2 ;
    public final void rule__RetType__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4649:1: ( rule__RetType__Group_0__1__Impl rule__RetType__Group_0__2 )
            // InternalFortXTrans.g:4650:2: rule__RetType__Group_0__1__Impl rule__RetType__Group_0__2
            {
            pushFollow(FOLLOW_23);
            rule__RetType__Group_0__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__RetType__Group_0__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RetType__Group_0__1"


    // $ANTLR start "rule__RetType__Group_0__1__Impl"
    // InternalFortXTrans.g:4657:1: rule__RetType__Group_0__1__Impl : ( ( rule__RetType__EmptyAssignment_0_1 ) ) ;
    public final void rule__RetType__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4661:1: ( ( ( rule__RetType__EmptyAssignment_0_1 ) ) )
            // InternalFortXTrans.g:4662:1: ( ( rule__RetType__EmptyAssignment_0_1 ) )
            {
            // InternalFortXTrans.g:4662:1: ( ( rule__RetType__EmptyAssignment_0_1 ) )
            // InternalFortXTrans.g:4663:2: ( rule__RetType__EmptyAssignment_0_1 )
            {
             before(grammarAccess.getRetTypeAccess().getEmptyAssignment_0_1()); 
            // InternalFortXTrans.g:4664:2: ( rule__RetType__EmptyAssignment_0_1 )
            // InternalFortXTrans.g:4664:3: rule__RetType__EmptyAssignment_0_1
            {
            pushFollow(FOLLOW_2);
            rule__RetType__EmptyAssignment_0_1();

            state._fsp--;


            }

             after(grammarAccess.getRetTypeAccess().getEmptyAssignment_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RetType__Group_0__1__Impl"


    // $ANTLR start "rule__RetType__Group_0__2"
    // InternalFortXTrans.g:4672:1: rule__RetType__Group_0__2 : rule__RetType__Group_0__2__Impl ;
    public final void rule__RetType__Group_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4676:1: ( rule__RetType__Group_0__2__Impl )
            // InternalFortXTrans.g:4677:2: rule__RetType__Group_0__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__RetType__Group_0__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RetType__Group_0__2"


    // $ANTLR start "rule__RetType__Group_0__2__Impl"
    // InternalFortXTrans.g:4683:1: rule__RetType__Group_0__2__Impl : ( ')' ) ;
    public final void rule__RetType__Group_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4687:1: ( ( ')' ) )
            // InternalFortXTrans.g:4688:1: ( ')' )
            {
            // InternalFortXTrans.g:4688:1: ( ')' )
            // InternalFortXTrans.g:4689:2: ')'
            {
             before(grammarAccess.getRetTypeAccess().getRightParenthesisKeyword_0_2()); 
            match(input,34,FOLLOW_2); 
             after(grammarAccess.getRetTypeAccess().getRightParenthesisKeyword_0_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RetType__Group_0__2__Impl"


    // $ANTLR start "rule__RetType__Group_1__0"
    // InternalFortXTrans.g:4699:1: rule__RetType__Group_1__0 : rule__RetType__Group_1__0__Impl rule__RetType__Group_1__1 ;
    public final void rule__RetType__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4703:1: ( rule__RetType__Group_1__0__Impl rule__RetType__Group_1__1 )
            // InternalFortXTrans.g:4704:2: rule__RetType__Group_1__0__Impl rule__RetType__Group_1__1
            {
            pushFollow(FOLLOW_5);
            rule__RetType__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__RetType__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RetType__Group_1__0"


    // $ANTLR start "rule__RetType__Group_1__0__Impl"
    // InternalFortXTrans.g:4711:1: rule__RetType__Group_1__0__Impl : ( ':' ) ;
    public final void rule__RetType__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4715:1: ( ( ':' ) )
            // InternalFortXTrans.g:4716:1: ( ':' )
            {
            // InternalFortXTrans.g:4716:1: ( ':' )
            // InternalFortXTrans.g:4717:2: ':'
            {
             before(grammarAccess.getRetTypeAccess().getColonKeyword_1_0()); 
            match(input,35,FOLLOW_2); 
             after(grammarAccess.getRetTypeAccess().getColonKeyword_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RetType__Group_1__0__Impl"


    // $ANTLR start "rule__RetType__Group_1__1"
    // InternalFortXTrans.g:4726:1: rule__RetType__Group_1__1 : rule__RetType__Group_1__1__Impl ;
    public final void rule__RetType__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4730:1: ( rule__RetType__Group_1__1__Impl )
            // InternalFortXTrans.g:4731:2: rule__RetType__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__RetType__Group_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RetType__Group_1__1"


    // $ANTLR start "rule__RetType__Group_1__1__Impl"
    // InternalFortXTrans.g:4737:1: rule__RetType__Group_1__1__Impl : ( ( rule__RetType__TypeAssignment_1_1 ) ) ;
    public final void rule__RetType__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4741:1: ( ( ( rule__RetType__TypeAssignment_1_1 ) ) )
            // InternalFortXTrans.g:4742:1: ( ( rule__RetType__TypeAssignment_1_1 ) )
            {
            // InternalFortXTrans.g:4742:1: ( ( rule__RetType__TypeAssignment_1_1 ) )
            // InternalFortXTrans.g:4743:2: ( rule__RetType__TypeAssignment_1_1 )
            {
             before(grammarAccess.getRetTypeAccess().getTypeAssignment_1_1()); 
            // InternalFortXTrans.g:4744:2: ( rule__RetType__TypeAssignment_1_1 )
            // InternalFortXTrans.g:4744:3: rule__RetType__TypeAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__RetType__TypeAssignment_1_1();

            state._fsp--;


            }

             after(grammarAccess.getRetTypeAccess().getTypeAssignment_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RetType__Group_1__1__Impl"


    // $ANTLR start "rule__TupleType__Group__0"
    // InternalFortXTrans.g:4753:1: rule__TupleType__Group__0 : rule__TupleType__Group__0__Impl rule__TupleType__Group__1 ;
    public final void rule__TupleType__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4757:1: ( rule__TupleType__Group__0__Impl rule__TupleType__Group__1 )
            // InternalFortXTrans.g:4758:2: rule__TupleType__Group__0__Impl rule__TupleType__Group__1
            {
            pushFollow(FOLLOW_5);
            rule__TupleType__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__TupleType__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TupleType__Group__0"


    // $ANTLR start "rule__TupleType__Group__0__Impl"
    // InternalFortXTrans.g:4765:1: rule__TupleType__Group__0__Impl : ( '(' ) ;
    public final void rule__TupleType__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4769:1: ( ( '(' ) )
            // InternalFortXTrans.g:4770:1: ( '(' )
            {
            // InternalFortXTrans.g:4770:1: ( '(' )
            // InternalFortXTrans.g:4771:2: '('
            {
             before(grammarAccess.getTupleTypeAccess().getLeftParenthesisKeyword_0()); 
            match(input,33,FOLLOW_2); 
             after(grammarAccess.getTupleTypeAccess().getLeftParenthesisKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TupleType__Group__0__Impl"


    // $ANTLR start "rule__TupleType__Group__1"
    // InternalFortXTrans.g:4780:1: rule__TupleType__Group__1 : rule__TupleType__Group__1__Impl rule__TupleType__Group__2 ;
    public final void rule__TupleType__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4784:1: ( rule__TupleType__Group__1__Impl rule__TupleType__Group__2 )
            // InternalFortXTrans.g:4785:2: rule__TupleType__Group__1__Impl rule__TupleType__Group__2
            {
            pushFollow(FOLLOW_28);
            rule__TupleType__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__TupleType__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TupleType__Group__1"


    // $ANTLR start "rule__TupleType__Group__1__Impl"
    // InternalFortXTrans.g:4792:1: rule__TupleType__Group__1__Impl : ( ( rule__TupleType__TypesAssignment_1 ) ) ;
    public final void rule__TupleType__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4796:1: ( ( ( rule__TupleType__TypesAssignment_1 ) ) )
            // InternalFortXTrans.g:4797:1: ( ( rule__TupleType__TypesAssignment_1 ) )
            {
            // InternalFortXTrans.g:4797:1: ( ( rule__TupleType__TypesAssignment_1 ) )
            // InternalFortXTrans.g:4798:2: ( rule__TupleType__TypesAssignment_1 )
            {
             before(grammarAccess.getTupleTypeAccess().getTypesAssignment_1()); 
            // InternalFortXTrans.g:4799:2: ( rule__TupleType__TypesAssignment_1 )
            // InternalFortXTrans.g:4799:3: rule__TupleType__TypesAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__TupleType__TypesAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getTupleTypeAccess().getTypesAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TupleType__Group__1__Impl"


    // $ANTLR start "rule__TupleType__Group__2"
    // InternalFortXTrans.g:4807:1: rule__TupleType__Group__2 : rule__TupleType__Group__2__Impl rule__TupleType__Group__3 ;
    public final void rule__TupleType__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4811:1: ( rule__TupleType__Group__2__Impl rule__TupleType__Group__3 )
            // InternalFortXTrans.g:4812:2: rule__TupleType__Group__2__Impl rule__TupleType__Group__3
            {
            pushFollow(FOLLOW_28);
            rule__TupleType__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__TupleType__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TupleType__Group__2"


    // $ANTLR start "rule__TupleType__Group__2__Impl"
    // InternalFortXTrans.g:4819:1: rule__TupleType__Group__2__Impl : ( ( rule__TupleType__Group_2__0 )* ) ;
    public final void rule__TupleType__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4823:1: ( ( ( rule__TupleType__Group_2__0 )* ) )
            // InternalFortXTrans.g:4824:1: ( ( rule__TupleType__Group_2__0 )* )
            {
            // InternalFortXTrans.g:4824:1: ( ( rule__TupleType__Group_2__0 )* )
            // InternalFortXTrans.g:4825:2: ( rule__TupleType__Group_2__0 )*
            {
             before(grammarAccess.getTupleTypeAccess().getGroup_2()); 
            // InternalFortXTrans.g:4826:2: ( rule__TupleType__Group_2__0 )*
            loop46:
            do {
                int alt46=2;
                int LA46_0 = input.LA(1);

                if ( (LA46_0==29) ) {
                    alt46=1;
                }


                switch (alt46) {
            	case 1 :
            	    // InternalFortXTrans.g:4826:3: rule__TupleType__Group_2__0
            	    {
            	    pushFollow(FOLLOW_15);
            	    rule__TupleType__Group_2__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop46;
                }
            } while (true);

             after(grammarAccess.getTupleTypeAccess().getGroup_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TupleType__Group__2__Impl"


    // $ANTLR start "rule__TupleType__Group__3"
    // InternalFortXTrans.g:4834:1: rule__TupleType__Group__3 : rule__TupleType__Group__3__Impl ;
    public final void rule__TupleType__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4838:1: ( rule__TupleType__Group__3__Impl )
            // InternalFortXTrans.g:4839:2: rule__TupleType__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__TupleType__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TupleType__Group__3"


    // $ANTLR start "rule__TupleType__Group__3__Impl"
    // InternalFortXTrans.g:4845:1: rule__TupleType__Group__3__Impl : ( ')' ) ;
    public final void rule__TupleType__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4849:1: ( ( ')' ) )
            // InternalFortXTrans.g:4850:1: ( ')' )
            {
            // InternalFortXTrans.g:4850:1: ( ')' )
            // InternalFortXTrans.g:4851:2: ')'
            {
             before(grammarAccess.getTupleTypeAccess().getRightParenthesisKeyword_3()); 
            match(input,34,FOLLOW_2); 
             after(grammarAccess.getTupleTypeAccess().getRightParenthesisKeyword_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TupleType__Group__3__Impl"


    // $ANTLR start "rule__TupleType__Group_2__0"
    // InternalFortXTrans.g:4861:1: rule__TupleType__Group_2__0 : rule__TupleType__Group_2__0__Impl rule__TupleType__Group_2__1 ;
    public final void rule__TupleType__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4865:1: ( rule__TupleType__Group_2__0__Impl rule__TupleType__Group_2__1 )
            // InternalFortXTrans.g:4866:2: rule__TupleType__Group_2__0__Impl rule__TupleType__Group_2__1
            {
            pushFollow(FOLLOW_5);
            rule__TupleType__Group_2__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__TupleType__Group_2__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TupleType__Group_2__0"


    // $ANTLR start "rule__TupleType__Group_2__0__Impl"
    // InternalFortXTrans.g:4873:1: rule__TupleType__Group_2__0__Impl : ( ',' ) ;
    public final void rule__TupleType__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4877:1: ( ( ',' ) )
            // InternalFortXTrans.g:4878:1: ( ',' )
            {
            // InternalFortXTrans.g:4878:1: ( ',' )
            // InternalFortXTrans.g:4879:2: ','
            {
             before(grammarAccess.getTupleTypeAccess().getCommaKeyword_2_0()); 
            match(input,29,FOLLOW_2); 
             after(grammarAccess.getTupleTypeAccess().getCommaKeyword_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TupleType__Group_2__0__Impl"


    // $ANTLR start "rule__TupleType__Group_2__1"
    // InternalFortXTrans.g:4888:1: rule__TupleType__Group_2__1 : rule__TupleType__Group_2__1__Impl ;
    public final void rule__TupleType__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4892:1: ( rule__TupleType__Group_2__1__Impl )
            // InternalFortXTrans.g:4893:2: rule__TupleType__Group_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__TupleType__Group_2__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TupleType__Group_2__1"


    // $ANTLR start "rule__TupleType__Group_2__1__Impl"
    // InternalFortXTrans.g:4899:1: rule__TupleType__Group_2__1__Impl : ( ( rule__TupleType__TypesAssignment_2_1 ) ) ;
    public final void rule__TupleType__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4903:1: ( ( ( rule__TupleType__TypesAssignment_2_1 ) ) )
            // InternalFortXTrans.g:4904:1: ( ( rule__TupleType__TypesAssignment_2_1 ) )
            {
            // InternalFortXTrans.g:4904:1: ( ( rule__TupleType__TypesAssignment_2_1 ) )
            // InternalFortXTrans.g:4905:2: ( rule__TupleType__TypesAssignment_2_1 )
            {
             before(grammarAccess.getTupleTypeAccess().getTypesAssignment_2_1()); 
            // InternalFortXTrans.g:4906:2: ( rule__TupleType__TypesAssignment_2_1 )
            // InternalFortXTrans.g:4906:3: rule__TupleType__TypesAssignment_2_1
            {
            pushFollow(FOLLOW_2);
            rule__TupleType__TypesAssignment_2_1();

            state._fsp--;


            }

             after(grammarAccess.getTupleTypeAccess().getTypesAssignment_2_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TupleType__Group_2__1__Impl"


    // $ANTLR start "rule__FnDecl__Group__0"
    // InternalFortXTrans.g:4915:1: rule__FnDecl__Group__0 : rule__FnDecl__Group__0__Impl rule__FnDecl__Group__1 ;
    public final void rule__FnDecl__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4919:1: ( rule__FnDecl__Group__0__Impl rule__FnDecl__Group__1 )
            // InternalFortXTrans.g:4920:2: rule__FnDecl__Group__0__Impl rule__FnDecl__Group__1
            {
            pushFollow(FOLLOW_29);
            rule__FnDecl__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__FnDecl__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FnDecl__Group__0"


    // $ANTLR start "rule__FnDecl__Group__0__Impl"
    // InternalFortXTrans.g:4927:1: rule__FnDecl__Group__0__Impl : ( ( rule__FnDecl__ModsAssignment_0 )? ) ;
    public final void rule__FnDecl__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4931:1: ( ( ( rule__FnDecl__ModsAssignment_0 )? ) )
            // InternalFortXTrans.g:4932:1: ( ( rule__FnDecl__ModsAssignment_0 )? )
            {
            // InternalFortXTrans.g:4932:1: ( ( rule__FnDecl__ModsAssignment_0 )? )
            // InternalFortXTrans.g:4933:2: ( rule__FnDecl__ModsAssignment_0 )?
            {
             before(grammarAccess.getFnDeclAccess().getModsAssignment_0()); 
            // InternalFortXTrans.g:4934:2: ( rule__FnDecl__ModsAssignment_0 )?
            int alt47=2;
            int LA47_0 = input.LA(1);

            if ( ((LA47_0>=58 && LA47_0<=61)) ) {
                alt47=1;
            }
            switch (alt47) {
                case 1 :
                    // InternalFortXTrans.g:4934:3: rule__FnDecl__ModsAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__FnDecl__ModsAssignment_0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getFnDeclAccess().getModsAssignment_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FnDecl__Group__0__Impl"


    // $ANTLR start "rule__FnDecl__Group__1"
    // InternalFortXTrans.g:4942:1: rule__FnDecl__Group__1 : rule__FnDecl__Group__1__Impl rule__FnDecl__Group__2 ;
    public final void rule__FnDecl__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4946:1: ( rule__FnDecl__Group__1__Impl rule__FnDecl__Group__2 )
            // InternalFortXTrans.g:4947:2: rule__FnDecl__Group__1__Impl rule__FnDecl__Group__2
            {
            pushFollow(FOLLOW_30);
            rule__FnDecl__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__FnDecl__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FnDecl__Group__1"


    // $ANTLR start "rule__FnDecl__Group__1__Impl"
    // InternalFortXTrans.g:4954:1: rule__FnDecl__Group__1__Impl : ( ( rule__FnDecl__NameAssignment_1 ) ) ;
    public final void rule__FnDecl__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4958:1: ( ( ( rule__FnDecl__NameAssignment_1 ) ) )
            // InternalFortXTrans.g:4959:1: ( ( rule__FnDecl__NameAssignment_1 ) )
            {
            // InternalFortXTrans.g:4959:1: ( ( rule__FnDecl__NameAssignment_1 ) )
            // InternalFortXTrans.g:4960:2: ( rule__FnDecl__NameAssignment_1 )
            {
             before(grammarAccess.getFnDeclAccess().getNameAssignment_1()); 
            // InternalFortXTrans.g:4961:2: ( rule__FnDecl__NameAssignment_1 )
            // InternalFortXTrans.g:4961:3: rule__FnDecl__NameAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__FnDecl__NameAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getFnDeclAccess().getNameAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FnDecl__Group__1__Impl"


    // $ANTLR start "rule__FnDecl__Group__2"
    // InternalFortXTrans.g:4969:1: rule__FnDecl__Group__2 : rule__FnDecl__Group__2__Impl rule__FnDecl__Group__3 ;
    public final void rule__FnDecl__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4973:1: ( rule__FnDecl__Group__2__Impl rule__FnDecl__Group__3 )
            // InternalFortXTrans.g:4974:2: rule__FnDecl__Group__2__Impl rule__FnDecl__Group__3
            {
            pushFollow(FOLLOW_31);
            rule__FnDecl__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__FnDecl__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FnDecl__Group__2"


    // $ANTLR start "rule__FnDecl__Group__2__Impl"
    // InternalFortXTrans.g:4981:1: rule__FnDecl__Group__2__Impl : ( ( rule__FnDecl__ParamsAssignment_2 ) ) ;
    public final void rule__FnDecl__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:4985:1: ( ( ( rule__FnDecl__ParamsAssignment_2 ) ) )
            // InternalFortXTrans.g:4986:1: ( ( rule__FnDecl__ParamsAssignment_2 ) )
            {
            // InternalFortXTrans.g:4986:1: ( ( rule__FnDecl__ParamsAssignment_2 ) )
            // InternalFortXTrans.g:4987:2: ( rule__FnDecl__ParamsAssignment_2 )
            {
             before(grammarAccess.getFnDeclAccess().getParamsAssignment_2()); 
            // InternalFortXTrans.g:4988:2: ( rule__FnDecl__ParamsAssignment_2 )
            // InternalFortXTrans.g:4988:3: rule__FnDecl__ParamsAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__FnDecl__ParamsAssignment_2();

            state._fsp--;


            }

             after(grammarAccess.getFnDeclAccess().getParamsAssignment_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FnDecl__Group__2__Impl"


    // $ANTLR start "rule__FnDecl__Group__3"
    // InternalFortXTrans.g:4996:1: rule__FnDecl__Group__3 : rule__FnDecl__Group__3__Impl rule__FnDecl__Group__4 ;
    public final void rule__FnDecl__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5000:1: ( rule__FnDecl__Group__3__Impl rule__FnDecl__Group__4 )
            // InternalFortXTrans.g:5001:2: rule__FnDecl__Group__3__Impl rule__FnDecl__Group__4
            {
            pushFollow(FOLLOW_31);
            rule__FnDecl__Group__3__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__FnDecl__Group__4();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FnDecl__Group__3"


    // $ANTLR start "rule__FnDecl__Group__3__Impl"
    // InternalFortXTrans.g:5008:1: rule__FnDecl__Group__3__Impl : ( ( rule__FnDecl__RetValAssignment_3 )? ) ;
    public final void rule__FnDecl__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5012:1: ( ( ( rule__FnDecl__RetValAssignment_3 )? ) )
            // InternalFortXTrans.g:5013:1: ( ( rule__FnDecl__RetValAssignment_3 )? )
            {
            // InternalFortXTrans.g:5013:1: ( ( rule__FnDecl__RetValAssignment_3 )? )
            // InternalFortXTrans.g:5014:2: ( rule__FnDecl__RetValAssignment_3 )?
            {
             before(grammarAccess.getFnDeclAccess().getRetValAssignment_3()); 
            // InternalFortXTrans.g:5015:2: ( rule__FnDecl__RetValAssignment_3 )?
            int alt48=2;
            int LA48_0 = input.LA(1);

            if ( (LA48_0==35) ) {
                alt48=1;
            }
            switch (alt48) {
                case 1 :
                    // InternalFortXTrans.g:5015:3: rule__FnDecl__RetValAssignment_3
                    {
                    pushFollow(FOLLOW_2);
                    rule__FnDecl__RetValAssignment_3();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getFnDeclAccess().getRetValAssignment_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FnDecl__Group__3__Impl"


    // $ANTLR start "rule__FnDecl__Group__4"
    // InternalFortXTrans.g:5023:1: rule__FnDecl__Group__4 : rule__FnDecl__Group__4__Impl ;
    public final void rule__FnDecl__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5027:1: ( rule__FnDecl__Group__4__Impl )
            // InternalFortXTrans.g:5028:2: rule__FnDecl__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FnDecl__Group__4__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FnDecl__Group__4"


    // $ANTLR start "rule__FnDecl__Group__4__Impl"
    // InternalFortXTrans.g:5034:1: rule__FnDecl__Group__4__Impl : ( ( rule__FnDecl__Group_4__0 )? ) ;
    public final void rule__FnDecl__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5038:1: ( ( ( rule__FnDecl__Group_4__0 )? ) )
            // InternalFortXTrans.g:5039:1: ( ( rule__FnDecl__Group_4__0 )? )
            {
            // InternalFortXTrans.g:5039:1: ( ( rule__FnDecl__Group_4__0 )? )
            // InternalFortXTrans.g:5040:2: ( rule__FnDecl__Group_4__0 )?
            {
             before(grammarAccess.getFnDeclAccess().getGroup_4()); 
            // InternalFortXTrans.g:5041:2: ( rule__FnDecl__Group_4__0 )?
            int alt49=2;
            int LA49_0 = input.LA(1);

            if ( (LA49_0==54) ) {
                alt49=1;
            }
            switch (alt49) {
                case 1 :
                    // InternalFortXTrans.g:5041:3: rule__FnDecl__Group_4__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__FnDecl__Group_4__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getFnDeclAccess().getGroup_4()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FnDecl__Group__4__Impl"


    // $ANTLR start "rule__FnDecl__Group_4__0"
    // InternalFortXTrans.g:5050:1: rule__FnDecl__Group_4__0 : rule__FnDecl__Group_4__0__Impl rule__FnDecl__Group_4__1 ;
    public final void rule__FnDecl__Group_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5054:1: ( rule__FnDecl__Group_4__0__Impl rule__FnDecl__Group_4__1 )
            // InternalFortXTrans.g:5055:2: rule__FnDecl__Group_4__0__Impl rule__FnDecl__Group_4__1
            {
            pushFollow(FOLLOW_32);
            rule__FnDecl__Group_4__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__FnDecl__Group_4__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FnDecl__Group_4__0"


    // $ANTLR start "rule__FnDecl__Group_4__0__Impl"
    // InternalFortXTrans.g:5062:1: rule__FnDecl__Group_4__0__Impl : ( ( rule__FnDecl__BodyAssignment_4_0 ) ) ;
    public final void rule__FnDecl__Group_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5066:1: ( ( ( rule__FnDecl__BodyAssignment_4_0 ) ) )
            // InternalFortXTrans.g:5067:1: ( ( rule__FnDecl__BodyAssignment_4_0 ) )
            {
            // InternalFortXTrans.g:5067:1: ( ( rule__FnDecl__BodyAssignment_4_0 ) )
            // InternalFortXTrans.g:5068:2: ( rule__FnDecl__BodyAssignment_4_0 )
            {
             before(grammarAccess.getFnDeclAccess().getBodyAssignment_4_0()); 
            // InternalFortXTrans.g:5069:2: ( rule__FnDecl__BodyAssignment_4_0 )
            // InternalFortXTrans.g:5069:3: rule__FnDecl__BodyAssignment_4_0
            {
            pushFollow(FOLLOW_2);
            rule__FnDecl__BodyAssignment_4_0();

            state._fsp--;


            }

             after(grammarAccess.getFnDeclAccess().getBodyAssignment_4_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FnDecl__Group_4__0__Impl"


    // $ANTLR start "rule__FnDecl__Group_4__1"
    // InternalFortXTrans.g:5077:1: rule__FnDecl__Group_4__1 : rule__FnDecl__Group_4__1__Impl ;
    public final void rule__FnDecl__Group_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5081:1: ( rule__FnDecl__Group_4__1__Impl )
            // InternalFortXTrans.g:5082:2: rule__FnDecl__Group_4__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FnDecl__Group_4__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FnDecl__Group_4__1"


    // $ANTLR start "rule__FnDecl__Group_4__1__Impl"
    // InternalFortXTrans.g:5088:1: rule__FnDecl__Group_4__1__Impl : ( ( rule__FnDecl__FnItselfAssignment_4_1 ) ) ;
    public final void rule__FnDecl__Group_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5092:1: ( ( ( rule__FnDecl__FnItselfAssignment_4_1 ) ) )
            // InternalFortXTrans.g:5093:1: ( ( rule__FnDecl__FnItselfAssignment_4_1 ) )
            {
            // InternalFortXTrans.g:5093:1: ( ( rule__FnDecl__FnItselfAssignment_4_1 ) )
            // InternalFortXTrans.g:5094:2: ( rule__FnDecl__FnItselfAssignment_4_1 )
            {
             before(grammarAccess.getFnDeclAccess().getFnItselfAssignment_4_1()); 
            // InternalFortXTrans.g:5095:2: ( rule__FnDecl__FnItselfAssignment_4_1 )
            // InternalFortXTrans.g:5095:3: rule__FnDecl__FnItselfAssignment_4_1
            {
            pushFollow(FOLLOW_2);
            rule__FnDecl__FnItselfAssignment_4_1();

            state._fsp--;


            }

             after(grammarAccess.getFnDeclAccess().getFnItselfAssignment_4_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FnDecl__Group_4__1__Impl"


    // $ANTLR start "rule__Stmnts__Group_1__0"
    // InternalFortXTrans.g:5104:1: rule__Stmnts__Group_1__0 : rule__Stmnts__Group_1__0__Impl rule__Stmnts__Group_1__1 ;
    public final void rule__Stmnts__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5108:1: ( rule__Stmnts__Group_1__0__Impl rule__Stmnts__Group_1__1 )
            // InternalFortXTrans.g:5109:2: rule__Stmnts__Group_1__0__Impl rule__Stmnts__Group_1__1
            {
            pushFollow(FOLLOW_33);
            rule__Stmnts__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Stmnts__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Stmnts__Group_1__0"


    // $ANTLR start "rule__Stmnts__Group_1__0__Impl"
    // InternalFortXTrans.g:5116:1: rule__Stmnts__Group_1__0__Impl : ( '(' ) ;
    public final void rule__Stmnts__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5120:1: ( ( '(' ) )
            // InternalFortXTrans.g:5121:1: ( '(' )
            {
            // InternalFortXTrans.g:5121:1: ( '(' )
            // InternalFortXTrans.g:5122:2: '('
            {
             before(grammarAccess.getStmntsAccess().getLeftParenthesisKeyword_1_0()); 
            match(input,33,FOLLOW_2); 
             after(grammarAccess.getStmntsAccess().getLeftParenthesisKeyword_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Stmnts__Group_1__0__Impl"


    // $ANTLR start "rule__Stmnts__Group_1__1"
    // InternalFortXTrans.g:5131:1: rule__Stmnts__Group_1__1 : rule__Stmnts__Group_1__1__Impl rule__Stmnts__Group_1__2 ;
    public final void rule__Stmnts__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5135:1: ( rule__Stmnts__Group_1__1__Impl rule__Stmnts__Group_1__2 )
            // InternalFortXTrans.g:5136:2: rule__Stmnts__Group_1__1__Impl rule__Stmnts__Group_1__2
            {
            pushFollow(FOLLOW_34);
            rule__Stmnts__Group_1__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Stmnts__Group_1__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Stmnts__Group_1__1"


    // $ANTLR start "rule__Stmnts__Group_1__1__Impl"
    // InternalFortXTrans.g:5143:1: rule__Stmnts__Group_1__1__Impl : ( '|' ) ;
    public final void rule__Stmnts__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5147:1: ( ( '|' ) )
            // InternalFortXTrans.g:5148:1: ( '|' )
            {
            // InternalFortXTrans.g:5148:1: ( '|' )
            // InternalFortXTrans.g:5149:2: '|'
            {
             before(grammarAccess.getStmntsAccess().getVerticalLineKeyword_1_1()); 
            match(input,36,FOLLOW_2); 
             after(grammarAccess.getStmntsAccess().getVerticalLineKeyword_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Stmnts__Group_1__1__Impl"


    // $ANTLR start "rule__Stmnts__Group_1__2"
    // InternalFortXTrans.g:5158:1: rule__Stmnts__Group_1__2 : rule__Stmnts__Group_1__2__Impl rule__Stmnts__Group_1__3 ;
    public final void rule__Stmnts__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5162:1: ( rule__Stmnts__Group_1__2__Impl rule__Stmnts__Group_1__3 )
            // InternalFortXTrans.g:5163:2: rule__Stmnts__Group_1__2__Impl rule__Stmnts__Group_1__3
            {
            pushFollow(FOLLOW_33);
            rule__Stmnts__Group_1__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Stmnts__Group_1__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Stmnts__Group_1__2"


    // $ANTLR start "rule__Stmnts__Group_1__2__Impl"
    // InternalFortXTrans.g:5170:1: rule__Stmnts__Group_1__2__Impl : ( ( rule__Stmnts__DelimsAssignment_1_2 ) ) ;
    public final void rule__Stmnts__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5174:1: ( ( ( rule__Stmnts__DelimsAssignment_1_2 ) ) )
            // InternalFortXTrans.g:5175:1: ( ( rule__Stmnts__DelimsAssignment_1_2 ) )
            {
            // InternalFortXTrans.g:5175:1: ( ( rule__Stmnts__DelimsAssignment_1_2 ) )
            // InternalFortXTrans.g:5176:2: ( rule__Stmnts__DelimsAssignment_1_2 )
            {
             before(grammarAccess.getStmntsAccess().getDelimsAssignment_1_2()); 
            // InternalFortXTrans.g:5177:2: ( rule__Stmnts__DelimsAssignment_1_2 )
            // InternalFortXTrans.g:5177:3: rule__Stmnts__DelimsAssignment_1_2
            {
            pushFollow(FOLLOW_2);
            rule__Stmnts__DelimsAssignment_1_2();

            state._fsp--;


            }

             after(grammarAccess.getStmntsAccess().getDelimsAssignment_1_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Stmnts__Group_1__2__Impl"


    // $ANTLR start "rule__Stmnts__Group_1__3"
    // InternalFortXTrans.g:5185:1: rule__Stmnts__Group_1__3 : rule__Stmnts__Group_1__3__Impl rule__Stmnts__Group_1__4 ;
    public final void rule__Stmnts__Group_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5189:1: ( rule__Stmnts__Group_1__3__Impl rule__Stmnts__Group_1__4 )
            // InternalFortXTrans.g:5190:2: rule__Stmnts__Group_1__3__Impl rule__Stmnts__Group_1__4
            {
            pushFollow(FOLLOW_23);
            rule__Stmnts__Group_1__3__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Stmnts__Group_1__4();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Stmnts__Group_1__3"


    // $ANTLR start "rule__Stmnts__Group_1__3__Impl"
    // InternalFortXTrans.g:5197:1: rule__Stmnts__Group_1__3__Impl : ( '|' ) ;
    public final void rule__Stmnts__Group_1__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5201:1: ( ( '|' ) )
            // InternalFortXTrans.g:5202:1: ( '|' )
            {
            // InternalFortXTrans.g:5202:1: ( '|' )
            // InternalFortXTrans.g:5203:2: '|'
            {
             before(grammarAccess.getStmntsAccess().getVerticalLineKeyword_1_3()); 
            match(input,36,FOLLOW_2); 
             after(grammarAccess.getStmntsAccess().getVerticalLineKeyword_1_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Stmnts__Group_1__3__Impl"


    // $ANTLR start "rule__Stmnts__Group_1__4"
    // InternalFortXTrans.g:5212:1: rule__Stmnts__Group_1__4 : rule__Stmnts__Group_1__4__Impl ;
    public final void rule__Stmnts__Group_1__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5216:1: ( rule__Stmnts__Group_1__4__Impl )
            // InternalFortXTrans.g:5217:2: rule__Stmnts__Group_1__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Stmnts__Group_1__4__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Stmnts__Group_1__4"


    // $ANTLR start "rule__Stmnts__Group_1__4__Impl"
    // InternalFortXTrans.g:5223:1: rule__Stmnts__Group_1__4__Impl : ( ')' ) ;
    public final void rule__Stmnts__Group_1__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5227:1: ( ( ')' ) )
            // InternalFortXTrans.g:5228:1: ( ')' )
            {
            // InternalFortXTrans.g:5228:1: ( ')' )
            // InternalFortXTrans.g:5229:2: ')'
            {
             before(grammarAccess.getStmntsAccess().getRightParenthesisKeyword_1_4()); 
            match(input,34,FOLLOW_2); 
             after(grammarAccess.getStmntsAccess().getRightParenthesisKeyword_1_4()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Stmnts__Group_1__4__Impl"


    // $ANTLR start "rule__StmntList__Group__0"
    // InternalFortXTrans.g:5239:1: rule__StmntList__Group__0 : rule__StmntList__Group__0__Impl rule__StmntList__Group__1 ;
    public final void rule__StmntList__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5243:1: ( rule__StmntList__Group__0__Impl rule__StmntList__Group__1 )
            // InternalFortXTrans.g:5244:2: rule__StmntList__Group__0__Impl rule__StmntList__Group__1
            {
            pushFollow(FOLLOW_24);
            rule__StmntList__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__StmntList__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StmntList__Group__0"


    // $ANTLR start "rule__StmntList__Group__0__Impl"
    // InternalFortXTrans.g:5251:1: rule__StmntList__Group__0__Impl : ( ( rule__StmntList__DelimAssignment_0 ) ) ;
    public final void rule__StmntList__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5255:1: ( ( ( rule__StmntList__DelimAssignment_0 ) ) )
            // InternalFortXTrans.g:5256:1: ( ( rule__StmntList__DelimAssignment_0 ) )
            {
            // InternalFortXTrans.g:5256:1: ( ( rule__StmntList__DelimAssignment_0 ) )
            // InternalFortXTrans.g:5257:2: ( rule__StmntList__DelimAssignment_0 )
            {
             before(grammarAccess.getStmntListAccess().getDelimAssignment_0()); 
            // InternalFortXTrans.g:5258:2: ( rule__StmntList__DelimAssignment_0 )
            // InternalFortXTrans.g:5258:3: rule__StmntList__DelimAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__StmntList__DelimAssignment_0();

            state._fsp--;


            }

             after(grammarAccess.getStmntListAccess().getDelimAssignment_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StmntList__Group__0__Impl"


    // $ANTLR start "rule__StmntList__Group__1"
    // InternalFortXTrans.g:5266:1: rule__StmntList__Group__1 : rule__StmntList__Group__1__Impl ;
    public final void rule__StmntList__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5270:1: ( rule__StmntList__Group__1__Impl )
            // InternalFortXTrans.g:5271:2: rule__StmntList__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__StmntList__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StmntList__Group__1"


    // $ANTLR start "rule__StmntList__Group__1__Impl"
    // InternalFortXTrans.g:5277:1: rule__StmntList__Group__1__Impl : ( ( rule__StmntList__Group_1__0 )* ) ;
    public final void rule__StmntList__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5281:1: ( ( ( rule__StmntList__Group_1__0 )* ) )
            // InternalFortXTrans.g:5282:1: ( ( rule__StmntList__Group_1__0 )* )
            {
            // InternalFortXTrans.g:5282:1: ( ( rule__StmntList__Group_1__0 )* )
            // InternalFortXTrans.g:5283:2: ( rule__StmntList__Group_1__0 )*
            {
             before(grammarAccess.getStmntListAccess().getGroup_1()); 
            // InternalFortXTrans.g:5284:2: ( rule__StmntList__Group_1__0 )*
            loop50:
            do {
                int alt50=2;
                int LA50_0 = input.LA(1);

                if ( (LA50_0==29) ) {
                    alt50=1;
                }


                switch (alt50) {
            	case 1 :
            	    // InternalFortXTrans.g:5284:3: rule__StmntList__Group_1__0
            	    {
            	    pushFollow(FOLLOW_15);
            	    rule__StmntList__Group_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop50;
                }
            } while (true);

             after(grammarAccess.getStmntListAccess().getGroup_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StmntList__Group__1__Impl"


    // $ANTLR start "rule__StmntList__Group_1__0"
    // InternalFortXTrans.g:5293:1: rule__StmntList__Group_1__0 : rule__StmntList__Group_1__0__Impl rule__StmntList__Group_1__1 ;
    public final void rule__StmntList__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5297:1: ( rule__StmntList__Group_1__0__Impl rule__StmntList__Group_1__1 )
            // InternalFortXTrans.g:5298:2: rule__StmntList__Group_1__0__Impl rule__StmntList__Group_1__1
            {
            pushFollow(FOLLOW_34);
            rule__StmntList__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__StmntList__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StmntList__Group_1__0"


    // $ANTLR start "rule__StmntList__Group_1__0__Impl"
    // InternalFortXTrans.g:5305:1: rule__StmntList__Group_1__0__Impl : ( ',' ) ;
    public final void rule__StmntList__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5309:1: ( ( ',' ) )
            // InternalFortXTrans.g:5310:1: ( ',' )
            {
            // InternalFortXTrans.g:5310:1: ( ',' )
            // InternalFortXTrans.g:5311:2: ','
            {
             before(grammarAccess.getStmntListAccess().getCommaKeyword_1_0()); 
            match(input,29,FOLLOW_2); 
             after(grammarAccess.getStmntListAccess().getCommaKeyword_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StmntList__Group_1__0__Impl"


    // $ANTLR start "rule__StmntList__Group_1__1"
    // InternalFortXTrans.g:5320:1: rule__StmntList__Group_1__1 : rule__StmntList__Group_1__1__Impl ;
    public final void rule__StmntList__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5324:1: ( rule__StmntList__Group_1__1__Impl )
            // InternalFortXTrans.g:5325:2: rule__StmntList__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__StmntList__Group_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StmntList__Group_1__1"


    // $ANTLR start "rule__StmntList__Group_1__1__Impl"
    // InternalFortXTrans.g:5331:1: rule__StmntList__Group_1__1__Impl : ( ( rule__StmntList__DelimAssignment_1_1 ) ) ;
    public final void rule__StmntList__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5335:1: ( ( ( rule__StmntList__DelimAssignment_1_1 ) ) )
            // InternalFortXTrans.g:5336:1: ( ( rule__StmntList__DelimAssignment_1_1 ) )
            {
            // InternalFortXTrans.g:5336:1: ( ( rule__StmntList__DelimAssignment_1_1 ) )
            // InternalFortXTrans.g:5337:2: ( rule__StmntList__DelimAssignment_1_1 )
            {
             before(grammarAccess.getStmntListAccess().getDelimAssignment_1_1()); 
            // InternalFortXTrans.g:5338:2: ( rule__StmntList__DelimAssignment_1_1 )
            // InternalFortXTrans.g:5338:3: rule__StmntList__DelimAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__StmntList__DelimAssignment_1_1();

            state._fsp--;


            }

             after(grammarAccess.getStmntListAccess().getDelimAssignment_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StmntList__Group_1__1__Impl"


    // $ANTLR start "rule__Expr__Group__0"
    // InternalFortXTrans.g:5347:1: rule__Expr__Group__0 : rule__Expr__Group__0__Impl rule__Expr__Group__1 ;
    public final void rule__Expr__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5351:1: ( rule__Expr__Group__0__Impl rule__Expr__Group__1 )
            // InternalFortXTrans.g:5352:2: rule__Expr__Group__0__Impl rule__Expr__Group__1
            {
            pushFollow(FOLLOW_20);
            rule__Expr__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Expr__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Expr__Group__0"


    // $ANTLR start "rule__Expr__Group__0__Impl"
    // InternalFortXTrans.g:5359:1: rule__Expr__Group__0__Impl : ( ruleOr ) ;
    public final void rule__Expr__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5363:1: ( ( ruleOr ) )
            // InternalFortXTrans.g:5364:1: ( ruleOr )
            {
            // InternalFortXTrans.g:5364:1: ( ruleOr )
            // InternalFortXTrans.g:5365:2: ruleOr
            {
             before(grammarAccess.getExprAccess().getOrParserRuleCall_0()); 
            pushFollow(FOLLOW_2);
            ruleOr();

            state._fsp--;

             after(grammarAccess.getExprAccess().getOrParserRuleCall_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Expr__Group__0__Impl"


    // $ANTLR start "rule__Expr__Group__1"
    // InternalFortXTrans.g:5374:1: rule__Expr__Group__1 : rule__Expr__Group__1__Impl ;
    public final void rule__Expr__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5378:1: ( rule__Expr__Group__1__Impl )
            // InternalFortXTrans.g:5379:2: rule__Expr__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Expr__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Expr__Group__1"


    // $ANTLR start "rule__Expr__Group__1__Impl"
    // InternalFortXTrans.g:5385:1: rule__Expr__Group__1__Impl : ( ( rule__Expr__TailAssignment_1 )* ) ;
    public final void rule__Expr__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5389:1: ( ( ( rule__Expr__TailAssignment_1 )* ) )
            // InternalFortXTrans.g:5390:1: ( ( rule__Expr__TailAssignment_1 )* )
            {
            // InternalFortXTrans.g:5390:1: ( ( rule__Expr__TailAssignment_1 )* )
            // InternalFortXTrans.g:5391:2: ( rule__Expr__TailAssignment_1 )*
            {
             before(grammarAccess.getExprAccess().getTailAssignment_1()); 
            // InternalFortXTrans.g:5392:2: ( rule__Expr__TailAssignment_1 )*
            loop51:
            do {
                int alt51=2;
                int LA51_0 = input.LA(1);

                if ( (LA51_0==32) ) {
                    alt51=1;
                }


                switch (alt51) {
            	case 1 :
            	    // InternalFortXTrans.g:5392:3: rule__Expr__TailAssignment_1
            	    {
            	    pushFollow(FOLLOW_35);
            	    rule__Expr__TailAssignment_1();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop51;
                }
            } while (true);

             after(grammarAccess.getExprAccess().getTailAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Expr__Group__1__Impl"


    // $ANTLR start "rule__Or__Group__0"
    // InternalFortXTrans.g:5401:1: rule__Or__Group__0 : rule__Or__Group__0__Impl rule__Or__Group__1 ;
    public final void rule__Or__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5405:1: ( rule__Or__Group__0__Impl rule__Or__Group__1 )
            // InternalFortXTrans.g:5406:2: rule__Or__Group__0__Impl rule__Or__Group__1
            {
            pushFollow(FOLLOW_36);
            rule__Or__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Or__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Or__Group__0"


    // $ANTLR start "rule__Or__Group__0__Impl"
    // InternalFortXTrans.g:5413:1: rule__Or__Group__0__Impl : ( ruleAnd ) ;
    public final void rule__Or__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5417:1: ( ( ruleAnd ) )
            // InternalFortXTrans.g:5418:1: ( ruleAnd )
            {
            // InternalFortXTrans.g:5418:1: ( ruleAnd )
            // InternalFortXTrans.g:5419:2: ruleAnd
            {
             before(grammarAccess.getOrAccess().getAndParserRuleCall_0()); 
            pushFollow(FOLLOW_2);
            ruleAnd();

            state._fsp--;

             after(grammarAccess.getOrAccess().getAndParserRuleCall_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Or__Group__0__Impl"


    // $ANTLR start "rule__Or__Group__1"
    // InternalFortXTrans.g:5428:1: rule__Or__Group__1 : rule__Or__Group__1__Impl ;
    public final void rule__Or__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5432:1: ( rule__Or__Group__1__Impl )
            // InternalFortXTrans.g:5433:2: rule__Or__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Or__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Or__Group__1"


    // $ANTLR start "rule__Or__Group__1__Impl"
    // InternalFortXTrans.g:5439:1: rule__Or__Group__1__Impl : ( ( rule__Or__Group_1__0 )* ) ;
    public final void rule__Or__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5443:1: ( ( ( rule__Or__Group_1__0 )* ) )
            // InternalFortXTrans.g:5444:1: ( ( rule__Or__Group_1__0 )* )
            {
            // InternalFortXTrans.g:5444:1: ( ( rule__Or__Group_1__0 )* )
            // InternalFortXTrans.g:5445:2: ( rule__Or__Group_1__0 )*
            {
             before(grammarAccess.getOrAccess().getGroup_1()); 
            // InternalFortXTrans.g:5446:2: ( rule__Or__Group_1__0 )*
            loop52:
            do {
                int alt52=2;
                int LA52_0 = input.LA(1);

                if ( (LA52_0==37) ) {
                    alt52=1;
                }


                switch (alt52) {
            	case 1 :
            	    // InternalFortXTrans.g:5446:3: rule__Or__Group_1__0
            	    {
            	    pushFollow(FOLLOW_37);
            	    rule__Or__Group_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop52;
                }
            } while (true);

             after(grammarAccess.getOrAccess().getGroup_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Or__Group__1__Impl"


    // $ANTLR start "rule__Or__Group_1__0"
    // InternalFortXTrans.g:5455:1: rule__Or__Group_1__0 : rule__Or__Group_1__0__Impl rule__Or__Group_1__1 ;
    public final void rule__Or__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5459:1: ( rule__Or__Group_1__0__Impl rule__Or__Group_1__1 )
            // InternalFortXTrans.g:5460:2: rule__Or__Group_1__0__Impl rule__Or__Group_1__1
            {
            pushFollow(FOLLOW_36);
            rule__Or__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Or__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Or__Group_1__0"


    // $ANTLR start "rule__Or__Group_1__0__Impl"
    // InternalFortXTrans.g:5467:1: rule__Or__Group_1__0__Impl : ( () ) ;
    public final void rule__Or__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5471:1: ( ( () ) )
            // InternalFortXTrans.g:5472:1: ( () )
            {
            // InternalFortXTrans.g:5472:1: ( () )
            // InternalFortXTrans.g:5473:2: ()
            {
             before(grammarAccess.getOrAccess().getOrLeftAction_1_0()); 
            // InternalFortXTrans.g:5474:2: ()
            // InternalFortXTrans.g:5474:3: 
            {
            }

             after(grammarAccess.getOrAccess().getOrLeftAction_1_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Or__Group_1__0__Impl"


    // $ANTLR start "rule__Or__Group_1__1"
    // InternalFortXTrans.g:5482:1: rule__Or__Group_1__1 : rule__Or__Group_1__1__Impl rule__Or__Group_1__2 ;
    public final void rule__Or__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5486:1: ( rule__Or__Group_1__1__Impl rule__Or__Group_1__2 )
            // InternalFortXTrans.g:5487:2: rule__Or__Group_1__1__Impl rule__Or__Group_1__2
            {
            pushFollow(FOLLOW_32);
            rule__Or__Group_1__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Or__Group_1__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Or__Group_1__1"


    // $ANTLR start "rule__Or__Group_1__1__Impl"
    // InternalFortXTrans.g:5494:1: rule__Or__Group_1__1__Impl : ( 'OR' ) ;
    public final void rule__Or__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5498:1: ( ( 'OR' ) )
            // InternalFortXTrans.g:5499:1: ( 'OR' )
            {
            // InternalFortXTrans.g:5499:1: ( 'OR' )
            // InternalFortXTrans.g:5500:2: 'OR'
            {
             before(grammarAccess.getOrAccess().getORKeyword_1_1()); 
            match(input,37,FOLLOW_2); 
             after(grammarAccess.getOrAccess().getORKeyword_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Or__Group_1__1__Impl"


    // $ANTLR start "rule__Or__Group_1__2"
    // InternalFortXTrans.g:5509:1: rule__Or__Group_1__2 : rule__Or__Group_1__2__Impl ;
    public final void rule__Or__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5513:1: ( rule__Or__Group_1__2__Impl )
            // InternalFortXTrans.g:5514:2: rule__Or__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Or__Group_1__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Or__Group_1__2"


    // $ANTLR start "rule__Or__Group_1__2__Impl"
    // InternalFortXTrans.g:5520:1: rule__Or__Group_1__2__Impl : ( ( rule__Or__RightAssignment_1_2 ) ) ;
    public final void rule__Or__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5524:1: ( ( ( rule__Or__RightAssignment_1_2 ) ) )
            // InternalFortXTrans.g:5525:1: ( ( rule__Or__RightAssignment_1_2 ) )
            {
            // InternalFortXTrans.g:5525:1: ( ( rule__Or__RightAssignment_1_2 ) )
            // InternalFortXTrans.g:5526:2: ( rule__Or__RightAssignment_1_2 )
            {
             before(grammarAccess.getOrAccess().getRightAssignment_1_2()); 
            // InternalFortXTrans.g:5527:2: ( rule__Or__RightAssignment_1_2 )
            // InternalFortXTrans.g:5527:3: rule__Or__RightAssignment_1_2
            {
            pushFollow(FOLLOW_2);
            rule__Or__RightAssignment_1_2();

            state._fsp--;


            }

             after(grammarAccess.getOrAccess().getRightAssignment_1_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Or__Group_1__2__Impl"


    // $ANTLR start "rule__And__Group__0"
    // InternalFortXTrans.g:5536:1: rule__And__Group__0 : rule__And__Group__0__Impl rule__And__Group__1 ;
    public final void rule__And__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5540:1: ( rule__And__Group__0__Impl rule__And__Group__1 )
            // InternalFortXTrans.g:5541:2: rule__And__Group__0__Impl rule__And__Group__1
            {
            pushFollow(FOLLOW_38);
            rule__And__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__And__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__And__Group__0"


    // $ANTLR start "rule__And__Group__0__Impl"
    // InternalFortXTrans.g:5548:1: rule__And__Group__0__Impl : ( ruleEquality ) ;
    public final void rule__And__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5552:1: ( ( ruleEquality ) )
            // InternalFortXTrans.g:5553:1: ( ruleEquality )
            {
            // InternalFortXTrans.g:5553:1: ( ruleEquality )
            // InternalFortXTrans.g:5554:2: ruleEquality
            {
             before(grammarAccess.getAndAccess().getEqualityParserRuleCall_0()); 
            pushFollow(FOLLOW_2);
            ruleEquality();

            state._fsp--;

             after(grammarAccess.getAndAccess().getEqualityParserRuleCall_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__And__Group__0__Impl"


    // $ANTLR start "rule__And__Group__1"
    // InternalFortXTrans.g:5563:1: rule__And__Group__1 : rule__And__Group__1__Impl ;
    public final void rule__And__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5567:1: ( rule__And__Group__1__Impl )
            // InternalFortXTrans.g:5568:2: rule__And__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__And__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__And__Group__1"


    // $ANTLR start "rule__And__Group__1__Impl"
    // InternalFortXTrans.g:5574:1: rule__And__Group__1__Impl : ( ( rule__And__Group_1__0 )* ) ;
    public final void rule__And__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5578:1: ( ( ( rule__And__Group_1__0 )* ) )
            // InternalFortXTrans.g:5579:1: ( ( rule__And__Group_1__0 )* )
            {
            // InternalFortXTrans.g:5579:1: ( ( rule__And__Group_1__0 )* )
            // InternalFortXTrans.g:5580:2: ( rule__And__Group_1__0 )*
            {
             before(grammarAccess.getAndAccess().getGroup_1()); 
            // InternalFortXTrans.g:5581:2: ( rule__And__Group_1__0 )*
            loop53:
            do {
                int alt53=2;
                int LA53_0 = input.LA(1);

                if ( (LA53_0==38) ) {
                    alt53=1;
                }


                switch (alt53) {
            	case 1 :
            	    // InternalFortXTrans.g:5581:3: rule__And__Group_1__0
            	    {
            	    pushFollow(FOLLOW_39);
            	    rule__And__Group_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop53;
                }
            } while (true);

             after(grammarAccess.getAndAccess().getGroup_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__And__Group__1__Impl"


    // $ANTLR start "rule__And__Group_1__0"
    // InternalFortXTrans.g:5590:1: rule__And__Group_1__0 : rule__And__Group_1__0__Impl rule__And__Group_1__1 ;
    public final void rule__And__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5594:1: ( rule__And__Group_1__0__Impl rule__And__Group_1__1 )
            // InternalFortXTrans.g:5595:2: rule__And__Group_1__0__Impl rule__And__Group_1__1
            {
            pushFollow(FOLLOW_38);
            rule__And__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__And__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__And__Group_1__0"


    // $ANTLR start "rule__And__Group_1__0__Impl"
    // InternalFortXTrans.g:5602:1: rule__And__Group_1__0__Impl : ( () ) ;
    public final void rule__And__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5606:1: ( ( () ) )
            // InternalFortXTrans.g:5607:1: ( () )
            {
            // InternalFortXTrans.g:5607:1: ( () )
            // InternalFortXTrans.g:5608:2: ()
            {
             before(grammarAccess.getAndAccess().getAndLeftAction_1_0()); 
            // InternalFortXTrans.g:5609:2: ()
            // InternalFortXTrans.g:5609:3: 
            {
            }

             after(grammarAccess.getAndAccess().getAndLeftAction_1_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__And__Group_1__0__Impl"


    // $ANTLR start "rule__And__Group_1__1"
    // InternalFortXTrans.g:5617:1: rule__And__Group_1__1 : rule__And__Group_1__1__Impl rule__And__Group_1__2 ;
    public final void rule__And__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5621:1: ( rule__And__Group_1__1__Impl rule__And__Group_1__2 )
            // InternalFortXTrans.g:5622:2: rule__And__Group_1__1__Impl rule__And__Group_1__2
            {
            pushFollow(FOLLOW_32);
            rule__And__Group_1__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__And__Group_1__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__And__Group_1__1"


    // $ANTLR start "rule__And__Group_1__1__Impl"
    // InternalFortXTrans.g:5629:1: rule__And__Group_1__1__Impl : ( 'AND' ) ;
    public final void rule__And__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5633:1: ( ( 'AND' ) )
            // InternalFortXTrans.g:5634:1: ( 'AND' )
            {
            // InternalFortXTrans.g:5634:1: ( 'AND' )
            // InternalFortXTrans.g:5635:2: 'AND'
            {
             before(grammarAccess.getAndAccess().getANDKeyword_1_1()); 
            match(input,38,FOLLOW_2); 
             after(grammarAccess.getAndAccess().getANDKeyword_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__And__Group_1__1__Impl"


    // $ANTLR start "rule__And__Group_1__2"
    // InternalFortXTrans.g:5644:1: rule__And__Group_1__2 : rule__And__Group_1__2__Impl ;
    public final void rule__And__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5648:1: ( rule__And__Group_1__2__Impl )
            // InternalFortXTrans.g:5649:2: rule__And__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__And__Group_1__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__And__Group_1__2"


    // $ANTLR start "rule__And__Group_1__2__Impl"
    // InternalFortXTrans.g:5655:1: rule__And__Group_1__2__Impl : ( ( rule__And__RightAssignment_1_2 ) ) ;
    public final void rule__And__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5659:1: ( ( ( rule__And__RightAssignment_1_2 ) ) )
            // InternalFortXTrans.g:5660:1: ( ( rule__And__RightAssignment_1_2 ) )
            {
            // InternalFortXTrans.g:5660:1: ( ( rule__And__RightAssignment_1_2 ) )
            // InternalFortXTrans.g:5661:2: ( rule__And__RightAssignment_1_2 )
            {
             before(grammarAccess.getAndAccess().getRightAssignment_1_2()); 
            // InternalFortXTrans.g:5662:2: ( rule__And__RightAssignment_1_2 )
            // InternalFortXTrans.g:5662:3: rule__And__RightAssignment_1_2
            {
            pushFollow(FOLLOW_2);
            rule__And__RightAssignment_1_2();

            state._fsp--;


            }

             after(grammarAccess.getAndAccess().getRightAssignment_1_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__And__Group_1__2__Impl"


    // $ANTLR start "rule__Equality__Group__0"
    // InternalFortXTrans.g:5671:1: rule__Equality__Group__0 : rule__Equality__Group__0__Impl rule__Equality__Group__1 ;
    public final void rule__Equality__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5675:1: ( rule__Equality__Group__0__Impl rule__Equality__Group__1 )
            // InternalFortXTrans.g:5676:2: rule__Equality__Group__0__Impl rule__Equality__Group__1
            {
            pushFollow(FOLLOW_40);
            rule__Equality__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Equality__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equality__Group__0"


    // $ANTLR start "rule__Equality__Group__0__Impl"
    // InternalFortXTrans.g:5683:1: rule__Equality__Group__0__Impl : ( ruleComparison ) ;
    public final void rule__Equality__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5687:1: ( ( ruleComparison ) )
            // InternalFortXTrans.g:5688:1: ( ruleComparison )
            {
            // InternalFortXTrans.g:5688:1: ( ruleComparison )
            // InternalFortXTrans.g:5689:2: ruleComparison
            {
             before(grammarAccess.getEqualityAccess().getComparisonParserRuleCall_0()); 
            pushFollow(FOLLOW_2);
            ruleComparison();

            state._fsp--;

             after(grammarAccess.getEqualityAccess().getComparisonParserRuleCall_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equality__Group__0__Impl"


    // $ANTLR start "rule__Equality__Group__1"
    // InternalFortXTrans.g:5698:1: rule__Equality__Group__1 : rule__Equality__Group__1__Impl ;
    public final void rule__Equality__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5702:1: ( rule__Equality__Group__1__Impl )
            // InternalFortXTrans.g:5703:2: rule__Equality__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Equality__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equality__Group__1"


    // $ANTLR start "rule__Equality__Group__1__Impl"
    // InternalFortXTrans.g:5709:1: rule__Equality__Group__1__Impl : ( ( rule__Equality__Group_1__0 )* ) ;
    public final void rule__Equality__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5713:1: ( ( ( rule__Equality__Group_1__0 )* ) )
            // InternalFortXTrans.g:5714:1: ( ( rule__Equality__Group_1__0 )* )
            {
            // InternalFortXTrans.g:5714:1: ( ( rule__Equality__Group_1__0 )* )
            // InternalFortXTrans.g:5715:2: ( rule__Equality__Group_1__0 )*
            {
             before(grammarAccess.getEqualityAccess().getGroup_1()); 
            // InternalFortXTrans.g:5716:2: ( rule__Equality__Group_1__0 )*
            loop54:
            do {
                int alt54=2;
                switch ( input.LA(1) ) {
                case 13:
                    {
                    alt54=1;
                    }
                    break;
                case 14:
                    {
                    alt54=1;
                    }
                    break;
                case 15:
                    {
                    alt54=1;
                    }
                    break;
                case 16:
                    {
                    alt54=1;
                    }
                    break;

                }

                switch (alt54) {
            	case 1 :
            	    // InternalFortXTrans.g:5716:3: rule__Equality__Group_1__0
            	    {
            	    pushFollow(FOLLOW_41);
            	    rule__Equality__Group_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop54;
                }
            } while (true);

             after(grammarAccess.getEqualityAccess().getGroup_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equality__Group__1__Impl"


    // $ANTLR start "rule__Equality__Group_1__0"
    // InternalFortXTrans.g:5725:1: rule__Equality__Group_1__0 : rule__Equality__Group_1__0__Impl rule__Equality__Group_1__1 ;
    public final void rule__Equality__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5729:1: ( rule__Equality__Group_1__0__Impl rule__Equality__Group_1__1 )
            // InternalFortXTrans.g:5730:2: rule__Equality__Group_1__0__Impl rule__Equality__Group_1__1
            {
            pushFollow(FOLLOW_40);
            rule__Equality__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Equality__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equality__Group_1__0"


    // $ANTLR start "rule__Equality__Group_1__0__Impl"
    // InternalFortXTrans.g:5737:1: rule__Equality__Group_1__0__Impl : ( () ) ;
    public final void rule__Equality__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5741:1: ( ( () ) )
            // InternalFortXTrans.g:5742:1: ( () )
            {
            // InternalFortXTrans.g:5742:1: ( () )
            // InternalFortXTrans.g:5743:2: ()
            {
             before(grammarAccess.getEqualityAccess().getEqualityLeftAction_1_0()); 
            // InternalFortXTrans.g:5744:2: ()
            // InternalFortXTrans.g:5744:3: 
            {
            }

             after(grammarAccess.getEqualityAccess().getEqualityLeftAction_1_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equality__Group_1__0__Impl"


    // $ANTLR start "rule__Equality__Group_1__1"
    // InternalFortXTrans.g:5752:1: rule__Equality__Group_1__1 : rule__Equality__Group_1__1__Impl rule__Equality__Group_1__2 ;
    public final void rule__Equality__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5756:1: ( rule__Equality__Group_1__1__Impl rule__Equality__Group_1__2 )
            // InternalFortXTrans.g:5757:2: rule__Equality__Group_1__1__Impl rule__Equality__Group_1__2
            {
            pushFollow(FOLLOW_32);
            rule__Equality__Group_1__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Equality__Group_1__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equality__Group_1__1"


    // $ANTLR start "rule__Equality__Group_1__1__Impl"
    // InternalFortXTrans.g:5764:1: rule__Equality__Group_1__1__Impl : ( ( rule__Equality__OpAssignment_1_1 ) ) ;
    public final void rule__Equality__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5768:1: ( ( ( rule__Equality__OpAssignment_1_1 ) ) )
            // InternalFortXTrans.g:5769:1: ( ( rule__Equality__OpAssignment_1_1 ) )
            {
            // InternalFortXTrans.g:5769:1: ( ( rule__Equality__OpAssignment_1_1 ) )
            // InternalFortXTrans.g:5770:2: ( rule__Equality__OpAssignment_1_1 )
            {
             before(grammarAccess.getEqualityAccess().getOpAssignment_1_1()); 
            // InternalFortXTrans.g:5771:2: ( rule__Equality__OpAssignment_1_1 )
            // InternalFortXTrans.g:5771:3: rule__Equality__OpAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Equality__OpAssignment_1_1();

            state._fsp--;


            }

             after(grammarAccess.getEqualityAccess().getOpAssignment_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equality__Group_1__1__Impl"


    // $ANTLR start "rule__Equality__Group_1__2"
    // InternalFortXTrans.g:5779:1: rule__Equality__Group_1__2 : rule__Equality__Group_1__2__Impl ;
    public final void rule__Equality__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5783:1: ( rule__Equality__Group_1__2__Impl )
            // InternalFortXTrans.g:5784:2: rule__Equality__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Equality__Group_1__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equality__Group_1__2"


    // $ANTLR start "rule__Equality__Group_1__2__Impl"
    // InternalFortXTrans.g:5790:1: rule__Equality__Group_1__2__Impl : ( ( rule__Equality__RightAssignment_1_2 ) ) ;
    public final void rule__Equality__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5794:1: ( ( ( rule__Equality__RightAssignment_1_2 ) ) )
            // InternalFortXTrans.g:5795:1: ( ( rule__Equality__RightAssignment_1_2 ) )
            {
            // InternalFortXTrans.g:5795:1: ( ( rule__Equality__RightAssignment_1_2 ) )
            // InternalFortXTrans.g:5796:2: ( rule__Equality__RightAssignment_1_2 )
            {
             before(grammarAccess.getEqualityAccess().getRightAssignment_1_2()); 
            // InternalFortXTrans.g:5797:2: ( rule__Equality__RightAssignment_1_2 )
            // InternalFortXTrans.g:5797:3: rule__Equality__RightAssignment_1_2
            {
            pushFollow(FOLLOW_2);
            rule__Equality__RightAssignment_1_2();

            state._fsp--;


            }

             after(grammarAccess.getEqualityAccess().getRightAssignment_1_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equality__Group_1__2__Impl"


    // $ANTLR start "rule__Comparison__Group__0"
    // InternalFortXTrans.g:5806:1: rule__Comparison__Group__0 : rule__Comparison__Group__0__Impl rule__Comparison__Group__1 ;
    public final void rule__Comparison__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5810:1: ( rule__Comparison__Group__0__Impl rule__Comparison__Group__1 )
            // InternalFortXTrans.g:5811:2: rule__Comparison__Group__0__Impl rule__Comparison__Group__1
            {
            pushFollow(FOLLOW_42);
            rule__Comparison__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Comparison__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Group__0"


    // $ANTLR start "rule__Comparison__Group__0__Impl"
    // InternalFortXTrans.g:5818:1: rule__Comparison__Group__0__Impl : ( ruleAddExpr ) ;
    public final void rule__Comparison__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5822:1: ( ( ruleAddExpr ) )
            // InternalFortXTrans.g:5823:1: ( ruleAddExpr )
            {
            // InternalFortXTrans.g:5823:1: ( ruleAddExpr )
            // InternalFortXTrans.g:5824:2: ruleAddExpr
            {
             before(grammarAccess.getComparisonAccess().getAddExprParserRuleCall_0()); 
            pushFollow(FOLLOW_2);
            ruleAddExpr();

            state._fsp--;

             after(grammarAccess.getComparisonAccess().getAddExprParserRuleCall_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Group__0__Impl"


    // $ANTLR start "rule__Comparison__Group__1"
    // InternalFortXTrans.g:5833:1: rule__Comparison__Group__1 : rule__Comparison__Group__1__Impl ;
    public final void rule__Comparison__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5837:1: ( rule__Comparison__Group__1__Impl )
            // InternalFortXTrans.g:5838:2: rule__Comparison__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Comparison__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Group__1"


    // $ANTLR start "rule__Comparison__Group__1__Impl"
    // InternalFortXTrans.g:5844:1: rule__Comparison__Group__1__Impl : ( ( rule__Comparison__Group_1__0 )* ) ;
    public final void rule__Comparison__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5848:1: ( ( ( rule__Comparison__Group_1__0 )* ) )
            // InternalFortXTrans.g:5849:1: ( ( rule__Comparison__Group_1__0 )* )
            {
            // InternalFortXTrans.g:5849:1: ( ( rule__Comparison__Group_1__0 )* )
            // InternalFortXTrans.g:5850:2: ( rule__Comparison__Group_1__0 )*
            {
             before(grammarAccess.getComparisonAccess().getGroup_1()); 
            // InternalFortXTrans.g:5851:2: ( rule__Comparison__Group_1__0 )*
            loop55:
            do {
                int alt55=2;
                alt55 = dfa55.predict(input);
                switch (alt55) {
            	case 1 :
            	    // InternalFortXTrans.g:5851:3: rule__Comparison__Group_1__0
            	    {
            	    pushFollow(FOLLOW_43);
            	    rule__Comparison__Group_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop55;
                }
            } while (true);

             after(grammarAccess.getComparisonAccess().getGroup_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Group__1__Impl"


    // $ANTLR start "rule__Comparison__Group_1__0"
    // InternalFortXTrans.g:5860:1: rule__Comparison__Group_1__0 : rule__Comparison__Group_1__0__Impl rule__Comparison__Group_1__1 ;
    public final void rule__Comparison__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5864:1: ( rule__Comparison__Group_1__0__Impl rule__Comparison__Group_1__1 )
            // InternalFortXTrans.g:5865:2: rule__Comparison__Group_1__0__Impl rule__Comparison__Group_1__1
            {
            pushFollow(FOLLOW_42);
            rule__Comparison__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Comparison__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Group_1__0"


    // $ANTLR start "rule__Comparison__Group_1__0__Impl"
    // InternalFortXTrans.g:5872:1: rule__Comparison__Group_1__0__Impl : ( () ) ;
    public final void rule__Comparison__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5876:1: ( ( () ) )
            // InternalFortXTrans.g:5877:1: ( () )
            {
            // InternalFortXTrans.g:5877:1: ( () )
            // InternalFortXTrans.g:5878:2: ()
            {
             before(grammarAccess.getComparisonAccess().getComparisonLeftAction_1_0()); 
            // InternalFortXTrans.g:5879:2: ()
            // InternalFortXTrans.g:5879:3: 
            {
            }

             after(grammarAccess.getComparisonAccess().getComparisonLeftAction_1_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Group_1__0__Impl"


    // $ANTLR start "rule__Comparison__Group_1__1"
    // InternalFortXTrans.g:5887:1: rule__Comparison__Group_1__1 : rule__Comparison__Group_1__1__Impl rule__Comparison__Group_1__2 ;
    public final void rule__Comparison__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5891:1: ( rule__Comparison__Group_1__1__Impl rule__Comparison__Group_1__2 )
            // InternalFortXTrans.g:5892:2: rule__Comparison__Group_1__1__Impl rule__Comparison__Group_1__2
            {
            pushFollow(FOLLOW_32);
            rule__Comparison__Group_1__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Comparison__Group_1__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Group_1__1"


    // $ANTLR start "rule__Comparison__Group_1__1__Impl"
    // InternalFortXTrans.g:5899:1: rule__Comparison__Group_1__1__Impl : ( ( rule__Comparison__OpAssignment_1_1 ) ) ;
    public final void rule__Comparison__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5903:1: ( ( ( rule__Comparison__OpAssignment_1_1 ) ) )
            // InternalFortXTrans.g:5904:1: ( ( rule__Comparison__OpAssignment_1_1 ) )
            {
            // InternalFortXTrans.g:5904:1: ( ( rule__Comparison__OpAssignment_1_1 ) )
            // InternalFortXTrans.g:5905:2: ( rule__Comparison__OpAssignment_1_1 )
            {
             before(grammarAccess.getComparisonAccess().getOpAssignment_1_1()); 
            // InternalFortXTrans.g:5906:2: ( rule__Comparison__OpAssignment_1_1 )
            // InternalFortXTrans.g:5906:3: rule__Comparison__OpAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Comparison__OpAssignment_1_1();

            state._fsp--;


            }

             after(grammarAccess.getComparisonAccess().getOpAssignment_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Group_1__1__Impl"


    // $ANTLR start "rule__Comparison__Group_1__2"
    // InternalFortXTrans.g:5914:1: rule__Comparison__Group_1__2 : rule__Comparison__Group_1__2__Impl ;
    public final void rule__Comparison__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5918:1: ( rule__Comparison__Group_1__2__Impl )
            // InternalFortXTrans.g:5919:2: rule__Comparison__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Comparison__Group_1__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Group_1__2"


    // $ANTLR start "rule__Comparison__Group_1__2__Impl"
    // InternalFortXTrans.g:5925:1: rule__Comparison__Group_1__2__Impl : ( ( rule__Comparison__RightAssignment_1_2 ) ) ;
    public final void rule__Comparison__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5929:1: ( ( ( rule__Comparison__RightAssignment_1_2 ) ) )
            // InternalFortXTrans.g:5930:1: ( ( rule__Comparison__RightAssignment_1_2 ) )
            {
            // InternalFortXTrans.g:5930:1: ( ( rule__Comparison__RightAssignment_1_2 ) )
            // InternalFortXTrans.g:5931:2: ( rule__Comparison__RightAssignment_1_2 )
            {
             before(grammarAccess.getComparisonAccess().getRightAssignment_1_2()); 
            // InternalFortXTrans.g:5932:2: ( rule__Comparison__RightAssignment_1_2 )
            // InternalFortXTrans.g:5932:3: rule__Comparison__RightAssignment_1_2
            {
            pushFollow(FOLLOW_2);
            rule__Comparison__RightAssignment_1_2();

            state._fsp--;


            }

             after(grammarAccess.getComparisonAccess().getRightAssignment_1_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Group_1__2__Impl"


    // $ANTLR start "rule__AddExpr__Group__0"
    // InternalFortXTrans.g:5941:1: rule__AddExpr__Group__0 : rule__AddExpr__Group__0__Impl rule__AddExpr__Group__1 ;
    public final void rule__AddExpr__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5945:1: ( rule__AddExpr__Group__0__Impl rule__AddExpr__Group__1 )
            // InternalFortXTrans.g:5946:2: rule__AddExpr__Group__0__Impl rule__AddExpr__Group__1
            {
            pushFollow(FOLLOW_44);
            rule__AddExpr__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__AddExpr__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AddExpr__Group__0"


    // $ANTLR start "rule__AddExpr__Group__0__Impl"
    // InternalFortXTrans.g:5953:1: rule__AddExpr__Group__0__Impl : ( ruleSubExpr ) ;
    public final void rule__AddExpr__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5957:1: ( ( ruleSubExpr ) )
            // InternalFortXTrans.g:5958:1: ( ruleSubExpr )
            {
            // InternalFortXTrans.g:5958:1: ( ruleSubExpr )
            // InternalFortXTrans.g:5959:2: ruleSubExpr
            {
             before(grammarAccess.getAddExprAccess().getSubExprParserRuleCall_0()); 
            pushFollow(FOLLOW_2);
            ruleSubExpr();

            state._fsp--;

             after(grammarAccess.getAddExprAccess().getSubExprParserRuleCall_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AddExpr__Group__0__Impl"


    // $ANTLR start "rule__AddExpr__Group__1"
    // InternalFortXTrans.g:5968:1: rule__AddExpr__Group__1 : rule__AddExpr__Group__1__Impl ;
    public final void rule__AddExpr__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5972:1: ( rule__AddExpr__Group__1__Impl )
            // InternalFortXTrans.g:5973:2: rule__AddExpr__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AddExpr__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AddExpr__Group__1"


    // $ANTLR start "rule__AddExpr__Group__1__Impl"
    // InternalFortXTrans.g:5979:1: rule__AddExpr__Group__1__Impl : ( ( rule__AddExpr__Group_1__0 )* ) ;
    public final void rule__AddExpr__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5983:1: ( ( ( rule__AddExpr__Group_1__0 )* ) )
            // InternalFortXTrans.g:5984:1: ( ( rule__AddExpr__Group_1__0 )* )
            {
            // InternalFortXTrans.g:5984:1: ( ( rule__AddExpr__Group_1__0 )* )
            // InternalFortXTrans.g:5985:2: ( rule__AddExpr__Group_1__0 )*
            {
             before(grammarAccess.getAddExprAccess().getGroup_1()); 
            // InternalFortXTrans.g:5986:2: ( rule__AddExpr__Group_1__0 )*
            loop56:
            do {
                int alt56=2;
                int LA56_0 = input.LA(1);

                if ( (LA56_0==39) ) {
                    alt56=1;
                }


                switch (alt56) {
            	case 1 :
            	    // InternalFortXTrans.g:5986:3: rule__AddExpr__Group_1__0
            	    {
            	    pushFollow(FOLLOW_45);
            	    rule__AddExpr__Group_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop56;
                }
            } while (true);

             after(grammarAccess.getAddExprAccess().getGroup_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AddExpr__Group__1__Impl"


    // $ANTLR start "rule__AddExpr__Group_1__0"
    // InternalFortXTrans.g:5995:1: rule__AddExpr__Group_1__0 : rule__AddExpr__Group_1__0__Impl rule__AddExpr__Group_1__1 ;
    public final void rule__AddExpr__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:5999:1: ( rule__AddExpr__Group_1__0__Impl rule__AddExpr__Group_1__1 )
            // InternalFortXTrans.g:6000:2: rule__AddExpr__Group_1__0__Impl rule__AddExpr__Group_1__1
            {
            pushFollow(FOLLOW_44);
            rule__AddExpr__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__AddExpr__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AddExpr__Group_1__0"


    // $ANTLR start "rule__AddExpr__Group_1__0__Impl"
    // InternalFortXTrans.g:6007:1: rule__AddExpr__Group_1__0__Impl : ( () ) ;
    public final void rule__AddExpr__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6011:1: ( ( () ) )
            // InternalFortXTrans.g:6012:1: ( () )
            {
            // InternalFortXTrans.g:6012:1: ( () )
            // InternalFortXTrans.g:6013:2: ()
            {
             before(grammarAccess.getAddExprAccess().getAddExprLeftAction_1_0()); 
            // InternalFortXTrans.g:6014:2: ()
            // InternalFortXTrans.g:6014:3: 
            {
            }

             after(grammarAccess.getAddExprAccess().getAddExprLeftAction_1_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AddExpr__Group_1__0__Impl"


    // $ANTLR start "rule__AddExpr__Group_1__1"
    // InternalFortXTrans.g:6022:1: rule__AddExpr__Group_1__1 : rule__AddExpr__Group_1__1__Impl rule__AddExpr__Group_1__2 ;
    public final void rule__AddExpr__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6026:1: ( rule__AddExpr__Group_1__1__Impl rule__AddExpr__Group_1__2 )
            // InternalFortXTrans.g:6027:2: rule__AddExpr__Group_1__1__Impl rule__AddExpr__Group_1__2
            {
            pushFollow(FOLLOW_32);
            rule__AddExpr__Group_1__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__AddExpr__Group_1__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AddExpr__Group_1__1"


    // $ANTLR start "rule__AddExpr__Group_1__1__Impl"
    // InternalFortXTrans.g:6034:1: rule__AddExpr__Group_1__1__Impl : ( '+' ) ;
    public final void rule__AddExpr__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6038:1: ( ( '+' ) )
            // InternalFortXTrans.g:6039:1: ( '+' )
            {
            // InternalFortXTrans.g:6039:1: ( '+' )
            // InternalFortXTrans.g:6040:2: '+'
            {
             before(grammarAccess.getAddExprAccess().getPlusSignKeyword_1_1()); 
            match(input,39,FOLLOW_2); 
             after(grammarAccess.getAddExprAccess().getPlusSignKeyword_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AddExpr__Group_1__1__Impl"


    // $ANTLR start "rule__AddExpr__Group_1__2"
    // InternalFortXTrans.g:6049:1: rule__AddExpr__Group_1__2 : rule__AddExpr__Group_1__2__Impl ;
    public final void rule__AddExpr__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6053:1: ( rule__AddExpr__Group_1__2__Impl )
            // InternalFortXTrans.g:6054:2: rule__AddExpr__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AddExpr__Group_1__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AddExpr__Group_1__2"


    // $ANTLR start "rule__AddExpr__Group_1__2__Impl"
    // InternalFortXTrans.g:6060:1: rule__AddExpr__Group_1__2__Impl : ( ( rule__AddExpr__RightAssignment_1_2 ) ) ;
    public final void rule__AddExpr__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6064:1: ( ( ( rule__AddExpr__RightAssignment_1_2 ) ) )
            // InternalFortXTrans.g:6065:1: ( ( rule__AddExpr__RightAssignment_1_2 ) )
            {
            // InternalFortXTrans.g:6065:1: ( ( rule__AddExpr__RightAssignment_1_2 ) )
            // InternalFortXTrans.g:6066:2: ( rule__AddExpr__RightAssignment_1_2 )
            {
             before(grammarAccess.getAddExprAccess().getRightAssignment_1_2()); 
            // InternalFortXTrans.g:6067:2: ( rule__AddExpr__RightAssignment_1_2 )
            // InternalFortXTrans.g:6067:3: rule__AddExpr__RightAssignment_1_2
            {
            pushFollow(FOLLOW_2);
            rule__AddExpr__RightAssignment_1_2();

            state._fsp--;


            }

             after(grammarAccess.getAddExprAccess().getRightAssignment_1_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AddExpr__Group_1__2__Impl"


    // $ANTLR start "rule__SubExpr__Group__0"
    // InternalFortXTrans.g:6076:1: rule__SubExpr__Group__0 : rule__SubExpr__Group__0__Impl rule__SubExpr__Group__1 ;
    public final void rule__SubExpr__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6080:1: ( rule__SubExpr__Group__0__Impl rule__SubExpr__Group__1 )
            // InternalFortXTrans.g:6081:2: rule__SubExpr__Group__0__Impl rule__SubExpr__Group__1
            {
            pushFollow(FOLLOW_46);
            rule__SubExpr__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__SubExpr__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubExpr__Group__0"


    // $ANTLR start "rule__SubExpr__Group__0__Impl"
    // InternalFortXTrans.g:6088:1: rule__SubExpr__Group__0__Impl : ( ruleDivExpr ) ;
    public final void rule__SubExpr__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6092:1: ( ( ruleDivExpr ) )
            // InternalFortXTrans.g:6093:1: ( ruleDivExpr )
            {
            // InternalFortXTrans.g:6093:1: ( ruleDivExpr )
            // InternalFortXTrans.g:6094:2: ruleDivExpr
            {
             before(grammarAccess.getSubExprAccess().getDivExprParserRuleCall_0()); 
            pushFollow(FOLLOW_2);
            ruleDivExpr();

            state._fsp--;

             after(grammarAccess.getSubExprAccess().getDivExprParserRuleCall_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubExpr__Group__0__Impl"


    // $ANTLR start "rule__SubExpr__Group__1"
    // InternalFortXTrans.g:6103:1: rule__SubExpr__Group__1 : rule__SubExpr__Group__1__Impl ;
    public final void rule__SubExpr__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6107:1: ( rule__SubExpr__Group__1__Impl )
            // InternalFortXTrans.g:6108:2: rule__SubExpr__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__SubExpr__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubExpr__Group__1"


    // $ANTLR start "rule__SubExpr__Group__1__Impl"
    // InternalFortXTrans.g:6114:1: rule__SubExpr__Group__1__Impl : ( ( rule__SubExpr__Group_1__0 )* ) ;
    public final void rule__SubExpr__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6118:1: ( ( ( rule__SubExpr__Group_1__0 )* ) )
            // InternalFortXTrans.g:6119:1: ( ( rule__SubExpr__Group_1__0 )* )
            {
            // InternalFortXTrans.g:6119:1: ( ( rule__SubExpr__Group_1__0 )* )
            // InternalFortXTrans.g:6120:2: ( rule__SubExpr__Group_1__0 )*
            {
             before(grammarAccess.getSubExprAccess().getGroup_1()); 
            // InternalFortXTrans.g:6121:2: ( rule__SubExpr__Group_1__0 )*
            loop57:
            do {
                int alt57=2;
                int LA57_0 = input.LA(1);

                if ( (LA57_0==40) ) {
                    alt57=1;
                }


                switch (alt57) {
            	case 1 :
            	    // InternalFortXTrans.g:6121:3: rule__SubExpr__Group_1__0
            	    {
            	    pushFollow(FOLLOW_47);
            	    rule__SubExpr__Group_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop57;
                }
            } while (true);

             after(grammarAccess.getSubExprAccess().getGroup_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubExpr__Group__1__Impl"


    // $ANTLR start "rule__SubExpr__Group_1__0"
    // InternalFortXTrans.g:6130:1: rule__SubExpr__Group_1__0 : rule__SubExpr__Group_1__0__Impl rule__SubExpr__Group_1__1 ;
    public final void rule__SubExpr__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6134:1: ( rule__SubExpr__Group_1__0__Impl rule__SubExpr__Group_1__1 )
            // InternalFortXTrans.g:6135:2: rule__SubExpr__Group_1__0__Impl rule__SubExpr__Group_1__1
            {
            pushFollow(FOLLOW_46);
            rule__SubExpr__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__SubExpr__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubExpr__Group_1__0"


    // $ANTLR start "rule__SubExpr__Group_1__0__Impl"
    // InternalFortXTrans.g:6142:1: rule__SubExpr__Group_1__0__Impl : ( () ) ;
    public final void rule__SubExpr__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6146:1: ( ( () ) )
            // InternalFortXTrans.g:6147:1: ( () )
            {
            // InternalFortXTrans.g:6147:1: ( () )
            // InternalFortXTrans.g:6148:2: ()
            {
             before(grammarAccess.getSubExprAccess().getSubExprLeftAction_1_0()); 
            // InternalFortXTrans.g:6149:2: ()
            // InternalFortXTrans.g:6149:3: 
            {
            }

             after(grammarAccess.getSubExprAccess().getSubExprLeftAction_1_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubExpr__Group_1__0__Impl"


    // $ANTLR start "rule__SubExpr__Group_1__1"
    // InternalFortXTrans.g:6157:1: rule__SubExpr__Group_1__1 : rule__SubExpr__Group_1__1__Impl rule__SubExpr__Group_1__2 ;
    public final void rule__SubExpr__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6161:1: ( rule__SubExpr__Group_1__1__Impl rule__SubExpr__Group_1__2 )
            // InternalFortXTrans.g:6162:2: rule__SubExpr__Group_1__1__Impl rule__SubExpr__Group_1__2
            {
            pushFollow(FOLLOW_32);
            rule__SubExpr__Group_1__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__SubExpr__Group_1__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubExpr__Group_1__1"


    // $ANTLR start "rule__SubExpr__Group_1__1__Impl"
    // InternalFortXTrans.g:6169:1: rule__SubExpr__Group_1__1__Impl : ( '-' ) ;
    public final void rule__SubExpr__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6173:1: ( ( '-' ) )
            // InternalFortXTrans.g:6174:1: ( '-' )
            {
            // InternalFortXTrans.g:6174:1: ( '-' )
            // InternalFortXTrans.g:6175:2: '-'
            {
             before(grammarAccess.getSubExprAccess().getHyphenMinusKeyword_1_1()); 
            match(input,40,FOLLOW_2); 
             after(grammarAccess.getSubExprAccess().getHyphenMinusKeyword_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubExpr__Group_1__1__Impl"


    // $ANTLR start "rule__SubExpr__Group_1__2"
    // InternalFortXTrans.g:6184:1: rule__SubExpr__Group_1__2 : rule__SubExpr__Group_1__2__Impl ;
    public final void rule__SubExpr__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6188:1: ( rule__SubExpr__Group_1__2__Impl )
            // InternalFortXTrans.g:6189:2: rule__SubExpr__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__SubExpr__Group_1__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubExpr__Group_1__2"


    // $ANTLR start "rule__SubExpr__Group_1__2__Impl"
    // InternalFortXTrans.g:6195:1: rule__SubExpr__Group_1__2__Impl : ( ( rule__SubExpr__RightAssignment_1_2 ) ) ;
    public final void rule__SubExpr__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6199:1: ( ( ( rule__SubExpr__RightAssignment_1_2 ) ) )
            // InternalFortXTrans.g:6200:1: ( ( rule__SubExpr__RightAssignment_1_2 ) )
            {
            // InternalFortXTrans.g:6200:1: ( ( rule__SubExpr__RightAssignment_1_2 ) )
            // InternalFortXTrans.g:6201:2: ( rule__SubExpr__RightAssignment_1_2 )
            {
             before(grammarAccess.getSubExprAccess().getRightAssignment_1_2()); 
            // InternalFortXTrans.g:6202:2: ( rule__SubExpr__RightAssignment_1_2 )
            // InternalFortXTrans.g:6202:3: rule__SubExpr__RightAssignment_1_2
            {
            pushFollow(FOLLOW_2);
            rule__SubExpr__RightAssignment_1_2();

            state._fsp--;


            }

             after(grammarAccess.getSubExprAccess().getRightAssignment_1_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubExpr__Group_1__2__Impl"


    // $ANTLR start "rule__DivExpr__Group__0"
    // InternalFortXTrans.g:6211:1: rule__DivExpr__Group__0 : rule__DivExpr__Group__0__Impl rule__DivExpr__Group__1 ;
    public final void rule__DivExpr__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6215:1: ( rule__DivExpr__Group__0__Impl rule__DivExpr__Group__1 )
            // InternalFortXTrans.g:6216:2: rule__DivExpr__Group__0__Impl rule__DivExpr__Group__1
            {
            pushFollow(FOLLOW_48);
            rule__DivExpr__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DivExpr__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DivExpr__Group__0"


    // $ANTLR start "rule__DivExpr__Group__0__Impl"
    // InternalFortXTrans.g:6223:1: rule__DivExpr__Group__0__Impl : ( ruleMultExpr ) ;
    public final void rule__DivExpr__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6227:1: ( ( ruleMultExpr ) )
            // InternalFortXTrans.g:6228:1: ( ruleMultExpr )
            {
            // InternalFortXTrans.g:6228:1: ( ruleMultExpr )
            // InternalFortXTrans.g:6229:2: ruleMultExpr
            {
             before(grammarAccess.getDivExprAccess().getMultExprParserRuleCall_0()); 
            pushFollow(FOLLOW_2);
            ruleMultExpr();

            state._fsp--;

             after(grammarAccess.getDivExprAccess().getMultExprParserRuleCall_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DivExpr__Group__0__Impl"


    // $ANTLR start "rule__DivExpr__Group__1"
    // InternalFortXTrans.g:6238:1: rule__DivExpr__Group__1 : rule__DivExpr__Group__1__Impl ;
    public final void rule__DivExpr__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6242:1: ( rule__DivExpr__Group__1__Impl )
            // InternalFortXTrans.g:6243:2: rule__DivExpr__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__DivExpr__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DivExpr__Group__1"


    // $ANTLR start "rule__DivExpr__Group__1__Impl"
    // InternalFortXTrans.g:6249:1: rule__DivExpr__Group__1__Impl : ( ( rule__DivExpr__Group_1__0 )* ) ;
    public final void rule__DivExpr__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6253:1: ( ( ( rule__DivExpr__Group_1__0 )* ) )
            // InternalFortXTrans.g:6254:1: ( ( rule__DivExpr__Group_1__0 )* )
            {
            // InternalFortXTrans.g:6254:1: ( ( rule__DivExpr__Group_1__0 )* )
            // InternalFortXTrans.g:6255:2: ( rule__DivExpr__Group_1__0 )*
            {
             before(grammarAccess.getDivExprAccess().getGroup_1()); 
            // InternalFortXTrans.g:6256:2: ( rule__DivExpr__Group_1__0 )*
            loop58:
            do {
                int alt58=2;
                int LA58_0 = input.LA(1);

                if ( (LA58_0==41) ) {
                    alt58=1;
                }


                switch (alt58) {
            	case 1 :
            	    // InternalFortXTrans.g:6256:3: rule__DivExpr__Group_1__0
            	    {
            	    pushFollow(FOLLOW_49);
            	    rule__DivExpr__Group_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop58;
                }
            } while (true);

             after(grammarAccess.getDivExprAccess().getGroup_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DivExpr__Group__1__Impl"


    // $ANTLR start "rule__DivExpr__Group_1__0"
    // InternalFortXTrans.g:6265:1: rule__DivExpr__Group_1__0 : rule__DivExpr__Group_1__0__Impl rule__DivExpr__Group_1__1 ;
    public final void rule__DivExpr__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6269:1: ( rule__DivExpr__Group_1__0__Impl rule__DivExpr__Group_1__1 )
            // InternalFortXTrans.g:6270:2: rule__DivExpr__Group_1__0__Impl rule__DivExpr__Group_1__1
            {
            pushFollow(FOLLOW_48);
            rule__DivExpr__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DivExpr__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DivExpr__Group_1__0"


    // $ANTLR start "rule__DivExpr__Group_1__0__Impl"
    // InternalFortXTrans.g:6277:1: rule__DivExpr__Group_1__0__Impl : ( () ) ;
    public final void rule__DivExpr__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6281:1: ( ( () ) )
            // InternalFortXTrans.g:6282:1: ( () )
            {
            // InternalFortXTrans.g:6282:1: ( () )
            // InternalFortXTrans.g:6283:2: ()
            {
             before(grammarAccess.getDivExprAccess().getDivExprLeftAction_1_0()); 
            // InternalFortXTrans.g:6284:2: ()
            // InternalFortXTrans.g:6284:3: 
            {
            }

             after(grammarAccess.getDivExprAccess().getDivExprLeftAction_1_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DivExpr__Group_1__0__Impl"


    // $ANTLR start "rule__DivExpr__Group_1__1"
    // InternalFortXTrans.g:6292:1: rule__DivExpr__Group_1__1 : rule__DivExpr__Group_1__1__Impl rule__DivExpr__Group_1__2 ;
    public final void rule__DivExpr__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6296:1: ( rule__DivExpr__Group_1__1__Impl rule__DivExpr__Group_1__2 )
            // InternalFortXTrans.g:6297:2: rule__DivExpr__Group_1__1__Impl rule__DivExpr__Group_1__2
            {
            pushFollow(FOLLOW_32);
            rule__DivExpr__Group_1__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DivExpr__Group_1__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DivExpr__Group_1__1"


    // $ANTLR start "rule__DivExpr__Group_1__1__Impl"
    // InternalFortXTrans.g:6304:1: rule__DivExpr__Group_1__1__Impl : ( '/' ) ;
    public final void rule__DivExpr__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6308:1: ( ( '/' ) )
            // InternalFortXTrans.g:6309:1: ( '/' )
            {
            // InternalFortXTrans.g:6309:1: ( '/' )
            // InternalFortXTrans.g:6310:2: '/'
            {
             before(grammarAccess.getDivExprAccess().getSolidusKeyword_1_1()); 
            match(input,41,FOLLOW_2); 
             after(grammarAccess.getDivExprAccess().getSolidusKeyword_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DivExpr__Group_1__1__Impl"


    // $ANTLR start "rule__DivExpr__Group_1__2"
    // InternalFortXTrans.g:6319:1: rule__DivExpr__Group_1__2 : rule__DivExpr__Group_1__2__Impl ;
    public final void rule__DivExpr__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6323:1: ( rule__DivExpr__Group_1__2__Impl )
            // InternalFortXTrans.g:6324:2: rule__DivExpr__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__DivExpr__Group_1__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DivExpr__Group_1__2"


    // $ANTLR start "rule__DivExpr__Group_1__2__Impl"
    // InternalFortXTrans.g:6330:1: rule__DivExpr__Group_1__2__Impl : ( ( rule__DivExpr__RightAssignment_1_2 ) ) ;
    public final void rule__DivExpr__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6334:1: ( ( ( rule__DivExpr__RightAssignment_1_2 ) ) )
            // InternalFortXTrans.g:6335:1: ( ( rule__DivExpr__RightAssignment_1_2 ) )
            {
            // InternalFortXTrans.g:6335:1: ( ( rule__DivExpr__RightAssignment_1_2 ) )
            // InternalFortXTrans.g:6336:2: ( rule__DivExpr__RightAssignment_1_2 )
            {
             before(grammarAccess.getDivExprAccess().getRightAssignment_1_2()); 
            // InternalFortXTrans.g:6337:2: ( rule__DivExpr__RightAssignment_1_2 )
            // InternalFortXTrans.g:6337:3: rule__DivExpr__RightAssignment_1_2
            {
            pushFollow(FOLLOW_2);
            rule__DivExpr__RightAssignment_1_2();

            state._fsp--;


            }

             after(grammarAccess.getDivExprAccess().getRightAssignment_1_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DivExpr__Group_1__2__Impl"


    // $ANTLR start "rule__MultExpr__Group__0"
    // InternalFortXTrans.g:6346:1: rule__MultExpr__Group__0 : rule__MultExpr__Group__0__Impl rule__MultExpr__Group__1 ;
    public final void rule__MultExpr__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6350:1: ( rule__MultExpr__Group__0__Impl rule__MultExpr__Group__1 )
            // InternalFortXTrans.g:6351:2: rule__MultExpr__Group__0__Impl rule__MultExpr__Group__1
            {
            pushFollow(FOLLOW_50);
            rule__MultExpr__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__MultExpr__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultExpr__Group__0"


    // $ANTLR start "rule__MultExpr__Group__0__Impl"
    // InternalFortXTrans.g:6358:1: rule__MultExpr__Group__0__Impl : ( ruleExponentExpr ) ;
    public final void rule__MultExpr__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6362:1: ( ( ruleExponentExpr ) )
            // InternalFortXTrans.g:6363:1: ( ruleExponentExpr )
            {
            // InternalFortXTrans.g:6363:1: ( ruleExponentExpr )
            // InternalFortXTrans.g:6364:2: ruleExponentExpr
            {
             before(grammarAccess.getMultExprAccess().getExponentExprParserRuleCall_0()); 
            pushFollow(FOLLOW_2);
            ruleExponentExpr();

            state._fsp--;

             after(grammarAccess.getMultExprAccess().getExponentExprParserRuleCall_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultExpr__Group__0__Impl"


    // $ANTLR start "rule__MultExpr__Group__1"
    // InternalFortXTrans.g:6373:1: rule__MultExpr__Group__1 : rule__MultExpr__Group__1__Impl ;
    public final void rule__MultExpr__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6377:1: ( rule__MultExpr__Group__1__Impl )
            // InternalFortXTrans.g:6378:2: rule__MultExpr__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__MultExpr__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultExpr__Group__1"


    // $ANTLR start "rule__MultExpr__Group__1__Impl"
    // InternalFortXTrans.g:6384:1: rule__MultExpr__Group__1__Impl : ( ( rule__MultExpr__Group_1__0 )* ) ;
    public final void rule__MultExpr__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6388:1: ( ( ( rule__MultExpr__Group_1__0 )* ) )
            // InternalFortXTrans.g:6389:1: ( ( rule__MultExpr__Group_1__0 )* )
            {
            // InternalFortXTrans.g:6389:1: ( ( rule__MultExpr__Group_1__0 )* )
            // InternalFortXTrans.g:6390:2: ( rule__MultExpr__Group_1__0 )*
            {
             before(grammarAccess.getMultExprAccess().getGroup_1()); 
            // InternalFortXTrans.g:6391:2: ( rule__MultExpr__Group_1__0 )*
            loop59:
            do {
                int alt59=2;
                int LA59_0 = input.LA(1);

                if ( (LA59_0==42) ) {
                    alt59=1;
                }


                switch (alt59) {
            	case 1 :
            	    // InternalFortXTrans.g:6391:3: rule__MultExpr__Group_1__0
            	    {
            	    pushFollow(FOLLOW_51);
            	    rule__MultExpr__Group_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop59;
                }
            } while (true);

             after(grammarAccess.getMultExprAccess().getGroup_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultExpr__Group__1__Impl"


    // $ANTLR start "rule__MultExpr__Group_1__0"
    // InternalFortXTrans.g:6400:1: rule__MultExpr__Group_1__0 : rule__MultExpr__Group_1__0__Impl rule__MultExpr__Group_1__1 ;
    public final void rule__MultExpr__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6404:1: ( rule__MultExpr__Group_1__0__Impl rule__MultExpr__Group_1__1 )
            // InternalFortXTrans.g:6405:2: rule__MultExpr__Group_1__0__Impl rule__MultExpr__Group_1__1
            {
            pushFollow(FOLLOW_50);
            rule__MultExpr__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__MultExpr__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultExpr__Group_1__0"


    // $ANTLR start "rule__MultExpr__Group_1__0__Impl"
    // InternalFortXTrans.g:6412:1: rule__MultExpr__Group_1__0__Impl : ( () ) ;
    public final void rule__MultExpr__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6416:1: ( ( () ) )
            // InternalFortXTrans.g:6417:1: ( () )
            {
            // InternalFortXTrans.g:6417:1: ( () )
            // InternalFortXTrans.g:6418:2: ()
            {
             before(grammarAccess.getMultExprAccess().getMultExprLeftAction_1_0()); 
            // InternalFortXTrans.g:6419:2: ()
            // InternalFortXTrans.g:6419:3: 
            {
            }

             after(grammarAccess.getMultExprAccess().getMultExprLeftAction_1_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultExpr__Group_1__0__Impl"


    // $ANTLR start "rule__MultExpr__Group_1__1"
    // InternalFortXTrans.g:6427:1: rule__MultExpr__Group_1__1 : rule__MultExpr__Group_1__1__Impl rule__MultExpr__Group_1__2 ;
    public final void rule__MultExpr__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6431:1: ( rule__MultExpr__Group_1__1__Impl rule__MultExpr__Group_1__2 )
            // InternalFortXTrans.g:6432:2: rule__MultExpr__Group_1__1__Impl rule__MultExpr__Group_1__2
            {
            pushFollow(FOLLOW_32);
            rule__MultExpr__Group_1__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__MultExpr__Group_1__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultExpr__Group_1__1"


    // $ANTLR start "rule__MultExpr__Group_1__1__Impl"
    // InternalFortXTrans.g:6439:1: rule__MultExpr__Group_1__1__Impl : ( '*' ) ;
    public final void rule__MultExpr__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6443:1: ( ( '*' ) )
            // InternalFortXTrans.g:6444:1: ( '*' )
            {
            // InternalFortXTrans.g:6444:1: ( '*' )
            // InternalFortXTrans.g:6445:2: '*'
            {
             before(grammarAccess.getMultExprAccess().getAsteriskKeyword_1_1()); 
            match(input,42,FOLLOW_2); 
             after(grammarAccess.getMultExprAccess().getAsteriskKeyword_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultExpr__Group_1__1__Impl"


    // $ANTLR start "rule__MultExpr__Group_1__2"
    // InternalFortXTrans.g:6454:1: rule__MultExpr__Group_1__2 : rule__MultExpr__Group_1__2__Impl ;
    public final void rule__MultExpr__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6458:1: ( rule__MultExpr__Group_1__2__Impl )
            // InternalFortXTrans.g:6459:2: rule__MultExpr__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__MultExpr__Group_1__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultExpr__Group_1__2"


    // $ANTLR start "rule__MultExpr__Group_1__2__Impl"
    // InternalFortXTrans.g:6465:1: rule__MultExpr__Group_1__2__Impl : ( ( rule__MultExpr__RightAssignment_1_2 ) ) ;
    public final void rule__MultExpr__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6469:1: ( ( ( rule__MultExpr__RightAssignment_1_2 ) ) )
            // InternalFortXTrans.g:6470:1: ( ( rule__MultExpr__RightAssignment_1_2 ) )
            {
            // InternalFortXTrans.g:6470:1: ( ( rule__MultExpr__RightAssignment_1_2 ) )
            // InternalFortXTrans.g:6471:2: ( rule__MultExpr__RightAssignment_1_2 )
            {
             before(grammarAccess.getMultExprAccess().getRightAssignment_1_2()); 
            // InternalFortXTrans.g:6472:2: ( rule__MultExpr__RightAssignment_1_2 )
            // InternalFortXTrans.g:6472:3: rule__MultExpr__RightAssignment_1_2
            {
            pushFollow(FOLLOW_2);
            rule__MultExpr__RightAssignment_1_2();

            state._fsp--;


            }

             after(grammarAccess.getMultExprAccess().getRightAssignment_1_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultExpr__Group_1__2__Impl"


    // $ANTLR start "rule__ExponentExpr__Group__0"
    // InternalFortXTrans.g:6481:1: rule__ExponentExpr__Group__0 : rule__ExponentExpr__Group__0__Impl rule__ExponentExpr__Group__1 ;
    public final void rule__ExponentExpr__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6485:1: ( rule__ExponentExpr__Group__0__Impl rule__ExponentExpr__Group__1 )
            // InternalFortXTrans.g:6486:2: rule__ExponentExpr__Group__0__Impl rule__ExponentExpr__Group__1
            {
            pushFollow(FOLLOW_52);
            rule__ExponentExpr__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ExponentExpr__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExponentExpr__Group__0"


    // $ANTLR start "rule__ExponentExpr__Group__0__Impl"
    // InternalFortXTrans.g:6493:1: rule__ExponentExpr__Group__0__Impl : ( rulePrimary ) ;
    public final void rule__ExponentExpr__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6497:1: ( ( rulePrimary ) )
            // InternalFortXTrans.g:6498:1: ( rulePrimary )
            {
            // InternalFortXTrans.g:6498:1: ( rulePrimary )
            // InternalFortXTrans.g:6499:2: rulePrimary
            {
             before(grammarAccess.getExponentExprAccess().getPrimaryParserRuleCall_0()); 
            pushFollow(FOLLOW_2);
            rulePrimary();

            state._fsp--;

             after(grammarAccess.getExponentExprAccess().getPrimaryParserRuleCall_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExponentExpr__Group__0__Impl"


    // $ANTLR start "rule__ExponentExpr__Group__1"
    // InternalFortXTrans.g:6508:1: rule__ExponentExpr__Group__1 : rule__ExponentExpr__Group__1__Impl ;
    public final void rule__ExponentExpr__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6512:1: ( rule__ExponentExpr__Group__1__Impl )
            // InternalFortXTrans.g:6513:2: rule__ExponentExpr__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ExponentExpr__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExponentExpr__Group__1"


    // $ANTLR start "rule__ExponentExpr__Group__1__Impl"
    // InternalFortXTrans.g:6519:1: rule__ExponentExpr__Group__1__Impl : ( ( rule__ExponentExpr__Group_1__0 )* ) ;
    public final void rule__ExponentExpr__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6523:1: ( ( ( rule__ExponentExpr__Group_1__0 )* ) )
            // InternalFortXTrans.g:6524:1: ( ( rule__ExponentExpr__Group_1__0 )* )
            {
            // InternalFortXTrans.g:6524:1: ( ( rule__ExponentExpr__Group_1__0 )* )
            // InternalFortXTrans.g:6525:2: ( rule__ExponentExpr__Group_1__0 )*
            {
             before(grammarAccess.getExponentExprAccess().getGroup_1()); 
            // InternalFortXTrans.g:6526:2: ( rule__ExponentExpr__Group_1__0 )*
            loop60:
            do {
                int alt60=2;
                int LA60_0 = input.LA(1);

                if ( (LA60_0==62) ) {
                    alt60=1;
                }


                switch (alt60) {
            	case 1 :
            	    // InternalFortXTrans.g:6526:3: rule__ExponentExpr__Group_1__0
            	    {
            	    pushFollow(FOLLOW_53);
            	    rule__ExponentExpr__Group_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop60;
                }
            } while (true);

             after(grammarAccess.getExponentExprAccess().getGroup_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExponentExpr__Group__1__Impl"


    // $ANTLR start "rule__ExponentExpr__Group_1__0"
    // InternalFortXTrans.g:6535:1: rule__ExponentExpr__Group_1__0 : rule__ExponentExpr__Group_1__0__Impl rule__ExponentExpr__Group_1__1 ;
    public final void rule__ExponentExpr__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6539:1: ( rule__ExponentExpr__Group_1__0__Impl rule__ExponentExpr__Group_1__1 )
            // InternalFortXTrans.g:6540:2: rule__ExponentExpr__Group_1__0__Impl rule__ExponentExpr__Group_1__1
            {
            pushFollow(FOLLOW_52);
            rule__ExponentExpr__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ExponentExpr__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExponentExpr__Group_1__0"


    // $ANTLR start "rule__ExponentExpr__Group_1__0__Impl"
    // InternalFortXTrans.g:6547:1: rule__ExponentExpr__Group_1__0__Impl : ( () ) ;
    public final void rule__ExponentExpr__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6551:1: ( ( () ) )
            // InternalFortXTrans.g:6552:1: ( () )
            {
            // InternalFortXTrans.g:6552:1: ( () )
            // InternalFortXTrans.g:6553:2: ()
            {
             before(grammarAccess.getExponentExprAccess().getExponentExprLeftAction_1_0()); 
            // InternalFortXTrans.g:6554:2: ()
            // InternalFortXTrans.g:6554:3: 
            {
            }

             after(grammarAccess.getExponentExprAccess().getExponentExprLeftAction_1_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExponentExpr__Group_1__0__Impl"


    // $ANTLR start "rule__ExponentExpr__Group_1__1"
    // InternalFortXTrans.g:6562:1: rule__ExponentExpr__Group_1__1 : rule__ExponentExpr__Group_1__1__Impl rule__ExponentExpr__Group_1__2 ;
    public final void rule__ExponentExpr__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6566:1: ( rule__ExponentExpr__Group_1__1__Impl rule__ExponentExpr__Group_1__2 )
            // InternalFortXTrans.g:6567:2: rule__ExponentExpr__Group_1__1__Impl rule__ExponentExpr__Group_1__2
            {
            pushFollow(FOLLOW_32);
            rule__ExponentExpr__Group_1__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ExponentExpr__Group_1__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExponentExpr__Group_1__1"


    // $ANTLR start "rule__ExponentExpr__Group_1__1__Impl"
    // InternalFortXTrans.g:6574:1: rule__ExponentExpr__Group_1__1__Impl : ( ( rule__ExponentExpr__OpAssignment_1_1 ) ) ;
    public final void rule__ExponentExpr__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6578:1: ( ( ( rule__ExponentExpr__OpAssignment_1_1 ) ) )
            // InternalFortXTrans.g:6579:1: ( ( rule__ExponentExpr__OpAssignment_1_1 ) )
            {
            // InternalFortXTrans.g:6579:1: ( ( rule__ExponentExpr__OpAssignment_1_1 ) )
            // InternalFortXTrans.g:6580:2: ( rule__ExponentExpr__OpAssignment_1_1 )
            {
             before(grammarAccess.getExponentExprAccess().getOpAssignment_1_1()); 
            // InternalFortXTrans.g:6581:2: ( rule__ExponentExpr__OpAssignment_1_1 )
            // InternalFortXTrans.g:6581:3: rule__ExponentExpr__OpAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__ExponentExpr__OpAssignment_1_1();

            state._fsp--;


            }

             after(grammarAccess.getExponentExprAccess().getOpAssignment_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExponentExpr__Group_1__1__Impl"


    // $ANTLR start "rule__ExponentExpr__Group_1__2"
    // InternalFortXTrans.g:6589:1: rule__ExponentExpr__Group_1__2 : rule__ExponentExpr__Group_1__2__Impl ;
    public final void rule__ExponentExpr__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6593:1: ( rule__ExponentExpr__Group_1__2__Impl )
            // InternalFortXTrans.g:6594:2: rule__ExponentExpr__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ExponentExpr__Group_1__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExponentExpr__Group_1__2"


    // $ANTLR start "rule__ExponentExpr__Group_1__2__Impl"
    // InternalFortXTrans.g:6600:1: rule__ExponentExpr__Group_1__2__Impl : ( ( rule__ExponentExpr__RightAssignment_1_2 ) ) ;
    public final void rule__ExponentExpr__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6604:1: ( ( ( rule__ExponentExpr__RightAssignment_1_2 ) ) )
            // InternalFortXTrans.g:6605:1: ( ( rule__ExponentExpr__RightAssignment_1_2 ) )
            {
            // InternalFortXTrans.g:6605:1: ( ( rule__ExponentExpr__RightAssignment_1_2 ) )
            // InternalFortXTrans.g:6606:2: ( rule__ExponentExpr__RightAssignment_1_2 )
            {
             before(grammarAccess.getExponentExprAccess().getRightAssignment_1_2()); 
            // InternalFortXTrans.g:6607:2: ( rule__ExponentExpr__RightAssignment_1_2 )
            // InternalFortXTrans.g:6607:3: rule__ExponentExpr__RightAssignment_1_2
            {
            pushFollow(FOLLOW_2);
            rule__ExponentExpr__RightAssignment_1_2();

            state._fsp--;


            }

             after(grammarAccess.getExponentExprAccess().getRightAssignment_1_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExponentExpr__Group_1__2__Impl"


    // $ANTLR start "rule__Primary__Group_0__0"
    // InternalFortXTrans.g:6616:1: rule__Primary__Group_0__0 : rule__Primary__Group_0__0__Impl rule__Primary__Group_0__1 ;
    public final void rule__Primary__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6620:1: ( rule__Primary__Group_0__0__Impl rule__Primary__Group_0__1 )
            // InternalFortXTrans.g:6621:2: rule__Primary__Group_0__0__Impl rule__Primary__Group_0__1
            {
            pushFollow(FOLLOW_54);
            rule__Primary__Group_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Primary__Group_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0__0"


    // $ANTLR start "rule__Primary__Group_0__0__Impl"
    // InternalFortXTrans.g:6628:1: rule__Primary__Group_0__0__Impl : ( ruleLiteralTuple ) ;
    public final void rule__Primary__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6632:1: ( ( ruleLiteralTuple ) )
            // InternalFortXTrans.g:6633:1: ( ruleLiteralTuple )
            {
            // InternalFortXTrans.g:6633:1: ( ruleLiteralTuple )
            // InternalFortXTrans.g:6634:2: ruleLiteralTuple
            {
             before(grammarAccess.getPrimaryAccess().getLiteralTupleParserRuleCall_0_0()); 
            pushFollow(FOLLOW_2);
            ruleLiteralTuple();

            state._fsp--;

             after(grammarAccess.getPrimaryAccess().getLiteralTupleParserRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0__0__Impl"


    // $ANTLR start "rule__Primary__Group_0__1"
    // InternalFortXTrans.g:6643:1: rule__Primary__Group_0__1 : rule__Primary__Group_0__1__Impl rule__Primary__Group_0__2 ;
    public final void rule__Primary__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6647:1: ( rule__Primary__Group_0__1__Impl rule__Primary__Group_0__2 )
            // InternalFortXTrans.g:6648:2: rule__Primary__Group_0__1__Impl rule__Primary__Group_0__2
            {
            pushFollow(FOLLOW_54);
            rule__Primary__Group_0__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Primary__Group_0__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0__1"


    // $ANTLR start "rule__Primary__Group_0__1__Impl"
    // InternalFortXTrans.g:6655:1: rule__Primary__Group_0__1__Impl : ( ( rule__Primary__Group_0_1__0 )? ) ;
    public final void rule__Primary__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6659:1: ( ( ( rule__Primary__Group_0_1__0 )? ) )
            // InternalFortXTrans.g:6660:1: ( ( rule__Primary__Group_0_1__0 )? )
            {
            // InternalFortXTrans.g:6660:1: ( ( rule__Primary__Group_0_1__0 )? )
            // InternalFortXTrans.g:6661:2: ( rule__Primary__Group_0_1__0 )?
            {
             before(grammarAccess.getPrimaryAccess().getGroup_0_1()); 
            // InternalFortXTrans.g:6662:2: ( rule__Primary__Group_0_1__0 )?
            int alt61=2;
            int LA61_0 = input.LA(1);

            if ( (LA61_0==63) ) {
                alt61=1;
            }
            switch (alt61) {
                case 1 :
                    // InternalFortXTrans.g:6662:3: rule__Primary__Group_0_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Primary__Group_0_1__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getPrimaryAccess().getGroup_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0__1__Impl"


    // $ANTLR start "rule__Primary__Group_0__2"
    // InternalFortXTrans.g:6670:1: rule__Primary__Group_0__2 : rule__Primary__Group_0__2__Impl rule__Primary__Group_0__3 ;
    public final void rule__Primary__Group_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6674:1: ( rule__Primary__Group_0__2__Impl rule__Primary__Group_0__3 )
            // InternalFortXTrans.g:6675:2: rule__Primary__Group_0__2__Impl rule__Primary__Group_0__3
            {
            pushFollow(FOLLOW_54);
            rule__Primary__Group_0__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Primary__Group_0__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0__2"


    // $ANTLR start "rule__Primary__Group_0__2__Impl"
    // InternalFortXTrans.g:6682:1: rule__Primary__Group_0__2__Impl : ( ( rule__Primary__Group_0_2__0 )? ) ;
    public final void rule__Primary__Group_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6686:1: ( ( ( rule__Primary__Group_0_2__0 )? ) )
            // InternalFortXTrans.g:6687:1: ( ( rule__Primary__Group_0_2__0 )? )
            {
            // InternalFortXTrans.g:6687:1: ( ( rule__Primary__Group_0_2__0 )? )
            // InternalFortXTrans.g:6688:2: ( rule__Primary__Group_0_2__0 )?
            {
             before(grammarAccess.getPrimaryAccess().getGroup_0_2()); 
            // InternalFortXTrans.g:6689:2: ( rule__Primary__Group_0_2__0 )?
            int alt62=2;
            int LA62_0 = input.LA(1);

            if ( (LA62_0==33) ) {
                alt62=1;
            }
            switch (alt62) {
                case 1 :
                    // InternalFortXTrans.g:6689:3: rule__Primary__Group_0_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Primary__Group_0_2__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getPrimaryAccess().getGroup_0_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0__2__Impl"


    // $ANTLR start "rule__Primary__Group_0__3"
    // InternalFortXTrans.g:6697:1: rule__Primary__Group_0__3 : rule__Primary__Group_0__3__Impl ;
    public final void rule__Primary__Group_0__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6701:1: ( rule__Primary__Group_0__3__Impl )
            // InternalFortXTrans.g:6702:2: rule__Primary__Group_0__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Primary__Group_0__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0__3"


    // $ANTLR start "rule__Primary__Group_0__3__Impl"
    // InternalFortXTrans.g:6708:1: rule__Primary__Group_0__3__Impl : ( ( rule__Primary__Group_0_3__0 )? ) ;
    public final void rule__Primary__Group_0__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6712:1: ( ( ( rule__Primary__Group_0_3__0 )? ) )
            // InternalFortXTrans.g:6713:1: ( ( rule__Primary__Group_0_3__0 )? )
            {
            // InternalFortXTrans.g:6713:1: ( ( rule__Primary__Group_0_3__0 )? )
            // InternalFortXTrans.g:6714:2: ( rule__Primary__Group_0_3__0 )?
            {
             before(grammarAccess.getPrimaryAccess().getGroup_0_3()); 
            // InternalFortXTrans.g:6715:2: ( rule__Primary__Group_0_3__0 )?
            int alt63=2;
            int LA63_0 = input.LA(1);

            if ( (LA63_0==43) ) {
                alt63=1;
            }
            switch (alt63) {
                case 1 :
                    // InternalFortXTrans.g:6715:3: rule__Primary__Group_0_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Primary__Group_0_3__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getPrimaryAccess().getGroup_0_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0__3__Impl"


    // $ANTLR start "rule__Primary__Group_0_1__0"
    // InternalFortXTrans.g:6724:1: rule__Primary__Group_0_1__0 : rule__Primary__Group_0_1__0__Impl rule__Primary__Group_0_1__1 ;
    public final void rule__Primary__Group_0_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6728:1: ( rule__Primary__Group_0_1__0__Impl rule__Primary__Group_0_1__1 )
            // InternalFortXTrans.g:6729:2: rule__Primary__Group_0_1__0__Impl rule__Primary__Group_0_1__1
            {
            pushFollow(FOLLOW_55);
            rule__Primary__Group_0_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Primary__Group_0_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0_1__0"


    // $ANTLR start "rule__Primary__Group_0_1__0__Impl"
    // InternalFortXTrans.g:6736:1: rule__Primary__Group_0_1__0__Impl : ( () ) ;
    public final void rule__Primary__Group_0_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6740:1: ( ( () ) )
            // InternalFortXTrans.g:6741:1: ( () )
            {
            // InternalFortXTrans.g:6741:1: ( () )
            // InternalFortXTrans.g:6742:2: ()
            {
             before(grammarAccess.getPrimaryAccess().getAssopLeftAction_0_1_0()); 
            // InternalFortXTrans.g:6743:2: ()
            // InternalFortXTrans.g:6743:3: 
            {
            }

             after(grammarAccess.getPrimaryAccess().getAssopLeftAction_0_1_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0_1__0__Impl"


    // $ANTLR start "rule__Primary__Group_0_1__1"
    // InternalFortXTrans.g:6751:1: rule__Primary__Group_0_1__1 : rule__Primary__Group_0_1__1__Impl ;
    public final void rule__Primary__Group_0_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6755:1: ( rule__Primary__Group_0_1__1__Impl )
            // InternalFortXTrans.g:6756:2: rule__Primary__Group_0_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Primary__Group_0_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0_1__1"


    // $ANTLR start "rule__Primary__Group_0_1__1__Impl"
    // InternalFortXTrans.g:6762:1: rule__Primary__Group_0_1__1__Impl : ( ( rule__Primary__Group_0_1_1__0 ) ) ;
    public final void rule__Primary__Group_0_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6766:1: ( ( ( rule__Primary__Group_0_1_1__0 ) ) )
            // InternalFortXTrans.g:6767:1: ( ( rule__Primary__Group_0_1_1__0 ) )
            {
            // InternalFortXTrans.g:6767:1: ( ( rule__Primary__Group_0_1_1__0 ) )
            // InternalFortXTrans.g:6768:2: ( rule__Primary__Group_0_1_1__0 )
            {
             before(grammarAccess.getPrimaryAccess().getGroup_0_1_1()); 
            // InternalFortXTrans.g:6769:2: ( rule__Primary__Group_0_1_1__0 )
            // InternalFortXTrans.g:6769:3: rule__Primary__Group_0_1_1__0
            {
            pushFollow(FOLLOW_2);
            rule__Primary__Group_0_1_1__0();

            state._fsp--;


            }

             after(grammarAccess.getPrimaryAccess().getGroup_0_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0_1__1__Impl"


    // $ANTLR start "rule__Primary__Group_0_1_1__0"
    // InternalFortXTrans.g:6778:1: rule__Primary__Group_0_1_1__0 : rule__Primary__Group_0_1_1__0__Impl rule__Primary__Group_0_1_1__1 ;
    public final void rule__Primary__Group_0_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6782:1: ( rule__Primary__Group_0_1_1__0__Impl rule__Primary__Group_0_1_1__1 )
            // InternalFortXTrans.g:6783:2: rule__Primary__Group_0_1_1__0__Impl rule__Primary__Group_0_1_1__1
            {
            pushFollow(FOLLOW_32);
            rule__Primary__Group_0_1_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Primary__Group_0_1_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0_1_1__0"


    // $ANTLR start "rule__Primary__Group_0_1_1__0__Impl"
    // InternalFortXTrans.g:6790:1: rule__Primary__Group_0_1_1__0__Impl : ( ( rule__Primary__OpAssignment_0_1_1_0 ) ) ;
    public final void rule__Primary__Group_0_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6794:1: ( ( ( rule__Primary__OpAssignment_0_1_1_0 ) ) )
            // InternalFortXTrans.g:6795:1: ( ( rule__Primary__OpAssignment_0_1_1_0 ) )
            {
            // InternalFortXTrans.g:6795:1: ( ( rule__Primary__OpAssignment_0_1_1_0 ) )
            // InternalFortXTrans.g:6796:2: ( rule__Primary__OpAssignment_0_1_1_0 )
            {
             before(grammarAccess.getPrimaryAccess().getOpAssignment_0_1_1_0()); 
            // InternalFortXTrans.g:6797:2: ( rule__Primary__OpAssignment_0_1_1_0 )
            // InternalFortXTrans.g:6797:3: rule__Primary__OpAssignment_0_1_1_0
            {
            pushFollow(FOLLOW_2);
            rule__Primary__OpAssignment_0_1_1_0();

            state._fsp--;


            }

             after(grammarAccess.getPrimaryAccess().getOpAssignment_0_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0_1_1__0__Impl"


    // $ANTLR start "rule__Primary__Group_0_1_1__1"
    // InternalFortXTrans.g:6805:1: rule__Primary__Group_0_1_1__1 : rule__Primary__Group_0_1_1__1__Impl ;
    public final void rule__Primary__Group_0_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6809:1: ( rule__Primary__Group_0_1_1__1__Impl )
            // InternalFortXTrans.g:6810:2: rule__Primary__Group_0_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Primary__Group_0_1_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0_1_1__1"


    // $ANTLR start "rule__Primary__Group_0_1_1__1__Impl"
    // InternalFortXTrans.g:6816:1: rule__Primary__Group_0_1_1__1__Impl : ( ( rule__Primary__RightAssignment_0_1_1_1 ) ) ;
    public final void rule__Primary__Group_0_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6820:1: ( ( ( rule__Primary__RightAssignment_0_1_1_1 ) ) )
            // InternalFortXTrans.g:6821:1: ( ( rule__Primary__RightAssignment_0_1_1_1 ) )
            {
            // InternalFortXTrans.g:6821:1: ( ( rule__Primary__RightAssignment_0_1_1_1 ) )
            // InternalFortXTrans.g:6822:2: ( rule__Primary__RightAssignment_0_1_1_1 )
            {
             before(grammarAccess.getPrimaryAccess().getRightAssignment_0_1_1_1()); 
            // InternalFortXTrans.g:6823:2: ( rule__Primary__RightAssignment_0_1_1_1 )
            // InternalFortXTrans.g:6823:3: rule__Primary__RightAssignment_0_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Primary__RightAssignment_0_1_1_1();

            state._fsp--;


            }

             after(grammarAccess.getPrimaryAccess().getRightAssignment_0_1_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0_1_1__1__Impl"


    // $ANTLR start "rule__Primary__Group_0_2__0"
    // InternalFortXTrans.g:6832:1: rule__Primary__Group_0_2__0 : rule__Primary__Group_0_2__0__Impl rule__Primary__Group_0_2__1 ;
    public final void rule__Primary__Group_0_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6836:1: ( rule__Primary__Group_0_2__0__Impl rule__Primary__Group_0_2__1 )
            // InternalFortXTrans.g:6837:2: rule__Primary__Group_0_2__0__Impl rule__Primary__Group_0_2__1
            {
            pushFollow(FOLLOW_27);
            rule__Primary__Group_0_2__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Primary__Group_0_2__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0_2__0"


    // $ANTLR start "rule__Primary__Group_0_2__0__Impl"
    // InternalFortXTrans.g:6844:1: rule__Primary__Group_0_2__0__Impl : ( () ) ;
    public final void rule__Primary__Group_0_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6848:1: ( ( () ) )
            // InternalFortXTrans.g:6849:1: ( () )
            {
            // InternalFortXTrans.g:6849:1: ( () )
            // InternalFortXTrans.g:6850:2: ()
            {
             before(grammarAccess.getPrimaryAccess().getFCallLeftAction_0_2_0()); 
            // InternalFortXTrans.g:6851:2: ()
            // InternalFortXTrans.g:6851:3: 
            {
            }

             after(grammarAccess.getPrimaryAccess().getFCallLeftAction_0_2_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0_2__0__Impl"


    // $ANTLR start "rule__Primary__Group_0_2__1"
    // InternalFortXTrans.g:6859:1: rule__Primary__Group_0_2__1 : rule__Primary__Group_0_2__1__Impl rule__Primary__Group_0_2__2 ;
    public final void rule__Primary__Group_0_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6863:1: ( rule__Primary__Group_0_2__1__Impl rule__Primary__Group_0_2__2 )
            // InternalFortXTrans.g:6864:2: rule__Primary__Group_0_2__1__Impl rule__Primary__Group_0_2__2
            {
            pushFollow(FOLLOW_56);
            rule__Primary__Group_0_2__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Primary__Group_0_2__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0_2__1"


    // $ANTLR start "rule__Primary__Group_0_2__1__Impl"
    // InternalFortXTrans.g:6871:1: rule__Primary__Group_0_2__1__Impl : ( '(' ) ;
    public final void rule__Primary__Group_0_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6875:1: ( ( '(' ) )
            // InternalFortXTrans.g:6876:1: ( '(' )
            {
            // InternalFortXTrans.g:6876:1: ( '(' )
            // InternalFortXTrans.g:6877:2: '('
            {
             before(grammarAccess.getPrimaryAccess().getLeftParenthesisKeyword_0_2_1()); 
            match(input,33,FOLLOW_2); 
             after(grammarAccess.getPrimaryAccess().getLeftParenthesisKeyword_0_2_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0_2__1__Impl"


    // $ANTLR start "rule__Primary__Group_0_2__2"
    // InternalFortXTrans.g:6886:1: rule__Primary__Group_0_2__2 : rule__Primary__Group_0_2__2__Impl rule__Primary__Group_0_2__3 ;
    public final void rule__Primary__Group_0_2__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6890:1: ( rule__Primary__Group_0_2__2__Impl rule__Primary__Group_0_2__3 )
            // InternalFortXTrans.g:6891:2: rule__Primary__Group_0_2__2__Impl rule__Primary__Group_0_2__3
            {
            pushFollow(FOLLOW_56);
            rule__Primary__Group_0_2__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Primary__Group_0_2__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0_2__2"


    // $ANTLR start "rule__Primary__Group_0_2__2__Impl"
    // InternalFortXTrans.g:6898:1: rule__Primary__Group_0_2__2__Impl : ( ( rule__Primary__RightAssignment_0_2_2 )? ) ;
    public final void rule__Primary__Group_0_2__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6902:1: ( ( ( rule__Primary__RightAssignment_0_2_2 )? ) )
            // InternalFortXTrans.g:6903:1: ( ( rule__Primary__RightAssignment_0_2_2 )? )
            {
            // InternalFortXTrans.g:6903:1: ( ( rule__Primary__RightAssignment_0_2_2 )? )
            // InternalFortXTrans.g:6904:2: ( rule__Primary__RightAssignment_0_2_2 )?
            {
             before(grammarAccess.getPrimaryAccess().getRightAssignment_0_2_2()); 
            // InternalFortXTrans.g:6905:2: ( rule__Primary__RightAssignment_0_2_2 )?
            int alt64=2;
            int LA64_0 = input.LA(1);

            if ( ((LA64_0>=RULE_ID && LA64_0<=RULE_STRING)||LA64_0==33||LA64_0==40||LA64_0==46||(LA64_0>=71 && LA64_0<=72)) ) {
                alt64=1;
            }
            switch (alt64) {
                case 1 :
                    // InternalFortXTrans.g:6905:3: rule__Primary__RightAssignment_0_2_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__Primary__RightAssignment_0_2_2();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getPrimaryAccess().getRightAssignment_0_2_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0_2__2__Impl"


    // $ANTLR start "rule__Primary__Group_0_2__3"
    // InternalFortXTrans.g:6913:1: rule__Primary__Group_0_2__3 : rule__Primary__Group_0_2__3__Impl ;
    public final void rule__Primary__Group_0_2__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6917:1: ( rule__Primary__Group_0_2__3__Impl )
            // InternalFortXTrans.g:6918:2: rule__Primary__Group_0_2__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Primary__Group_0_2__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0_2__3"


    // $ANTLR start "rule__Primary__Group_0_2__3__Impl"
    // InternalFortXTrans.g:6924:1: rule__Primary__Group_0_2__3__Impl : ( ')' ) ;
    public final void rule__Primary__Group_0_2__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6928:1: ( ( ')' ) )
            // InternalFortXTrans.g:6929:1: ( ')' )
            {
            // InternalFortXTrans.g:6929:1: ( ')' )
            // InternalFortXTrans.g:6930:2: ')'
            {
             before(grammarAccess.getPrimaryAccess().getRightParenthesisKeyword_0_2_3()); 
            match(input,34,FOLLOW_2); 
             after(grammarAccess.getPrimaryAccess().getRightParenthesisKeyword_0_2_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0_2__3__Impl"


    // $ANTLR start "rule__Primary__Group_0_3__0"
    // InternalFortXTrans.g:6940:1: rule__Primary__Group_0_3__0 : rule__Primary__Group_0_3__0__Impl rule__Primary__Group_0_3__1 ;
    public final void rule__Primary__Group_0_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6944:1: ( rule__Primary__Group_0_3__0__Impl rule__Primary__Group_0_3__1 )
            // InternalFortXTrans.g:6945:2: rule__Primary__Group_0_3__0__Impl rule__Primary__Group_0_3__1
            {
            pushFollow(FOLLOW_57);
            rule__Primary__Group_0_3__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Primary__Group_0_3__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0_3__0"


    // $ANTLR start "rule__Primary__Group_0_3__0__Impl"
    // InternalFortXTrans.g:6952:1: rule__Primary__Group_0_3__0__Impl : ( () ) ;
    public final void rule__Primary__Group_0_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6956:1: ( ( () ) )
            // InternalFortXTrans.g:6957:1: ( () )
            {
            // InternalFortXTrans.g:6957:1: ( () )
            // InternalFortXTrans.g:6958:2: ()
            {
             before(grammarAccess.getPrimaryAccess().getArrayInitLeftAction_0_3_0()); 
            // InternalFortXTrans.g:6959:2: ()
            // InternalFortXTrans.g:6959:3: 
            {
            }

             after(grammarAccess.getPrimaryAccess().getArrayInitLeftAction_0_3_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0_3__0__Impl"


    // $ANTLR start "rule__Primary__Group_0_3__1"
    // InternalFortXTrans.g:6967:1: rule__Primary__Group_0_3__1 : rule__Primary__Group_0_3__1__Impl rule__Primary__Group_0_3__2 ;
    public final void rule__Primary__Group_0_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6971:1: ( rule__Primary__Group_0_3__1__Impl rule__Primary__Group_0_3__2 )
            // InternalFortXTrans.g:6972:2: rule__Primary__Group_0_3__1__Impl rule__Primary__Group_0_3__2
            {
            pushFollow(FOLLOW_58);
            rule__Primary__Group_0_3__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Primary__Group_0_3__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0_3__1"


    // $ANTLR start "rule__Primary__Group_0_3__1__Impl"
    // InternalFortXTrans.g:6979:1: rule__Primary__Group_0_3__1__Impl : ( '[' ) ;
    public final void rule__Primary__Group_0_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6983:1: ( ( '[' ) )
            // InternalFortXTrans.g:6984:1: ( '[' )
            {
            // InternalFortXTrans.g:6984:1: ( '[' )
            // InternalFortXTrans.g:6985:2: '['
            {
             before(grammarAccess.getPrimaryAccess().getLeftSquareBracketKeyword_0_3_1()); 
            match(input,43,FOLLOW_2); 
             after(grammarAccess.getPrimaryAccess().getLeftSquareBracketKeyword_0_3_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0_3__1__Impl"


    // $ANTLR start "rule__Primary__Group_0_3__2"
    // InternalFortXTrans.g:6994:1: rule__Primary__Group_0_3__2 : rule__Primary__Group_0_3__2__Impl rule__Primary__Group_0_3__3 ;
    public final void rule__Primary__Group_0_3__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:6998:1: ( rule__Primary__Group_0_3__2__Impl rule__Primary__Group_0_3__3 )
            // InternalFortXTrans.g:6999:2: rule__Primary__Group_0_3__2__Impl rule__Primary__Group_0_3__3
            {
            pushFollow(FOLLOW_5);
            rule__Primary__Group_0_3__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Primary__Group_0_3__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0_3__2"


    // $ANTLR start "rule__Primary__Group_0_3__2__Impl"
    // InternalFortXTrans.g:7006:1: rule__Primary__Group_0_3__2__Impl : ( '\\\\' ) ;
    public final void rule__Primary__Group_0_3__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7010:1: ( ( '\\\\' ) )
            // InternalFortXTrans.g:7011:1: ( '\\\\' )
            {
            // InternalFortXTrans.g:7011:1: ( '\\\\' )
            // InternalFortXTrans.g:7012:2: '\\\\'
            {
             before(grammarAccess.getPrimaryAccess().getBackslashKeyword_0_3_2()); 
            match(input,44,FOLLOW_2); 
             after(grammarAccess.getPrimaryAccess().getBackslashKeyword_0_3_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0_3__2__Impl"


    // $ANTLR start "rule__Primary__Group_0_3__3"
    // InternalFortXTrans.g:7021:1: rule__Primary__Group_0_3__3 : rule__Primary__Group_0_3__3__Impl rule__Primary__Group_0_3__4 ;
    public final void rule__Primary__Group_0_3__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7025:1: ( rule__Primary__Group_0_3__3__Impl rule__Primary__Group_0_3__4 )
            // InternalFortXTrans.g:7026:2: rule__Primary__Group_0_3__3__Impl rule__Primary__Group_0_3__4
            {
            pushFollow(FOLLOW_24);
            rule__Primary__Group_0_3__3__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Primary__Group_0_3__4();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0_3__3"


    // $ANTLR start "rule__Primary__Group_0_3__3__Impl"
    // InternalFortXTrans.g:7033:1: rule__Primary__Group_0_3__3__Impl : ( ( rule__Primary__TypeAssignment_0_3_3 ) ) ;
    public final void rule__Primary__Group_0_3__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7037:1: ( ( ( rule__Primary__TypeAssignment_0_3_3 ) ) )
            // InternalFortXTrans.g:7038:1: ( ( rule__Primary__TypeAssignment_0_3_3 ) )
            {
            // InternalFortXTrans.g:7038:1: ( ( rule__Primary__TypeAssignment_0_3_3 ) )
            // InternalFortXTrans.g:7039:2: ( rule__Primary__TypeAssignment_0_3_3 )
            {
             before(grammarAccess.getPrimaryAccess().getTypeAssignment_0_3_3()); 
            // InternalFortXTrans.g:7040:2: ( rule__Primary__TypeAssignment_0_3_3 )
            // InternalFortXTrans.g:7040:3: rule__Primary__TypeAssignment_0_3_3
            {
            pushFollow(FOLLOW_2);
            rule__Primary__TypeAssignment_0_3_3();

            state._fsp--;


            }

             after(grammarAccess.getPrimaryAccess().getTypeAssignment_0_3_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0_3__3__Impl"


    // $ANTLR start "rule__Primary__Group_0_3__4"
    // InternalFortXTrans.g:7048:1: rule__Primary__Group_0_3__4 : rule__Primary__Group_0_3__4__Impl rule__Primary__Group_0_3__5 ;
    public final void rule__Primary__Group_0_3__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7052:1: ( rule__Primary__Group_0_3__4__Impl rule__Primary__Group_0_3__5 )
            // InternalFortXTrans.g:7053:2: rule__Primary__Group_0_3__4__Impl rule__Primary__Group_0_3__5
            {
            pushFollow(FOLLOW_59);
            rule__Primary__Group_0_3__4__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Primary__Group_0_3__5();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0_3__4"


    // $ANTLR start "rule__Primary__Group_0_3__4__Impl"
    // InternalFortXTrans.g:7060:1: rule__Primary__Group_0_3__4__Impl : ( ',' ) ;
    public final void rule__Primary__Group_0_3__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7064:1: ( ( ',' ) )
            // InternalFortXTrans.g:7065:1: ( ',' )
            {
            // InternalFortXTrans.g:7065:1: ( ',' )
            // InternalFortXTrans.g:7066:2: ','
            {
             before(grammarAccess.getPrimaryAccess().getCommaKeyword_0_3_4()); 
            match(input,29,FOLLOW_2); 
             after(grammarAccess.getPrimaryAccess().getCommaKeyword_0_3_4()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0_3__4__Impl"


    // $ANTLR start "rule__Primary__Group_0_3__5"
    // InternalFortXTrans.g:7075:1: rule__Primary__Group_0_3__5 : rule__Primary__Group_0_3__5__Impl rule__Primary__Group_0_3__6 ;
    public final void rule__Primary__Group_0_3__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7079:1: ( rule__Primary__Group_0_3__5__Impl rule__Primary__Group_0_3__6 )
            // InternalFortXTrans.g:7080:2: rule__Primary__Group_0_3__5__Impl rule__Primary__Group_0_3__6
            {
            pushFollow(FOLLOW_59);
            rule__Primary__Group_0_3__5__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Primary__Group_0_3__6();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0_3__5"


    // $ANTLR start "rule__Primary__Group_0_3__5__Impl"
    // InternalFortXTrans.g:7087:1: rule__Primary__Group_0_3__5__Impl : ( ( rule__Primary__SizesAssignment_0_3_5 )? ) ;
    public final void rule__Primary__Group_0_3__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7091:1: ( ( ( rule__Primary__SizesAssignment_0_3_5 )? ) )
            // InternalFortXTrans.g:7092:1: ( ( rule__Primary__SizesAssignment_0_3_5 )? )
            {
            // InternalFortXTrans.g:7092:1: ( ( rule__Primary__SizesAssignment_0_3_5 )? )
            // InternalFortXTrans.g:7093:2: ( rule__Primary__SizesAssignment_0_3_5 )?
            {
             before(grammarAccess.getPrimaryAccess().getSizesAssignment_0_3_5()); 
            // InternalFortXTrans.g:7094:2: ( rule__Primary__SizesAssignment_0_3_5 )?
            int alt65=2;
            int LA65_0 = input.LA(1);

            if ( ((LA65_0>=RULE_ID && LA65_0<=RULE_STRING)||LA65_0==33||LA65_0==40||LA65_0==46||(LA65_0>=71 && LA65_0<=72)) ) {
                alt65=1;
            }
            switch (alt65) {
                case 1 :
                    // InternalFortXTrans.g:7094:3: rule__Primary__SizesAssignment_0_3_5
                    {
                    pushFollow(FOLLOW_2);
                    rule__Primary__SizesAssignment_0_3_5();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getPrimaryAccess().getSizesAssignment_0_3_5()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0_3__5__Impl"


    // $ANTLR start "rule__Primary__Group_0_3__6"
    // InternalFortXTrans.g:7102:1: rule__Primary__Group_0_3__6 : rule__Primary__Group_0_3__6__Impl rule__Primary__Group_0_3__7 ;
    public final void rule__Primary__Group_0_3__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7106:1: ( rule__Primary__Group_0_3__6__Impl rule__Primary__Group_0_3__7 )
            // InternalFortXTrans.g:7107:2: rule__Primary__Group_0_3__6__Impl rule__Primary__Group_0_3__7
            {
            pushFollow(FOLLOW_60);
            rule__Primary__Group_0_3__6__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Primary__Group_0_3__7();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0_3__6"


    // $ANTLR start "rule__Primary__Group_0_3__6__Impl"
    // InternalFortXTrans.g:7114:1: rule__Primary__Group_0_3__6__Impl : ( '\\\\' ) ;
    public final void rule__Primary__Group_0_3__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7118:1: ( ( '\\\\' ) )
            // InternalFortXTrans.g:7119:1: ( '\\\\' )
            {
            // InternalFortXTrans.g:7119:1: ( '\\\\' )
            // InternalFortXTrans.g:7120:2: '\\\\'
            {
             before(grammarAccess.getPrimaryAccess().getBackslashKeyword_0_3_6()); 
            match(input,44,FOLLOW_2); 
             after(grammarAccess.getPrimaryAccess().getBackslashKeyword_0_3_6()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0_3__6__Impl"


    // $ANTLR start "rule__Primary__Group_0_3__7"
    // InternalFortXTrans.g:7129:1: rule__Primary__Group_0_3__7 : rule__Primary__Group_0_3__7__Impl rule__Primary__Group_0_3__8 ;
    public final void rule__Primary__Group_0_3__7() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7133:1: ( rule__Primary__Group_0_3__7__Impl rule__Primary__Group_0_3__8 )
            // InternalFortXTrans.g:7134:2: rule__Primary__Group_0_3__7__Impl rule__Primary__Group_0_3__8
            {
            pushFollow(FOLLOW_27);
            rule__Primary__Group_0_3__7__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Primary__Group_0_3__8();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0_3__7"


    // $ANTLR start "rule__Primary__Group_0_3__7__Impl"
    // InternalFortXTrans.g:7141:1: rule__Primary__Group_0_3__7__Impl : ( ']' ) ;
    public final void rule__Primary__Group_0_3__7__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7145:1: ( ( ']' ) )
            // InternalFortXTrans.g:7146:1: ( ']' )
            {
            // InternalFortXTrans.g:7146:1: ( ']' )
            // InternalFortXTrans.g:7147:2: ']'
            {
             before(grammarAccess.getPrimaryAccess().getRightSquareBracketKeyword_0_3_7()); 
            match(input,45,FOLLOW_2); 
             after(grammarAccess.getPrimaryAccess().getRightSquareBracketKeyword_0_3_7()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0_3__7__Impl"


    // $ANTLR start "rule__Primary__Group_0_3__8"
    // InternalFortXTrans.g:7156:1: rule__Primary__Group_0_3__8 : rule__Primary__Group_0_3__8__Impl rule__Primary__Group_0_3__9 ;
    public final void rule__Primary__Group_0_3__8() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7160:1: ( rule__Primary__Group_0_3__8__Impl rule__Primary__Group_0_3__9 )
            // InternalFortXTrans.g:7161:2: rule__Primary__Group_0_3__8__Impl rule__Primary__Group_0_3__9
            {
            pushFollow(FOLLOW_5);
            rule__Primary__Group_0_3__8__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Primary__Group_0_3__9();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0_3__8"


    // $ANTLR start "rule__Primary__Group_0_3__8__Impl"
    // InternalFortXTrans.g:7168:1: rule__Primary__Group_0_3__8__Impl : ( '(' ) ;
    public final void rule__Primary__Group_0_3__8__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7172:1: ( ( '(' ) )
            // InternalFortXTrans.g:7173:1: ( '(' )
            {
            // InternalFortXTrans.g:7173:1: ( '(' )
            // InternalFortXTrans.g:7174:2: '('
            {
             before(grammarAccess.getPrimaryAccess().getLeftParenthesisKeyword_0_3_8()); 
            match(input,33,FOLLOW_2); 
             after(grammarAccess.getPrimaryAccess().getLeftParenthesisKeyword_0_3_8()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0_3__8__Impl"


    // $ANTLR start "rule__Primary__Group_0_3__9"
    // InternalFortXTrans.g:7183:1: rule__Primary__Group_0_3__9 : rule__Primary__Group_0_3__9__Impl rule__Primary__Group_0_3__10 ;
    public final void rule__Primary__Group_0_3__9() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7187:1: ( rule__Primary__Group_0_3__9__Impl rule__Primary__Group_0_3__10 )
            // InternalFortXTrans.g:7188:2: rule__Primary__Group_0_3__9__Impl rule__Primary__Group_0_3__10
            {
            pushFollow(FOLLOW_23);
            rule__Primary__Group_0_3__9__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Primary__Group_0_3__10();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0_3__9"


    // $ANTLR start "rule__Primary__Group_0_3__9__Impl"
    // InternalFortXTrans.g:7195:1: rule__Primary__Group_0_3__9__Impl : ( ( rule__Primary__FillerAssignment_0_3_9 ) ) ;
    public final void rule__Primary__Group_0_3__9__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7199:1: ( ( ( rule__Primary__FillerAssignment_0_3_9 ) ) )
            // InternalFortXTrans.g:7200:1: ( ( rule__Primary__FillerAssignment_0_3_9 ) )
            {
            // InternalFortXTrans.g:7200:1: ( ( rule__Primary__FillerAssignment_0_3_9 ) )
            // InternalFortXTrans.g:7201:2: ( rule__Primary__FillerAssignment_0_3_9 )
            {
             before(grammarAccess.getPrimaryAccess().getFillerAssignment_0_3_9()); 
            // InternalFortXTrans.g:7202:2: ( rule__Primary__FillerAssignment_0_3_9 )
            // InternalFortXTrans.g:7202:3: rule__Primary__FillerAssignment_0_3_9
            {
            pushFollow(FOLLOW_2);
            rule__Primary__FillerAssignment_0_3_9();

            state._fsp--;


            }

             after(grammarAccess.getPrimaryAccess().getFillerAssignment_0_3_9()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0_3__9__Impl"


    // $ANTLR start "rule__Primary__Group_0_3__10"
    // InternalFortXTrans.g:7210:1: rule__Primary__Group_0_3__10 : rule__Primary__Group_0_3__10__Impl ;
    public final void rule__Primary__Group_0_3__10() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7214:1: ( rule__Primary__Group_0_3__10__Impl )
            // InternalFortXTrans.g:7215:2: rule__Primary__Group_0_3__10__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Primary__Group_0_3__10__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0_3__10"


    // $ANTLR start "rule__Primary__Group_0_3__10__Impl"
    // InternalFortXTrans.g:7221:1: rule__Primary__Group_0_3__10__Impl : ( ')' ) ;
    public final void rule__Primary__Group_0_3__10__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7225:1: ( ( ')' ) )
            // InternalFortXTrans.g:7226:1: ( ')' )
            {
            // InternalFortXTrans.g:7226:1: ( ')' )
            // InternalFortXTrans.g:7227:2: ')'
            {
             before(grammarAccess.getPrimaryAccess().getRightParenthesisKeyword_0_3_10()); 
            match(input,34,FOLLOW_2); 
             after(grammarAccess.getPrimaryAccess().getRightParenthesisKeyword_0_3_10()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_0_3__10__Impl"


    // $ANTLR start "rule__Primary__Group_1__0"
    // InternalFortXTrans.g:7237:1: rule__Primary__Group_1__0 : rule__Primary__Group_1__0__Impl rule__Primary__Group_1__1 ;
    public final void rule__Primary__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7241:1: ( rule__Primary__Group_1__0__Impl rule__Primary__Group_1__1 )
            // InternalFortXTrans.g:7242:2: rule__Primary__Group_1__0__Impl rule__Primary__Group_1__1
            {
            pushFollow(FOLLOW_61);
            rule__Primary__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Primary__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_1__0"


    // $ANTLR start "rule__Primary__Group_1__0__Impl"
    // InternalFortXTrans.g:7249:1: rule__Primary__Group_1__0__Impl : ( () ) ;
    public final void rule__Primary__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7253:1: ( ( () ) )
            // InternalFortXTrans.g:7254:1: ( () )
            {
            // InternalFortXTrans.g:7254:1: ( () )
            // InternalFortXTrans.g:7255:2: ()
            {
             before(grammarAccess.getPrimaryAccess().getNotAction_1_0()); 
            // InternalFortXTrans.g:7256:2: ()
            // InternalFortXTrans.g:7256:3: 
            {
            }

             after(grammarAccess.getPrimaryAccess().getNotAction_1_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_1__0__Impl"


    // $ANTLR start "rule__Primary__Group_1__1"
    // InternalFortXTrans.g:7264:1: rule__Primary__Group_1__1 : rule__Primary__Group_1__1__Impl rule__Primary__Group_1__2 ;
    public final void rule__Primary__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7268:1: ( rule__Primary__Group_1__1__Impl rule__Primary__Group_1__2 )
            // InternalFortXTrans.g:7269:2: rule__Primary__Group_1__1__Impl rule__Primary__Group_1__2
            {
            pushFollow(FOLLOW_32);
            rule__Primary__Group_1__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Primary__Group_1__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_1__1"


    // $ANTLR start "rule__Primary__Group_1__1__Impl"
    // InternalFortXTrans.g:7276:1: rule__Primary__Group_1__1__Impl : ( '!' ) ;
    public final void rule__Primary__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7280:1: ( ( '!' ) )
            // InternalFortXTrans.g:7281:1: ( '!' )
            {
            // InternalFortXTrans.g:7281:1: ( '!' )
            // InternalFortXTrans.g:7282:2: '!'
            {
             before(grammarAccess.getPrimaryAccess().getExclamationMarkKeyword_1_1()); 
            match(input,46,FOLLOW_2); 
             after(grammarAccess.getPrimaryAccess().getExclamationMarkKeyword_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_1__1__Impl"


    // $ANTLR start "rule__Primary__Group_1__2"
    // InternalFortXTrans.g:7291:1: rule__Primary__Group_1__2 : rule__Primary__Group_1__2__Impl ;
    public final void rule__Primary__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7295:1: ( rule__Primary__Group_1__2__Impl )
            // InternalFortXTrans.g:7296:2: rule__Primary__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Primary__Group_1__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_1__2"


    // $ANTLR start "rule__Primary__Group_1__2__Impl"
    // InternalFortXTrans.g:7302:1: rule__Primary__Group_1__2__Impl : ( ( rule__Primary__ExpressionAssignment_1_2 ) ) ;
    public final void rule__Primary__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7306:1: ( ( ( rule__Primary__ExpressionAssignment_1_2 ) ) )
            // InternalFortXTrans.g:7307:1: ( ( rule__Primary__ExpressionAssignment_1_2 ) )
            {
            // InternalFortXTrans.g:7307:1: ( ( rule__Primary__ExpressionAssignment_1_2 ) )
            // InternalFortXTrans.g:7308:2: ( rule__Primary__ExpressionAssignment_1_2 )
            {
             before(grammarAccess.getPrimaryAccess().getExpressionAssignment_1_2()); 
            // InternalFortXTrans.g:7309:2: ( rule__Primary__ExpressionAssignment_1_2 )
            // InternalFortXTrans.g:7309:3: rule__Primary__ExpressionAssignment_1_2
            {
            pushFollow(FOLLOW_2);
            rule__Primary__ExpressionAssignment_1_2();

            state._fsp--;


            }

             after(grammarAccess.getPrimaryAccess().getExpressionAssignment_1_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_1__2__Impl"


    // $ANTLR start "rule__Primary__Group_2__0"
    // InternalFortXTrans.g:7318:1: rule__Primary__Group_2__0 : rule__Primary__Group_2__0__Impl rule__Primary__Group_2__1 ;
    public final void rule__Primary__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7322:1: ( rule__Primary__Group_2__0__Impl rule__Primary__Group_2__1 )
            // InternalFortXTrans.g:7323:2: rule__Primary__Group_2__0__Impl rule__Primary__Group_2__1
            {
            pushFollow(FOLLOW_46);
            rule__Primary__Group_2__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Primary__Group_2__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_2__0"


    // $ANTLR start "rule__Primary__Group_2__0__Impl"
    // InternalFortXTrans.g:7330:1: rule__Primary__Group_2__0__Impl : ( () ) ;
    public final void rule__Primary__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7334:1: ( ( () ) )
            // InternalFortXTrans.g:7335:1: ( () )
            {
            // InternalFortXTrans.g:7335:1: ( () )
            // InternalFortXTrans.g:7336:2: ()
            {
             before(grammarAccess.getPrimaryAccess().getNegAction_2_0()); 
            // InternalFortXTrans.g:7337:2: ()
            // InternalFortXTrans.g:7337:3: 
            {
            }

             after(grammarAccess.getPrimaryAccess().getNegAction_2_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_2__0__Impl"


    // $ANTLR start "rule__Primary__Group_2__1"
    // InternalFortXTrans.g:7345:1: rule__Primary__Group_2__1 : rule__Primary__Group_2__1__Impl rule__Primary__Group_2__2 ;
    public final void rule__Primary__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7349:1: ( rule__Primary__Group_2__1__Impl rule__Primary__Group_2__2 )
            // InternalFortXTrans.g:7350:2: rule__Primary__Group_2__1__Impl rule__Primary__Group_2__2
            {
            pushFollow(FOLLOW_32);
            rule__Primary__Group_2__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Primary__Group_2__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_2__1"


    // $ANTLR start "rule__Primary__Group_2__1__Impl"
    // InternalFortXTrans.g:7357:1: rule__Primary__Group_2__1__Impl : ( '-' ) ;
    public final void rule__Primary__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7361:1: ( ( '-' ) )
            // InternalFortXTrans.g:7362:1: ( '-' )
            {
            // InternalFortXTrans.g:7362:1: ( '-' )
            // InternalFortXTrans.g:7363:2: '-'
            {
             before(grammarAccess.getPrimaryAccess().getHyphenMinusKeyword_2_1()); 
            match(input,40,FOLLOW_2); 
             after(grammarAccess.getPrimaryAccess().getHyphenMinusKeyword_2_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_2__1__Impl"


    // $ANTLR start "rule__Primary__Group_2__2"
    // InternalFortXTrans.g:7372:1: rule__Primary__Group_2__2 : rule__Primary__Group_2__2__Impl ;
    public final void rule__Primary__Group_2__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7376:1: ( rule__Primary__Group_2__2__Impl )
            // InternalFortXTrans.g:7377:2: rule__Primary__Group_2__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Primary__Group_2__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_2__2"


    // $ANTLR start "rule__Primary__Group_2__2__Impl"
    // InternalFortXTrans.g:7383:1: rule__Primary__Group_2__2__Impl : ( ( rule__Primary__ExpressionAssignment_2_2 ) ) ;
    public final void rule__Primary__Group_2__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7387:1: ( ( ( rule__Primary__ExpressionAssignment_2_2 ) ) )
            // InternalFortXTrans.g:7388:1: ( ( rule__Primary__ExpressionAssignment_2_2 ) )
            {
            // InternalFortXTrans.g:7388:1: ( ( rule__Primary__ExpressionAssignment_2_2 ) )
            // InternalFortXTrans.g:7389:2: ( rule__Primary__ExpressionAssignment_2_2 )
            {
             before(grammarAccess.getPrimaryAccess().getExpressionAssignment_2_2()); 
            // InternalFortXTrans.g:7390:2: ( rule__Primary__ExpressionAssignment_2_2 )
            // InternalFortXTrans.g:7390:3: rule__Primary__ExpressionAssignment_2_2
            {
            pushFollow(FOLLOW_2);
            rule__Primary__ExpressionAssignment_2_2();

            state._fsp--;


            }

             after(grammarAccess.getPrimaryAccess().getExpressionAssignment_2_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_2__2__Impl"


    // $ANTLR start "rule__Primary__Group_3__0"
    // InternalFortXTrans.g:7399:1: rule__Primary__Group_3__0 : rule__Primary__Group_3__0__Impl rule__Primary__Group_3__1 ;
    public final void rule__Primary__Group_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7403:1: ( rule__Primary__Group_3__0__Impl rule__Primary__Group_3__1 )
            // InternalFortXTrans.g:7404:2: rule__Primary__Group_3__0__Impl rule__Primary__Group_3__1
            {
            pushFollow(FOLLOW_32);
            rule__Primary__Group_3__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Primary__Group_3__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_3__0"


    // $ANTLR start "rule__Primary__Group_3__0__Impl"
    // InternalFortXTrans.g:7411:1: rule__Primary__Group_3__0__Impl : ( () ) ;
    public final void rule__Primary__Group_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7415:1: ( ( () ) )
            // InternalFortXTrans.g:7416:1: ( () )
            {
            // InternalFortXTrans.g:7416:1: ( () )
            // InternalFortXTrans.g:7417:2: ()
            {
             before(grammarAccess.getPrimaryAccess().getParanAction_3_0()); 
            // InternalFortXTrans.g:7418:2: ()
            // InternalFortXTrans.g:7418:3: 
            {
            }

             after(grammarAccess.getPrimaryAccess().getParanAction_3_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_3__0__Impl"


    // $ANTLR start "rule__Primary__Group_3__1"
    // InternalFortXTrans.g:7426:1: rule__Primary__Group_3__1 : rule__Primary__Group_3__1__Impl rule__Primary__Group_3__2 ;
    public final void rule__Primary__Group_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7430:1: ( rule__Primary__Group_3__1__Impl rule__Primary__Group_3__2 )
            // InternalFortXTrans.g:7431:2: rule__Primary__Group_3__1__Impl rule__Primary__Group_3__2
            {
            pushFollow(FOLLOW_32);
            rule__Primary__Group_3__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Primary__Group_3__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_3__1"


    // $ANTLR start "rule__Primary__Group_3__1__Impl"
    // InternalFortXTrans.g:7438:1: rule__Primary__Group_3__1__Impl : ( '(' ) ;
    public final void rule__Primary__Group_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7442:1: ( ( '(' ) )
            // InternalFortXTrans.g:7443:1: ( '(' )
            {
            // InternalFortXTrans.g:7443:1: ( '(' )
            // InternalFortXTrans.g:7444:2: '('
            {
             before(grammarAccess.getPrimaryAccess().getLeftParenthesisKeyword_3_1()); 
            match(input,33,FOLLOW_2); 
             after(grammarAccess.getPrimaryAccess().getLeftParenthesisKeyword_3_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_3__1__Impl"


    // $ANTLR start "rule__Primary__Group_3__2"
    // InternalFortXTrans.g:7453:1: rule__Primary__Group_3__2 : rule__Primary__Group_3__2__Impl rule__Primary__Group_3__3 ;
    public final void rule__Primary__Group_3__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7457:1: ( rule__Primary__Group_3__2__Impl rule__Primary__Group_3__3 )
            // InternalFortXTrans.g:7458:2: rule__Primary__Group_3__2__Impl rule__Primary__Group_3__3
            {
            pushFollow(FOLLOW_23);
            rule__Primary__Group_3__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Primary__Group_3__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_3__2"


    // $ANTLR start "rule__Primary__Group_3__2__Impl"
    // InternalFortXTrans.g:7465:1: rule__Primary__Group_3__2__Impl : ( ( rule__Primary__ExpAssignment_3_2 ) ) ;
    public final void rule__Primary__Group_3__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7469:1: ( ( ( rule__Primary__ExpAssignment_3_2 ) ) )
            // InternalFortXTrans.g:7470:1: ( ( rule__Primary__ExpAssignment_3_2 ) )
            {
            // InternalFortXTrans.g:7470:1: ( ( rule__Primary__ExpAssignment_3_2 ) )
            // InternalFortXTrans.g:7471:2: ( rule__Primary__ExpAssignment_3_2 )
            {
             before(grammarAccess.getPrimaryAccess().getExpAssignment_3_2()); 
            // InternalFortXTrans.g:7472:2: ( rule__Primary__ExpAssignment_3_2 )
            // InternalFortXTrans.g:7472:3: rule__Primary__ExpAssignment_3_2
            {
            pushFollow(FOLLOW_2);
            rule__Primary__ExpAssignment_3_2();

            state._fsp--;


            }

             after(grammarAccess.getPrimaryAccess().getExpAssignment_3_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_3__2__Impl"


    // $ANTLR start "rule__Primary__Group_3__3"
    // InternalFortXTrans.g:7480:1: rule__Primary__Group_3__3 : rule__Primary__Group_3__3__Impl ;
    public final void rule__Primary__Group_3__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7484:1: ( rule__Primary__Group_3__3__Impl )
            // InternalFortXTrans.g:7485:2: rule__Primary__Group_3__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Primary__Group_3__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_3__3"


    // $ANTLR start "rule__Primary__Group_3__3__Impl"
    // InternalFortXTrans.g:7491:1: rule__Primary__Group_3__3__Impl : ( ')' ) ;
    public final void rule__Primary__Group_3__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7495:1: ( ( ')' ) )
            // InternalFortXTrans.g:7496:1: ( ')' )
            {
            // InternalFortXTrans.g:7496:1: ( ')' )
            // InternalFortXTrans.g:7497:2: ')'
            {
             before(grammarAccess.getPrimaryAccess().getRightParenthesisKeyword_3_3()); 
            match(input,34,FOLLOW_2); 
             after(grammarAccess.getPrimaryAccess().getRightParenthesisKeyword_3_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__Group_3__3__Impl"


    // $ANTLR start "rule__ExprList__Group__0"
    // InternalFortXTrans.g:7507:1: rule__ExprList__Group__0 : rule__ExprList__Group__0__Impl rule__ExprList__Group__1 ;
    public final void rule__ExprList__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7511:1: ( rule__ExprList__Group__0__Impl rule__ExprList__Group__1 )
            // InternalFortXTrans.g:7512:2: rule__ExprList__Group__0__Impl rule__ExprList__Group__1
            {
            pushFollow(FOLLOW_24);
            rule__ExprList__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ExprList__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExprList__Group__0"


    // $ANTLR start "rule__ExprList__Group__0__Impl"
    // InternalFortXTrans.g:7519:1: rule__ExprList__Group__0__Impl : ( ( rule__ExprList__ExpsAssignment_0 ) ) ;
    public final void rule__ExprList__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7523:1: ( ( ( rule__ExprList__ExpsAssignment_0 ) ) )
            // InternalFortXTrans.g:7524:1: ( ( rule__ExprList__ExpsAssignment_0 ) )
            {
            // InternalFortXTrans.g:7524:1: ( ( rule__ExprList__ExpsAssignment_0 ) )
            // InternalFortXTrans.g:7525:2: ( rule__ExprList__ExpsAssignment_0 )
            {
             before(grammarAccess.getExprListAccess().getExpsAssignment_0()); 
            // InternalFortXTrans.g:7526:2: ( rule__ExprList__ExpsAssignment_0 )
            // InternalFortXTrans.g:7526:3: rule__ExprList__ExpsAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__ExprList__ExpsAssignment_0();

            state._fsp--;


            }

             after(grammarAccess.getExprListAccess().getExpsAssignment_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExprList__Group__0__Impl"


    // $ANTLR start "rule__ExprList__Group__1"
    // InternalFortXTrans.g:7534:1: rule__ExprList__Group__1 : rule__ExprList__Group__1__Impl ;
    public final void rule__ExprList__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7538:1: ( rule__ExprList__Group__1__Impl )
            // InternalFortXTrans.g:7539:2: rule__ExprList__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ExprList__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExprList__Group__1"


    // $ANTLR start "rule__ExprList__Group__1__Impl"
    // InternalFortXTrans.g:7545:1: rule__ExprList__Group__1__Impl : ( ( rule__ExprList__Group_1__0 )* ) ;
    public final void rule__ExprList__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7549:1: ( ( ( rule__ExprList__Group_1__0 )* ) )
            // InternalFortXTrans.g:7550:1: ( ( rule__ExprList__Group_1__0 )* )
            {
            // InternalFortXTrans.g:7550:1: ( ( rule__ExprList__Group_1__0 )* )
            // InternalFortXTrans.g:7551:2: ( rule__ExprList__Group_1__0 )*
            {
             before(grammarAccess.getExprListAccess().getGroup_1()); 
            // InternalFortXTrans.g:7552:2: ( rule__ExprList__Group_1__0 )*
            loop66:
            do {
                int alt66=2;
                int LA66_0 = input.LA(1);

                if ( (LA66_0==29) ) {
                    alt66=1;
                }


                switch (alt66) {
            	case 1 :
            	    // InternalFortXTrans.g:7552:3: rule__ExprList__Group_1__0
            	    {
            	    pushFollow(FOLLOW_15);
            	    rule__ExprList__Group_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop66;
                }
            } while (true);

             after(grammarAccess.getExprListAccess().getGroup_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExprList__Group__1__Impl"


    // $ANTLR start "rule__ExprList__Group_1__0"
    // InternalFortXTrans.g:7561:1: rule__ExprList__Group_1__0 : rule__ExprList__Group_1__0__Impl rule__ExprList__Group_1__1 ;
    public final void rule__ExprList__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7565:1: ( rule__ExprList__Group_1__0__Impl rule__ExprList__Group_1__1 )
            // InternalFortXTrans.g:7566:2: rule__ExprList__Group_1__0__Impl rule__ExprList__Group_1__1
            {
            pushFollow(FOLLOW_32);
            rule__ExprList__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ExprList__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExprList__Group_1__0"


    // $ANTLR start "rule__ExprList__Group_1__0__Impl"
    // InternalFortXTrans.g:7573:1: rule__ExprList__Group_1__0__Impl : ( ',' ) ;
    public final void rule__ExprList__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7577:1: ( ( ',' ) )
            // InternalFortXTrans.g:7578:1: ( ',' )
            {
            // InternalFortXTrans.g:7578:1: ( ',' )
            // InternalFortXTrans.g:7579:2: ','
            {
             before(grammarAccess.getExprListAccess().getCommaKeyword_1_0()); 
            match(input,29,FOLLOW_2); 
             after(grammarAccess.getExprListAccess().getCommaKeyword_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExprList__Group_1__0__Impl"


    // $ANTLR start "rule__ExprList__Group_1__1"
    // InternalFortXTrans.g:7588:1: rule__ExprList__Group_1__1 : rule__ExprList__Group_1__1__Impl ;
    public final void rule__ExprList__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7592:1: ( rule__ExprList__Group_1__1__Impl )
            // InternalFortXTrans.g:7593:2: rule__ExprList__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ExprList__Group_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExprList__Group_1__1"


    // $ANTLR start "rule__ExprList__Group_1__1__Impl"
    // InternalFortXTrans.g:7599:1: rule__ExprList__Group_1__1__Impl : ( ( rule__ExprList__ExpAssignment_1_1 ) ) ;
    public final void rule__ExprList__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7603:1: ( ( ( rule__ExprList__ExpAssignment_1_1 ) ) )
            // InternalFortXTrans.g:7604:1: ( ( rule__ExprList__ExpAssignment_1_1 ) )
            {
            // InternalFortXTrans.g:7604:1: ( ( rule__ExprList__ExpAssignment_1_1 ) )
            // InternalFortXTrans.g:7605:2: ( rule__ExprList__ExpAssignment_1_1 )
            {
             before(grammarAccess.getExprListAccess().getExpAssignment_1_1()); 
            // InternalFortXTrans.g:7606:2: ( rule__ExprList__ExpAssignment_1_1 )
            // InternalFortXTrans.g:7606:3: rule__ExprList__ExpAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__ExprList__ExpAssignment_1_1();

            state._fsp--;


            }

             after(grammarAccess.getExprListAccess().getExpAssignment_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExprList__Group_1__1__Impl"


    // $ANTLR start "rule__ExprTail__Group__0"
    // InternalFortXTrans.g:7615:1: rule__ExprTail__Group__0 : rule__ExprTail__Group__0__Impl rule__ExprTail__Group__1 ;
    public final void rule__ExprTail__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7619:1: ( rule__ExprTail__Group__0__Impl rule__ExprTail__Group__1 )
            // InternalFortXTrans.g:7620:2: rule__ExprTail__Group__0__Impl rule__ExprTail__Group__1
            {
            pushFollow(FOLLOW_5);
            rule__ExprTail__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ExprTail__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExprTail__Group__0"


    // $ANTLR start "rule__ExprTail__Group__0__Impl"
    // InternalFortXTrans.g:7627:1: rule__ExprTail__Group__0__Impl : ( 'as' ) ;
    public final void rule__ExprTail__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7631:1: ( ( 'as' ) )
            // InternalFortXTrans.g:7632:1: ( 'as' )
            {
            // InternalFortXTrans.g:7632:1: ( 'as' )
            // InternalFortXTrans.g:7633:2: 'as'
            {
             before(grammarAccess.getExprTailAccess().getAsKeyword_0()); 
            match(input,32,FOLLOW_2); 
             after(grammarAccess.getExprTailAccess().getAsKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExprTail__Group__0__Impl"


    // $ANTLR start "rule__ExprTail__Group__1"
    // InternalFortXTrans.g:7642:1: rule__ExprTail__Group__1 : rule__ExprTail__Group__1__Impl ;
    public final void rule__ExprTail__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7646:1: ( rule__ExprTail__Group__1__Impl )
            // InternalFortXTrans.g:7647:2: rule__ExprTail__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ExprTail__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExprTail__Group__1"


    // $ANTLR start "rule__ExprTail__Group__1__Impl"
    // InternalFortXTrans.g:7653:1: rule__ExprTail__Group__1__Impl : ( ( rule__ExprTail__TypeAssignment_1 ) ) ;
    public final void rule__ExprTail__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7657:1: ( ( ( rule__ExprTail__TypeAssignment_1 ) ) )
            // InternalFortXTrans.g:7658:1: ( ( rule__ExprTail__TypeAssignment_1 ) )
            {
            // InternalFortXTrans.g:7658:1: ( ( rule__ExprTail__TypeAssignment_1 ) )
            // InternalFortXTrans.g:7659:2: ( rule__ExprTail__TypeAssignment_1 )
            {
             before(grammarAccess.getExprTailAccess().getTypeAssignment_1()); 
            // InternalFortXTrans.g:7660:2: ( rule__ExprTail__TypeAssignment_1 )
            // InternalFortXTrans.g:7660:3: rule__ExprTail__TypeAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__ExprTail__TypeAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getExprTailAccess().getTypeAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExprTail__Group__1__Impl"


    // $ANTLR start "rule__DelimitedExpr__Group_1__0"
    // InternalFortXTrans.g:7669:1: rule__DelimitedExpr__Group_1__0 : rule__DelimitedExpr__Group_1__0__Impl rule__DelimitedExpr__Group_1__1 ;
    public final void rule__DelimitedExpr__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7673:1: ( rule__DelimitedExpr__Group_1__0__Impl rule__DelimitedExpr__Group_1__1 )
            // InternalFortXTrans.g:7674:2: rule__DelimitedExpr__Group_1__0__Impl rule__DelimitedExpr__Group_1__1
            {
            pushFollow(FOLLOW_32);
            rule__DelimitedExpr__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DelimitedExpr__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Group_1__0"


    // $ANTLR start "rule__DelimitedExpr__Group_1__0__Impl"
    // InternalFortXTrans.g:7681:1: rule__DelimitedExpr__Group_1__0__Impl : ( ( rule__DelimitedExpr__RetAssignment_1_0 ) ) ;
    public final void rule__DelimitedExpr__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7685:1: ( ( ( rule__DelimitedExpr__RetAssignment_1_0 ) ) )
            // InternalFortXTrans.g:7686:1: ( ( rule__DelimitedExpr__RetAssignment_1_0 ) )
            {
            // InternalFortXTrans.g:7686:1: ( ( rule__DelimitedExpr__RetAssignment_1_0 ) )
            // InternalFortXTrans.g:7687:2: ( rule__DelimitedExpr__RetAssignment_1_0 )
            {
             before(grammarAccess.getDelimitedExprAccess().getRetAssignment_1_0()); 
            // InternalFortXTrans.g:7688:2: ( rule__DelimitedExpr__RetAssignment_1_0 )
            // InternalFortXTrans.g:7688:3: rule__DelimitedExpr__RetAssignment_1_0
            {
            pushFollow(FOLLOW_2);
            rule__DelimitedExpr__RetAssignment_1_0();

            state._fsp--;


            }

             after(grammarAccess.getDelimitedExprAccess().getRetAssignment_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Group_1__0__Impl"


    // $ANTLR start "rule__DelimitedExpr__Group_1__1"
    // InternalFortXTrans.g:7696:1: rule__DelimitedExpr__Group_1__1 : rule__DelimitedExpr__Group_1__1__Impl ;
    public final void rule__DelimitedExpr__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7700:1: ( rule__DelimitedExpr__Group_1__1__Impl )
            // InternalFortXTrans.g:7701:2: rule__DelimitedExpr__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__DelimitedExpr__Group_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Group_1__1"


    // $ANTLR start "rule__DelimitedExpr__Group_1__1__Impl"
    // InternalFortXTrans.g:7707:1: rule__DelimitedExpr__Group_1__1__Impl : ( ( rule__DelimitedExpr__BlockAssignment_1_1 ) ) ;
    public final void rule__DelimitedExpr__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7711:1: ( ( ( rule__DelimitedExpr__BlockAssignment_1_1 ) ) )
            // InternalFortXTrans.g:7712:1: ( ( rule__DelimitedExpr__BlockAssignment_1_1 ) )
            {
            // InternalFortXTrans.g:7712:1: ( ( rule__DelimitedExpr__BlockAssignment_1_1 ) )
            // InternalFortXTrans.g:7713:2: ( rule__DelimitedExpr__BlockAssignment_1_1 )
            {
             before(grammarAccess.getDelimitedExprAccess().getBlockAssignment_1_1()); 
            // InternalFortXTrans.g:7714:2: ( rule__DelimitedExpr__BlockAssignment_1_1 )
            // InternalFortXTrans.g:7714:3: rule__DelimitedExpr__BlockAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__DelimitedExpr__BlockAssignment_1_1();

            state._fsp--;


            }

             after(grammarAccess.getDelimitedExprAccess().getBlockAssignment_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Group_1__1__Impl"


    // $ANTLR start "rule__DelimitedExpr__Group_2__0"
    // InternalFortXTrans.g:7723:1: rule__DelimitedExpr__Group_2__0 : rule__DelimitedExpr__Group_2__0__Impl rule__DelimitedExpr__Group_2__1 ;
    public final void rule__DelimitedExpr__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7727:1: ( rule__DelimitedExpr__Group_2__0__Impl rule__DelimitedExpr__Group_2__1 )
            // InternalFortXTrans.g:7728:2: rule__DelimitedExpr__Group_2__0__Impl rule__DelimitedExpr__Group_2__1
            {
            pushFollow(FOLLOW_32);
            rule__DelimitedExpr__Group_2__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DelimitedExpr__Group_2__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Group_2__0"


    // $ANTLR start "rule__DelimitedExpr__Group_2__0__Impl"
    // InternalFortXTrans.g:7735:1: rule__DelimitedExpr__Group_2__0__Impl : ( ( rule__DelimitedExpr__AwhileAssignment_2_0 ) ) ;
    public final void rule__DelimitedExpr__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7739:1: ( ( ( rule__DelimitedExpr__AwhileAssignment_2_0 ) ) )
            // InternalFortXTrans.g:7740:1: ( ( rule__DelimitedExpr__AwhileAssignment_2_0 ) )
            {
            // InternalFortXTrans.g:7740:1: ( ( rule__DelimitedExpr__AwhileAssignment_2_0 ) )
            // InternalFortXTrans.g:7741:2: ( rule__DelimitedExpr__AwhileAssignment_2_0 )
            {
             before(grammarAccess.getDelimitedExprAccess().getAwhileAssignment_2_0()); 
            // InternalFortXTrans.g:7742:2: ( rule__DelimitedExpr__AwhileAssignment_2_0 )
            // InternalFortXTrans.g:7742:3: rule__DelimitedExpr__AwhileAssignment_2_0
            {
            pushFollow(FOLLOW_2);
            rule__DelimitedExpr__AwhileAssignment_2_0();

            state._fsp--;


            }

             after(grammarAccess.getDelimitedExprAccess().getAwhileAssignment_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Group_2__0__Impl"


    // $ANTLR start "rule__DelimitedExpr__Group_2__1"
    // InternalFortXTrans.g:7750:1: rule__DelimitedExpr__Group_2__1 : rule__DelimitedExpr__Group_2__1__Impl rule__DelimitedExpr__Group_2__2 ;
    public final void rule__DelimitedExpr__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7754:1: ( rule__DelimitedExpr__Group_2__1__Impl rule__DelimitedExpr__Group_2__2 )
            // InternalFortXTrans.g:7755:2: rule__DelimitedExpr__Group_2__1__Impl rule__DelimitedExpr__Group_2__2
            {
            pushFollow(FOLLOW_62);
            rule__DelimitedExpr__Group_2__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DelimitedExpr__Group_2__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Group_2__1"


    // $ANTLR start "rule__DelimitedExpr__Group_2__1__Impl"
    // InternalFortXTrans.g:7762:1: rule__DelimitedExpr__Group_2__1__Impl : ( ( rule__DelimitedExpr__ExprAssignment_2_1 ) ) ;
    public final void rule__DelimitedExpr__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7766:1: ( ( ( rule__DelimitedExpr__ExprAssignment_2_1 ) ) )
            // InternalFortXTrans.g:7767:1: ( ( rule__DelimitedExpr__ExprAssignment_2_1 ) )
            {
            // InternalFortXTrans.g:7767:1: ( ( rule__DelimitedExpr__ExprAssignment_2_1 ) )
            // InternalFortXTrans.g:7768:2: ( rule__DelimitedExpr__ExprAssignment_2_1 )
            {
             before(grammarAccess.getDelimitedExprAccess().getExprAssignment_2_1()); 
            // InternalFortXTrans.g:7769:2: ( rule__DelimitedExpr__ExprAssignment_2_1 )
            // InternalFortXTrans.g:7769:3: rule__DelimitedExpr__ExprAssignment_2_1
            {
            pushFollow(FOLLOW_2);
            rule__DelimitedExpr__ExprAssignment_2_1();

            state._fsp--;


            }

             after(grammarAccess.getDelimitedExprAccess().getExprAssignment_2_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Group_2__1__Impl"


    // $ANTLR start "rule__DelimitedExpr__Group_2__2"
    // InternalFortXTrans.g:7777:1: rule__DelimitedExpr__Group_2__2 : rule__DelimitedExpr__Group_2__2__Impl ;
    public final void rule__DelimitedExpr__Group_2__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7781:1: ( rule__DelimitedExpr__Group_2__2__Impl )
            // InternalFortXTrans.g:7782:2: rule__DelimitedExpr__Group_2__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__DelimitedExpr__Group_2__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Group_2__2"


    // $ANTLR start "rule__DelimitedExpr__Group_2__2__Impl"
    // InternalFortXTrans.g:7788:1: rule__DelimitedExpr__Group_2__2__Impl : ( ( rule__DelimitedExpr__WhiledodAssignment_2_2 ) ) ;
    public final void rule__DelimitedExpr__Group_2__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7792:1: ( ( ( rule__DelimitedExpr__WhiledodAssignment_2_2 ) ) )
            // InternalFortXTrans.g:7793:1: ( ( rule__DelimitedExpr__WhiledodAssignment_2_2 ) )
            {
            // InternalFortXTrans.g:7793:1: ( ( rule__DelimitedExpr__WhiledodAssignment_2_2 ) )
            // InternalFortXTrans.g:7794:2: ( rule__DelimitedExpr__WhiledodAssignment_2_2 )
            {
             before(grammarAccess.getDelimitedExprAccess().getWhiledodAssignment_2_2()); 
            // InternalFortXTrans.g:7795:2: ( rule__DelimitedExpr__WhiledodAssignment_2_2 )
            // InternalFortXTrans.g:7795:3: rule__DelimitedExpr__WhiledodAssignment_2_2
            {
            pushFollow(FOLLOW_2);
            rule__DelimitedExpr__WhiledodAssignment_2_2();

            state._fsp--;


            }

             after(grammarAccess.getDelimitedExprAccess().getWhiledodAssignment_2_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Group_2__2__Impl"


    // $ANTLR start "rule__DelimitedExpr__Group_3__0"
    // InternalFortXTrans.g:7804:1: rule__DelimitedExpr__Group_3__0 : rule__DelimitedExpr__Group_3__0__Impl rule__DelimitedExpr__Group_3__1 ;
    public final void rule__DelimitedExpr__Group_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7808:1: ( rule__DelimitedExpr__Group_3__0__Impl rule__DelimitedExpr__Group_3__1 )
            // InternalFortXTrans.g:7809:2: rule__DelimitedExpr__Group_3__0__Impl rule__DelimitedExpr__Group_3__1
            {
            pushFollow(FOLLOW_63);
            rule__DelimitedExpr__Group_3__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DelimitedExpr__Group_3__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Group_3__0"


    // $ANTLR start "rule__DelimitedExpr__Group_3__0__Impl"
    // InternalFortXTrans.g:7816:1: rule__DelimitedExpr__Group_3__0__Impl : ( ( rule__DelimitedExpr__AforAssignment_3_0 ) ) ;
    public final void rule__DelimitedExpr__Group_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7820:1: ( ( ( rule__DelimitedExpr__AforAssignment_3_0 ) ) )
            // InternalFortXTrans.g:7821:1: ( ( rule__DelimitedExpr__AforAssignment_3_0 ) )
            {
            // InternalFortXTrans.g:7821:1: ( ( rule__DelimitedExpr__AforAssignment_3_0 ) )
            // InternalFortXTrans.g:7822:2: ( rule__DelimitedExpr__AforAssignment_3_0 )
            {
             before(grammarAccess.getDelimitedExprAccess().getAforAssignment_3_0()); 
            // InternalFortXTrans.g:7823:2: ( rule__DelimitedExpr__AforAssignment_3_0 )
            // InternalFortXTrans.g:7823:3: rule__DelimitedExpr__AforAssignment_3_0
            {
            pushFollow(FOLLOW_2);
            rule__DelimitedExpr__AforAssignment_3_0();

            state._fsp--;


            }

             after(grammarAccess.getDelimitedExprAccess().getAforAssignment_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Group_3__0__Impl"


    // $ANTLR start "rule__DelimitedExpr__Group_3__1"
    // InternalFortXTrans.g:7831:1: rule__DelimitedExpr__Group_3__1 : rule__DelimitedExpr__Group_3__1__Impl rule__DelimitedExpr__Group_3__2 ;
    public final void rule__DelimitedExpr__Group_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7835:1: ( rule__DelimitedExpr__Group_3__1__Impl rule__DelimitedExpr__Group_3__2 )
            // InternalFortXTrans.g:7836:2: rule__DelimitedExpr__Group_3__1__Impl rule__DelimitedExpr__Group_3__2
            {
            pushFollow(FOLLOW_62);
            rule__DelimitedExpr__Group_3__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DelimitedExpr__Group_3__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Group_3__1"


    // $ANTLR start "rule__DelimitedExpr__Group_3__1__Impl"
    // InternalFortXTrans.g:7843:1: rule__DelimitedExpr__Group_3__1__Impl : ( ( rule__DelimitedExpr__GenAssignment_3_1 ) ) ;
    public final void rule__DelimitedExpr__Group_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7847:1: ( ( ( rule__DelimitedExpr__GenAssignment_3_1 ) ) )
            // InternalFortXTrans.g:7848:1: ( ( rule__DelimitedExpr__GenAssignment_3_1 ) )
            {
            // InternalFortXTrans.g:7848:1: ( ( rule__DelimitedExpr__GenAssignment_3_1 ) )
            // InternalFortXTrans.g:7849:2: ( rule__DelimitedExpr__GenAssignment_3_1 )
            {
             before(grammarAccess.getDelimitedExprAccess().getGenAssignment_3_1()); 
            // InternalFortXTrans.g:7850:2: ( rule__DelimitedExpr__GenAssignment_3_1 )
            // InternalFortXTrans.g:7850:3: rule__DelimitedExpr__GenAssignment_3_1
            {
            pushFollow(FOLLOW_2);
            rule__DelimitedExpr__GenAssignment_3_1();

            state._fsp--;


            }

             after(grammarAccess.getDelimitedExprAccess().getGenAssignment_3_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Group_3__1__Impl"


    // $ANTLR start "rule__DelimitedExpr__Group_3__2"
    // InternalFortXTrans.g:7858:1: rule__DelimitedExpr__Group_3__2 : rule__DelimitedExpr__Group_3__2__Impl rule__DelimitedExpr__Group_3__3 ;
    public final void rule__DelimitedExpr__Group_3__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7862:1: ( rule__DelimitedExpr__Group_3__2__Impl rule__DelimitedExpr__Group_3__3 )
            // InternalFortXTrans.g:7863:2: rule__DelimitedExpr__Group_3__2__Impl rule__DelimitedExpr__Group_3__3
            {
            pushFollow(FOLLOW_64);
            rule__DelimitedExpr__Group_3__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DelimitedExpr__Group_3__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Group_3__2"


    // $ANTLR start "rule__DelimitedExpr__Group_3__2__Impl"
    // InternalFortXTrans.g:7870:1: rule__DelimitedExpr__Group_3__2__Impl : ( ( rule__DelimitedExpr__DofrontAssignment_3_2 ) ) ;
    public final void rule__DelimitedExpr__Group_3__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7874:1: ( ( ( rule__DelimitedExpr__DofrontAssignment_3_2 ) ) )
            // InternalFortXTrans.g:7875:1: ( ( rule__DelimitedExpr__DofrontAssignment_3_2 ) )
            {
            // InternalFortXTrans.g:7875:1: ( ( rule__DelimitedExpr__DofrontAssignment_3_2 ) )
            // InternalFortXTrans.g:7876:2: ( rule__DelimitedExpr__DofrontAssignment_3_2 )
            {
             before(grammarAccess.getDelimitedExprAccess().getDofrontAssignment_3_2()); 
            // InternalFortXTrans.g:7877:2: ( rule__DelimitedExpr__DofrontAssignment_3_2 )
            // InternalFortXTrans.g:7877:3: rule__DelimitedExpr__DofrontAssignment_3_2
            {
            pushFollow(FOLLOW_2);
            rule__DelimitedExpr__DofrontAssignment_3_2();

            state._fsp--;


            }

             after(grammarAccess.getDelimitedExprAccess().getDofrontAssignment_3_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Group_3__2__Impl"


    // $ANTLR start "rule__DelimitedExpr__Group_3__3"
    // InternalFortXTrans.g:7885:1: rule__DelimitedExpr__Group_3__3 : rule__DelimitedExpr__Group_3__3__Impl ;
    public final void rule__DelimitedExpr__Group_3__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7889:1: ( rule__DelimitedExpr__Group_3__3__Impl )
            // InternalFortXTrans.g:7890:2: rule__DelimitedExpr__Group_3__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__DelimitedExpr__Group_3__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Group_3__3"


    // $ANTLR start "rule__DelimitedExpr__Group_3__3__Impl"
    // InternalFortXTrans.g:7896:1: rule__DelimitedExpr__Group_3__3__Impl : ( 'end' ) ;
    public final void rule__DelimitedExpr__Group_3__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7900:1: ( ( 'end' ) )
            // InternalFortXTrans.g:7901:1: ( 'end' )
            {
            // InternalFortXTrans.g:7901:1: ( 'end' )
            // InternalFortXTrans.g:7902:2: 'end'
            {
             before(grammarAccess.getDelimitedExprAccess().getEndKeyword_3_3()); 
            match(input,26,FOLLOW_2); 
             after(grammarAccess.getDelimitedExprAccess().getEndKeyword_3_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Group_3__3__Impl"


    // $ANTLR start "rule__DelimitedExpr__Group_4__0"
    // InternalFortXTrans.g:7912:1: rule__DelimitedExpr__Group_4__0 : rule__DelimitedExpr__Group_4__0__Impl rule__DelimitedExpr__Group_4__1 ;
    public final void rule__DelimitedExpr__Group_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7916:1: ( rule__DelimitedExpr__Group_4__0__Impl rule__DelimitedExpr__Group_4__1 )
            // InternalFortXTrans.g:7917:2: rule__DelimitedExpr__Group_4__0__Impl rule__DelimitedExpr__Group_4__1
            {
            pushFollow(FOLLOW_32);
            rule__DelimitedExpr__Group_4__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DelimitedExpr__Group_4__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Group_4__0"


    // $ANTLR start "rule__DelimitedExpr__Group_4__0__Impl"
    // InternalFortXTrans.g:7924:1: rule__DelimitedExpr__Group_4__0__Impl : ( ( rule__DelimitedExpr__AnifAssignment_4_0 ) ) ;
    public final void rule__DelimitedExpr__Group_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7928:1: ( ( ( rule__DelimitedExpr__AnifAssignment_4_0 ) ) )
            // InternalFortXTrans.g:7929:1: ( ( rule__DelimitedExpr__AnifAssignment_4_0 ) )
            {
            // InternalFortXTrans.g:7929:1: ( ( rule__DelimitedExpr__AnifAssignment_4_0 ) )
            // InternalFortXTrans.g:7930:2: ( rule__DelimitedExpr__AnifAssignment_4_0 )
            {
             before(grammarAccess.getDelimitedExprAccess().getAnifAssignment_4_0()); 
            // InternalFortXTrans.g:7931:2: ( rule__DelimitedExpr__AnifAssignment_4_0 )
            // InternalFortXTrans.g:7931:3: rule__DelimitedExpr__AnifAssignment_4_0
            {
            pushFollow(FOLLOW_2);
            rule__DelimitedExpr__AnifAssignment_4_0();

            state._fsp--;


            }

             after(grammarAccess.getDelimitedExprAccess().getAnifAssignment_4_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Group_4__0__Impl"


    // $ANTLR start "rule__DelimitedExpr__Group_4__1"
    // InternalFortXTrans.g:7939:1: rule__DelimitedExpr__Group_4__1 : rule__DelimitedExpr__Group_4__1__Impl rule__DelimitedExpr__Group_4__2 ;
    public final void rule__DelimitedExpr__Group_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7943:1: ( rule__DelimitedExpr__Group_4__1__Impl rule__DelimitedExpr__Group_4__2 )
            // InternalFortXTrans.g:7944:2: rule__DelimitedExpr__Group_4__1__Impl rule__DelimitedExpr__Group_4__2
            {
            pushFollow(FOLLOW_65);
            rule__DelimitedExpr__Group_4__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DelimitedExpr__Group_4__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Group_4__1"


    // $ANTLR start "rule__DelimitedExpr__Group_4__1__Impl"
    // InternalFortXTrans.g:7951:1: rule__DelimitedExpr__Group_4__1__Impl : ( ( rule__DelimitedExpr__CondAssignment_4_1 ) ) ;
    public final void rule__DelimitedExpr__Group_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7955:1: ( ( ( rule__DelimitedExpr__CondAssignment_4_1 ) ) )
            // InternalFortXTrans.g:7956:1: ( ( rule__DelimitedExpr__CondAssignment_4_1 ) )
            {
            // InternalFortXTrans.g:7956:1: ( ( rule__DelimitedExpr__CondAssignment_4_1 ) )
            // InternalFortXTrans.g:7957:2: ( rule__DelimitedExpr__CondAssignment_4_1 )
            {
             before(grammarAccess.getDelimitedExprAccess().getCondAssignment_4_1()); 
            // InternalFortXTrans.g:7958:2: ( rule__DelimitedExpr__CondAssignment_4_1 )
            // InternalFortXTrans.g:7958:3: rule__DelimitedExpr__CondAssignment_4_1
            {
            pushFollow(FOLLOW_2);
            rule__DelimitedExpr__CondAssignment_4_1();

            state._fsp--;


            }

             after(grammarAccess.getDelimitedExprAccess().getCondAssignment_4_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Group_4__1__Impl"


    // $ANTLR start "rule__DelimitedExpr__Group_4__2"
    // InternalFortXTrans.g:7966:1: rule__DelimitedExpr__Group_4__2 : rule__DelimitedExpr__Group_4__2__Impl rule__DelimitedExpr__Group_4__3 ;
    public final void rule__DelimitedExpr__Group_4__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7970:1: ( rule__DelimitedExpr__Group_4__2__Impl rule__DelimitedExpr__Group_4__3 )
            // InternalFortXTrans.g:7971:2: rule__DelimitedExpr__Group_4__2__Impl rule__DelimitedExpr__Group_4__3
            {
            pushFollow(FOLLOW_32);
            rule__DelimitedExpr__Group_4__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DelimitedExpr__Group_4__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Group_4__2"


    // $ANTLR start "rule__DelimitedExpr__Group_4__2__Impl"
    // InternalFortXTrans.g:7978:1: rule__DelimitedExpr__Group_4__2__Impl : ( 'then' ) ;
    public final void rule__DelimitedExpr__Group_4__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7982:1: ( ( 'then' ) )
            // InternalFortXTrans.g:7983:1: ( 'then' )
            {
            // InternalFortXTrans.g:7983:1: ( 'then' )
            // InternalFortXTrans.g:7984:2: 'then'
            {
             before(grammarAccess.getDelimitedExprAccess().getThenKeyword_4_2()); 
            match(input,47,FOLLOW_2); 
             after(grammarAccess.getDelimitedExprAccess().getThenKeyword_4_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Group_4__2__Impl"


    // $ANTLR start "rule__DelimitedExpr__Group_4__3"
    // InternalFortXTrans.g:7993:1: rule__DelimitedExpr__Group_4__3 : rule__DelimitedExpr__Group_4__3__Impl rule__DelimitedExpr__Group_4__4 ;
    public final void rule__DelimitedExpr__Group_4__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:7997:1: ( rule__DelimitedExpr__Group_4__3__Impl rule__DelimitedExpr__Group_4__4 )
            // InternalFortXTrans.g:7998:2: rule__DelimitedExpr__Group_4__3__Impl rule__DelimitedExpr__Group_4__4
            {
            pushFollow(FOLLOW_66);
            rule__DelimitedExpr__Group_4__3__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DelimitedExpr__Group_4__4();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Group_4__3"


    // $ANTLR start "rule__DelimitedExpr__Group_4__3__Impl"
    // InternalFortXTrans.g:8005:1: rule__DelimitedExpr__Group_4__3__Impl : ( ( rule__DelimitedExpr__BlocksAssignment_4_3 ) ) ;
    public final void rule__DelimitedExpr__Group_4__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8009:1: ( ( ( rule__DelimitedExpr__BlocksAssignment_4_3 ) ) )
            // InternalFortXTrans.g:8010:1: ( ( rule__DelimitedExpr__BlocksAssignment_4_3 ) )
            {
            // InternalFortXTrans.g:8010:1: ( ( rule__DelimitedExpr__BlocksAssignment_4_3 ) )
            // InternalFortXTrans.g:8011:2: ( rule__DelimitedExpr__BlocksAssignment_4_3 )
            {
             before(grammarAccess.getDelimitedExprAccess().getBlocksAssignment_4_3()); 
            // InternalFortXTrans.g:8012:2: ( rule__DelimitedExpr__BlocksAssignment_4_3 )
            // InternalFortXTrans.g:8012:3: rule__DelimitedExpr__BlocksAssignment_4_3
            {
            pushFollow(FOLLOW_2);
            rule__DelimitedExpr__BlocksAssignment_4_3();

            state._fsp--;


            }

             after(grammarAccess.getDelimitedExprAccess().getBlocksAssignment_4_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Group_4__3__Impl"


    // $ANTLR start "rule__DelimitedExpr__Group_4__4"
    // InternalFortXTrans.g:8020:1: rule__DelimitedExpr__Group_4__4 : rule__DelimitedExpr__Group_4__4__Impl rule__DelimitedExpr__Group_4__5 ;
    public final void rule__DelimitedExpr__Group_4__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8024:1: ( rule__DelimitedExpr__Group_4__4__Impl rule__DelimitedExpr__Group_4__5 )
            // InternalFortXTrans.g:8025:2: rule__DelimitedExpr__Group_4__4__Impl rule__DelimitedExpr__Group_4__5
            {
            pushFollow(FOLLOW_66);
            rule__DelimitedExpr__Group_4__4__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DelimitedExpr__Group_4__5();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Group_4__4"


    // $ANTLR start "rule__DelimitedExpr__Group_4__4__Impl"
    // InternalFortXTrans.g:8032:1: rule__DelimitedExpr__Group_4__4__Impl : ( ( rule__DelimitedExpr__ElifsAssignment_4_4 )? ) ;
    public final void rule__DelimitedExpr__Group_4__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8036:1: ( ( ( rule__DelimitedExpr__ElifsAssignment_4_4 )? ) )
            // InternalFortXTrans.g:8037:1: ( ( rule__DelimitedExpr__ElifsAssignment_4_4 )? )
            {
            // InternalFortXTrans.g:8037:1: ( ( rule__DelimitedExpr__ElifsAssignment_4_4 )? )
            // InternalFortXTrans.g:8038:2: ( rule__DelimitedExpr__ElifsAssignment_4_4 )?
            {
             before(grammarAccess.getDelimitedExprAccess().getElifsAssignment_4_4()); 
            // InternalFortXTrans.g:8039:2: ( rule__DelimitedExpr__ElifsAssignment_4_4 )?
            int alt67=2;
            int LA67_0 = input.LA(1);

            if ( (LA67_0==48) ) {
                alt67=1;
            }
            switch (alt67) {
                case 1 :
                    // InternalFortXTrans.g:8039:3: rule__DelimitedExpr__ElifsAssignment_4_4
                    {
                    pushFollow(FOLLOW_2);
                    rule__DelimitedExpr__ElifsAssignment_4_4();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getDelimitedExprAccess().getElifsAssignment_4_4()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Group_4__4__Impl"


    // $ANTLR start "rule__DelimitedExpr__Group_4__5"
    // InternalFortXTrans.g:8047:1: rule__DelimitedExpr__Group_4__5 : rule__DelimitedExpr__Group_4__5__Impl rule__DelimitedExpr__Group_4__6 ;
    public final void rule__DelimitedExpr__Group_4__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8051:1: ( rule__DelimitedExpr__Group_4__5__Impl rule__DelimitedExpr__Group_4__6 )
            // InternalFortXTrans.g:8052:2: rule__DelimitedExpr__Group_4__5__Impl rule__DelimitedExpr__Group_4__6
            {
            pushFollow(FOLLOW_66);
            rule__DelimitedExpr__Group_4__5__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DelimitedExpr__Group_4__6();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Group_4__5"


    // $ANTLR start "rule__DelimitedExpr__Group_4__5__Impl"
    // InternalFortXTrans.g:8059:1: rule__DelimitedExpr__Group_4__5__Impl : ( ( rule__DelimitedExpr__ElsAssignment_4_5 )? ) ;
    public final void rule__DelimitedExpr__Group_4__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8063:1: ( ( ( rule__DelimitedExpr__ElsAssignment_4_5 )? ) )
            // InternalFortXTrans.g:8064:1: ( ( rule__DelimitedExpr__ElsAssignment_4_5 )? )
            {
            // InternalFortXTrans.g:8064:1: ( ( rule__DelimitedExpr__ElsAssignment_4_5 )? )
            // InternalFortXTrans.g:8065:2: ( rule__DelimitedExpr__ElsAssignment_4_5 )?
            {
             before(grammarAccess.getDelimitedExprAccess().getElsAssignment_4_5()); 
            // InternalFortXTrans.g:8066:2: ( rule__DelimitedExpr__ElsAssignment_4_5 )?
            int alt68=2;
            int LA68_0 = input.LA(1);

            if ( (LA68_0==49) ) {
                alt68=1;
            }
            switch (alt68) {
                case 1 :
                    // InternalFortXTrans.g:8066:3: rule__DelimitedExpr__ElsAssignment_4_5
                    {
                    pushFollow(FOLLOW_2);
                    rule__DelimitedExpr__ElsAssignment_4_5();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getDelimitedExprAccess().getElsAssignment_4_5()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Group_4__5__Impl"


    // $ANTLR start "rule__DelimitedExpr__Group_4__6"
    // InternalFortXTrans.g:8074:1: rule__DelimitedExpr__Group_4__6 : rule__DelimitedExpr__Group_4__6__Impl ;
    public final void rule__DelimitedExpr__Group_4__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8078:1: ( rule__DelimitedExpr__Group_4__6__Impl )
            // InternalFortXTrans.g:8079:2: rule__DelimitedExpr__Group_4__6__Impl
            {
            pushFollow(FOLLOW_2);
            rule__DelimitedExpr__Group_4__6__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Group_4__6"


    // $ANTLR start "rule__DelimitedExpr__Group_4__6__Impl"
    // InternalFortXTrans.g:8085:1: rule__DelimitedExpr__Group_4__6__Impl : ( 'end' ) ;
    public final void rule__DelimitedExpr__Group_4__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8089:1: ( ( 'end' ) )
            // InternalFortXTrans.g:8090:1: ( 'end' )
            {
            // InternalFortXTrans.g:8090:1: ( 'end' )
            // InternalFortXTrans.g:8091:2: 'end'
            {
             before(grammarAccess.getDelimitedExprAccess().getEndKeyword_4_6()); 
            match(input,26,FOLLOW_2); 
             after(grammarAccess.getDelimitedExprAccess().getEndKeyword_4_6()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__Group_4__6__Impl"


    // $ANTLR start "rule__Elifs__Group__0"
    // InternalFortXTrans.g:8101:1: rule__Elifs__Group__0 : rule__Elifs__Group__0__Impl rule__Elifs__Group__1 ;
    public final void rule__Elifs__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8105:1: ( rule__Elifs__Group__0__Impl rule__Elifs__Group__1 )
            // InternalFortXTrans.g:8106:2: rule__Elifs__Group__0__Impl rule__Elifs__Group__1
            {
            pushFollow(FOLLOW_67);
            rule__Elifs__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Elifs__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Elifs__Group__0"


    // $ANTLR start "rule__Elifs__Group__0__Impl"
    // InternalFortXTrans.g:8113:1: rule__Elifs__Group__0__Impl : ( ( rule__Elifs__EAssignment_0 ) ) ;
    public final void rule__Elifs__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8117:1: ( ( ( rule__Elifs__EAssignment_0 ) ) )
            // InternalFortXTrans.g:8118:1: ( ( rule__Elifs__EAssignment_0 ) )
            {
            // InternalFortXTrans.g:8118:1: ( ( rule__Elifs__EAssignment_0 ) )
            // InternalFortXTrans.g:8119:2: ( rule__Elifs__EAssignment_0 )
            {
             before(grammarAccess.getElifsAccess().getEAssignment_0()); 
            // InternalFortXTrans.g:8120:2: ( rule__Elifs__EAssignment_0 )
            // InternalFortXTrans.g:8120:3: rule__Elifs__EAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__Elifs__EAssignment_0();

            state._fsp--;


            }

             after(grammarAccess.getElifsAccess().getEAssignment_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Elifs__Group__0__Impl"


    // $ANTLR start "rule__Elifs__Group__1"
    // InternalFortXTrans.g:8128:1: rule__Elifs__Group__1 : rule__Elifs__Group__1__Impl ;
    public final void rule__Elifs__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8132:1: ( rule__Elifs__Group__1__Impl )
            // InternalFortXTrans.g:8133:2: rule__Elifs__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Elifs__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Elifs__Group__1"


    // $ANTLR start "rule__Elifs__Group__1__Impl"
    // InternalFortXTrans.g:8139:1: rule__Elifs__Group__1__Impl : ( ( rule__Elifs__EAssignment_1 )* ) ;
    public final void rule__Elifs__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8143:1: ( ( ( rule__Elifs__EAssignment_1 )* ) )
            // InternalFortXTrans.g:8144:1: ( ( rule__Elifs__EAssignment_1 )* )
            {
            // InternalFortXTrans.g:8144:1: ( ( rule__Elifs__EAssignment_1 )* )
            // InternalFortXTrans.g:8145:2: ( rule__Elifs__EAssignment_1 )*
            {
             before(grammarAccess.getElifsAccess().getEAssignment_1()); 
            // InternalFortXTrans.g:8146:2: ( rule__Elifs__EAssignment_1 )*
            loop69:
            do {
                int alt69=2;
                int LA69_0 = input.LA(1);

                if ( (LA69_0==48) ) {
                    alt69=1;
                }


                switch (alt69) {
            	case 1 :
            	    // InternalFortXTrans.g:8146:3: rule__Elifs__EAssignment_1
            	    {
            	    pushFollow(FOLLOW_68);
            	    rule__Elifs__EAssignment_1();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop69;
                }
            } while (true);

             after(grammarAccess.getElifsAccess().getEAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Elifs__Group__1__Impl"


    // $ANTLR start "rule__Elif__Group__0"
    // InternalFortXTrans.g:8155:1: rule__Elif__Group__0 : rule__Elif__Group__0__Impl rule__Elif__Group__1 ;
    public final void rule__Elif__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8159:1: ( rule__Elif__Group__0__Impl rule__Elif__Group__1 )
            // InternalFortXTrans.g:8160:2: rule__Elif__Group__0__Impl rule__Elif__Group__1
            {
            pushFollow(FOLLOW_32);
            rule__Elif__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Elif__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Elif__Group__0"


    // $ANTLR start "rule__Elif__Group__0__Impl"
    // InternalFortXTrans.g:8167:1: rule__Elif__Group__0__Impl : ( 'elif' ) ;
    public final void rule__Elif__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8171:1: ( ( 'elif' ) )
            // InternalFortXTrans.g:8172:1: ( 'elif' )
            {
            // InternalFortXTrans.g:8172:1: ( 'elif' )
            // InternalFortXTrans.g:8173:2: 'elif'
            {
             before(grammarAccess.getElifAccess().getElifKeyword_0()); 
            match(input,48,FOLLOW_2); 
             after(grammarAccess.getElifAccess().getElifKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Elif__Group__0__Impl"


    // $ANTLR start "rule__Elif__Group__1"
    // InternalFortXTrans.g:8182:1: rule__Elif__Group__1 : rule__Elif__Group__1__Impl rule__Elif__Group__2 ;
    public final void rule__Elif__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8186:1: ( rule__Elif__Group__1__Impl rule__Elif__Group__2 )
            // InternalFortXTrans.g:8187:2: rule__Elif__Group__1__Impl rule__Elif__Group__2
            {
            pushFollow(FOLLOW_65);
            rule__Elif__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Elif__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Elif__Group__1"


    // $ANTLR start "rule__Elif__Group__1__Impl"
    // InternalFortXTrans.g:8194:1: rule__Elif__Group__1__Impl : ( ( rule__Elif__ExprAssignment_1 ) ) ;
    public final void rule__Elif__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8198:1: ( ( ( rule__Elif__ExprAssignment_1 ) ) )
            // InternalFortXTrans.g:8199:1: ( ( rule__Elif__ExprAssignment_1 ) )
            {
            // InternalFortXTrans.g:8199:1: ( ( rule__Elif__ExprAssignment_1 ) )
            // InternalFortXTrans.g:8200:2: ( rule__Elif__ExprAssignment_1 )
            {
             before(grammarAccess.getElifAccess().getExprAssignment_1()); 
            // InternalFortXTrans.g:8201:2: ( rule__Elif__ExprAssignment_1 )
            // InternalFortXTrans.g:8201:3: rule__Elif__ExprAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__Elif__ExprAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getElifAccess().getExprAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Elif__Group__1__Impl"


    // $ANTLR start "rule__Elif__Group__2"
    // InternalFortXTrans.g:8209:1: rule__Elif__Group__2 : rule__Elif__Group__2__Impl rule__Elif__Group__3 ;
    public final void rule__Elif__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8213:1: ( rule__Elif__Group__2__Impl rule__Elif__Group__3 )
            // InternalFortXTrans.g:8214:2: rule__Elif__Group__2__Impl rule__Elif__Group__3
            {
            pushFollow(FOLLOW_32);
            rule__Elif__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Elif__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Elif__Group__2"


    // $ANTLR start "rule__Elif__Group__2__Impl"
    // InternalFortXTrans.g:8221:1: rule__Elif__Group__2__Impl : ( 'then' ) ;
    public final void rule__Elif__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8225:1: ( ( 'then' ) )
            // InternalFortXTrans.g:8226:1: ( 'then' )
            {
            // InternalFortXTrans.g:8226:1: ( 'then' )
            // InternalFortXTrans.g:8227:2: 'then'
            {
             before(grammarAccess.getElifAccess().getThenKeyword_2()); 
            match(input,47,FOLLOW_2); 
             after(grammarAccess.getElifAccess().getThenKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Elif__Group__2__Impl"


    // $ANTLR start "rule__Elif__Group__3"
    // InternalFortXTrans.g:8236:1: rule__Elif__Group__3 : rule__Elif__Group__3__Impl ;
    public final void rule__Elif__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8240:1: ( rule__Elif__Group__3__Impl )
            // InternalFortXTrans.g:8241:2: rule__Elif__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Elif__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Elif__Group__3"


    // $ANTLR start "rule__Elif__Group__3__Impl"
    // InternalFortXTrans.g:8247:1: rule__Elif__Group__3__Impl : ( ( rule__Elif__BlockAssignment_3 ) ) ;
    public final void rule__Elif__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8251:1: ( ( ( rule__Elif__BlockAssignment_3 ) ) )
            // InternalFortXTrans.g:8252:1: ( ( rule__Elif__BlockAssignment_3 ) )
            {
            // InternalFortXTrans.g:8252:1: ( ( rule__Elif__BlockAssignment_3 ) )
            // InternalFortXTrans.g:8253:2: ( rule__Elif__BlockAssignment_3 )
            {
             before(grammarAccess.getElifAccess().getBlockAssignment_3()); 
            // InternalFortXTrans.g:8254:2: ( rule__Elif__BlockAssignment_3 )
            // InternalFortXTrans.g:8254:3: rule__Elif__BlockAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__Elif__BlockAssignment_3();

            state._fsp--;


            }

             after(grammarAccess.getElifAccess().getBlockAssignment_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Elif__Group__3__Impl"


    // $ANTLR start "rule__Else__Group__0"
    // InternalFortXTrans.g:8263:1: rule__Else__Group__0 : rule__Else__Group__0__Impl rule__Else__Group__1 ;
    public final void rule__Else__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8267:1: ( rule__Else__Group__0__Impl rule__Else__Group__1 )
            // InternalFortXTrans.g:8268:2: rule__Else__Group__0__Impl rule__Else__Group__1
            {
            pushFollow(FOLLOW_32);
            rule__Else__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Else__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Else__Group__0"


    // $ANTLR start "rule__Else__Group__0__Impl"
    // InternalFortXTrans.g:8275:1: rule__Else__Group__0__Impl : ( 'else' ) ;
    public final void rule__Else__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8279:1: ( ( 'else' ) )
            // InternalFortXTrans.g:8280:1: ( 'else' )
            {
            // InternalFortXTrans.g:8280:1: ( 'else' )
            // InternalFortXTrans.g:8281:2: 'else'
            {
             before(grammarAccess.getElseAccess().getElseKeyword_0()); 
            match(input,49,FOLLOW_2); 
             after(grammarAccess.getElseAccess().getElseKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Else__Group__0__Impl"


    // $ANTLR start "rule__Else__Group__1"
    // InternalFortXTrans.g:8290:1: rule__Else__Group__1 : rule__Else__Group__1__Impl ;
    public final void rule__Else__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8294:1: ( rule__Else__Group__1__Impl )
            // InternalFortXTrans.g:8295:2: rule__Else__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Else__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Else__Group__1"


    // $ANTLR start "rule__Else__Group__1__Impl"
    // InternalFortXTrans.g:8301:1: rule__Else__Group__1__Impl : ( ( rule__Else__BlockAssignment_1 ) ) ;
    public final void rule__Else__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8305:1: ( ( ( rule__Else__BlockAssignment_1 ) ) )
            // InternalFortXTrans.g:8306:1: ( ( rule__Else__BlockAssignment_1 ) )
            {
            // InternalFortXTrans.g:8306:1: ( ( rule__Else__BlockAssignment_1 ) )
            // InternalFortXTrans.g:8307:2: ( rule__Else__BlockAssignment_1 )
            {
             before(grammarAccess.getElseAccess().getBlockAssignment_1()); 
            // InternalFortXTrans.g:8308:2: ( rule__Else__BlockAssignment_1 )
            // InternalFortXTrans.g:8308:3: rule__Else__BlockAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__Else__BlockAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getElseAccess().getBlockAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Else__Group__1__Impl"


    // $ANTLR start "rule__Generators__Group__0"
    // InternalFortXTrans.g:8317:1: rule__Generators__Group__0 : rule__Generators__Group__0__Impl rule__Generators__Group__1 ;
    public final void rule__Generators__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8321:1: ( rule__Generators__Group__0__Impl rule__Generators__Group__1 )
            // InternalFortXTrans.g:8322:2: rule__Generators__Group__0__Impl rule__Generators__Group__1
            {
            pushFollow(FOLLOW_24);
            rule__Generators__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Generators__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Generators__Group__0"


    // $ANTLR start "rule__Generators__Group__0__Impl"
    // InternalFortXTrans.g:8329:1: rule__Generators__Group__0__Impl : ( ( rule__Generators__BindingAssignment_0 ) ) ;
    public final void rule__Generators__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8333:1: ( ( ( rule__Generators__BindingAssignment_0 ) ) )
            // InternalFortXTrans.g:8334:1: ( ( rule__Generators__BindingAssignment_0 ) )
            {
            // InternalFortXTrans.g:8334:1: ( ( rule__Generators__BindingAssignment_0 ) )
            // InternalFortXTrans.g:8335:2: ( rule__Generators__BindingAssignment_0 )
            {
             before(grammarAccess.getGeneratorsAccess().getBindingAssignment_0()); 
            // InternalFortXTrans.g:8336:2: ( rule__Generators__BindingAssignment_0 )
            // InternalFortXTrans.g:8336:3: rule__Generators__BindingAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__Generators__BindingAssignment_0();

            state._fsp--;


            }

             after(grammarAccess.getGeneratorsAccess().getBindingAssignment_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Generators__Group__0__Impl"


    // $ANTLR start "rule__Generators__Group__1"
    // InternalFortXTrans.g:8344:1: rule__Generators__Group__1 : rule__Generators__Group__1__Impl ;
    public final void rule__Generators__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8348:1: ( rule__Generators__Group__1__Impl )
            // InternalFortXTrans.g:8349:2: rule__Generators__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Generators__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Generators__Group__1"


    // $ANTLR start "rule__Generators__Group__1__Impl"
    // InternalFortXTrans.g:8355:1: rule__Generators__Group__1__Impl : ( ( rule__Generators__Group_1__0 )* ) ;
    public final void rule__Generators__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8359:1: ( ( ( rule__Generators__Group_1__0 )* ) )
            // InternalFortXTrans.g:8360:1: ( ( rule__Generators__Group_1__0 )* )
            {
            // InternalFortXTrans.g:8360:1: ( ( rule__Generators__Group_1__0 )* )
            // InternalFortXTrans.g:8361:2: ( rule__Generators__Group_1__0 )*
            {
             before(grammarAccess.getGeneratorsAccess().getGroup_1()); 
            // InternalFortXTrans.g:8362:2: ( rule__Generators__Group_1__0 )*
            loop70:
            do {
                int alt70=2;
                int LA70_0 = input.LA(1);

                if ( (LA70_0==29) ) {
                    alt70=1;
                }


                switch (alt70) {
            	case 1 :
            	    // InternalFortXTrans.g:8362:3: rule__Generators__Group_1__0
            	    {
            	    pushFollow(FOLLOW_15);
            	    rule__Generators__Group_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop70;
                }
            } while (true);

             after(grammarAccess.getGeneratorsAccess().getGroup_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Generators__Group__1__Impl"


    // $ANTLR start "rule__Generators__Group_1__0"
    // InternalFortXTrans.g:8371:1: rule__Generators__Group_1__0 : rule__Generators__Group_1__0__Impl rule__Generators__Group_1__1 ;
    public final void rule__Generators__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8375:1: ( rule__Generators__Group_1__0__Impl rule__Generators__Group_1__1 )
            // InternalFortXTrans.g:8376:2: rule__Generators__Group_1__0__Impl rule__Generators__Group_1__1
            {
            pushFollow(FOLLOW_32);
            rule__Generators__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Generators__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Generators__Group_1__0"


    // $ANTLR start "rule__Generators__Group_1__0__Impl"
    // InternalFortXTrans.g:8383:1: rule__Generators__Group_1__0__Impl : ( ',' ) ;
    public final void rule__Generators__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8387:1: ( ( ',' ) )
            // InternalFortXTrans.g:8388:1: ( ',' )
            {
            // InternalFortXTrans.g:8388:1: ( ',' )
            // InternalFortXTrans.g:8389:2: ','
            {
             before(grammarAccess.getGeneratorsAccess().getCommaKeyword_1_0()); 
            match(input,29,FOLLOW_2); 
             after(grammarAccess.getGeneratorsAccess().getCommaKeyword_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Generators__Group_1__0__Impl"


    // $ANTLR start "rule__Generators__Group_1__1"
    // InternalFortXTrans.g:8398:1: rule__Generators__Group_1__1 : rule__Generators__Group_1__1__Impl ;
    public final void rule__Generators__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8402:1: ( rule__Generators__Group_1__1__Impl )
            // InternalFortXTrans.g:8403:2: rule__Generators__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Generators__Group_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Generators__Group_1__1"


    // $ANTLR start "rule__Generators__Group_1__1__Impl"
    // InternalFortXTrans.g:8409:1: rule__Generators__Group_1__1__Impl : ( ( rule__Generators__ClauseAssignment_1_1 ) ) ;
    public final void rule__Generators__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8413:1: ( ( ( rule__Generators__ClauseAssignment_1_1 ) ) )
            // InternalFortXTrans.g:8414:1: ( ( rule__Generators__ClauseAssignment_1_1 ) )
            {
            // InternalFortXTrans.g:8414:1: ( ( rule__Generators__ClauseAssignment_1_1 ) )
            // InternalFortXTrans.g:8415:2: ( rule__Generators__ClauseAssignment_1_1 )
            {
             before(grammarAccess.getGeneratorsAccess().getClauseAssignment_1_1()); 
            // InternalFortXTrans.g:8416:2: ( rule__Generators__ClauseAssignment_1_1 )
            // InternalFortXTrans.g:8416:3: rule__Generators__ClauseAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Generators__ClauseAssignment_1_1();

            state._fsp--;


            }

             after(grammarAccess.getGeneratorsAccess().getClauseAssignment_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Generators__Group_1__1__Impl"


    // $ANTLR start "rule__Binding__Group_0__0"
    // InternalFortXTrans.g:8425:1: rule__Binding__Group_0__0 : rule__Binding__Group_0__0__Impl rule__Binding__Group_0__1 ;
    public final void rule__Binding__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8429:1: ( rule__Binding__Group_0__0__Impl rule__Binding__Group_0__1 )
            // InternalFortXTrans.g:8430:2: rule__Binding__Group_0__0__Impl rule__Binding__Group_0__1
            {
            pushFollow(FOLLOW_69);
            rule__Binding__Group_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Binding__Group_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Binding__Group_0__0"


    // $ANTLR start "rule__Binding__Group_0__0__Impl"
    // InternalFortXTrans.g:8437:1: rule__Binding__Group_0__0__Impl : ( ( rule__Binding__IdtupAssignment_0_0 ) ) ;
    public final void rule__Binding__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8441:1: ( ( ( rule__Binding__IdtupAssignment_0_0 ) ) )
            // InternalFortXTrans.g:8442:1: ( ( rule__Binding__IdtupAssignment_0_0 ) )
            {
            // InternalFortXTrans.g:8442:1: ( ( rule__Binding__IdtupAssignment_0_0 ) )
            // InternalFortXTrans.g:8443:2: ( rule__Binding__IdtupAssignment_0_0 )
            {
             before(grammarAccess.getBindingAccess().getIdtupAssignment_0_0()); 
            // InternalFortXTrans.g:8444:2: ( rule__Binding__IdtupAssignment_0_0 )
            // InternalFortXTrans.g:8444:3: rule__Binding__IdtupAssignment_0_0
            {
            pushFollow(FOLLOW_2);
            rule__Binding__IdtupAssignment_0_0();

            state._fsp--;


            }

             after(grammarAccess.getBindingAccess().getIdtupAssignment_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Binding__Group_0__0__Impl"


    // $ANTLR start "rule__Binding__Group_0__1"
    // InternalFortXTrans.g:8452:1: rule__Binding__Group_0__1 : rule__Binding__Group_0__1__Impl rule__Binding__Group_0__2 ;
    public final void rule__Binding__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8456:1: ( rule__Binding__Group_0__1__Impl rule__Binding__Group_0__2 )
            // InternalFortXTrans.g:8457:2: rule__Binding__Group_0__1__Impl rule__Binding__Group_0__2
            {
            pushFollow(FOLLOW_32);
            rule__Binding__Group_0__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Binding__Group_0__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Binding__Group_0__1"


    // $ANTLR start "rule__Binding__Group_0__1__Impl"
    // InternalFortXTrans.g:8464:1: rule__Binding__Group_0__1__Impl : ( '<-' ) ;
    public final void rule__Binding__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8468:1: ( ( '<-' ) )
            // InternalFortXTrans.g:8469:1: ( '<-' )
            {
            // InternalFortXTrans.g:8469:1: ( '<-' )
            // InternalFortXTrans.g:8470:2: '<-'
            {
             before(grammarAccess.getBindingAccess().getLessThanSignHyphenMinusKeyword_0_1()); 
            match(input,50,FOLLOW_2); 
             after(grammarAccess.getBindingAccess().getLessThanSignHyphenMinusKeyword_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Binding__Group_0__1__Impl"


    // $ANTLR start "rule__Binding__Group_0__2"
    // InternalFortXTrans.g:8479:1: rule__Binding__Group_0__2 : rule__Binding__Group_0__2__Impl ;
    public final void rule__Binding__Group_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8483:1: ( rule__Binding__Group_0__2__Impl )
            // InternalFortXTrans.g:8484:2: rule__Binding__Group_0__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Binding__Group_0__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Binding__Group_0__2"


    // $ANTLR start "rule__Binding__Group_0__2__Impl"
    // InternalFortXTrans.g:8490:1: rule__Binding__Group_0__2__Impl : ( ( rule__Binding__GAssignment_0_2 ) ) ;
    public final void rule__Binding__Group_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8494:1: ( ( ( rule__Binding__GAssignment_0_2 ) ) )
            // InternalFortXTrans.g:8495:1: ( ( rule__Binding__GAssignment_0_2 ) )
            {
            // InternalFortXTrans.g:8495:1: ( ( rule__Binding__GAssignment_0_2 ) )
            // InternalFortXTrans.g:8496:2: ( rule__Binding__GAssignment_0_2 )
            {
             before(grammarAccess.getBindingAccess().getGAssignment_0_2()); 
            // InternalFortXTrans.g:8497:2: ( rule__Binding__GAssignment_0_2 )
            // InternalFortXTrans.g:8497:3: rule__Binding__GAssignment_0_2
            {
            pushFollow(FOLLOW_2);
            rule__Binding__GAssignment_0_2();

            state._fsp--;


            }

             after(grammarAccess.getBindingAccess().getGAssignment_0_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Binding__Group_0__2__Impl"


    // $ANTLR start "rule__Binding__Group_1__0"
    // InternalFortXTrans.g:8506:1: rule__Binding__Group_1__0 : rule__Binding__Group_1__0__Impl rule__Binding__Group_1__1 ;
    public final void rule__Binding__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8510:1: ( rule__Binding__Group_1__0__Impl rule__Binding__Group_1__1 )
            // InternalFortXTrans.g:8511:2: rule__Binding__Group_1__0__Impl rule__Binding__Group_1__1
            {
            pushFollow(FOLLOW_69);
            rule__Binding__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Binding__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Binding__Group_1__0"


    // $ANTLR start "rule__Binding__Group_1__0__Impl"
    // InternalFortXTrans.g:8518:1: rule__Binding__Group_1__0__Impl : ( ( rule__Binding__IdtupAssignment_1_0 ) ) ;
    public final void rule__Binding__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8522:1: ( ( ( rule__Binding__IdtupAssignment_1_0 ) ) )
            // InternalFortXTrans.g:8523:1: ( ( rule__Binding__IdtupAssignment_1_0 ) )
            {
            // InternalFortXTrans.g:8523:1: ( ( rule__Binding__IdtupAssignment_1_0 ) )
            // InternalFortXTrans.g:8524:2: ( rule__Binding__IdtupAssignment_1_0 )
            {
             before(grammarAccess.getBindingAccess().getIdtupAssignment_1_0()); 
            // InternalFortXTrans.g:8525:2: ( rule__Binding__IdtupAssignment_1_0 )
            // InternalFortXTrans.g:8525:3: rule__Binding__IdtupAssignment_1_0
            {
            pushFollow(FOLLOW_2);
            rule__Binding__IdtupAssignment_1_0();

            state._fsp--;


            }

             after(grammarAccess.getBindingAccess().getIdtupAssignment_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Binding__Group_1__0__Impl"


    // $ANTLR start "rule__Binding__Group_1__1"
    // InternalFortXTrans.g:8533:1: rule__Binding__Group_1__1 : rule__Binding__Group_1__1__Impl rule__Binding__Group_1__2 ;
    public final void rule__Binding__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8537:1: ( rule__Binding__Group_1__1__Impl rule__Binding__Group_1__2 )
            // InternalFortXTrans.g:8538:2: rule__Binding__Group_1__1__Impl rule__Binding__Group_1__2
            {
            pushFollow(FOLLOW_70);
            rule__Binding__Group_1__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Binding__Group_1__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Binding__Group_1__1"


    // $ANTLR start "rule__Binding__Group_1__1__Impl"
    // InternalFortXTrans.g:8545:1: rule__Binding__Group_1__1__Impl : ( '<-' ) ;
    public final void rule__Binding__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8549:1: ( ( '<-' ) )
            // InternalFortXTrans.g:8550:1: ( '<-' )
            {
            // InternalFortXTrans.g:8550:1: ( '<-' )
            // InternalFortXTrans.g:8551:2: '<-'
            {
             before(grammarAccess.getBindingAccess().getLessThanSignHyphenMinusKeyword_1_1()); 
            match(input,50,FOLLOW_2); 
             after(grammarAccess.getBindingAccess().getLessThanSignHyphenMinusKeyword_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Binding__Group_1__1__Impl"


    // $ANTLR start "rule__Binding__Group_1__2"
    // InternalFortXTrans.g:8560:1: rule__Binding__Group_1__2 : rule__Binding__Group_1__2__Impl rule__Binding__Group_1__3 ;
    public final void rule__Binding__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8564:1: ( rule__Binding__Group_1__2__Impl rule__Binding__Group_1__3 )
            // InternalFortXTrans.g:8565:2: rule__Binding__Group_1__2__Impl rule__Binding__Group_1__3
            {
            pushFollow(FOLLOW_27);
            rule__Binding__Group_1__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Binding__Group_1__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Binding__Group_1__2"


    // $ANTLR start "rule__Binding__Group_1__2__Impl"
    // InternalFortXTrans.g:8572:1: rule__Binding__Group_1__2__Impl : ( ( rule__Binding__SeqAssignment_1_2 ) ) ;
    public final void rule__Binding__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8576:1: ( ( ( rule__Binding__SeqAssignment_1_2 ) ) )
            // InternalFortXTrans.g:8577:1: ( ( rule__Binding__SeqAssignment_1_2 ) )
            {
            // InternalFortXTrans.g:8577:1: ( ( rule__Binding__SeqAssignment_1_2 ) )
            // InternalFortXTrans.g:8578:2: ( rule__Binding__SeqAssignment_1_2 )
            {
             before(grammarAccess.getBindingAccess().getSeqAssignment_1_2()); 
            // InternalFortXTrans.g:8579:2: ( rule__Binding__SeqAssignment_1_2 )
            // InternalFortXTrans.g:8579:3: rule__Binding__SeqAssignment_1_2
            {
            pushFollow(FOLLOW_2);
            rule__Binding__SeqAssignment_1_2();

            state._fsp--;


            }

             after(grammarAccess.getBindingAccess().getSeqAssignment_1_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Binding__Group_1__2__Impl"


    // $ANTLR start "rule__Binding__Group_1__3"
    // InternalFortXTrans.g:8587:1: rule__Binding__Group_1__3 : rule__Binding__Group_1__3__Impl rule__Binding__Group_1__4 ;
    public final void rule__Binding__Group_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8591:1: ( rule__Binding__Group_1__3__Impl rule__Binding__Group_1__4 )
            // InternalFortXTrans.g:8592:2: rule__Binding__Group_1__3__Impl rule__Binding__Group_1__4
            {
            pushFollow(FOLLOW_32);
            rule__Binding__Group_1__3__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Binding__Group_1__4();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Binding__Group_1__3"


    // $ANTLR start "rule__Binding__Group_1__3__Impl"
    // InternalFortXTrans.g:8599:1: rule__Binding__Group_1__3__Impl : ( '(' ) ;
    public final void rule__Binding__Group_1__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8603:1: ( ( '(' ) )
            // InternalFortXTrans.g:8604:1: ( '(' )
            {
            // InternalFortXTrans.g:8604:1: ( '(' )
            // InternalFortXTrans.g:8605:2: '('
            {
             before(grammarAccess.getBindingAccess().getLeftParenthesisKeyword_1_3()); 
            match(input,33,FOLLOW_2); 
             after(grammarAccess.getBindingAccess().getLeftParenthesisKeyword_1_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Binding__Group_1__3__Impl"


    // $ANTLR start "rule__Binding__Group_1__4"
    // InternalFortXTrans.g:8614:1: rule__Binding__Group_1__4 : rule__Binding__Group_1__4__Impl rule__Binding__Group_1__5 ;
    public final void rule__Binding__Group_1__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8618:1: ( rule__Binding__Group_1__4__Impl rule__Binding__Group_1__5 )
            // InternalFortXTrans.g:8619:2: rule__Binding__Group_1__4__Impl rule__Binding__Group_1__5
            {
            pushFollow(FOLLOW_23);
            rule__Binding__Group_1__4__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Binding__Group_1__5();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Binding__Group_1__4"


    // $ANTLR start "rule__Binding__Group_1__4__Impl"
    // InternalFortXTrans.g:8626:1: rule__Binding__Group_1__4__Impl : ( ( rule__Binding__GAssignment_1_4 ) ) ;
    public final void rule__Binding__Group_1__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8630:1: ( ( ( rule__Binding__GAssignment_1_4 ) ) )
            // InternalFortXTrans.g:8631:1: ( ( rule__Binding__GAssignment_1_4 ) )
            {
            // InternalFortXTrans.g:8631:1: ( ( rule__Binding__GAssignment_1_4 ) )
            // InternalFortXTrans.g:8632:2: ( rule__Binding__GAssignment_1_4 )
            {
             before(grammarAccess.getBindingAccess().getGAssignment_1_4()); 
            // InternalFortXTrans.g:8633:2: ( rule__Binding__GAssignment_1_4 )
            // InternalFortXTrans.g:8633:3: rule__Binding__GAssignment_1_4
            {
            pushFollow(FOLLOW_2);
            rule__Binding__GAssignment_1_4();

            state._fsp--;


            }

             after(grammarAccess.getBindingAccess().getGAssignment_1_4()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Binding__Group_1__4__Impl"


    // $ANTLR start "rule__Binding__Group_1__5"
    // InternalFortXTrans.g:8641:1: rule__Binding__Group_1__5 : rule__Binding__Group_1__5__Impl ;
    public final void rule__Binding__Group_1__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8645:1: ( rule__Binding__Group_1__5__Impl )
            // InternalFortXTrans.g:8646:2: rule__Binding__Group_1__5__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Binding__Group_1__5__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Binding__Group_1__5"


    // $ANTLR start "rule__Binding__Group_1__5__Impl"
    // InternalFortXTrans.g:8652:1: rule__Binding__Group_1__5__Impl : ( ')' ) ;
    public final void rule__Binding__Group_1__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8656:1: ( ( ')' ) )
            // InternalFortXTrans.g:8657:1: ( ')' )
            {
            // InternalFortXTrans.g:8657:1: ( ')' )
            // InternalFortXTrans.g:8658:2: ')'
            {
             before(grammarAccess.getBindingAccess().getRightParenthesisKeyword_1_5()); 
            match(input,34,FOLLOW_2); 
             after(grammarAccess.getBindingAccess().getRightParenthesisKeyword_1_5()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Binding__Group_1__5__Impl"


    // $ANTLR start "rule__GenSource__Group__0"
    // InternalFortXTrans.g:8668:1: rule__GenSource__Group__0 : rule__GenSource__Group__0__Impl rule__GenSource__Group__1 ;
    public final void rule__GenSource__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8672:1: ( rule__GenSource__Group__0__Impl rule__GenSource__Group__1 )
            // InternalFortXTrans.g:8673:2: rule__GenSource__Group__0__Impl rule__GenSource__Group__1
            {
            pushFollow(FOLLOW_71);
            rule__GenSource__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__GenSource__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GenSource__Group__0"


    // $ANTLR start "rule__GenSource__Group__0__Impl"
    // InternalFortXTrans.g:8680:1: rule__GenSource__Group__0__Impl : ( ruleExpr ) ;
    public final void rule__GenSource__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8684:1: ( ( ruleExpr ) )
            // InternalFortXTrans.g:8685:1: ( ruleExpr )
            {
            // InternalFortXTrans.g:8685:1: ( ruleExpr )
            // InternalFortXTrans.g:8686:2: ruleExpr
            {
             before(grammarAccess.getGenSourceAccess().getExprParserRuleCall_0()); 
            pushFollow(FOLLOW_2);
            ruleExpr();

            state._fsp--;

             after(grammarAccess.getGenSourceAccess().getExprParserRuleCall_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GenSource__Group__0__Impl"


    // $ANTLR start "rule__GenSource__Group__1"
    // InternalFortXTrans.g:8695:1: rule__GenSource__Group__1 : rule__GenSource__Group__1__Impl ;
    public final void rule__GenSource__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8699:1: ( rule__GenSource__Group__1__Impl )
            // InternalFortXTrans.g:8700:2: rule__GenSource__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__GenSource__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GenSource__Group__1"


    // $ANTLR start "rule__GenSource__Group__1__Impl"
    // InternalFortXTrans.g:8706:1: rule__GenSource__Group__1__Impl : ( ( rule__GenSource__Group_1__0 )? ) ;
    public final void rule__GenSource__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8710:1: ( ( ( rule__GenSource__Group_1__0 )? ) )
            // InternalFortXTrans.g:8711:1: ( ( rule__GenSource__Group_1__0 )? )
            {
            // InternalFortXTrans.g:8711:1: ( ( rule__GenSource__Group_1__0 )? )
            // InternalFortXTrans.g:8712:2: ( rule__GenSource__Group_1__0 )?
            {
             before(grammarAccess.getGenSourceAccess().getGroup_1()); 
            // InternalFortXTrans.g:8713:2: ( rule__GenSource__Group_1__0 )?
            int alt71=2;
            int LA71_0 = input.LA(1);

            if ( (LA71_0==51) ) {
                alt71=1;
            }
            switch (alt71) {
                case 1 :
                    // InternalFortXTrans.g:8713:3: rule__GenSource__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__GenSource__Group_1__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getGenSourceAccess().getGroup_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GenSource__Group__1__Impl"


    // $ANTLR start "rule__GenSource__Group_1__0"
    // InternalFortXTrans.g:8722:1: rule__GenSource__Group_1__0 : rule__GenSource__Group_1__0__Impl rule__GenSource__Group_1__1 ;
    public final void rule__GenSource__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8726:1: ( rule__GenSource__Group_1__0__Impl rule__GenSource__Group_1__1 )
            // InternalFortXTrans.g:8727:2: rule__GenSource__Group_1__0__Impl rule__GenSource__Group_1__1
            {
            pushFollow(FOLLOW_71);
            rule__GenSource__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__GenSource__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GenSource__Group_1__0"


    // $ANTLR start "rule__GenSource__Group_1__0__Impl"
    // InternalFortXTrans.g:8734:1: rule__GenSource__Group_1__0__Impl : ( () ) ;
    public final void rule__GenSource__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8738:1: ( ( () ) )
            // InternalFortXTrans.g:8739:1: ( () )
            {
            // InternalFortXTrans.g:8739:1: ( () )
            // InternalFortXTrans.g:8740:2: ()
            {
             before(grammarAccess.getGenSourceAccess().getGenSourceStartAction_1_0()); 
            // InternalFortXTrans.g:8741:2: ()
            // InternalFortXTrans.g:8741:3: 
            {
            }

             after(grammarAccess.getGenSourceAccess().getGenSourceStartAction_1_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GenSource__Group_1__0__Impl"


    // $ANTLR start "rule__GenSource__Group_1__1"
    // InternalFortXTrans.g:8749:1: rule__GenSource__Group_1__1 : rule__GenSource__Group_1__1__Impl rule__GenSource__Group_1__2 ;
    public final void rule__GenSource__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8753:1: ( rule__GenSource__Group_1__1__Impl rule__GenSource__Group_1__2 )
            // InternalFortXTrans.g:8754:2: rule__GenSource__Group_1__1__Impl rule__GenSource__Group_1__2
            {
            pushFollow(FOLLOW_32);
            rule__GenSource__Group_1__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__GenSource__Group_1__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GenSource__Group_1__1"


    // $ANTLR start "rule__GenSource__Group_1__1__Impl"
    // InternalFortXTrans.g:8761:1: rule__GenSource__Group_1__1__Impl : ( '#' ) ;
    public final void rule__GenSource__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8765:1: ( ( '#' ) )
            // InternalFortXTrans.g:8766:1: ( '#' )
            {
            // InternalFortXTrans.g:8766:1: ( '#' )
            // InternalFortXTrans.g:8767:2: '#'
            {
             before(grammarAccess.getGenSourceAccess().getNumberSignKeyword_1_1()); 
            match(input,51,FOLLOW_2); 
             after(grammarAccess.getGenSourceAccess().getNumberSignKeyword_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GenSource__Group_1__1__Impl"


    // $ANTLR start "rule__GenSource__Group_1__2"
    // InternalFortXTrans.g:8776:1: rule__GenSource__Group_1__2 : rule__GenSource__Group_1__2__Impl ;
    public final void rule__GenSource__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8780:1: ( rule__GenSource__Group_1__2__Impl )
            // InternalFortXTrans.g:8781:2: rule__GenSource__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__GenSource__Group_1__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GenSource__Group_1__2"


    // $ANTLR start "rule__GenSource__Group_1__2__Impl"
    // InternalFortXTrans.g:8787:1: rule__GenSource__Group_1__2__Impl : ( ( rule__GenSource__EndAssignment_1_2 ) ) ;
    public final void rule__GenSource__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8791:1: ( ( ( rule__GenSource__EndAssignment_1_2 ) ) )
            // InternalFortXTrans.g:8792:1: ( ( rule__GenSource__EndAssignment_1_2 ) )
            {
            // InternalFortXTrans.g:8792:1: ( ( rule__GenSource__EndAssignment_1_2 ) )
            // InternalFortXTrans.g:8793:2: ( rule__GenSource__EndAssignment_1_2 )
            {
             before(grammarAccess.getGenSourceAccess().getEndAssignment_1_2()); 
            // InternalFortXTrans.g:8794:2: ( rule__GenSource__EndAssignment_1_2 )
            // InternalFortXTrans.g:8794:3: rule__GenSource__EndAssignment_1_2
            {
            pushFollow(FOLLOW_2);
            rule__GenSource__EndAssignment_1_2();

            state._fsp--;


            }

             after(grammarAccess.getGenSourceAccess().getEndAssignment_1_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GenSource__Group_1__2__Impl"


    // $ANTLR start "rule__BlockElems__Group__0"
    // InternalFortXTrans.g:8803:1: rule__BlockElems__Group__0 : rule__BlockElems__Group__0__Impl rule__BlockElems__Group__1 ;
    public final void rule__BlockElems__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8807:1: ( rule__BlockElems__Group__0__Impl rule__BlockElems__Group__1 )
            // InternalFortXTrans.g:8808:2: rule__BlockElems__Group__0__Impl rule__BlockElems__Group__1
            {
            pushFollow(FOLLOW_32);
            rule__BlockElems__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__BlockElems__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BlockElems__Group__0"


    // $ANTLR start "rule__BlockElems__Group__0__Impl"
    // InternalFortXTrans.g:8815:1: rule__BlockElems__Group__0__Impl : ( ( rule__BlockElems__BlockAssignment_0 ) ) ;
    public final void rule__BlockElems__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8819:1: ( ( ( rule__BlockElems__BlockAssignment_0 ) ) )
            // InternalFortXTrans.g:8820:1: ( ( rule__BlockElems__BlockAssignment_0 ) )
            {
            // InternalFortXTrans.g:8820:1: ( ( rule__BlockElems__BlockAssignment_0 ) )
            // InternalFortXTrans.g:8821:2: ( rule__BlockElems__BlockAssignment_0 )
            {
             before(grammarAccess.getBlockElemsAccess().getBlockAssignment_0()); 
            // InternalFortXTrans.g:8822:2: ( rule__BlockElems__BlockAssignment_0 )
            // InternalFortXTrans.g:8822:3: rule__BlockElems__BlockAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__BlockElems__BlockAssignment_0();

            state._fsp--;


            }

             after(grammarAccess.getBlockElemsAccess().getBlockAssignment_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BlockElems__Group__0__Impl"


    // $ANTLR start "rule__BlockElems__Group__1"
    // InternalFortXTrans.g:8830:1: rule__BlockElems__Group__1 : rule__BlockElems__Group__1__Impl ;
    public final void rule__BlockElems__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8834:1: ( rule__BlockElems__Group__1__Impl )
            // InternalFortXTrans.g:8835:2: rule__BlockElems__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__BlockElems__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BlockElems__Group__1"


    // $ANTLR start "rule__BlockElems__Group__1__Impl"
    // InternalFortXTrans.g:8841:1: rule__BlockElems__Group__1__Impl : ( ( rule__BlockElems__BlockAssignment_1 )* ) ;
    public final void rule__BlockElems__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8845:1: ( ( ( rule__BlockElems__BlockAssignment_1 )* ) )
            // InternalFortXTrans.g:8846:1: ( ( rule__BlockElems__BlockAssignment_1 )* )
            {
            // InternalFortXTrans.g:8846:1: ( ( rule__BlockElems__BlockAssignment_1 )* )
            // InternalFortXTrans.g:8847:2: ( rule__BlockElems__BlockAssignment_1 )*
            {
             before(grammarAccess.getBlockElemsAccess().getBlockAssignment_1()); 
            // InternalFortXTrans.g:8848:2: ( rule__BlockElems__BlockAssignment_1 )*
            loop72:
            do {
                int alt72=2;
                int LA72_0 = input.LA(1);

                if ( ((LA72_0>=RULE_ID && LA72_0<=RULE_STRING)||LA72_0==33||LA72_0==40||LA72_0==46||LA72_0==53||LA72_0==60||(LA72_0>=64 && LA72_0<=67)||(LA72_0>=69 && LA72_0<=72)) ) {
                    alt72=1;
                }


                switch (alt72) {
            	case 1 :
            	    // InternalFortXTrans.g:8848:3: rule__BlockElems__BlockAssignment_1
            	    {
            	    pushFollow(FOLLOW_72);
            	    rule__BlockElems__BlockAssignment_1();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop72;
                }
            } while (true);

             after(grammarAccess.getBlockElemsAccess().getBlockAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BlockElems__Group__1__Impl"


    // $ANTLR start "rule__Do__Group__0"
    // InternalFortXTrans.g:8857:1: rule__Do__Group__0 : rule__Do__Group__0__Impl rule__Do__Group__1 ;
    public final void rule__Do__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8861:1: ( rule__Do__Group__0__Impl rule__Do__Group__1 )
            // InternalFortXTrans.g:8862:2: rule__Do__Group__0__Impl rule__Do__Group__1
            {
            pushFollow(FOLLOW_73);
            rule__Do__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Do__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Do__Group__0"


    // $ANTLR start "rule__Do__Group__0__Impl"
    // InternalFortXTrans.g:8869:1: rule__Do__Group__0__Impl : ( ( rule__Do__DofsAssignment_0 ) ) ;
    public final void rule__Do__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8873:1: ( ( ( rule__Do__DofsAssignment_0 ) ) )
            // InternalFortXTrans.g:8874:1: ( ( rule__Do__DofsAssignment_0 ) )
            {
            // InternalFortXTrans.g:8874:1: ( ( rule__Do__DofsAssignment_0 ) )
            // InternalFortXTrans.g:8875:2: ( rule__Do__DofsAssignment_0 )
            {
             before(grammarAccess.getDoAccess().getDofsAssignment_0()); 
            // InternalFortXTrans.g:8876:2: ( rule__Do__DofsAssignment_0 )
            // InternalFortXTrans.g:8876:3: rule__Do__DofsAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__Do__DofsAssignment_0();

            state._fsp--;


            }

             after(grammarAccess.getDoAccess().getDofsAssignment_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Do__Group__0__Impl"


    // $ANTLR start "rule__Do__Group__1"
    // InternalFortXTrans.g:8884:1: rule__Do__Group__1 : rule__Do__Group__1__Impl rule__Do__Group__2 ;
    public final void rule__Do__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8888:1: ( rule__Do__Group__1__Impl rule__Do__Group__2 )
            // InternalFortXTrans.g:8889:2: rule__Do__Group__1__Impl rule__Do__Group__2
            {
            pushFollow(FOLLOW_73);
            rule__Do__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Do__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Do__Group__1"


    // $ANTLR start "rule__Do__Group__1__Impl"
    // InternalFortXTrans.g:8896:1: rule__Do__Group__1__Impl : ( ( rule__Do__Group_1__0 )* ) ;
    public final void rule__Do__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8900:1: ( ( ( rule__Do__Group_1__0 )* ) )
            // InternalFortXTrans.g:8901:1: ( ( rule__Do__Group_1__0 )* )
            {
            // InternalFortXTrans.g:8901:1: ( ( rule__Do__Group_1__0 )* )
            // InternalFortXTrans.g:8902:2: ( rule__Do__Group_1__0 )*
            {
             before(grammarAccess.getDoAccess().getGroup_1()); 
            // InternalFortXTrans.g:8903:2: ( rule__Do__Group_1__0 )*
            loop73:
            do {
                int alt73=2;
                int LA73_0 = input.LA(1);

                if ( (LA73_0==52) ) {
                    alt73=1;
                }


                switch (alt73) {
            	case 1 :
            	    // InternalFortXTrans.g:8903:3: rule__Do__Group_1__0
            	    {
            	    pushFollow(FOLLOW_74);
            	    rule__Do__Group_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop73;
                }
            } while (true);

             after(grammarAccess.getDoAccess().getGroup_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Do__Group__1__Impl"


    // $ANTLR start "rule__Do__Group__2"
    // InternalFortXTrans.g:8911:1: rule__Do__Group__2 : rule__Do__Group__2__Impl ;
    public final void rule__Do__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8915:1: ( rule__Do__Group__2__Impl )
            // InternalFortXTrans.g:8916:2: rule__Do__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Do__Group__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Do__Group__2"


    // $ANTLR start "rule__Do__Group__2__Impl"
    // InternalFortXTrans.g:8922:1: rule__Do__Group__2__Impl : ( 'end' ) ;
    public final void rule__Do__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8926:1: ( ( 'end' ) )
            // InternalFortXTrans.g:8927:1: ( 'end' )
            {
            // InternalFortXTrans.g:8927:1: ( 'end' )
            // InternalFortXTrans.g:8928:2: 'end'
            {
             before(grammarAccess.getDoAccess().getEndKeyword_2()); 
            match(input,26,FOLLOW_2); 
             after(grammarAccess.getDoAccess().getEndKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Do__Group__2__Impl"


    // $ANTLR start "rule__Do__Group_1__0"
    // InternalFortXTrans.g:8938:1: rule__Do__Group_1__0 : rule__Do__Group_1__0__Impl rule__Do__Group_1__1 ;
    public final void rule__Do__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8942:1: ( rule__Do__Group_1__0__Impl rule__Do__Group_1__1 )
            // InternalFortXTrans.g:8943:2: rule__Do__Group_1__0__Impl rule__Do__Group_1__1
            {
            pushFollow(FOLLOW_62);
            rule__Do__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Do__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Do__Group_1__0"


    // $ANTLR start "rule__Do__Group_1__0__Impl"
    // InternalFortXTrans.g:8950:1: rule__Do__Group_1__0__Impl : ( 'also' ) ;
    public final void rule__Do__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8954:1: ( ( 'also' ) )
            // InternalFortXTrans.g:8955:1: ( 'also' )
            {
            // InternalFortXTrans.g:8955:1: ( 'also' )
            // InternalFortXTrans.g:8956:2: 'also'
            {
             before(grammarAccess.getDoAccess().getAlsoKeyword_1_0()); 
            match(input,52,FOLLOW_2); 
             after(grammarAccess.getDoAccess().getAlsoKeyword_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Do__Group_1__0__Impl"


    // $ANTLR start "rule__Do__Group_1__1"
    // InternalFortXTrans.g:8965:1: rule__Do__Group_1__1 : rule__Do__Group_1__1__Impl ;
    public final void rule__Do__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8969:1: ( rule__Do__Group_1__1__Impl )
            // InternalFortXTrans.g:8970:2: rule__Do__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Do__Group_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Do__Group_1__1"


    // $ANTLR start "rule__Do__Group_1__1__Impl"
    // InternalFortXTrans.g:8976:1: rule__Do__Group_1__1__Impl : ( ( rule__Do__DofsAssignment_1_1 ) ) ;
    public final void rule__Do__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8980:1: ( ( ( rule__Do__DofsAssignment_1_1 ) ) )
            // InternalFortXTrans.g:8981:1: ( ( rule__Do__DofsAssignment_1_1 ) )
            {
            // InternalFortXTrans.g:8981:1: ( ( rule__Do__DofsAssignment_1_1 ) )
            // InternalFortXTrans.g:8982:2: ( rule__Do__DofsAssignment_1_1 )
            {
             before(grammarAccess.getDoAccess().getDofsAssignment_1_1()); 
            // InternalFortXTrans.g:8983:2: ( rule__Do__DofsAssignment_1_1 )
            // InternalFortXTrans.g:8983:3: rule__Do__DofsAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Do__DofsAssignment_1_1();

            state._fsp--;


            }

             after(grammarAccess.getDoAccess().getDofsAssignment_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Do__Group_1__1__Impl"


    // $ANTLR start "rule__DoFront__Group__0"
    // InternalFortXTrans.g:8992:1: rule__DoFront__Group__0 : rule__DoFront__Group__0__Impl rule__DoFront__Group__1 ;
    public final void rule__DoFront__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:8996:1: ( rule__DoFront__Group__0__Impl rule__DoFront__Group__1 )
            // InternalFortXTrans.g:8997:2: rule__DoFront__Group__0__Impl rule__DoFront__Group__1
            {
            pushFollow(FOLLOW_62);
            rule__DoFront__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DoFront__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DoFront__Group__0"


    // $ANTLR start "rule__DoFront__Group__0__Impl"
    // InternalFortXTrans.g:9004:1: rule__DoFront__Group__0__Impl : ( ( rule__DoFront__Group_0__0 )? ) ;
    public final void rule__DoFront__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9008:1: ( ( ( rule__DoFront__Group_0__0 )? ) )
            // InternalFortXTrans.g:9009:1: ( ( rule__DoFront__Group_0__0 )? )
            {
            // InternalFortXTrans.g:9009:1: ( ( rule__DoFront__Group_0__0 )? )
            // InternalFortXTrans.g:9010:2: ( rule__DoFront__Group_0__0 )?
            {
             before(grammarAccess.getDoFrontAccess().getGroup_0()); 
            // InternalFortXTrans.g:9011:2: ( rule__DoFront__Group_0__0 )?
            int alt74=2;
            int LA74_0 = input.LA(1);

            if ( (LA74_0==69) ) {
                alt74=1;
            }
            switch (alt74) {
                case 1 :
                    // InternalFortXTrans.g:9011:3: rule__DoFront__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__DoFront__Group_0__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getDoFrontAccess().getGroup_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DoFront__Group__0__Impl"


    // $ANTLR start "rule__DoFront__Group__1"
    // InternalFortXTrans.g:9019:1: rule__DoFront__Group__1 : rule__DoFront__Group__1__Impl rule__DoFront__Group__2 ;
    public final void rule__DoFront__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9023:1: ( rule__DoFront__Group__1__Impl rule__DoFront__Group__2 )
            // InternalFortXTrans.g:9024:2: rule__DoFront__Group__1__Impl rule__DoFront__Group__2
            {
            pushFollow(FOLLOW_62);
            rule__DoFront__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DoFront__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DoFront__Group__1"


    // $ANTLR start "rule__DoFront__Group__1__Impl"
    // InternalFortXTrans.g:9031:1: rule__DoFront__Group__1__Impl : ( ( rule__DoFront__AtomAssignment_1 )? ) ;
    public final void rule__DoFront__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9035:1: ( ( ( rule__DoFront__AtomAssignment_1 )? ) )
            // InternalFortXTrans.g:9036:1: ( ( rule__DoFront__AtomAssignment_1 )? )
            {
            // InternalFortXTrans.g:9036:1: ( ( rule__DoFront__AtomAssignment_1 )? )
            // InternalFortXTrans.g:9037:2: ( rule__DoFront__AtomAssignment_1 )?
            {
             before(grammarAccess.getDoFrontAccess().getAtomAssignment_1()); 
            // InternalFortXTrans.g:9038:2: ( rule__DoFront__AtomAssignment_1 )?
            int alt75=2;
            int LA75_0 = input.LA(1);

            if ( (LA75_0==60) ) {
                alt75=1;
            }
            switch (alt75) {
                case 1 :
                    // InternalFortXTrans.g:9038:3: rule__DoFront__AtomAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__DoFront__AtomAssignment_1();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getDoFrontAccess().getAtomAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DoFront__Group__1__Impl"


    // $ANTLR start "rule__DoFront__Group__2"
    // InternalFortXTrans.g:9046:1: rule__DoFront__Group__2 : rule__DoFront__Group__2__Impl rule__DoFront__Group__3 ;
    public final void rule__DoFront__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9050:1: ( rule__DoFront__Group__2__Impl rule__DoFront__Group__3 )
            // InternalFortXTrans.g:9051:2: rule__DoFront__Group__2__Impl rule__DoFront__Group__3
            {
            pushFollow(FOLLOW_32);
            rule__DoFront__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DoFront__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DoFront__Group__2"


    // $ANTLR start "rule__DoFront__Group__2__Impl"
    // InternalFortXTrans.g:9058:1: rule__DoFront__Group__2__Impl : ( 'do' ) ;
    public final void rule__DoFront__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9062:1: ( ( 'do' ) )
            // InternalFortXTrans.g:9063:1: ( 'do' )
            {
            // InternalFortXTrans.g:9063:1: ( 'do' )
            // InternalFortXTrans.g:9064:2: 'do'
            {
             before(grammarAccess.getDoFrontAccess().getDoKeyword_2()); 
            match(input,53,FOLLOW_2); 
             after(grammarAccess.getDoFrontAccess().getDoKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DoFront__Group__2__Impl"


    // $ANTLR start "rule__DoFront__Group__3"
    // InternalFortXTrans.g:9073:1: rule__DoFront__Group__3 : rule__DoFront__Group__3__Impl ;
    public final void rule__DoFront__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9077:1: ( rule__DoFront__Group__3__Impl )
            // InternalFortXTrans.g:9078:2: rule__DoFront__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__DoFront__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DoFront__Group__3"


    // $ANTLR start "rule__DoFront__Group__3__Impl"
    // InternalFortXTrans.g:9084:1: rule__DoFront__Group__3__Impl : ( ( rule__DoFront__BlockAssignment_3 ) ) ;
    public final void rule__DoFront__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9088:1: ( ( ( rule__DoFront__BlockAssignment_3 ) ) )
            // InternalFortXTrans.g:9089:1: ( ( rule__DoFront__BlockAssignment_3 ) )
            {
            // InternalFortXTrans.g:9089:1: ( ( rule__DoFront__BlockAssignment_3 ) )
            // InternalFortXTrans.g:9090:2: ( rule__DoFront__BlockAssignment_3 )
            {
             before(grammarAccess.getDoFrontAccess().getBlockAssignment_3()); 
            // InternalFortXTrans.g:9091:2: ( rule__DoFront__BlockAssignment_3 )
            // InternalFortXTrans.g:9091:3: rule__DoFront__BlockAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__DoFront__BlockAssignment_3();

            state._fsp--;


            }

             after(grammarAccess.getDoFrontAccess().getBlockAssignment_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DoFront__Group__3__Impl"


    // $ANTLR start "rule__DoFront__Group_0__0"
    // InternalFortXTrans.g:9100:1: rule__DoFront__Group_0__0 : rule__DoFront__Group_0__0__Impl rule__DoFront__Group_0__1 ;
    public final void rule__DoFront__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9104:1: ( rule__DoFront__Group_0__0__Impl rule__DoFront__Group_0__1 )
            // InternalFortXTrans.g:9105:2: rule__DoFront__Group_0__0__Impl rule__DoFront__Group_0__1
            {
            pushFollow(FOLLOW_32);
            rule__DoFront__Group_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DoFront__Group_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DoFront__Group_0__0"


    // $ANTLR start "rule__DoFront__Group_0__0__Impl"
    // InternalFortXTrans.g:9112:1: rule__DoFront__Group_0__0__Impl : ( ( rule__DoFront__AtAssignment_0_0 ) ) ;
    public final void rule__DoFront__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9116:1: ( ( ( rule__DoFront__AtAssignment_0_0 ) ) )
            // InternalFortXTrans.g:9117:1: ( ( rule__DoFront__AtAssignment_0_0 ) )
            {
            // InternalFortXTrans.g:9117:1: ( ( rule__DoFront__AtAssignment_0_0 ) )
            // InternalFortXTrans.g:9118:2: ( rule__DoFront__AtAssignment_0_0 )
            {
             before(grammarAccess.getDoFrontAccess().getAtAssignment_0_0()); 
            // InternalFortXTrans.g:9119:2: ( rule__DoFront__AtAssignment_0_0 )
            // InternalFortXTrans.g:9119:3: rule__DoFront__AtAssignment_0_0
            {
            pushFollow(FOLLOW_2);
            rule__DoFront__AtAssignment_0_0();

            state._fsp--;


            }

             after(grammarAccess.getDoFrontAccess().getAtAssignment_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DoFront__Group_0__0__Impl"


    // $ANTLR start "rule__DoFront__Group_0__1"
    // InternalFortXTrans.g:9127:1: rule__DoFront__Group_0__1 : rule__DoFront__Group_0__1__Impl ;
    public final void rule__DoFront__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9131:1: ( rule__DoFront__Group_0__1__Impl )
            // InternalFortXTrans.g:9132:2: rule__DoFront__Group_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__DoFront__Group_0__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DoFront__Group_0__1"


    // $ANTLR start "rule__DoFront__Group_0__1__Impl"
    // InternalFortXTrans.g:9138:1: rule__DoFront__Group_0__1__Impl : ( ( rule__DoFront__ExpAssignment_0_1 ) ) ;
    public final void rule__DoFront__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9142:1: ( ( ( rule__DoFront__ExpAssignment_0_1 ) ) )
            // InternalFortXTrans.g:9143:1: ( ( rule__DoFront__ExpAssignment_0_1 ) )
            {
            // InternalFortXTrans.g:9143:1: ( ( rule__DoFront__ExpAssignment_0_1 ) )
            // InternalFortXTrans.g:9144:2: ( rule__DoFront__ExpAssignment_0_1 )
            {
             before(grammarAccess.getDoFrontAccess().getExpAssignment_0_1()); 
            // InternalFortXTrans.g:9145:2: ( rule__DoFront__ExpAssignment_0_1 )
            // InternalFortXTrans.g:9145:3: rule__DoFront__ExpAssignment_0_1
            {
            pushFollow(FOLLOW_2);
            rule__DoFront__ExpAssignment_0_1();

            state._fsp--;


            }

             after(grammarAccess.getDoFrontAccess().getExpAssignment_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DoFront__Group_0__1__Impl"


    // $ANTLR start "rule__IsType__Group__0"
    // InternalFortXTrans.g:9154:1: rule__IsType__Group__0 : rule__IsType__Group__0__Impl rule__IsType__Group__1 ;
    public final void rule__IsType__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9158:1: ( rule__IsType__Group__0__Impl rule__IsType__Group__1 )
            // InternalFortXTrans.g:9159:2: rule__IsType__Group__0__Impl rule__IsType__Group__1
            {
            pushFollow(FOLLOW_5);
            rule__IsType__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__IsType__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IsType__Group__0"


    // $ANTLR start "rule__IsType__Group__0__Impl"
    // InternalFortXTrans.g:9166:1: rule__IsType__Group__0__Impl : ( ':' ) ;
    public final void rule__IsType__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9170:1: ( ( ':' ) )
            // InternalFortXTrans.g:9171:1: ( ':' )
            {
            // InternalFortXTrans.g:9171:1: ( ':' )
            // InternalFortXTrans.g:9172:2: ':'
            {
             before(grammarAccess.getIsTypeAccess().getColonKeyword_0()); 
            match(input,35,FOLLOW_2); 
             after(grammarAccess.getIsTypeAccess().getColonKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IsType__Group__0__Impl"


    // $ANTLR start "rule__IsType__Group__1"
    // InternalFortXTrans.g:9181:1: rule__IsType__Group__1 : rule__IsType__Group__1__Impl ;
    public final void rule__IsType__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9185:1: ( rule__IsType__Group__1__Impl )
            // InternalFortXTrans.g:9186:2: rule__IsType__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__IsType__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IsType__Group__1"


    // $ANTLR start "rule__IsType__Group__1__Impl"
    // InternalFortXTrans.g:9192:1: rule__IsType__Group__1__Impl : ( ( rule__IsType__TypeAssignment_1 ) ) ;
    public final void rule__IsType__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9196:1: ( ( ( rule__IsType__TypeAssignment_1 ) ) )
            // InternalFortXTrans.g:9197:1: ( ( rule__IsType__TypeAssignment_1 ) )
            {
            // InternalFortXTrans.g:9197:1: ( ( rule__IsType__TypeAssignment_1 ) )
            // InternalFortXTrans.g:9198:2: ( rule__IsType__TypeAssignment_1 )
            {
             before(grammarAccess.getIsTypeAccess().getTypeAssignment_1()); 
            // InternalFortXTrans.g:9199:2: ( rule__IsType__TypeAssignment_1 )
            // InternalFortXTrans.g:9199:3: rule__IsType__TypeAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__IsType__TypeAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getIsTypeAccess().getTypeAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IsType__Group__1__Impl"


    // $ANTLR start "rule__FieldDecl__Group_0__0"
    // InternalFortXTrans.g:9208:1: rule__FieldDecl__Group_0__0 : rule__FieldDecl__Group_0__0__Impl rule__FieldDecl__Group_0__1 ;
    public final void rule__FieldDecl__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9212:1: ( rule__FieldDecl__Group_0__0__Impl rule__FieldDecl__Group_0__1 )
            // InternalFortXTrans.g:9213:2: rule__FieldDecl__Group_0__0__Impl rule__FieldDecl__Group_0__1
            {
            pushFollow(FOLLOW_75);
            rule__FieldDecl__Group_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__FieldDecl__Group_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_0__0"


    // $ANTLR start "rule__FieldDecl__Group_0__0__Impl"
    // InternalFortXTrans.g:9220:1: rule__FieldDecl__Group_0__0__Impl : ( ( rule__FieldDecl__PriAssignment_0_0 )? ) ;
    public final void rule__FieldDecl__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9224:1: ( ( ( rule__FieldDecl__PriAssignment_0_0 )? ) )
            // InternalFortXTrans.g:9225:1: ( ( rule__FieldDecl__PriAssignment_0_0 )? )
            {
            // InternalFortXTrans.g:9225:1: ( ( rule__FieldDecl__PriAssignment_0_0 )? )
            // InternalFortXTrans.g:9226:2: ( rule__FieldDecl__PriAssignment_0_0 )?
            {
             before(grammarAccess.getFieldDeclAccess().getPriAssignment_0_0()); 
            // InternalFortXTrans.g:9227:2: ( rule__FieldDecl__PriAssignment_0_0 )?
            int alt76=2;
            int LA76_0 = input.LA(1);

            if ( (LA76_0==58) ) {
                alt76=1;
            }
            switch (alt76) {
                case 1 :
                    // InternalFortXTrans.g:9227:3: rule__FieldDecl__PriAssignment_0_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__FieldDecl__PriAssignment_0_0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getFieldDeclAccess().getPriAssignment_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_0__0__Impl"


    // $ANTLR start "rule__FieldDecl__Group_0__1"
    // InternalFortXTrans.g:9235:1: rule__FieldDecl__Group_0__1 : rule__FieldDecl__Group_0__1__Impl rule__FieldDecl__Group_0__2 ;
    public final void rule__FieldDecl__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9239:1: ( rule__FieldDecl__Group_0__1__Impl rule__FieldDecl__Group_0__2 )
            // InternalFortXTrans.g:9240:2: rule__FieldDecl__Group_0__1__Impl rule__FieldDecl__Group_0__2
            {
            pushFollow(FOLLOW_75);
            rule__FieldDecl__Group_0__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__FieldDecl__Group_0__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_0__1"


    // $ANTLR start "rule__FieldDecl__Group_0__1__Impl"
    // InternalFortXTrans.g:9247:1: rule__FieldDecl__Group_0__1__Impl : ( ( rule__FieldDecl__MutAssignment_0_1 )? ) ;
    public final void rule__FieldDecl__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9251:1: ( ( ( rule__FieldDecl__MutAssignment_0_1 )? ) )
            // InternalFortXTrans.g:9252:1: ( ( rule__FieldDecl__MutAssignment_0_1 )? )
            {
            // InternalFortXTrans.g:9252:1: ( ( rule__FieldDecl__MutAssignment_0_1 )? )
            // InternalFortXTrans.g:9253:2: ( rule__FieldDecl__MutAssignment_0_1 )?
            {
             before(grammarAccess.getFieldDeclAccess().getMutAssignment_0_1()); 
            // InternalFortXTrans.g:9254:2: ( rule__FieldDecl__MutAssignment_0_1 )?
            int alt77=2;
            int LA77_0 = input.LA(1);

            if ( (LA77_0==70) ) {
                alt77=1;
            }
            switch (alt77) {
                case 1 :
                    // InternalFortXTrans.g:9254:3: rule__FieldDecl__MutAssignment_0_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__FieldDecl__MutAssignment_0_1();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getFieldDeclAccess().getMutAssignment_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_0__1__Impl"


    // $ANTLR start "rule__FieldDecl__Group_0__2"
    // InternalFortXTrans.g:9262:1: rule__FieldDecl__Group_0__2 : rule__FieldDecl__Group_0__2__Impl rule__FieldDecl__Group_0__3 ;
    public final void rule__FieldDecl__Group_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9266:1: ( rule__FieldDecl__Group_0__2__Impl rule__FieldDecl__Group_0__3 )
            // InternalFortXTrans.g:9267:2: rule__FieldDecl__Group_0__2__Impl rule__FieldDecl__Group_0__3
            {
            pushFollow(FOLLOW_76);
            rule__FieldDecl__Group_0__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__FieldDecl__Group_0__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_0__2"


    // $ANTLR start "rule__FieldDecl__Group_0__2__Impl"
    // InternalFortXTrans.g:9274:1: rule__FieldDecl__Group_0__2__Impl : ( ( rule__FieldDecl__VarsAssignment_0_2 ) ) ;
    public final void rule__FieldDecl__Group_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9278:1: ( ( ( rule__FieldDecl__VarsAssignment_0_2 ) ) )
            // InternalFortXTrans.g:9279:1: ( ( rule__FieldDecl__VarsAssignment_0_2 ) )
            {
            // InternalFortXTrans.g:9279:1: ( ( rule__FieldDecl__VarsAssignment_0_2 ) )
            // InternalFortXTrans.g:9280:2: ( rule__FieldDecl__VarsAssignment_0_2 )
            {
             before(grammarAccess.getFieldDeclAccess().getVarsAssignment_0_2()); 
            // InternalFortXTrans.g:9281:2: ( rule__FieldDecl__VarsAssignment_0_2 )
            // InternalFortXTrans.g:9281:3: rule__FieldDecl__VarsAssignment_0_2
            {
            pushFollow(FOLLOW_2);
            rule__FieldDecl__VarsAssignment_0_2();

            state._fsp--;


            }

             after(grammarAccess.getFieldDeclAccess().getVarsAssignment_0_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_0__2__Impl"


    // $ANTLR start "rule__FieldDecl__Group_0__3"
    // InternalFortXTrans.g:9289:1: rule__FieldDecl__Group_0__3 : rule__FieldDecl__Group_0__3__Impl ;
    public final void rule__FieldDecl__Group_0__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9293:1: ( rule__FieldDecl__Group_0__3__Impl )
            // InternalFortXTrans.g:9294:2: rule__FieldDecl__Group_0__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FieldDecl__Group_0__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_0__3"


    // $ANTLR start "rule__FieldDecl__Group_0__3__Impl"
    // InternalFortXTrans.g:9300:1: rule__FieldDecl__Group_0__3__Impl : ( ( rule__FieldDecl__Group_0_3__0 )? ) ;
    public final void rule__FieldDecl__Group_0__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9304:1: ( ( ( rule__FieldDecl__Group_0_3__0 )? ) )
            // InternalFortXTrans.g:9305:1: ( ( rule__FieldDecl__Group_0_3__0 )? )
            {
            // InternalFortXTrans.g:9305:1: ( ( rule__FieldDecl__Group_0_3__0 )? )
            // InternalFortXTrans.g:9306:2: ( rule__FieldDecl__Group_0_3__0 )?
            {
             before(grammarAccess.getFieldDeclAccess().getGroup_0_3()); 
            // InternalFortXTrans.g:9307:2: ( rule__FieldDecl__Group_0_3__0 )?
            int alt78=2;
            int LA78_0 = input.LA(1);

            if ( (LA78_0==54) ) {
                alt78=1;
            }
            switch (alt78) {
                case 1 :
                    // InternalFortXTrans.g:9307:3: rule__FieldDecl__Group_0_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__FieldDecl__Group_0_3__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getFieldDeclAccess().getGroup_0_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_0__3__Impl"


    // $ANTLR start "rule__FieldDecl__Group_0_3__0"
    // InternalFortXTrans.g:9316:1: rule__FieldDecl__Group_0_3__0 : rule__FieldDecl__Group_0_3__0__Impl rule__FieldDecl__Group_0_3__1 ;
    public final void rule__FieldDecl__Group_0_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9320:1: ( rule__FieldDecl__Group_0_3__0__Impl rule__FieldDecl__Group_0_3__1 )
            // InternalFortXTrans.g:9321:2: rule__FieldDecl__Group_0_3__0__Impl rule__FieldDecl__Group_0_3__1
            {
            pushFollow(FOLLOW_32);
            rule__FieldDecl__Group_0_3__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__FieldDecl__Group_0_3__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_0_3__0"


    // $ANTLR start "rule__FieldDecl__Group_0_3__0__Impl"
    // InternalFortXTrans.g:9328:1: rule__FieldDecl__Group_0_3__0__Impl : ( '=' ) ;
    public final void rule__FieldDecl__Group_0_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9332:1: ( ( '=' ) )
            // InternalFortXTrans.g:9333:1: ( '=' )
            {
            // InternalFortXTrans.g:9333:1: ( '=' )
            // InternalFortXTrans.g:9334:2: '='
            {
             before(grammarAccess.getFieldDeclAccess().getEqualsSignKeyword_0_3_0()); 
            match(input,54,FOLLOW_2); 
             after(grammarAccess.getFieldDeclAccess().getEqualsSignKeyword_0_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_0_3__0__Impl"


    // $ANTLR start "rule__FieldDecl__Group_0_3__1"
    // InternalFortXTrans.g:9343:1: rule__FieldDecl__Group_0_3__1 : rule__FieldDecl__Group_0_3__1__Impl ;
    public final void rule__FieldDecl__Group_0_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9347:1: ( rule__FieldDecl__Group_0_3__1__Impl )
            // InternalFortXTrans.g:9348:2: rule__FieldDecl__Group_0_3__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FieldDecl__Group_0_3__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_0_3__1"


    // $ANTLR start "rule__FieldDecl__Group_0_3__1__Impl"
    // InternalFortXTrans.g:9354:1: rule__FieldDecl__Group_0_3__1__Impl : ( ( rule__FieldDecl__InitAssignment_0_3_1 ) ) ;
    public final void rule__FieldDecl__Group_0_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9358:1: ( ( ( rule__FieldDecl__InitAssignment_0_3_1 ) ) )
            // InternalFortXTrans.g:9359:1: ( ( rule__FieldDecl__InitAssignment_0_3_1 ) )
            {
            // InternalFortXTrans.g:9359:1: ( ( rule__FieldDecl__InitAssignment_0_3_1 ) )
            // InternalFortXTrans.g:9360:2: ( rule__FieldDecl__InitAssignment_0_3_1 )
            {
             before(grammarAccess.getFieldDeclAccess().getInitAssignment_0_3_1()); 
            // InternalFortXTrans.g:9361:2: ( rule__FieldDecl__InitAssignment_0_3_1 )
            // InternalFortXTrans.g:9361:3: rule__FieldDecl__InitAssignment_0_3_1
            {
            pushFollow(FOLLOW_2);
            rule__FieldDecl__InitAssignment_0_3_1();

            state._fsp--;


            }

             after(grammarAccess.getFieldDeclAccess().getInitAssignment_0_3_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_0_3__1__Impl"


    // $ANTLR start "rule__FieldDecl__Group_1__0"
    // InternalFortXTrans.g:9370:1: rule__FieldDecl__Group_1__0 : rule__FieldDecl__Group_1__0__Impl rule__FieldDecl__Group_1__1 ;
    public final void rule__FieldDecl__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9374:1: ( rule__FieldDecl__Group_1__0__Impl rule__FieldDecl__Group_1__1 )
            // InternalFortXTrans.g:9375:2: rule__FieldDecl__Group_1__0__Impl rule__FieldDecl__Group_1__1
            {
            pushFollow(FOLLOW_63);
            rule__FieldDecl__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__FieldDecl__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_1__0"


    // $ANTLR start "rule__FieldDecl__Group_1__0__Impl"
    // InternalFortXTrans.g:9382:1: rule__FieldDecl__Group_1__0__Impl : ( ( rule__FieldDecl__PriAssignment_1_0 )? ) ;
    public final void rule__FieldDecl__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9386:1: ( ( ( rule__FieldDecl__PriAssignment_1_0 )? ) )
            // InternalFortXTrans.g:9387:1: ( ( rule__FieldDecl__PriAssignment_1_0 )? )
            {
            // InternalFortXTrans.g:9387:1: ( ( rule__FieldDecl__PriAssignment_1_0 )? )
            // InternalFortXTrans.g:9388:2: ( rule__FieldDecl__PriAssignment_1_0 )?
            {
             before(grammarAccess.getFieldDeclAccess().getPriAssignment_1_0()); 
            // InternalFortXTrans.g:9389:2: ( rule__FieldDecl__PriAssignment_1_0 )?
            int alt79=2;
            int LA79_0 = input.LA(1);

            if ( (LA79_0==58) ) {
                alt79=1;
            }
            switch (alt79) {
                case 1 :
                    // InternalFortXTrans.g:9389:3: rule__FieldDecl__PriAssignment_1_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__FieldDecl__PriAssignment_1_0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getFieldDeclAccess().getPriAssignment_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_1__0__Impl"


    // $ANTLR start "rule__FieldDecl__Group_1__1"
    // InternalFortXTrans.g:9397:1: rule__FieldDecl__Group_1__1 : rule__FieldDecl__Group_1__1__Impl rule__FieldDecl__Group_1__2 ;
    public final void rule__FieldDecl__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9401:1: ( rule__FieldDecl__Group_1__1__Impl rule__FieldDecl__Group_1__2 )
            // InternalFortXTrans.g:9402:2: rule__FieldDecl__Group_1__1__Impl rule__FieldDecl__Group_1__2
            {
            pushFollow(FOLLOW_76);
            rule__FieldDecl__Group_1__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__FieldDecl__Group_1__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_1__1"


    // $ANTLR start "rule__FieldDecl__Group_1__1__Impl"
    // InternalFortXTrans.g:9409:1: rule__FieldDecl__Group_1__1__Impl : ( ( rule__FieldDecl__IdtupAssignment_1_1 ) ) ;
    public final void rule__FieldDecl__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9413:1: ( ( ( rule__FieldDecl__IdtupAssignment_1_1 ) ) )
            // InternalFortXTrans.g:9414:1: ( ( rule__FieldDecl__IdtupAssignment_1_1 ) )
            {
            // InternalFortXTrans.g:9414:1: ( ( rule__FieldDecl__IdtupAssignment_1_1 ) )
            // InternalFortXTrans.g:9415:2: ( rule__FieldDecl__IdtupAssignment_1_1 )
            {
             before(grammarAccess.getFieldDeclAccess().getIdtupAssignment_1_1()); 
            // InternalFortXTrans.g:9416:2: ( rule__FieldDecl__IdtupAssignment_1_1 )
            // InternalFortXTrans.g:9416:3: rule__FieldDecl__IdtupAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__FieldDecl__IdtupAssignment_1_1();

            state._fsp--;


            }

             after(grammarAccess.getFieldDeclAccess().getIdtupAssignment_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_1__1__Impl"


    // $ANTLR start "rule__FieldDecl__Group_1__2"
    // InternalFortXTrans.g:9424:1: rule__FieldDecl__Group_1__2 : rule__FieldDecl__Group_1__2__Impl rule__FieldDecl__Group_1__3 ;
    public final void rule__FieldDecl__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9428:1: ( rule__FieldDecl__Group_1__2__Impl rule__FieldDecl__Group_1__3 )
            // InternalFortXTrans.g:9429:2: rule__FieldDecl__Group_1__2__Impl rule__FieldDecl__Group_1__3
            {
            pushFollow(FOLLOW_32);
            rule__FieldDecl__Group_1__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__FieldDecl__Group_1__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_1__2"


    // $ANTLR start "rule__FieldDecl__Group_1__2__Impl"
    // InternalFortXTrans.g:9436:1: rule__FieldDecl__Group_1__2__Impl : ( '=' ) ;
    public final void rule__FieldDecl__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9440:1: ( ( '=' ) )
            // InternalFortXTrans.g:9441:1: ( '=' )
            {
            // InternalFortXTrans.g:9441:1: ( '=' )
            // InternalFortXTrans.g:9442:2: '='
            {
             before(grammarAccess.getFieldDeclAccess().getEqualsSignKeyword_1_2()); 
            match(input,54,FOLLOW_2); 
             after(grammarAccess.getFieldDeclAccess().getEqualsSignKeyword_1_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_1__2__Impl"


    // $ANTLR start "rule__FieldDecl__Group_1__3"
    // InternalFortXTrans.g:9451:1: rule__FieldDecl__Group_1__3 : rule__FieldDecl__Group_1__3__Impl ;
    public final void rule__FieldDecl__Group_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9455:1: ( rule__FieldDecl__Group_1__3__Impl )
            // InternalFortXTrans.g:9456:2: rule__FieldDecl__Group_1__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FieldDecl__Group_1__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_1__3"


    // $ANTLR start "rule__FieldDecl__Group_1__3__Impl"
    // InternalFortXTrans.g:9462:1: rule__FieldDecl__Group_1__3__Impl : ( ( rule__FieldDecl__InitAssignment_1_3 )? ) ;
    public final void rule__FieldDecl__Group_1__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9466:1: ( ( ( rule__FieldDecl__InitAssignment_1_3 )? ) )
            // InternalFortXTrans.g:9467:1: ( ( rule__FieldDecl__InitAssignment_1_3 )? )
            {
            // InternalFortXTrans.g:9467:1: ( ( rule__FieldDecl__InitAssignment_1_3 )? )
            // InternalFortXTrans.g:9468:2: ( rule__FieldDecl__InitAssignment_1_3 )?
            {
             before(grammarAccess.getFieldDeclAccess().getInitAssignment_1_3()); 
            // InternalFortXTrans.g:9469:2: ( rule__FieldDecl__InitAssignment_1_3 )?
            int alt80=2;
            alt80 = dfa80.predict(input);
            switch (alt80) {
                case 1 :
                    // InternalFortXTrans.g:9469:3: rule__FieldDecl__InitAssignment_1_3
                    {
                    pushFollow(FOLLOW_2);
                    rule__FieldDecl__InitAssignment_1_3();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getFieldDeclAccess().getInitAssignment_1_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_1__3__Impl"


    // $ANTLR start "rule__FieldDecl__Group_2__0"
    // InternalFortXTrans.g:9478:1: rule__FieldDecl__Group_2__0 : rule__FieldDecl__Group_2__0__Impl rule__FieldDecl__Group_2__1 ;
    public final void rule__FieldDecl__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9482:1: ( rule__FieldDecl__Group_2__0__Impl rule__FieldDecl__Group_2__1 )
            // InternalFortXTrans.g:9483:2: rule__FieldDecl__Group_2__0__Impl rule__FieldDecl__Group_2__1
            {
            pushFollow(FOLLOW_75);
            rule__FieldDecl__Group_2__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__FieldDecl__Group_2__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_2__0"


    // $ANTLR start "rule__FieldDecl__Group_2__0__Impl"
    // InternalFortXTrans.g:9490:1: rule__FieldDecl__Group_2__0__Impl : ( ( rule__FieldDecl__PriAssignment_2_0 )? ) ;
    public final void rule__FieldDecl__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9494:1: ( ( ( rule__FieldDecl__PriAssignment_2_0 )? ) )
            // InternalFortXTrans.g:9495:1: ( ( rule__FieldDecl__PriAssignment_2_0 )? )
            {
            // InternalFortXTrans.g:9495:1: ( ( rule__FieldDecl__PriAssignment_2_0 )? )
            // InternalFortXTrans.g:9496:2: ( rule__FieldDecl__PriAssignment_2_0 )?
            {
             before(grammarAccess.getFieldDeclAccess().getPriAssignment_2_0()); 
            // InternalFortXTrans.g:9497:2: ( rule__FieldDecl__PriAssignment_2_0 )?
            int alt81=2;
            int LA81_0 = input.LA(1);

            if ( (LA81_0==58) ) {
                alt81=1;
            }
            switch (alt81) {
                case 1 :
                    // InternalFortXTrans.g:9497:3: rule__FieldDecl__PriAssignment_2_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__FieldDecl__PriAssignment_2_0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getFieldDeclAccess().getPriAssignment_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_2__0__Impl"


    // $ANTLR start "rule__FieldDecl__Group_2__1"
    // InternalFortXTrans.g:9505:1: rule__FieldDecl__Group_2__1 : rule__FieldDecl__Group_2__1__Impl rule__FieldDecl__Group_2__2 ;
    public final void rule__FieldDecl__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9509:1: ( rule__FieldDecl__Group_2__1__Impl rule__FieldDecl__Group_2__2 )
            // InternalFortXTrans.g:9510:2: rule__FieldDecl__Group_2__1__Impl rule__FieldDecl__Group_2__2
            {
            pushFollow(FOLLOW_75);
            rule__FieldDecl__Group_2__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__FieldDecl__Group_2__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_2__1"


    // $ANTLR start "rule__FieldDecl__Group_2__1__Impl"
    // InternalFortXTrans.g:9517:1: rule__FieldDecl__Group_2__1__Impl : ( ( rule__FieldDecl__MutAssignment_2_1 )? ) ;
    public final void rule__FieldDecl__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9521:1: ( ( ( rule__FieldDecl__MutAssignment_2_1 )? ) )
            // InternalFortXTrans.g:9522:1: ( ( rule__FieldDecl__MutAssignment_2_1 )? )
            {
            // InternalFortXTrans.g:9522:1: ( ( rule__FieldDecl__MutAssignment_2_1 )? )
            // InternalFortXTrans.g:9523:2: ( rule__FieldDecl__MutAssignment_2_1 )?
            {
             before(grammarAccess.getFieldDeclAccess().getMutAssignment_2_1()); 
            // InternalFortXTrans.g:9524:2: ( rule__FieldDecl__MutAssignment_2_1 )?
            int alt82=2;
            int LA82_0 = input.LA(1);

            if ( (LA82_0==70) ) {
                alt82=1;
            }
            switch (alt82) {
                case 1 :
                    // InternalFortXTrans.g:9524:3: rule__FieldDecl__MutAssignment_2_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__FieldDecl__MutAssignment_2_1();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getFieldDeclAccess().getMutAssignment_2_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_2__1__Impl"


    // $ANTLR start "rule__FieldDecl__Group_2__2"
    // InternalFortXTrans.g:9532:1: rule__FieldDecl__Group_2__2 : rule__FieldDecl__Group_2__2__Impl rule__FieldDecl__Group_2__3 ;
    public final void rule__FieldDecl__Group_2__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9536:1: ( rule__FieldDecl__Group_2__2__Impl rule__FieldDecl__Group_2__3 )
            // InternalFortXTrans.g:9537:2: rule__FieldDecl__Group_2__2__Impl rule__FieldDecl__Group_2__3
            {
            pushFollow(FOLLOW_26);
            rule__FieldDecl__Group_2__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__FieldDecl__Group_2__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_2__2"


    // $ANTLR start "rule__FieldDecl__Group_2__2__Impl"
    // InternalFortXTrans.g:9544:1: rule__FieldDecl__Group_2__2__Impl : ( ( rule__FieldDecl__IdtupAssignment_2_2 ) ) ;
    public final void rule__FieldDecl__Group_2__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9548:1: ( ( ( rule__FieldDecl__IdtupAssignment_2_2 ) ) )
            // InternalFortXTrans.g:9549:1: ( ( rule__FieldDecl__IdtupAssignment_2_2 ) )
            {
            // InternalFortXTrans.g:9549:1: ( ( rule__FieldDecl__IdtupAssignment_2_2 ) )
            // InternalFortXTrans.g:9550:2: ( rule__FieldDecl__IdtupAssignment_2_2 )
            {
             before(grammarAccess.getFieldDeclAccess().getIdtupAssignment_2_2()); 
            // InternalFortXTrans.g:9551:2: ( rule__FieldDecl__IdtupAssignment_2_2 )
            // InternalFortXTrans.g:9551:3: rule__FieldDecl__IdtupAssignment_2_2
            {
            pushFollow(FOLLOW_2);
            rule__FieldDecl__IdtupAssignment_2_2();

            state._fsp--;


            }

             after(grammarAccess.getFieldDeclAccess().getIdtupAssignment_2_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_2__2__Impl"


    // $ANTLR start "rule__FieldDecl__Group_2__3"
    // InternalFortXTrans.g:9559:1: rule__FieldDecl__Group_2__3 : rule__FieldDecl__Group_2__3__Impl rule__FieldDecl__Group_2__4 ;
    public final void rule__FieldDecl__Group_2__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9563:1: ( rule__FieldDecl__Group_2__3__Impl rule__FieldDecl__Group_2__4 )
            // InternalFortXTrans.g:9564:2: rule__FieldDecl__Group_2__3__Impl rule__FieldDecl__Group_2__4
            {
            pushFollow(FOLLOW_5);
            rule__FieldDecl__Group_2__3__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__FieldDecl__Group_2__4();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_2__3"


    // $ANTLR start "rule__FieldDecl__Group_2__3__Impl"
    // InternalFortXTrans.g:9571:1: rule__FieldDecl__Group_2__3__Impl : ( ':' ) ;
    public final void rule__FieldDecl__Group_2__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9575:1: ( ( ':' ) )
            // InternalFortXTrans.g:9576:1: ( ':' )
            {
            // InternalFortXTrans.g:9576:1: ( ':' )
            // InternalFortXTrans.g:9577:2: ':'
            {
             before(grammarAccess.getFieldDeclAccess().getColonKeyword_2_3()); 
            match(input,35,FOLLOW_2); 
             after(grammarAccess.getFieldDeclAccess().getColonKeyword_2_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_2__3__Impl"


    // $ANTLR start "rule__FieldDecl__Group_2__4"
    // InternalFortXTrans.g:9586:1: rule__FieldDecl__Group_2__4 : rule__FieldDecl__Group_2__4__Impl rule__FieldDecl__Group_2__5 ;
    public final void rule__FieldDecl__Group_2__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9590:1: ( rule__FieldDecl__Group_2__4__Impl rule__FieldDecl__Group_2__5 )
            // InternalFortXTrans.g:9591:2: rule__FieldDecl__Group_2__4__Impl rule__FieldDecl__Group_2__5
            {
            pushFollow(FOLLOW_17);
            rule__FieldDecl__Group_2__4__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__FieldDecl__Group_2__5();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_2__4"


    // $ANTLR start "rule__FieldDecl__Group_2__4__Impl"
    // InternalFortXTrans.g:9598:1: rule__FieldDecl__Group_2__4__Impl : ( ( rule__FieldDecl__TypeAssignment_2_4 ) ) ;
    public final void rule__FieldDecl__Group_2__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9602:1: ( ( ( rule__FieldDecl__TypeAssignment_2_4 ) ) )
            // InternalFortXTrans.g:9603:1: ( ( rule__FieldDecl__TypeAssignment_2_4 ) )
            {
            // InternalFortXTrans.g:9603:1: ( ( rule__FieldDecl__TypeAssignment_2_4 ) )
            // InternalFortXTrans.g:9604:2: ( rule__FieldDecl__TypeAssignment_2_4 )
            {
             before(grammarAccess.getFieldDeclAccess().getTypeAssignment_2_4()); 
            // InternalFortXTrans.g:9605:2: ( rule__FieldDecl__TypeAssignment_2_4 )
            // InternalFortXTrans.g:9605:3: rule__FieldDecl__TypeAssignment_2_4
            {
            pushFollow(FOLLOW_2);
            rule__FieldDecl__TypeAssignment_2_4();

            state._fsp--;


            }

             after(grammarAccess.getFieldDeclAccess().getTypeAssignment_2_4()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_2__4__Impl"


    // $ANTLR start "rule__FieldDecl__Group_2__5"
    // InternalFortXTrans.g:9613:1: rule__FieldDecl__Group_2__5 : rule__FieldDecl__Group_2__5__Impl rule__FieldDecl__Group_2__6 ;
    public final void rule__FieldDecl__Group_2__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9617:1: ( rule__FieldDecl__Group_2__5__Impl rule__FieldDecl__Group_2__6 )
            // InternalFortXTrans.g:9618:2: rule__FieldDecl__Group_2__5__Impl rule__FieldDecl__Group_2__6
            {
            pushFollow(FOLLOW_76);
            rule__FieldDecl__Group_2__5__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__FieldDecl__Group_2__6();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_2__5"


    // $ANTLR start "rule__FieldDecl__Group_2__5__Impl"
    // InternalFortXTrans.g:9625:1: rule__FieldDecl__Group_2__5__Impl : ( RULE_DOTS ) ;
    public final void rule__FieldDecl__Group_2__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9629:1: ( ( RULE_DOTS ) )
            // InternalFortXTrans.g:9630:1: ( RULE_DOTS )
            {
            // InternalFortXTrans.g:9630:1: ( RULE_DOTS )
            // InternalFortXTrans.g:9631:2: RULE_DOTS
            {
             before(grammarAccess.getFieldDeclAccess().getDOTSTerminalRuleCall_2_5()); 
            match(input,RULE_DOTS,FOLLOW_2); 
             after(grammarAccess.getFieldDeclAccess().getDOTSTerminalRuleCall_2_5()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_2__5__Impl"


    // $ANTLR start "rule__FieldDecl__Group_2__6"
    // InternalFortXTrans.g:9640:1: rule__FieldDecl__Group_2__6 : rule__FieldDecl__Group_2__6__Impl ;
    public final void rule__FieldDecl__Group_2__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9644:1: ( rule__FieldDecl__Group_2__6__Impl )
            // InternalFortXTrans.g:9645:2: rule__FieldDecl__Group_2__6__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FieldDecl__Group_2__6__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_2__6"


    // $ANTLR start "rule__FieldDecl__Group_2__6__Impl"
    // InternalFortXTrans.g:9651:1: rule__FieldDecl__Group_2__6__Impl : ( ( rule__FieldDecl__Group_2_6__0 )? ) ;
    public final void rule__FieldDecl__Group_2__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9655:1: ( ( ( rule__FieldDecl__Group_2_6__0 )? ) )
            // InternalFortXTrans.g:9656:1: ( ( rule__FieldDecl__Group_2_6__0 )? )
            {
            // InternalFortXTrans.g:9656:1: ( ( rule__FieldDecl__Group_2_6__0 )? )
            // InternalFortXTrans.g:9657:2: ( rule__FieldDecl__Group_2_6__0 )?
            {
             before(grammarAccess.getFieldDeclAccess().getGroup_2_6()); 
            // InternalFortXTrans.g:9658:2: ( rule__FieldDecl__Group_2_6__0 )?
            int alt83=2;
            int LA83_0 = input.LA(1);

            if ( (LA83_0==54) ) {
                alt83=1;
            }
            switch (alt83) {
                case 1 :
                    // InternalFortXTrans.g:9658:3: rule__FieldDecl__Group_2_6__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__FieldDecl__Group_2_6__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getFieldDeclAccess().getGroup_2_6()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_2__6__Impl"


    // $ANTLR start "rule__FieldDecl__Group_2_6__0"
    // InternalFortXTrans.g:9667:1: rule__FieldDecl__Group_2_6__0 : rule__FieldDecl__Group_2_6__0__Impl rule__FieldDecl__Group_2_6__1 ;
    public final void rule__FieldDecl__Group_2_6__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9671:1: ( rule__FieldDecl__Group_2_6__0__Impl rule__FieldDecl__Group_2_6__1 )
            // InternalFortXTrans.g:9672:2: rule__FieldDecl__Group_2_6__0__Impl rule__FieldDecl__Group_2_6__1
            {
            pushFollow(FOLLOW_32);
            rule__FieldDecl__Group_2_6__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__FieldDecl__Group_2_6__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_2_6__0"


    // $ANTLR start "rule__FieldDecl__Group_2_6__0__Impl"
    // InternalFortXTrans.g:9679:1: rule__FieldDecl__Group_2_6__0__Impl : ( '=' ) ;
    public final void rule__FieldDecl__Group_2_6__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9683:1: ( ( '=' ) )
            // InternalFortXTrans.g:9684:1: ( '=' )
            {
            // InternalFortXTrans.g:9684:1: ( '=' )
            // InternalFortXTrans.g:9685:2: '='
            {
             before(grammarAccess.getFieldDeclAccess().getEqualsSignKeyword_2_6_0()); 
            match(input,54,FOLLOW_2); 
             after(grammarAccess.getFieldDeclAccess().getEqualsSignKeyword_2_6_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_2_6__0__Impl"


    // $ANTLR start "rule__FieldDecl__Group_2_6__1"
    // InternalFortXTrans.g:9694:1: rule__FieldDecl__Group_2_6__1 : rule__FieldDecl__Group_2_6__1__Impl ;
    public final void rule__FieldDecl__Group_2_6__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9698:1: ( rule__FieldDecl__Group_2_6__1__Impl )
            // InternalFortXTrans.g:9699:2: rule__FieldDecl__Group_2_6__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FieldDecl__Group_2_6__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_2_6__1"


    // $ANTLR start "rule__FieldDecl__Group_2_6__1__Impl"
    // InternalFortXTrans.g:9705:1: rule__FieldDecl__Group_2_6__1__Impl : ( ( rule__FieldDecl__InitAssignment_2_6_1 ) ) ;
    public final void rule__FieldDecl__Group_2_6__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9709:1: ( ( ( rule__FieldDecl__InitAssignment_2_6_1 ) ) )
            // InternalFortXTrans.g:9710:1: ( ( rule__FieldDecl__InitAssignment_2_6_1 ) )
            {
            // InternalFortXTrans.g:9710:1: ( ( rule__FieldDecl__InitAssignment_2_6_1 ) )
            // InternalFortXTrans.g:9711:2: ( rule__FieldDecl__InitAssignment_2_6_1 )
            {
             before(grammarAccess.getFieldDeclAccess().getInitAssignment_2_6_1()); 
            // InternalFortXTrans.g:9712:2: ( rule__FieldDecl__InitAssignment_2_6_1 )
            // InternalFortXTrans.g:9712:3: rule__FieldDecl__InitAssignment_2_6_1
            {
            pushFollow(FOLLOW_2);
            rule__FieldDecl__InitAssignment_2_6_1();

            state._fsp--;


            }

             after(grammarAccess.getFieldDeclAccess().getInitAssignment_2_6_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_2_6__1__Impl"


    // $ANTLR start "rule__FieldDecl__Group_3__0"
    // InternalFortXTrans.g:9721:1: rule__FieldDecl__Group_3__0 : rule__FieldDecl__Group_3__0__Impl rule__FieldDecl__Group_3__1 ;
    public final void rule__FieldDecl__Group_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9725:1: ( rule__FieldDecl__Group_3__0__Impl rule__FieldDecl__Group_3__1 )
            // InternalFortXTrans.g:9726:2: rule__FieldDecl__Group_3__0__Impl rule__FieldDecl__Group_3__1
            {
            pushFollow(FOLLOW_77);
            rule__FieldDecl__Group_3__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__FieldDecl__Group_3__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_3__0"


    // $ANTLR start "rule__FieldDecl__Group_3__0__Impl"
    // InternalFortXTrans.g:9733:1: rule__FieldDecl__Group_3__0__Impl : ( ( rule__FieldDecl__PriAssignment_3_0 )? ) ;
    public final void rule__FieldDecl__Group_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9737:1: ( ( ( rule__FieldDecl__PriAssignment_3_0 )? ) )
            // InternalFortXTrans.g:9738:1: ( ( rule__FieldDecl__PriAssignment_3_0 )? )
            {
            // InternalFortXTrans.g:9738:1: ( ( rule__FieldDecl__PriAssignment_3_0 )? )
            // InternalFortXTrans.g:9739:2: ( rule__FieldDecl__PriAssignment_3_0 )?
            {
             before(grammarAccess.getFieldDeclAccess().getPriAssignment_3_0()); 
            // InternalFortXTrans.g:9740:2: ( rule__FieldDecl__PriAssignment_3_0 )?
            int alt84=2;
            int LA84_0 = input.LA(1);

            if ( (LA84_0==58) ) {
                alt84=1;
            }
            switch (alt84) {
                case 1 :
                    // InternalFortXTrans.g:9740:3: rule__FieldDecl__PriAssignment_3_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__FieldDecl__PriAssignment_3_0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getFieldDeclAccess().getPriAssignment_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_3__0__Impl"


    // $ANTLR start "rule__FieldDecl__Group_3__1"
    // InternalFortXTrans.g:9748:1: rule__FieldDecl__Group_3__1 : rule__FieldDecl__Group_3__1__Impl rule__FieldDecl__Group_3__2 ;
    public final void rule__FieldDecl__Group_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9752:1: ( rule__FieldDecl__Group_3__1__Impl rule__FieldDecl__Group_3__2 )
            // InternalFortXTrans.g:9753:2: rule__FieldDecl__Group_3__1__Impl rule__FieldDecl__Group_3__2
            {
            pushFollow(FOLLOW_77);
            rule__FieldDecl__Group_3__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__FieldDecl__Group_3__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_3__1"


    // $ANTLR start "rule__FieldDecl__Group_3__1__Impl"
    // InternalFortXTrans.g:9760:1: rule__FieldDecl__Group_3__1__Impl : ( ( rule__FieldDecl__MutAssignment_3_1 )? ) ;
    public final void rule__FieldDecl__Group_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9764:1: ( ( ( rule__FieldDecl__MutAssignment_3_1 )? ) )
            // InternalFortXTrans.g:9765:1: ( ( rule__FieldDecl__MutAssignment_3_1 )? )
            {
            // InternalFortXTrans.g:9765:1: ( ( rule__FieldDecl__MutAssignment_3_1 )? )
            // InternalFortXTrans.g:9766:2: ( rule__FieldDecl__MutAssignment_3_1 )?
            {
             before(grammarAccess.getFieldDeclAccess().getMutAssignment_3_1()); 
            // InternalFortXTrans.g:9767:2: ( rule__FieldDecl__MutAssignment_3_1 )?
            int alt85=2;
            int LA85_0 = input.LA(1);

            if ( (LA85_0==70) ) {
                alt85=1;
            }
            switch (alt85) {
                case 1 :
                    // InternalFortXTrans.g:9767:3: rule__FieldDecl__MutAssignment_3_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__FieldDecl__MutAssignment_3_1();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getFieldDeclAccess().getMutAssignment_3_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_3__1__Impl"


    // $ANTLR start "rule__FieldDecl__Group_3__2"
    // InternalFortXTrans.g:9775:1: rule__FieldDecl__Group_3__2 : rule__FieldDecl__Group_3__2__Impl rule__FieldDecl__Group_3__3 ;
    public final void rule__FieldDecl__Group_3__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9779:1: ( rule__FieldDecl__Group_3__2__Impl rule__FieldDecl__Group_3__3 )
            // InternalFortXTrans.g:9780:2: rule__FieldDecl__Group_3__2__Impl rule__FieldDecl__Group_3__3
            {
            pushFollow(FOLLOW_26);
            rule__FieldDecl__Group_3__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__FieldDecl__Group_3__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_3__2"


    // $ANTLR start "rule__FieldDecl__Group_3__2__Impl"
    // InternalFortXTrans.g:9787:1: rule__FieldDecl__Group_3__2__Impl : ( ( rule__FieldDecl__IdtupAssignment_3_2 ) ) ;
    public final void rule__FieldDecl__Group_3__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9791:1: ( ( ( rule__FieldDecl__IdtupAssignment_3_2 ) ) )
            // InternalFortXTrans.g:9792:1: ( ( rule__FieldDecl__IdtupAssignment_3_2 ) )
            {
            // InternalFortXTrans.g:9792:1: ( ( rule__FieldDecl__IdtupAssignment_3_2 ) )
            // InternalFortXTrans.g:9793:2: ( rule__FieldDecl__IdtupAssignment_3_2 )
            {
             before(grammarAccess.getFieldDeclAccess().getIdtupAssignment_3_2()); 
            // InternalFortXTrans.g:9794:2: ( rule__FieldDecl__IdtupAssignment_3_2 )
            // InternalFortXTrans.g:9794:3: rule__FieldDecl__IdtupAssignment_3_2
            {
            pushFollow(FOLLOW_2);
            rule__FieldDecl__IdtupAssignment_3_2();

            state._fsp--;


            }

             after(grammarAccess.getFieldDeclAccess().getIdtupAssignment_3_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_3__2__Impl"


    // $ANTLR start "rule__FieldDecl__Group_3__3"
    // InternalFortXTrans.g:9802:1: rule__FieldDecl__Group_3__3 : rule__FieldDecl__Group_3__3__Impl rule__FieldDecl__Group_3__4 ;
    public final void rule__FieldDecl__Group_3__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9806:1: ( rule__FieldDecl__Group_3__3__Impl rule__FieldDecl__Group_3__4 )
            // InternalFortXTrans.g:9807:2: rule__FieldDecl__Group_3__3__Impl rule__FieldDecl__Group_3__4
            {
            pushFollow(FOLLOW_27);
            rule__FieldDecl__Group_3__3__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__FieldDecl__Group_3__4();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_3__3"


    // $ANTLR start "rule__FieldDecl__Group_3__3__Impl"
    // InternalFortXTrans.g:9814:1: rule__FieldDecl__Group_3__3__Impl : ( ':' ) ;
    public final void rule__FieldDecl__Group_3__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9818:1: ( ( ':' ) )
            // InternalFortXTrans.g:9819:1: ( ':' )
            {
            // InternalFortXTrans.g:9819:1: ( ':' )
            // InternalFortXTrans.g:9820:2: ':'
            {
             before(grammarAccess.getFieldDeclAccess().getColonKeyword_3_3()); 
            match(input,35,FOLLOW_2); 
             after(grammarAccess.getFieldDeclAccess().getColonKeyword_3_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_3__3__Impl"


    // $ANTLR start "rule__FieldDecl__Group_3__4"
    // InternalFortXTrans.g:9829:1: rule__FieldDecl__Group_3__4 : rule__FieldDecl__Group_3__4__Impl rule__FieldDecl__Group_3__5 ;
    public final void rule__FieldDecl__Group_3__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9833:1: ( rule__FieldDecl__Group_3__4__Impl rule__FieldDecl__Group_3__5 )
            // InternalFortXTrans.g:9834:2: rule__FieldDecl__Group_3__4__Impl rule__FieldDecl__Group_3__5
            {
            pushFollow(FOLLOW_76);
            rule__FieldDecl__Group_3__4__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__FieldDecl__Group_3__5();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_3__4"


    // $ANTLR start "rule__FieldDecl__Group_3__4__Impl"
    // InternalFortXTrans.g:9841:1: rule__FieldDecl__Group_3__4__Impl : ( ( rule__FieldDecl__TuptypeAssignment_3_4 ) ) ;
    public final void rule__FieldDecl__Group_3__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9845:1: ( ( ( rule__FieldDecl__TuptypeAssignment_3_4 ) ) )
            // InternalFortXTrans.g:9846:1: ( ( rule__FieldDecl__TuptypeAssignment_3_4 ) )
            {
            // InternalFortXTrans.g:9846:1: ( ( rule__FieldDecl__TuptypeAssignment_3_4 ) )
            // InternalFortXTrans.g:9847:2: ( rule__FieldDecl__TuptypeAssignment_3_4 )
            {
             before(grammarAccess.getFieldDeclAccess().getTuptypeAssignment_3_4()); 
            // InternalFortXTrans.g:9848:2: ( rule__FieldDecl__TuptypeAssignment_3_4 )
            // InternalFortXTrans.g:9848:3: rule__FieldDecl__TuptypeAssignment_3_4
            {
            pushFollow(FOLLOW_2);
            rule__FieldDecl__TuptypeAssignment_3_4();

            state._fsp--;


            }

             after(grammarAccess.getFieldDeclAccess().getTuptypeAssignment_3_4()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_3__4__Impl"


    // $ANTLR start "rule__FieldDecl__Group_3__5"
    // InternalFortXTrans.g:9856:1: rule__FieldDecl__Group_3__5 : rule__FieldDecl__Group_3__5__Impl ;
    public final void rule__FieldDecl__Group_3__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9860:1: ( rule__FieldDecl__Group_3__5__Impl )
            // InternalFortXTrans.g:9861:2: rule__FieldDecl__Group_3__5__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FieldDecl__Group_3__5__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_3__5"


    // $ANTLR start "rule__FieldDecl__Group_3__5__Impl"
    // InternalFortXTrans.g:9867:1: rule__FieldDecl__Group_3__5__Impl : ( ( rule__FieldDecl__Group_3_5__0 )? ) ;
    public final void rule__FieldDecl__Group_3__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9871:1: ( ( ( rule__FieldDecl__Group_3_5__0 )? ) )
            // InternalFortXTrans.g:9872:1: ( ( rule__FieldDecl__Group_3_5__0 )? )
            {
            // InternalFortXTrans.g:9872:1: ( ( rule__FieldDecl__Group_3_5__0 )? )
            // InternalFortXTrans.g:9873:2: ( rule__FieldDecl__Group_3_5__0 )?
            {
             before(grammarAccess.getFieldDeclAccess().getGroup_3_5()); 
            // InternalFortXTrans.g:9874:2: ( rule__FieldDecl__Group_3_5__0 )?
            int alt86=2;
            int LA86_0 = input.LA(1);

            if ( (LA86_0==54) ) {
                alt86=1;
            }
            switch (alt86) {
                case 1 :
                    // InternalFortXTrans.g:9874:3: rule__FieldDecl__Group_3_5__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__FieldDecl__Group_3_5__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getFieldDeclAccess().getGroup_3_5()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_3__5__Impl"


    // $ANTLR start "rule__FieldDecl__Group_3_5__0"
    // InternalFortXTrans.g:9883:1: rule__FieldDecl__Group_3_5__0 : rule__FieldDecl__Group_3_5__0__Impl rule__FieldDecl__Group_3_5__1 ;
    public final void rule__FieldDecl__Group_3_5__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9887:1: ( rule__FieldDecl__Group_3_5__0__Impl rule__FieldDecl__Group_3_5__1 )
            // InternalFortXTrans.g:9888:2: rule__FieldDecl__Group_3_5__0__Impl rule__FieldDecl__Group_3_5__1
            {
            pushFollow(FOLLOW_32);
            rule__FieldDecl__Group_3_5__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__FieldDecl__Group_3_5__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_3_5__0"


    // $ANTLR start "rule__FieldDecl__Group_3_5__0__Impl"
    // InternalFortXTrans.g:9895:1: rule__FieldDecl__Group_3_5__0__Impl : ( '=' ) ;
    public final void rule__FieldDecl__Group_3_5__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9899:1: ( ( '=' ) )
            // InternalFortXTrans.g:9900:1: ( '=' )
            {
            // InternalFortXTrans.g:9900:1: ( '=' )
            // InternalFortXTrans.g:9901:2: '='
            {
             before(grammarAccess.getFieldDeclAccess().getEqualsSignKeyword_3_5_0()); 
            match(input,54,FOLLOW_2); 
             after(grammarAccess.getFieldDeclAccess().getEqualsSignKeyword_3_5_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_3_5__0__Impl"


    // $ANTLR start "rule__FieldDecl__Group_3_5__1"
    // InternalFortXTrans.g:9910:1: rule__FieldDecl__Group_3_5__1 : rule__FieldDecl__Group_3_5__1__Impl ;
    public final void rule__FieldDecl__Group_3_5__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9914:1: ( rule__FieldDecl__Group_3_5__1__Impl )
            // InternalFortXTrans.g:9915:2: rule__FieldDecl__Group_3_5__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FieldDecl__Group_3_5__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_3_5__1"


    // $ANTLR start "rule__FieldDecl__Group_3_5__1__Impl"
    // InternalFortXTrans.g:9921:1: rule__FieldDecl__Group_3_5__1__Impl : ( ( rule__FieldDecl__InitAssignment_3_5_1 ) ) ;
    public final void rule__FieldDecl__Group_3_5__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9925:1: ( ( ( rule__FieldDecl__InitAssignment_3_5_1 ) ) )
            // InternalFortXTrans.g:9926:1: ( ( rule__FieldDecl__InitAssignment_3_5_1 ) )
            {
            // InternalFortXTrans.g:9926:1: ( ( rule__FieldDecl__InitAssignment_3_5_1 ) )
            // InternalFortXTrans.g:9927:2: ( rule__FieldDecl__InitAssignment_3_5_1 )
            {
             before(grammarAccess.getFieldDeclAccess().getInitAssignment_3_5_1()); 
            // InternalFortXTrans.g:9928:2: ( rule__FieldDecl__InitAssignment_3_5_1 )
            // InternalFortXTrans.g:9928:3: rule__FieldDecl__InitAssignment_3_5_1
            {
            pushFollow(FOLLOW_2);
            rule__FieldDecl__InitAssignment_3_5_1();

            state._fsp--;


            }

             after(grammarAccess.getFieldDeclAccess().getInitAssignment_3_5_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_3_5__1__Impl"


    // $ANTLR start "rule__NoNewlineVarWTypes__Group_0__0"
    // InternalFortXTrans.g:9937:1: rule__NoNewlineVarWTypes__Group_0__0 : rule__NoNewlineVarWTypes__Group_0__0__Impl rule__NoNewlineVarWTypes__Group_0__1 ;
    public final void rule__NoNewlineVarWTypes__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9941:1: ( rule__NoNewlineVarWTypes__Group_0__0__Impl rule__NoNewlineVarWTypes__Group_0__1 )
            // InternalFortXTrans.g:9942:2: rule__NoNewlineVarWTypes__Group_0__0__Impl rule__NoNewlineVarWTypes__Group_0__1
            {
            pushFollow(FOLLOW_57);
            rule__NoNewlineVarWTypes__Group_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__NoNewlineVarWTypes__Group_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NoNewlineVarWTypes__Group_0__0"


    // $ANTLR start "rule__NoNewlineVarWTypes__Group_0__0__Impl"
    // InternalFortXTrans.g:9949:1: rule__NoNewlineVarWTypes__Group_0__0__Impl : ( ( rule__NoNewlineVarWTypes__SingleAssignment_0_0 ) ) ;
    public final void rule__NoNewlineVarWTypes__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9953:1: ( ( ( rule__NoNewlineVarWTypes__SingleAssignment_0_0 ) ) )
            // InternalFortXTrans.g:9954:1: ( ( rule__NoNewlineVarWTypes__SingleAssignment_0_0 ) )
            {
            // InternalFortXTrans.g:9954:1: ( ( rule__NoNewlineVarWTypes__SingleAssignment_0_0 ) )
            // InternalFortXTrans.g:9955:2: ( rule__NoNewlineVarWTypes__SingleAssignment_0_0 )
            {
             before(grammarAccess.getNoNewlineVarWTypesAccess().getSingleAssignment_0_0()); 
            // InternalFortXTrans.g:9956:2: ( rule__NoNewlineVarWTypes__SingleAssignment_0_0 )
            // InternalFortXTrans.g:9956:3: rule__NoNewlineVarWTypes__SingleAssignment_0_0
            {
            pushFollow(FOLLOW_2);
            rule__NoNewlineVarWTypes__SingleAssignment_0_0();

            state._fsp--;


            }

             after(grammarAccess.getNoNewlineVarWTypesAccess().getSingleAssignment_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NoNewlineVarWTypes__Group_0__0__Impl"


    // $ANTLR start "rule__NoNewlineVarWTypes__Group_0__1"
    // InternalFortXTrans.g:9964:1: rule__NoNewlineVarWTypes__Group_0__1 : rule__NoNewlineVarWTypes__Group_0__1__Impl ;
    public final void rule__NoNewlineVarWTypes__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9968:1: ( rule__NoNewlineVarWTypes__Group_0__1__Impl )
            // InternalFortXTrans.g:9969:2: rule__NoNewlineVarWTypes__Group_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__NoNewlineVarWTypes__Group_0__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NoNewlineVarWTypes__Group_0__1"


    // $ANTLR start "rule__NoNewlineVarWTypes__Group_0__1__Impl"
    // InternalFortXTrans.g:9975:1: rule__NoNewlineVarWTypes__Group_0__1__Impl : ( ( rule__NoNewlineVarWTypes__Group_0_1__0 )? ) ;
    public final void rule__NoNewlineVarWTypes__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9979:1: ( ( ( rule__NoNewlineVarWTypes__Group_0_1__0 )? ) )
            // InternalFortXTrans.g:9980:1: ( ( rule__NoNewlineVarWTypes__Group_0_1__0 )? )
            {
            // InternalFortXTrans.g:9980:1: ( ( rule__NoNewlineVarWTypes__Group_0_1__0 )? )
            // InternalFortXTrans.g:9981:2: ( rule__NoNewlineVarWTypes__Group_0_1__0 )?
            {
             before(grammarAccess.getNoNewlineVarWTypesAccess().getGroup_0_1()); 
            // InternalFortXTrans.g:9982:2: ( rule__NoNewlineVarWTypes__Group_0_1__0 )?
            int alt87=2;
            int LA87_0 = input.LA(1);

            if ( (LA87_0==43) ) {
                alt87=1;
            }
            switch (alt87) {
                case 1 :
                    // InternalFortXTrans.g:9982:3: rule__NoNewlineVarWTypes__Group_0_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__NoNewlineVarWTypes__Group_0_1__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getNoNewlineVarWTypesAccess().getGroup_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NoNewlineVarWTypes__Group_0__1__Impl"


    // $ANTLR start "rule__NoNewlineVarWTypes__Group_0_1__0"
    // InternalFortXTrans.g:9991:1: rule__NoNewlineVarWTypes__Group_0_1__0 : rule__NoNewlineVarWTypes__Group_0_1__0__Impl rule__NoNewlineVarWTypes__Group_0_1__1 ;
    public final void rule__NoNewlineVarWTypes__Group_0_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:9995:1: ( rule__NoNewlineVarWTypes__Group_0_1__0__Impl rule__NoNewlineVarWTypes__Group_0_1__1 )
            // InternalFortXTrans.g:9996:2: rule__NoNewlineVarWTypes__Group_0_1__0__Impl rule__NoNewlineVarWTypes__Group_0_1__1
            {
            pushFollow(FOLLOW_32);
            rule__NoNewlineVarWTypes__Group_0_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__NoNewlineVarWTypes__Group_0_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NoNewlineVarWTypes__Group_0_1__0"


    // $ANTLR start "rule__NoNewlineVarWTypes__Group_0_1__0__Impl"
    // InternalFortXTrans.g:10003:1: rule__NoNewlineVarWTypes__Group_0_1__0__Impl : ( '[' ) ;
    public final void rule__NoNewlineVarWTypes__Group_0_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10007:1: ( ( '[' ) )
            // InternalFortXTrans.g:10008:1: ( '[' )
            {
            // InternalFortXTrans.g:10008:1: ( '[' )
            // InternalFortXTrans.g:10009:2: '['
            {
             before(grammarAccess.getNoNewlineVarWTypesAccess().getLeftSquareBracketKeyword_0_1_0()); 
            match(input,43,FOLLOW_2); 
             after(grammarAccess.getNoNewlineVarWTypesAccess().getLeftSquareBracketKeyword_0_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NoNewlineVarWTypes__Group_0_1__0__Impl"


    // $ANTLR start "rule__NoNewlineVarWTypes__Group_0_1__1"
    // InternalFortXTrans.g:10018:1: rule__NoNewlineVarWTypes__Group_0_1__1 : rule__NoNewlineVarWTypes__Group_0_1__1__Impl rule__NoNewlineVarWTypes__Group_0_1__2 ;
    public final void rule__NoNewlineVarWTypes__Group_0_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10022:1: ( rule__NoNewlineVarWTypes__Group_0_1__1__Impl rule__NoNewlineVarWTypes__Group_0_1__2 )
            // InternalFortXTrans.g:10023:2: rule__NoNewlineVarWTypes__Group_0_1__1__Impl rule__NoNewlineVarWTypes__Group_0_1__2
            {
            pushFollow(FOLLOW_60);
            rule__NoNewlineVarWTypes__Group_0_1__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__NoNewlineVarWTypes__Group_0_1__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NoNewlineVarWTypes__Group_0_1__1"


    // $ANTLR start "rule__NoNewlineVarWTypes__Group_0_1__1__Impl"
    // InternalFortXTrans.g:10030:1: rule__NoNewlineVarWTypes__Group_0_1__1__Impl : ( ( rule__NoNewlineVarWTypes__ArrsizeAssignment_0_1_1 ) ) ;
    public final void rule__NoNewlineVarWTypes__Group_0_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10034:1: ( ( ( rule__NoNewlineVarWTypes__ArrsizeAssignment_0_1_1 ) ) )
            // InternalFortXTrans.g:10035:1: ( ( rule__NoNewlineVarWTypes__ArrsizeAssignment_0_1_1 ) )
            {
            // InternalFortXTrans.g:10035:1: ( ( rule__NoNewlineVarWTypes__ArrsizeAssignment_0_1_1 ) )
            // InternalFortXTrans.g:10036:2: ( rule__NoNewlineVarWTypes__ArrsizeAssignment_0_1_1 )
            {
             before(grammarAccess.getNoNewlineVarWTypesAccess().getArrsizeAssignment_0_1_1()); 
            // InternalFortXTrans.g:10037:2: ( rule__NoNewlineVarWTypes__ArrsizeAssignment_0_1_1 )
            // InternalFortXTrans.g:10037:3: rule__NoNewlineVarWTypes__ArrsizeAssignment_0_1_1
            {
            pushFollow(FOLLOW_2);
            rule__NoNewlineVarWTypes__ArrsizeAssignment_0_1_1();

            state._fsp--;


            }

             after(grammarAccess.getNoNewlineVarWTypesAccess().getArrsizeAssignment_0_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NoNewlineVarWTypes__Group_0_1__1__Impl"


    // $ANTLR start "rule__NoNewlineVarWTypes__Group_0_1__2"
    // InternalFortXTrans.g:10045:1: rule__NoNewlineVarWTypes__Group_0_1__2 : rule__NoNewlineVarWTypes__Group_0_1__2__Impl ;
    public final void rule__NoNewlineVarWTypes__Group_0_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10049:1: ( rule__NoNewlineVarWTypes__Group_0_1__2__Impl )
            // InternalFortXTrans.g:10050:2: rule__NoNewlineVarWTypes__Group_0_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__NoNewlineVarWTypes__Group_0_1__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NoNewlineVarWTypes__Group_0_1__2"


    // $ANTLR start "rule__NoNewlineVarWTypes__Group_0_1__2__Impl"
    // InternalFortXTrans.g:10056:1: rule__NoNewlineVarWTypes__Group_0_1__2__Impl : ( ']' ) ;
    public final void rule__NoNewlineVarWTypes__Group_0_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10060:1: ( ( ']' ) )
            // InternalFortXTrans.g:10061:1: ( ']' )
            {
            // InternalFortXTrans.g:10061:1: ( ']' )
            // InternalFortXTrans.g:10062:2: ']'
            {
             before(grammarAccess.getNoNewlineVarWTypesAccess().getRightSquareBracketKeyword_0_1_2()); 
            match(input,45,FOLLOW_2); 
             after(grammarAccess.getNoNewlineVarWTypesAccess().getRightSquareBracketKeyword_0_1_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NoNewlineVarWTypes__Group_0_1__2__Impl"


    // $ANTLR start "rule__NoNewlineVarWTypes__Group_1__0"
    // InternalFortXTrans.g:10072:1: rule__NoNewlineVarWTypes__Group_1__0 : rule__NoNewlineVarWTypes__Group_1__0__Impl rule__NoNewlineVarWTypes__Group_1__1 ;
    public final void rule__NoNewlineVarWTypes__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10076:1: ( rule__NoNewlineVarWTypes__Group_1__0__Impl rule__NoNewlineVarWTypes__Group_1__1 )
            // InternalFortXTrans.g:10077:2: rule__NoNewlineVarWTypes__Group_1__0__Impl rule__NoNewlineVarWTypes__Group_1__1
            {
            pushFollow(FOLLOW_5);
            rule__NoNewlineVarWTypes__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__NoNewlineVarWTypes__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NoNewlineVarWTypes__Group_1__0"


    // $ANTLR start "rule__NoNewlineVarWTypes__Group_1__0__Impl"
    // InternalFortXTrans.g:10084:1: rule__NoNewlineVarWTypes__Group_1__0__Impl : ( '(' ) ;
    public final void rule__NoNewlineVarWTypes__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10088:1: ( ( '(' ) )
            // InternalFortXTrans.g:10089:1: ( '(' )
            {
            // InternalFortXTrans.g:10089:1: ( '(' )
            // InternalFortXTrans.g:10090:2: '('
            {
             before(grammarAccess.getNoNewlineVarWTypesAccess().getLeftParenthesisKeyword_1_0()); 
            match(input,33,FOLLOW_2); 
             after(grammarAccess.getNoNewlineVarWTypesAccess().getLeftParenthesisKeyword_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NoNewlineVarWTypes__Group_1__0__Impl"


    // $ANTLR start "rule__NoNewlineVarWTypes__Group_1__1"
    // InternalFortXTrans.g:10099:1: rule__NoNewlineVarWTypes__Group_1__1 : rule__NoNewlineVarWTypes__Group_1__1__Impl rule__NoNewlineVarWTypes__Group_1__2 ;
    public final void rule__NoNewlineVarWTypes__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10103:1: ( rule__NoNewlineVarWTypes__Group_1__1__Impl rule__NoNewlineVarWTypes__Group_1__2 )
            // InternalFortXTrans.g:10104:2: rule__NoNewlineVarWTypes__Group_1__1__Impl rule__NoNewlineVarWTypes__Group_1__2
            {
            pushFollow(FOLLOW_24);
            rule__NoNewlineVarWTypes__Group_1__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__NoNewlineVarWTypes__Group_1__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NoNewlineVarWTypes__Group_1__1"


    // $ANTLR start "rule__NoNewlineVarWTypes__Group_1__1__Impl"
    // InternalFortXTrans.g:10111:1: rule__NoNewlineVarWTypes__Group_1__1__Impl : ( ( rule__NoNewlineVarWTypes__MultipleAssignment_1_1 ) ) ;
    public final void rule__NoNewlineVarWTypes__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10115:1: ( ( ( rule__NoNewlineVarWTypes__MultipleAssignment_1_1 ) ) )
            // InternalFortXTrans.g:10116:1: ( ( rule__NoNewlineVarWTypes__MultipleAssignment_1_1 ) )
            {
            // InternalFortXTrans.g:10116:1: ( ( rule__NoNewlineVarWTypes__MultipleAssignment_1_1 ) )
            // InternalFortXTrans.g:10117:2: ( rule__NoNewlineVarWTypes__MultipleAssignment_1_1 )
            {
             before(grammarAccess.getNoNewlineVarWTypesAccess().getMultipleAssignment_1_1()); 
            // InternalFortXTrans.g:10118:2: ( rule__NoNewlineVarWTypes__MultipleAssignment_1_1 )
            // InternalFortXTrans.g:10118:3: rule__NoNewlineVarWTypes__MultipleAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__NoNewlineVarWTypes__MultipleAssignment_1_1();

            state._fsp--;


            }

             after(grammarAccess.getNoNewlineVarWTypesAccess().getMultipleAssignment_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NoNewlineVarWTypes__Group_1__1__Impl"


    // $ANTLR start "rule__NoNewlineVarWTypes__Group_1__2"
    // InternalFortXTrans.g:10126:1: rule__NoNewlineVarWTypes__Group_1__2 : rule__NoNewlineVarWTypes__Group_1__2__Impl rule__NoNewlineVarWTypes__Group_1__3 ;
    public final void rule__NoNewlineVarWTypes__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10130:1: ( rule__NoNewlineVarWTypes__Group_1__2__Impl rule__NoNewlineVarWTypes__Group_1__3 )
            // InternalFortXTrans.g:10131:2: rule__NoNewlineVarWTypes__Group_1__2__Impl rule__NoNewlineVarWTypes__Group_1__3
            {
            pushFollow(FOLLOW_23);
            rule__NoNewlineVarWTypes__Group_1__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__NoNewlineVarWTypes__Group_1__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NoNewlineVarWTypes__Group_1__2"


    // $ANTLR start "rule__NoNewlineVarWTypes__Group_1__2__Impl"
    // InternalFortXTrans.g:10138:1: rule__NoNewlineVarWTypes__Group_1__2__Impl : ( ( ( rule__NoNewlineVarWTypes__Group_1_2__0 ) ) ( ( rule__NoNewlineVarWTypes__Group_1_2__0 )* ) ) ;
    public final void rule__NoNewlineVarWTypes__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10142:1: ( ( ( ( rule__NoNewlineVarWTypes__Group_1_2__0 ) ) ( ( rule__NoNewlineVarWTypes__Group_1_2__0 )* ) ) )
            // InternalFortXTrans.g:10143:1: ( ( ( rule__NoNewlineVarWTypes__Group_1_2__0 ) ) ( ( rule__NoNewlineVarWTypes__Group_1_2__0 )* ) )
            {
            // InternalFortXTrans.g:10143:1: ( ( ( rule__NoNewlineVarWTypes__Group_1_2__0 ) ) ( ( rule__NoNewlineVarWTypes__Group_1_2__0 )* ) )
            // InternalFortXTrans.g:10144:2: ( ( rule__NoNewlineVarWTypes__Group_1_2__0 ) ) ( ( rule__NoNewlineVarWTypes__Group_1_2__0 )* )
            {
            // InternalFortXTrans.g:10144:2: ( ( rule__NoNewlineVarWTypes__Group_1_2__0 ) )
            // InternalFortXTrans.g:10145:3: ( rule__NoNewlineVarWTypes__Group_1_2__0 )
            {
             before(grammarAccess.getNoNewlineVarWTypesAccess().getGroup_1_2()); 
            // InternalFortXTrans.g:10146:3: ( rule__NoNewlineVarWTypes__Group_1_2__0 )
            // InternalFortXTrans.g:10146:4: rule__NoNewlineVarWTypes__Group_1_2__0
            {
            pushFollow(FOLLOW_15);
            rule__NoNewlineVarWTypes__Group_1_2__0();

            state._fsp--;


            }

             after(grammarAccess.getNoNewlineVarWTypesAccess().getGroup_1_2()); 

            }

            // InternalFortXTrans.g:10149:2: ( ( rule__NoNewlineVarWTypes__Group_1_2__0 )* )
            // InternalFortXTrans.g:10150:3: ( rule__NoNewlineVarWTypes__Group_1_2__0 )*
            {
             before(grammarAccess.getNoNewlineVarWTypesAccess().getGroup_1_2()); 
            // InternalFortXTrans.g:10151:3: ( rule__NoNewlineVarWTypes__Group_1_2__0 )*
            loop88:
            do {
                int alt88=2;
                int LA88_0 = input.LA(1);

                if ( (LA88_0==29) ) {
                    alt88=1;
                }


                switch (alt88) {
            	case 1 :
            	    // InternalFortXTrans.g:10151:4: rule__NoNewlineVarWTypes__Group_1_2__0
            	    {
            	    pushFollow(FOLLOW_15);
            	    rule__NoNewlineVarWTypes__Group_1_2__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop88;
                }
            } while (true);

             after(grammarAccess.getNoNewlineVarWTypesAccess().getGroup_1_2()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NoNewlineVarWTypes__Group_1__2__Impl"


    // $ANTLR start "rule__NoNewlineVarWTypes__Group_1__3"
    // InternalFortXTrans.g:10160:1: rule__NoNewlineVarWTypes__Group_1__3 : rule__NoNewlineVarWTypes__Group_1__3__Impl ;
    public final void rule__NoNewlineVarWTypes__Group_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10164:1: ( rule__NoNewlineVarWTypes__Group_1__3__Impl )
            // InternalFortXTrans.g:10165:2: rule__NoNewlineVarWTypes__Group_1__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__NoNewlineVarWTypes__Group_1__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NoNewlineVarWTypes__Group_1__3"


    // $ANTLR start "rule__NoNewlineVarWTypes__Group_1__3__Impl"
    // InternalFortXTrans.g:10171:1: rule__NoNewlineVarWTypes__Group_1__3__Impl : ( ')' ) ;
    public final void rule__NoNewlineVarWTypes__Group_1__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10175:1: ( ( ')' ) )
            // InternalFortXTrans.g:10176:1: ( ')' )
            {
            // InternalFortXTrans.g:10176:1: ( ')' )
            // InternalFortXTrans.g:10177:2: ')'
            {
             before(grammarAccess.getNoNewlineVarWTypesAccess().getRightParenthesisKeyword_1_3()); 
            match(input,34,FOLLOW_2); 
             after(grammarAccess.getNoNewlineVarWTypesAccess().getRightParenthesisKeyword_1_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NoNewlineVarWTypes__Group_1__3__Impl"


    // $ANTLR start "rule__NoNewlineVarWTypes__Group_1_2__0"
    // InternalFortXTrans.g:10187:1: rule__NoNewlineVarWTypes__Group_1_2__0 : rule__NoNewlineVarWTypes__Group_1_2__0__Impl rule__NoNewlineVarWTypes__Group_1_2__1 ;
    public final void rule__NoNewlineVarWTypes__Group_1_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10191:1: ( rule__NoNewlineVarWTypes__Group_1_2__0__Impl rule__NoNewlineVarWTypes__Group_1_2__1 )
            // InternalFortXTrans.g:10192:2: rule__NoNewlineVarWTypes__Group_1_2__0__Impl rule__NoNewlineVarWTypes__Group_1_2__1
            {
            pushFollow(FOLLOW_5);
            rule__NoNewlineVarWTypes__Group_1_2__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__NoNewlineVarWTypes__Group_1_2__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NoNewlineVarWTypes__Group_1_2__0"


    // $ANTLR start "rule__NoNewlineVarWTypes__Group_1_2__0__Impl"
    // InternalFortXTrans.g:10199:1: rule__NoNewlineVarWTypes__Group_1_2__0__Impl : ( ',' ) ;
    public final void rule__NoNewlineVarWTypes__Group_1_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10203:1: ( ( ',' ) )
            // InternalFortXTrans.g:10204:1: ( ',' )
            {
            // InternalFortXTrans.g:10204:1: ( ',' )
            // InternalFortXTrans.g:10205:2: ','
            {
             before(grammarAccess.getNoNewlineVarWTypesAccess().getCommaKeyword_1_2_0()); 
            match(input,29,FOLLOW_2); 
             after(grammarAccess.getNoNewlineVarWTypesAccess().getCommaKeyword_1_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NoNewlineVarWTypes__Group_1_2__0__Impl"


    // $ANTLR start "rule__NoNewlineVarWTypes__Group_1_2__1"
    // InternalFortXTrans.g:10214:1: rule__NoNewlineVarWTypes__Group_1_2__1 : rule__NoNewlineVarWTypes__Group_1_2__1__Impl ;
    public final void rule__NoNewlineVarWTypes__Group_1_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10218:1: ( rule__NoNewlineVarWTypes__Group_1_2__1__Impl )
            // InternalFortXTrans.g:10219:2: rule__NoNewlineVarWTypes__Group_1_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__NoNewlineVarWTypes__Group_1_2__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NoNewlineVarWTypes__Group_1_2__1"


    // $ANTLR start "rule__NoNewlineVarWTypes__Group_1_2__1__Impl"
    // InternalFortXTrans.g:10225:1: rule__NoNewlineVarWTypes__Group_1_2__1__Impl : ( ( rule__NoNewlineVarWTypes__MultipleAssignment_1_2_1 ) ) ;
    public final void rule__NoNewlineVarWTypes__Group_1_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10229:1: ( ( ( rule__NoNewlineVarWTypes__MultipleAssignment_1_2_1 ) ) )
            // InternalFortXTrans.g:10230:1: ( ( rule__NoNewlineVarWTypes__MultipleAssignment_1_2_1 ) )
            {
            // InternalFortXTrans.g:10230:1: ( ( rule__NoNewlineVarWTypes__MultipleAssignment_1_2_1 ) )
            // InternalFortXTrans.g:10231:2: ( rule__NoNewlineVarWTypes__MultipleAssignment_1_2_1 )
            {
             before(grammarAccess.getNoNewlineVarWTypesAccess().getMultipleAssignment_1_2_1()); 
            // InternalFortXTrans.g:10232:2: ( rule__NoNewlineVarWTypes__MultipleAssignment_1_2_1 )
            // InternalFortXTrans.g:10232:3: rule__NoNewlineVarWTypes__MultipleAssignment_1_2_1
            {
            pushFollow(FOLLOW_2);
            rule__NoNewlineVarWTypes__MultipleAssignment_1_2_1();

            state._fsp--;


            }

             after(grammarAccess.getNoNewlineVarWTypesAccess().getMultipleAssignment_1_2_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NoNewlineVarWTypes__Group_1_2__1__Impl"


    // $ANTLR start "rule__NoNewlineVarWType__Group__0"
    // InternalFortXTrans.g:10241:1: rule__NoNewlineVarWType__Group__0 : rule__NoNewlineVarWType__Group__0__Impl rule__NoNewlineVarWType__Group__1 ;
    public final void rule__NoNewlineVarWType__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10245:1: ( rule__NoNewlineVarWType__Group__0__Impl rule__NoNewlineVarWType__Group__1 )
            // InternalFortXTrans.g:10246:2: rule__NoNewlineVarWType__Group__0__Impl rule__NoNewlineVarWType__Group__1
            {
            pushFollow(FOLLOW_26);
            rule__NoNewlineVarWType__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__NoNewlineVarWType__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NoNewlineVarWType__Group__0"


    // $ANTLR start "rule__NoNewlineVarWType__Group__0__Impl"
    // InternalFortXTrans.g:10253:1: rule__NoNewlineVarWType__Group__0__Impl : ( ( rule__NoNewlineVarWType__BidAssignment_0 ) ) ;
    public final void rule__NoNewlineVarWType__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10257:1: ( ( ( rule__NoNewlineVarWType__BidAssignment_0 ) ) )
            // InternalFortXTrans.g:10258:1: ( ( rule__NoNewlineVarWType__BidAssignment_0 ) )
            {
            // InternalFortXTrans.g:10258:1: ( ( rule__NoNewlineVarWType__BidAssignment_0 ) )
            // InternalFortXTrans.g:10259:2: ( rule__NoNewlineVarWType__BidAssignment_0 )
            {
             before(grammarAccess.getNoNewlineVarWTypeAccess().getBidAssignment_0()); 
            // InternalFortXTrans.g:10260:2: ( rule__NoNewlineVarWType__BidAssignment_0 )
            // InternalFortXTrans.g:10260:3: rule__NoNewlineVarWType__BidAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__NoNewlineVarWType__BidAssignment_0();

            state._fsp--;


            }

             after(grammarAccess.getNoNewlineVarWTypeAccess().getBidAssignment_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NoNewlineVarWType__Group__0__Impl"


    // $ANTLR start "rule__NoNewlineVarWType__Group__1"
    // InternalFortXTrans.g:10268:1: rule__NoNewlineVarWType__Group__1 : rule__NoNewlineVarWType__Group__1__Impl ;
    public final void rule__NoNewlineVarWType__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10272:1: ( rule__NoNewlineVarWType__Group__1__Impl )
            // InternalFortXTrans.g:10273:2: rule__NoNewlineVarWType__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__NoNewlineVarWType__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NoNewlineVarWType__Group__1"


    // $ANTLR start "rule__NoNewlineVarWType__Group__1__Impl"
    // InternalFortXTrans.g:10279:1: rule__NoNewlineVarWType__Group__1__Impl : ( ( rule__NoNewlineVarWType__IstypeAssignment_1 ) ) ;
    public final void rule__NoNewlineVarWType__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10283:1: ( ( ( rule__NoNewlineVarWType__IstypeAssignment_1 ) ) )
            // InternalFortXTrans.g:10284:1: ( ( rule__NoNewlineVarWType__IstypeAssignment_1 ) )
            {
            // InternalFortXTrans.g:10284:1: ( ( rule__NoNewlineVarWType__IstypeAssignment_1 ) )
            // InternalFortXTrans.g:10285:2: ( rule__NoNewlineVarWType__IstypeAssignment_1 )
            {
             before(grammarAccess.getNoNewlineVarWTypeAccess().getIstypeAssignment_1()); 
            // InternalFortXTrans.g:10286:2: ( rule__NoNewlineVarWType__IstypeAssignment_1 )
            // InternalFortXTrans.g:10286:3: rule__NoNewlineVarWType__IstypeAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__NoNewlineVarWType__IstypeAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getNoNewlineVarWTypeAccess().getIstypeAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NoNewlineVarWType__Group__1__Impl"


    // $ANTLR start "rule__LiteralTup__Group_1__0"
    // InternalFortXTrans.g:10295:1: rule__LiteralTup__Group_1__0 : rule__LiteralTup__Group_1__0__Impl rule__LiteralTup__Group_1__1 ;
    public final void rule__LiteralTup__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10299:1: ( rule__LiteralTup__Group_1__0__Impl rule__LiteralTup__Group_1__1 )
            // InternalFortXTrans.g:10300:2: rule__LiteralTup__Group_1__0__Impl rule__LiteralTup__Group_1__1
            {
            pushFollow(FOLLOW_78);
            rule__LiteralTup__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__LiteralTup__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralTup__Group_1__0"


    // $ANTLR start "rule__LiteralTup__Group_1__0__Impl"
    // InternalFortXTrans.g:10307:1: rule__LiteralTup__Group_1__0__Impl : ( '(' ) ;
    public final void rule__LiteralTup__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10311:1: ( ( '(' ) )
            // InternalFortXTrans.g:10312:1: ( '(' )
            {
            // InternalFortXTrans.g:10312:1: ( '(' )
            // InternalFortXTrans.g:10313:2: '('
            {
             before(grammarAccess.getLiteralTupAccess().getLeftParenthesisKeyword_1_0()); 
            match(input,33,FOLLOW_2); 
             after(grammarAccess.getLiteralTupAccess().getLeftParenthesisKeyword_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralTup__Group_1__0__Impl"


    // $ANTLR start "rule__LiteralTup__Group_1__1"
    // InternalFortXTrans.g:10322:1: rule__LiteralTup__Group_1__1 : rule__LiteralTup__Group_1__1__Impl rule__LiteralTup__Group_1__2 ;
    public final void rule__LiteralTup__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10326:1: ( rule__LiteralTup__Group_1__1__Impl rule__LiteralTup__Group_1__2 )
            // InternalFortXTrans.g:10327:2: rule__LiteralTup__Group_1__1__Impl rule__LiteralTup__Group_1__2
            {
            pushFollow(FOLLOW_23);
            rule__LiteralTup__Group_1__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__LiteralTup__Group_1__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralTup__Group_1__1"


    // $ANTLR start "rule__LiteralTup__Group_1__1__Impl"
    // InternalFortXTrans.g:10334:1: rule__LiteralTup__Group_1__1__Impl : ( ruleLiteralList ) ;
    public final void rule__LiteralTup__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10338:1: ( ( ruleLiteralList ) )
            // InternalFortXTrans.g:10339:1: ( ruleLiteralList )
            {
            // InternalFortXTrans.g:10339:1: ( ruleLiteralList )
            // InternalFortXTrans.g:10340:2: ruleLiteralList
            {
             before(grammarAccess.getLiteralTupAccess().getLiteralListParserRuleCall_1_1()); 
            pushFollow(FOLLOW_2);
            ruleLiteralList();

            state._fsp--;

             after(grammarAccess.getLiteralTupAccess().getLiteralListParserRuleCall_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralTup__Group_1__1__Impl"


    // $ANTLR start "rule__LiteralTup__Group_1__2"
    // InternalFortXTrans.g:10349:1: rule__LiteralTup__Group_1__2 : rule__LiteralTup__Group_1__2__Impl ;
    public final void rule__LiteralTup__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10353:1: ( rule__LiteralTup__Group_1__2__Impl )
            // InternalFortXTrans.g:10354:2: rule__LiteralTup__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__LiteralTup__Group_1__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralTup__Group_1__2"


    // $ANTLR start "rule__LiteralTup__Group_1__2__Impl"
    // InternalFortXTrans.g:10360:1: rule__LiteralTup__Group_1__2__Impl : ( ')' ) ;
    public final void rule__LiteralTup__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10364:1: ( ( ')' ) )
            // InternalFortXTrans.g:10365:1: ( ')' )
            {
            // InternalFortXTrans.g:10365:1: ( ')' )
            // InternalFortXTrans.g:10366:2: ')'
            {
             before(grammarAccess.getLiteralTupAccess().getRightParenthesisKeyword_1_2()); 
            match(input,34,FOLLOW_2); 
             after(grammarAccess.getLiteralTupAccess().getRightParenthesisKeyword_1_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralTup__Group_1__2__Impl"


    // $ANTLR start "rule__LiteralList__Group__0"
    // InternalFortXTrans.g:10376:1: rule__LiteralList__Group__0 : rule__LiteralList__Group__0__Impl rule__LiteralList__Group__1 ;
    public final void rule__LiteralList__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10380:1: ( rule__LiteralList__Group__0__Impl rule__LiteralList__Group__1 )
            // InternalFortXTrans.g:10381:2: rule__LiteralList__Group__0__Impl rule__LiteralList__Group__1
            {
            pushFollow(FOLLOW_24);
            rule__LiteralList__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__LiteralList__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralList__Group__0"


    // $ANTLR start "rule__LiteralList__Group__0__Impl"
    // InternalFortXTrans.g:10388:1: rule__LiteralList__Group__0__Impl : ( ( rule__LiteralList__LitAssignment_0 ) ) ;
    public final void rule__LiteralList__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10392:1: ( ( ( rule__LiteralList__LitAssignment_0 ) ) )
            // InternalFortXTrans.g:10393:1: ( ( rule__LiteralList__LitAssignment_0 ) )
            {
            // InternalFortXTrans.g:10393:1: ( ( rule__LiteralList__LitAssignment_0 ) )
            // InternalFortXTrans.g:10394:2: ( rule__LiteralList__LitAssignment_0 )
            {
             before(grammarAccess.getLiteralListAccess().getLitAssignment_0()); 
            // InternalFortXTrans.g:10395:2: ( rule__LiteralList__LitAssignment_0 )
            // InternalFortXTrans.g:10395:3: rule__LiteralList__LitAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__LiteralList__LitAssignment_0();

            state._fsp--;


            }

             after(grammarAccess.getLiteralListAccess().getLitAssignment_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralList__Group__0__Impl"


    // $ANTLR start "rule__LiteralList__Group__1"
    // InternalFortXTrans.g:10403:1: rule__LiteralList__Group__1 : rule__LiteralList__Group__1__Impl ;
    public final void rule__LiteralList__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10407:1: ( rule__LiteralList__Group__1__Impl )
            // InternalFortXTrans.g:10408:2: rule__LiteralList__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__LiteralList__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralList__Group__1"


    // $ANTLR start "rule__LiteralList__Group__1__Impl"
    // InternalFortXTrans.g:10414:1: rule__LiteralList__Group__1__Impl : ( ( rule__LiteralList__Group_1__0 )* ) ;
    public final void rule__LiteralList__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10418:1: ( ( ( rule__LiteralList__Group_1__0 )* ) )
            // InternalFortXTrans.g:10419:1: ( ( rule__LiteralList__Group_1__0 )* )
            {
            // InternalFortXTrans.g:10419:1: ( ( rule__LiteralList__Group_1__0 )* )
            // InternalFortXTrans.g:10420:2: ( rule__LiteralList__Group_1__0 )*
            {
             before(grammarAccess.getLiteralListAccess().getGroup_1()); 
            // InternalFortXTrans.g:10421:2: ( rule__LiteralList__Group_1__0 )*
            loop89:
            do {
                int alt89=2;
                int LA89_0 = input.LA(1);

                if ( (LA89_0==29) ) {
                    alt89=1;
                }


                switch (alt89) {
            	case 1 :
            	    // InternalFortXTrans.g:10421:3: rule__LiteralList__Group_1__0
            	    {
            	    pushFollow(FOLLOW_15);
            	    rule__LiteralList__Group_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop89;
                }
            } while (true);

             after(grammarAccess.getLiteralListAccess().getGroup_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralList__Group__1__Impl"


    // $ANTLR start "rule__LiteralList__Group_1__0"
    // InternalFortXTrans.g:10430:1: rule__LiteralList__Group_1__0 : rule__LiteralList__Group_1__0__Impl rule__LiteralList__Group_1__1 ;
    public final void rule__LiteralList__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10434:1: ( rule__LiteralList__Group_1__0__Impl rule__LiteralList__Group_1__1 )
            // InternalFortXTrans.g:10435:2: rule__LiteralList__Group_1__0__Impl rule__LiteralList__Group_1__1
            {
            pushFollow(FOLLOW_78);
            rule__LiteralList__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__LiteralList__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralList__Group_1__0"


    // $ANTLR start "rule__LiteralList__Group_1__0__Impl"
    // InternalFortXTrans.g:10442:1: rule__LiteralList__Group_1__0__Impl : ( ',' ) ;
    public final void rule__LiteralList__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10446:1: ( ( ',' ) )
            // InternalFortXTrans.g:10447:1: ( ',' )
            {
            // InternalFortXTrans.g:10447:1: ( ',' )
            // InternalFortXTrans.g:10448:2: ','
            {
             before(grammarAccess.getLiteralListAccess().getCommaKeyword_1_0()); 
            match(input,29,FOLLOW_2); 
             after(grammarAccess.getLiteralListAccess().getCommaKeyword_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralList__Group_1__0__Impl"


    // $ANTLR start "rule__LiteralList__Group_1__1"
    // InternalFortXTrans.g:10457:1: rule__LiteralList__Group_1__1 : rule__LiteralList__Group_1__1__Impl ;
    public final void rule__LiteralList__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10461:1: ( rule__LiteralList__Group_1__1__Impl )
            // InternalFortXTrans.g:10462:2: rule__LiteralList__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__LiteralList__Group_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralList__Group_1__1"


    // $ANTLR start "rule__LiteralList__Group_1__1__Impl"
    // InternalFortXTrans.g:10468:1: rule__LiteralList__Group_1__1__Impl : ( ( rule__LiteralList__LitAssignment_1_1 ) ) ;
    public final void rule__LiteralList__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10472:1: ( ( ( rule__LiteralList__LitAssignment_1_1 ) ) )
            // InternalFortXTrans.g:10473:1: ( ( rule__LiteralList__LitAssignment_1_1 ) )
            {
            // InternalFortXTrans.g:10473:1: ( ( rule__LiteralList__LitAssignment_1_1 ) )
            // InternalFortXTrans.g:10474:2: ( rule__LiteralList__LitAssignment_1_1 )
            {
             before(grammarAccess.getLiteralListAccess().getLitAssignment_1_1()); 
            // InternalFortXTrans.g:10475:2: ( rule__LiteralList__LitAssignment_1_1 )
            // InternalFortXTrans.g:10475:3: rule__LiteralList__LitAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__LiteralList__LitAssignment_1_1();

            state._fsp--;


            }

             after(grammarAccess.getLiteralListAccess().getLitAssignment_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralList__Group_1__1__Impl"


    // $ANTLR start "rule__Literal__Group_0__0"
    // InternalFortXTrans.g:10484:1: rule__Literal__Group_0__0 : rule__Literal__Group_0__0__Impl rule__Literal__Group_0__1 ;
    public final void rule__Literal__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10488:1: ( rule__Literal__Group_0__0__Impl rule__Literal__Group_0__1 )
            // InternalFortXTrans.g:10489:2: rule__Literal__Group_0__0__Impl rule__Literal__Group_0__1
            {
            pushFollow(FOLLOW_79);
            rule__Literal__Group_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Literal__Group_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Literal__Group_0__0"


    // $ANTLR start "rule__Literal__Group_0__0__Impl"
    // InternalFortXTrans.g:10496:1: rule__Literal__Group_0__0__Impl : ( () ) ;
    public final void rule__Literal__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10500:1: ( ( () ) )
            // InternalFortXTrans.g:10501:1: ( () )
            {
            // InternalFortXTrans.g:10501:1: ( () )
            // InternalFortXTrans.g:10502:2: ()
            {
             before(grammarAccess.getLiteralAccess().getIntConstAction_0_0()); 
            // InternalFortXTrans.g:10503:2: ()
            // InternalFortXTrans.g:10503:3: 
            {
            }

             after(grammarAccess.getLiteralAccess().getIntConstAction_0_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Literal__Group_0__0__Impl"


    // $ANTLR start "rule__Literal__Group_0__1"
    // InternalFortXTrans.g:10511:1: rule__Literal__Group_0__1 : rule__Literal__Group_0__1__Impl ;
    public final void rule__Literal__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10515:1: ( rule__Literal__Group_0__1__Impl )
            // InternalFortXTrans.g:10516:2: rule__Literal__Group_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Literal__Group_0__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Literal__Group_0__1"


    // $ANTLR start "rule__Literal__Group_0__1__Impl"
    // InternalFortXTrans.g:10522:1: rule__Literal__Group_0__1__Impl : ( ( rule__Literal__ValueAssignment_0_1 ) ) ;
    public final void rule__Literal__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10526:1: ( ( ( rule__Literal__ValueAssignment_0_1 ) ) )
            // InternalFortXTrans.g:10527:1: ( ( rule__Literal__ValueAssignment_0_1 ) )
            {
            // InternalFortXTrans.g:10527:1: ( ( rule__Literal__ValueAssignment_0_1 ) )
            // InternalFortXTrans.g:10528:2: ( rule__Literal__ValueAssignment_0_1 )
            {
             before(grammarAccess.getLiteralAccess().getValueAssignment_0_1()); 
            // InternalFortXTrans.g:10529:2: ( rule__Literal__ValueAssignment_0_1 )
            // InternalFortXTrans.g:10529:3: rule__Literal__ValueAssignment_0_1
            {
            pushFollow(FOLLOW_2);
            rule__Literal__ValueAssignment_0_1();

            state._fsp--;


            }

             after(grammarAccess.getLiteralAccess().getValueAssignment_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Literal__Group_0__1__Impl"


    // $ANTLR start "rule__Literal__Group_1__0"
    // InternalFortXTrans.g:10538:1: rule__Literal__Group_1__0 : rule__Literal__Group_1__0__Impl rule__Literal__Group_1__1 ;
    public final void rule__Literal__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10542:1: ( rule__Literal__Group_1__0__Impl rule__Literal__Group_1__1 )
            // InternalFortXTrans.g:10543:2: rule__Literal__Group_1__0__Impl rule__Literal__Group_1__1
            {
            pushFollow(FOLLOW_80);
            rule__Literal__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Literal__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Literal__Group_1__0"


    // $ANTLR start "rule__Literal__Group_1__0__Impl"
    // InternalFortXTrans.g:10550:1: rule__Literal__Group_1__0__Impl : ( () ) ;
    public final void rule__Literal__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10554:1: ( ( () ) )
            // InternalFortXTrans.g:10555:1: ( () )
            {
            // InternalFortXTrans.g:10555:1: ( () )
            // InternalFortXTrans.g:10556:2: ()
            {
             before(grammarAccess.getLiteralAccess().getFloatConstAction_1_0()); 
            // InternalFortXTrans.g:10557:2: ()
            // InternalFortXTrans.g:10557:3: 
            {
            }

             after(grammarAccess.getLiteralAccess().getFloatConstAction_1_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Literal__Group_1__0__Impl"


    // $ANTLR start "rule__Literal__Group_1__1"
    // InternalFortXTrans.g:10565:1: rule__Literal__Group_1__1 : rule__Literal__Group_1__1__Impl ;
    public final void rule__Literal__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10569:1: ( rule__Literal__Group_1__1__Impl )
            // InternalFortXTrans.g:10570:2: rule__Literal__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Literal__Group_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Literal__Group_1__1"


    // $ANTLR start "rule__Literal__Group_1__1__Impl"
    // InternalFortXTrans.g:10576:1: rule__Literal__Group_1__1__Impl : ( ( rule__Literal__ValueAssignment_1_1 ) ) ;
    public final void rule__Literal__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10580:1: ( ( ( rule__Literal__ValueAssignment_1_1 ) ) )
            // InternalFortXTrans.g:10581:1: ( ( rule__Literal__ValueAssignment_1_1 ) )
            {
            // InternalFortXTrans.g:10581:1: ( ( rule__Literal__ValueAssignment_1_1 ) )
            // InternalFortXTrans.g:10582:2: ( rule__Literal__ValueAssignment_1_1 )
            {
             before(grammarAccess.getLiteralAccess().getValueAssignment_1_1()); 
            // InternalFortXTrans.g:10583:2: ( rule__Literal__ValueAssignment_1_1 )
            // InternalFortXTrans.g:10583:3: rule__Literal__ValueAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Literal__ValueAssignment_1_1();

            state._fsp--;


            }

             after(grammarAccess.getLiteralAccess().getValueAssignment_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Literal__Group_1__1__Impl"


    // $ANTLR start "rule__Literal__Group_2__0"
    // InternalFortXTrans.g:10592:1: rule__Literal__Group_2__0 : rule__Literal__Group_2__0__Impl rule__Literal__Group_2__1 ;
    public final void rule__Literal__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10596:1: ( rule__Literal__Group_2__0__Impl rule__Literal__Group_2__1 )
            // InternalFortXTrans.g:10597:2: rule__Literal__Group_2__0__Impl rule__Literal__Group_2__1
            {
            pushFollow(FOLLOW_81);
            rule__Literal__Group_2__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Literal__Group_2__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Literal__Group_2__0"


    // $ANTLR start "rule__Literal__Group_2__0__Impl"
    // InternalFortXTrans.g:10604:1: rule__Literal__Group_2__0__Impl : ( () ) ;
    public final void rule__Literal__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10608:1: ( ( () ) )
            // InternalFortXTrans.g:10609:1: ( () )
            {
            // InternalFortXTrans.g:10609:1: ( () )
            // InternalFortXTrans.g:10610:2: ()
            {
             before(grammarAccess.getLiteralAccess().getStrConstAction_2_0()); 
            // InternalFortXTrans.g:10611:2: ()
            // InternalFortXTrans.g:10611:3: 
            {
            }

             after(grammarAccess.getLiteralAccess().getStrConstAction_2_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Literal__Group_2__0__Impl"


    // $ANTLR start "rule__Literal__Group_2__1"
    // InternalFortXTrans.g:10619:1: rule__Literal__Group_2__1 : rule__Literal__Group_2__1__Impl ;
    public final void rule__Literal__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10623:1: ( rule__Literal__Group_2__1__Impl )
            // InternalFortXTrans.g:10624:2: rule__Literal__Group_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Literal__Group_2__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Literal__Group_2__1"


    // $ANTLR start "rule__Literal__Group_2__1__Impl"
    // InternalFortXTrans.g:10630:1: rule__Literal__Group_2__1__Impl : ( ( rule__Literal__ValueAssignment_2_1 ) ) ;
    public final void rule__Literal__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10634:1: ( ( ( rule__Literal__ValueAssignment_2_1 ) ) )
            // InternalFortXTrans.g:10635:1: ( ( rule__Literal__ValueAssignment_2_1 ) )
            {
            // InternalFortXTrans.g:10635:1: ( ( rule__Literal__ValueAssignment_2_1 ) )
            // InternalFortXTrans.g:10636:2: ( rule__Literal__ValueAssignment_2_1 )
            {
             before(grammarAccess.getLiteralAccess().getValueAssignment_2_1()); 
            // InternalFortXTrans.g:10637:2: ( rule__Literal__ValueAssignment_2_1 )
            // InternalFortXTrans.g:10637:3: rule__Literal__ValueAssignment_2_1
            {
            pushFollow(FOLLOW_2);
            rule__Literal__ValueAssignment_2_1();

            state._fsp--;


            }

             after(grammarAccess.getLiteralAccess().getValueAssignment_2_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Literal__Group_2__1__Impl"


    // $ANTLR start "rule__Literal__Group_3__0"
    // InternalFortXTrans.g:10646:1: rule__Literal__Group_3__0 : rule__Literal__Group_3__0__Impl rule__Literal__Group_3__1 ;
    public final void rule__Literal__Group_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10650:1: ( rule__Literal__Group_3__0__Impl rule__Literal__Group_3__1 )
            // InternalFortXTrans.g:10651:2: rule__Literal__Group_3__0__Impl rule__Literal__Group_3__1
            {
            pushFollow(FOLLOW_78);
            rule__Literal__Group_3__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Literal__Group_3__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Literal__Group_3__0"


    // $ANTLR start "rule__Literal__Group_3__0__Impl"
    // InternalFortXTrans.g:10658:1: rule__Literal__Group_3__0__Impl : ( () ) ;
    public final void rule__Literal__Group_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10662:1: ( ( () ) )
            // InternalFortXTrans.g:10663:1: ( () )
            {
            // InternalFortXTrans.g:10663:1: ( () )
            // InternalFortXTrans.g:10664:2: ()
            {
             before(grammarAccess.getLiteralAccess().getBoolConstAction_3_0()); 
            // InternalFortXTrans.g:10665:2: ()
            // InternalFortXTrans.g:10665:3: 
            {
            }

             after(grammarAccess.getLiteralAccess().getBoolConstAction_3_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Literal__Group_3__0__Impl"


    // $ANTLR start "rule__Literal__Group_3__1"
    // InternalFortXTrans.g:10673:1: rule__Literal__Group_3__1 : rule__Literal__Group_3__1__Impl ;
    public final void rule__Literal__Group_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10677:1: ( rule__Literal__Group_3__1__Impl )
            // InternalFortXTrans.g:10678:2: rule__Literal__Group_3__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Literal__Group_3__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Literal__Group_3__1"


    // $ANTLR start "rule__Literal__Group_3__1__Impl"
    // InternalFortXTrans.g:10684:1: rule__Literal__Group_3__1__Impl : ( ( rule__Literal__Alternatives_3_1 ) ) ;
    public final void rule__Literal__Group_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10688:1: ( ( ( rule__Literal__Alternatives_3_1 ) ) )
            // InternalFortXTrans.g:10689:1: ( ( rule__Literal__Alternatives_3_1 ) )
            {
            // InternalFortXTrans.g:10689:1: ( ( rule__Literal__Alternatives_3_1 ) )
            // InternalFortXTrans.g:10690:2: ( rule__Literal__Alternatives_3_1 )
            {
             before(grammarAccess.getLiteralAccess().getAlternatives_3_1()); 
            // InternalFortXTrans.g:10691:2: ( rule__Literal__Alternatives_3_1 )
            // InternalFortXTrans.g:10691:3: rule__Literal__Alternatives_3_1
            {
            pushFollow(FOLLOW_2);
            rule__Literal__Alternatives_3_1();

            state._fsp--;


            }

             after(grammarAccess.getLiteralAccess().getAlternatives_3_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Literal__Group_3__1__Impl"


    // $ANTLR start "rule__LocalVarDecl__Group_0__0"
    // InternalFortXTrans.g:10700:1: rule__LocalVarDecl__Group_0__0 : rule__LocalVarDecl__Group_0__0__Impl rule__LocalVarDecl__Group_0__1 ;
    public final void rule__LocalVarDecl__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10704:1: ( rule__LocalVarDecl__Group_0__0__Impl rule__LocalVarDecl__Group_0__1 )
            // InternalFortXTrans.g:10705:2: rule__LocalVarDecl__Group_0__0__Impl rule__LocalVarDecl__Group_0__1
            {
            pushFollow(FOLLOW_75);
            rule__LocalVarDecl__Group_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__LocalVarDecl__Group_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_0__0"


    // $ANTLR start "rule__LocalVarDecl__Group_0__0__Impl"
    // InternalFortXTrans.g:10712:1: rule__LocalVarDecl__Group_0__0__Impl : ( ( rule__LocalVarDecl__MutAssignment_0_0 )? ) ;
    public final void rule__LocalVarDecl__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10716:1: ( ( ( rule__LocalVarDecl__MutAssignment_0_0 )? ) )
            // InternalFortXTrans.g:10717:1: ( ( rule__LocalVarDecl__MutAssignment_0_0 )? )
            {
            // InternalFortXTrans.g:10717:1: ( ( rule__LocalVarDecl__MutAssignment_0_0 )? )
            // InternalFortXTrans.g:10718:2: ( rule__LocalVarDecl__MutAssignment_0_0 )?
            {
             before(grammarAccess.getLocalVarDeclAccess().getMutAssignment_0_0()); 
            // InternalFortXTrans.g:10719:2: ( rule__LocalVarDecl__MutAssignment_0_0 )?
            int alt90=2;
            int LA90_0 = input.LA(1);

            if ( (LA90_0==70) ) {
                alt90=1;
            }
            switch (alt90) {
                case 1 :
                    // InternalFortXTrans.g:10719:3: rule__LocalVarDecl__MutAssignment_0_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__LocalVarDecl__MutAssignment_0_0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getLocalVarDeclAccess().getMutAssignment_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_0__0__Impl"


    // $ANTLR start "rule__LocalVarDecl__Group_0__1"
    // InternalFortXTrans.g:10727:1: rule__LocalVarDecl__Group_0__1 : rule__LocalVarDecl__Group_0__1__Impl rule__LocalVarDecl__Group_0__2 ;
    public final void rule__LocalVarDecl__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10731:1: ( rule__LocalVarDecl__Group_0__1__Impl rule__LocalVarDecl__Group_0__2 )
            // InternalFortXTrans.g:10732:2: rule__LocalVarDecl__Group_0__1__Impl rule__LocalVarDecl__Group_0__2
            {
            pushFollow(FOLLOW_76);
            rule__LocalVarDecl__Group_0__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__LocalVarDecl__Group_0__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_0__1"


    // $ANTLR start "rule__LocalVarDecl__Group_0__1__Impl"
    // InternalFortXTrans.g:10739:1: rule__LocalVarDecl__Group_0__1__Impl : ( ( rule__LocalVarDecl__VarsAssignment_0_1 ) ) ;
    public final void rule__LocalVarDecl__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10743:1: ( ( ( rule__LocalVarDecl__VarsAssignment_0_1 ) ) )
            // InternalFortXTrans.g:10744:1: ( ( rule__LocalVarDecl__VarsAssignment_0_1 ) )
            {
            // InternalFortXTrans.g:10744:1: ( ( rule__LocalVarDecl__VarsAssignment_0_1 ) )
            // InternalFortXTrans.g:10745:2: ( rule__LocalVarDecl__VarsAssignment_0_1 )
            {
             before(grammarAccess.getLocalVarDeclAccess().getVarsAssignment_0_1()); 
            // InternalFortXTrans.g:10746:2: ( rule__LocalVarDecl__VarsAssignment_0_1 )
            // InternalFortXTrans.g:10746:3: rule__LocalVarDecl__VarsAssignment_0_1
            {
            pushFollow(FOLLOW_2);
            rule__LocalVarDecl__VarsAssignment_0_1();

            state._fsp--;


            }

             after(grammarAccess.getLocalVarDeclAccess().getVarsAssignment_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_0__1__Impl"


    // $ANTLR start "rule__LocalVarDecl__Group_0__2"
    // InternalFortXTrans.g:10754:1: rule__LocalVarDecl__Group_0__2 : rule__LocalVarDecl__Group_0__2__Impl rule__LocalVarDecl__Group_0__3 ;
    public final void rule__LocalVarDecl__Group_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10758:1: ( rule__LocalVarDecl__Group_0__2__Impl rule__LocalVarDecl__Group_0__3 )
            // InternalFortXTrans.g:10759:2: rule__LocalVarDecl__Group_0__2__Impl rule__LocalVarDecl__Group_0__3
            {
            pushFollow(FOLLOW_32);
            rule__LocalVarDecl__Group_0__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__LocalVarDecl__Group_0__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_0__2"


    // $ANTLR start "rule__LocalVarDecl__Group_0__2__Impl"
    // InternalFortXTrans.g:10766:1: rule__LocalVarDecl__Group_0__2__Impl : ( '=' ) ;
    public final void rule__LocalVarDecl__Group_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10770:1: ( ( '=' ) )
            // InternalFortXTrans.g:10771:1: ( '=' )
            {
            // InternalFortXTrans.g:10771:1: ( '=' )
            // InternalFortXTrans.g:10772:2: '='
            {
             before(grammarAccess.getLocalVarDeclAccess().getEqualsSignKeyword_0_2()); 
            match(input,54,FOLLOW_2); 
             after(grammarAccess.getLocalVarDeclAccess().getEqualsSignKeyword_0_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_0__2__Impl"


    // $ANTLR start "rule__LocalVarDecl__Group_0__3"
    // InternalFortXTrans.g:10781:1: rule__LocalVarDecl__Group_0__3 : rule__LocalVarDecl__Group_0__3__Impl ;
    public final void rule__LocalVarDecl__Group_0__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10785:1: ( rule__LocalVarDecl__Group_0__3__Impl )
            // InternalFortXTrans.g:10786:2: rule__LocalVarDecl__Group_0__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__LocalVarDecl__Group_0__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_0__3"


    // $ANTLR start "rule__LocalVarDecl__Group_0__3__Impl"
    // InternalFortXTrans.g:10792:1: rule__LocalVarDecl__Group_0__3__Impl : ( ( rule__LocalVarDecl__InitAssignment_0_3 ) ) ;
    public final void rule__LocalVarDecl__Group_0__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10796:1: ( ( ( rule__LocalVarDecl__InitAssignment_0_3 ) ) )
            // InternalFortXTrans.g:10797:1: ( ( rule__LocalVarDecl__InitAssignment_0_3 ) )
            {
            // InternalFortXTrans.g:10797:1: ( ( rule__LocalVarDecl__InitAssignment_0_3 ) )
            // InternalFortXTrans.g:10798:2: ( rule__LocalVarDecl__InitAssignment_0_3 )
            {
             before(grammarAccess.getLocalVarDeclAccess().getInitAssignment_0_3()); 
            // InternalFortXTrans.g:10799:2: ( rule__LocalVarDecl__InitAssignment_0_3 )
            // InternalFortXTrans.g:10799:3: rule__LocalVarDecl__InitAssignment_0_3
            {
            pushFollow(FOLLOW_2);
            rule__LocalVarDecl__InitAssignment_0_3();

            state._fsp--;


            }

             after(grammarAccess.getLocalVarDeclAccess().getInitAssignment_0_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_0__3__Impl"


    // $ANTLR start "rule__LocalVarDecl__Group_1__0"
    // InternalFortXTrans.g:10808:1: rule__LocalVarDecl__Group_1__0 : rule__LocalVarDecl__Group_1__0__Impl rule__LocalVarDecl__Group_1__1 ;
    public final void rule__LocalVarDecl__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10812:1: ( rule__LocalVarDecl__Group_1__0__Impl rule__LocalVarDecl__Group_1__1 )
            // InternalFortXTrans.g:10813:2: rule__LocalVarDecl__Group_1__0__Impl rule__LocalVarDecl__Group_1__1
            {
            pushFollow(FOLLOW_76);
            rule__LocalVarDecl__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__LocalVarDecl__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_1__0"


    // $ANTLR start "rule__LocalVarDecl__Group_1__0__Impl"
    // InternalFortXTrans.g:10820:1: rule__LocalVarDecl__Group_1__0__Impl : ( ( rule__LocalVarDecl__IdtupAssignment_1_0 ) ) ;
    public final void rule__LocalVarDecl__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10824:1: ( ( ( rule__LocalVarDecl__IdtupAssignment_1_0 ) ) )
            // InternalFortXTrans.g:10825:1: ( ( rule__LocalVarDecl__IdtupAssignment_1_0 ) )
            {
            // InternalFortXTrans.g:10825:1: ( ( rule__LocalVarDecl__IdtupAssignment_1_0 ) )
            // InternalFortXTrans.g:10826:2: ( rule__LocalVarDecl__IdtupAssignment_1_0 )
            {
             before(grammarAccess.getLocalVarDeclAccess().getIdtupAssignment_1_0()); 
            // InternalFortXTrans.g:10827:2: ( rule__LocalVarDecl__IdtupAssignment_1_0 )
            // InternalFortXTrans.g:10827:3: rule__LocalVarDecl__IdtupAssignment_1_0
            {
            pushFollow(FOLLOW_2);
            rule__LocalVarDecl__IdtupAssignment_1_0();

            state._fsp--;


            }

             after(grammarAccess.getLocalVarDeclAccess().getIdtupAssignment_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_1__0__Impl"


    // $ANTLR start "rule__LocalVarDecl__Group_1__1"
    // InternalFortXTrans.g:10835:1: rule__LocalVarDecl__Group_1__1 : rule__LocalVarDecl__Group_1__1__Impl rule__LocalVarDecl__Group_1__2 ;
    public final void rule__LocalVarDecl__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10839:1: ( rule__LocalVarDecl__Group_1__1__Impl rule__LocalVarDecl__Group_1__2 )
            // InternalFortXTrans.g:10840:2: rule__LocalVarDecl__Group_1__1__Impl rule__LocalVarDecl__Group_1__2
            {
            pushFollow(FOLLOW_32);
            rule__LocalVarDecl__Group_1__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__LocalVarDecl__Group_1__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_1__1"


    // $ANTLR start "rule__LocalVarDecl__Group_1__1__Impl"
    // InternalFortXTrans.g:10847:1: rule__LocalVarDecl__Group_1__1__Impl : ( '=' ) ;
    public final void rule__LocalVarDecl__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10851:1: ( ( '=' ) )
            // InternalFortXTrans.g:10852:1: ( '=' )
            {
            // InternalFortXTrans.g:10852:1: ( '=' )
            // InternalFortXTrans.g:10853:2: '='
            {
             before(grammarAccess.getLocalVarDeclAccess().getEqualsSignKeyword_1_1()); 
            match(input,54,FOLLOW_2); 
             after(grammarAccess.getLocalVarDeclAccess().getEqualsSignKeyword_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_1__1__Impl"


    // $ANTLR start "rule__LocalVarDecl__Group_1__2"
    // InternalFortXTrans.g:10862:1: rule__LocalVarDecl__Group_1__2 : rule__LocalVarDecl__Group_1__2__Impl ;
    public final void rule__LocalVarDecl__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10866:1: ( rule__LocalVarDecl__Group_1__2__Impl )
            // InternalFortXTrans.g:10867:2: rule__LocalVarDecl__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__LocalVarDecl__Group_1__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_1__2"


    // $ANTLR start "rule__LocalVarDecl__Group_1__2__Impl"
    // InternalFortXTrans.g:10873:1: rule__LocalVarDecl__Group_1__2__Impl : ( ( rule__LocalVarDecl__InitAssignment_1_2 ) ) ;
    public final void rule__LocalVarDecl__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10877:1: ( ( ( rule__LocalVarDecl__InitAssignment_1_2 ) ) )
            // InternalFortXTrans.g:10878:1: ( ( rule__LocalVarDecl__InitAssignment_1_2 ) )
            {
            // InternalFortXTrans.g:10878:1: ( ( rule__LocalVarDecl__InitAssignment_1_2 ) )
            // InternalFortXTrans.g:10879:2: ( rule__LocalVarDecl__InitAssignment_1_2 )
            {
             before(grammarAccess.getLocalVarDeclAccess().getInitAssignment_1_2()); 
            // InternalFortXTrans.g:10880:2: ( rule__LocalVarDecl__InitAssignment_1_2 )
            // InternalFortXTrans.g:10880:3: rule__LocalVarDecl__InitAssignment_1_2
            {
            pushFollow(FOLLOW_2);
            rule__LocalVarDecl__InitAssignment_1_2();

            state._fsp--;


            }

             after(grammarAccess.getLocalVarDeclAccess().getInitAssignment_1_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_1__2__Impl"


    // $ANTLR start "rule__LocalVarDecl__Group_2__0"
    // InternalFortXTrans.g:10889:1: rule__LocalVarDecl__Group_2__0 : rule__LocalVarDecl__Group_2__0__Impl rule__LocalVarDecl__Group_2__1 ;
    public final void rule__LocalVarDecl__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10893:1: ( rule__LocalVarDecl__Group_2__0__Impl rule__LocalVarDecl__Group_2__1 )
            // InternalFortXTrans.g:10894:2: rule__LocalVarDecl__Group_2__0__Impl rule__LocalVarDecl__Group_2__1
            {
            pushFollow(FOLLOW_75);
            rule__LocalVarDecl__Group_2__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__LocalVarDecl__Group_2__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_2__0"


    // $ANTLR start "rule__LocalVarDecl__Group_2__0__Impl"
    // InternalFortXTrans.g:10901:1: rule__LocalVarDecl__Group_2__0__Impl : ( ( rule__LocalVarDecl__MutAssignment_2_0 )? ) ;
    public final void rule__LocalVarDecl__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10905:1: ( ( ( rule__LocalVarDecl__MutAssignment_2_0 )? ) )
            // InternalFortXTrans.g:10906:1: ( ( rule__LocalVarDecl__MutAssignment_2_0 )? )
            {
            // InternalFortXTrans.g:10906:1: ( ( rule__LocalVarDecl__MutAssignment_2_0 )? )
            // InternalFortXTrans.g:10907:2: ( rule__LocalVarDecl__MutAssignment_2_0 )?
            {
             before(grammarAccess.getLocalVarDeclAccess().getMutAssignment_2_0()); 
            // InternalFortXTrans.g:10908:2: ( rule__LocalVarDecl__MutAssignment_2_0 )?
            int alt91=2;
            int LA91_0 = input.LA(1);

            if ( (LA91_0==70) ) {
                alt91=1;
            }
            switch (alt91) {
                case 1 :
                    // InternalFortXTrans.g:10908:3: rule__LocalVarDecl__MutAssignment_2_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__LocalVarDecl__MutAssignment_2_0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getLocalVarDeclAccess().getMutAssignment_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_2__0__Impl"


    // $ANTLR start "rule__LocalVarDecl__Group_2__1"
    // InternalFortXTrans.g:10916:1: rule__LocalVarDecl__Group_2__1 : rule__LocalVarDecl__Group_2__1__Impl rule__LocalVarDecl__Group_2__2 ;
    public final void rule__LocalVarDecl__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10920:1: ( rule__LocalVarDecl__Group_2__1__Impl rule__LocalVarDecl__Group_2__2 )
            // InternalFortXTrans.g:10921:2: rule__LocalVarDecl__Group_2__1__Impl rule__LocalVarDecl__Group_2__2
            {
            pushFollow(FOLLOW_26);
            rule__LocalVarDecl__Group_2__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__LocalVarDecl__Group_2__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_2__1"


    // $ANTLR start "rule__LocalVarDecl__Group_2__1__Impl"
    // InternalFortXTrans.g:10928:1: rule__LocalVarDecl__Group_2__1__Impl : ( ( rule__LocalVarDecl__IdtupAssignment_2_1 ) ) ;
    public final void rule__LocalVarDecl__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10932:1: ( ( ( rule__LocalVarDecl__IdtupAssignment_2_1 ) ) )
            // InternalFortXTrans.g:10933:1: ( ( rule__LocalVarDecl__IdtupAssignment_2_1 ) )
            {
            // InternalFortXTrans.g:10933:1: ( ( rule__LocalVarDecl__IdtupAssignment_2_1 ) )
            // InternalFortXTrans.g:10934:2: ( rule__LocalVarDecl__IdtupAssignment_2_1 )
            {
             before(grammarAccess.getLocalVarDeclAccess().getIdtupAssignment_2_1()); 
            // InternalFortXTrans.g:10935:2: ( rule__LocalVarDecl__IdtupAssignment_2_1 )
            // InternalFortXTrans.g:10935:3: rule__LocalVarDecl__IdtupAssignment_2_1
            {
            pushFollow(FOLLOW_2);
            rule__LocalVarDecl__IdtupAssignment_2_1();

            state._fsp--;


            }

             after(grammarAccess.getLocalVarDeclAccess().getIdtupAssignment_2_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_2__1__Impl"


    // $ANTLR start "rule__LocalVarDecl__Group_2__2"
    // InternalFortXTrans.g:10943:1: rule__LocalVarDecl__Group_2__2 : rule__LocalVarDecl__Group_2__2__Impl rule__LocalVarDecl__Group_2__3 ;
    public final void rule__LocalVarDecl__Group_2__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10947:1: ( rule__LocalVarDecl__Group_2__2__Impl rule__LocalVarDecl__Group_2__3 )
            // InternalFortXTrans.g:10948:2: rule__LocalVarDecl__Group_2__2__Impl rule__LocalVarDecl__Group_2__3
            {
            pushFollow(FOLLOW_5);
            rule__LocalVarDecl__Group_2__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__LocalVarDecl__Group_2__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_2__2"


    // $ANTLR start "rule__LocalVarDecl__Group_2__2__Impl"
    // InternalFortXTrans.g:10955:1: rule__LocalVarDecl__Group_2__2__Impl : ( ':' ) ;
    public final void rule__LocalVarDecl__Group_2__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10959:1: ( ( ':' ) )
            // InternalFortXTrans.g:10960:1: ( ':' )
            {
            // InternalFortXTrans.g:10960:1: ( ':' )
            // InternalFortXTrans.g:10961:2: ':'
            {
             before(grammarAccess.getLocalVarDeclAccess().getColonKeyword_2_2()); 
            match(input,35,FOLLOW_2); 
             after(grammarAccess.getLocalVarDeclAccess().getColonKeyword_2_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_2__2__Impl"


    // $ANTLR start "rule__LocalVarDecl__Group_2__3"
    // InternalFortXTrans.g:10970:1: rule__LocalVarDecl__Group_2__3 : rule__LocalVarDecl__Group_2__3__Impl rule__LocalVarDecl__Group_2__4 ;
    public final void rule__LocalVarDecl__Group_2__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10974:1: ( rule__LocalVarDecl__Group_2__3__Impl rule__LocalVarDecl__Group_2__4 )
            // InternalFortXTrans.g:10975:2: rule__LocalVarDecl__Group_2__3__Impl rule__LocalVarDecl__Group_2__4
            {
            pushFollow(FOLLOW_17);
            rule__LocalVarDecl__Group_2__3__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__LocalVarDecl__Group_2__4();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_2__3"


    // $ANTLR start "rule__LocalVarDecl__Group_2__3__Impl"
    // InternalFortXTrans.g:10982:1: rule__LocalVarDecl__Group_2__3__Impl : ( ( rule__LocalVarDecl__TypeAssignment_2_3 ) ) ;
    public final void rule__LocalVarDecl__Group_2__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:10986:1: ( ( ( rule__LocalVarDecl__TypeAssignment_2_3 ) ) )
            // InternalFortXTrans.g:10987:1: ( ( rule__LocalVarDecl__TypeAssignment_2_3 ) )
            {
            // InternalFortXTrans.g:10987:1: ( ( rule__LocalVarDecl__TypeAssignment_2_3 ) )
            // InternalFortXTrans.g:10988:2: ( rule__LocalVarDecl__TypeAssignment_2_3 )
            {
             before(grammarAccess.getLocalVarDeclAccess().getTypeAssignment_2_3()); 
            // InternalFortXTrans.g:10989:2: ( rule__LocalVarDecl__TypeAssignment_2_3 )
            // InternalFortXTrans.g:10989:3: rule__LocalVarDecl__TypeAssignment_2_3
            {
            pushFollow(FOLLOW_2);
            rule__LocalVarDecl__TypeAssignment_2_3();

            state._fsp--;


            }

             after(grammarAccess.getLocalVarDeclAccess().getTypeAssignment_2_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_2__3__Impl"


    // $ANTLR start "rule__LocalVarDecl__Group_2__4"
    // InternalFortXTrans.g:10997:1: rule__LocalVarDecl__Group_2__4 : rule__LocalVarDecl__Group_2__4__Impl rule__LocalVarDecl__Group_2__5 ;
    public final void rule__LocalVarDecl__Group_2__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11001:1: ( rule__LocalVarDecl__Group_2__4__Impl rule__LocalVarDecl__Group_2__5 )
            // InternalFortXTrans.g:11002:2: rule__LocalVarDecl__Group_2__4__Impl rule__LocalVarDecl__Group_2__5
            {
            pushFollow(FOLLOW_76);
            rule__LocalVarDecl__Group_2__4__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__LocalVarDecl__Group_2__5();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_2__4"


    // $ANTLR start "rule__LocalVarDecl__Group_2__4__Impl"
    // InternalFortXTrans.g:11009:1: rule__LocalVarDecl__Group_2__4__Impl : ( RULE_DOTS ) ;
    public final void rule__LocalVarDecl__Group_2__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11013:1: ( ( RULE_DOTS ) )
            // InternalFortXTrans.g:11014:1: ( RULE_DOTS )
            {
            // InternalFortXTrans.g:11014:1: ( RULE_DOTS )
            // InternalFortXTrans.g:11015:2: RULE_DOTS
            {
             before(grammarAccess.getLocalVarDeclAccess().getDOTSTerminalRuleCall_2_4()); 
            match(input,RULE_DOTS,FOLLOW_2); 
             after(grammarAccess.getLocalVarDeclAccess().getDOTSTerminalRuleCall_2_4()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_2__4__Impl"


    // $ANTLR start "rule__LocalVarDecl__Group_2__5"
    // InternalFortXTrans.g:11024:1: rule__LocalVarDecl__Group_2__5 : rule__LocalVarDecl__Group_2__5__Impl rule__LocalVarDecl__Group_2__6 ;
    public final void rule__LocalVarDecl__Group_2__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11028:1: ( rule__LocalVarDecl__Group_2__5__Impl rule__LocalVarDecl__Group_2__6 )
            // InternalFortXTrans.g:11029:2: rule__LocalVarDecl__Group_2__5__Impl rule__LocalVarDecl__Group_2__6
            {
            pushFollow(FOLLOW_32);
            rule__LocalVarDecl__Group_2__5__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__LocalVarDecl__Group_2__6();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_2__5"


    // $ANTLR start "rule__LocalVarDecl__Group_2__5__Impl"
    // InternalFortXTrans.g:11036:1: rule__LocalVarDecl__Group_2__5__Impl : ( '=' ) ;
    public final void rule__LocalVarDecl__Group_2__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11040:1: ( ( '=' ) )
            // InternalFortXTrans.g:11041:1: ( '=' )
            {
            // InternalFortXTrans.g:11041:1: ( '=' )
            // InternalFortXTrans.g:11042:2: '='
            {
             before(grammarAccess.getLocalVarDeclAccess().getEqualsSignKeyword_2_5()); 
            match(input,54,FOLLOW_2); 
             after(grammarAccess.getLocalVarDeclAccess().getEqualsSignKeyword_2_5()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_2__5__Impl"


    // $ANTLR start "rule__LocalVarDecl__Group_2__6"
    // InternalFortXTrans.g:11051:1: rule__LocalVarDecl__Group_2__6 : rule__LocalVarDecl__Group_2__6__Impl ;
    public final void rule__LocalVarDecl__Group_2__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11055:1: ( rule__LocalVarDecl__Group_2__6__Impl )
            // InternalFortXTrans.g:11056:2: rule__LocalVarDecl__Group_2__6__Impl
            {
            pushFollow(FOLLOW_2);
            rule__LocalVarDecl__Group_2__6__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_2__6"


    // $ANTLR start "rule__LocalVarDecl__Group_2__6__Impl"
    // InternalFortXTrans.g:11062:1: rule__LocalVarDecl__Group_2__6__Impl : ( ( rule__LocalVarDecl__InitAssignment_2_6 ) ) ;
    public final void rule__LocalVarDecl__Group_2__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11066:1: ( ( ( rule__LocalVarDecl__InitAssignment_2_6 ) ) )
            // InternalFortXTrans.g:11067:1: ( ( rule__LocalVarDecl__InitAssignment_2_6 ) )
            {
            // InternalFortXTrans.g:11067:1: ( ( rule__LocalVarDecl__InitAssignment_2_6 ) )
            // InternalFortXTrans.g:11068:2: ( rule__LocalVarDecl__InitAssignment_2_6 )
            {
             before(grammarAccess.getLocalVarDeclAccess().getInitAssignment_2_6()); 
            // InternalFortXTrans.g:11069:2: ( rule__LocalVarDecl__InitAssignment_2_6 )
            // InternalFortXTrans.g:11069:3: rule__LocalVarDecl__InitAssignment_2_6
            {
            pushFollow(FOLLOW_2);
            rule__LocalVarDecl__InitAssignment_2_6();

            state._fsp--;


            }

             after(grammarAccess.getLocalVarDeclAccess().getInitAssignment_2_6()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_2__6__Impl"


    // $ANTLR start "rule__LocalVarDecl__Group_3__0"
    // InternalFortXTrans.g:11078:1: rule__LocalVarDecl__Group_3__0 : rule__LocalVarDecl__Group_3__0__Impl rule__LocalVarDecl__Group_3__1 ;
    public final void rule__LocalVarDecl__Group_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11082:1: ( rule__LocalVarDecl__Group_3__0__Impl rule__LocalVarDecl__Group_3__1 )
            // InternalFortXTrans.g:11083:2: rule__LocalVarDecl__Group_3__0__Impl rule__LocalVarDecl__Group_3__1
            {
            pushFollow(FOLLOW_75);
            rule__LocalVarDecl__Group_3__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__LocalVarDecl__Group_3__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_3__0"


    // $ANTLR start "rule__LocalVarDecl__Group_3__0__Impl"
    // InternalFortXTrans.g:11090:1: rule__LocalVarDecl__Group_3__0__Impl : ( ( rule__LocalVarDecl__MutAssignment_3_0 )? ) ;
    public final void rule__LocalVarDecl__Group_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11094:1: ( ( ( rule__LocalVarDecl__MutAssignment_3_0 )? ) )
            // InternalFortXTrans.g:11095:1: ( ( rule__LocalVarDecl__MutAssignment_3_0 )? )
            {
            // InternalFortXTrans.g:11095:1: ( ( rule__LocalVarDecl__MutAssignment_3_0 )? )
            // InternalFortXTrans.g:11096:2: ( rule__LocalVarDecl__MutAssignment_3_0 )?
            {
             before(grammarAccess.getLocalVarDeclAccess().getMutAssignment_3_0()); 
            // InternalFortXTrans.g:11097:2: ( rule__LocalVarDecl__MutAssignment_3_0 )?
            int alt92=2;
            int LA92_0 = input.LA(1);

            if ( (LA92_0==70) ) {
                alt92=1;
            }
            switch (alt92) {
                case 1 :
                    // InternalFortXTrans.g:11097:3: rule__LocalVarDecl__MutAssignment_3_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__LocalVarDecl__MutAssignment_3_0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getLocalVarDeclAccess().getMutAssignment_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_3__0__Impl"


    // $ANTLR start "rule__LocalVarDecl__Group_3__1"
    // InternalFortXTrans.g:11105:1: rule__LocalVarDecl__Group_3__1 : rule__LocalVarDecl__Group_3__1__Impl rule__LocalVarDecl__Group_3__2 ;
    public final void rule__LocalVarDecl__Group_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11109:1: ( rule__LocalVarDecl__Group_3__1__Impl rule__LocalVarDecl__Group_3__2 )
            // InternalFortXTrans.g:11110:2: rule__LocalVarDecl__Group_3__1__Impl rule__LocalVarDecl__Group_3__2
            {
            pushFollow(FOLLOW_26);
            rule__LocalVarDecl__Group_3__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__LocalVarDecl__Group_3__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_3__1"


    // $ANTLR start "rule__LocalVarDecl__Group_3__1__Impl"
    // InternalFortXTrans.g:11117:1: rule__LocalVarDecl__Group_3__1__Impl : ( ( rule__LocalVarDecl__IdtupAssignment_3_1 ) ) ;
    public final void rule__LocalVarDecl__Group_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11121:1: ( ( ( rule__LocalVarDecl__IdtupAssignment_3_1 ) ) )
            // InternalFortXTrans.g:11122:1: ( ( rule__LocalVarDecl__IdtupAssignment_3_1 ) )
            {
            // InternalFortXTrans.g:11122:1: ( ( rule__LocalVarDecl__IdtupAssignment_3_1 ) )
            // InternalFortXTrans.g:11123:2: ( rule__LocalVarDecl__IdtupAssignment_3_1 )
            {
             before(grammarAccess.getLocalVarDeclAccess().getIdtupAssignment_3_1()); 
            // InternalFortXTrans.g:11124:2: ( rule__LocalVarDecl__IdtupAssignment_3_1 )
            // InternalFortXTrans.g:11124:3: rule__LocalVarDecl__IdtupAssignment_3_1
            {
            pushFollow(FOLLOW_2);
            rule__LocalVarDecl__IdtupAssignment_3_1();

            state._fsp--;


            }

             after(grammarAccess.getLocalVarDeclAccess().getIdtupAssignment_3_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_3__1__Impl"


    // $ANTLR start "rule__LocalVarDecl__Group_3__2"
    // InternalFortXTrans.g:11132:1: rule__LocalVarDecl__Group_3__2 : rule__LocalVarDecl__Group_3__2__Impl rule__LocalVarDecl__Group_3__3 ;
    public final void rule__LocalVarDecl__Group_3__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11136:1: ( rule__LocalVarDecl__Group_3__2__Impl rule__LocalVarDecl__Group_3__3 )
            // InternalFortXTrans.g:11137:2: rule__LocalVarDecl__Group_3__2__Impl rule__LocalVarDecl__Group_3__3
            {
            pushFollow(FOLLOW_27);
            rule__LocalVarDecl__Group_3__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__LocalVarDecl__Group_3__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_3__2"


    // $ANTLR start "rule__LocalVarDecl__Group_3__2__Impl"
    // InternalFortXTrans.g:11144:1: rule__LocalVarDecl__Group_3__2__Impl : ( ':' ) ;
    public final void rule__LocalVarDecl__Group_3__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11148:1: ( ( ':' ) )
            // InternalFortXTrans.g:11149:1: ( ':' )
            {
            // InternalFortXTrans.g:11149:1: ( ':' )
            // InternalFortXTrans.g:11150:2: ':'
            {
             before(grammarAccess.getLocalVarDeclAccess().getColonKeyword_3_2()); 
            match(input,35,FOLLOW_2); 
             after(grammarAccess.getLocalVarDeclAccess().getColonKeyword_3_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_3__2__Impl"


    // $ANTLR start "rule__LocalVarDecl__Group_3__3"
    // InternalFortXTrans.g:11159:1: rule__LocalVarDecl__Group_3__3 : rule__LocalVarDecl__Group_3__3__Impl rule__LocalVarDecl__Group_3__4 ;
    public final void rule__LocalVarDecl__Group_3__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11163:1: ( rule__LocalVarDecl__Group_3__3__Impl rule__LocalVarDecl__Group_3__4 )
            // InternalFortXTrans.g:11164:2: rule__LocalVarDecl__Group_3__3__Impl rule__LocalVarDecl__Group_3__4
            {
            pushFollow(FOLLOW_76);
            rule__LocalVarDecl__Group_3__3__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__LocalVarDecl__Group_3__4();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_3__3"


    // $ANTLR start "rule__LocalVarDecl__Group_3__3__Impl"
    // InternalFortXTrans.g:11171:1: rule__LocalVarDecl__Group_3__3__Impl : ( ( rule__LocalVarDecl__TuptypeAssignment_3_3 ) ) ;
    public final void rule__LocalVarDecl__Group_3__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11175:1: ( ( ( rule__LocalVarDecl__TuptypeAssignment_3_3 ) ) )
            // InternalFortXTrans.g:11176:1: ( ( rule__LocalVarDecl__TuptypeAssignment_3_3 ) )
            {
            // InternalFortXTrans.g:11176:1: ( ( rule__LocalVarDecl__TuptypeAssignment_3_3 ) )
            // InternalFortXTrans.g:11177:2: ( rule__LocalVarDecl__TuptypeAssignment_3_3 )
            {
             before(grammarAccess.getLocalVarDeclAccess().getTuptypeAssignment_3_3()); 
            // InternalFortXTrans.g:11178:2: ( rule__LocalVarDecl__TuptypeAssignment_3_3 )
            // InternalFortXTrans.g:11178:3: rule__LocalVarDecl__TuptypeAssignment_3_3
            {
            pushFollow(FOLLOW_2);
            rule__LocalVarDecl__TuptypeAssignment_3_3();

            state._fsp--;


            }

             after(grammarAccess.getLocalVarDeclAccess().getTuptypeAssignment_3_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_3__3__Impl"


    // $ANTLR start "rule__LocalVarDecl__Group_3__4"
    // InternalFortXTrans.g:11186:1: rule__LocalVarDecl__Group_3__4 : rule__LocalVarDecl__Group_3__4__Impl rule__LocalVarDecl__Group_3__5 ;
    public final void rule__LocalVarDecl__Group_3__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11190:1: ( rule__LocalVarDecl__Group_3__4__Impl rule__LocalVarDecl__Group_3__5 )
            // InternalFortXTrans.g:11191:2: rule__LocalVarDecl__Group_3__4__Impl rule__LocalVarDecl__Group_3__5
            {
            pushFollow(FOLLOW_32);
            rule__LocalVarDecl__Group_3__4__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__LocalVarDecl__Group_3__5();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_3__4"


    // $ANTLR start "rule__LocalVarDecl__Group_3__4__Impl"
    // InternalFortXTrans.g:11198:1: rule__LocalVarDecl__Group_3__4__Impl : ( '=' ) ;
    public final void rule__LocalVarDecl__Group_3__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11202:1: ( ( '=' ) )
            // InternalFortXTrans.g:11203:1: ( '=' )
            {
            // InternalFortXTrans.g:11203:1: ( '=' )
            // InternalFortXTrans.g:11204:2: '='
            {
             before(grammarAccess.getLocalVarDeclAccess().getEqualsSignKeyword_3_4()); 
            match(input,54,FOLLOW_2); 
             after(grammarAccess.getLocalVarDeclAccess().getEqualsSignKeyword_3_4()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_3__4__Impl"


    // $ANTLR start "rule__LocalVarDecl__Group_3__5"
    // InternalFortXTrans.g:11213:1: rule__LocalVarDecl__Group_3__5 : rule__LocalVarDecl__Group_3__5__Impl ;
    public final void rule__LocalVarDecl__Group_3__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11217:1: ( rule__LocalVarDecl__Group_3__5__Impl )
            // InternalFortXTrans.g:11218:2: rule__LocalVarDecl__Group_3__5__Impl
            {
            pushFollow(FOLLOW_2);
            rule__LocalVarDecl__Group_3__5__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_3__5"


    // $ANTLR start "rule__LocalVarDecl__Group_3__5__Impl"
    // InternalFortXTrans.g:11224:1: rule__LocalVarDecl__Group_3__5__Impl : ( ( rule__LocalVarDecl__InitAssignment_3_5 ) ) ;
    public final void rule__LocalVarDecl__Group_3__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11228:1: ( ( ( rule__LocalVarDecl__InitAssignment_3_5 ) ) )
            // InternalFortXTrans.g:11229:1: ( ( rule__LocalVarDecl__InitAssignment_3_5 ) )
            {
            // InternalFortXTrans.g:11229:1: ( ( rule__LocalVarDecl__InitAssignment_3_5 ) )
            // InternalFortXTrans.g:11230:2: ( rule__LocalVarDecl__InitAssignment_3_5 )
            {
             before(grammarAccess.getLocalVarDeclAccess().getInitAssignment_3_5()); 
            // InternalFortXTrans.g:11231:2: ( rule__LocalVarDecl__InitAssignment_3_5 )
            // InternalFortXTrans.g:11231:3: rule__LocalVarDecl__InitAssignment_3_5
            {
            pushFollow(FOLLOW_2);
            rule__LocalVarDecl__InitAssignment_3_5();

            state._fsp--;


            }

             after(grammarAccess.getLocalVarDeclAccess().getInitAssignment_3_5()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__Group_3__5__Impl"


    // $ANTLR start "rule__Component__NameAssignment_1"
    // InternalFortXTrans.g:11240:1: rule__Component__NameAssignment_1 : ( RULE_ID ) ;
    public final void rule__Component__NameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11244:1: ( ( RULE_ID ) )
            // InternalFortXTrans.g:11245:2: ( RULE_ID )
            {
            // InternalFortXTrans.g:11245:2: ( RULE_ID )
            // InternalFortXTrans.g:11246:3: RULE_ID
            {
             before(grammarAccess.getComponentAccess().getNameIDTerminalRuleCall_1_0()); 
            match(input,RULE_ID,FOLLOW_2); 
             after(grammarAccess.getComponentAccess().getNameIDTerminalRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Component__NameAssignment_1"


    // $ANTLR start "rule__Component__ImportsAssignment_2"
    // InternalFortXTrans.g:11255:1: rule__Component__ImportsAssignment_2 : ( ruleImport ) ;
    public final void rule__Component__ImportsAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11259:1: ( ( ruleImport ) )
            // InternalFortXTrans.g:11260:2: ( ruleImport )
            {
            // InternalFortXTrans.g:11260:2: ( ruleImport )
            // InternalFortXTrans.g:11261:3: ruleImport
            {
             before(grammarAccess.getComponentAccess().getImportsImportParserRuleCall_2_0()); 
            pushFollow(FOLLOW_2);
            ruleImport();

            state._fsp--;

             after(grammarAccess.getComponentAccess().getImportsImportParserRuleCall_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Component__ImportsAssignment_2"


    // $ANTLR start "rule__Component__ExportsAssignment_3"
    // InternalFortXTrans.g:11270:1: rule__Component__ExportsAssignment_3 : ( ruleExport ) ;
    public final void rule__Component__ExportsAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11274:1: ( ( ruleExport ) )
            // InternalFortXTrans.g:11275:2: ( ruleExport )
            {
            // InternalFortXTrans.g:11275:2: ( ruleExport )
            // InternalFortXTrans.g:11276:3: ruleExport
            {
             before(grammarAccess.getComponentAccess().getExportsExportParserRuleCall_3_0()); 
            pushFollow(FOLLOW_2);
            ruleExport();

            state._fsp--;

             after(grammarAccess.getComponentAccess().getExportsExportParserRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Component__ExportsAssignment_3"


    // $ANTLR start "rule__Component__DeclsAssignment_4"
    // InternalFortXTrans.g:11285:1: rule__Component__DeclsAssignment_4 : ( ruleDecls ) ;
    public final void rule__Component__DeclsAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11289:1: ( ( ruleDecls ) )
            // InternalFortXTrans.g:11290:2: ( ruleDecls )
            {
            // InternalFortXTrans.g:11290:2: ( ruleDecls )
            // InternalFortXTrans.g:11291:3: ruleDecls
            {
             before(grammarAccess.getComponentAccess().getDeclsDeclsParserRuleCall_4_0()); 
            pushFollow(FOLLOW_2);
            ruleDecls();

            state._fsp--;

             after(grammarAccess.getComponentAccess().getDeclsDeclsParserRuleCall_4_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Component__DeclsAssignment_4"


    // $ANTLR start "rule__API__NameAssignment_1"
    // InternalFortXTrans.g:11300:1: rule__API__NameAssignment_1 : ( RULE_ID ) ;
    public final void rule__API__NameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11304:1: ( ( RULE_ID ) )
            // InternalFortXTrans.g:11305:2: ( RULE_ID )
            {
            // InternalFortXTrans.g:11305:2: ( RULE_ID )
            // InternalFortXTrans.g:11306:3: RULE_ID
            {
             before(grammarAccess.getAPIAccess().getNameIDTerminalRuleCall_1_0()); 
            match(input,RULE_ID,FOLLOW_2); 
             after(grammarAccess.getAPIAccess().getNameIDTerminalRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__API__NameAssignment_1"


    // $ANTLR start "rule__API__ImportsAssignment_2"
    // InternalFortXTrans.g:11315:1: rule__API__ImportsAssignment_2 : ( ruleImport ) ;
    public final void rule__API__ImportsAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11319:1: ( ( ruleImport ) )
            // InternalFortXTrans.g:11320:2: ( ruleImport )
            {
            // InternalFortXTrans.g:11320:2: ( ruleImport )
            // InternalFortXTrans.g:11321:3: ruleImport
            {
             before(grammarAccess.getAPIAccess().getImportsImportParserRuleCall_2_0()); 
            pushFollow(FOLLOW_2);
            ruleImport();

            state._fsp--;

             after(grammarAccess.getAPIAccess().getImportsImportParserRuleCall_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__API__ImportsAssignment_2"


    // $ANTLR start "rule__Import__ImpsAssignment_0_0"
    // InternalFortXTrans.g:11330:1: rule__Import__ImpsAssignment_0_0 : ( ( 'import' ) ) ;
    public final void rule__Import__ImpsAssignment_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11334:1: ( ( ( 'import' ) ) )
            // InternalFortXTrans.g:11335:2: ( ( 'import' ) )
            {
            // InternalFortXTrans.g:11335:2: ( ( 'import' ) )
            // InternalFortXTrans.g:11336:3: ( 'import' )
            {
             before(grammarAccess.getImportAccess().getImpsImportKeyword_0_0_0()); 
            // InternalFortXTrans.g:11337:3: ( 'import' )
            // InternalFortXTrans.g:11338:4: 'import'
            {
             before(grammarAccess.getImportAccess().getImpsImportKeyword_0_0_0()); 
            match(input,55,FOLLOW_2); 
             after(grammarAccess.getImportAccess().getImpsImportKeyword_0_0_0()); 

            }

             after(grammarAccess.getImportAccess().getImpsImportKeyword_0_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Import__ImpsAssignment_0_0"


    // $ANTLR start "rule__Import__ImportedNamesAssignment_0_1"
    // InternalFortXTrans.g:11349:1: rule__Import__ImportedNamesAssignment_0_1 : ( ruleImportedNames ) ;
    public final void rule__Import__ImportedNamesAssignment_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11353:1: ( ( ruleImportedNames ) )
            // InternalFortXTrans.g:11354:2: ( ruleImportedNames )
            {
            // InternalFortXTrans.g:11354:2: ( ruleImportedNames )
            // InternalFortXTrans.g:11355:3: ruleImportedNames
            {
             before(grammarAccess.getImportAccess().getImportedNamesImportedNamesParserRuleCall_0_1_0()); 
            pushFollow(FOLLOW_2);
            ruleImportedNames();

            state._fsp--;

             after(grammarAccess.getImportAccess().getImportedNamesImportedNamesParserRuleCall_0_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Import__ImportedNamesAssignment_0_1"


    // $ANTLR start "rule__Import__ImpsAssignment_1_0"
    // InternalFortXTrans.g:11364:1: rule__Import__ImpsAssignment_1_0 : ( ( 'import' ) ) ;
    public final void rule__Import__ImpsAssignment_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11368:1: ( ( ( 'import' ) ) )
            // InternalFortXTrans.g:11369:2: ( ( 'import' ) )
            {
            // InternalFortXTrans.g:11369:2: ( ( 'import' ) )
            // InternalFortXTrans.g:11370:3: ( 'import' )
            {
             before(grammarAccess.getImportAccess().getImpsImportKeyword_1_0_0()); 
            // InternalFortXTrans.g:11371:3: ( 'import' )
            // InternalFortXTrans.g:11372:4: 'import'
            {
             before(grammarAccess.getImportAccess().getImpsImportKeyword_1_0_0()); 
            match(input,55,FOLLOW_2); 
             after(grammarAccess.getImportAccess().getImpsImportKeyword_1_0_0()); 

            }

             after(grammarAccess.getImportAccess().getImpsImportKeyword_1_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Import__ImpsAssignment_1_0"


    // $ANTLR start "rule__Import__ApiAssignment_1_1"
    // InternalFortXTrans.g:11383:1: rule__Import__ApiAssignment_1_1 : ( ( 'api' ) ) ;
    public final void rule__Import__ApiAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11387:1: ( ( ( 'api' ) ) )
            // InternalFortXTrans.g:11388:2: ( ( 'api' ) )
            {
            // InternalFortXTrans.g:11388:2: ( ( 'api' ) )
            // InternalFortXTrans.g:11389:3: ( 'api' )
            {
             before(grammarAccess.getImportAccess().getApiApiKeyword_1_1_0()); 
            // InternalFortXTrans.g:11390:3: ( 'api' )
            // InternalFortXTrans.g:11391:4: 'api'
            {
             before(grammarAccess.getImportAccess().getApiApiKeyword_1_1_0()); 
            match(input,27,FOLLOW_2); 
             after(grammarAccess.getImportAccess().getApiApiKeyword_1_1_0()); 

            }

             after(grammarAccess.getImportAccess().getApiApiKeyword_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Import__ApiAssignment_1_1"


    // $ANTLR start "rule__Import__AliasedimportedNamesAssignment_1_2"
    // InternalFortXTrans.g:11402:1: rule__Import__AliasedimportedNamesAssignment_1_2 : ( ruleAliasedAPINames ) ;
    public final void rule__Import__AliasedimportedNamesAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11406:1: ( ( ruleAliasedAPINames ) )
            // InternalFortXTrans.g:11407:2: ( ruleAliasedAPINames )
            {
            // InternalFortXTrans.g:11407:2: ( ruleAliasedAPINames )
            // InternalFortXTrans.g:11408:3: ruleAliasedAPINames
            {
             before(grammarAccess.getImportAccess().getAliasedimportedNamesAliasedAPINamesParserRuleCall_1_2_0()); 
            pushFollow(FOLLOW_2);
            ruleAliasedAPINames();

            state._fsp--;

             after(grammarAccess.getImportAccess().getAliasedimportedNamesAliasedAPINamesParserRuleCall_1_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Import__AliasedimportedNamesAssignment_1_2"


    // $ANTLR start "rule__Export__ExpAssignment_0_0"
    // InternalFortXTrans.g:11417:1: rule__Export__ExpAssignment_0_0 : ( ( 'export' ) ) ;
    public final void rule__Export__ExpAssignment_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11421:1: ( ( ( 'export' ) ) )
            // InternalFortXTrans.g:11422:2: ( ( 'export' ) )
            {
            // InternalFortXTrans.g:11422:2: ( ( 'export' ) )
            // InternalFortXTrans.g:11423:3: ( 'export' )
            {
             before(grammarAccess.getExportAccess().getExpExportKeyword_0_0_0()); 
            // InternalFortXTrans.g:11424:3: ( 'export' )
            // InternalFortXTrans.g:11425:4: 'export'
            {
             before(grammarAccess.getExportAccess().getExpExportKeyword_0_0_0()); 
            match(input,56,FOLLOW_2); 
             after(grammarAccess.getExportAccess().getExpExportKeyword_0_0_0()); 

            }

             after(grammarAccess.getExportAccess().getExpExportKeyword_0_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Export__ExpAssignment_0_0"


    // $ANTLR start "rule__Export__ExportedNameAssignment_0_1"
    // InternalFortXTrans.g:11436:1: rule__Export__ExportedNameAssignment_0_1 : ( ruleQualifiedName ) ;
    public final void rule__Export__ExportedNameAssignment_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11440:1: ( ( ruleQualifiedName ) )
            // InternalFortXTrans.g:11441:2: ( ruleQualifiedName )
            {
            // InternalFortXTrans.g:11441:2: ( ruleQualifiedName )
            // InternalFortXTrans.g:11442:3: ruleQualifiedName
            {
             before(grammarAccess.getExportAccess().getExportedNameQualifiedNameParserRuleCall_0_1_0()); 
            pushFollow(FOLLOW_2);
            ruleQualifiedName();

            state._fsp--;

             after(grammarAccess.getExportAccess().getExportedNameQualifiedNameParserRuleCall_0_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Export__ExportedNameAssignment_0_1"


    // $ANTLR start "rule__Export__ExpAssignment_1_0"
    // InternalFortXTrans.g:11451:1: rule__Export__ExpAssignment_1_0 : ( ( 'export' ) ) ;
    public final void rule__Export__ExpAssignment_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11455:1: ( ( ( 'export' ) ) )
            // InternalFortXTrans.g:11456:2: ( ( 'export' ) )
            {
            // InternalFortXTrans.g:11456:2: ( ( 'export' ) )
            // InternalFortXTrans.g:11457:3: ( 'export' )
            {
             before(grammarAccess.getExportAccess().getExpExportKeyword_1_0_0()); 
            // InternalFortXTrans.g:11458:3: ( 'export' )
            // InternalFortXTrans.g:11459:4: 'export'
            {
             before(grammarAccess.getExportAccess().getExpExportKeyword_1_0_0()); 
            match(input,56,FOLLOW_2); 
             after(grammarAccess.getExportAccess().getExpExportKeyword_1_0_0()); 

            }

             after(grammarAccess.getExportAccess().getExpExportKeyword_1_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Export__ExpAssignment_1_0"


    // $ANTLR start "rule__Export__BrackAssignment_1_1"
    // InternalFortXTrans.g:11470:1: rule__Export__BrackAssignment_1_1 : ( ( '{' ) ) ;
    public final void rule__Export__BrackAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11474:1: ( ( ( '{' ) ) )
            // InternalFortXTrans.g:11475:2: ( ( '{' ) )
            {
            // InternalFortXTrans.g:11475:2: ( ( '{' ) )
            // InternalFortXTrans.g:11476:3: ( '{' )
            {
             before(grammarAccess.getExportAccess().getBrackLeftCurlyBracketKeyword_1_1_0()); 
            // InternalFortXTrans.g:11477:3: ( '{' )
            // InternalFortXTrans.g:11478:4: '{'
            {
             before(grammarAccess.getExportAccess().getBrackLeftCurlyBracketKeyword_1_1_0()); 
            match(input,31,FOLLOW_2); 
             after(grammarAccess.getExportAccess().getBrackLeftCurlyBracketKeyword_1_1_0()); 

            }

             after(grammarAccess.getExportAccess().getBrackLeftCurlyBracketKeyword_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Export__BrackAssignment_1_1"


    // $ANTLR start "rule__Export__ExportedNameAssignment_1_2"
    // InternalFortXTrans.g:11489:1: rule__Export__ExportedNameAssignment_1_2 : ( ruleQualifiedName ) ;
    public final void rule__Export__ExportedNameAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11493:1: ( ( ruleQualifiedName ) )
            // InternalFortXTrans.g:11494:2: ( ruleQualifiedName )
            {
            // InternalFortXTrans.g:11494:2: ( ruleQualifiedName )
            // InternalFortXTrans.g:11495:3: ruleQualifiedName
            {
             before(grammarAccess.getExportAccess().getExportedNameQualifiedNameParserRuleCall_1_2_0()); 
            pushFollow(FOLLOW_2);
            ruleQualifiedName();

            state._fsp--;

             after(grammarAccess.getExportAccess().getExportedNameQualifiedNameParserRuleCall_1_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Export__ExportedNameAssignment_1_2"


    // $ANTLR start "rule__Export__ExportedNameAssignment_1_3_1"
    // InternalFortXTrans.g:11504:1: rule__Export__ExportedNameAssignment_1_3_1 : ( ruleQualifiedName ) ;
    public final void rule__Export__ExportedNameAssignment_1_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11508:1: ( ( ruleQualifiedName ) )
            // InternalFortXTrans.g:11509:2: ( ruleQualifiedName )
            {
            // InternalFortXTrans.g:11509:2: ( ruleQualifiedName )
            // InternalFortXTrans.g:11510:3: ruleQualifiedName
            {
             before(grammarAccess.getExportAccess().getExportedNameQualifiedNameParserRuleCall_1_3_1_0()); 
            pushFollow(FOLLOW_2);
            ruleQualifiedName();

            state._fsp--;

             after(grammarAccess.getExportAccess().getExportedNameQualifiedNameParserRuleCall_1_3_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Export__ExportedNameAssignment_1_3_1"


    // $ANTLR start "rule__ImportedNames__ImpnameAssignment_0_0"
    // InternalFortXTrans.g:11519:1: rule__ImportedNames__ImpnameAssignment_0_0 : ( ruleQualifiedName ) ;
    public final void rule__ImportedNames__ImpnameAssignment_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11523:1: ( ( ruleQualifiedName ) )
            // InternalFortXTrans.g:11524:2: ( ruleQualifiedName )
            {
            // InternalFortXTrans.g:11524:2: ( ruleQualifiedName )
            // InternalFortXTrans.g:11525:3: ruleQualifiedName
            {
             before(grammarAccess.getImportedNamesAccess().getImpnameQualifiedNameParserRuleCall_0_0_0()); 
            pushFollow(FOLLOW_2);
            ruleQualifiedName();

            state._fsp--;

             after(grammarAccess.getImportedNamesAccess().getImpnameQualifiedNameParserRuleCall_0_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__ImpnameAssignment_0_0"


    // $ANTLR start "rule__ImportedNames__ExceptAssignment_0_5_0"
    // InternalFortXTrans.g:11534:1: rule__ImportedNames__ExceptAssignment_0_5_0 : ( ( 'except' ) ) ;
    public final void rule__ImportedNames__ExceptAssignment_0_5_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11538:1: ( ( ( 'except' ) ) )
            // InternalFortXTrans.g:11539:2: ( ( 'except' ) )
            {
            // InternalFortXTrans.g:11539:2: ( ( 'except' ) )
            // InternalFortXTrans.g:11540:3: ( 'except' )
            {
             before(grammarAccess.getImportedNamesAccess().getExceptExceptKeyword_0_5_0_0()); 
            // InternalFortXTrans.g:11541:3: ( 'except' )
            // InternalFortXTrans.g:11542:4: 'except'
            {
             before(grammarAccess.getImportedNamesAccess().getExceptExceptKeyword_0_5_0_0()); 
            match(input,57,FOLLOW_2); 
             after(grammarAccess.getImportedNamesAccess().getExceptExceptKeyword_0_5_0_0()); 

            }

             after(grammarAccess.getImportedNamesAccess().getExceptExceptKeyword_0_5_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__ExceptAssignment_0_5_0"


    // $ANTLR start "rule__ImportedNames__SimpAssignment_0_5_1"
    // InternalFortXTrans.g:11553:1: rule__ImportedNames__SimpAssignment_0_5_1 : ( ruleSimpleNames ) ;
    public final void rule__ImportedNames__SimpAssignment_0_5_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11557:1: ( ( ruleSimpleNames ) )
            // InternalFortXTrans.g:11558:2: ( ruleSimpleNames )
            {
            // InternalFortXTrans.g:11558:2: ( ruleSimpleNames )
            // InternalFortXTrans.g:11559:3: ruleSimpleNames
            {
             before(grammarAccess.getImportedNamesAccess().getSimpSimpleNamesParserRuleCall_0_5_1_0()); 
            pushFollow(FOLLOW_2);
            ruleSimpleNames();

            state._fsp--;

             after(grammarAccess.getImportedNamesAccess().getSimpSimpleNamesParserRuleCall_0_5_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__SimpAssignment_0_5_1"


    // $ANTLR start "rule__ImportedNames__ImpnameAssignment_1_0"
    // InternalFortXTrans.g:11568:1: rule__ImportedNames__ImpnameAssignment_1_0 : ( ruleQualifiedName ) ;
    public final void rule__ImportedNames__ImpnameAssignment_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11572:1: ( ( ruleQualifiedName ) )
            // InternalFortXTrans.g:11573:2: ( ruleQualifiedName )
            {
            // InternalFortXTrans.g:11573:2: ( ruleQualifiedName )
            // InternalFortXTrans.g:11574:3: ruleQualifiedName
            {
             before(grammarAccess.getImportedNamesAccess().getImpnameQualifiedNameParserRuleCall_1_0_0()); 
            pushFollow(FOLLOW_2);
            ruleQualifiedName();

            state._fsp--;

             after(grammarAccess.getImportedNamesAccess().getImpnameQualifiedNameParserRuleCall_1_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__ImpnameAssignment_1_0"


    // $ANTLR start "rule__ImportedNames__SimpListAssignment_1_3"
    // InternalFortXTrans.g:11583:1: rule__ImportedNames__SimpListAssignment_1_3 : ( ruleAliasedSimpleName ) ;
    public final void rule__ImportedNames__SimpListAssignment_1_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11587:1: ( ( ruleAliasedSimpleName ) )
            // InternalFortXTrans.g:11588:2: ( ruleAliasedSimpleName )
            {
            // InternalFortXTrans.g:11588:2: ( ruleAliasedSimpleName )
            // InternalFortXTrans.g:11589:3: ruleAliasedSimpleName
            {
             before(grammarAccess.getImportedNamesAccess().getSimpListAliasedSimpleNameParserRuleCall_1_3_0()); 
            pushFollow(FOLLOW_2);
            ruleAliasedSimpleName();

            state._fsp--;

             after(grammarAccess.getImportedNamesAccess().getSimpListAliasedSimpleNameParserRuleCall_1_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__SimpListAssignment_1_3"


    // $ANTLR start "rule__ImportedNames__SimpListAssignment_1_4_1"
    // InternalFortXTrans.g:11598:1: rule__ImportedNames__SimpListAssignment_1_4_1 : ( ruleAliasedSimpleName ) ;
    public final void rule__ImportedNames__SimpListAssignment_1_4_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11602:1: ( ( ruleAliasedSimpleName ) )
            // InternalFortXTrans.g:11603:2: ( ruleAliasedSimpleName )
            {
            // InternalFortXTrans.g:11603:2: ( ruleAliasedSimpleName )
            // InternalFortXTrans.g:11604:3: ruleAliasedSimpleName
            {
             before(grammarAccess.getImportedNamesAccess().getSimpListAliasedSimpleNameParserRuleCall_1_4_1_0()); 
            pushFollow(FOLLOW_2);
            ruleAliasedSimpleName();

            state._fsp--;

             after(grammarAccess.getImportedNamesAccess().getSimpListAliasedSimpleNameParserRuleCall_1_4_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__SimpListAssignment_1_4_1"


    // $ANTLR start "rule__ImportedNames__CommaAssignment_1_5_0"
    // InternalFortXTrans.g:11613:1: rule__ImportedNames__CommaAssignment_1_5_0 : ( ( ',' ) ) ;
    public final void rule__ImportedNames__CommaAssignment_1_5_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11617:1: ( ( ( ',' ) ) )
            // InternalFortXTrans.g:11618:2: ( ( ',' ) )
            {
            // InternalFortXTrans.g:11618:2: ( ( ',' ) )
            // InternalFortXTrans.g:11619:3: ( ',' )
            {
             before(grammarAccess.getImportedNamesAccess().getCommaCommaKeyword_1_5_0_0()); 
            // InternalFortXTrans.g:11620:3: ( ',' )
            // InternalFortXTrans.g:11621:4: ','
            {
             before(grammarAccess.getImportedNamesAccess().getCommaCommaKeyword_1_5_0_0()); 
            match(input,29,FOLLOW_2); 
             after(grammarAccess.getImportedNamesAccess().getCommaCommaKeyword_1_5_0_0()); 

            }

             after(grammarAccess.getImportedNamesAccess().getCommaCommaKeyword_1_5_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__CommaAssignment_1_5_0"


    // $ANTLR start "rule__ImportedNames__DotsAssignment_1_5_1"
    // InternalFortXTrans.g:11632:1: rule__ImportedNames__DotsAssignment_1_5_1 : ( RULE_DOTS ) ;
    public final void rule__ImportedNames__DotsAssignment_1_5_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11636:1: ( ( RULE_DOTS ) )
            // InternalFortXTrans.g:11637:2: ( RULE_DOTS )
            {
            // InternalFortXTrans.g:11637:2: ( RULE_DOTS )
            // InternalFortXTrans.g:11638:3: RULE_DOTS
            {
             before(grammarAccess.getImportedNamesAccess().getDotsDOTSTerminalRuleCall_1_5_1_0()); 
            match(input,RULE_DOTS,FOLLOW_2); 
             after(grammarAccess.getImportedNamesAccess().getDotsDOTSTerminalRuleCall_1_5_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__DotsAssignment_1_5_1"


    // $ANTLR start "rule__ImportedNames__ImpnameAssignment_2_0"
    // InternalFortXTrans.g:11647:1: rule__ImportedNames__ImpnameAssignment_2_0 : ( ruleQualifiedName ) ;
    public final void rule__ImportedNames__ImpnameAssignment_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11651:1: ( ( ruleQualifiedName ) )
            // InternalFortXTrans.g:11652:2: ( ruleQualifiedName )
            {
            // InternalFortXTrans.g:11652:2: ( ruleQualifiedName )
            // InternalFortXTrans.g:11653:3: ruleQualifiedName
            {
             before(grammarAccess.getImportedNamesAccess().getImpnameQualifiedNameParserRuleCall_2_0_0()); 
            pushFollow(FOLLOW_2);
            ruleQualifiedName();

            state._fsp--;

             after(grammarAccess.getImportedNamesAccess().getImpnameQualifiedNameParserRuleCall_2_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__ImpnameAssignment_2_0"


    // $ANTLR start "rule__ImportedNames__AsnameAssignment_2_1_1"
    // InternalFortXTrans.g:11662:1: rule__ImportedNames__AsnameAssignment_2_1_1 : ( RULE_ID ) ;
    public final void rule__ImportedNames__AsnameAssignment_2_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11666:1: ( ( RULE_ID ) )
            // InternalFortXTrans.g:11667:2: ( RULE_ID )
            {
            // InternalFortXTrans.g:11667:2: ( RULE_ID )
            // InternalFortXTrans.g:11668:3: RULE_ID
            {
             before(grammarAccess.getImportedNamesAccess().getAsnameIDTerminalRuleCall_2_1_1_0()); 
            match(input,RULE_ID,FOLLOW_2); 
             after(grammarAccess.getImportedNamesAccess().getAsnameIDTerminalRuleCall_2_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportedNames__AsnameAssignment_2_1_1"


    // $ANTLR start "rule__QualifiedName__SAssignment_0"
    // InternalFortXTrans.g:11677:1: rule__QualifiedName__SAssignment_0 : ( ruleSimpleName ) ;
    public final void rule__QualifiedName__SAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11681:1: ( ( ruleSimpleName ) )
            // InternalFortXTrans.g:11682:2: ( ruleSimpleName )
            {
            // InternalFortXTrans.g:11682:2: ( ruleSimpleName )
            // InternalFortXTrans.g:11683:3: ruleSimpleName
            {
             before(grammarAccess.getQualifiedNameAccess().getSSimpleNameParserRuleCall_0_0()); 
            pushFollow(FOLLOW_2);
            ruleSimpleName();

            state._fsp--;

             after(grammarAccess.getQualifiedNameAccess().getSSimpleNameParserRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedName__SAssignment_0"


    // $ANTLR start "rule__QualifiedName__SAssignment_1_1"
    // InternalFortXTrans.g:11692:1: rule__QualifiedName__SAssignment_1_1 : ( ruleSimpleName ) ;
    public final void rule__QualifiedName__SAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11696:1: ( ( ruleSimpleName ) )
            // InternalFortXTrans.g:11697:2: ( ruleSimpleName )
            {
            // InternalFortXTrans.g:11697:2: ( ruleSimpleName )
            // InternalFortXTrans.g:11698:3: ruleSimpleName
            {
             before(grammarAccess.getQualifiedNameAccess().getSSimpleNameParserRuleCall_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleSimpleName();

            state._fsp--;

             after(grammarAccess.getQualifiedNameAccess().getSSimpleNameParserRuleCall_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedName__SAssignment_1_1"


    // $ANTLR start "rule__QualifiedName__DotsAssignment_2"
    // InternalFortXTrans.g:11707:1: rule__QualifiedName__DotsAssignment_2 : ( RULE_DOTS ) ;
    public final void rule__QualifiedName__DotsAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11711:1: ( ( RULE_DOTS ) )
            // InternalFortXTrans.g:11712:2: ( RULE_DOTS )
            {
            // InternalFortXTrans.g:11712:2: ( RULE_DOTS )
            // InternalFortXTrans.g:11713:3: RULE_DOTS
            {
             before(grammarAccess.getQualifiedNameAccess().getDotsDOTSTerminalRuleCall_2_0()); 
            match(input,RULE_DOTS,FOLLOW_2); 
             after(grammarAccess.getQualifiedNameAccess().getDotsDOTSTerminalRuleCall_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedName__DotsAssignment_2"


    // $ANTLR start "rule__QualifiedNameTuple__QlistAssignment_0"
    // InternalFortXTrans.g:11722:1: rule__QualifiedNameTuple__QlistAssignment_0 : ( ruleQualifiedName ) ;
    public final void rule__QualifiedNameTuple__QlistAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11726:1: ( ( ruleQualifiedName ) )
            // InternalFortXTrans.g:11727:2: ( ruleQualifiedName )
            {
            // InternalFortXTrans.g:11727:2: ( ruleQualifiedName )
            // InternalFortXTrans.g:11728:3: ruleQualifiedName
            {
             before(grammarAccess.getQualifiedNameTupleAccess().getQlistQualifiedNameParserRuleCall_0_0()); 
            pushFollow(FOLLOW_2);
            ruleQualifiedName();

            state._fsp--;

             after(grammarAccess.getQualifiedNameTupleAccess().getQlistQualifiedNameParserRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedNameTuple__QlistAssignment_0"


    // $ANTLR start "rule__QualifiedNameTuple__QlistAssignment_1_1"
    // InternalFortXTrans.g:11737:1: rule__QualifiedNameTuple__QlistAssignment_1_1 : ( ruleQualifiedName ) ;
    public final void rule__QualifiedNameTuple__QlistAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11741:1: ( ( ruleQualifiedName ) )
            // InternalFortXTrans.g:11742:2: ( ruleQualifiedName )
            {
            // InternalFortXTrans.g:11742:2: ( ruleQualifiedName )
            // InternalFortXTrans.g:11743:3: ruleQualifiedName
            {
             before(grammarAccess.getQualifiedNameTupleAccess().getQlistQualifiedNameParserRuleCall_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleQualifiedName();

            state._fsp--;

             after(grammarAccess.getQualifiedNameTupleAccess().getQlistQualifiedNameParserRuleCall_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedNameTuple__QlistAssignment_1_1"


    // $ANTLR start "rule__SimpleNames__NameListAssignment_0"
    // InternalFortXTrans.g:11752:1: rule__SimpleNames__NameListAssignment_0 : ( ruleSimpleName ) ;
    public final void rule__SimpleNames__NameListAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11756:1: ( ( ruleSimpleName ) )
            // InternalFortXTrans.g:11757:2: ( ruleSimpleName )
            {
            // InternalFortXTrans.g:11757:2: ( ruleSimpleName )
            // InternalFortXTrans.g:11758:3: ruleSimpleName
            {
             before(grammarAccess.getSimpleNamesAccess().getNameListSimpleNameParserRuleCall_0_0()); 
            pushFollow(FOLLOW_2);
            ruleSimpleName();

            state._fsp--;

             after(grammarAccess.getSimpleNamesAccess().getNameListSimpleNameParserRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleNames__NameListAssignment_0"


    // $ANTLR start "rule__SimpleNames__BrackAssignment_1_0"
    // InternalFortXTrans.g:11767:1: rule__SimpleNames__BrackAssignment_1_0 : ( ( '{' ) ) ;
    public final void rule__SimpleNames__BrackAssignment_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11771:1: ( ( ( '{' ) ) )
            // InternalFortXTrans.g:11772:2: ( ( '{' ) )
            {
            // InternalFortXTrans.g:11772:2: ( ( '{' ) )
            // InternalFortXTrans.g:11773:3: ( '{' )
            {
             before(grammarAccess.getSimpleNamesAccess().getBrackLeftCurlyBracketKeyword_1_0_0()); 
            // InternalFortXTrans.g:11774:3: ( '{' )
            // InternalFortXTrans.g:11775:4: '{'
            {
             before(grammarAccess.getSimpleNamesAccess().getBrackLeftCurlyBracketKeyword_1_0_0()); 
            match(input,31,FOLLOW_2); 
             after(grammarAccess.getSimpleNamesAccess().getBrackLeftCurlyBracketKeyword_1_0_0()); 

            }

             after(grammarAccess.getSimpleNamesAccess().getBrackLeftCurlyBracketKeyword_1_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleNames__BrackAssignment_1_0"


    // $ANTLR start "rule__SimpleNames__NameListAssignment_1_1"
    // InternalFortXTrans.g:11786:1: rule__SimpleNames__NameListAssignment_1_1 : ( ruleSimpleName ) ;
    public final void rule__SimpleNames__NameListAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11790:1: ( ( ruleSimpleName ) )
            // InternalFortXTrans.g:11791:2: ( ruleSimpleName )
            {
            // InternalFortXTrans.g:11791:2: ( ruleSimpleName )
            // InternalFortXTrans.g:11792:3: ruleSimpleName
            {
             before(grammarAccess.getSimpleNamesAccess().getNameListSimpleNameParserRuleCall_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleSimpleName();

            state._fsp--;

             after(grammarAccess.getSimpleNamesAccess().getNameListSimpleNameParserRuleCall_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleNames__NameListAssignment_1_1"


    // $ANTLR start "rule__SimpleNames__NameListAssignment_1_2_1"
    // InternalFortXTrans.g:11801:1: rule__SimpleNames__NameListAssignment_1_2_1 : ( ruleSimpleName ) ;
    public final void rule__SimpleNames__NameListAssignment_1_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11805:1: ( ( ruleSimpleName ) )
            // InternalFortXTrans.g:11806:2: ( ruleSimpleName )
            {
            // InternalFortXTrans.g:11806:2: ( ruleSimpleName )
            // InternalFortXTrans.g:11807:3: ruleSimpleName
            {
             before(grammarAccess.getSimpleNamesAccess().getNameListSimpleNameParserRuleCall_1_2_1_0()); 
            pushFollow(FOLLOW_2);
            ruleSimpleName();

            state._fsp--;

             after(grammarAccess.getSimpleNamesAccess().getNameListSimpleNameParserRuleCall_1_2_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleNames__NameListAssignment_1_2_1"


    // $ANTLR start "rule__SimpleName__NameAssignment"
    // InternalFortXTrans.g:11816:1: rule__SimpleName__NameAssignment : ( RULE_ID ) ;
    public final void rule__SimpleName__NameAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11820:1: ( ( RULE_ID ) )
            // InternalFortXTrans.g:11821:2: ( RULE_ID )
            {
            // InternalFortXTrans.g:11821:2: ( RULE_ID )
            // InternalFortXTrans.g:11822:3: RULE_ID
            {
             before(grammarAccess.getSimpleNameAccess().getNameIDTerminalRuleCall_0()); 
            match(input,RULE_ID,FOLLOW_2); 
             after(grammarAccess.getSimpleNameAccess().getNameIDTerminalRuleCall_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleName__NameAssignment"


    // $ANTLR start "rule__AliasedSimpleName__OrigAssignment_0"
    // InternalFortXTrans.g:11831:1: rule__AliasedSimpleName__OrigAssignment_0 : ( RULE_ID ) ;
    public final void rule__AliasedSimpleName__OrigAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11835:1: ( ( RULE_ID ) )
            // InternalFortXTrans.g:11836:2: ( RULE_ID )
            {
            // InternalFortXTrans.g:11836:2: ( RULE_ID )
            // InternalFortXTrans.g:11837:3: RULE_ID
            {
             before(grammarAccess.getAliasedSimpleNameAccess().getOrigIDTerminalRuleCall_0_0()); 
            match(input,RULE_ID,FOLLOW_2); 
             after(grammarAccess.getAliasedSimpleNameAccess().getOrigIDTerminalRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedSimpleName__OrigAssignment_0"


    // $ANTLR start "rule__AliasedSimpleName__AsNameAssignment_1_1"
    // InternalFortXTrans.g:11846:1: rule__AliasedSimpleName__AsNameAssignment_1_1 : ( RULE_ID ) ;
    public final void rule__AliasedSimpleName__AsNameAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11850:1: ( ( RULE_ID ) )
            // InternalFortXTrans.g:11851:2: ( RULE_ID )
            {
            // InternalFortXTrans.g:11851:2: ( RULE_ID )
            // InternalFortXTrans.g:11852:3: RULE_ID
            {
             before(grammarAccess.getAliasedSimpleNameAccess().getAsNameIDTerminalRuleCall_1_1_0()); 
            match(input,RULE_ID,FOLLOW_2); 
             after(grammarAccess.getAliasedSimpleNameAccess().getAsNameIDTerminalRuleCall_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedSimpleName__AsNameAssignment_1_1"


    // $ANTLR start "rule__AliasedAPINames__NameListAssignment_0"
    // InternalFortXTrans.g:11861:1: rule__AliasedAPINames__NameListAssignment_0 : ( ruleAliasedAPIName ) ;
    public final void rule__AliasedAPINames__NameListAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11865:1: ( ( ruleAliasedAPIName ) )
            // InternalFortXTrans.g:11866:2: ( ruleAliasedAPIName )
            {
            // InternalFortXTrans.g:11866:2: ( ruleAliasedAPIName )
            // InternalFortXTrans.g:11867:3: ruleAliasedAPIName
            {
             before(grammarAccess.getAliasedAPINamesAccess().getNameListAliasedAPINameParserRuleCall_0_0()); 
            pushFollow(FOLLOW_2);
            ruleAliasedAPIName();

            state._fsp--;

             after(grammarAccess.getAliasedAPINamesAccess().getNameListAliasedAPINameParserRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedAPINames__NameListAssignment_0"


    // $ANTLR start "rule__AliasedAPINames__BrackAssignment_1_0"
    // InternalFortXTrans.g:11876:1: rule__AliasedAPINames__BrackAssignment_1_0 : ( ( '{' ) ) ;
    public final void rule__AliasedAPINames__BrackAssignment_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11880:1: ( ( ( '{' ) ) )
            // InternalFortXTrans.g:11881:2: ( ( '{' ) )
            {
            // InternalFortXTrans.g:11881:2: ( ( '{' ) )
            // InternalFortXTrans.g:11882:3: ( '{' )
            {
             before(grammarAccess.getAliasedAPINamesAccess().getBrackLeftCurlyBracketKeyword_1_0_0()); 
            // InternalFortXTrans.g:11883:3: ( '{' )
            // InternalFortXTrans.g:11884:4: '{'
            {
             before(grammarAccess.getAliasedAPINamesAccess().getBrackLeftCurlyBracketKeyword_1_0_0()); 
            match(input,31,FOLLOW_2); 
             after(grammarAccess.getAliasedAPINamesAccess().getBrackLeftCurlyBracketKeyword_1_0_0()); 

            }

             after(grammarAccess.getAliasedAPINamesAccess().getBrackLeftCurlyBracketKeyword_1_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedAPINames__BrackAssignment_1_0"


    // $ANTLR start "rule__AliasedAPINames__NameListAssignment_1_1"
    // InternalFortXTrans.g:11895:1: rule__AliasedAPINames__NameListAssignment_1_1 : ( ruleAliasedAPIName ) ;
    public final void rule__AliasedAPINames__NameListAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11899:1: ( ( ruleAliasedAPIName ) )
            // InternalFortXTrans.g:11900:2: ( ruleAliasedAPIName )
            {
            // InternalFortXTrans.g:11900:2: ( ruleAliasedAPIName )
            // InternalFortXTrans.g:11901:3: ruleAliasedAPIName
            {
             before(grammarAccess.getAliasedAPINamesAccess().getNameListAliasedAPINameParserRuleCall_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleAliasedAPIName();

            state._fsp--;

             after(grammarAccess.getAliasedAPINamesAccess().getNameListAliasedAPINameParserRuleCall_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedAPINames__NameListAssignment_1_1"


    // $ANTLR start "rule__AliasedAPINames__NameListAssignment_1_2_1"
    // InternalFortXTrans.g:11910:1: rule__AliasedAPINames__NameListAssignment_1_2_1 : ( ruleAliasedAPIName ) ;
    public final void rule__AliasedAPINames__NameListAssignment_1_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11914:1: ( ( ruleAliasedAPIName ) )
            // InternalFortXTrans.g:11915:2: ( ruleAliasedAPIName )
            {
            // InternalFortXTrans.g:11915:2: ( ruleAliasedAPIName )
            // InternalFortXTrans.g:11916:3: ruleAliasedAPIName
            {
             before(grammarAccess.getAliasedAPINamesAccess().getNameListAliasedAPINameParserRuleCall_1_2_1_0()); 
            pushFollow(FOLLOW_2);
            ruleAliasedAPIName();

            state._fsp--;

             after(grammarAccess.getAliasedAPINamesAccess().getNameListAliasedAPINameParserRuleCall_1_2_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedAPINames__NameListAssignment_1_2_1"


    // $ANTLR start "rule__AliasedAPIName__OrigAssignment_0"
    // InternalFortXTrans.g:11925:1: rule__AliasedAPIName__OrigAssignment_0 : ( ruleQualifiedName ) ;
    public final void rule__AliasedAPIName__OrigAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11929:1: ( ( ruleQualifiedName ) )
            // InternalFortXTrans.g:11930:2: ( ruleQualifiedName )
            {
            // InternalFortXTrans.g:11930:2: ( ruleQualifiedName )
            // InternalFortXTrans.g:11931:3: ruleQualifiedName
            {
             before(grammarAccess.getAliasedAPINameAccess().getOrigQualifiedNameParserRuleCall_0_0()); 
            pushFollow(FOLLOW_2);
            ruleQualifiedName();

            state._fsp--;

             after(grammarAccess.getAliasedAPINameAccess().getOrigQualifiedNameParserRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedAPIName__OrigAssignment_0"


    // $ANTLR start "rule__AliasedAPIName__AsNameAssignment_1_1"
    // InternalFortXTrans.g:11940:1: rule__AliasedAPIName__AsNameAssignment_1_1 : ( RULE_ID ) ;
    public final void rule__AliasedAPIName__AsNameAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11944:1: ( ( RULE_ID ) )
            // InternalFortXTrans.g:11945:2: ( RULE_ID )
            {
            // InternalFortXTrans.g:11945:2: ( RULE_ID )
            // InternalFortXTrans.g:11946:3: RULE_ID
            {
             before(grammarAccess.getAliasedAPINameAccess().getAsNameIDTerminalRuleCall_1_1_0()); 
            match(input,RULE_ID,FOLLOW_2); 
             after(grammarAccess.getAliasedAPINameAccess().getAsNameIDTerminalRuleCall_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AliasedAPIName__AsNameAssignment_1_1"


    // $ANTLR start "rule__Decls__DeclsAssignment"
    // InternalFortXTrans.g:11955:1: rule__Decls__DeclsAssignment : ( ruleDecl ) ;
    public final void rule__Decls__DeclsAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11959:1: ( ( ruleDecl ) )
            // InternalFortXTrans.g:11960:2: ( ruleDecl )
            {
            // InternalFortXTrans.g:11960:2: ( ruleDecl )
            // InternalFortXTrans.g:11961:3: ruleDecl
            {
             before(grammarAccess.getDeclsAccess().getDeclsDeclParserRuleCall_0()); 
            pushFollow(FOLLOW_2);
            ruleDecl();

            state._fsp--;

             after(grammarAccess.getDeclsAccess().getDeclsDeclParserRuleCall_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Decls__DeclsAssignment"


    // $ANTLR start "rule__Decl__FunctionAssignment_0"
    // InternalFortXTrans.g:11970:1: rule__Decl__FunctionAssignment_0 : ( ruleFnDecl ) ;
    public final void rule__Decl__FunctionAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11974:1: ( ( ruleFnDecl ) )
            // InternalFortXTrans.g:11975:2: ( ruleFnDecl )
            {
            // InternalFortXTrans.g:11975:2: ( ruleFnDecl )
            // InternalFortXTrans.g:11976:3: ruleFnDecl
            {
             before(grammarAccess.getDeclAccess().getFunctionFnDeclParserRuleCall_0_0()); 
            pushFollow(FOLLOW_2);
            ruleFnDecl();

            state._fsp--;

             after(grammarAccess.getDeclAccess().getFunctionFnDeclParserRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Decl__FunctionAssignment_0"


    // $ANTLR start "rule__Decl__FieldAssignment_1"
    // InternalFortXTrans.g:11985:1: rule__Decl__FieldAssignment_1 : ( ruleFieldDecl ) ;
    public final void rule__Decl__FieldAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:11989:1: ( ( ruleFieldDecl ) )
            // InternalFortXTrans.g:11990:2: ( ruleFieldDecl )
            {
            // InternalFortXTrans.g:11990:2: ( ruleFieldDecl )
            // InternalFortXTrans.g:11991:3: ruleFieldDecl
            {
             before(grammarAccess.getDeclAccess().getFieldFieldDeclParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleFieldDecl();

            state._fsp--;

             after(grammarAccess.getDeclAccess().getFieldFieldDeclParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Decl__FieldAssignment_1"


    // $ANTLR start "rule__ValParam__ParamsAssignment_0"
    // InternalFortXTrans.g:12000:1: rule__ValParam__ParamsAssignment_0 : ( ruleParam ) ;
    public final void rule__ValParam__ParamsAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12004:1: ( ( ruleParam ) )
            // InternalFortXTrans.g:12005:2: ( ruleParam )
            {
            // InternalFortXTrans.g:12005:2: ( ruleParam )
            // InternalFortXTrans.g:12006:3: ruleParam
            {
             before(grammarAccess.getValParamAccess().getParamsParamParserRuleCall_0_0()); 
            pushFollow(FOLLOW_2);
            ruleParam();

            state._fsp--;

             after(grammarAccess.getValParamAccess().getParamsParamParserRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValParam__ParamsAssignment_0"


    // $ANTLR start "rule__ValParam__BrackAssignment_1_0"
    // InternalFortXTrans.g:12015:1: rule__ValParam__BrackAssignment_1_0 : ( ( '(' ) ) ;
    public final void rule__ValParam__BrackAssignment_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12019:1: ( ( ( '(' ) ) )
            // InternalFortXTrans.g:12020:2: ( ( '(' ) )
            {
            // InternalFortXTrans.g:12020:2: ( ( '(' ) )
            // InternalFortXTrans.g:12021:3: ( '(' )
            {
             before(grammarAccess.getValParamAccess().getBrackLeftParenthesisKeyword_1_0_0()); 
            // InternalFortXTrans.g:12022:3: ( '(' )
            // InternalFortXTrans.g:12023:4: '('
            {
             before(grammarAccess.getValParamAccess().getBrackLeftParenthesisKeyword_1_0_0()); 
            match(input,33,FOLLOW_2); 
             after(grammarAccess.getValParamAccess().getBrackLeftParenthesisKeyword_1_0_0()); 

            }

             after(grammarAccess.getValParamAccess().getBrackLeftParenthesisKeyword_1_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValParam__BrackAssignment_1_0"


    // $ANTLR start "rule__ValParam__ParamsAssignment_1_1_0"
    // InternalFortXTrans.g:12034:1: rule__ValParam__ParamsAssignment_1_1_0 : ( ruleParam ) ;
    public final void rule__ValParam__ParamsAssignment_1_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12038:1: ( ( ruleParam ) )
            // InternalFortXTrans.g:12039:2: ( ruleParam )
            {
            // InternalFortXTrans.g:12039:2: ( ruleParam )
            // InternalFortXTrans.g:12040:3: ruleParam
            {
             before(grammarAccess.getValParamAccess().getParamsParamParserRuleCall_1_1_0_0()); 
            pushFollow(FOLLOW_2);
            ruleParam();

            state._fsp--;

             after(grammarAccess.getValParamAccess().getParamsParamParserRuleCall_1_1_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValParam__ParamsAssignment_1_1_0"


    // $ANTLR start "rule__ValParam__ParamsAssignment_1_1_1_1"
    // InternalFortXTrans.g:12049:1: rule__ValParam__ParamsAssignment_1_1_1_1 : ( ruleParam ) ;
    public final void rule__ValParam__ParamsAssignment_1_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12053:1: ( ( ruleParam ) )
            // InternalFortXTrans.g:12054:2: ( ruleParam )
            {
            // InternalFortXTrans.g:12054:2: ( ruleParam )
            // InternalFortXTrans.g:12055:3: ruleParam
            {
             before(grammarAccess.getValParamAccess().getParamsParamParserRuleCall_1_1_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleParam();

            state._fsp--;

             after(grammarAccess.getValParamAccess().getParamsParamParserRuleCall_1_1_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValParam__ParamsAssignment_1_1_1_1"


    // $ANTLR start "rule__Param__ParIdAssignment_0"
    // InternalFortXTrans.g:12064:1: rule__Param__ParIdAssignment_0 : ( ruleQualifiedName ) ;
    public final void rule__Param__ParIdAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12068:1: ( ( ruleQualifiedName ) )
            // InternalFortXTrans.g:12069:2: ( ruleQualifiedName )
            {
            // InternalFortXTrans.g:12069:2: ( ruleQualifiedName )
            // InternalFortXTrans.g:12070:3: ruleQualifiedName
            {
             before(grammarAccess.getParamAccess().getParIdQualifiedNameParserRuleCall_0_0()); 
            pushFollow(FOLLOW_2);
            ruleQualifiedName();

            state._fsp--;

             after(grammarAccess.getParamAccess().getParIdQualifiedNameParserRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Param__ParIdAssignment_0"


    // $ANTLR start "rule__Param__IstypeAssignment_1"
    // InternalFortXTrans.g:12079:1: rule__Param__IstypeAssignment_1 : ( ruleIsType ) ;
    public final void rule__Param__IstypeAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12083:1: ( ( ruleIsType ) )
            // InternalFortXTrans.g:12084:2: ( ruleIsType )
            {
            // InternalFortXTrans.g:12084:2: ( ruleIsType )
            // InternalFortXTrans.g:12085:3: ruleIsType
            {
             before(grammarAccess.getParamAccess().getIstypeIsTypeParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleIsType();

            state._fsp--;

             after(grammarAccess.getParamAccess().getIstypeIsTypeParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Param__IstypeAssignment_1"


    // $ANTLR start "rule__RetType__EmptyAssignment_0_1"
    // InternalFortXTrans.g:12094:1: rule__RetType__EmptyAssignment_0_1 : ( ( '(' ) ) ;
    public final void rule__RetType__EmptyAssignment_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12098:1: ( ( ( '(' ) ) )
            // InternalFortXTrans.g:12099:2: ( ( '(' ) )
            {
            // InternalFortXTrans.g:12099:2: ( ( '(' ) )
            // InternalFortXTrans.g:12100:3: ( '(' )
            {
             before(grammarAccess.getRetTypeAccess().getEmptyLeftParenthesisKeyword_0_1_0()); 
            // InternalFortXTrans.g:12101:3: ( '(' )
            // InternalFortXTrans.g:12102:4: '('
            {
             before(grammarAccess.getRetTypeAccess().getEmptyLeftParenthesisKeyword_0_1_0()); 
            match(input,33,FOLLOW_2); 
             after(grammarAccess.getRetTypeAccess().getEmptyLeftParenthesisKeyword_0_1_0()); 

            }

             after(grammarAccess.getRetTypeAccess().getEmptyLeftParenthesisKeyword_0_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RetType__EmptyAssignment_0_1"


    // $ANTLR start "rule__RetType__TypeAssignment_1_1"
    // InternalFortXTrans.g:12113:1: rule__RetType__TypeAssignment_1_1 : ( ruleSimpleName ) ;
    public final void rule__RetType__TypeAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12117:1: ( ( ruleSimpleName ) )
            // InternalFortXTrans.g:12118:2: ( ruleSimpleName )
            {
            // InternalFortXTrans.g:12118:2: ( ruleSimpleName )
            // InternalFortXTrans.g:12119:3: ruleSimpleName
            {
             before(grammarAccess.getRetTypeAccess().getTypeSimpleNameParserRuleCall_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleSimpleName();

            state._fsp--;

             after(grammarAccess.getRetTypeAccess().getTypeSimpleNameParserRuleCall_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RetType__TypeAssignment_1_1"


    // $ANTLR start "rule__TupleType__TypesAssignment_1"
    // InternalFortXTrans.g:12128:1: rule__TupleType__TypesAssignment_1 : ( ruleSimpleName ) ;
    public final void rule__TupleType__TypesAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12132:1: ( ( ruleSimpleName ) )
            // InternalFortXTrans.g:12133:2: ( ruleSimpleName )
            {
            // InternalFortXTrans.g:12133:2: ( ruleSimpleName )
            // InternalFortXTrans.g:12134:3: ruleSimpleName
            {
             before(grammarAccess.getTupleTypeAccess().getTypesSimpleNameParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleSimpleName();

            state._fsp--;

             after(grammarAccess.getTupleTypeAccess().getTypesSimpleNameParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TupleType__TypesAssignment_1"


    // $ANTLR start "rule__TupleType__TypesAssignment_2_1"
    // InternalFortXTrans.g:12143:1: rule__TupleType__TypesAssignment_2_1 : ( ruleSimpleName ) ;
    public final void rule__TupleType__TypesAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12147:1: ( ( ruleSimpleName ) )
            // InternalFortXTrans.g:12148:2: ( ruleSimpleName )
            {
            // InternalFortXTrans.g:12148:2: ( ruleSimpleName )
            // InternalFortXTrans.g:12149:3: ruleSimpleName
            {
             before(grammarAccess.getTupleTypeAccess().getTypesSimpleNameParserRuleCall_2_1_0()); 
            pushFollow(FOLLOW_2);
            ruleSimpleName();

            state._fsp--;

             after(grammarAccess.getTupleTypeAccess().getTypesSimpleNameParserRuleCall_2_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TupleType__TypesAssignment_2_1"


    // $ANTLR start "rule__FnMods__ModsAssignment"
    // InternalFortXTrans.g:12158:1: rule__FnMods__ModsAssignment : ( ruleFnMod ) ;
    public final void rule__FnMods__ModsAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12162:1: ( ( ruleFnMod ) )
            // InternalFortXTrans.g:12163:2: ( ruleFnMod )
            {
            // InternalFortXTrans.g:12163:2: ( ruleFnMod )
            // InternalFortXTrans.g:12164:3: ruleFnMod
            {
             before(grammarAccess.getFnModsAccess().getModsFnModParserRuleCall_0()); 
            pushFollow(FOLLOW_2);
            ruleFnMod();

            state._fsp--;

             after(grammarAccess.getFnModsAccess().getModsFnModParserRuleCall_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FnMods__ModsAssignment"


    // $ANTLR start "rule__FnMod__ModtypeAssignment_0"
    // InternalFortXTrans.g:12173:1: rule__FnMod__ModtypeAssignment_0 : ( ( 'private' ) ) ;
    public final void rule__FnMod__ModtypeAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12177:1: ( ( ( 'private' ) ) )
            // InternalFortXTrans.g:12178:2: ( ( 'private' ) )
            {
            // InternalFortXTrans.g:12178:2: ( ( 'private' ) )
            // InternalFortXTrans.g:12179:3: ( 'private' )
            {
             before(grammarAccess.getFnModAccess().getModtypePrivateKeyword_0_0()); 
            // InternalFortXTrans.g:12180:3: ( 'private' )
            // InternalFortXTrans.g:12181:4: 'private'
            {
             before(grammarAccess.getFnModAccess().getModtypePrivateKeyword_0_0()); 
            match(input,58,FOLLOW_2); 
             after(grammarAccess.getFnModAccess().getModtypePrivateKeyword_0_0()); 

            }

             after(grammarAccess.getFnModAccess().getModtypePrivateKeyword_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FnMod__ModtypeAssignment_0"


    // $ANTLR start "rule__FnMod__ModtypeAssignment_1"
    // InternalFortXTrans.g:12192:1: rule__FnMod__ModtypeAssignment_1 : ( ( 'test' ) ) ;
    public final void rule__FnMod__ModtypeAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12196:1: ( ( ( 'test' ) ) )
            // InternalFortXTrans.g:12197:2: ( ( 'test' ) )
            {
            // InternalFortXTrans.g:12197:2: ( ( 'test' ) )
            // InternalFortXTrans.g:12198:3: ( 'test' )
            {
             before(grammarAccess.getFnModAccess().getModtypeTestKeyword_1_0()); 
            // InternalFortXTrans.g:12199:3: ( 'test' )
            // InternalFortXTrans.g:12200:4: 'test'
            {
             before(grammarAccess.getFnModAccess().getModtypeTestKeyword_1_0()); 
            match(input,59,FOLLOW_2); 
             after(grammarAccess.getFnModAccess().getModtypeTestKeyword_1_0()); 

            }

             after(grammarAccess.getFnModAccess().getModtypeTestKeyword_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FnMod__ModtypeAssignment_1"


    // $ANTLR start "rule__FnMod__ModtypeAssignment_2"
    // InternalFortXTrans.g:12211:1: rule__FnMod__ModtypeAssignment_2 : ( ( 'atomic' ) ) ;
    public final void rule__FnMod__ModtypeAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12215:1: ( ( ( 'atomic' ) ) )
            // InternalFortXTrans.g:12216:2: ( ( 'atomic' ) )
            {
            // InternalFortXTrans.g:12216:2: ( ( 'atomic' ) )
            // InternalFortXTrans.g:12217:3: ( 'atomic' )
            {
             before(grammarAccess.getFnModAccess().getModtypeAtomicKeyword_2_0()); 
            // InternalFortXTrans.g:12218:3: ( 'atomic' )
            // InternalFortXTrans.g:12219:4: 'atomic'
            {
             before(grammarAccess.getFnModAccess().getModtypeAtomicKeyword_2_0()); 
            match(input,60,FOLLOW_2); 
             after(grammarAccess.getFnModAccess().getModtypeAtomicKeyword_2_0()); 

            }

             after(grammarAccess.getFnModAccess().getModtypeAtomicKeyword_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FnMod__ModtypeAssignment_2"


    // $ANTLR start "rule__FnMod__ModtypeAssignment_3"
    // InternalFortXTrans.g:12230:1: rule__FnMod__ModtypeAssignment_3 : ( ( 'io' ) ) ;
    public final void rule__FnMod__ModtypeAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12234:1: ( ( ( 'io' ) ) )
            // InternalFortXTrans.g:12235:2: ( ( 'io' ) )
            {
            // InternalFortXTrans.g:12235:2: ( ( 'io' ) )
            // InternalFortXTrans.g:12236:3: ( 'io' )
            {
             before(grammarAccess.getFnModAccess().getModtypeIoKeyword_3_0()); 
            // InternalFortXTrans.g:12237:3: ( 'io' )
            // InternalFortXTrans.g:12238:4: 'io'
            {
             before(grammarAccess.getFnModAccess().getModtypeIoKeyword_3_0()); 
            match(input,61,FOLLOW_2); 
             after(grammarAccess.getFnModAccess().getModtypeIoKeyword_3_0()); 

            }

             after(grammarAccess.getFnModAccess().getModtypeIoKeyword_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FnMod__ModtypeAssignment_3"


    // $ANTLR start "rule__FnDecl__ModsAssignment_0"
    // InternalFortXTrans.g:12249:1: rule__FnDecl__ModsAssignment_0 : ( ruleFnMods ) ;
    public final void rule__FnDecl__ModsAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12253:1: ( ( ruleFnMods ) )
            // InternalFortXTrans.g:12254:2: ( ruleFnMods )
            {
            // InternalFortXTrans.g:12254:2: ( ruleFnMods )
            // InternalFortXTrans.g:12255:3: ruleFnMods
            {
             before(grammarAccess.getFnDeclAccess().getModsFnModsParserRuleCall_0_0()); 
            pushFollow(FOLLOW_2);
            ruleFnMods();

            state._fsp--;

             after(grammarAccess.getFnDeclAccess().getModsFnModsParserRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FnDecl__ModsAssignment_0"


    // $ANTLR start "rule__FnDecl__NameAssignment_1"
    // InternalFortXTrans.g:12264:1: rule__FnDecl__NameAssignment_1 : ( RULE_ID ) ;
    public final void rule__FnDecl__NameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12268:1: ( ( RULE_ID ) )
            // InternalFortXTrans.g:12269:2: ( RULE_ID )
            {
            // InternalFortXTrans.g:12269:2: ( RULE_ID )
            // InternalFortXTrans.g:12270:3: RULE_ID
            {
             before(grammarAccess.getFnDeclAccess().getNameIDTerminalRuleCall_1_0()); 
            match(input,RULE_ID,FOLLOW_2); 
             after(grammarAccess.getFnDeclAccess().getNameIDTerminalRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FnDecl__NameAssignment_1"


    // $ANTLR start "rule__FnDecl__ParamsAssignment_2"
    // InternalFortXTrans.g:12279:1: rule__FnDecl__ParamsAssignment_2 : ( ruleValParam ) ;
    public final void rule__FnDecl__ParamsAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12283:1: ( ( ruleValParam ) )
            // InternalFortXTrans.g:12284:2: ( ruleValParam )
            {
            // InternalFortXTrans.g:12284:2: ( ruleValParam )
            // InternalFortXTrans.g:12285:3: ruleValParam
            {
             before(grammarAccess.getFnDeclAccess().getParamsValParamParserRuleCall_2_0()); 
            pushFollow(FOLLOW_2);
            ruleValParam();

            state._fsp--;

             after(grammarAccess.getFnDeclAccess().getParamsValParamParserRuleCall_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FnDecl__ParamsAssignment_2"


    // $ANTLR start "rule__FnDecl__RetValAssignment_3"
    // InternalFortXTrans.g:12294:1: rule__FnDecl__RetValAssignment_3 : ( ruleRetType ) ;
    public final void rule__FnDecl__RetValAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12298:1: ( ( ruleRetType ) )
            // InternalFortXTrans.g:12299:2: ( ruleRetType )
            {
            // InternalFortXTrans.g:12299:2: ( ruleRetType )
            // InternalFortXTrans.g:12300:3: ruleRetType
            {
             before(grammarAccess.getFnDeclAccess().getRetValRetTypeParserRuleCall_3_0()); 
            pushFollow(FOLLOW_2);
            ruleRetType();

            state._fsp--;

             after(grammarAccess.getFnDeclAccess().getRetValRetTypeParserRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FnDecl__RetValAssignment_3"


    // $ANTLR start "rule__FnDecl__BodyAssignment_4_0"
    // InternalFortXTrans.g:12309:1: rule__FnDecl__BodyAssignment_4_0 : ( ( '=' ) ) ;
    public final void rule__FnDecl__BodyAssignment_4_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12313:1: ( ( ( '=' ) ) )
            // InternalFortXTrans.g:12314:2: ( ( '=' ) )
            {
            // InternalFortXTrans.g:12314:2: ( ( '=' ) )
            // InternalFortXTrans.g:12315:3: ( '=' )
            {
             before(grammarAccess.getFnDeclAccess().getBodyEqualsSignKeyword_4_0_0()); 
            // InternalFortXTrans.g:12316:3: ( '=' )
            // InternalFortXTrans.g:12317:4: '='
            {
             before(grammarAccess.getFnDeclAccess().getBodyEqualsSignKeyword_4_0_0()); 
            match(input,54,FOLLOW_2); 
             after(grammarAccess.getFnDeclAccess().getBodyEqualsSignKeyword_4_0_0()); 

            }

             after(grammarAccess.getFnDeclAccess().getBodyEqualsSignKeyword_4_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FnDecl__BodyAssignment_4_0"


    // $ANTLR start "rule__FnDecl__FnItselfAssignment_4_1"
    // InternalFortXTrans.g:12328:1: rule__FnDecl__FnItselfAssignment_4_1 : ( ruleStmnts ) ;
    public final void rule__FnDecl__FnItselfAssignment_4_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12332:1: ( ( ruleStmnts ) )
            // InternalFortXTrans.g:12333:2: ( ruleStmnts )
            {
            // InternalFortXTrans.g:12333:2: ( ruleStmnts )
            // InternalFortXTrans.g:12334:3: ruleStmnts
            {
             before(grammarAccess.getFnDeclAccess().getFnItselfStmntsParserRuleCall_4_1_0()); 
            pushFollow(FOLLOW_2);
            ruleStmnts();

            state._fsp--;

             after(grammarAccess.getFnDeclAccess().getFnItselfStmntsParserRuleCall_4_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FnDecl__FnItselfAssignment_4_1"


    // $ANTLR start "rule__Stmnts__FrontAssignment_0"
    // InternalFortXTrans.g:12343:1: rule__Stmnts__FrontAssignment_0 : ( ruleStmnt ) ;
    public final void rule__Stmnts__FrontAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12347:1: ( ( ruleStmnt ) )
            // InternalFortXTrans.g:12348:2: ( ruleStmnt )
            {
            // InternalFortXTrans.g:12348:2: ( ruleStmnt )
            // InternalFortXTrans.g:12349:3: ruleStmnt
            {
             before(grammarAccess.getStmntsAccess().getFrontStmntParserRuleCall_0_0()); 
            pushFollow(FOLLOW_2);
            ruleStmnt();

            state._fsp--;

             after(grammarAccess.getStmntsAccess().getFrontStmntParserRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Stmnts__FrontAssignment_0"


    // $ANTLR start "rule__Stmnts__DelimsAssignment_1_2"
    // InternalFortXTrans.g:12358:1: rule__Stmnts__DelimsAssignment_1_2 : ( ruleStmntList ) ;
    public final void rule__Stmnts__DelimsAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12362:1: ( ( ruleStmntList ) )
            // InternalFortXTrans.g:12363:2: ( ruleStmntList )
            {
            // InternalFortXTrans.g:12363:2: ( ruleStmntList )
            // InternalFortXTrans.g:12364:3: ruleStmntList
            {
             before(grammarAccess.getStmntsAccess().getDelimsStmntListParserRuleCall_1_2_0()); 
            pushFollow(FOLLOW_2);
            ruleStmntList();

            state._fsp--;

             after(grammarAccess.getStmntsAccess().getDelimsStmntListParserRuleCall_1_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Stmnts__DelimsAssignment_1_2"


    // $ANTLR start "rule__Stmnts__LocVarAssignment_2"
    // InternalFortXTrans.g:12373:1: rule__Stmnts__LocVarAssignment_2 : ( ruleLocalVarDecl ) ;
    public final void rule__Stmnts__LocVarAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12377:1: ( ( ruleLocalVarDecl ) )
            // InternalFortXTrans.g:12378:2: ( ruleLocalVarDecl )
            {
            // InternalFortXTrans.g:12378:2: ( ruleLocalVarDecl )
            // InternalFortXTrans.g:12379:3: ruleLocalVarDecl
            {
             before(grammarAccess.getStmntsAccess().getLocVarLocalVarDeclParserRuleCall_2_0()); 
            pushFollow(FOLLOW_2);
            ruleLocalVarDecl();

            state._fsp--;

             after(grammarAccess.getStmntsAccess().getLocVarLocalVarDeclParserRuleCall_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Stmnts__LocVarAssignment_2"


    // $ANTLR start "rule__Stmnts__ExpAssignment_3"
    // InternalFortXTrans.g:12388:1: rule__Stmnts__ExpAssignment_3 : ( ruleExpr ) ;
    public final void rule__Stmnts__ExpAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12392:1: ( ( ruleExpr ) )
            // InternalFortXTrans.g:12393:2: ( ruleExpr )
            {
            // InternalFortXTrans.g:12393:2: ( ruleExpr )
            // InternalFortXTrans.g:12394:3: ruleExpr
            {
             before(grammarAccess.getStmntsAccess().getExpExprParserRuleCall_3_0()); 
            pushFollow(FOLLOW_2);
            ruleExpr();

            state._fsp--;

             after(grammarAccess.getStmntsAccess().getExpExprParserRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Stmnts__ExpAssignment_3"


    // $ANTLR start "rule__Stmnt__DelimAssignment"
    // InternalFortXTrans.g:12403:1: rule__Stmnt__DelimAssignment : ( ruleDelimitedExpr ) ;
    public final void rule__Stmnt__DelimAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12407:1: ( ( ruleDelimitedExpr ) )
            // InternalFortXTrans.g:12408:2: ( ruleDelimitedExpr )
            {
            // InternalFortXTrans.g:12408:2: ( ruleDelimitedExpr )
            // InternalFortXTrans.g:12409:3: ruleDelimitedExpr
            {
             before(grammarAccess.getStmntAccess().getDelimDelimitedExprParserRuleCall_0()); 
            pushFollow(FOLLOW_2);
            ruleDelimitedExpr();

            state._fsp--;

             after(grammarAccess.getStmntAccess().getDelimDelimitedExprParserRuleCall_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Stmnt__DelimAssignment"


    // $ANTLR start "rule__StmntList__DelimAssignment_0"
    // InternalFortXTrans.g:12418:1: rule__StmntList__DelimAssignment_0 : ( ruleStmnt ) ;
    public final void rule__StmntList__DelimAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12422:1: ( ( ruleStmnt ) )
            // InternalFortXTrans.g:12423:2: ( ruleStmnt )
            {
            // InternalFortXTrans.g:12423:2: ( ruleStmnt )
            // InternalFortXTrans.g:12424:3: ruleStmnt
            {
             before(grammarAccess.getStmntListAccess().getDelimStmntParserRuleCall_0_0()); 
            pushFollow(FOLLOW_2);
            ruleStmnt();

            state._fsp--;

             after(grammarAccess.getStmntListAccess().getDelimStmntParserRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StmntList__DelimAssignment_0"


    // $ANTLR start "rule__StmntList__DelimAssignment_1_1"
    // InternalFortXTrans.g:12433:1: rule__StmntList__DelimAssignment_1_1 : ( ruleStmnt ) ;
    public final void rule__StmntList__DelimAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12437:1: ( ( ruleStmnt ) )
            // InternalFortXTrans.g:12438:2: ( ruleStmnt )
            {
            // InternalFortXTrans.g:12438:2: ( ruleStmnt )
            // InternalFortXTrans.g:12439:3: ruleStmnt
            {
             before(grammarAccess.getStmntListAccess().getDelimStmntParserRuleCall_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleStmnt();

            state._fsp--;

             after(grammarAccess.getStmntListAccess().getDelimStmntParserRuleCall_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StmntList__DelimAssignment_1_1"


    // $ANTLR start "rule__Expr__TailAssignment_1"
    // InternalFortXTrans.g:12448:1: rule__Expr__TailAssignment_1 : ( ruleExprTail ) ;
    public final void rule__Expr__TailAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12452:1: ( ( ruleExprTail ) )
            // InternalFortXTrans.g:12453:2: ( ruleExprTail )
            {
            // InternalFortXTrans.g:12453:2: ( ruleExprTail )
            // InternalFortXTrans.g:12454:3: ruleExprTail
            {
             before(grammarAccess.getExprAccess().getTailExprTailParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleExprTail();

            state._fsp--;

             after(grammarAccess.getExprAccess().getTailExprTailParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Expr__TailAssignment_1"


    // $ANTLR start "rule__Or__RightAssignment_1_2"
    // InternalFortXTrans.g:12463:1: rule__Or__RightAssignment_1_2 : ( ruleAnd ) ;
    public final void rule__Or__RightAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12467:1: ( ( ruleAnd ) )
            // InternalFortXTrans.g:12468:2: ( ruleAnd )
            {
            // InternalFortXTrans.g:12468:2: ( ruleAnd )
            // InternalFortXTrans.g:12469:3: ruleAnd
            {
             before(grammarAccess.getOrAccess().getRightAndParserRuleCall_1_2_0()); 
            pushFollow(FOLLOW_2);
            ruleAnd();

            state._fsp--;

             after(grammarAccess.getOrAccess().getRightAndParserRuleCall_1_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Or__RightAssignment_1_2"


    // $ANTLR start "rule__And__RightAssignment_1_2"
    // InternalFortXTrans.g:12478:1: rule__And__RightAssignment_1_2 : ( ruleEquality ) ;
    public final void rule__And__RightAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12482:1: ( ( ruleEquality ) )
            // InternalFortXTrans.g:12483:2: ( ruleEquality )
            {
            // InternalFortXTrans.g:12483:2: ( ruleEquality )
            // InternalFortXTrans.g:12484:3: ruleEquality
            {
             before(grammarAccess.getAndAccess().getRightEqualityParserRuleCall_1_2_0()); 
            pushFollow(FOLLOW_2);
            ruleEquality();

            state._fsp--;

             after(grammarAccess.getAndAccess().getRightEqualityParserRuleCall_1_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__And__RightAssignment_1_2"


    // $ANTLR start "rule__Equality__OpAssignment_1_1"
    // InternalFortXTrans.g:12493:1: rule__Equality__OpAssignment_1_1 : ( ( rule__Equality__OpAlternatives_1_1_0 ) ) ;
    public final void rule__Equality__OpAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12497:1: ( ( ( rule__Equality__OpAlternatives_1_1_0 ) ) )
            // InternalFortXTrans.g:12498:2: ( ( rule__Equality__OpAlternatives_1_1_0 ) )
            {
            // InternalFortXTrans.g:12498:2: ( ( rule__Equality__OpAlternatives_1_1_0 ) )
            // InternalFortXTrans.g:12499:3: ( rule__Equality__OpAlternatives_1_1_0 )
            {
             before(grammarAccess.getEqualityAccess().getOpAlternatives_1_1_0()); 
            // InternalFortXTrans.g:12500:3: ( rule__Equality__OpAlternatives_1_1_0 )
            // InternalFortXTrans.g:12500:4: rule__Equality__OpAlternatives_1_1_0
            {
            pushFollow(FOLLOW_2);
            rule__Equality__OpAlternatives_1_1_0();

            state._fsp--;


            }

             after(grammarAccess.getEqualityAccess().getOpAlternatives_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equality__OpAssignment_1_1"


    // $ANTLR start "rule__Equality__RightAssignment_1_2"
    // InternalFortXTrans.g:12508:1: rule__Equality__RightAssignment_1_2 : ( ruleComparison ) ;
    public final void rule__Equality__RightAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12512:1: ( ( ruleComparison ) )
            // InternalFortXTrans.g:12513:2: ( ruleComparison )
            {
            // InternalFortXTrans.g:12513:2: ( ruleComparison )
            // InternalFortXTrans.g:12514:3: ruleComparison
            {
             before(grammarAccess.getEqualityAccess().getRightComparisonParserRuleCall_1_2_0()); 
            pushFollow(FOLLOW_2);
            ruleComparison();

            state._fsp--;

             after(grammarAccess.getEqualityAccess().getRightComparisonParserRuleCall_1_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equality__RightAssignment_1_2"


    // $ANTLR start "rule__Comparison__OpAssignment_1_1"
    // InternalFortXTrans.g:12523:1: rule__Comparison__OpAssignment_1_1 : ( ( rule__Comparison__OpAlternatives_1_1_0 ) ) ;
    public final void rule__Comparison__OpAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12527:1: ( ( ( rule__Comparison__OpAlternatives_1_1_0 ) ) )
            // InternalFortXTrans.g:12528:2: ( ( rule__Comparison__OpAlternatives_1_1_0 ) )
            {
            // InternalFortXTrans.g:12528:2: ( ( rule__Comparison__OpAlternatives_1_1_0 ) )
            // InternalFortXTrans.g:12529:3: ( rule__Comparison__OpAlternatives_1_1_0 )
            {
             before(grammarAccess.getComparisonAccess().getOpAlternatives_1_1_0()); 
            // InternalFortXTrans.g:12530:3: ( rule__Comparison__OpAlternatives_1_1_0 )
            // InternalFortXTrans.g:12530:4: rule__Comparison__OpAlternatives_1_1_0
            {
            pushFollow(FOLLOW_2);
            rule__Comparison__OpAlternatives_1_1_0();

            state._fsp--;


            }

             after(grammarAccess.getComparisonAccess().getOpAlternatives_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__OpAssignment_1_1"


    // $ANTLR start "rule__Comparison__RightAssignment_1_2"
    // InternalFortXTrans.g:12538:1: rule__Comparison__RightAssignment_1_2 : ( ruleAddExpr ) ;
    public final void rule__Comparison__RightAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12542:1: ( ( ruleAddExpr ) )
            // InternalFortXTrans.g:12543:2: ( ruleAddExpr )
            {
            // InternalFortXTrans.g:12543:2: ( ruleAddExpr )
            // InternalFortXTrans.g:12544:3: ruleAddExpr
            {
             before(grammarAccess.getComparisonAccess().getRightAddExprParserRuleCall_1_2_0()); 
            pushFollow(FOLLOW_2);
            ruleAddExpr();

            state._fsp--;

             after(grammarAccess.getComparisonAccess().getRightAddExprParserRuleCall_1_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__RightAssignment_1_2"


    // $ANTLR start "rule__AddExpr__RightAssignment_1_2"
    // InternalFortXTrans.g:12553:1: rule__AddExpr__RightAssignment_1_2 : ( ruleSubExpr ) ;
    public final void rule__AddExpr__RightAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12557:1: ( ( ruleSubExpr ) )
            // InternalFortXTrans.g:12558:2: ( ruleSubExpr )
            {
            // InternalFortXTrans.g:12558:2: ( ruleSubExpr )
            // InternalFortXTrans.g:12559:3: ruleSubExpr
            {
             before(grammarAccess.getAddExprAccess().getRightSubExprParserRuleCall_1_2_0()); 
            pushFollow(FOLLOW_2);
            ruleSubExpr();

            state._fsp--;

             after(grammarAccess.getAddExprAccess().getRightSubExprParserRuleCall_1_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AddExpr__RightAssignment_1_2"


    // $ANTLR start "rule__SubExpr__RightAssignment_1_2"
    // InternalFortXTrans.g:12568:1: rule__SubExpr__RightAssignment_1_2 : ( ruleDivExpr ) ;
    public final void rule__SubExpr__RightAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12572:1: ( ( ruleDivExpr ) )
            // InternalFortXTrans.g:12573:2: ( ruleDivExpr )
            {
            // InternalFortXTrans.g:12573:2: ( ruleDivExpr )
            // InternalFortXTrans.g:12574:3: ruleDivExpr
            {
             before(grammarAccess.getSubExprAccess().getRightDivExprParserRuleCall_1_2_0()); 
            pushFollow(FOLLOW_2);
            ruleDivExpr();

            state._fsp--;

             after(grammarAccess.getSubExprAccess().getRightDivExprParserRuleCall_1_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubExpr__RightAssignment_1_2"


    // $ANTLR start "rule__DivExpr__RightAssignment_1_2"
    // InternalFortXTrans.g:12583:1: rule__DivExpr__RightAssignment_1_2 : ( ruleMultExpr ) ;
    public final void rule__DivExpr__RightAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12587:1: ( ( ruleMultExpr ) )
            // InternalFortXTrans.g:12588:2: ( ruleMultExpr )
            {
            // InternalFortXTrans.g:12588:2: ( ruleMultExpr )
            // InternalFortXTrans.g:12589:3: ruleMultExpr
            {
             before(grammarAccess.getDivExprAccess().getRightMultExprParserRuleCall_1_2_0()); 
            pushFollow(FOLLOW_2);
            ruleMultExpr();

            state._fsp--;

             after(grammarAccess.getDivExprAccess().getRightMultExprParserRuleCall_1_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DivExpr__RightAssignment_1_2"


    // $ANTLR start "rule__MultExpr__RightAssignment_1_2"
    // InternalFortXTrans.g:12598:1: rule__MultExpr__RightAssignment_1_2 : ( ruleExponentExpr ) ;
    public final void rule__MultExpr__RightAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12602:1: ( ( ruleExponentExpr ) )
            // InternalFortXTrans.g:12603:2: ( ruleExponentExpr )
            {
            // InternalFortXTrans.g:12603:2: ( ruleExponentExpr )
            // InternalFortXTrans.g:12604:3: ruleExponentExpr
            {
             before(grammarAccess.getMultExprAccess().getRightExponentExprParserRuleCall_1_2_0()); 
            pushFollow(FOLLOW_2);
            ruleExponentExpr();

            state._fsp--;

             after(grammarAccess.getMultExprAccess().getRightExponentExprParserRuleCall_1_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultExpr__RightAssignment_1_2"


    // $ANTLR start "rule__ExponentExpr__OpAssignment_1_1"
    // InternalFortXTrans.g:12613:1: rule__ExponentExpr__OpAssignment_1_1 : ( ( '^' ) ) ;
    public final void rule__ExponentExpr__OpAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12617:1: ( ( ( '^' ) ) )
            // InternalFortXTrans.g:12618:2: ( ( '^' ) )
            {
            // InternalFortXTrans.g:12618:2: ( ( '^' ) )
            // InternalFortXTrans.g:12619:3: ( '^' )
            {
             before(grammarAccess.getExponentExprAccess().getOpCircumflexAccentKeyword_1_1_0()); 
            // InternalFortXTrans.g:12620:3: ( '^' )
            // InternalFortXTrans.g:12621:4: '^'
            {
             before(grammarAccess.getExponentExprAccess().getOpCircumflexAccentKeyword_1_1_0()); 
            match(input,62,FOLLOW_2); 
             after(grammarAccess.getExponentExprAccess().getOpCircumflexAccentKeyword_1_1_0()); 

            }

             after(grammarAccess.getExponentExprAccess().getOpCircumflexAccentKeyword_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExponentExpr__OpAssignment_1_1"


    // $ANTLR start "rule__ExponentExpr__RightAssignment_1_2"
    // InternalFortXTrans.g:12632:1: rule__ExponentExpr__RightAssignment_1_2 : ( rulePrimary ) ;
    public final void rule__ExponentExpr__RightAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12636:1: ( ( rulePrimary ) )
            // InternalFortXTrans.g:12637:2: ( rulePrimary )
            {
            // InternalFortXTrans.g:12637:2: ( rulePrimary )
            // InternalFortXTrans.g:12638:3: rulePrimary
            {
             before(grammarAccess.getExponentExprAccess().getRightPrimaryParserRuleCall_1_2_0()); 
            pushFollow(FOLLOW_2);
            rulePrimary();

            state._fsp--;

             after(grammarAccess.getExponentExprAccess().getRightPrimaryParserRuleCall_1_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExponentExpr__RightAssignment_1_2"


    // $ANTLR start "rule__Primary__OpAssignment_0_1_1_0"
    // InternalFortXTrans.g:12647:1: rule__Primary__OpAssignment_0_1_1_0 : ( ( ':=' ) ) ;
    public final void rule__Primary__OpAssignment_0_1_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12651:1: ( ( ( ':=' ) ) )
            // InternalFortXTrans.g:12652:2: ( ( ':=' ) )
            {
            // InternalFortXTrans.g:12652:2: ( ( ':=' ) )
            // InternalFortXTrans.g:12653:3: ( ':=' )
            {
             before(grammarAccess.getPrimaryAccess().getOpColonEqualsSignKeyword_0_1_1_0_0()); 
            // InternalFortXTrans.g:12654:3: ( ':=' )
            // InternalFortXTrans.g:12655:4: ':='
            {
             before(grammarAccess.getPrimaryAccess().getOpColonEqualsSignKeyword_0_1_1_0_0()); 
            match(input,63,FOLLOW_2); 
             after(grammarAccess.getPrimaryAccess().getOpColonEqualsSignKeyword_0_1_1_0_0()); 

            }

             after(grammarAccess.getPrimaryAccess().getOpColonEqualsSignKeyword_0_1_1_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__OpAssignment_0_1_1_0"


    // $ANTLR start "rule__Primary__RightAssignment_0_1_1_1"
    // InternalFortXTrans.g:12666:1: rule__Primary__RightAssignment_0_1_1_1 : ( ruleExpr ) ;
    public final void rule__Primary__RightAssignment_0_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12670:1: ( ( ruleExpr ) )
            // InternalFortXTrans.g:12671:2: ( ruleExpr )
            {
            // InternalFortXTrans.g:12671:2: ( ruleExpr )
            // InternalFortXTrans.g:12672:3: ruleExpr
            {
             before(grammarAccess.getPrimaryAccess().getRightExprParserRuleCall_0_1_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleExpr();

            state._fsp--;

             after(grammarAccess.getPrimaryAccess().getRightExprParserRuleCall_0_1_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__RightAssignment_0_1_1_1"


    // $ANTLR start "rule__Primary__RightAssignment_0_2_2"
    // InternalFortXTrans.g:12681:1: rule__Primary__RightAssignment_0_2_2 : ( ruleExprList ) ;
    public final void rule__Primary__RightAssignment_0_2_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12685:1: ( ( ruleExprList ) )
            // InternalFortXTrans.g:12686:2: ( ruleExprList )
            {
            // InternalFortXTrans.g:12686:2: ( ruleExprList )
            // InternalFortXTrans.g:12687:3: ruleExprList
            {
             before(grammarAccess.getPrimaryAccess().getRightExprListParserRuleCall_0_2_2_0()); 
            pushFollow(FOLLOW_2);
            ruleExprList();

            state._fsp--;

             after(grammarAccess.getPrimaryAccess().getRightExprListParserRuleCall_0_2_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__RightAssignment_0_2_2"


    // $ANTLR start "rule__Primary__TypeAssignment_0_3_3"
    // InternalFortXTrans.g:12696:1: rule__Primary__TypeAssignment_0_3_3 : ( ruleSimpleName ) ;
    public final void rule__Primary__TypeAssignment_0_3_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12700:1: ( ( ruleSimpleName ) )
            // InternalFortXTrans.g:12701:2: ( ruleSimpleName )
            {
            // InternalFortXTrans.g:12701:2: ( ruleSimpleName )
            // InternalFortXTrans.g:12702:3: ruleSimpleName
            {
             before(grammarAccess.getPrimaryAccess().getTypeSimpleNameParserRuleCall_0_3_3_0()); 
            pushFollow(FOLLOW_2);
            ruleSimpleName();

            state._fsp--;

             after(grammarAccess.getPrimaryAccess().getTypeSimpleNameParserRuleCall_0_3_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__TypeAssignment_0_3_3"


    // $ANTLR start "rule__Primary__SizesAssignment_0_3_5"
    // InternalFortXTrans.g:12711:1: rule__Primary__SizesAssignment_0_3_5 : ( ruleExprList ) ;
    public final void rule__Primary__SizesAssignment_0_3_5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12715:1: ( ( ruleExprList ) )
            // InternalFortXTrans.g:12716:2: ( ruleExprList )
            {
            // InternalFortXTrans.g:12716:2: ( ruleExprList )
            // InternalFortXTrans.g:12717:3: ruleExprList
            {
             before(grammarAccess.getPrimaryAccess().getSizesExprListParserRuleCall_0_3_5_0()); 
            pushFollow(FOLLOW_2);
            ruleExprList();

            state._fsp--;

             after(grammarAccess.getPrimaryAccess().getSizesExprListParserRuleCall_0_3_5_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__SizesAssignment_0_3_5"


    // $ANTLR start "rule__Primary__FillerAssignment_0_3_9"
    // InternalFortXTrans.g:12726:1: rule__Primary__FillerAssignment_0_3_9 : ( ruleQualifiedName ) ;
    public final void rule__Primary__FillerAssignment_0_3_9() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12730:1: ( ( ruleQualifiedName ) )
            // InternalFortXTrans.g:12731:2: ( ruleQualifiedName )
            {
            // InternalFortXTrans.g:12731:2: ( ruleQualifiedName )
            // InternalFortXTrans.g:12732:3: ruleQualifiedName
            {
             before(grammarAccess.getPrimaryAccess().getFillerQualifiedNameParserRuleCall_0_3_9_0()); 
            pushFollow(FOLLOW_2);
            ruleQualifiedName();

            state._fsp--;

             after(grammarAccess.getPrimaryAccess().getFillerQualifiedNameParserRuleCall_0_3_9_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__FillerAssignment_0_3_9"


    // $ANTLR start "rule__Primary__ExpressionAssignment_1_2"
    // InternalFortXTrans.g:12741:1: rule__Primary__ExpressionAssignment_1_2 : ( rulePrimary ) ;
    public final void rule__Primary__ExpressionAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12745:1: ( ( rulePrimary ) )
            // InternalFortXTrans.g:12746:2: ( rulePrimary )
            {
            // InternalFortXTrans.g:12746:2: ( rulePrimary )
            // InternalFortXTrans.g:12747:3: rulePrimary
            {
             before(grammarAccess.getPrimaryAccess().getExpressionPrimaryParserRuleCall_1_2_0()); 
            pushFollow(FOLLOW_2);
            rulePrimary();

            state._fsp--;

             after(grammarAccess.getPrimaryAccess().getExpressionPrimaryParserRuleCall_1_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__ExpressionAssignment_1_2"


    // $ANTLR start "rule__Primary__ExpressionAssignment_2_2"
    // InternalFortXTrans.g:12756:1: rule__Primary__ExpressionAssignment_2_2 : ( rulePrimary ) ;
    public final void rule__Primary__ExpressionAssignment_2_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12760:1: ( ( rulePrimary ) )
            // InternalFortXTrans.g:12761:2: ( rulePrimary )
            {
            // InternalFortXTrans.g:12761:2: ( rulePrimary )
            // InternalFortXTrans.g:12762:3: rulePrimary
            {
             before(grammarAccess.getPrimaryAccess().getExpressionPrimaryParserRuleCall_2_2_0()); 
            pushFollow(FOLLOW_2);
            rulePrimary();

            state._fsp--;

             after(grammarAccess.getPrimaryAccess().getExpressionPrimaryParserRuleCall_2_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__ExpressionAssignment_2_2"


    // $ANTLR start "rule__Primary__ExpAssignment_3_2"
    // InternalFortXTrans.g:12771:1: rule__Primary__ExpAssignment_3_2 : ( ruleExprList ) ;
    public final void rule__Primary__ExpAssignment_3_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12775:1: ( ( ruleExprList ) )
            // InternalFortXTrans.g:12776:2: ( ruleExprList )
            {
            // InternalFortXTrans.g:12776:2: ( ruleExprList )
            // InternalFortXTrans.g:12777:3: ruleExprList
            {
             before(grammarAccess.getPrimaryAccess().getExpExprListParserRuleCall_3_2_0()); 
            pushFollow(FOLLOW_2);
            ruleExprList();

            state._fsp--;

             after(grammarAccess.getPrimaryAccess().getExpExprListParserRuleCall_3_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Primary__ExpAssignment_3_2"


    // $ANTLR start "rule__ExprList__ExpsAssignment_0"
    // InternalFortXTrans.g:12786:1: rule__ExprList__ExpsAssignment_0 : ( ruleExpr ) ;
    public final void rule__ExprList__ExpsAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12790:1: ( ( ruleExpr ) )
            // InternalFortXTrans.g:12791:2: ( ruleExpr )
            {
            // InternalFortXTrans.g:12791:2: ( ruleExpr )
            // InternalFortXTrans.g:12792:3: ruleExpr
            {
             before(grammarAccess.getExprListAccess().getExpsExprParserRuleCall_0_0()); 
            pushFollow(FOLLOW_2);
            ruleExpr();

            state._fsp--;

             after(grammarAccess.getExprListAccess().getExpsExprParserRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExprList__ExpsAssignment_0"


    // $ANTLR start "rule__ExprList__ExpAssignment_1_1"
    // InternalFortXTrans.g:12801:1: rule__ExprList__ExpAssignment_1_1 : ( ruleExpr ) ;
    public final void rule__ExprList__ExpAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12805:1: ( ( ruleExpr ) )
            // InternalFortXTrans.g:12806:2: ( ruleExpr )
            {
            // InternalFortXTrans.g:12806:2: ( ruleExpr )
            // InternalFortXTrans.g:12807:3: ruleExpr
            {
             before(grammarAccess.getExprListAccess().getExpExprParserRuleCall_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleExpr();

            state._fsp--;

             after(grammarAccess.getExprListAccess().getExpExprParserRuleCall_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExprList__ExpAssignment_1_1"


    // $ANTLR start "rule__ExprTail__TypeAssignment_1"
    // InternalFortXTrans.g:12816:1: rule__ExprTail__TypeAssignment_1 : ( ruleSimpleName ) ;
    public final void rule__ExprTail__TypeAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12820:1: ( ( ruleSimpleName ) )
            // InternalFortXTrans.g:12821:2: ( ruleSimpleName )
            {
            // InternalFortXTrans.g:12821:2: ( ruleSimpleName )
            // InternalFortXTrans.g:12822:3: ruleSimpleName
            {
             before(grammarAccess.getExprTailAccess().getTypeSimpleNameParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleSimpleName();

            state._fsp--;

             after(grammarAccess.getExprTailAccess().getTypeSimpleNameParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExprTail__TypeAssignment_1"


    // $ANTLR start "rule__DelimitedExpr__DodAssignment_0"
    // InternalFortXTrans.g:12831:1: rule__DelimitedExpr__DodAssignment_0 : ( ruleDo ) ;
    public final void rule__DelimitedExpr__DodAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12835:1: ( ( ruleDo ) )
            // InternalFortXTrans.g:12836:2: ( ruleDo )
            {
            // InternalFortXTrans.g:12836:2: ( ruleDo )
            // InternalFortXTrans.g:12837:3: ruleDo
            {
             before(grammarAccess.getDelimitedExprAccess().getDodDoParserRuleCall_0_0()); 
            pushFollow(FOLLOW_2);
            ruleDo();

            state._fsp--;

             after(grammarAccess.getDelimitedExprAccess().getDodDoParserRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__DodAssignment_0"


    // $ANTLR start "rule__DelimitedExpr__RetAssignment_1_0"
    // InternalFortXTrans.g:12846:1: rule__DelimitedExpr__RetAssignment_1_0 : ( ( 'return' ) ) ;
    public final void rule__DelimitedExpr__RetAssignment_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12850:1: ( ( ( 'return' ) ) )
            // InternalFortXTrans.g:12851:2: ( ( 'return' ) )
            {
            // InternalFortXTrans.g:12851:2: ( ( 'return' ) )
            // InternalFortXTrans.g:12852:3: ( 'return' )
            {
             before(grammarAccess.getDelimitedExprAccess().getRetReturnKeyword_1_0_0()); 
            // InternalFortXTrans.g:12853:3: ( 'return' )
            // InternalFortXTrans.g:12854:4: 'return'
            {
             before(grammarAccess.getDelimitedExprAccess().getRetReturnKeyword_1_0_0()); 
            match(input,64,FOLLOW_2); 
             after(grammarAccess.getDelimitedExprAccess().getRetReturnKeyword_1_0_0()); 

            }

             after(grammarAccess.getDelimitedExprAccess().getRetReturnKeyword_1_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__RetAssignment_1_0"


    // $ANTLR start "rule__DelimitedExpr__BlockAssignment_1_1"
    // InternalFortXTrans.g:12865:1: rule__DelimitedExpr__BlockAssignment_1_1 : ( ruleExpr ) ;
    public final void rule__DelimitedExpr__BlockAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12869:1: ( ( ruleExpr ) )
            // InternalFortXTrans.g:12870:2: ( ruleExpr )
            {
            // InternalFortXTrans.g:12870:2: ( ruleExpr )
            // InternalFortXTrans.g:12871:3: ruleExpr
            {
             before(grammarAccess.getDelimitedExprAccess().getBlockExprParserRuleCall_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleExpr();

            state._fsp--;

             after(grammarAccess.getDelimitedExprAccess().getBlockExprParserRuleCall_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__BlockAssignment_1_1"


    // $ANTLR start "rule__DelimitedExpr__AwhileAssignment_2_0"
    // InternalFortXTrans.g:12880:1: rule__DelimitedExpr__AwhileAssignment_2_0 : ( ( 'while' ) ) ;
    public final void rule__DelimitedExpr__AwhileAssignment_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12884:1: ( ( ( 'while' ) ) )
            // InternalFortXTrans.g:12885:2: ( ( 'while' ) )
            {
            // InternalFortXTrans.g:12885:2: ( ( 'while' ) )
            // InternalFortXTrans.g:12886:3: ( 'while' )
            {
             before(grammarAccess.getDelimitedExprAccess().getAwhileWhileKeyword_2_0_0()); 
            // InternalFortXTrans.g:12887:3: ( 'while' )
            // InternalFortXTrans.g:12888:4: 'while'
            {
             before(grammarAccess.getDelimitedExprAccess().getAwhileWhileKeyword_2_0_0()); 
            match(input,65,FOLLOW_2); 
             after(grammarAccess.getDelimitedExprAccess().getAwhileWhileKeyword_2_0_0()); 

            }

             after(grammarAccess.getDelimitedExprAccess().getAwhileWhileKeyword_2_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__AwhileAssignment_2_0"


    // $ANTLR start "rule__DelimitedExpr__ExprAssignment_2_1"
    // InternalFortXTrans.g:12899:1: rule__DelimitedExpr__ExprAssignment_2_1 : ( ruleExpr ) ;
    public final void rule__DelimitedExpr__ExprAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12903:1: ( ( ruleExpr ) )
            // InternalFortXTrans.g:12904:2: ( ruleExpr )
            {
            // InternalFortXTrans.g:12904:2: ( ruleExpr )
            // InternalFortXTrans.g:12905:3: ruleExpr
            {
             before(grammarAccess.getDelimitedExprAccess().getExprExprParserRuleCall_2_1_0()); 
            pushFollow(FOLLOW_2);
            ruleExpr();

            state._fsp--;

             after(grammarAccess.getDelimitedExprAccess().getExprExprParserRuleCall_2_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__ExprAssignment_2_1"


    // $ANTLR start "rule__DelimitedExpr__WhiledodAssignment_2_2"
    // InternalFortXTrans.g:12914:1: rule__DelimitedExpr__WhiledodAssignment_2_2 : ( ruleDo ) ;
    public final void rule__DelimitedExpr__WhiledodAssignment_2_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12918:1: ( ( ruleDo ) )
            // InternalFortXTrans.g:12919:2: ( ruleDo )
            {
            // InternalFortXTrans.g:12919:2: ( ruleDo )
            // InternalFortXTrans.g:12920:3: ruleDo
            {
             before(grammarAccess.getDelimitedExprAccess().getWhiledodDoParserRuleCall_2_2_0()); 
            pushFollow(FOLLOW_2);
            ruleDo();

            state._fsp--;

             after(grammarAccess.getDelimitedExprAccess().getWhiledodDoParserRuleCall_2_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__WhiledodAssignment_2_2"


    // $ANTLR start "rule__DelimitedExpr__AforAssignment_3_0"
    // InternalFortXTrans.g:12929:1: rule__DelimitedExpr__AforAssignment_3_0 : ( ( 'for' ) ) ;
    public final void rule__DelimitedExpr__AforAssignment_3_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12933:1: ( ( ( 'for' ) ) )
            // InternalFortXTrans.g:12934:2: ( ( 'for' ) )
            {
            // InternalFortXTrans.g:12934:2: ( ( 'for' ) )
            // InternalFortXTrans.g:12935:3: ( 'for' )
            {
             before(grammarAccess.getDelimitedExprAccess().getAforForKeyword_3_0_0()); 
            // InternalFortXTrans.g:12936:3: ( 'for' )
            // InternalFortXTrans.g:12937:4: 'for'
            {
             before(grammarAccess.getDelimitedExprAccess().getAforForKeyword_3_0_0()); 
            match(input,66,FOLLOW_2); 
             after(grammarAccess.getDelimitedExprAccess().getAforForKeyword_3_0_0()); 

            }

             after(grammarAccess.getDelimitedExprAccess().getAforForKeyword_3_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__AforAssignment_3_0"


    // $ANTLR start "rule__DelimitedExpr__GenAssignment_3_1"
    // InternalFortXTrans.g:12948:1: rule__DelimitedExpr__GenAssignment_3_1 : ( ruleGenerators ) ;
    public final void rule__DelimitedExpr__GenAssignment_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12952:1: ( ( ruleGenerators ) )
            // InternalFortXTrans.g:12953:2: ( ruleGenerators )
            {
            // InternalFortXTrans.g:12953:2: ( ruleGenerators )
            // InternalFortXTrans.g:12954:3: ruleGenerators
            {
             before(grammarAccess.getDelimitedExprAccess().getGenGeneratorsParserRuleCall_3_1_0()); 
            pushFollow(FOLLOW_2);
            ruleGenerators();

            state._fsp--;

             after(grammarAccess.getDelimitedExprAccess().getGenGeneratorsParserRuleCall_3_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__GenAssignment_3_1"


    // $ANTLR start "rule__DelimitedExpr__DofrontAssignment_3_2"
    // InternalFortXTrans.g:12963:1: rule__DelimitedExpr__DofrontAssignment_3_2 : ( ruleDoFront ) ;
    public final void rule__DelimitedExpr__DofrontAssignment_3_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12967:1: ( ( ruleDoFront ) )
            // InternalFortXTrans.g:12968:2: ( ruleDoFront )
            {
            // InternalFortXTrans.g:12968:2: ( ruleDoFront )
            // InternalFortXTrans.g:12969:3: ruleDoFront
            {
             before(grammarAccess.getDelimitedExprAccess().getDofrontDoFrontParserRuleCall_3_2_0()); 
            pushFollow(FOLLOW_2);
            ruleDoFront();

            state._fsp--;

             after(grammarAccess.getDelimitedExprAccess().getDofrontDoFrontParserRuleCall_3_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__DofrontAssignment_3_2"


    // $ANTLR start "rule__DelimitedExpr__AnifAssignment_4_0"
    // InternalFortXTrans.g:12978:1: rule__DelimitedExpr__AnifAssignment_4_0 : ( ( 'if' ) ) ;
    public final void rule__DelimitedExpr__AnifAssignment_4_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:12982:1: ( ( ( 'if' ) ) )
            // InternalFortXTrans.g:12983:2: ( ( 'if' ) )
            {
            // InternalFortXTrans.g:12983:2: ( ( 'if' ) )
            // InternalFortXTrans.g:12984:3: ( 'if' )
            {
             before(grammarAccess.getDelimitedExprAccess().getAnifIfKeyword_4_0_0()); 
            // InternalFortXTrans.g:12985:3: ( 'if' )
            // InternalFortXTrans.g:12986:4: 'if'
            {
             before(grammarAccess.getDelimitedExprAccess().getAnifIfKeyword_4_0_0()); 
            match(input,67,FOLLOW_2); 
             after(grammarAccess.getDelimitedExprAccess().getAnifIfKeyword_4_0_0()); 

            }

             after(grammarAccess.getDelimitedExprAccess().getAnifIfKeyword_4_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__AnifAssignment_4_0"


    // $ANTLR start "rule__DelimitedExpr__CondAssignment_4_1"
    // InternalFortXTrans.g:12997:1: rule__DelimitedExpr__CondAssignment_4_1 : ( ruleExpr ) ;
    public final void rule__DelimitedExpr__CondAssignment_4_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13001:1: ( ( ruleExpr ) )
            // InternalFortXTrans.g:13002:2: ( ruleExpr )
            {
            // InternalFortXTrans.g:13002:2: ( ruleExpr )
            // InternalFortXTrans.g:13003:3: ruleExpr
            {
             before(grammarAccess.getDelimitedExprAccess().getCondExprParserRuleCall_4_1_0()); 
            pushFollow(FOLLOW_2);
            ruleExpr();

            state._fsp--;

             after(grammarAccess.getDelimitedExprAccess().getCondExprParserRuleCall_4_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__CondAssignment_4_1"


    // $ANTLR start "rule__DelimitedExpr__BlocksAssignment_4_3"
    // InternalFortXTrans.g:13012:1: rule__DelimitedExpr__BlocksAssignment_4_3 : ( ruleBlockElems ) ;
    public final void rule__DelimitedExpr__BlocksAssignment_4_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13016:1: ( ( ruleBlockElems ) )
            // InternalFortXTrans.g:13017:2: ( ruleBlockElems )
            {
            // InternalFortXTrans.g:13017:2: ( ruleBlockElems )
            // InternalFortXTrans.g:13018:3: ruleBlockElems
            {
             before(grammarAccess.getDelimitedExprAccess().getBlocksBlockElemsParserRuleCall_4_3_0()); 
            pushFollow(FOLLOW_2);
            ruleBlockElems();

            state._fsp--;

             after(grammarAccess.getDelimitedExprAccess().getBlocksBlockElemsParserRuleCall_4_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__BlocksAssignment_4_3"


    // $ANTLR start "rule__DelimitedExpr__ElifsAssignment_4_4"
    // InternalFortXTrans.g:13027:1: rule__DelimitedExpr__ElifsAssignment_4_4 : ( ruleElifs ) ;
    public final void rule__DelimitedExpr__ElifsAssignment_4_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13031:1: ( ( ruleElifs ) )
            // InternalFortXTrans.g:13032:2: ( ruleElifs )
            {
            // InternalFortXTrans.g:13032:2: ( ruleElifs )
            // InternalFortXTrans.g:13033:3: ruleElifs
            {
             before(grammarAccess.getDelimitedExprAccess().getElifsElifsParserRuleCall_4_4_0()); 
            pushFollow(FOLLOW_2);
            ruleElifs();

            state._fsp--;

             after(grammarAccess.getDelimitedExprAccess().getElifsElifsParserRuleCall_4_4_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__ElifsAssignment_4_4"


    // $ANTLR start "rule__DelimitedExpr__ElsAssignment_4_5"
    // InternalFortXTrans.g:13042:1: rule__DelimitedExpr__ElsAssignment_4_5 : ( ruleElse ) ;
    public final void rule__DelimitedExpr__ElsAssignment_4_5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13046:1: ( ( ruleElse ) )
            // InternalFortXTrans.g:13047:2: ( ruleElse )
            {
            // InternalFortXTrans.g:13047:2: ( ruleElse )
            // InternalFortXTrans.g:13048:3: ruleElse
            {
             before(grammarAccess.getDelimitedExprAccess().getElsElseParserRuleCall_4_5_0()); 
            pushFollow(FOLLOW_2);
            ruleElse();

            state._fsp--;

             after(grammarAccess.getDelimitedExprAccess().getElsElseParserRuleCall_4_5_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DelimitedExpr__ElsAssignment_4_5"


    // $ANTLR start "rule__Elifs__EAssignment_0"
    // InternalFortXTrans.g:13057:1: rule__Elifs__EAssignment_0 : ( ruleElif ) ;
    public final void rule__Elifs__EAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13061:1: ( ( ruleElif ) )
            // InternalFortXTrans.g:13062:2: ( ruleElif )
            {
            // InternalFortXTrans.g:13062:2: ( ruleElif )
            // InternalFortXTrans.g:13063:3: ruleElif
            {
             before(grammarAccess.getElifsAccess().getEElifParserRuleCall_0_0()); 
            pushFollow(FOLLOW_2);
            ruleElif();

            state._fsp--;

             after(grammarAccess.getElifsAccess().getEElifParserRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Elifs__EAssignment_0"


    // $ANTLR start "rule__Elifs__EAssignment_1"
    // InternalFortXTrans.g:13072:1: rule__Elifs__EAssignment_1 : ( ruleElif ) ;
    public final void rule__Elifs__EAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13076:1: ( ( ruleElif ) )
            // InternalFortXTrans.g:13077:2: ( ruleElif )
            {
            // InternalFortXTrans.g:13077:2: ( ruleElif )
            // InternalFortXTrans.g:13078:3: ruleElif
            {
             before(grammarAccess.getElifsAccess().getEElifParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleElif();

            state._fsp--;

             after(grammarAccess.getElifsAccess().getEElifParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Elifs__EAssignment_1"


    // $ANTLR start "rule__Elif__ExprAssignment_1"
    // InternalFortXTrans.g:13087:1: rule__Elif__ExprAssignment_1 : ( ruleExpr ) ;
    public final void rule__Elif__ExprAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13091:1: ( ( ruleExpr ) )
            // InternalFortXTrans.g:13092:2: ( ruleExpr )
            {
            // InternalFortXTrans.g:13092:2: ( ruleExpr )
            // InternalFortXTrans.g:13093:3: ruleExpr
            {
             before(grammarAccess.getElifAccess().getExprExprParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleExpr();

            state._fsp--;

             after(grammarAccess.getElifAccess().getExprExprParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Elif__ExprAssignment_1"


    // $ANTLR start "rule__Elif__BlockAssignment_3"
    // InternalFortXTrans.g:13102:1: rule__Elif__BlockAssignment_3 : ( ruleBlockElems ) ;
    public final void rule__Elif__BlockAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13106:1: ( ( ruleBlockElems ) )
            // InternalFortXTrans.g:13107:2: ( ruleBlockElems )
            {
            // InternalFortXTrans.g:13107:2: ( ruleBlockElems )
            // InternalFortXTrans.g:13108:3: ruleBlockElems
            {
             before(grammarAccess.getElifAccess().getBlockBlockElemsParserRuleCall_3_0()); 
            pushFollow(FOLLOW_2);
            ruleBlockElems();

            state._fsp--;

             after(grammarAccess.getElifAccess().getBlockBlockElemsParserRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Elif__BlockAssignment_3"


    // $ANTLR start "rule__Else__BlockAssignment_1"
    // InternalFortXTrans.g:13117:1: rule__Else__BlockAssignment_1 : ( ruleBlockElems ) ;
    public final void rule__Else__BlockAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13121:1: ( ( ruleBlockElems ) )
            // InternalFortXTrans.g:13122:2: ( ruleBlockElems )
            {
            // InternalFortXTrans.g:13122:2: ( ruleBlockElems )
            // InternalFortXTrans.g:13123:3: ruleBlockElems
            {
             before(grammarAccess.getElseAccess().getBlockBlockElemsParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleBlockElems();

            state._fsp--;

             after(grammarAccess.getElseAccess().getBlockBlockElemsParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Else__BlockAssignment_1"


    // $ANTLR start "rule__Generators__BindingAssignment_0"
    // InternalFortXTrans.g:13132:1: rule__Generators__BindingAssignment_0 : ( ruleBinding ) ;
    public final void rule__Generators__BindingAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13136:1: ( ( ruleBinding ) )
            // InternalFortXTrans.g:13137:2: ( ruleBinding )
            {
            // InternalFortXTrans.g:13137:2: ( ruleBinding )
            // InternalFortXTrans.g:13138:3: ruleBinding
            {
             before(grammarAccess.getGeneratorsAccess().getBindingBindingParserRuleCall_0_0()); 
            pushFollow(FOLLOW_2);
            ruleBinding();

            state._fsp--;

             after(grammarAccess.getGeneratorsAccess().getBindingBindingParserRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Generators__BindingAssignment_0"


    // $ANTLR start "rule__Generators__ClauseAssignment_1_1"
    // InternalFortXTrans.g:13147:1: rule__Generators__ClauseAssignment_1_1 : ( ruleGenClause ) ;
    public final void rule__Generators__ClauseAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13151:1: ( ( ruleGenClause ) )
            // InternalFortXTrans.g:13152:2: ( ruleGenClause )
            {
            // InternalFortXTrans.g:13152:2: ( ruleGenClause )
            // InternalFortXTrans.g:13153:3: ruleGenClause
            {
             before(grammarAccess.getGeneratorsAccess().getClauseGenClauseParserRuleCall_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleGenClause();

            state._fsp--;

             after(grammarAccess.getGeneratorsAccess().getClauseGenClauseParserRuleCall_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Generators__ClauseAssignment_1_1"


    // $ANTLR start "rule__Binding__IdtupAssignment_0_0"
    // InternalFortXTrans.g:13162:1: rule__Binding__IdtupAssignment_0_0 : ( ruleQualified ) ;
    public final void rule__Binding__IdtupAssignment_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13166:1: ( ( ruleQualified ) )
            // InternalFortXTrans.g:13167:2: ( ruleQualified )
            {
            // InternalFortXTrans.g:13167:2: ( ruleQualified )
            // InternalFortXTrans.g:13168:3: ruleQualified
            {
             before(grammarAccess.getBindingAccess().getIdtupQualifiedParserRuleCall_0_0_0()); 
            pushFollow(FOLLOW_2);
            ruleQualified();

            state._fsp--;

             after(grammarAccess.getBindingAccess().getIdtupQualifiedParserRuleCall_0_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Binding__IdtupAssignment_0_0"


    // $ANTLR start "rule__Binding__GAssignment_0_2"
    // InternalFortXTrans.g:13177:1: rule__Binding__GAssignment_0_2 : ( ruleGenSource ) ;
    public final void rule__Binding__GAssignment_0_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13181:1: ( ( ruleGenSource ) )
            // InternalFortXTrans.g:13182:2: ( ruleGenSource )
            {
            // InternalFortXTrans.g:13182:2: ( ruleGenSource )
            // InternalFortXTrans.g:13183:3: ruleGenSource
            {
             before(grammarAccess.getBindingAccess().getGGenSourceParserRuleCall_0_2_0()); 
            pushFollow(FOLLOW_2);
            ruleGenSource();

            state._fsp--;

             after(grammarAccess.getBindingAccess().getGGenSourceParserRuleCall_0_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Binding__GAssignment_0_2"


    // $ANTLR start "rule__Binding__IdtupAssignment_1_0"
    // InternalFortXTrans.g:13192:1: rule__Binding__IdtupAssignment_1_0 : ( ruleQualified ) ;
    public final void rule__Binding__IdtupAssignment_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13196:1: ( ( ruleQualified ) )
            // InternalFortXTrans.g:13197:2: ( ruleQualified )
            {
            // InternalFortXTrans.g:13197:2: ( ruleQualified )
            // InternalFortXTrans.g:13198:3: ruleQualified
            {
             before(grammarAccess.getBindingAccess().getIdtupQualifiedParserRuleCall_1_0_0()); 
            pushFollow(FOLLOW_2);
            ruleQualified();

            state._fsp--;

             after(grammarAccess.getBindingAccess().getIdtupQualifiedParserRuleCall_1_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Binding__IdtupAssignment_1_0"


    // $ANTLR start "rule__Binding__SeqAssignment_1_2"
    // InternalFortXTrans.g:13207:1: rule__Binding__SeqAssignment_1_2 : ( ( 'seq' ) ) ;
    public final void rule__Binding__SeqAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13211:1: ( ( ( 'seq' ) ) )
            // InternalFortXTrans.g:13212:2: ( ( 'seq' ) )
            {
            // InternalFortXTrans.g:13212:2: ( ( 'seq' ) )
            // InternalFortXTrans.g:13213:3: ( 'seq' )
            {
             before(grammarAccess.getBindingAccess().getSeqSeqKeyword_1_2_0()); 
            // InternalFortXTrans.g:13214:3: ( 'seq' )
            // InternalFortXTrans.g:13215:4: 'seq'
            {
             before(grammarAccess.getBindingAccess().getSeqSeqKeyword_1_2_0()); 
            match(input,68,FOLLOW_2); 
             after(grammarAccess.getBindingAccess().getSeqSeqKeyword_1_2_0()); 

            }

             after(grammarAccess.getBindingAccess().getSeqSeqKeyword_1_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Binding__SeqAssignment_1_2"


    // $ANTLR start "rule__Binding__GAssignment_1_4"
    // InternalFortXTrans.g:13226:1: rule__Binding__GAssignment_1_4 : ( ruleGenSource ) ;
    public final void rule__Binding__GAssignment_1_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13230:1: ( ( ruleGenSource ) )
            // InternalFortXTrans.g:13231:2: ( ruleGenSource )
            {
            // InternalFortXTrans.g:13231:2: ( ruleGenSource )
            // InternalFortXTrans.g:13232:3: ruleGenSource
            {
             before(grammarAccess.getBindingAccess().getGGenSourceParserRuleCall_1_4_0()); 
            pushFollow(FOLLOW_2);
            ruleGenSource();

            state._fsp--;

             after(grammarAccess.getBindingAccess().getGGenSourceParserRuleCall_1_4_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Binding__GAssignment_1_4"


    // $ANTLR start "rule__GenSource__EndAssignment_1_2"
    // InternalFortXTrans.g:13241:1: rule__GenSource__EndAssignment_1_2 : ( ruleExpr ) ;
    public final void rule__GenSource__EndAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13245:1: ( ( ruleExpr ) )
            // InternalFortXTrans.g:13246:2: ( ruleExpr )
            {
            // InternalFortXTrans.g:13246:2: ( ruleExpr )
            // InternalFortXTrans.g:13247:3: ruleExpr
            {
             before(grammarAccess.getGenSourceAccess().getEndExprParserRuleCall_1_2_0()); 
            pushFollow(FOLLOW_2);
            ruleExpr();

            state._fsp--;

             after(grammarAccess.getGenSourceAccess().getEndExprParserRuleCall_1_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GenSource__EndAssignment_1_2"


    // $ANTLR start "rule__GenClause__BindingAssignment_0"
    // InternalFortXTrans.g:13256:1: rule__GenClause__BindingAssignment_0 : ( ruleBinding ) ;
    public final void rule__GenClause__BindingAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13260:1: ( ( ruleBinding ) )
            // InternalFortXTrans.g:13261:2: ( ruleBinding )
            {
            // InternalFortXTrans.g:13261:2: ( ruleBinding )
            // InternalFortXTrans.g:13262:3: ruleBinding
            {
             before(grammarAccess.getGenClauseAccess().getBindingBindingParserRuleCall_0_0()); 
            pushFollow(FOLLOW_2);
            ruleBinding();

            state._fsp--;

             after(grammarAccess.getGenClauseAccess().getBindingBindingParserRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GenClause__BindingAssignment_0"


    // $ANTLR start "rule__GenClause__ExprAssignment_1"
    // InternalFortXTrans.g:13271:1: rule__GenClause__ExprAssignment_1 : ( ruleExpr ) ;
    public final void rule__GenClause__ExprAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13275:1: ( ( ruleExpr ) )
            // InternalFortXTrans.g:13276:2: ( ruleExpr )
            {
            // InternalFortXTrans.g:13276:2: ( ruleExpr )
            // InternalFortXTrans.g:13277:3: ruleExpr
            {
             before(grammarAccess.getGenClauseAccess().getExprExprParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleExpr();

            state._fsp--;

             after(grammarAccess.getGenClauseAccess().getExprExprParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GenClause__ExprAssignment_1"


    // $ANTLR start "rule__BlockElems__BlockAssignment_0"
    // InternalFortXTrans.g:13286:1: rule__BlockElems__BlockAssignment_0 : ( ruleBlockElem ) ;
    public final void rule__BlockElems__BlockAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13290:1: ( ( ruleBlockElem ) )
            // InternalFortXTrans.g:13291:2: ( ruleBlockElem )
            {
            // InternalFortXTrans.g:13291:2: ( ruleBlockElem )
            // InternalFortXTrans.g:13292:3: ruleBlockElem
            {
             before(grammarAccess.getBlockElemsAccess().getBlockBlockElemParserRuleCall_0_0()); 
            pushFollow(FOLLOW_2);
            ruleBlockElem();

            state._fsp--;

             after(grammarAccess.getBlockElemsAccess().getBlockBlockElemParserRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BlockElems__BlockAssignment_0"


    // $ANTLR start "rule__BlockElems__BlockAssignment_1"
    // InternalFortXTrans.g:13301:1: rule__BlockElems__BlockAssignment_1 : ( ruleBlockElem ) ;
    public final void rule__BlockElems__BlockAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13305:1: ( ( ruleBlockElem ) )
            // InternalFortXTrans.g:13306:2: ( ruleBlockElem )
            {
            // InternalFortXTrans.g:13306:2: ( ruleBlockElem )
            // InternalFortXTrans.g:13307:3: ruleBlockElem
            {
             before(grammarAccess.getBlockElemsAccess().getBlockBlockElemParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleBlockElem();

            state._fsp--;

             after(grammarAccess.getBlockElemsAccess().getBlockBlockElemParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BlockElems__BlockAssignment_1"


    // $ANTLR start "rule__BlockElem__StAssignment"
    // InternalFortXTrans.g:13316:1: rule__BlockElem__StAssignment : ( ruleStmnts ) ;
    public final void rule__BlockElem__StAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13320:1: ( ( ruleStmnts ) )
            // InternalFortXTrans.g:13321:2: ( ruleStmnts )
            {
            // InternalFortXTrans.g:13321:2: ( ruleStmnts )
            // InternalFortXTrans.g:13322:3: ruleStmnts
            {
             before(grammarAccess.getBlockElemAccess().getStStmntsParserRuleCall_0()); 
            pushFollow(FOLLOW_2);
            ruleStmnts();

            state._fsp--;

             after(grammarAccess.getBlockElemAccess().getStStmntsParserRuleCall_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BlockElem__StAssignment"


    // $ANTLR start "rule__Do__DofsAssignment_0"
    // InternalFortXTrans.g:13331:1: rule__Do__DofsAssignment_0 : ( ruleDoFront ) ;
    public final void rule__Do__DofsAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13335:1: ( ( ruleDoFront ) )
            // InternalFortXTrans.g:13336:2: ( ruleDoFront )
            {
            // InternalFortXTrans.g:13336:2: ( ruleDoFront )
            // InternalFortXTrans.g:13337:3: ruleDoFront
            {
             before(grammarAccess.getDoAccess().getDofsDoFrontParserRuleCall_0_0()); 
            pushFollow(FOLLOW_2);
            ruleDoFront();

            state._fsp--;

             after(grammarAccess.getDoAccess().getDofsDoFrontParserRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Do__DofsAssignment_0"


    // $ANTLR start "rule__Do__DofsAssignment_1_1"
    // InternalFortXTrans.g:13346:1: rule__Do__DofsAssignment_1_1 : ( ruleDoFront ) ;
    public final void rule__Do__DofsAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13350:1: ( ( ruleDoFront ) )
            // InternalFortXTrans.g:13351:2: ( ruleDoFront )
            {
            // InternalFortXTrans.g:13351:2: ( ruleDoFront )
            // InternalFortXTrans.g:13352:3: ruleDoFront
            {
             before(grammarAccess.getDoAccess().getDofsDoFrontParserRuleCall_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleDoFront();

            state._fsp--;

             after(grammarAccess.getDoAccess().getDofsDoFrontParserRuleCall_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Do__DofsAssignment_1_1"


    // $ANTLR start "rule__DoFront__AtAssignment_0_0"
    // InternalFortXTrans.g:13361:1: rule__DoFront__AtAssignment_0_0 : ( ( 'at' ) ) ;
    public final void rule__DoFront__AtAssignment_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13365:1: ( ( ( 'at' ) ) )
            // InternalFortXTrans.g:13366:2: ( ( 'at' ) )
            {
            // InternalFortXTrans.g:13366:2: ( ( 'at' ) )
            // InternalFortXTrans.g:13367:3: ( 'at' )
            {
             before(grammarAccess.getDoFrontAccess().getAtAtKeyword_0_0_0()); 
            // InternalFortXTrans.g:13368:3: ( 'at' )
            // InternalFortXTrans.g:13369:4: 'at'
            {
             before(grammarAccess.getDoFrontAccess().getAtAtKeyword_0_0_0()); 
            match(input,69,FOLLOW_2); 
             after(grammarAccess.getDoFrontAccess().getAtAtKeyword_0_0_0()); 

            }

             after(grammarAccess.getDoFrontAccess().getAtAtKeyword_0_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DoFront__AtAssignment_0_0"


    // $ANTLR start "rule__DoFront__ExpAssignment_0_1"
    // InternalFortXTrans.g:13380:1: rule__DoFront__ExpAssignment_0_1 : ( ruleExpr ) ;
    public final void rule__DoFront__ExpAssignment_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13384:1: ( ( ruleExpr ) )
            // InternalFortXTrans.g:13385:2: ( ruleExpr )
            {
            // InternalFortXTrans.g:13385:2: ( ruleExpr )
            // InternalFortXTrans.g:13386:3: ruleExpr
            {
             before(grammarAccess.getDoFrontAccess().getExpExprParserRuleCall_0_1_0()); 
            pushFollow(FOLLOW_2);
            ruleExpr();

            state._fsp--;

             after(grammarAccess.getDoFrontAccess().getExpExprParserRuleCall_0_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DoFront__ExpAssignment_0_1"


    // $ANTLR start "rule__DoFront__AtomAssignment_1"
    // InternalFortXTrans.g:13395:1: rule__DoFront__AtomAssignment_1 : ( ( 'atomic' ) ) ;
    public final void rule__DoFront__AtomAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13399:1: ( ( ( 'atomic' ) ) )
            // InternalFortXTrans.g:13400:2: ( ( 'atomic' ) )
            {
            // InternalFortXTrans.g:13400:2: ( ( 'atomic' ) )
            // InternalFortXTrans.g:13401:3: ( 'atomic' )
            {
             before(grammarAccess.getDoFrontAccess().getAtomAtomicKeyword_1_0()); 
            // InternalFortXTrans.g:13402:3: ( 'atomic' )
            // InternalFortXTrans.g:13403:4: 'atomic'
            {
             before(grammarAccess.getDoFrontAccess().getAtomAtomicKeyword_1_0()); 
            match(input,60,FOLLOW_2); 
             after(grammarAccess.getDoFrontAccess().getAtomAtomicKeyword_1_0()); 

            }

             after(grammarAccess.getDoFrontAccess().getAtomAtomicKeyword_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DoFront__AtomAssignment_1"


    // $ANTLR start "rule__DoFront__BlockAssignment_3"
    // InternalFortXTrans.g:13414:1: rule__DoFront__BlockAssignment_3 : ( ruleBlockElems ) ;
    public final void rule__DoFront__BlockAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13418:1: ( ( ruleBlockElems ) )
            // InternalFortXTrans.g:13419:2: ( ruleBlockElems )
            {
            // InternalFortXTrans.g:13419:2: ( ruleBlockElems )
            // InternalFortXTrans.g:13420:3: ruleBlockElems
            {
             before(grammarAccess.getDoFrontAccess().getBlockBlockElemsParserRuleCall_3_0()); 
            pushFollow(FOLLOW_2);
            ruleBlockElems();

            state._fsp--;

             after(grammarAccess.getDoFrontAccess().getBlockBlockElemsParserRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DoFront__BlockAssignment_3"


    // $ANTLR start "rule__IsType__TypeAssignment_1"
    // InternalFortXTrans.g:13429:1: rule__IsType__TypeAssignment_1 : ( ruleSimpleName ) ;
    public final void rule__IsType__TypeAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13433:1: ( ( ruleSimpleName ) )
            // InternalFortXTrans.g:13434:2: ( ruleSimpleName )
            {
            // InternalFortXTrans.g:13434:2: ( ruleSimpleName )
            // InternalFortXTrans.g:13435:3: ruleSimpleName
            {
             before(grammarAccess.getIsTypeAccess().getTypeSimpleNameParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleSimpleName();

            state._fsp--;

             after(grammarAccess.getIsTypeAccess().getTypeSimpleNameParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IsType__TypeAssignment_1"


    // $ANTLR start "rule__FieldDecl__PriAssignment_0_0"
    // InternalFortXTrans.g:13444:1: rule__FieldDecl__PriAssignment_0_0 : ( ( 'private' ) ) ;
    public final void rule__FieldDecl__PriAssignment_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13448:1: ( ( ( 'private' ) ) )
            // InternalFortXTrans.g:13449:2: ( ( 'private' ) )
            {
            // InternalFortXTrans.g:13449:2: ( ( 'private' ) )
            // InternalFortXTrans.g:13450:3: ( 'private' )
            {
             before(grammarAccess.getFieldDeclAccess().getPriPrivateKeyword_0_0_0()); 
            // InternalFortXTrans.g:13451:3: ( 'private' )
            // InternalFortXTrans.g:13452:4: 'private'
            {
             before(grammarAccess.getFieldDeclAccess().getPriPrivateKeyword_0_0_0()); 
            match(input,58,FOLLOW_2); 
             after(grammarAccess.getFieldDeclAccess().getPriPrivateKeyword_0_0_0()); 

            }

             after(grammarAccess.getFieldDeclAccess().getPriPrivateKeyword_0_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__PriAssignment_0_0"


    // $ANTLR start "rule__FieldDecl__MutAssignment_0_1"
    // InternalFortXTrans.g:13463:1: rule__FieldDecl__MutAssignment_0_1 : ( ( 'var' ) ) ;
    public final void rule__FieldDecl__MutAssignment_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13467:1: ( ( ( 'var' ) ) )
            // InternalFortXTrans.g:13468:2: ( ( 'var' ) )
            {
            // InternalFortXTrans.g:13468:2: ( ( 'var' ) )
            // InternalFortXTrans.g:13469:3: ( 'var' )
            {
             before(grammarAccess.getFieldDeclAccess().getMutVarKeyword_0_1_0()); 
            // InternalFortXTrans.g:13470:3: ( 'var' )
            // InternalFortXTrans.g:13471:4: 'var'
            {
             before(grammarAccess.getFieldDeclAccess().getMutVarKeyword_0_1_0()); 
            match(input,70,FOLLOW_2); 
             after(grammarAccess.getFieldDeclAccess().getMutVarKeyword_0_1_0()); 

            }

             after(grammarAccess.getFieldDeclAccess().getMutVarKeyword_0_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__MutAssignment_0_1"


    // $ANTLR start "rule__FieldDecl__VarsAssignment_0_2"
    // InternalFortXTrans.g:13482:1: rule__FieldDecl__VarsAssignment_0_2 : ( ruleNoNewlineVarWTypes ) ;
    public final void rule__FieldDecl__VarsAssignment_0_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13486:1: ( ( ruleNoNewlineVarWTypes ) )
            // InternalFortXTrans.g:13487:2: ( ruleNoNewlineVarWTypes )
            {
            // InternalFortXTrans.g:13487:2: ( ruleNoNewlineVarWTypes )
            // InternalFortXTrans.g:13488:3: ruleNoNewlineVarWTypes
            {
             before(grammarAccess.getFieldDeclAccess().getVarsNoNewlineVarWTypesParserRuleCall_0_2_0()); 
            pushFollow(FOLLOW_2);
            ruleNoNewlineVarWTypes();

            state._fsp--;

             after(grammarAccess.getFieldDeclAccess().getVarsNoNewlineVarWTypesParserRuleCall_0_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__VarsAssignment_0_2"


    // $ANTLR start "rule__FieldDecl__InitAssignment_0_3_1"
    // InternalFortXTrans.g:13497:1: rule__FieldDecl__InitAssignment_0_3_1 : ( ruleExpr ) ;
    public final void rule__FieldDecl__InitAssignment_0_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13501:1: ( ( ruleExpr ) )
            // InternalFortXTrans.g:13502:2: ( ruleExpr )
            {
            // InternalFortXTrans.g:13502:2: ( ruleExpr )
            // InternalFortXTrans.g:13503:3: ruleExpr
            {
             before(grammarAccess.getFieldDeclAccess().getInitExprParserRuleCall_0_3_1_0()); 
            pushFollow(FOLLOW_2);
            ruleExpr();

            state._fsp--;

             after(grammarAccess.getFieldDeclAccess().getInitExprParserRuleCall_0_3_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__InitAssignment_0_3_1"


    // $ANTLR start "rule__FieldDecl__PriAssignment_1_0"
    // InternalFortXTrans.g:13512:1: rule__FieldDecl__PriAssignment_1_0 : ( ( 'private' ) ) ;
    public final void rule__FieldDecl__PriAssignment_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13516:1: ( ( ( 'private' ) ) )
            // InternalFortXTrans.g:13517:2: ( ( 'private' ) )
            {
            // InternalFortXTrans.g:13517:2: ( ( 'private' ) )
            // InternalFortXTrans.g:13518:3: ( 'private' )
            {
             before(grammarAccess.getFieldDeclAccess().getPriPrivateKeyword_1_0_0()); 
            // InternalFortXTrans.g:13519:3: ( 'private' )
            // InternalFortXTrans.g:13520:4: 'private'
            {
             before(grammarAccess.getFieldDeclAccess().getPriPrivateKeyword_1_0_0()); 
            match(input,58,FOLLOW_2); 
             after(grammarAccess.getFieldDeclAccess().getPriPrivateKeyword_1_0_0()); 

            }

             after(grammarAccess.getFieldDeclAccess().getPriPrivateKeyword_1_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__PriAssignment_1_0"


    // $ANTLR start "rule__FieldDecl__IdtupAssignment_1_1"
    // InternalFortXTrans.g:13531:1: rule__FieldDecl__IdtupAssignment_1_1 : ( ruleQualified ) ;
    public final void rule__FieldDecl__IdtupAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13535:1: ( ( ruleQualified ) )
            // InternalFortXTrans.g:13536:2: ( ruleQualified )
            {
            // InternalFortXTrans.g:13536:2: ( ruleQualified )
            // InternalFortXTrans.g:13537:3: ruleQualified
            {
             before(grammarAccess.getFieldDeclAccess().getIdtupQualifiedParserRuleCall_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleQualified();

            state._fsp--;

             after(grammarAccess.getFieldDeclAccess().getIdtupQualifiedParserRuleCall_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__IdtupAssignment_1_1"


    // $ANTLR start "rule__FieldDecl__InitAssignment_1_3"
    // InternalFortXTrans.g:13546:1: rule__FieldDecl__InitAssignment_1_3 : ( ruleExpr ) ;
    public final void rule__FieldDecl__InitAssignment_1_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13550:1: ( ( ruleExpr ) )
            // InternalFortXTrans.g:13551:2: ( ruleExpr )
            {
            // InternalFortXTrans.g:13551:2: ( ruleExpr )
            // InternalFortXTrans.g:13552:3: ruleExpr
            {
             before(grammarAccess.getFieldDeclAccess().getInitExprParserRuleCall_1_3_0()); 
            pushFollow(FOLLOW_2);
            ruleExpr();

            state._fsp--;

             after(grammarAccess.getFieldDeclAccess().getInitExprParserRuleCall_1_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__InitAssignment_1_3"


    // $ANTLR start "rule__FieldDecl__PriAssignment_2_0"
    // InternalFortXTrans.g:13561:1: rule__FieldDecl__PriAssignment_2_0 : ( ( 'private' ) ) ;
    public final void rule__FieldDecl__PriAssignment_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13565:1: ( ( ( 'private' ) ) )
            // InternalFortXTrans.g:13566:2: ( ( 'private' ) )
            {
            // InternalFortXTrans.g:13566:2: ( ( 'private' ) )
            // InternalFortXTrans.g:13567:3: ( 'private' )
            {
             before(grammarAccess.getFieldDeclAccess().getPriPrivateKeyword_2_0_0()); 
            // InternalFortXTrans.g:13568:3: ( 'private' )
            // InternalFortXTrans.g:13569:4: 'private'
            {
             before(grammarAccess.getFieldDeclAccess().getPriPrivateKeyword_2_0_0()); 
            match(input,58,FOLLOW_2); 
             after(grammarAccess.getFieldDeclAccess().getPriPrivateKeyword_2_0_0()); 

            }

             after(grammarAccess.getFieldDeclAccess().getPriPrivateKeyword_2_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__PriAssignment_2_0"


    // $ANTLR start "rule__FieldDecl__MutAssignment_2_1"
    // InternalFortXTrans.g:13580:1: rule__FieldDecl__MutAssignment_2_1 : ( ( 'var' ) ) ;
    public final void rule__FieldDecl__MutAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13584:1: ( ( ( 'var' ) ) )
            // InternalFortXTrans.g:13585:2: ( ( 'var' ) )
            {
            // InternalFortXTrans.g:13585:2: ( ( 'var' ) )
            // InternalFortXTrans.g:13586:3: ( 'var' )
            {
             before(grammarAccess.getFieldDeclAccess().getMutVarKeyword_2_1_0()); 
            // InternalFortXTrans.g:13587:3: ( 'var' )
            // InternalFortXTrans.g:13588:4: 'var'
            {
             before(grammarAccess.getFieldDeclAccess().getMutVarKeyword_2_1_0()); 
            match(input,70,FOLLOW_2); 
             after(grammarAccess.getFieldDeclAccess().getMutVarKeyword_2_1_0()); 

            }

             after(grammarAccess.getFieldDeclAccess().getMutVarKeyword_2_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__MutAssignment_2_1"


    // $ANTLR start "rule__FieldDecl__IdtupAssignment_2_2"
    // InternalFortXTrans.g:13599:1: rule__FieldDecl__IdtupAssignment_2_2 : ( ruleQualified ) ;
    public final void rule__FieldDecl__IdtupAssignment_2_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13603:1: ( ( ruleQualified ) )
            // InternalFortXTrans.g:13604:2: ( ruleQualified )
            {
            // InternalFortXTrans.g:13604:2: ( ruleQualified )
            // InternalFortXTrans.g:13605:3: ruleQualified
            {
             before(grammarAccess.getFieldDeclAccess().getIdtupQualifiedParserRuleCall_2_2_0()); 
            pushFollow(FOLLOW_2);
            ruleQualified();

            state._fsp--;

             after(grammarAccess.getFieldDeclAccess().getIdtupQualifiedParserRuleCall_2_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__IdtupAssignment_2_2"


    // $ANTLR start "rule__FieldDecl__TypeAssignment_2_4"
    // InternalFortXTrans.g:13614:1: rule__FieldDecl__TypeAssignment_2_4 : ( ruleSimpleName ) ;
    public final void rule__FieldDecl__TypeAssignment_2_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13618:1: ( ( ruleSimpleName ) )
            // InternalFortXTrans.g:13619:2: ( ruleSimpleName )
            {
            // InternalFortXTrans.g:13619:2: ( ruleSimpleName )
            // InternalFortXTrans.g:13620:3: ruleSimpleName
            {
             before(grammarAccess.getFieldDeclAccess().getTypeSimpleNameParserRuleCall_2_4_0()); 
            pushFollow(FOLLOW_2);
            ruleSimpleName();

            state._fsp--;

             after(grammarAccess.getFieldDeclAccess().getTypeSimpleNameParserRuleCall_2_4_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__TypeAssignment_2_4"


    // $ANTLR start "rule__FieldDecl__InitAssignment_2_6_1"
    // InternalFortXTrans.g:13629:1: rule__FieldDecl__InitAssignment_2_6_1 : ( ruleExpr ) ;
    public final void rule__FieldDecl__InitAssignment_2_6_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13633:1: ( ( ruleExpr ) )
            // InternalFortXTrans.g:13634:2: ( ruleExpr )
            {
            // InternalFortXTrans.g:13634:2: ( ruleExpr )
            // InternalFortXTrans.g:13635:3: ruleExpr
            {
             before(grammarAccess.getFieldDeclAccess().getInitExprParserRuleCall_2_6_1_0()); 
            pushFollow(FOLLOW_2);
            ruleExpr();

            state._fsp--;

             after(grammarAccess.getFieldDeclAccess().getInitExprParserRuleCall_2_6_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__InitAssignment_2_6_1"


    // $ANTLR start "rule__FieldDecl__PriAssignment_3_0"
    // InternalFortXTrans.g:13644:1: rule__FieldDecl__PriAssignment_3_0 : ( ( 'private' ) ) ;
    public final void rule__FieldDecl__PriAssignment_3_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13648:1: ( ( ( 'private' ) ) )
            // InternalFortXTrans.g:13649:2: ( ( 'private' ) )
            {
            // InternalFortXTrans.g:13649:2: ( ( 'private' ) )
            // InternalFortXTrans.g:13650:3: ( 'private' )
            {
             before(grammarAccess.getFieldDeclAccess().getPriPrivateKeyword_3_0_0()); 
            // InternalFortXTrans.g:13651:3: ( 'private' )
            // InternalFortXTrans.g:13652:4: 'private'
            {
             before(grammarAccess.getFieldDeclAccess().getPriPrivateKeyword_3_0_0()); 
            match(input,58,FOLLOW_2); 
             after(grammarAccess.getFieldDeclAccess().getPriPrivateKeyword_3_0_0()); 

            }

             after(grammarAccess.getFieldDeclAccess().getPriPrivateKeyword_3_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__PriAssignment_3_0"


    // $ANTLR start "rule__FieldDecl__MutAssignment_3_1"
    // InternalFortXTrans.g:13663:1: rule__FieldDecl__MutAssignment_3_1 : ( ( 'var' ) ) ;
    public final void rule__FieldDecl__MutAssignment_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13667:1: ( ( ( 'var' ) ) )
            // InternalFortXTrans.g:13668:2: ( ( 'var' ) )
            {
            // InternalFortXTrans.g:13668:2: ( ( 'var' ) )
            // InternalFortXTrans.g:13669:3: ( 'var' )
            {
             before(grammarAccess.getFieldDeclAccess().getMutVarKeyword_3_1_0()); 
            // InternalFortXTrans.g:13670:3: ( 'var' )
            // InternalFortXTrans.g:13671:4: 'var'
            {
             before(grammarAccess.getFieldDeclAccess().getMutVarKeyword_3_1_0()); 
            match(input,70,FOLLOW_2); 
             after(grammarAccess.getFieldDeclAccess().getMutVarKeyword_3_1_0()); 

            }

             after(grammarAccess.getFieldDeclAccess().getMutVarKeyword_3_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__MutAssignment_3_1"


    // $ANTLR start "rule__FieldDecl__IdtupAssignment_3_2"
    // InternalFortXTrans.g:13682:1: rule__FieldDecl__IdtupAssignment_3_2 : ( ruleQualified ) ;
    public final void rule__FieldDecl__IdtupAssignment_3_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13686:1: ( ( ruleQualified ) )
            // InternalFortXTrans.g:13687:2: ( ruleQualified )
            {
            // InternalFortXTrans.g:13687:2: ( ruleQualified )
            // InternalFortXTrans.g:13688:3: ruleQualified
            {
             before(grammarAccess.getFieldDeclAccess().getIdtupQualifiedParserRuleCall_3_2_0()); 
            pushFollow(FOLLOW_2);
            ruleQualified();

            state._fsp--;

             after(grammarAccess.getFieldDeclAccess().getIdtupQualifiedParserRuleCall_3_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__IdtupAssignment_3_2"


    // $ANTLR start "rule__FieldDecl__TuptypeAssignment_3_4"
    // InternalFortXTrans.g:13697:1: rule__FieldDecl__TuptypeAssignment_3_4 : ( ruleTupleType ) ;
    public final void rule__FieldDecl__TuptypeAssignment_3_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13701:1: ( ( ruleTupleType ) )
            // InternalFortXTrans.g:13702:2: ( ruleTupleType )
            {
            // InternalFortXTrans.g:13702:2: ( ruleTupleType )
            // InternalFortXTrans.g:13703:3: ruleTupleType
            {
             before(grammarAccess.getFieldDeclAccess().getTuptypeTupleTypeParserRuleCall_3_4_0()); 
            pushFollow(FOLLOW_2);
            ruleTupleType();

            state._fsp--;

             after(grammarAccess.getFieldDeclAccess().getTuptypeTupleTypeParserRuleCall_3_4_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__TuptypeAssignment_3_4"


    // $ANTLR start "rule__FieldDecl__InitAssignment_3_5_1"
    // InternalFortXTrans.g:13712:1: rule__FieldDecl__InitAssignment_3_5_1 : ( ruleExpr ) ;
    public final void rule__FieldDecl__InitAssignment_3_5_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13716:1: ( ( ruleExpr ) )
            // InternalFortXTrans.g:13717:2: ( ruleExpr )
            {
            // InternalFortXTrans.g:13717:2: ( ruleExpr )
            // InternalFortXTrans.g:13718:3: ruleExpr
            {
             before(grammarAccess.getFieldDeclAccess().getInitExprParserRuleCall_3_5_1_0()); 
            pushFollow(FOLLOW_2);
            ruleExpr();

            state._fsp--;

             after(grammarAccess.getFieldDeclAccess().getInitExprParserRuleCall_3_5_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__InitAssignment_3_5_1"


    // $ANTLR start "rule__NoNewlineVarWTypes__SingleAssignment_0_0"
    // InternalFortXTrans.g:13727:1: rule__NoNewlineVarWTypes__SingleAssignment_0_0 : ( ruleNoNewlineVarWType ) ;
    public final void rule__NoNewlineVarWTypes__SingleAssignment_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13731:1: ( ( ruleNoNewlineVarWType ) )
            // InternalFortXTrans.g:13732:2: ( ruleNoNewlineVarWType )
            {
            // InternalFortXTrans.g:13732:2: ( ruleNoNewlineVarWType )
            // InternalFortXTrans.g:13733:3: ruleNoNewlineVarWType
            {
             before(grammarAccess.getNoNewlineVarWTypesAccess().getSingleNoNewlineVarWTypeParserRuleCall_0_0_0()); 
            pushFollow(FOLLOW_2);
            ruleNoNewlineVarWType();

            state._fsp--;

             after(grammarAccess.getNoNewlineVarWTypesAccess().getSingleNoNewlineVarWTypeParserRuleCall_0_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NoNewlineVarWTypes__SingleAssignment_0_0"


    // $ANTLR start "rule__NoNewlineVarWTypes__ArrsizeAssignment_0_1_1"
    // InternalFortXTrans.g:13742:1: rule__NoNewlineVarWTypes__ArrsizeAssignment_0_1_1 : ( ruleExprList ) ;
    public final void rule__NoNewlineVarWTypes__ArrsizeAssignment_0_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13746:1: ( ( ruleExprList ) )
            // InternalFortXTrans.g:13747:2: ( ruleExprList )
            {
            // InternalFortXTrans.g:13747:2: ( ruleExprList )
            // InternalFortXTrans.g:13748:3: ruleExprList
            {
             before(grammarAccess.getNoNewlineVarWTypesAccess().getArrsizeExprListParserRuleCall_0_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleExprList();

            state._fsp--;

             after(grammarAccess.getNoNewlineVarWTypesAccess().getArrsizeExprListParserRuleCall_0_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NoNewlineVarWTypes__ArrsizeAssignment_0_1_1"


    // $ANTLR start "rule__NoNewlineVarWTypes__MultipleAssignment_1_1"
    // InternalFortXTrans.g:13757:1: rule__NoNewlineVarWTypes__MultipleAssignment_1_1 : ( ruleNoNewlineVarWType ) ;
    public final void rule__NoNewlineVarWTypes__MultipleAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13761:1: ( ( ruleNoNewlineVarWType ) )
            // InternalFortXTrans.g:13762:2: ( ruleNoNewlineVarWType )
            {
            // InternalFortXTrans.g:13762:2: ( ruleNoNewlineVarWType )
            // InternalFortXTrans.g:13763:3: ruleNoNewlineVarWType
            {
             before(grammarAccess.getNoNewlineVarWTypesAccess().getMultipleNoNewlineVarWTypeParserRuleCall_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleNoNewlineVarWType();

            state._fsp--;

             after(grammarAccess.getNoNewlineVarWTypesAccess().getMultipleNoNewlineVarWTypeParserRuleCall_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NoNewlineVarWTypes__MultipleAssignment_1_1"


    // $ANTLR start "rule__NoNewlineVarWTypes__MultipleAssignment_1_2_1"
    // InternalFortXTrans.g:13772:1: rule__NoNewlineVarWTypes__MultipleAssignment_1_2_1 : ( ruleNoNewlineVarWType ) ;
    public final void rule__NoNewlineVarWTypes__MultipleAssignment_1_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13776:1: ( ( ruleNoNewlineVarWType ) )
            // InternalFortXTrans.g:13777:2: ( ruleNoNewlineVarWType )
            {
            // InternalFortXTrans.g:13777:2: ( ruleNoNewlineVarWType )
            // InternalFortXTrans.g:13778:3: ruleNoNewlineVarWType
            {
             before(grammarAccess.getNoNewlineVarWTypesAccess().getMultipleNoNewlineVarWTypeParserRuleCall_1_2_1_0()); 
            pushFollow(FOLLOW_2);
            ruleNoNewlineVarWType();

            state._fsp--;

             after(grammarAccess.getNoNewlineVarWTypesAccess().getMultipleNoNewlineVarWTypeParserRuleCall_1_2_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NoNewlineVarWTypes__MultipleAssignment_1_2_1"


    // $ANTLR start "rule__NoNewlineVarWType__BidAssignment_0"
    // InternalFortXTrans.g:13787:1: rule__NoNewlineVarWType__BidAssignment_0 : ( ruleQualifiedName ) ;
    public final void rule__NoNewlineVarWType__BidAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13791:1: ( ( ruleQualifiedName ) )
            // InternalFortXTrans.g:13792:2: ( ruleQualifiedName )
            {
            // InternalFortXTrans.g:13792:2: ( ruleQualifiedName )
            // InternalFortXTrans.g:13793:3: ruleQualifiedName
            {
             before(grammarAccess.getNoNewlineVarWTypeAccess().getBidQualifiedNameParserRuleCall_0_0()); 
            pushFollow(FOLLOW_2);
            ruleQualifiedName();

            state._fsp--;

             after(grammarAccess.getNoNewlineVarWTypeAccess().getBidQualifiedNameParserRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NoNewlineVarWType__BidAssignment_0"


    // $ANTLR start "rule__NoNewlineVarWType__IstypeAssignment_1"
    // InternalFortXTrans.g:13802:1: rule__NoNewlineVarWType__IstypeAssignment_1 : ( ruleIsType ) ;
    public final void rule__NoNewlineVarWType__IstypeAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13806:1: ( ( ruleIsType ) )
            // InternalFortXTrans.g:13807:2: ( ruleIsType )
            {
            // InternalFortXTrans.g:13807:2: ( ruleIsType )
            // InternalFortXTrans.g:13808:3: ruleIsType
            {
             before(grammarAccess.getNoNewlineVarWTypeAccess().getIstypeIsTypeParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleIsType();

            state._fsp--;

             after(grammarAccess.getNoNewlineVarWTypeAccess().getIstypeIsTypeParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NoNewlineVarWType__IstypeAssignment_1"


    // $ANTLR start "rule__LiteralList__LitAssignment_0"
    // InternalFortXTrans.g:13817:1: rule__LiteralList__LitAssignment_0 : ( ruleLiteral ) ;
    public final void rule__LiteralList__LitAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13821:1: ( ( ruleLiteral ) )
            // InternalFortXTrans.g:13822:2: ( ruleLiteral )
            {
            // InternalFortXTrans.g:13822:2: ( ruleLiteral )
            // InternalFortXTrans.g:13823:3: ruleLiteral
            {
             before(grammarAccess.getLiteralListAccess().getLitLiteralParserRuleCall_0_0()); 
            pushFollow(FOLLOW_2);
            ruleLiteral();

            state._fsp--;

             after(grammarAccess.getLiteralListAccess().getLitLiteralParserRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralList__LitAssignment_0"


    // $ANTLR start "rule__LiteralList__LitAssignment_1_1"
    // InternalFortXTrans.g:13832:1: rule__LiteralList__LitAssignment_1_1 : ( ruleLiteral ) ;
    public final void rule__LiteralList__LitAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13836:1: ( ( ruleLiteral ) )
            // InternalFortXTrans.g:13837:2: ( ruleLiteral )
            {
            // InternalFortXTrans.g:13837:2: ( ruleLiteral )
            // InternalFortXTrans.g:13838:3: ruleLiteral
            {
             before(grammarAccess.getLiteralListAccess().getLitLiteralParserRuleCall_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleLiteral();

            state._fsp--;

             after(grammarAccess.getLiteralListAccess().getLitLiteralParserRuleCall_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralList__LitAssignment_1_1"


    // $ANTLR start "rule__Literal__ValueAssignment_0_1"
    // InternalFortXTrans.g:13847:1: rule__Literal__ValueAssignment_0_1 : ( RULE_INT ) ;
    public final void rule__Literal__ValueAssignment_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13851:1: ( ( RULE_INT ) )
            // InternalFortXTrans.g:13852:2: ( RULE_INT )
            {
            // InternalFortXTrans.g:13852:2: ( RULE_INT )
            // InternalFortXTrans.g:13853:3: RULE_INT
            {
             before(grammarAccess.getLiteralAccess().getValueINTTerminalRuleCall_0_1_0()); 
            match(input,RULE_INT,FOLLOW_2); 
             after(grammarAccess.getLiteralAccess().getValueINTTerminalRuleCall_0_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Literal__ValueAssignment_0_1"


    // $ANTLR start "rule__Literal__ValueAssignment_1_1"
    // InternalFortXTrans.g:13862:1: rule__Literal__ValueAssignment_1_1 : ( RULE_FLOAT ) ;
    public final void rule__Literal__ValueAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13866:1: ( ( RULE_FLOAT ) )
            // InternalFortXTrans.g:13867:2: ( RULE_FLOAT )
            {
            // InternalFortXTrans.g:13867:2: ( RULE_FLOAT )
            // InternalFortXTrans.g:13868:3: RULE_FLOAT
            {
             before(grammarAccess.getLiteralAccess().getValueFLOATTerminalRuleCall_1_1_0()); 
            match(input,RULE_FLOAT,FOLLOW_2); 
             after(grammarAccess.getLiteralAccess().getValueFLOATTerminalRuleCall_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Literal__ValueAssignment_1_1"


    // $ANTLR start "rule__Literal__ValueAssignment_2_1"
    // InternalFortXTrans.g:13877:1: rule__Literal__ValueAssignment_2_1 : ( RULE_STRING ) ;
    public final void rule__Literal__ValueAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13881:1: ( ( RULE_STRING ) )
            // InternalFortXTrans.g:13882:2: ( RULE_STRING )
            {
            // InternalFortXTrans.g:13882:2: ( RULE_STRING )
            // InternalFortXTrans.g:13883:3: RULE_STRING
            {
             before(grammarAccess.getLiteralAccess().getValueSTRINGTerminalRuleCall_2_1_0()); 
            match(input,RULE_STRING,FOLLOW_2); 
             after(grammarAccess.getLiteralAccess().getValueSTRINGTerminalRuleCall_2_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Literal__ValueAssignment_2_1"


    // $ANTLR start "rule__Literal__ValueAssignment_3_1_0"
    // InternalFortXTrans.g:13892:1: rule__Literal__ValueAssignment_3_1_0 : ( ( 'true' ) ) ;
    public final void rule__Literal__ValueAssignment_3_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13896:1: ( ( ( 'true' ) ) )
            // InternalFortXTrans.g:13897:2: ( ( 'true' ) )
            {
            // InternalFortXTrans.g:13897:2: ( ( 'true' ) )
            // InternalFortXTrans.g:13898:3: ( 'true' )
            {
             before(grammarAccess.getLiteralAccess().getValueTrueKeyword_3_1_0_0()); 
            // InternalFortXTrans.g:13899:3: ( 'true' )
            // InternalFortXTrans.g:13900:4: 'true'
            {
             before(grammarAccess.getLiteralAccess().getValueTrueKeyword_3_1_0_0()); 
            match(input,71,FOLLOW_2); 
             after(grammarAccess.getLiteralAccess().getValueTrueKeyword_3_1_0_0()); 

            }

             after(grammarAccess.getLiteralAccess().getValueTrueKeyword_3_1_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Literal__ValueAssignment_3_1_0"


    // $ANTLR start "rule__Literal__ValueAssignment_3_1_1"
    // InternalFortXTrans.g:13911:1: rule__Literal__ValueAssignment_3_1_1 : ( ( 'false' ) ) ;
    public final void rule__Literal__ValueAssignment_3_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13915:1: ( ( ( 'false' ) ) )
            // InternalFortXTrans.g:13916:2: ( ( 'false' ) )
            {
            // InternalFortXTrans.g:13916:2: ( ( 'false' ) )
            // InternalFortXTrans.g:13917:3: ( 'false' )
            {
             before(grammarAccess.getLiteralAccess().getValueFalseKeyword_3_1_1_0()); 
            // InternalFortXTrans.g:13918:3: ( 'false' )
            // InternalFortXTrans.g:13919:4: 'false'
            {
             before(grammarAccess.getLiteralAccess().getValueFalseKeyword_3_1_1_0()); 
            match(input,72,FOLLOW_2); 
             after(grammarAccess.getLiteralAccess().getValueFalseKeyword_3_1_1_0()); 

            }

             after(grammarAccess.getLiteralAccess().getValueFalseKeyword_3_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Literal__ValueAssignment_3_1_1"


    // $ANTLR start "rule__LocalVarDecl__MutAssignment_0_0"
    // InternalFortXTrans.g:13930:1: rule__LocalVarDecl__MutAssignment_0_0 : ( ( 'var' ) ) ;
    public final void rule__LocalVarDecl__MutAssignment_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13934:1: ( ( ( 'var' ) ) )
            // InternalFortXTrans.g:13935:2: ( ( 'var' ) )
            {
            // InternalFortXTrans.g:13935:2: ( ( 'var' ) )
            // InternalFortXTrans.g:13936:3: ( 'var' )
            {
             before(grammarAccess.getLocalVarDeclAccess().getMutVarKeyword_0_0_0()); 
            // InternalFortXTrans.g:13937:3: ( 'var' )
            // InternalFortXTrans.g:13938:4: 'var'
            {
             before(grammarAccess.getLocalVarDeclAccess().getMutVarKeyword_0_0_0()); 
            match(input,70,FOLLOW_2); 
             after(grammarAccess.getLocalVarDeclAccess().getMutVarKeyword_0_0_0()); 

            }

             after(grammarAccess.getLocalVarDeclAccess().getMutVarKeyword_0_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__MutAssignment_0_0"


    // $ANTLR start "rule__LocalVarDecl__VarsAssignment_0_1"
    // InternalFortXTrans.g:13949:1: rule__LocalVarDecl__VarsAssignment_0_1 : ( ruleNoNewlineVarWTypes ) ;
    public final void rule__LocalVarDecl__VarsAssignment_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13953:1: ( ( ruleNoNewlineVarWTypes ) )
            // InternalFortXTrans.g:13954:2: ( ruleNoNewlineVarWTypes )
            {
            // InternalFortXTrans.g:13954:2: ( ruleNoNewlineVarWTypes )
            // InternalFortXTrans.g:13955:3: ruleNoNewlineVarWTypes
            {
             before(grammarAccess.getLocalVarDeclAccess().getVarsNoNewlineVarWTypesParserRuleCall_0_1_0()); 
            pushFollow(FOLLOW_2);
            ruleNoNewlineVarWTypes();

            state._fsp--;

             after(grammarAccess.getLocalVarDeclAccess().getVarsNoNewlineVarWTypesParserRuleCall_0_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__VarsAssignment_0_1"


    // $ANTLR start "rule__LocalVarDecl__InitAssignment_0_3"
    // InternalFortXTrans.g:13964:1: rule__LocalVarDecl__InitAssignment_0_3 : ( ruleExpr ) ;
    public final void rule__LocalVarDecl__InitAssignment_0_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13968:1: ( ( ruleExpr ) )
            // InternalFortXTrans.g:13969:2: ( ruleExpr )
            {
            // InternalFortXTrans.g:13969:2: ( ruleExpr )
            // InternalFortXTrans.g:13970:3: ruleExpr
            {
             before(grammarAccess.getLocalVarDeclAccess().getInitExprParserRuleCall_0_3_0()); 
            pushFollow(FOLLOW_2);
            ruleExpr();

            state._fsp--;

             after(grammarAccess.getLocalVarDeclAccess().getInitExprParserRuleCall_0_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__InitAssignment_0_3"


    // $ANTLR start "rule__LocalVarDecl__IdtupAssignment_1_0"
    // InternalFortXTrans.g:13979:1: rule__LocalVarDecl__IdtupAssignment_1_0 : ( ruleQualified ) ;
    public final void rule__LocalVarDecl__IdtupAssignment_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13983:1: ( ( ruleQualified ) )
            // InternalFortXTrans.g:13984:2: ( ruleQualified )
            {
            // InternalFortXTrans.g:13984:2: ( ruleQualified )
            // InternalFortXTrans.g:13985:3: ruleQualified
            {
             before(grammarAccess.getLocalVarDeclAccess().getIdtupQualifiedParserRuleCall_1_0_0()); 
            pushFollow(FOLLOW_2);
            ruleQualified();

            state._fsp--;

             after(grammarAccess.getLocalVarDeclAccess().getIdtupQualifiedParserRuleCall_1_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__IdtupAssignment_1_0"


    // $ANTLR start "rule__LocalVarDecl__InitAssignment_1_2"
    // InternalFortXTrans.g:13994:1: rule__LocalVarDecl__InitAssignment_1_2 : ( ruleExpr ) ;
    public final void rule__LocalVarDecl__InitAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:13998:1: ( ( ruleExpr ) )
            // InternalFortXTrans.g:13999:2: ( ruleExpr )
            {
            // InternalFortXTrans.g:13999:2: ( ruleExpr )
            // InternalFortXTrans.g:14000:3: ruleExpr
            {
             before(grammarAccess.getLocalVarDeclAccess().getInitExprParserRuleCall_1_2_0()); 
            pushFollow(FOLLOW_2);
            ruleExpr();

            state._fsp--;

             after(grammarAccess.getLocalVarDeclAccess().getInitExprParserRuleCall_1_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__InitAssignment_1_2"


    // $ANTLR start "rule__LocalVarDecl__MutAssignment_2_0"
    // InternalFortXTrans.g:14009:1: rule__LocalVarDecl__MutAssignment_2_0 : ( ( 'var' ) ) ;
    public final void rule__LocalVarDecl__MutAssignment_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:14013:1: ( ( ( 'var' ) ) )
            // InternalFortXTrans.g:14014:2: ( ( 'var' ) )
            {
            // InternalFortXTrans.g:14014:2: ( ( 'var' ) )
            // InternalFortXTrans.g:14015:3: ( 'var' )
            {
             before(grammarAccess.getLocalVarDeclAccess().getMutVarKeyword_2_0_0()); 
            // InternalFortXTrans.g:14016:3: ( 'var' )
            // InternalFortXTrans.g:14017:4: 'var'
            {
             before(grammarAccess.getLocalVarDeclAccess().getMutVarKeyword_2_0_0()); 
            match(input,70,FOLLOW_2); 
             after(grammarAccess.getLocalVarDeclAccess().getMutVarKeyword_2_0_0()); 

            }

             after(grammarAccess.getLocalVarDeclAccess().getMutVarKeyword_2_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__MutAssignment_2_0"


    // $ANTLR start "rule__LocalVarDecl__IdtupAssignment_2_1"
    // InternalFortXTrans.g:14028:1: rule__LocalVarDecl__IdtupAssignment_2_1 : ( ruleQualified ) ;
    public final void rule__LocalVarDecl__IdtupAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:14032:1: ( ( ruleQualified ) )
            // InternalFortXTrans.g:14033:2: ( ruleQualified )
            {
            // InternalFortXTrans.g:14033:2: ( ruleQualified )
            // InternalFortXTrans.g:14034:3: ruleQualified
            {
             before(grammarAccess.getLocalVarDeclAccess().getIdtupQualifiedParserRuleCall_2_1_0()); 
            pushFollow(FOLLOW_2);
            ruleQualified();

            state._fsp--;

             after(grammarAccess.getLocalVarDeclAccess().getIdtupQualifiedParserRuleCall_2_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__IdtupAssignment_2_1"


    // $ANTLR start "rule__LocalVarDecl__TypeAssignment_2_3"
    // InternalFortXTrans.g:14043:1: rule__LocalVarDecl__TypeAssignment_2_3 : ( ruleSimpleName ) ;
    public final void rule__LocalVarDecl__TypeAssignment_2_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:14047:1: ( ( ruleSimpleName ) )
            // InternalFortXTrans.g:14048:2: ( ruleSimpleName )
            {
            // InternalFortXTrans.g:14048:2: ( ruleSimpleName )
            // InternalFortXTrans.g:14049:3: ruleSimpleName
            {
             before(grammarAccess.getLocalVarDeclAccess().getTypeSimpleNameParserRuleCall_2_3_0()); 
            pushFollow(FOLLOW_2);
            ruleSimpleName();

            state._fsp--;

             after(grammarAccess.getLocalVarDeclAccess().getTypeSimpleNameParserRuleCall_2_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__TypeAssignment_2_3"


    // $ANTLR start "rule__LocalVarDecl__InitAssignment_2_6"
    // InternalFortXTrans.g:14058:1: rule__LocalVarDecl__InitAssignment_2_6 : ( ruleExpr ) ;
    public final void rule__LocalVarDecl__InitAssignment_2_6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:14062:1: ( ( ruleExpr ) )
            // InternalFortXTrans.g:14063:2: ( ruleExpr )
            {
            // InternalFortXTrans.g:14063:2: ( ruleExpr )
            // InternalFortXTrans.g:14064:3: ruleExpr
            {
             before(grammarAccess.getLocalVarDeclAccess().getInitExprParserRuleCall_2_6_0()); 
            pushFollow(FOLLOW_2);
            ruleExpr();

            state._fsp--;

             after(grammarAccess.getLocalVarDeclAccess().getInitExprParserRuleCall_2_6_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__InitAssignment_2_6"


    // $ANTLR start "rule__LocalVarDecl__MutAssignment_3_0"
    // InternalFortXTrans.g:14073:1: rule__LocalVarDecl__MutAssignment_3_0 : ( ( 'var' ) ) ;
    public final void rule__LocalVarDecl__MutAssignment_3_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:14077:1: ( ( ( 'var' ) ) )
            // InternalFortXTrans.g:14078:2: ( ( 'var' ) )
            {
            // InternalFortXTrans.g:14078:2: ( ( 'var' ) )
            // InternalFortXTrans.g:14079:3: ( 'var' )
            {
             before(grammarAccess.getLocalVarDeclAccess().getMutVarKeyword_3_0_0()); 
            // InternalFortXTrans.g:14080:3: ( 'var' )
            // InternalFortXTrans.g:14081:4: 'var'
            {
             before(grammarAccess.getLocalVarDeclAccess().getMutVarKeyword_3_0_0()); 
            match(input,70,FOLLOW_2); 
             after(grammarAccess.getLocalVarDeclAccess().getMutVarKeyword_3_0_0()); 

            }

             after(grammarAccess.getLocalVarDeclAccess().getMutVarKeyword_3_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__MutAssignment_3_0"


    // $ANTLR start "rule__LocalVarDecl__IdtupAssignment_3_1"
    // InternalFortXTrans.g:14092:1: rule__LocalVarDecl__IdtupAssignment_3_1 : ( ruleQualified ) ;
    public final void rule__LocalVarDecl__IdtupAssignment_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:14096:1: ( ( ruleQualified ) )
            // InternalFortXTrans.g:14097:2: ( ruleQualified )
            {
            // InternalFortXTrans.g:14097:2: ( ruleQualified )
            // InternalFortXTrans.g:14098:3: ruleQualified
            {
             before(grammarAccess.getLocalVarDeclAccess().getIdtupQualifiedParserRuleCall_3_1_0()); 
            pushFollow(FOLLOW_2);
            ruleQualified();

            state._fsp--;

             after(grammarAccess.getLocalVarDeclAccess().getIdtupQualifiedParserRuleCall_3_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__IdtupAssignment_3_1"


    // $ANTLR start "rule__LocalVarDecl__TuptypeAssignment_3_3"
    // InternalFortXTrans.g:14107:1: rule__LocalVarDecl__TuptypeAssignment_3_3 : ( ruleTupleType ) ;
    public final void rule__LocalVarDecl__TuptypeAssignment_3_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:14111:1: ( ( ruleTupleType ) )
            // InternalFortXTrans.g:14112:2: ( ruleTupleType )
            {
            // InternalFortXTrans.g:14112:2: ( ruleTupleType )
            // InternalFortXTrans.g:14113:3: ruleTupleType
            {
             before(grammarAccess.getLocalVarDeclAccess().getTuptypeTupleTypeParserRuleCall_3_3_0()); 
            pushFollow(FOLLOW_2);
            ruleTupleType();

            state._fsp--;

             after(grammarAccess.getLocalVarDeclAccess().getTuptypeTupleTypeParserRuleCall_3_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__TuptypeAssignment_3_3"


    // $ANTLR start "rule__LocalVarDecl__InitAssignment_3_5"
    // InternalFortXTrans.g:14122:1: rule__LocalVarDecl__InitAssignment_3_5 : ( ruleExpr ) ;
    public final void rule__LocalVarDecl__InitAssignment_3_5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalFortXTrans.g:14126:1: ( ( ruleExpr ) )
            // InternalFortXTrans.g:14127:2: ( ruleExpr )
            {
            // InternalFortXTrans.g:14127:2: ( ruleExpr )
            // InternalFortXTrans.g:14128:3: ruleExpr
            {
             before(grammarAccess.getLocalVarDeclAccess().getInitExprParserRuleCall_3_5_0()); 
            pushFollow(FOLLOW_2);
            ruleExpr();

            state._fsp--;

             after(grammarAccess.getLocalVarDeclAccess().getInitExprParserRuleCall_3_5_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LocalVarDecl__InitAssignment_3_5"

    // Delegated rules


    protected DFA1 dfa1 = new DFA1(this);
    protected DFA6 dfa6 = new DFA6(this);
    protected DFA14 dfa14 = new DFA14(this);
    protected DFA17 dfa17 = new DFA17(this);
    protected DFA19 dfa19 = new DFA19(this);
    protected DFA20 dfa20 = new DFA20(this);
    protected DFA21 dfa21 = new DFA21(this);
    protected DFA27 dfa27 = new DFA27(this);
    protected DFA55 dfa55 = new DFA55(this);
    protected DFA80 dfa80 = new DFA80(this);
    static final String dfa_1s = "\133\uffff";
    static final String dfa_2s = "\1\1\132\uffff";
    static final String dfa_3s = "\1\5\1\uffff\4\5\1\4\7\5\1\4\2\5\1\43\1\5\1\uffff\1\4\1\5\1\4\1\5\1\43\1\5\1\4\1\uffff\1\4\1\uffff\2\5\1\43\1\4\1\5\1\35\2\5\1\43\1\4\1\uffff\1\5\1\43\1\5\1\35\1\4\1\5\1\35\1\5\1\43\1\4\1\35\1\4\1\5\1\4\1\35\1\5\1\uffff\2\4\2\5\1\35\1\4\1\5\1\35\1\5\1\35\2\4\1\uffff\2\4\1\5\1\43\2\5\1\43\1\5\1\4\1\35\1\4\1\35\1\5\1\uffff\1\4\1\5\1\43\1\5\1\4\1\35";
    static final String dfa_4s = "\1\106\1\uffff\1\106\3\75\1\66\1\41\1\5\4\75\1\41\1\43\1\42\1\5\1\66\1\41\1\uffff\1\43\1\5\1\43\1\5\1\43\1\5\1\43\1\uffff\1\66\1\uffff\2\5\2\43\1\5\1\43\2\5\1\66\1\43\1\uffff\1\5\1\43\1\5\1\42\1\43\1\5\1\43\1\5\2\43\1\35\1\42\1\41\1\43\1\42\1\5\1\uffff\1\43\1\42\2\5\1\42\1\4\1\5\1\42\1\5\1\42\1\43\1\42\1\uffff\1\43\1\42\1\5\1\43\2\5\1\43\1\5\1\43\1\42\1\43\1\42\1\5\1\uffff\1\43\1\5\1\43\1\5\1\43\1\42";
    static final String dfa_5s = "\1\uffff\1\2\21\uffff\1\1\7\uffff\1\1\1\uffff\1\1\12\uffff\1\1\20\uffff\1\1\14\uffff\1\1\15\uffff\1\1\6\uffff";
    static final String dfa_6s = "\133\uffff}>";
    static final String[] dfa_7s = {
            "\1\6\24\uffff\1\1\6\uffff\1\10\30\uffff\1\2\1\3\1\4\1\5\10\uffff\1\7",
            "",
            "\1\6\33\uffff\1\10\30\uffff\1\11\1\12\1\13\1\14\10\uffff\1\7",
            "\1\15\64\uffff\1\11\1\12\1\13\1\14",
            "\1\15\64\uffff\1\11\1\12\1\13\1\14",
            "\1\15\64\uffff\1\11\1\12\1\13\1\14",
            "\1\21\1\16\30\uffff\1\20\2\uffff\1\17\1\uffff\1\22\22\uffff\1\23",
            "\1\24\33\uffff\1\25",
            "\1\26",
            "\1\15\64\uffff\1\11\1\12\1\13\1\14",
            "\1\15\64\uffff\1\11\1\12\1\13\1\14",
            "\1\15\64\uffff\1\11\1\12\1\13\1\14",
            "\1\15\64\uffff\1\11\1\12\1\13\1\14",
            "\1\16\33\uffff\1\17",
            "\1\30\31\uffff\1\27\4\uffff\1\31",
            "\1\32\34\uffff\1\33",
            "\1\34",
            "\1\22\22\uffff\1\23",
            "\1\35\33\uffff\1\36",
            "",
            "\1\40\31\uffff\1\37\4\uffff\1\22",
            "\1\41",
            "\1\43\30\uffff\1\45\1\42\3\uffff\1\46\1\44",
            "\1\47",
            "\1\31",
            "\1\50",
            "\1\52\31\uffff\1\51\4\uffff\1\53",
            "",
            "\1\21\31\uffff\1\20\4\uffff\1\22\22\uffff\1\23",
            "",
            "\1\54",
            "\1\55",
            "\1\22",
            "\1\57\30\uffff\1\60\1\56\3\uffff\1\61\1\44",
            "\1\62",
            "\1\45\4\uffff\1\46\1\44",
            "\1\63",
            "\1\64",
            "\1\65\22\uffff\1\23",
            "\1\30\31\uffff\1\27\4\uffff\1\31",
            "",
            "\1\66",
            "\1\53",
            "\1\67",
            "\1\70\4\uffff\1\71",
            "\1\40\31\uffff\1\37\4\uffff\1\22",
            "\1\72",
            "\1\60\4\uffff\1\61\1\44",
            "\1\73",
            "\1\65",
            "\1\43\30\uffff\1\45\1\42\3\uffff\1\46\1\44",
            "\1\74",
            "\1\76\30\uffff\1\45\1\75\3\uffff\1\46",
            "\1\77\33\uffff\1\36",
            "\1\52\31\uffff\1\51\4\uffff\1\53",
            "\1\100\4\uffff\1\33",
            "\1\101",
            "",
            "\1\57\30\uffff\1\60\1\56\3\uffff\1\61\1\44",
            "\1\103\30\uffff\1\60\1\102\3\uffff\1\61",
            "\1\104",
            "\1\105",
            "\1\45\4\uffff\1\46",
            "\1\106",
            "\1\107",
            "\1\70\4\uffff\1\71",
            "\1\110",
            "\1\60\4\uffff\1\61",
            "\1\112\31\uffff\1\111\4\uffff\1\113",
            "\1\76\30\uffff\1\45\1\75\3\uffff\1\46",
            "",
            "\1\115\31\uffff\1\114\4\uffff\1\116",
            "\1\103\30\uffff\1\60\1\102\3\uffff\1\61",
            "\1\117",
            "\1\113",
            "\1\120",
            "\1\121",
            "\1\116",
            "\1\122",
            "\1\112\31\uffff\1\111\4\uffff\1\113",
            "\1\123\4\uffff\1\124",
            "\1\115\31\uffff\1\114\4\uffff\1\116",
            "\1\100\4\uffff\1\33",
            "\1\125",
            "",
            "\1\127\31\uffff\1\126\4\uffff\1\130",
            "\1\131",
            "\1\130",
            "\1\132",
            "\1\127\31\uffff\1\126\4\uffff\1\130",
            "\1\123\4\uffff\1\124"
    };

    static final short[] dfa_1 = DFA.unpackEncodedString(dfa_1s);
    static final short[] dfa_2 = DFA.unpackEncodedString(dfa_2s);
    static final char[] dfa_3 = DFA.unpackEncodedStringToUnsignedChars(dfa_3s);
    static final char[] dfa_4 = DFA.unpackEncodedStringToUnsignedChars(dfa_4s);
    static final short[] dfa_5 = DFA.unpackEncodedString(dfa_5s);
    static final short[] dfa_6 = DFA.unpackEncodedString(dfa_6s);
    static final short[][] dfa_7 = unpackEncodedStringArray(dfa_7s);

    class DFA1 extends DFA {

        public DFA1(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 1;
            this.eot = dfa_1;
            this.eof = dfa_2;
            this.min = dfa_3;
            this.max = dfa_4;
            this.accept = dfa_5;
            this.special = dfa_6;
            this.transition = dfa_7;
        }
        public String getDescription() {
            return "()* loopback of 425:4: ( rule__Decls__DeclsAssignment )*";
        }
    }
    static final String dfa_8s = "\12\uffff";
    static final String dfa_9s = "\1\uffff\1\4\1\uffff\1\4\2\uffff\1\4\3\uffff";
    static final String dfa_10s = "\1\5\1\4\1\5\1\32\1\uffff\2\4\1\37\2\uffff";
    static final String dfa_11s = "\1\5\1\70\1\37\1\70\1\uffff\1\5\1\70\1\37\2\uffff";
    static final String dfa_12s = "\4\uffff\1\3\3\uffff\1\1\1\2";
    static final String dfa_13s = "\12\uffff}>";
    static final String[] dfa_14s = {
            "\1\1",
            "\1\3\25\uffff\1\4\3\uffff\1\2\1\uffff\1\4\26\uffff\2\4",
            "\1\6\31\uffff\1\5",
            "\1\4\3\uffff\1\7\1\uffff\1\4\26\uffff\2\4",
            "",
            "\1\10\1\11",
            "\1\3\25\uffff\1\4\3\uffff\1\2\1\uffff\1\4\26\uffff\2\4",
            "\1\5",
            "",
            ""
    };

    static final short[] dfa_8 = DFA.unpackEncodedString(dfa_8s);
    static final short[] dfa_9 = DFA.unpackEncodedString(dfa_9s);
    static final char[] dfa_10 = DFA.unpackEncodedStringToUnsignedChars(dfa_10s);
    static final char[] dfa_11 = DFA.unpackEncodedStringToUnsignedChars(dfa_11s);
    static final short[] dfa_12 = DFA.unpackEncodedString(dfa_12s);
    static final short[] dfa_13 = DFA.unpackEncodedString(dfa_13s);
    static final short[][] dfa_14 = unpackEncodedStringArray(dfa_14s);

    class DFA6 extends DFA {

        public DFA6(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 6;
            this.eot = dfa_8;
            this.eof = dfa_9;
            this.min = dfa_10;
            this.max = dfa_11;
            this.accept = dfa_12;
            this.special = dfa_13;
            this.transition = dfa_14;
        }
        public String getDescription() {
            return "1629:1: rule__ImportedNames__Alternatives : ( ( ( rule__ImportedNames__Group_0__0 ) ) | ( ( rule__ImportedNames__Group_1__0 ) ) | ( ( rule__ImportedNames__Group_2__0 ) ) );";
        }
    }
    static final String dfa_15s = "\24\uffff";
    static final String dfa_16s = "\4\uffff\1\5\4\uffff\1\5\3\uffff\2\5\5\uffff";
    static final String dfa_17s = "\1\5\1\uffff\1\5\1\uffff\1\4\1\uffff\1\4\1\uffff\3\5\1\15\2\5\3\4\1\5\1\15\1\4";
    static final String dfa_18s = "\1\110\1\uffff\1\110\1\uffff\1\110\1\uffff\1\77\1\uffff\1\5\1\110\1\5\1\77\3\110\2\77\1\5\2\77";
    static final String dfa_19s = "\1\uffff\1\1\1\uffff\1\3\1\uffff\1\4\1\uffff\1\2\14\uffff";
    static final String dfa_20s = "\24\uffff}>";
    static final String[] dfa_21s = {
            "\1\4\3\5\30\uffff\1\2\6\uffff\1\5\5\uffff\1\5\6\uffff\1\1\6\uffff\1\1\3\uffff\4\1\1\uffff\1\1\1\3\2\5",
            "",
            "\1\6\3\5\30\uffff\1\5\2\uffff\1\7\3\uffff\1\5\5\uffff\1\5\30\uffff\2\5",
            "",
            "\1\11\4\5\4\uffff\14\5\1\uffff\1\5\3\uffff\1\10\1\uffff\2\5\1\uffff\1\3\1\uffff\7\5\2\uffff\1\5\1\uffff\2\5\2\uffff\2\5\1\3\3\uffff\12\5\1\uffff\4\5",
            "",
            "\1\13\10\uffff\14\5\4\uffff\1\14\1\12\1\uffff\2\5\1\15\1\3\1\uffff\7\5\22\uffff\2\5",
            "",
            "\1\16",
            "\4\5\4\uffff\14\5\1\uffff\1\5\5\uffff\2\5\1\uffff\1\3\1\uffff\7\5\2\uffff\1\5\1\uffff\2\5\2\uffff\2\5\1\3\3\uffff\12\5\1\uffff\4\5",
            "\1\17",
            "\14\5\4\uffff\1\14\2\uffff\2\5\1\15\1\3\1\uffff\7\5\22\uffff\2\5",
            "\1\20\3\5\30\uffff\1\5\6\uffff\1\5\5\uffff\1\5\30\uffff\2\5",
            "\4\5\4\uffff\14\5\1\uffff\1\5\5\uffff\2\5\1\uffff\1\3\1\uffff\7\5\2\uffff\1\5\1\uffff\2\5\2\uffff\2\5\1\3\3\uffff\12\5\1\uffff\4\5",
            "\1\11\4\5\4\uffff\14\5\1\uffff\1\5\3\uffff\1\10\1\uffff\2\5\1\uffff\1\3\1\uffff\7\5\2\uffff\1\5\1\uffff\2\5\2\uffff\2\5\1\3\3\uffff\12\5\1\uffff\4\5",
            "\1\13\10\uffff\14\5\4\uffff\1\14\1\12\1\uffff\2\5\1\15\1\3\1\uffff\7\5\22\uffff\2\5",
            "\1\22\10\uffff\14\5\4\uffff\1\14\1\21\1\uffff\2\5\1\15\2\uffff\7\5\22\uffff\2\5",
            "\1\23",
            "\14\5\4\uffff\1\14\2\uffff\2\5\1\15\2\uffff\7\5\22\uffff\2\5",
            "\1\22\10\uffff\14\5\4\uffff\1\14\1\21\1\uffff\2\5\1\15\2\uffff\7\5\22\uffff\2\5"
    };

    static final short[] dfa_15 = DFA.unpackEncodedString(dfa_15s);
    static final short[] dfa_16 = DFA.unpackEncodedString(dfa_16s);
    static final char[] dfa_17 = DFA.unpackEncodedStringToUnsignedChars(dfa_17s);
    static final char[] dfa_18 = DFA.unpackEncodedStringToUnsignedChars(dfa_18s);
    static final short[] dfa_19 = DFA.unpackEncodedString(dfa_19s);
    static final short[] dfa_20 = DFA.unpackEncodedString(dfa_20s);
    static final short[][] dfa_21 = unpackEncodedStringArray(dfa_21s);

    class DFA14 extends DFA {

        public DFA14(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 14;
            this.eot = dfa_15;
            this.eof = dfa_16;
            this.min = dfa_17;
            this.max = dfa_18;
            this.accept = dfa_19;
            this.special = dfa_20;
            this.transition = dfa_21;
        }
        public String getDescription() {
            return "1815:1: rule__Stmnts__Alternatives : ( ( ( rule__Stmnts__FrontAssignment_0 ) ) | ( ( rule__Stmnts__Group_1__0 ) ) | ( ( rule__Stmnts__LocVarAssignment_2 ) ) | ( ( rule__Stmnts__ExpAssignment_3 ) ) );";
        }
    }
    static final String dfa_22s = "\34\uffff";
    static final String dfa_23s = "\1\5\1\uffff\1\5\2\uffff\5\15\1\4\1\uffff\1\5\1\uffff\1\5\1\15\1\5\1\uffff\5\15\2\4\1\5\1\15\1\4";
    static final String dfa_24s = "\1\110\1\uffff\1\110\2\uffff\6\77\1\uffff\1\110\1\uffff\1\5\1\77\1\110\1\uffff\7\77\1\5\2\77";
    static final String dfa_25s = "\1\uffff\1\1\1\uffff\1\2\1\3\6\uffff\1\4\1\uffff\1\1\3\uffff\1\1\12\uffff";
    static final String dfa_26s = "\34\uffff}>";
    static final String[] dfa_27s = {
            "\4\1\30\uffff\1\2\6\uffff\1\4\5\uffff\1\3\30\uffff\2\1",
            "",
            "\1\12\1\5\1\6\1\7\30\uffff\1\13\6\uffff\1\13\5\uffff\1\13\30\uffff\1\10\1\11",
            "",
            "",
            "\14\13\4\uffff\1\14\2\uffff\2\13\1\15\2\uffff\7\13\22\uffff\2\13",
            "\14\13\4\uffff\1\14\2\uffff\2\13\1\15\2\uffff\7\13\22\uffff\2\13",
            "\14\13\4\uffff\1\14\2\uffff\2\13\1\15\2\uffff\7\13\22\uffff\2\13",
            "\14\13\4\uffff\1\14\2\uffff\2\13\1\15\2\uffff\7\13\22\uffff\2\13",
            "\14\13\4\uffff\1\14\2\uffff\2\13\1\15\2\uffff\7\13\22\uffff\2\13",
            "\1\17\10\uffff\14\13\4\uffff\1\20\1\16\1\uffff\2\13\1\21\2\uffff\7\13\22\uffff\2\13",
            "",
            "\1\13\1\22\1\23\1\24\30\uffff\1\13\6\uffff\1\13\5\uffff\1\13\30\uffff\1\25\1\26",
            "",
            "\1\27",
            "\14\13\4\uffff\1\20\2\uffff\2\13\1\21\2\uffff\7\13\22\uffff\2\13",
            "\1\30\3\13\30\uffff\1\13\6\uffff\1\13\5\uffff\1\13\30\uffff\2\13",
            "",
            "\14\13\4\uffff\1\14\2\uffff\2\13\1\15\2\uffff\7\13\22\uffff\2\13",
            "\14\13\4\uffff\1\14\2\uffff\2\13\1\15\2\uffff\7\13\22\uffff\2\13",
            "\14\13\4\uffff\1\14\2\uffff\2\13\1\15\2\uffff\7\13\22\uffff\2\13",
            "\14\13\4\uffff\1\14\2\uffff\2\13\1\15\2\uffff\7\13\22\uffff\2\13",
            "\14\13\4\uffff\1\14\2\uffff\2\13\1\15\2\uffff\7\13\22\uffff\2\13",
            "\1\17\10\uffff\14\13\4\uffff\1\20\1\16\1\uffff\2\13\1\21\2\uffff\7\13\22\uffff\2\13",
            "\1\32\10\uffff\14\13\4\uffff\1\20\1\31\1\uffff\2\13\1\21\2\uffff\7\13\22\uffff\2\13",
            "\1\33",
            "\14\13\4\uffff\1\20\2\uffff\2\13\1\21\2\uffff\7\13\22\uffff\2\13",
            "\1\32\10\uffff\14\13\4\uffff\1\20\1\31\1\uffff\2\13\1\21\2\uffff\7\13\22\uffff\2\13"
    };

    static final short[] dfa_22 = DFA.unpackEncodedString(dfa_22s);
    static final char[] dfa_23 = DFA.unpackEncodedStringToUnsignedChars(dfa_23s);
    static final char[] dfa_24 = DFA.unpackEncodedStringToUnsignedChars(dfa_24s);
    static final short[] dfa_25 = DFA.unpackEncodedString(dfa_25s);
    static final short[] dfa_26 = DFA.unpackEncodedString(dfa_26s);
    static final short[][] dfa_27 = unpackEncodedStringArray(dfa_27s);

    class DFA17 extends DFA {

        public DFA17(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 17;
            this.eot = dfa_22;
            this.eof = dfa_22;
            this.min = dfa_23;
            this.max = dfa_24;
            this.accept = dfa_25;
            this.special = dfa_26;
            this.transition = dfa_27;
        }
        public String getDescription() {
            return "1938:1: rule__Primary__Alternatives : ( ( ( rule__Primary__Group_0__0 ) ) | ( ( rule__Primary__Group_1__0 ) ) | ( ( rule__Primary__Group_2__0 ) ) | ( ( rule__Primary__Group_3__0 ) ) );";
        }
    }
    static final String dfa_28s = "\23\uffff";
    static final String dfa_29s = "\1\5\1\4\2\5\1\62\1\5\2\4\2\uffff\1\5\1\35\1\5\1\62\2\4\1\5\1\35\1\4";
    static final String dfa_30s = "\1\41\1\62\2\5\1\62\1\110\1\42\1\62\2\uffff\1\5\1\42\1\5\1\62\2\42\1\5\2\42";
    static final String dfa_31s = "\10\uffff\1\2\1\1\11\uffff";
    static final String dfa_32s = "\23\uffff}>";
    static final String[] dfa_33s = {
            "\1\1\33\uffff\1\2",
            "\1\4\31\uffff\1\3\23\uffff\1\5",
            "\1\6",
            "\1\7",
            "\1\5",
            "\4\11\30\uffff\1\11\6\uffff\1\11\5\uffff\1\11\25\uffff\1\10\2\uffff\2\11",
            "\1\13\30\uffff\1\14\1\12\3\uffff\1\15",
            "\1\4\31\uffff\1\3\23\uffff\1\5",
            "",
            "",
            "\1\16",
            "\1\14\4\uffff\1\15",
            "\1\17",
            "\1\5",
            "\1\13\30\uffff\1\14\1\12\3\uffff\1\15",
            "\1\21\30\uffff\1\14\1\20\3\uffff\1\15",
            "\1\22",
            "\1\14\4\uffff\1\15",
            "\1\21\30\uffff\1\14\1\20\3\uffff\1\15"
    };

    static final short[] dfa_28 = DFA.unpackEncodedString(dfa_28s);
    static final char[] dfa_29 = DFA.unpackEncodedStringToUnsignedChars(dfa_29s);
    static final char[] dfa_30 = DFA.unpackEncodedStringToUnsignedChars(dfa_30s);
    static final short[] dfa_31 = DFA.unpackEncodedString(dfa_31s);
    static final short[] dfa_32 = DFA.unpackEncodedString(dfa_32s);
    static final short[][] dfa_33 = unpackEncodedStringArray(dfa_33s);

    class DFA19 extends DFA {

        public DFA19(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 19;
            this.eot = dfa_28;
            this.eof = dfa_28;
            this.min = dfa_29;
            this.max = dfa_30;
            this.accept = dfa_31;
            this.special = dfa_32;
            this.transition = dfa_33;
        }
        public String getDescription() {
            return "2010:1: rule__Binding__Alternatives : ( ( ( rule__Binding__Group_0__0 ) ) | ( ( rule__Binding__Group_1__0 ) ) );";
        }
    }
    static final String dfa_34s = "\22\uffff";
    static final String dfa_35s = "\1\uffff\1\3\3\uffff\1\3\2\uffff\1\3\3\uffff\1\3\5\uffff";
    static final String dfa_36s = "\1\5\1\4\1\5\1\uffff\1\5\1\15\1\uffff\2\4\1\5\1\15\1\5\1\15\2\4\1\5\1\15\1\4";
    static final String dfa_37s = "\1\110\1\105\1\110\1\uffff\1\5\1\105\1\uffff\1\77\1\105\1\5\1\77\1\110\1\105\2\77\1\5\2\77";
    static final String dfa_38s = "\3\uffff\1\2\2\uffff\1\1\13\uffff";
    static final String dfa_39s = "\22\uffff}>";
    static final String[] dfa_40s = {
            "\1\1\3\3\30\uffff\1\2\6\uffff\1\3\5\uffff\1\3\30\uffff\2\3",
            "\1\5\10\uffff\14\3\4\uffff\1\3\1\4\1\uffff\2\3\3\uffff\7\3\6\uffff\1\6\2\uffff\1\3\6\uffff\1\3\1\uffff\2\3\5\uffff\1\3",
            "\1\7\3\3\30\uffff\1\3\6\uffff\1\3\5\uffff\1\3\30\uffff\2\3",
            "",
            "\1\10",
            "\14\3\4\uffff\1\3\2\uffff\2\3\3\uffff\7\3\6\uffff\1\6\2\uffff\1\3\6\uffff\1\3\1\uffff\2\3\5\uffff\1\3",
            "",
            "\1\12\10\uffff\14\3\4\uffff\1\13\1\11\1\uffff\2\3\1\14\2\uffff\7\3\22\uffff\2\3",
            "\1\5\10\uffff\14\3\4\uffff\1\3\1\4\1\uffff\2\3\3\uffff\7\3\6\uffff\1\6\2\uffff\1\3\6\uffff\1\3\1\uffff\2\3\5\uffff\1\3",
            "\1\15",
            "\14\3\4\uffff\1\13\2\uffff\2\3\1\14\2\uffff\7\3\22\uffff\2\3",
            "\1\16\3\3\30\uffff\1\3\6\uffff\1\3\5\uffff\1\3\30\uffff\2\3",
            "\14\3\4\uffff\1\3\2\uffff\2\3\3\uffff\7\3\6\uffff\1\6\2\uffff\1\3\6\uffff\1\3\1\uffff\2\3\5\uffff\1\3",
            "\1\12\10\uffff\14\3\4\uffff\1\13\1\11\1\uffff\2\3\1\14\2\uffff\7\3\22\uffff\2\3",
            "\1\20\10\uffff\14\3\4\uffff\1\13\1\17\1\uffff\2\3\1\14\2\uffff\7\3\22\uffff\2\3",
            "\1\21",
            "\14\3\4\uffff\1\13\2\uffff\2\3\1\14\2\uffff\7\3\22\uffff\2\3",
            "\1\20\10\uffff\14\3\4\uffff\1\13\1\17\1\uffff\2\3\1\14\2\uffff\7\3\22\uffff\2\3"
    };

    static final short[] dfa_34 = DFA.unpackEncodedString(dfa_34s);
    static final short[] dfa_35 = DFA.unpackEncodedString(dfa_35s);
    static final char[] dfa_36 = DFA.unpackEncodedStringToUnsignedChars(dfa_36s);
    static final char[] dfa_37 = DFA.unpackEncodedStringToUnsignedChars(dfa_37s);
    static final short[] dfa_38 = DFA.unpackEncodedString(dfa_38s);
    static final short[] dfa_39 = DFA.unpackEncodedString(dfa_39s);
    static final short[][] dfa_40 = unpackEncodedStringArray(dfa_40s);

    class DFA20 extends DFA {

        public DFA20(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 20;
            this.eot = dfa_34;
            this.eof = dfa_35;
            this.min = dfa_36;
            this.max = dfa_37;
            this.accept = dfa_38;
            this.special = dfa_39;
            this.transition = dfa_40;
        }
        public String getDescription() {
            return "2031:1: rule__GenClause__Alternatives : ( ( ( rule__GenClause__BindingAssignment_0 ) ) | ( ( rule__GenClause__ExprAssignment_1 ) ) );";
        }
    }
    static final String dfa_41s = "\50\uffff";
    static final String dfa_42s = "\21\uffff\1\26\26\uffff";
    static final String dfa_43s = "\3\5\1\4\1\5\1\4\2\5\1\43\1\5\1\uffff\1\4\1\5\1\43\2\4\1\uffff\1\4\1\5\1\35\1\5\1\43\1\uffff\1\4\1\5\1\35\1\5\1\43\1\uffff\2\4\1\5\2\4\1\5\1\35\1\5\1\35\2\4";
    static final String dfa_44s = "\2\106\1\41\1\66\1\5\1\43\2\5\1\66\1\41\1\uffff\1\43\1\5\2\43\1\66\1\uffff\1\106\1\5\1\43\1\5\1\66\1\uffff\1\43\1\5\1\43\1\5\1\43\1\uffff\1\43\1\42\1\41\1\43\1\42\1\5\1\42\1\5\3\42";
    static final String dfa_45s = "\12\uffff\1\2\5\uffff\1\4\5\uffff\1\1\5\uffff\1\3\13\uffff";
    static final String dfa_46s = "\50\uffff}>";
    static final String[] dfa_47s = {
            "\1\3\33\uffff\1\4\30\uffff\1\1\13\uffff\1\2",
            "\1\3\33\uffff\1\4\44\uffff\1\2",
            "\1\5\33\uffff\1\6",
            "\1\10\31\uffff\1\7\4\uffff\1\11\22\uffff\1\12",
            "\1\13",
            "\1\15\31\uffff\1\14\4\uffff\1\11",
            "\1\16",
            "\1\17",
            "\1\11\22\uffff\1\12",
            "\1\21\33\uffff\1\20",
            "",
            "\1\23\30\uffff\1\24\1\22\3\uffff\1\25\1\26",
            "\1\27",
            "\1\11",
            "\1\31\30\uffff\1\32\1\30\3\uffff\1\33\1\26",
            "\1\10\31\uffff\1\7\4\uffff\1\11\22\uffff\1\12",
            "",
            "\1\34\1\26\24\uffff\1\26\6\uffff\1\26\11\uffff\1\26\12\uffff\1\26\3\uffff\4\26\10\uffff\1\26",
            "\1\35",
            "\1\24\4\uffff\1\25\1\26",
            "\1\36",
            "\1\37\22\uffff\1\12",
            "",
            "\1\15\31\uffff\1\14\4\uffff\1\11",
            "\1\40",
            "\1\32\4\uffff\1\33\1\26",
            "\1\41",
            "\1\37",
            "",
            "\1\23\30\uffff\1\24\1\22\3\uffff\1\25\1\26",
            "\1\43\30\uffff\1\24\1\42\3\uffff\1\25",
            "\1\34\33\uffff\1\20",
            "\1\31\30\uffff\1\32\1\30\3\uffff\1\33\1\26",
            "\1\45\30\uffff\1\32\1\44\3\uffff\1\33",
            "\1\46",
            "\1\24\4\uffff\1\25",
            "\1\47",
            "\1\32\4\uffff\1\33",
            "\1\43\30\uffff\1\24\1\42\3\uffff\1\25",
            "\1\45\30\uffff\1\32\1\44\3\uffff\1\33"
    };

    static final short[] dfa_41 = DFA.unpackEncodedString(dfa_41s);
    static final short[] dfa_42 = DFA.unpackEncodedString(dfa_42s);
    static final char[] dfa_43 = DFA.unpackEncodedStringToUnsignedChars(dfa_43s);
    static final char[] dfa_44 = DFA.unpackEncodedStringToUnsignedChars(dfa_44s);
    static final short[] dfa_45 = DFA.unpackEncodedString(dfa_45s);
    static final short[] dfa_46 = DFA.unpackEncodedString(dfa_46s);
    static final short[][] dfa_47 = unpackEncodedStringArray(dfa_47s);

    class DFA21 extends DFA {

        public DFA21(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 21;
            this.eot = dfa_41;
            this.eof = dfa_42;
            this.min = dfa_43;
            this.max = dfa_44;
            this.accept = dfa_45;
            this.special = dfa_46;
            this.transition = dfa_47;
        }
        public String getDescription() {
            return "2052:1: rule__FieldDecl__Alternatives : ( ( ( rule__FieldDecl__Group_0__0 ) ) | ( ( rule__FieldDecl__Group_1__0 ) ) | ( ( rule__FieldDecl__Group_2__0 ) ) | ( ( rule__FieldDecl__Group_3__0 ) ) );";
        }
    }
    static final String dfa_48s = "\47\uffff";
    static final String dfa_49s = "\2\5\1\4\1\5\1\4\2\5\1\43\1\5\1\uffff\1\4\1\5\1\43\3\4\1\uffff\1\5\1\35\1\5\1\43\1\uffff\1\4\1\5\1\35\1\5\1\43\1\uffff\2\4\1\5\2\4\1\5\1\35\1\5\1\35\2\4";
    static final String dfa_50s = "\1\106\1\41\1\66\1\5\1\43\2\5\1\66\1\41\1\uffff\1\43\1\5\2\43\2\66\1\uffff\1\5\1\43\1\5\1\66\1\uffff\1\43\1\5\1\43\1\5\1\43\1\uffff\1\43\1\42\1\41\1\43\1\42\1\5\1\42\1\5\3\42";
    static final String dfa_51s = "\11\uffff\1\2\6\uffff\1\4\4\uffff\1\1\5\uffff\1\3\13\uffff";
    static final String dfa_52s = "\47\uffff}>";
    static final String[] dfa_53s = {
            "\1\2\33\uffff\1\3\44\uffff\1\1",
            "\1\4\33\uffff\1\5",
            "\1\7\31\uffff\1\6\4\uffff\1\10\22\uffff\1\11",
            "\1\12",
            "\1\14\31\uffff\1\13\4\uffff\1\10",
            "\1\15",
            "\1\16",
            "\1\10\22\uffff\1\11",
            "\1\17\33\uffff\1\20",
            "",
            "\1\22\30\uffff\1\23\1\21\3\uffff\1\24\1\25",
            "\1\26",
            "\1\10",
            "\1\30\30\uffff\1\31\1\27\3\uffff\1\32\1\25",
            "\1\7\31\uffff\1\6\4\uffff\1\10\22\uffff\1\11",
            "\1\33\46\uffff\1\25\12\uffff\1\25",
            "",
            "\1\34",
            "\1\23\4\uffff\1\24\1\25",
            "\1\35",
            "\1\36\22\uffff\1\11",
            "",
            "\1\14\31\uffff\1\13\4\uffff\1\10",
            "\1\37",
            "\1\31\4\uffff\1\32\1\25",
            "\1\40",
            "\1\36",
            "",
            "\1\22\30\uffff\1\23\1\21\3\uffff\1\24\1\25",
            "\1\42\30\uffff\1\23\1\41\3\uffff\1\24",
            "\1\33\33\uffff\1\20",
            "\1\30\30\uffff\1\31\1\27\3\uffff\1\32\1\25",
            "\1\44\30\uffff\1\31\1\43\3\uffff\1\32",
            "\1\45",
            "\1\23\4\uffff\1\24",
            "\1\46",
            "\1\31\4\uffff\1\32",
            "\1\42\30\uffff\1\23\1\41\3\uffff\1\24",
            "\1\44\30\uffff\1\31\1\43\3\uffff\1\32"
    };

    static final short[] dfa_48 = DFA.unpackEncodedString(dfa_48s);
    static final char[] dfa_49 = DFA.unpackEncodedStringToUnsignedChars(dfa_49s);
    static final char[] dfa_50 = DFA.unpackEncodedStringToUnsignedChars(dfa_50s);
    static final short[] dfa_51 = DFA.unpackEncodedString(dfa_51s);
    static final short[] dfa_52 = DFA.unpackEncodedString(dfa_52s);
    static final short[][] dfa_53 = unpackEncodedStringArray(dfa_53s);

    class DFA27 extends DFA {

        public DFA27(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 27;
            this.eot = dfa_48;
            this.eof = dfa_48;
            this.min = dfa_49;
            this.max = dfa_50;
            this.accept = dfa_51;
            this.special = dfa_52;
            this.transition = dfa_53;
        }
        public String getDescription() {
            return "2202:1: rule__LocalVarDecl__Alternatives : ( ( ( rule__LocalVarDecl__Group_0__0 ) ) | ( ( rule__LocalVarDecl__Group_1__0 ) ) | ( ( rule__LocalVarDecl__Group_2__0 ) ) | ( ( rule__LocalVarDecl__Group_3__0 ) ) );";
        }
    }
    static final String dfa_54s = "\1\1\11\uffff";
    static final String dfa_55s = "\1\5\11\uffff";
    static final String dfa_56s = "\1\110\11\uffff";
    static final String dfa_57s = "\1\uffff\1\2\10\1";
    static final String[] dfa_58s = {
            "\4\1\4\uffff\4\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\uffff\1\1\2\uffff\1\1\2\uffff\3\1\1\uffff\16\1\1\uffff\3\1\4\uffff\5\1\1\uffff\4\1\1\uffff\4\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[] dfa_54 = DFA.unpackEncodedString(dfa_54s);
    static final char[] dfa_55 = DFA.unpackEncodedStringToUnsignedChars(dfa_55s);
    static final char[] dfa_56 = DFA.unpackEncodedStringToUnsignedChars(dfa_56s);
    static final short[] dfa_57 = DFA.unpackEncodedString(dfa_57s);
    static final short[][] dfa_58 = unpackEncodedStringArray(dfa_58s);

    class DFA55 extends DFA {

        public DFA55(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 55;
            this.eot = dfa_8;
            this.eof = dfa_54;
            this.min = dfa_55;
            this.max = dfa_56;
            this.accept = dfa_57;
            this.special = dfa_13;
            this.transition = dfa_58;
        }
        public String getDescription() {
            return "()* loopback of 5851:2: ( rule__Comparison__Group_1__0 )*";
        }
    }
    static final String dfa_59s = "\57\uffff";
    static final String dfa_60s = "\1\4\2\uffff\1\1\5\uffff\1\22\3\uffff\1\22\5\uffff\1\27\33\uffff";
    static final String dfa_61s = "\1\5\1\uffff\1\5\1\4\1\uffff\2\4\4\5\1\15\3\5\1\43\1\5\1\4\1\uffff\4\4\1\uffff\1\5\1\15\2\5\1\15\1\4\1\35\1\4\1\5\1\4\1\5\1\43\1\5\1\4\1\35\1\uffff\1\5\1\4\1\5\1\43\1\5\1\4\1\35";
    static final String dfa_62s = "\1\110\1\uffff\1\110\1\106\1\uffff\1\77\1\66\1\110\1\5\1\106\1\5\1\77\1\110\1\106\1\5\1\66\1\41\1\77\1\uffff\1\106\2\77\1\66\1\uffff\1\5\1\77\2\5\2\77\1\42\1\77\1\5\1\43\1\5\1\43\1\5\1\43\1\42\1\uffff\1\5\1\43\1\5\1\43\1\5\1\43\1\42";
    static final String dfa_63s = "\1\uffff\1\1\2\uffff\1\2\15\uffff\1\1\4\uffff\1\1\17\uffff\1\1\7\uffff";
    static final String dfa_64s = "\57\uffff}>";
    static final String[] dfa_65s = {
            "\1\3\3\1\21\uffff\1\4\6\uffff\1\2\6\uffff\1\1\5\uffff\1\1\13\uffff\4\4\10\uffff\1\4\2\1",
            "",
            "\1\5\3\1\30\uffff\1\1\6\uffff\1\1\5\uffff\1\1\30\uffff\2\1",
            "\1\11\1\6\7\uffff\14\1\1\uffff\1\1\3\uffff\1\10\1\uffff\1\1\1\7\1\uffff\1\4\1\uffff\7\1\12\uffff\1\4\3\uffff\6\1\6\uffff\1\1",
            "",
            "\1\13\10\uffff\14\1\4\uffff\1\14\1\12\1\uffff\2\1\1\15\1\4\1\uffff\7\1\22\uffff\2\1",
            "\1\17\1\1\30\uffff\1\16\2\uffff\1\1\1\uffff\1\20\22\uffff\1\1",
            "\1\21\3\1\30\uffff\1\1\1\22\5\uffff\1\1\5\uffff\1\1\30\uffff\2\1",
            "\1\23",
            "\1\22\7\uffff\14\22\1\uffff\1\22\5\uffff\2\22\1\uffff\1\4\1\uffff\7\22\12\uffff\1\4\3\uffff\6\22\6\uffff\1\22",
            "\1\24",
            "\14\22\4\uffff\1\14\2\uffff\2\22\1\15\1\4\1\uffff\7\22\22\uffff\2\22",
            "\1\25\3\22\30\uffff\1\22\6\uffff\1\22\5\uffff\1\22\30\uffff\2\22",
            "\1\22\7\uffff\14\22\1\uffff\1\22\5\uffff\2\22\1\uffff\1\4\1\uffff\7\22\12\uffff\1\4\3\uffff\6\22\6\uffff\1\22",
            "\1\26",
            "\1\20\22\uffff\1\22",
            "\1\27\33\uffff\1\27",
            "\1\31\10\uffff\14\27\4\uffff\1\27\1\30\1\uffff\3\27\1\32\1\uffff\7\27\22\uffff\2\27",
            "",
            "\1\11\1\27\7\uffff\14\27\1\uffff\1\27\3\uffff\1\10\1\uffff\2\27\1\uffff\1\4\1\uffff\7\27\12\uffff\1\4\3\uffff\6\27\6\uffff\1\27",
            "\1\13\10\uffff\14\27\4\uffff\1\14\1\12\1\uffff\2\27\1\15\1\4\1\uffff\7\27\22\uffff\2\27",
            "\1\34\10\uffff\14\27\4\uffff\1\14\1\33\1\uffff\2\27\1\15\2\uffff\7\27\22\uffff\2\27",
            "\1\17\31\uffff\1\16\4\uffff\1\20\22\uffff\1\27",
            "",
            "\1\35",
            "\14\27\4\uffff\1\27\2\uffff\3\27\1\32\1\uffff\7\27\22\uffff\2\27",
            "\1\36",
            "\1\37",
            "\14\27\4\uffff\1\14\2\uffff\2\27\1\15\2\uffff\7\27\22\uffff\2\27",
            "\1\31\10\uffff\14\27\4\uffff\1\27\1\30\1\uffff\3\27\1\32\1\uffff\7\27\22\uffff\2\27",
            "\1\40\4\uffff\1\4",
            "\1\34\10\uffff\14\27\4\uffff\1\14\1\33\1\uffff\2\27\1\15\2\uffff\7\27\22\uffff\2\27",
            "\1\41",
            "\1\43\31\uffff\1\42\4\uffff\1\44",
            "\1\45",
            "\1\44",
            "\1\46",
            "\1\43\31\uffff\1\42\4\uffff\1\44",
            "\1\50\4\uffff\1\47",
            "",
            "\1\51",
            "\1\53\31\uffff\1\52\4\uffff\1\54",
            "\1\55",
            "\1\54",
            "\1\56",
            "\1\53\31\uffff\1\52\4\uffff\1\54",
            "\1\50\4\uffff\1\47"
    };

    static final short[] dfa_59 = DFA.unpackEncodedString(dfa_59s);
    static final short[] dfa_60 = DFA.unpackEncodedString(dfa_60s);
    static final char[] dfa_61 = DFA.unpackEncodedStringToUnsignedChars(dfa_61s);
    static final char[] dfa_62 = DFA.unpackEncodedStringToUnsignedChars(dfa_62s);
    static final short[] dfa_63 = DFA.unpackEncodedString(dfa_63s);
    static final short[] dfa_64 = DFA.unpackEncodedString(dfa_64s);
    static final short[][] dfa_65 = unpackEncodedStringArray(dfa_65s);

    class DFA80 extends DFA {

        public DFA80(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 80;
            this.eot = dfa_59;
            this.eof = dfa_60;
            this.min = dfa_61;
            this.max = dfa_62;
            this.accept = dfa_63;
            this.special = dfa_64;
            this.transition = dfa_65;
        }
        public String getDescription() {
            return "9469:2: ( rule__FieldDecl__InitAssignment_1_3 )?";
        }
    }
 

    public static final BitSet FOLLOW_1 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_2 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_3 = new BitSet(new long[]{0x3C00000200000022L,0x0000000000000040L});
    public static final BitSet FOLLOW_4 = new BitSet(new long[]{0x3C00000000000002L});
    public static final BitSet FOLLOW_5 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_6 = new BitSet(new long[]{0x0180000000000000L});
    public static final BitSet FOLLOW_7 = new BitSet(new long[]{0x0080000000000002L});
    public static final BitSet FOLLOW_8 = new BitSet(new long[]{0x3C00000204000020L,0x0000000000000040L});
    public static final BitSet FOLLOW_9 = new BitSet(new long[]{0x0180000000000002L});
    public static final BitSet FOLLOW_10 = new BitSet(new long[]{0x0080000004000000L});
    public static final BitSet FOLLOW_11 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_12 = new BitSet(new long[]{0x0000000080000020L});
    public static final BitSet FOLLOW_13 = new BitSet(new long[]{0x0000000080000000L});
    public static final BitSet FOLLOW_14 = new BitSet(new long[]{0x0000000030000000L});
    public static final BitSet FOLLOW_15 = new BitSet(new long[]{0x0000000020000002L});
    public static final BitSet FOLLOW_16 = new BitSet(new long[]{0x0000000040000000L});
    public static final BitSet FOLLOW_17 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_18 = new BitSet(new long[]{0x0000000010000000L});
    public static final BitSet FOLLOW_19 = new BitSet(new long[]{0x0200000000000000L});
    public static final BitSet FOLLOW_20 = new BitSet(new long[]{0x0000000100000000L});
    public static final BitSet FOLLOW_21 = new BitSet(new long[]{0x0000000040000010L});
    public static final BitSet FOLLOW_22 = new BitSet(new long[]{0x0000000040000002L});
    public static final BitSet FOLLOW_23 = new BitSet(new long[]{0x0000000400000000L});
    public static final BitSet FOLLOW_24 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_25 = new BitSet(new long[]{0x0000000400000020L});
    public static final BitSet FOLLOW_26 = new BitSet(new long[]{0x0000000800000000L});
    public static final BitSet FOLLOW_27 = new BitSet(new long[]{0x0000000200000000L});
    public static final BitSet FOLLOW_28 = new BitSet(new long[]{0x0000000420000000L});
    public static final BitSet FOLLOW_29 = new BitSet(new long[]{0x3C00000000000020L});
    public static final BitSet FOLLOW_30 = new BitSet(new long[]{0x0000000200000020L});
    public static final BitSet FOLLOW_31 = new BitSet(new long[]{0x0040000800000000L});
    public static final BitSet FOLLOW_32 = new BitSet(new long[]{0x14204102000001E0L,0x00000000000001EFL});
    public static final BitSet FOLLOW_33 = new BitSet(new long[]{0x0000001000000000L});
    public static final BitSet FOLLOW_34 = new BitSet(new long[]{0x1020000000000000L,0x000000000000002FL});
    public static final BitSet FOLLOW_35 = new BitSet(new long[]{0x0000000100000002L});
    public static final BitSet FOLLOW_36 = new BitSet(new long[]{0x0000002000000000L});
    public static final BitSet FOLLOW_37 = new BitSet(new long[]{0x0000002000000002L});
    public static final BitSet FOLLOW_38 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_39 = new BitSet(new long[]{0x0000004000000002L});
    public static final BitSet FOLLOW_40 = new BitSet(new long[]{0x000000000001E000L});
    public static final BitSet FOLLOW_41 = new BitSet(new long[]{0x000000000001E002L});
    public static final BitSet FOLLOW_42 = new BitSet(new long[]{0x0000000001FE0000L});
    public static final BitSet FOLLOW_43 = new BitSet(new long[]{0x0000000001FE0002L});
    public static final BitSet FOLLOW_44 = new BitSet(new long[]{0x0000008000000000L});
    public static final BitSet FOLLOW_45 = new BitSet(new long[]{0x0000008000000002L});
    public static final BitSet FOLLOW_46 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_47 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_48 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_49 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_50 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_51 = new BitSet(new long[]{0x0000040000000002L});
    public static final BitSet FOLLOW_52 = new BitSet(new long[]{0x4000000000000000L});
    public static final BitSet FOLLOW_53 = new BitSet(new long[]{0x4000000000000002L});
    public static final BitSet FOLLOW_54 = new BitSet(new long[]{0x8000080200000000L});
    public static final BitSet FOLLOW_55 = new BitSet(new long[]{0x8000000000000000L});
    public static final BitSet FOLLOW_56 = new BitSet(new long[]{0x14204106000001E0L,0x00000000000001EFL});
    public static final BitSet FOLLOW_57 = new BitSet(new long[]{0x0000080000000000L});
    public static final BitSet FOLLOW_58 = new BitSet(new long[]{0x0000100000000000L});
    public static final BitSet FOLLOW_59 = new BitSet(new long[]{0x14205102000001E0L,0x00000000000001EFL});
    public static final BitSet FOLLOW_60 = new BitSet(new long[]{0x0000200000000000L});
    public static final BitSet FOLLOW_61 = new BitSet(new long[]{0x0000400000000000L});
    public static final BitSet FOLLOW_62 = new BitSet(new long[]{0x1020000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_63 = new BitSet(new long[]{0x0400000200000020L});
    public static final BitSet FOLLOW_64 = new BitSet(new long[]{0x0000000004000000L});
    public static final BitSet FOLLOW_65 = new BitSet(new long[]{0x0000800000000000L});
    public static final BitSet FOLLOW_66 = new BitSet(new long[]{0x0003000004000000L});
    public static final BitSet FOLLOW_67 = new BitSet(new long[]{0x0001000000000000L});
    public static final BitSet FOLLOW_68 = new BitSet(new long[]{0x0001000000000002L});
    public static final BitSet FOLLOW_69 = new BitSet(new long[]{0x0004000000000000L});
    public static final BitSet FOLLOW_70 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000010L});
    public static final BitSet FOLLOW_71 = new BitSet(new long[]{0x0008000000000000L});
    public static final BitSet FOLLOW_72 = new BitSet(new long[]{0x14204102000001E2L,0x00000000000001EFL});
    public static final BitSet FOLLOW_73 = new BitSet(new long[]{0x0010000004000000L});
    public static final BitSet FOLLOW_74 = new BitSet(new long[]{0x0010000000000002L});
    public static final BitSet FOLLOW_75 = new BitSet(new long[]{0x0400000200000020L,0x0000000000000040L});
    public static final BitSet FOLLOW_76 = new BitSet(new long[]{0x0040000000000000L});
    public static final BitSet FOLLOW_77 = new BitSet(new long[]{0x3C00000200000020L,0x0000000000000040L});
    public static final BitSet FOLLOW_78 = new BitSet(new long[]{0x00000000000001C0L,0x0000000000000180L});
    public static final BitSet FOLLOW_79 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_80 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_81 = new BitSet(new long[]{0x0000000000000100L});

}